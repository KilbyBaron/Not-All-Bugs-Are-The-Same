Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Cloners),Outward issue link (Container),Outward issue link (Duplicate),Outward issue link (Incorporates),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Outward issue link (Required),Outward issue link (Supercedes),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Existing GitBox Approval),Custom field (External issue URL),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
IllegalStateException: The service has been unregistered,FELIX-4260,12671533,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,cziegeler,laeubi,laeubi,01/Oct/13 08:43,06/Oct/18 14:56,13/Mar/19 22:55,23/Sep/18 15:28,,,,,scr-2.1.10,,Declarative Services (SCR),,,0,,,,,,"Currently I get this as an framework Error:

java.lang.IllegalStateException: The service has been unregistered
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:209)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:668)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:644)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerComponentService(AbstractComponentManager.java:688)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:1481)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:550)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceAdded(DependencyManager.java:333)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:159)
	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:104)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:861)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:819)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:771)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.register(ServiceRegistrationImpl.java:130)
	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.registerService(ServiceRegistry.java:214)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.registerService(BundleContextImpl.java:433)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:660)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerService(AbstractComponentManager.java:644)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.registerComponentService(AbstractComponentManager.java:688)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:1481)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:550)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.enable(AbstractComponentManager.java:261)
	at org.apache.felix.scr.impl.config.ImmediateComponentHolder.enableComponents(ImmediateComponentHolder.java:328)
	at org.apache.felix.scr.impl.BundleComponentActivator.initialize(BundleComponentActivator.java:158)
	at org.apache.felix.scr.impl.BundleComponentActivator.<init>(BundleComponentActivator.java:113)
	at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:261)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:179)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:847)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEventPrivileged(Framework.java:1522)
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent(Framework.java:1458)
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent(Framework.java:1453)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:391)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.resume(AbstractBundle.java:389)
	at org.eclipse.osgi.framework.internal.core.Framework.resumeBundle(Framework.java:1130)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:559)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:544)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:457)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:243)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.dispatchEvent(StartLevelManager.java:438)
	at org.eclipse.osgi.framework.internal.core.StartLevelManager.dispatchEvent(StartLevelManager.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

This currently prevents the starting of one of my components. It seems that there is some kind of concurrency. If the ServiceReference is handled in a concurrent way, the IllegalStateException must be caught because it is possible that the service was already unregistered automatically in the event of an refresh/stop of the bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-10-01 15:49:39.768,,,no_permission,,,,,,,,,,,,351243,,,Sun Sep 23 15:28:32 UTC 2018,,,,,,0|i1ok7b:,351535,,,,,,,,01/Oct/13 15:49;djencks;Please try with trunk. I fixed a lot of problems in this area.,05/Aug/15 16:30;bosschaert;Is this still an issue? If so please provide the versions of the framework and SCR used...,"05/Aug/15 19:03;laeubi;At the time this issue was present I used Equinox 3.7 and Felic SCR 1.6
I then switched to the trunk version as suggested and didn't see the problem any longer as far as I remember. I still see in the 1.8 line where operations for DS components are executed outside the ""Component-Thread"" e.g. if services are registered inside seperate threads or if CM updates take place. I'm just not sure if this is an issue or is intentional.","20/Sep/18 14:59;bdaniel;This is still a problem in the current trunk (or, at least, a very similar problem.) 

I see this when a component is activated and deactivated simultaneously. AbstractComponentManager activateInternal and deactivateInternal only obtain the read lock of the ReentrantReadWriteLock so they're able to run simultaneously. activateInternal runs to the finally block currently on line 744. Then the deactivateInternal thread gets control which causes the service registration to be unregistered. The activate thread gets control again and gets an IllegalStateException in serviceRegistration.getReference(). 

 
java.lang.IllegalStateException: The service has been unregistered
    at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.getReferenceImpl(ServiceRegistrationImpl.java:285)
    at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.getReference(ServiceRegistrationImpl.java:274)
    at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:759)","20/Sep/18 16:46;cziegeler;Thanks for reporting, let's try to get this fixed in the next release. Is it possible to provide a reproducible test case for this?","20/Sep/18 17:12;laeubi;This is hard to tell witout knowing the details of the implementation but you can force such an error in the following way:
 * Register a service in the activator
 * in the stop method, start a thread that sleeps for a second and the unregisters the service reference
 * start the bundle and then stop it
 * You will get the exception from the framework after the 1 second delay because the service was unregistered already

With this in mind, one has to check the places mentioned in the stack traces if there is a chance that these are called concurrently in respect to the OSGi thread, e.g this can happen if config changes occurs from config admin and so on. Another thing to check is, if the SCR service might shares service references and they got freede more than once.

Sad enough, there is no way to tell if the service was previously unregistered. My aproach would be to have a method for unregister a service reference and has some kind of
{code:java}
try {
  sr.unregister()
} catch(IllegalStateException e) {
 LOG.warn(""Attempted to unregister ServiceRegistration {} from thread {} but it was already unregistered from bundle {] state {}), sr, Thread.currentThread(), sr.
getBundle().getSymbolicName(), sr.
getBundle().getState()}{code}
That way the unregistration will proceed and the warning would contain better information to debug the problem further (if there is any)","23/Sep/18 15:28;cziegeler;I've added additional code to catch the illegal state exception in various places
That should fix the problem.

Rev 1841758",,,,,,,,,,,,,,,,,,,,,,,,,
Felix Framework hangs on shutdown,FELIX-5652,13081552,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,karlpauls,puce,puce,21/Jun/17 20:44,29/Jun/17 19:00,13/Mar/19 22:56,23/Jun/17 13:57,framework-5.6.2,framework-5.6.4,,,framework-5.6.6,,Framework,,,0,,,,,,"When shutting down the Felix Framework the process hangs for about 1 minute or so.

When running with the debugger, NetBeans shows 8 FelixResolver threads still running (my machine has 8 cores, the number might be related).

The issue did not occur with v4.6.0",,,,,,,,,,,,,,,,,,,,,21/Jun/17 20:51;puce;felix-5652-v4.6.0.zip;https://issues.apache.org/jira/secure/attachment/12873942/felix-5652-v4.6.0.zip,21/Jun/17 20:51;puce;felix-5652-v5.6.2.zip;https://issues.apache.org/jira/secure/attachment/12873941/felix-5652-v5.6.2.zip,,,,2.0,,,,,,,,,,,,,,,,,,,2017-06-21 21:17:12.019,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Jun 29 19:00:26 UTC 2017,,,,,,0|i3gkgv:,9223372036854775807,,,,,,,,"21/Jun/17 20:57;puce;2 ""empty"" Drombler FX applications.

v5.6.2 uses org.apache.felix.framework-5.6.2.jar showing the issue

v4.6.0 uses org.apache.felix.framework-4.6.0.jar, which doesn't suffer from this issue.

run with: java -jar bin/my-application.jar

The application just shows a progress indicator as the applications are ""empty"" (no OSGi bundles in the ""bundle"" directory).

You can see the issue on the console when closing the JavaFX window.

Tested with: java v1.8.0_131","21/Jun/17 20:59;puce;You can find the source code, which stops the framework here: https://github.com/Drombler/drombler-acp/blob/develop/drombler-acp-startup-main/src/main/java/org/drombler/acp/startup/main/impl/osgi/OSGiStarter.java#L99",21/Jun/17 21:01;puce;This issue affects the following Drombler FX issue: https://github.com/Drombler/drombler-fx/issues/185,21/Jun/17 21:09;puce;framework-5.6.4 suffers from this issue as well,"21/Jun/17 21:17;karlpauls;Yeah, I guess the problem is that you start the framework with a none daemon thread. That makes the threads in the resolver threadpool be none daemons and hence, keep the jvm running until they timeout. I guess we should actually make sure we closed the resolver threadpool when we are stopped. ","23/Jun/17 13:57;karlpauls;I made it so that the resolver threads are daemons now which should solve your problem. I commited this in r1799675. 

[~puce], can you please verify that the current trunk works as expected for you and close this issue if it does (otherwise please reopen).","28/Jun/17 21:03;puce;[~karlpauls] : Thanks a lot!

The Apache Felix build failed however with:

{quote}Failed to execute goal on project org.apache.felix.converter: Could not resolve dependencies for project org.apache.felix:org.apache.felix.converter:jar:0.1.0-SNAPSHOT: Could not find artifact org.osgi:org.osgi.util.converter:jar:1.0.0-SNAPSHOT in nexus {quote}

Is there an additional Maven Repo I need to configure in Nexus?

Or can I get the latest build from a Maven Repo?","28/Jun/17 21:50;karlpauls;I don't think so, what are you trying to build? 

However, I just pushed a SNAPSHOT - hence, just use 5.7.0-SNAPSHOT and you should get the latest version (with the fix).","29/Jun/17 18:34;puce;[~karlpauls]: I tried to to build https://github.com/apache/felix (root: mvn clean install)

In the Apache Snapshot Repo I found now a recent binary version: https://repository.apache.org/content/groups/snapshots/org/apache/felix/org.apache.felix.framework/5.7.0-SNAPSHOT/

The fix seems to have solved the issue. Thanks!

From an API point of view you still might want to consider to also stop all threads when calling Framework.waitForStop(0)

From the Javadoc:
{quote}Wait until this Framework has completely stopped. [...]{quote}","29/Jun/17 19:00;puce;Calling 

{code:java}
           Framework.start();
           Framework.waitForStop(0);
{code}

on a daemon thread, however, doesn't solve the issue (without your fix).",,,,,,,,,,,,,,,,,,,,,,
Bundle start/stop buttons are missing,FELIX-5620,13066240,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,cziegeler,cziegeler,cziegeler,24/Apr/17 06:04,24/Apr/17 06:07,13/Mar/19 22:56,24/Apr/17 06:07,webconsole-4.3.0,,,,webconsole-4.3.2,,Web Console,,,0,,,,,,The bundle list does not show the start/stop buttons for a bundle anymore,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Apr 24 06:07:47 UTC 2017,,,,,,0|i3dzpr:,9223372036854775807,,,,,,,,"24/Apr/17 06:07;cziegeler;Fixed in rev 1792427
The json serialization was return String type values for the state instead of integers/numbers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SCR does not reactivate a failed component after a configuration update,FELIX-5248,12964704,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,djencks,timothyjward,timothyjward,03/May/16 16:22,16/Mar/17 20:06,13/Mar/19 22:56,16/Mar/17 20:06,scr-2.0.4,,,,scr-2.0.6,,Declarative Services (SCR),,,0,,,,,,"A configurable SCR component may fail to activate by throwing an exception if the factory configuration contains bad values. If the factory configuration for that component is then updated SCR should attempt to recreate and activate the component. Instead the component sits in the ""satisfied"" state forever, and updates to the factory configuration are ignored.

This makes it impossible to ""fix"" a mistaken configuration without deleting and recreating it.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-05-03 17:06:43.834,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Mar 16 20:06:35 UTC 2017,,,,,,0|i2x407:,9223372036854775807,,,,,,,,"03/May/16 17:06;djencks;Can you provide more information about the scenario you are talking about?  If not a test case, at least some indication of how many components, any references, and the immediate setting.  Also more information about the sequence of events you'd like to have happen.

For instance, providing the factory configuration to a component that provides a service is going to register the service.  If the component isn't immediate, then we'll try to create the service when someone asks for it.  If the configuration changes, someone has to ask for it again in order for it to get created.  If you are using the lookup strategy or the event strategy with ServiceReference, you can try again whenever you want.","03/May/16 20:12;timothyjward;Hi David,

The component is immediate and has a configuration policy of required. It has one static reference to a service which is satisfied, an activate method which takes a bundle context, a type safe configuration object, and a map of the raw configuration. It also has a deactivate method which takes no arguments.

The failure flow is as follows:

1. The component's bundle is started and the referenced service is available. The configuration requirement correctly prevents activation of any component instances.
2. A factory configuration is created for the correct factory pid with some config properties. Occasionally one of the config properties is malformed, which the component instance detects, throwing an exception from the activate method. This correctly prevents that component instance from starting when the config is bad.
3. The factory configuration is then updated by the user to correct the malformed config property. At this point I do not get the behaviour I expect. I expect a component instance to be activated with the updated configuration. Instead the component sits there, ignoring the configuration update.

If at this point I disable and enable the component then everything works fine, but I don't want to do that as it will disable all of the other instances created by other factory configurations. It also works if I delete the old config and create a new config, but I don't want to do that either because it's an extra set of steps for the user.

I don't think that what I'm asking for is illogical, although I can't find a line in the specification which says that it must work. 

I hope this helps. I've tried looking through the felix SCR unit tests, but at the moment I'm not entirely sure how I would write a failing test for this behaviour.

Tim","03/May/16 20:54;djencks;I think this can be fixed.  I suggest we get Guillaume's refactoring in first.  A test would be an integration test, which is currently mixed into the same test folder as unit tests but run separately.  It should be fairly straightforward to write a component that throws an exception in activate depending on a config property, and to change the config back and forth a few times to see what happens.

It's less clear to me how to deal with the situation where other components have a reference to the service with the intermittent problem.  Maybe we could track ""failed lookup"" links and clear them on any other service change (certainly unregistration).","13/Jun/16 17:21;djencks;I added a test that while simpler than your situation I thought would include the important parts, and currently it appears to pass.  Could you see if your original case now works properly as well, and if not see if you can figure out what is missing in my test?","16/Mar/17 20:06;cziegeler;As there has been no response for quiet some while and as David's test passes, I consider this now as fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle in cache doesn't pass security check anymore.,FELIX-3893,12631894,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,karlpauls,reto,reto,12/Feb/13 07:21,06/Aug/14 20:11,13/Mar/19 22:56,12/Feb/13 20:21,framework.security-2.0.1,,,,framework.security-2.2.0,framework-4.2.1,Framework Security,,,0,,,,,,"After updating the felix component in Clerezza clerezza starts normally the first time. On subsequent starts it shows Errors.

The first one being:


ERROR: Bundle in cache doesn't pass security check anymore.
(java.lang.ArrayIndexOutOfBoundsException: -1)
java.lang.ArrayIndexOutOfBoundsException: -1
	at org.apache.felix.framework.security.verifier.BundleDNParser.getRootChains(BundleDNParser.java:470)
	at org.apache.felix.framework.security.verifier.BundleDNParser._getDNChains(BundleDNParser.java:246)
	at org.apache.felix.framework.security.verifier.BundleDNParser.checkDNChains(BundleDNParser.java:145)
	at org.apache.felix.framework.SecurityProviderImpl.checkBundle(SecurityProviderImpl.java:63)
	at org.apache.felix.framework.Felix.setBundleProtectionDomain(Felix.java:854)
	at org.apache.felix.framework.Felix.init(Felix.java:805)
	at org.apache.felix.framework.Felix.start(Felix.java:882)
	at org.apache.clerezza.platform.launcher.ClerezzaApp.start(ClerezzaApp.java:184)
	at org.apache.clerezza.platform.launcher.ClerezzaApp.start(ClerezzaApp.java:167)
	at org.apache.clerezza.platform.launcher.Main.main(Main.java:34)


To reproduce the error:

Compile the current trunk version from: https://svn.apache.org/repos/asf/incubator/clerezza/trunk/
cd platform.launcher.tdb/target
java -Xmx1024M -XX:MaxPermSize=400M -Xss512k -jar platform.launcher.tdb-0.6-incubating-SNAPSHOT.jar",,,,,,,,,,CLEREZZA-729,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-02-12 14:33:41.522,,,no_permission,,,,,,,,,,,,312390,,,Wed Aug 06 20:11:53 UTC 2014,,,,,,0|i1hwrj:,312736,,,,,,,,12/Feb/13 07:23;reto;Related Email-Thread: http://mail-archives.apache.org/mod_mbox/felix-users/201302.mbox/%3CCAJnwQNhqGvYex0oEh6fNnaAJBc+q97XHErGKtOT=+5nr-yZhQg@mail.gmail.com%3E,"12/Feb/13 14:33;karlpauls;Well, I did checkout clerezza and did:

mvn clean install
cd platform.launcher.tdb
mvn clean install
cd target
java -Xmx1024M -XX:MaxPermSize=400M -Xss512k -jar platform.launcher.tdb-0.6-incubating-SNAPSHOT.jar
^C
java -Xmx1024M -XX:MaxPermSize=400M -Xss512k -jar platform.launcher.tdb-0.6-incubating-SNAPSHOT.jar

which did give me the error you mention. After updating to framework and framework.security trunk i could restart without the error. However, I see quite some exceptions and errors in general (unrelated it seems). Can you please try it as well and close this issue if it works for you?","12/Feb/13 15:55;reto;Just updating security isn't enough. How did you update the framework?
I tried updating org.apache.felix.main to 4.3.0-SNAPSHOT but this still depends on version 4.2.0 of the framework. Adding an explicit dependency (in platform.launcher.storageless) to felix:framework:4.3.0-SNAPSHOT also didn't work. How did you do it? 
","12/Feb/13 16:00;karlpauls;I just unpacked the beast into a new dir, did unjar framework and framework.security into it, replaced the embedded framework.security  bundle (just to be sure) and jar'ed it back together - I refuse to understand other peoples maven build systems  whenever i can :-D","12/Feb/13 16:31;reto;Yes! with the latest trunk version with felix.main depending on the trunk version of the framework it works! Thanks a lot.

Would be cool if this gets released soon. As long as it isn't yet it would be great if you could deploy the artifacts to the snapshot repository. ( https://repository.apache.org/content/repositories/snapshots/org/apache/felix/org.apache.felix.framework.security/)",12/Feb/13 16:31;reto;It works with the trunk version,"12/Feb/13 16:54;karlpauls;I pushed a snaphshot:

https://repository.apache.org/content/repositories/snapshots/org/apache/felix/org.apache.felix.framework.security/2.1.0-SNAPSHOT/org.apache.felix.framework.security-2.1.0-20130212.165123-4.jar
","12/Feb/13 17:07;reto;Thanks, could you push one for felix.main as well?",12/Feb/13 20:19;karlpauls;done,29/Jun/14 07:11;reto;Any ETA for the release date of the fixed versions?,03/Jul/14 12:54;karlpauls;This should have been released a long time ago no (current version of security is 2.4.0)?,"06/Aug/14 20:11;reto;Oh, thanks. Missed that and forgot about the even/uneven SNAPSHOT/release gap.",,,,,,,,,,,,,,,,,,,,
IllegalArgumentException from ClassLoader.definePackage,FELIX-3939,12634638,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,rickhall,sahoo,sahoo,28/Feb/13 16:17,05/Mar/13 21:28,13/Mar/19 22:56,28/Feb/13 18:42,framework-4.2.0,,,,framework-4.2.1,,Framework,,,0,,,,,,"Could parallel class loading feature implementation be the reason behind a recent regression that we are seeing in GlassFish as reported in [1]? The exception stack is like this:

Caused by: java.lang.IllegalArgumentException: com.sun.xml.ws.transport.http.servlet
at java.lang.ClassLoader.definePackage(ClassLoader.java:1601)
at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.findClass(BundleWiringImpl.java:2190)
at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1472)
at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:75)
at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1923)
at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
at org.apache.felix.framework.BundleWiringImpl.getClassByDelegation(BundleWiringImpl.java:1357)
at org.apache.felix.framework.BundleWiringImpl.searchDynamicImports(BundleWiringImpl.java:1598)
at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1479)
at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:75)
at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1923)
at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
at org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1832)
at org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:937)
at org.jvnet.hk2.osgiadapter.OSGiModuleImpl$4$1.run(OSGiModuleImpl.java:434)
at org.jvnet.hk2.osgiadapter.OSGiModuleImpl$4$1.run(OSGiModuleImpl.java:431)
at java.security.AccessController.doPrivileged(Native Method)
at org.jvnet.hk2.osgiadapter.OSGiModuleImpl$4.loadClass(OSGiModuleImpl.java:431)
at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
at com.sun.enterprise.v3.server.APIClassLoaderServiceImpl$APIClassLoader.loadClass(APIClassLoaderServiceImpl.java:238)
at java.lang.ClassLoader.loadClass(ClassLoader.java:410)
at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1676)
at org.glassfish.web.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1579)
at java.lang.Class.forName0(Native Method)
at java.lang.Class.forName(Class.java:264)
at java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:363)
at java.util.ServiceLoader$1.next(ServiceLoader.java:445)
at org.glassfish.web.loader.ServletContainerInitializerUtil.getInterestList(ServletContainerInitializerUtil.java:193)
at org.apache.catalina.core.StandardContext.callServletContainerInitializers(StandardContext.java:5955)
at com.sun.enterprise.web.WebModule.callServletContainerInitializers(WebModule.java:779)
at org.apache.catalina.core.StandardContext.start(StandardContext.java:5888)

IllegalArgumentException is thrown by ClassLoader.definePackage if package already exists as per javadoc of that method.

[1] http://java.net/jira/browse/GLASSFISH-19712",JDK 1.7,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-02-28 18:15:32.158,,,no_permission,,,,,,,,,,,,315131,,,Thu Feb 28 18:42:12 UTC 2013,,,,,,0|i1idof:,315475,,,,,,,,"28/Feb/13 18:15;rickhall;I think what we can do in this instance is simply catch the IAE since it appears that the race condition is harmless. Subsequent calls will correctly see that getPackage() returns non-null and won't continue to get exceptions, only the losers of racing threads will, which if we catch and swallow, then no one has to know.","28/Feb/13 18:26;sahoo;I agree. Perhaps we should log the exception in FINE level - who knows when that will help someone in trouble. 

I will be happy to give it a try if you fix it. Very soon, some of us will try a 4.2.1 release and it will be a good candidate for that release. Thanks.","28/Feb/13 18:42;rickhall;I've committed a patch and will deploy snapshots. I didn't bother logging, since allowing the IAE is just an implementation detail of the framework (i.e., we could just as easily introduced a lock to avoid it, which Equinox did, I believe), so I don't see the point in having it end up in a log file.

If it works for you, please close this issue. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in UPnP Web Console Plugin (again),FELIX-3428,12549452,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,v_valchev,v_valchev,v_valchev,04/Apr/12 07:01,04/Apr/12 07:03,13/Mar/19 22:56,04/Apr/12 07:03,webconsole-upnp-plugin-1.0.0  ,,,,webconsole-upnp-plugin-1.0.2,,Web Console,,,0,,,,,,"If there is invalid UPnP device, that has no registration properties, the UPnP Plugin will throw:

upnp>$java.lang.NullPointerException
        at org.apache.felix.webconsole.plugins.upnp.internal.ControlServlet.deviceTreeToJSON(ControlServlet.java:236)
        at org.apache.felix.webconsole.plugins.upnp.internal.ControlServlet.doPost(ControlServlet.java:140)
        at org.apache.felix.webconsole.plugins.upnp.internal.WebConsolePlugin.doPost(WebConsolePlugin.java:102)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:815)

Besides that, the valid devices will not be rendered in the web console too. So iyou need to have ONE bad UPnP device, to break everything.",,,,,,,,,,,,,,,,,,,,,04/Apr/12 07:03;v_valchev;my.bundles.upnp.osgi.printer_1.0.0.201203131224_bad.jar;https://issues.apache.org/jira/secure/attachment/12521286/my.bundles.upnp.osgi.printer_1.0.0.201203131224_bad.jar,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234443,,,Wed Apr 04 07:03:50 UTC 2012,,,,,,0|i07g3b:,41373,,,,,,,,04/Apr/12 07:03;v_valchev;test case for the problem,04/Apr/12 07:03;v_valchev;fixed in rev.1309270,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Web Console Plugin 1.4.2 does not work as expected,FELIX-1579,12435396,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Blocker,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,11/Sep/09 07:13,11/Sep/09 07:15,13/Mar/19 22:56,11/Sep/09 07:15,,,,,,,,,,0,,,,,,The 1.4.2 version of the web console plugin does not expose the correct service (used by the web console).,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57448,,,Fri Sep 11 07:15:21 UTC 2009,,,,,,0|i0vql3:,183280,,,,,,,,"11/Sep/09 07:15;clement.escoffier;Fix at revision: 813693
Embeds the correct class file.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Converter is not working properly when the target is an interface that extends others,FELIX-6031,13210131,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,bosschaert,cvgaviao,cvgaviao,17/Jan/19 10:59,21/Jan/19 11:56,13/Mar/19 22:56,18/Jan/19 14:38,converter-1.0.2,,,,converter-1.0.4,,Converter,,,0,,,,,,"I'm converting from a map to an interface and since that interface has not any direct method
 it is not being considered a ""map"". But one of the interfaces that it extends has the required method named with the source's map key name.

The problem is in the routine that identifies the interfaces in the method ""getInterfaces0"":
{code:java}
	private static boolean isMapType(Class< ? > cls, boolean asJavaBean,
			boolean asDTO) {
		if (asDTO)
			return true;

		// All interface types that are not Collections are treated as maps
		if (Map.class.isAssignableFrom(cls))
			return true;
		*else if (getInterfaces(cls).size() > 0)*
			return true;
		else if (DTOUtil.isDTOType(cls))
			return true;
		else if (asJavaBean && isWriteableJavaBean(cls))
			return true;
		else
			return Dictionary.class.isAssignableFrom(cls);
	}
{code}
{code:java}
	private static Set<Class< ? >> getInterfaces(Class< ? > cls) {
		if (NO_MAP_VIEW_TYPES.contains(cls))
			return Collections.emptySet();

		Set<Class< ? >> interfaces = getInterfaces0(cls);
		for (Iterator<Class< ? >> it = interfaces.iterator(); it.hasNext();) {
			Class< ? > intf = it.next();
			if (intf.getDeclaredMethods().length == 0)
				it.remove();
		}

		interfaces.removeAll(NO_MAP_VIEW_TYPES);

		return interfaces;
	}
{code}
{code:java}
	private static Set<Class< ? >> getInterfaces0(Class< ? > cls) {
		if (cls == null)
			return Collections.emptySet();

		Set<Class< ? >> classes = new LinkedHashSet<>();
		if (cls.isInterface()) {
			classes.add(cls);
		} else {
			classes.addAll(Arrays.asList(cls.getInterfaces()));
		}

		classes.addAll(getInterfaces(cls.getSuperclass()));

		return classes;
	}
{code}
Below is my proposed fix that recursively takes all interfaces that the target extends:
{code:java}
	private static Set<Class< ? >> getInterfaces0(Class< ? > cls) {
		if (cls == null)
			return Collections.emptySet();

		Set<Class< ? >> classes = new LinkedHashSet<>();
		if (cls.isInterface()) {
			classes.add(cls);
			if (cls.getInterfaces()!= null && cls.getInterfaces().length > 0) {
			    for (Class<?> intf : cls.getInterfaces()) {
                    classes.addAll(getInterfaces0(intf));
                }
			}
		} else {
			classes.addAll(Arrays.asList(cls.getInterfaces()));
		}

		classes.addAll(getInterfaces(cls.getSuperclass()));

		return classes;
	}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-01-18 14:33:48.676,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jan 21 11:56:29 UTC 2019,,,,,,0|yi00ww:,9223372036854775807,,,,,,,,18/Jan/19 14:33;bosschaert;Fixed in [http://svn.apache.org/viewvc?view=revision&revision=1851622] - [~cvgaviao] could you please double check that its all good for you?,18/Jan/19 15:15;bischofs@jena.de;refs: https://issues.apache.org/jira/browse/FELIX-6020,18/Jan/19 15:20;bosschaert;Ah [~bischofs@jena.de] could you please let us know if this fix also addresses FELIX-6020 ?,"19/Jan/19 02:43;cvgaviao;Hi [~bosschaert], it resolved the issue on my side. thanks a lot.","21/Jan/19 11:47;bischofs@jena.de;Hi [~bosschaert], i run the tests shown in https://issues.apache.org/jira/browse/FELIX-6020 and it worked.

 

Thanks a lot.

But: I didn't found an snapshot version in the apache mvn snapshot repo:

https://repository.apache.org/content/groups/snapshots/org/apache/felix/org.apache.felix.converter/",21/Jan/19 11:56;bosschaert;Just deployed a snapshot: [https://repository.apache.org/content/groups/snapshots/org/apache/felix/org.apache.felix.converter/1.0.3-SNAPSHOT/],,,,,,,,,,,,,,,,,,,,,,,,,,
"[gogo][runtime] OOM caused by endless loop when parsing ""]""",FELIX-5805,13144821,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,gnt,gnt,gnt,13/Mar/18 18:57,14/Mar/18 13:08,13/Mar/19 22:56,14/Mar/18 13:08,gogo.runtime-1.0.10,,,,gogo.runtime-1.0.12,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,KARAF-5645,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 14 13:08:26 UTC 2018,,,,,,0|i3r90v:,9223372036854775807,,,,,,,,"14/Mar/18 13:08;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...

Mgogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Parser.java

Mgogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestParser.java

Committed r1826708

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JLine shell not working on Windows,FELIX-5569,13046683,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,karlpauls,karlpauls,karlpauls,27/Feb/17 16:59,27/Feb/17 20:50,13/Mar/19 22:56,27/Feb/17 20:50,framework-5.6.2,,,,,,Framework,,,0,,,,,,"Turns out that the gogo jline shell (version 1.0.2) we included in the framework release 5.6.2 doesn't work on windows. 

It throws an exception during startup:

java.lang.NoClassDefFoundError: org/fusesource/jansi/WindowsAnsiOutputStream

This is kinda bad as people that download the framework 5.6.2 convenience release now get the impression it doesn't work on windows. 

Could we get that fixed and released quickly (I'm willing to do a new framework release with an updated gogo-jline asap)?",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-27 19:16:33.994,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 27 20:50:27 UTC 2017,,,,,,0|i3aol3:,9223372036854775807,,,,,,,,27/Feb/17 18:35;karlpauls;I guess we just missed to include the fusesource jansi-1.14.jar as a bundle in the convenience release artefact. I'm switching this issue to be about framework. I'll double check it will work with the bundle around on windows but if it does I'm going to cut a new framework release asap.,27/Feb/17 19:16;gnt;It should work with jansi or jna on the classpath.  There's no way to have windows support without one of those library unfortunately.,"27/Feb/17 20:21;karlpauls;Yes, adding the jansi bundle is making things work. Ok - I will cut a new release of the main.distribution only (with a qualifier) which includes this change. 

Removing the fix version as we don't track the main.distribution in the framework versions as such.",27/Feb/17 20:50;karlpauls;The vote for a replacement distribution is on the way and I committed support for this in r1784648.,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UserAdmin does not export OSGi packages,FELIX-4279,12673391,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,jajans,jajans,jajans,11/Oct/13 08:33,25/Feb/16 12:12,13/Mar/19 22:56,11/Oct/13 09:00,,,,,useradmin-next,,User Admin,,,0,,,,,,The Felix UserAdmin bundle does not export the `org.osgi.service.useradmin` package. This means that a compendium bundle should always be deployed along with this bundle.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,353014,,,Fri Oct 11 09:00:15 UTC 2013,,,,,,0|i1ov27:,353301,,,,,,,,11/Oct/13 09:00;jajans;Added a proper export clause with the correct version. See rev# 1531234.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The Gogo shell thread doesn't stop when Gogo Shell bundle is stopped.,FELIX-4208,12666321,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,,radeks,radeks,30/Aug/13 13:30,19/Jan/16 13:56,13/Mar/19 22:56,19/Jan/16 13:56,gogo.shell-0.10.0,,,,,,Gogo Shell,,,4,,,,,,"The Gogo shell thread doesn't stop when Gogo Shell bundle is stopped.
This is  problem when using Gogo shell with Equinox.
In Felix, the bundle starting thread is a daemon thread, so Gogo shell thread is also a daemon thread and when Felix is shutdown, the virtual machine closes.
However in Equinox the bundle starting thread is a normal thread, so Gogo shell thread is also a normal thread and when Equinox is shutdown, the virtual machine doesn't close, because Gogo shell thread doesn't close (hangs on blocking I/O trying to read from InputStream).
",Equinox,,,,,,,,,,,,FELIX-4024,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,346260,,,2013-08-30 13:30:51.0,,,,,,0|i1npk7:,346561,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven bundle plugin page 404/redirect,FELIX-4834,12783783,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,,soilandreyes,soilandreyes,20/Mar/15 22:35,27/Oct/15 10:15,13/Mar/19 22:56,27/Oct/15 10:15,,,,,,,Documentation,Maven Bundle Plugin,,0,,,,,,"http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html
is linked to from 
http://svn.apache.org/repos/asf/felix/releases/maven-bundle-plugin-2.5.3/doc/site/index.html
and many other places.

but the page now is at https://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html

As the old URL is linked to from all over the place (and is hit #1 if you google ""maven-bundle-plugin"") there should be a HTTP 301 redirect in one of the directions.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-03-21 12:07:52.338,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Oct 27 10:15:22 UTC 2015,,,,,,0|i272lb:,9223372036854775807,,,,,,,,"21/Mar/15 03:25;soilandreyes;Add something like 

Redirect Permanent /site/apache-felix-maven-bundle-plugin-bnd.html /documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html

to .htaccess 

cms.apache.org seems to indicate that the whole .htaccess from site/ has disappeared - when I first browsed it, it showed a .htaccess with redirects for other /documentation/subproejcts  (but not bundle plugin). After a full [Update] this was gone.

https://svn.apache.org/viewvc?view=revision&revision=1666126

so all of these were deleted:

https://svn.apache.org/viewvc/felix/site/trunk/content/site/?pathrev=1666125

.. easily about 1000 URLs deleted.


There are no redirects for any of the deleted pages - but many of them would have been linked to all over the internet.

","21/Mar/15 03:25;soilandreyes;https://svn.apache.org/viewvc/felix/site/trunk/content/site/.htaccess?revision=1527214&view=markup&pathrev=1666125 

is the last .htaccess I can find.. but given everything else there's probably many more main pages that needs to be added.",21/Mar/15 12:07;cziegeler;Thanks for reporting and the analysis! I restored the .htaccess file and added the entry for the bundle plugin. I guess we should add redirects for all pages there which seems to be a major task,"27/Oct/15 10:15;cziegeler;The reported problem has been fixed, therefore resolving",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Permission check being done even when security manager is absent,FELIX-3950,12635288,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,karlpauls,sahoo,sahoo,05/Mar/13 07:33,08/Mar/13 17:03,13/Mar/19 22:56,08/Mar/13 17:03,framework-4.2.0,,,,framework-4.2.1,,Framework,,,0,,,,,," I found this code in org/apache/felix/framework/ExtensionManager.java:

        if (!((BundleProtectionDomain) bundle.getProtectionDomain()).impliesDirect(new AllPermission()))
        {
            throw new SecurityException(""Extension Bundles must have AllPermission"");
        }

It's not a problem now, but it can be a problem in some circumastances. I think this check should be done only when sm is present. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-03-08 17:03:48.683,,,no_permission,,,,,,,,,,,,315781,,,Fri Mar 08 17:03:48 UTC 2013,,,,,,0|i1ihof:,316124,,,,,,,,08/Mar/13 17:03;karlpauls;Done.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Installing an fragment bundle without Bundle-ManifestVersion: 2 causes NPE in resolver,FELIX-3343,12541927,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,sahoo,sahoo,09/Feb/12 05:15,25/Jul/12 19:45,13/Mar/19 22:56,25/Jul/12 19:45,framework-4.0.2,,,,framework-4.2.0,,Framework,,,0,,,,,,"You may call it a bad bundle (because fragment is a R4 concept as I understand), but if someone forgets to set Bundle-ManifestVersion in a fragment, then Felix 4.0.2 won't start. Just copy the attached f1.jar to bundle/ in a felix installation and start felix to see the following exception:

ERROR: Bundle org.apache.felix.gogo.shell [5] Error starting file:/space/ss141213/software/felix-framework-4.0.2/bundle/org.apache.felix.gogo.shell-0.10.0.jar (java.lang.NullPointerException)
java.lang.NullPointerException
	at org.apache.felix.framework.StatefulResolver$ResolverStateImpl.getCandidates(StatefulResolver.java:1263)
	at org.apache.felix.framework.resolver.Candidates.populateFragmentOndemand(Candidates.java:347)
	at org.apache.felix.framework.resolver.Candidates.populate(Candidates.java:148)
	at org.apache.felix.framework.resolver.ResolverImpl.resolve(ResolverImpl.java:115)
	at org.apache.felix.framework.StatefulResolver.resolve(StatefulResolver.java:168)
	at org.apache.felix.framework.Felix.resolveBundleRevision(Felix.java:3819)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1868)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1191)
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:295)
	at java.lang.Thread.run(Thread.java:619)
",,,,,,,,,,,,,,,,,,,,,09/Feb/12 05:16;sahoo;f1.jar;https://issues.apache.org/jira/secure/attachment/12513908/f1.jar,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-04-16 18:51:37.404,,,no_permission,,,,,,,,,,,,227214,,,Wed Jul 25 19:45:03 UTC 2012,,,,,,0|i07gtr:,41492,,,,,,,,09/Feb/12 05:16;sahoo;Test fragment bundle,"16/Apr/12 18:51;rickhall;I believe I have committed a fix for this, please close if satisfied.","25/Jul/12 16:41;rickhall;This is causing some CT issues, so we should revert it for now until we can determine the issue.","25/Jul/12 19:45;rickhall;Fixing this again. I must have had JavaScript on my mind when I wrote the first patch, since I was using == instead of .equals(). Looks to work now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adapt the URLHandlers for the 4.0 refactoring,FELIX-3302,12537896,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,karlpauls,rasteele,rasteele,10/Jan/12 12:38,26/Jun/12 19:08,13/Mar/19 22:56,03/May/12 20:43,framework-4.0.0,framework-4.0.1,framework-4.0.2,,framework-4.0.3,,Framework,,,0,,,,,,"See http://markmail.org/message/gby3k46mqcjjpmjm for a full discussion of the issue, but to summarize:

We are developing a solution around Felix, version 4.0.0, where Felix is embedded inside of a war deployed as an ear on Weblogic. Everything works very nicely when we deploy just one of our ears to Weblogic, but with more than one we're getting an error:

org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from OSGi resource[bundle://36.0:0/OSGI-INF/blueprint/blueprint-context.xml|bnd.id=36|bnd.sym=com.foo.mapper]; nested exception is java.io.IOException: No framework context found at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:341) at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302) at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143) at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178) at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149) at org.eclipse.gemini.blueprint.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:170) at org.eclipse.gemini.blueprint.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:141) at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130) at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:468) at org.eclipse.gemini.blueprint.context.support.AbstractDelegatedExecutionApplicationContext.access$800(AbstractDelegatedExecutionApplicationContext.java:60) at org.eclipse.gemini.blueprint.context.support.AbstractDelegatedExecutionApplicationContext$3.run(AbstractDelegatedExecutionApplicationContext.java:242) at org.eclipse.gemini.blueprint.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85) at org.eclipse.gemini.blueprint.context.support.AbstractDelegatedExecutionApplicationContext.startRefresh(AbstractDelegatedExecutionApplicationContext.java:220) at org.eclipse.gemini.blueprint.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.stageOne(DependencyWaiterApplicationContextExecutor.java:224) at org.eclipse.gemini.blueprint.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.refresh(DependencyWaiterApplicationContextExecutor.java:178) at org.eclipse.gemini.blueprint.context.support.AbstractDelegatedExecutionApplicationContext.refresh(AbstractDelegatedExecutionApplicationContext.java:158) at org.eclipse.gemini.blueprint.extender.internal.activator.LifecycleManager$1.run(LifecycleManager.java:222) at java.lang.Thread.run(Thread.java:619) Caused by: java.io.IOException: No framework context found at org.apache.felix.framework.URLHandlersBundleStreamHandler.openConnection(URLHandlersBundleStreamHandler.java:82) at java.net.URL.openConnection(URL.java:945) at org.eclipse.gemini.blueprint.io.OsgiBundleResource.getInputStream(OsgiBundleResource.java:181) at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:328) ... 17 more 

The problem appears to be that the URLHandlers installed by Felix does not allow for multiple instances of Felix to be running in the same VM as separate (web application) deployments.

The conclusion is ""we forgot to adapt the URLHandlers during the 4.0 refactoring.""","Windows XP (32-bit), Java 6, Weblogic 10gR3, Spring 3.0.5, and Eclipse Gemini Blueprint 1.0.0-RC1.",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-05-03 20:42:44.279,,,no_permission,,,,,,,,,,,,223402,,,Tue May 08 11:17:25 UTC 2012,,,,,,0|i07g4v:,41380,,,,,,,,03/May/12 20:42;karlpauls;I tried to address this issue. Can you try to build from trunk and see whether that fixes the issue for you?,"08/May/12 11:17;rasteele;I will give it a shot, though it might take a few days at least to see if I can recreate the problem first.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
native2ascii doesn't work for UPnP plugin,FELIX-3436,12549670,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,v_valchev,v_valchev,v_valchev,05/Apr/12 11:11,05/Apr/12 11:12,13/Mar/19 22:56,05/Apr/12 11:12,webconsole-upnp-plugin-1.0.2,,,,webconsole-upnp-plugin-1.0.2,,Web Console,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234661,,,Thu Apr 05 11:12:36 UTC 2012,,,,,,0|i07gxj:,41509,,,,,,,,05/Apr/12 11:12;v_valchev;fixed in rev.1309753,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UPnP Plugin device tracking is error-prone,FELIX-3426,12549352,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,v_valchev,v_valchev,v_valchev,03/Apr/12 15:50,03/Apr/12 15:56,13/Mar/19 22:56,03/Apr/12 15:56,webconsole-upnp-plugin-1.0.0  ,,,,webconsole-upnp-plugin-1.0.2,,Web Console,,,0,,,,,,"Sometimes, when one device appears, and another is removed, the plugin is unregistered. The reason is that the addingService() and removedService() in the activator are not synchronized.

In addition, in removedService() the code fragment is absolutely incorrect:
       if (tracker.getTrackingCount() == 0 && plugin != null)
        {
            plugin.unregister();
            this.plugin = null;
        }

The reason is that 'tracking count' is always incremented - no matter if a service is registered, modified or unregistered. It is NOT the count of tracked services.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234343,,,Tue Apr 03 15:56:46 UTC 2012,,,,,,0|i07gxr:,41510,,,,,,,,03/Apr/12 15:56;v_valchev;fixed in svn rev.1309002,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundles with higher start level get activated even before framework reaches that start level,FELIX-2942,12506034,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,sahoo,sahoo,03/May/11 08:10,11/May/11 17:40,13/Mar/19 22:56,11/May/11 17:39,framework-3.0.8,,,,framework-3.2.2,,Framework,,,0,,,,,,"In my environment, this is what's going on:

1. framework is started with start level 1.
2. bundles are installed and assigned start level varying from 2 to 4.
3. framework's start level is set to 5.
4. another bundle is installed and is assigned start level 5. This bundle is then started.

Immediately I see Bundle.STARTED event for the last bundle with start level 5 is fired. While trying to understand why certain bundles are getting started earlier than bundles with lower start levels, I stepped into Felix and found the following code:

            // Check to see if the bundle's start level is greater than the
            // the framework's active start level.
// TODO: STARTLEVEL - Technically, this is not correct since we could be in the
//       middle of a framework start level change and we might not have yet
//       reached the target start level, but we will activate the bundle anyway.
//       This means the bundle will be running in a higher start level temporarily
//       until the start level thread catches up.
            if (bundle.getStartLevel(getInitialBundleStartLevel()) > m_targetStartLevel)
            {
                // Throw an exception for transient starts.
                if ((options & Bundle.START_TRANSIENT) != 0)
                {
                    throw new BundleException(
                        ""Cannot start bundle "" + bundle + "" because its start level is ""
                        + bundle.getStartLevel(getInitialBundleStartLevel())
                        + "", which is greater than the framework's start level of ""
                        + m_targetStartLevel + ""."");
                }
                // Ignore persistent starts.
                return;
            }

The above code compares against ""target start level"" as opposed to the ""currently active start level"". The comment indicates that it is a known issue, so if there is already a bug filed to this extent, please close this one as duplicate. It pretty much makes it difficult to use start level service reliably.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-11 17:39:13.038,,,no_permission,,,,,,,,,,,,56043,,,Wed May 11 17:39:13 UTC 2011,,,,,,0|i0vqsf:,183313,,,,,,,,11/May/11 17:39;rickhall;I have committed a patch that creates a shared set of bundles being processed by the start level thread so that concurrent calls to start a bundle can be queued for the start level thread to avoid bundles starting out of the proper start level.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LinkageError caused by duplicate class definition during implicit boot delegation,FELIX-2653,12477122,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,sahoo,sahoo,12/Oct/10 10:19,15/Oct/10 18:03,13/Mar/19 22:56,12/Oct/10 19:40,framework-3.0.4,,,,framework-3.0.5,,Framework,,,0,,,,,,"I am seeing linkage errors caused by attempt to load duplicate classes and I think it is caused by implicit boot delegation. In our server log, we see the following exception stack:

java.lang.LinkageError: loader (instance of  java/net/URLClassLoader): attempted  duplicate class definition for name: ""com/acme/Foo""
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
	at com.acme.Foo$Factory.bar(Foo.java:93)

I tried to trace the execution to find out what causes the class to be defined for the first time and with the help of btrace (http://projectkenai.com/projects/btrace/), I could obtain the stack and relevant information. First time the class is defined, the stack looks like this:

java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
java.net.URLClassLoader.access$000(URLClassLoader.java:58)
java.net.URLClassLoader$1.run(URLClassLoader.java:197)
java.security.AccessController.doPrivileged(Native Method)
java.net.URLClassLoader.findClass(URLClassLoader.java:190)
java.lang.ClassLoader.loadClass(ClassLoader.java:307)
java.lang.ClassLoader.loadClass(ClassLoader.java:248)
org.apache.felix.framework.ModuleImpl.getEnclosingClass(ModuleImpl.java:1570)
org.apache.felix.framework.ModuleImpl.isClassNotLoadedFromBundle(ModuleImpl.java:1545)
org.apache.felix.framework.ModuleImpl.doImplicitBootDelegation(ModuleImpl.java:1498)
org.apache.felix.framework.ModuleImpl.searchDynamicImports(ModuleImpl.java:1452)
org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:727)
org.apache.felix.framework.ModuleImpl.access$300(ModuleImpl.java:73)
org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1733)
java.lang.ClassLoader.loadClass(ClassLoader.java:248)
org.apache.felix.framework.ModuleImpl.getClassByDelegation(ModuleImpl.java:638)
org.apache.felix.framework.Felix.loadBundleClass(Felix.java:1599)
org.apache.felix.framework.BundleImpl.loadClass(BundleImpl.java:904)
org.jvnet.hk2.osgiadapter.OSGiModuleImpl$3$1.run(OSGiModuleImpl.java:399)
java.security.AccessController.doPrivileged(Native Method)
org.jvnet.hk2.osgiadapter.OSGiModuleImpl$3.loadClass(OSGiModuleImpl.java:395)
java.lang.ClassLoader.loadClass(ClassLoader.java:248)
com.sun.enterprise.v3.server.APIClassLoaderServiceImpl$APIClassLoader.loadClass(APIClassLoaderServiceImpl.java:169)
java.lang.ClassLoader.loadClass(ClassLoader.java:296)
java.lang.ClassLoader.loadClass(ClassLoader.java:248)
com.acme.Foo$Factory.bar(Foo.java:93)

As you can see, when bar method is called, VM tries to load com.acme.Foo.class and the call reaches org.apache.felix.framework.ModuleImpl.getEnclosingClass. getEnclosingClass actually causes the enclosing class, com.acme.Foo, to be defined. So, VM actually records this new class in loaded classes cache of the appropriate loader, but Felix does not consult the loaded classes cache again before trying to define the class. ","java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b06)
Java HotSpot(TM) Server VM (build 17.0-b16, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-12 13:41:16.202,,,no_permission,,,,,,,,,,,,40496,,,Thu Oct 14 16:02:17 UTC 2010,,,,,,0|i0ar0n:,60650,,,,,,,,12/Oct/10 13:41;rickhall;https://glassfish.dev.java.net/issues/show_bug.cgi?id=13587,"12/Oct/10 17:44;sahoo;Fixed the description. I had incorrectly mentioned that VM was trying to load com.acme.Foo$Factory. Instead, VM tried to load com.acme.Foo.","12/Oct/10 17:51;sahoo;Felix indeed consults loaded classes cache right before it defines the class, but despite that duplicate class error is thrown, because the class loader that actually defines the class com.acme.Foo is some other class loader. Richard told me the real issue was in ""implicit delegation code,"" as it has failed to identify certain classes in the call stack as loaded by Felix.","12/Oct/10 19:35;rickhall;I am not sure why we get the LinkageError. It seems that URLClassLoader or SecureClassLoader don't expect anyone to jump in front of them and define a class. In the case of the Felix module class loader, we do expect this and do a double-check just before calling defineClass().

Regardless, while debugging I noticed it looks like we were implicitly boot delegating when we shouldn't be, which resulted in this situation. We are only supposed to implicitly boot delegate if a non-bundle-loaded class (e.g., one from the app or boot class path) is trying to load a class from a bundle. The module class loader was implicitly boot delegating as long as there was any non-bundle-loaded class on the call stack, when in reality it should have failed implicit boot delegation as soon as it found any bundle-loaded class on the stack.

I have committed a patch which appears to resolve this particular issue, but it is not clear to me if the same time of LinkageError couldn't occur in a different scenario if the JRE class loaders don't double check loaded classes.","12/Oct/10 19:40;rickhall;Patch passes OSGi CT, internal tests, and GF tests. Please close if satisfied. Thanks.",14/Oct/10 15:33;sahoo;Fixed a typo in method name.,"14/Oct/10 16:02;rickhall;Just some more summary, it appears that the situation is such that we are getting a request for a class that a bundle shouldn't have. However, as part of our normal processing of a failed class request we try to determine if we should implicitly boot delegate if the request was coming from external code. In this particular scenario we ended up causing the class being requested to be defined as a byproduct in getEnclosingClass(). Thus, when we get back to the original class loader, it has already checked for the class and doesn't check again, so it gets a duplicate definition error. I'm not sure if we can resolve this in a general way.",,,,,,,,,,,,,,,,,,,,,,,,,
Fragment bundle cannot be linked to its host,FELIX-1919,12442442,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,cmoulliard,cmoulliard,04/Dec/09 11:47,11/Feb/10 20:54,13/Mar/19 22:56,29/Jan/10 21:28,framework-2.0.1,,,,framework-2.0.3,,Framework,,,2,,,,,,"The following fragment bundle cannot be link to its host

osgi:install -s mvn:org.hibernate/com.springsource.org.hibernate.ejb/3.4.0.GA // FRAGMENT BUNDLE
osgi:install -s mvn:org.hibernate/com.springsource.org.hibernate/3.3.2.GA // HOST

Here is what the trace report

{code}
DEBUG: Excluding fragment com.springsource.org.hibernate.ejb from com.springsource.org.hibernate due to conflict with imported package javassist.bytec
ode from com.springsource.org.hibernate
DEBUG: Excluding fragment com.springsource.org.hibernate.annotations from com.springsource.org.hibernate due to conflict with imported package org.slf
4j from com.springsource.org.hibernate
{code}

but the import declaration for javassist.bytecode / slf4j are correct

{code}
karaf@root> headers 86

JBoss Hibernate Entity Manager (86)
-----------------------------------
Ant-Version = Apache Ant 1.7.1
Bundle-Classpath = .
Bundle-ManifestVersion = 2
Bundle-Name = JBoss Hibernate Entity Manager
Bundle-SymbolicName = com.springsource.org.hibernate.ejb
Bundle-Vendor = SpringSource
Bundle-Version = 3.4.0.GA
Created-By = 1.5.0_06-b05 (Sun Microsystems Inc.)
Export-Package = org.hibernate.ejb;version=""3.4.0.GA"";uses:=""javax.naming,javax.persistence,javax.persistence.spi,javax.sql,org.hibernate,org.hibernat
e.cfg,org.hibernate.connection,org.hibernate.ejb.packaging,org.hibernate.engine,org.hibernate.event,org.hibernate.mapping,org.slf4j,org.xml.sax"",org.h
ibernate.ejb.connection;version=""3.4.0.GA"";uses:=""javax.sql,org.hibernate"",org.hibernate.ejb.event;version=""3.4.0.GA"";uses:=""org.hibernate.annotations
.common.reflection,org.hibernate.engine,org.hibernate.event,org.hibernate.persister.entity"",org.hibernate.ejb.instrument;version=""3.4.0.GA"",org.hibern
ate.ejb.packaging;version=""3.4.0.GA"";uses:=""javax.persistence.spi,org.slf4j,org.w3c.dom,org.xml.sax"",org.hibernate.ejb.transaction;version=""3.4.0.GA"";
uses:=""org.hibernate,org.hibernate.jdbc,org.hibernate.transaction"",org.hibernate.ejb.util;version=""3.4.0.GA"";uses:=""javax.naming.event,javax.persisten
ce,javax.persistence.spi,org.hibernate,org.hibernate.ejb,org.slf4j"",org.hibernate.engine;version=""3.4.0.GA"";uses:=""org.hibernate,org.hibernate.event,o
rg.hibernate.type,org.slf4j""
Fragment-Host = com.springsource.org.hibernate;bundle-version=""[3.3.1.GA, 3.4.0)""
Implementation-Title = Hibernate EntityManager
Implementation-URL = http://entitymanager.hibernate.org
Implementation-Vendor = hibernate.org
Implementation-Vendor-Id = hibernate.org
Implementation-Version = 3.4.0.GA
Import-Package = javassist.bytecode;version=""[3.3.0.ga, 4.0.0)"",javassist.bytecode.annotation;version=""[3.3.0.ga, 4.0.0)"",javax.naming,javax.naming.ev
ent,javax.naming.spi,javax.persistence;version=""[1.0.0, 2.0.0)"",javax.persistence.spi;version=""[1.0.0, 2.0.0)"",javax.sql,javax.transaction;version=""[1
.0.1, 2.0.0)"";resolution:=optional,javax.xml.parsers,org.dom4j;version=""[1.6.1, 2.0.0)"",org.dom4j.io;version=""[1.6.1, 2.0.0)"",org.hibernate.annotation
s.common;version=""[3.3.0.ga, 3.4.0)"",org.hibernate.annotations.common.reflection;version=""[3.3.0.ga, 3.4.0)"",org.hibernate.annotations.common.util;ver
sion=""[3.3.0.ga, 3.4.0)"",org.slf4j;version=""[1.5.3, 1.6.0)"",org.w3c.dom,org.xml.sax
Manifest-Version = 1.0
Specification-Title = Java Persistence
Specification-Vendor = jcp.org
Specification-Version = 1.0

karaf@root> headers 89

JBoss Hibernate Object-Relational Mapper (89)
---------------------------------------------
Archiver-Version = Plexus Archiver
Bundle-ManifestVersion = 2
Bundle-Name = JBoss Hibernate Object-Relational Mapper
Bundle-SymbolicName = com.springsource.org.hibernate
Bundle-Vendor = SpringSource
Bundle-Version = 3.3.2.GA
Created-By = 1.5.0_18-b02 (Sun Microsystems Inc.)

Import-Package = antlr;version=""[2.7.6, 3.0.0)"",antlr.collections;version=""[2.7.6, 3.0.0)"",antlr.collections.impl;version=""[2.7.6, 3.0.0)"",com.mchange
.v2.c3p0;version=""[0.9.1, 1.0.0)"";resolution:=""optional"",com.opensymphony.oscache.base;version=""[2.1.0, 3.0.0)"";resolution:=""optional"",com.opensymphon
y.oscache.general;version=""[2.1.0, 3.0.0)"";resolution:=""optional"",javassist;version=""[3.9.0.GA, 4.0.0)"",javassist.bytecode;version=""[3.9.0.GA, 4.0.0)""
,javassist.util.proxy;version=""[3.9.0.GA, 4.0.0)"",javax.naming;version=""0"",javax.naming.event;version=""0"",javax.naming.spi;version=""0"",javax.security.
auth;version=""0"",javax.security.jacc;version=""0"";resolution:=""optional"",javax.sql;version=""0"",javax.transaction;version=""[1.0.1, 2.0.0)"";resolution:=""
optional"",javax.transaction.xa;version=""[1.0.1, 2.0.0)"";resolution:=""optional"",net.sf.cglib.beans;version=""[2.2.0, 3.0.0)"",net.sf.cglib.core;version=""
[2.2.0, 3.0.0)"",net.sf.cglib.proxy;version=""[2.2.0, 3.0.0)"",net.sf.cglib.reflect;version=""[2.2.0, 3.0.0)"",net.sf.cglib.transform;version=""[2.2.0, 3.0.
0)"",net.sf.cglib.transform.impl;version=""[2.2.0, 3.0.0)"",net.sf.ehcache;version=""[1.2.3, 2.0.0)"";resolution:=""optional"",net.sf.ehcache.util;version=""[
1.2.3, 2.0.0)"";resolution:=""optional"",net.sf.swarmcache;version=""[1.0.0.RC2, 2.0.0)"";resolution:=""optional"",org.apache.commons.collections.map;version
=""[3.1.0, 4.0.0)"",org.apache.tools.ant;version=""[1.7.0, 2.0.0)"";resolution:=""optional"",org.apache.tools.ant.taskdefs;version=""[1.7.0, 2.0.0)"";resoluti
on:=""optional"",org.apache.tools.ant.types;version=""[1.7.0, 2.0.0)"";resolution:=""optional"",org.dom4j;version=""[1.6.1, 2.0.0)"",org.dom4j.io;version=""[1.
6.1, 2.0.0)"",org.jboss.cache;version=""[1.2.2, 4.0.0)"";resolution:=""optional"",org.jboss.cache.config;version=""[1.2.2, 4.0.0)"";resolution:=""optional"",or
g.jboss.cache.lock;version=""[1.2.2, 4.0.0)"";resolution:=""optional"",org.jboss.cache.notifications.annotation;version=""[1.2.2, 4.0.0)"";resolution:=""opti
onal"",org.jboss.cache.notifications.event;version=""[1.2.2, 4.0.0)"";resolution:=""optional"",org.jboss.cache.optimistic;version=""[1.2.2, 4.0.0)"";resoluti
on:=""optional"",org.jgroups;version=""[2.2.7, 3.0.0)"",org.logicalcobwebs.proxool;version=""[0.8.3, 1.0.0)"";resolution:=""optional"",org.logicalcobwebs.prox
ool.configuration;version=""[0.8.3, 1.0.0)"";resolution:=""optional"",org.objectweb.asm;version=""[1.5.3, 2.0.0)"",org.slf4j;version=""[1.5.6, 2.0.0)"",org.w3
c.dom;version=""0"",org.xml.sax;version=""0""

{code}

Remark : the two bundles can be linked using Equinox 3

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-04 15:01:57.431,,,no_permission,,,,,,,,,,,,57126,,,Thu Feb 11 20:54:30 UTC 2010,,,,,,0|i0vqpb:,183299,,,,,,,,"04/Dec/09 15:01;rickhall;We are not very lenient when it comes to conflict detection, we check for exact matches, which is acceptable for the spec. In this case, the version ranges are not exact matches. We could possibly try to special case version attributes and calculate the intersection of the host import and the fragment import and use that instead...","09/Dec/09 19:54;rickhall;So, is this issue actually critical? If so, I will put some thought into a patch.","10/Dec/09 09:51;njiang;Hi, Richard,

This issue has been found during our integration tests of camel with different JPA implementation on Karaf. As Karaf supports both Felix and Equinox OSGI frameworks, some tests work fine with Equinox (like those using Hibernate/Hibernate Entity Manager) but other no. 

So it could be great to resolve this issue in Felix, in this way , we could announce that Camel can be run on Karaf Felix and Karaf Equniox at same time.

Thanks,

Willem",10/Dec/09 16:51;pjuhos;I've encountered the same problem when trying to set up JPA / Hibernate on Felix 2.0.2. ,"10/Dec/09 16:57;rickhall;Ok, I will try to look into this soon.","07/Jan/10 11:04;hatsebutz;the same is true for hibernate and hibernate-annotations of Hibernate 3.4.0.GA (http://www.springsource.com/repository/app/library/version/detail?name=org.hibernate.ejb&version=3.4.0.GA) - the Fragment-Bundle hibernate-annotations is not attached to hibernate. I switched to knoplerfish, it works fine there.",22/Jan/10 20:15;rickhall;I have committed a patch that attempts to implement version range intersection calculation for more flexibility when merging fragments into hosts. Could someone test to see if this works. I deployed a new snapshot or you can build from trunk. Thanks.,"29/Jan/10 21:28;rickhall;The fix was verified, so I am resolving this issue. Charles, please close if you are satisfied. Thanks.","11/Feb/10 20:54;mrduguo;The fix may introduced another issues:
Fragment bundle ignored silently when the host Bundle-SymbolicName equals import package name
https://issues.apache.org/jira/browse/FELIX-2067",,,,,,,,,,,,,,,,,,,,,,,
[Karaf] Hot undeploy does not work after a Karaf restart,FELIX-1705,12437323,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,,fdiotalevi,fdiotalevi,05/Oct/09 22:04,25/Nov/09 12:20,13/Mar/19 22:56,12/Oct/09 09:33,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"Normally with Karaf I can copy a bundle jar into the ./deploy directory to install it in the osgi container. After that, I can uninstall such bundle simply removing the jar file.

However, if I perform the following steps:
1) copy bundle.jar into the ./deploy folder
2) shutdown karaf
3) startup karaf
4) remove the bundle.jar from the ./deploy folder 
the bundle.jar is not uninstalled.

This issue is not present in File Install 2.0, it seems to be specific of Karaf.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57323,,,Mon Oct 12 09:33:27 UTC 2009,,,,,,0|i0vqrz:,183311,,,,,,,,"12/Oct/09 09:33;fdiotalevi;Resolved after fixes for
FELIX-1736
FELIX-1737

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.io.FileNotFoundException: http://felix.apache.org/obr/org/apache/felix/org.apache.felix.log/1.0.0/org.apache.felix.log-1.0.0.jar,FELIX-1047,12423376,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,clement.escoffier,cathodion,cathodion,21/Apr/09 14:42,23/Apr/09 11:55,13/Mar/19 22:56,23/Apr/09 11:55,framework-1.6.0,,,,,,Bundle Repository (OBR),,,0,,,,,,"When trying to install the Web Management Console using OBR the following exception occurs:

Deploying...ERROR: Resolver: Install error - org.apache.felix.log
java.io.FileNotFoundException: http://felix.apache.org/obr/org/apache/felix/org.apache.felix.log/1.0.0/org.apache.felix.log-1.0.0.jar
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1288)
	at java.net.URL.openStream(URL.java:1009)
	at org.apache.felix.bundlerepository.ResolverImpl.deploy(ResolverImpl.java:546)
	at org.apache.felix.bundlerepository.ObrCommandImpl._deploy(ObrCommandImpl.java:392)
	at org.apache.felix.bundlerepository.ObrCommandImpl.deploy(ObrCommandImpl.java:330)
	at org.apache.felix.bundlerepository.ObrCommandImpl.execute(ObrCommandImpl.java:114)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:291)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:177)
	at java.lang.Thread.run(Thread.java:619)

Installing the HTTP service this way works perfectly:

-> obr start ""HTTP Service""
Target resource(s):
-------------------
   HTTP Service (1.0.0)

Deploying...done.


But when I try to install the web console the exception is thrown:

-> obr start ""Apache Felix Web Management Console""
Target resource(s):
-------------------
   Apache Felix Web Management Console (1.2.8)

Required resource(s):
---------------------
   Apache Felix Log Service (1.0.0)

Deploying...ERROR: Resolver: Install error - org.apache.felix.log
java.io.FileNotFoundException: http://felix.apache.org/obr/org/apache/felix/org.apache.felix.log/1.0.0/org.apache.felix.log-1.0.0.jar
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1288)
	at java.net.URL.openStream(URL.java:1009)
	at org.apache.felix.bundlerepository.ResolverImpl.deploy(ResolverImpl.java:546)
	at org.apache.felix.bundlerepository.ObrCommandImpl._deploy(ObrCommandImpl.java:392)
	at org.apache.felix.bundlerepository.ObrCommandImpl.deploy(ObrCommandImpl.java:330)
	at org.apache.felix.bundlerepository.ObrCommandImpl.execute(ObrCommandImpl.java:114)
	at org.apache.felix.shell.impl.Activator$ShellServiceImpl.executeCommand(Activator.java:291)
	at org.apache.felix.shell.tui.Activator$ShellTuiRunnable.run(Activator.java:177)
	at java.lang.Thread.run(Thread.java:619)
done.",Windows Vista,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-23 11:55:02.772,,,no_permission,,,,,,,,,,,,57943,,,Thu Apr 23 11:55:02 UTC 2009,,,,,,0|i0vqxb:,183335,,,,,,,,"23/Apr/09 11:55;clement.escoffier;Fixed. 
The issue comes from a former version of the maven-bundle-plugin that does not support the 'prefixUrl' argument. 

The issue also occurs for File Install. (I also fixed it)

The repository is now ok, you will be able to deploy the web console directly from OBR: (you have to wait for the site synchronisation, or use the http://people.apache.org/~clement/felix-obr/releases.xml
 url (same repo) 

-> obr start ""Apache Felix Web Management Console""
Target resource(s):
-------------------
   Apache Felix Web Management Console (1.2.8)

Required resource(s):
---------------------
   HTTP Service (1.0.0)
   Apache Felix Log Service (1.0.0)
   Apache Felix Declarative Services (1.0.6)
   OSGi R4 Compendium Bundle (4.0.0)
...
done.

Regards,

Clement
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exceptions when Felix is started with security manager,FELIX-1033,12422511,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,karlpauls,reto,reto,09/Apr/09 19:43,23/Apr/09 09:04,13/Mar/19 22:56,09/Apr/09 21:41,framework-1.6.0,,,,framework-1.6.1,,,,,0,,,,,,"having a  file all.policy containing the following:

grant {
  permission java.security.AllPermission;
 };

and starting felix with:

java -Djava.security.manager -Djava.security.policy=all.policy  -jar
bin/felix.jar

I'm getting:


Welcome to Felix.
=================

java.lang.ClassNotFoundException: org.apache.felix.framework.SecurityActivator
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.ExtensionManager.startExtensionBundle(ExtensionManager.java:361)
	at org.apache.felix.framework.Felix.installBundle(Felix.java:2212)
	at org.apache.felix.framework.Felix.init(Felix.java:581)
	at org.apache.felix.framework.Felix.start(Felix.java:672)
	at org.apache.felix.main.Main.main(Main.java:213)
ERROR: Error starting file:bundle/org.apache.felix.shell-1.2.0.jar (org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.shell [1].)
java.lang.ClassCastException: java.util.jar.JarFile cannot be cast to org.apache.felix.framework.util.JarFileX
	at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:526)
	at org.apache.felix.framework.cache.JarContent.openJarFile(JarContent.java:471)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:165)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1480)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:509)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3335)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1453)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
	at java.lang.Thread.run(Thread.java:619)
ERROR: Error starting file:bundle/org.apache.felix.shell.tui-1.2.0.jar (org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.shell.tui [2].)
java.lang.ClassCastException: java.util.jar.JarFile cannot be cast to org.apache.felix.framework.util.JarFileX
	at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:526)
	at org.apache.felix.framework.cache.JarContent.openJarFile(JarContent.java:471)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:165)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1480)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:509)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3335)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1453)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
	at java.lang.Thread.run(Thread.java:619)
ERROR: Error starting file:bundle/org.apache.felix.bundlerepository-1.4.0.jar (org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.bundlerepository [3].)
java.lang.ClassCastException: java.util.jar.JarFile cannot be cast to org.apache.felix.framework.util.JarFileX
	at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:526)
	at org.apache.felix.framework.cache.JarContent.openJarFile(JarContent.java:471)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:165)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1480)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:509)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3335)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1453)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
	at java.lang.Thread.run(Thread.java:619)
ERROR: Error starting http://repository.ops4j.org/maven2/org/ops4j/pax/url/pax-url-mvn/0.4.0/pax-url-mvn-0.4.0.jar (org.osgi.framework.BundleException: Activator start error in bundle org.ops4j.pax.url.mvn [5].)
java.lang.ClassCastException: java.util.jar.JarFile cannot be cast to org.apache.felix.framework.util.JarFileX
	at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:526)
	at org.apache.felix.framework.cache.JarContent.openJarFile(JarContent.java:471)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:165)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1480)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:509)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3335)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1453)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
	at java.lang.Thread.run(Thread.java:619)
ERROR: Error starting mvn:org.apache.felix/org.apache.felix.scr/1.0.6 (org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.scr [7].)
java.lang.ClassCastException: java.util.jar.JarFile cannot be cast to org.apache.felix.framework.util.JarFileX
	at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:526)
	at org.apache.felix.framework.cache.JarContent.openJarFile(JarContent.java:471)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:165)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1480)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:509)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3335)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1453)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
	at java.lang.Thread.run(Thread.java:619)
ERROR: Error starting mvn:org.apache.felix/org.apache.felix.configadmin (org.osgi.framework.BundleException: Activator start error in bundle org.apache.felix.configadmin [8].)
java.lang.ClassCastException: java.util.jar.JarFile cannot be cast to org.apache.felix.framework.util.JarFileX
	at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:526)
	at org.apache.felix.framework.cache.JarContent.openJarFile(JarContent.java:471)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:165)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1480)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:509)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
	at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at org.apache.felix.framework.searchpolicy.ModuleImpl.getClassByDelegation(ModuleImpl.java:428)
	at org.apache.felix.framework.Felix.createBundleActivator(Felix.java:3335)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1453)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
	at java.lang.Thread.run(Thread.java:619)
","java version ""1.6.0_12""
Java(TM) SE Runtime Environment (build 1.6.0_12-b04)
Java HotSpot(TM) Server VM (build 11.2-b01, mixed mode)",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-09 21:41:33.72,,,no_permission,,,,,,,,,,,,57957,,,Thu Apr 09 21:41:33 UTC 2009,,,,,,0|i0vqwv:,183333,,,,,,,,09/Apr/09 21:41;karlpauls;Fixed in trunk. Could you please test and close this issue if it works for you? ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock with felix 1.6.0 ?,FELIX-1027,12422107,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,pderop,pderop,06/Apr/09 11:43,23/Apr/09 08:49,13/Mar/19 22:56,23/Apr/09 08:35,,,,,framework-1.6.1,,Framework,,,0,,,,,,"I just came across a deadlock with the felix 1.6.0 candidate version for the next fwk version.  
I have attached to this post the corresponding ""kill -QUIT"" output.

Richard, is it really an framework deadlock ? This is strange because I am testing the trunk since one month and never noticed the problem ...

/pierre

","jdk1.5, linux",,,,,,,,,,,,,,,,,,,,11/Apr/09 09:11;rickhall;FELIX-1027-double-check.txt;https://issues.apache.org/jira/secure/attachment/12405225/FELIX-1027-double-check.txt,06/Apr/09 12:38;mcculls;FELIX_1027_20090406.txt;https://issues.apache.org/jira/secure/attachment/12404717/FELIX_1027_20090406.txt,06/Apr/09 11:44;pderop;deadlock.txt;https://issues.apache.org/jira/secure/attachment/12404713/deadlock.txt,06/Apr/09 13:50;pderop;deadlock_after_patch_FELIX_1027_20090406.log;https://issues.apache.org/jira/secure/attachment/12404722/deadlock_after_patch_FELIX_1027_20090406.log,08/Apr/09 06:20;pderop;test-deadlock.tgz;https://issues.apache.org/jira/secure/attachment/12404931/test-deadlock.tgz,5.0,,,,,,,,,,,,,,,,,,,2009-04-06 12:06:10.178,,,no_permission,,,,,,,,,,,,57963,,,Thu Apr 23 08:35:18 UTC 2009,,,,,,0|i0vqyv:,183342,,,,,,,,"06/Apr/09 12:06;mcculls;This certainly looks like a deadlock - and afaik there was some recent work done in this area which may have introduced this.
Do you happen to have a reproducible testcase? or even a smallish private testcase you could send to Richard and/or me?","06/Apr/09 12:18;pderop;The bundles involved in the deadlock are not mine, but using the stacktraces, I think I could try to 
reproduce this issue. I'll let you know asap;

",06/Apr/09 12:30;mcculls;I wonder if using another object for the Felix specific locking would solve this (ie. instead of the classloader itself) - at the moment this internal lock is conflicting with the standard classloader lock.,"06/Apr/09 12:38;mcculls;Pierre, could you apply this patch to the current Felix trunk (or the 1.6.0 framework source) to see if it solves your deadlock?","06/Apr/09 13:16;mcculls;See also:  http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4670071

Some deadlocks can happen with OSGi style classloading because of the spurious synchronization on loadClassInternal, so as Karl just pointed out to me you might still get an exception even with this patch - but the timing window should be much narrower...

( BTW the solution chosen by Sun to support this sort of 'parallel class loading' is to use a special API, but I can't seem to find the exact details at the moment... )","06/Apr/09 13:49;pderop;Stuarts, 
Thank you for your patch and quick response.

Now, I have applied your patch but got another dead lock, with a different stacktrace than without your fix (I attached it).
do you think I am getting the deadlock mentioned by Karl ?
","06/Apr/09 14:28;mcculls;It certainly seems related, because even if you used an unrelated lock object (ie. local to the class) you would still get the second deadlock because of the synchronized loadClassInternal in the JDK ClassLoader code.

There is an experimental workaround you could try if you use the Sun JDK (or you could perhaps try the IBM JDK):

    -XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass

from http://underlap.blogspot.com/2006/11/experimental-fix-for-sunbug-4670071.html

Alternatively you could look into introducing a higher-level synchronization into your application code to avoid the situation to begin with (I know, this sucks)","06/Apr/09 14:38;karlpauls;Sometimes it helps when you check whether you can rearrange your import/export packages. Basically, for this to happen the one need to import from the other. If that is they way you want to structure your bundles then you have to try what Stuart suggests but otherwise, you could see whether you can repackage in a way that avoids this issue. ","06/Apr/09 16:13;pderop;As far as I understand, the issue arises because I use class.forName from my Activators. The first Activator.start() method invokes
class.forName from the ""FelixStartLevel"" thread, and the other class.forName is invoked concurrently, from another thread which is 
started by the second activator.

I am actually struggling with some legacy code which is using Class.forName() ...
In any case, I think that using Class.ForName is definitely a poor practice in OSGi, and I will try to work around this problem
by just replacing the Class.forName() with the OSGi Registry ...

So, if you think there is nothing to fix at all in the framework, may be I should close this fault report ?




","06/Apr/09 19:08;pderop;Stuart,
I just tested the "" -XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass"" options and it sounds to work fine.

A big thanks !
(I will close this issue)

","06/Apr/09 19:09;pderop;issue closed because the JVM options ""-XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass"" seems to resolve the problem.","06/Apr/09 19:37;pderop;Stuart, 
I forgot to ask the following:

1) is it really safe to use UnsyncloadClass with Felix ? I saw that this option is unstable and ""calls loadClass unsynchronized. Custom classloader must call VM synchronized for findClass & defineClass"" ...

2) moreover, does the option ""UnlockDiagnosticVMOptions"" affect jvm performances ?","06/Apr/09 20:03;karlpauls;In regard to 1, yes it should be save as we do our own (more finegrained locking). Not sure about 2. ","07/Apr/09 01:42;mrdon;That's great that you can work around it with a set of Sun-specific command line arguments, but that does nothing to help with folks like me that have no control over what JVM the application is deployed on.  I think this issue should be reopened until it is fixed properly in Felix.","07/Apr/09 03:37;mcculls;@Pierre as Karl said using this switch should be safe because the custom Felix classloader has extra fine-grained locks to protect against collisions - also ""UnlockDiagnosticVMOptions"" just unlocks additional diagnostic options, to the best of my knowledge it doesn't affect JVM performance unless you specify further switches (think of it as a safety-catch)

@Don unfortunately the deadlock in loadClassInternal cannot be fixed in Felix because the JVM can call loadClassInternal directly in certain situations which means that even introducing a global lock in Felix may not help (a global lock would also really hurt performance for everyone), if you look at http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4670071 this is a long-standing bug in the Sun JVM that can occasionally occur during parallel classloading with any classloader that doesn't follow the parent-delegation model (the original bug was raised back in 2002 by someone using a custom JBoss classloader)

Other JVMs (like IBM) don't have synchronized on loadClassInternal and therefore don't suffer from this bug - also note from the latest evaluation report on the sunbug, that Sun have finally decided on a different fix which requires custom classloaders requiring parallel classloading to use a special (currently non-standard) API - but this is only available in very recent JDK builds and afaik would require us to use some reflection magic...

In practice this deadlock only affects applications with parallel classloading involving the same set of classes - because most OSGi applications load their classes during resolution or in the bundle activator, this doesn't affect them - only a sub-set of applications that use Class.forName, etc. for the same set of classes in different threads at exactly the same time may be affected.","08/Apr/09 06:18;pderop;I must say I am somewhat worried about this deadlock issue, and may we we should reopen this ticket ?
Stuard, Karl, I let you re-open it if you think it makes sense.

Let me explain:
---------------------

First of all, I just would like to notice that the problem I am facing here is a story of legacy code which is 
using Class.forName, and I just can't modify this legacy code in order to replace the Class.forName by anything 
else, like the OSGi registry. Indeed, I could rework the legacy code in order to register class implementations
inside the OSGi registry, and inject them in client bundles (using iPOJO, SCR, etc ...).
But the point is: I just can't modify the code, it's not mine.
Morover, I would like to notice that many third party open source libraries (like log4j for instance) rely on
class.forName, and we can't ignore this fact ... Think of Log4j, which loads Appenders using Class.forName ...

So, now, here is my problem: Yesterday, I successfully started my app server with the options
""UnlockDiagnosticVMOptions/UnsyncloadClass"", without any deadlocks. So far so good. 

Now, I have made a sample code in order to be able to get the problem in a reproducible way .
My intent here was to make a Junit auto-test and verify that the UnlockDiagnosticVMOptions/UnsyncloadClass 
options really resolves the issue.

But Unfortunately, the sample code does not reproduce the deadlock.
However, and this is the point of this issue, when I run my sample code with the 
UnlockDiagnosticVMOptions/UnsyncloadClass, then I get some abnormal ClassNotFoundException
(and I don't have them without the mentioned options !)

I have attached to this post the sample code. May be I did a mistake ? can you look into it, please.

sample code description:
-----------------------------------

- The bundle ""A"" export the package ""a"" with a class a.A

- The Bundle ""B"", when started, fires some threads which perform Class.forName(""a.A"").newInstance()
  (B does an ugly ""DynamicImport-Package: *)

- The Bundle ""Updater"" constantly updates the bundles A,B and refreshes them, using PackageAdmin.refresh(null).
  Hence, I ensure that wiring is re-done after each updates.

- Without, the UnlockDiagnosticVMOptions/UnsyncloadClass, I get the following traces (I have activated
  felix.log.level=4), and I don't have any deadlocks (unfortunately ..., well ...):


  rm -rf felix-cache/; java -server -jar bin/felix.jar

  B starting ...
  DEBUG: DYNAMIC WIRE: 9.0 -> a -> 8.0
  DEBUG: WIRE: 10.0 -> org.osgi.service.packageadmin -> 0
  DEBUG: WIRE: 10.0 -> org.osgi.framework -> 0
  DEBUG: WIRE: 9.0 -> org.osgi.framework -> 0
  B starting ...
  DEBUG: DYNAMIC WIRE: 9.0 -> a -> 8.0
  DEBUG: WIRE: 9.0 -> org.osgi.framework -> 0
  B starting ...
  DEBUG: DYNAMIC WIRE: 9.0 -> a -> 8.0
  DEBUG: WIRE: 9.0 -> org.osgi.framework -> 0

  etc ...

- With the -XX options, I then get the following abnormal exceptions:

  rm -rf felix-cache/; java -server -XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass -jar bin/felix.jar

  B starting ...
  DEBUG: DYNAMIC WIRE: 9.0 -> a -> 8.0
  DEBUG: WIRE: 10.0 -> org.osgi.service.packageadmin -> 0
  DEBUG: WIRE: 10.0 -> org.osgi.framework -> 0
  DEBUG: WIRE: 9.0 -> org.osgi.framework -> 0
  B starting ...
  DEBUG: DYNAMIC WIRE: 9.0 -> a -> 8.0
  DEBUG: WIRE: 9.0 -> org.osgi.framework -> 0
  B starting ...
  DEBUG: DYNAMIC WIRE: 9.0 -> a -> 8.0
  java.lang.ClassNotFoundException: *** Package 'a' is imported by bundle 9 from bundle 8, but the exported package from bundle 8 does not contain the requested class 'a.A'. Please verify that the class name is correct in the importing bundle 9 and/or that the exported package is correctly bundled in 8. ***
          at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1448)
          at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
          at java.lang.Class.forName0(Native Method)
          at java.lang.Class.forName(Class.java:164)
          at b.Legacy.run(Legacy.java:6)
          at java.lang.Thread.run(Thread.java:595)
  Caused by: java.lang.ClassNotFoundException: a.A
          at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:565)
          at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
          at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
          ... 5 more
  

-> Could anyone please check my sample code. I am just worried about unexpected side effects from the -XX options ...

","08/Apr/09 06:20;pderop;attached the sample code which have ClassNotFoundException, when using the ""-XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass"" options.",08/Apr/09 07:17;mcculls;Re-opening so we (ie. either me/Karl/Richard) can do further investigation,"08/Apr/09 08:00;rickhall;Pierre, it seems that constantly updating/refreshing your bundles is always going to lead to such situations since you have a race condition between servicing the class load request and the JAR file being deleted from the file system due to a refresh.

Remember that we do not try to perform any locking on a class load to hold a bundle JAR file in place because a) it would be too costly, b) the potential for deadlock would be great, and c) what's the point since if the bundle you depend on is being refreshed, then you are likely being refreshed too.

You concern here seems to be based on the fact that you do not see these errors with the JVM option enabled, but perhaps that makes some sense since it leads to more concurrency, which then exposes this race condition. Just a thought.","08/Apr/09 08:51;pderop;Yes Richard, I remember, and in the sample code,  I think I don't have such race condition (though, I am now doubting ...) because:

1) the Updater always stops the bundle B, before upadting/refreshing it.
2) In B.stop(), I ensure all started threads to be properly joined, before returning from B.stop() method.
3) Morover, when I refresh, I always wait for the PACKAGES_REFRESHED event, before restarting B ...

Did I miss something ?","08/Apr/09 08:55;rickhall;Pierre, that sounds reasonable. I guess we will have to look into your example.","09/Apr/09 18:50;sahoo;Stuart,

The classloader API changes are discussed at:
http://openjdk.java.net/groups/core-libs/ClassLoaderProposal.html

Thanks,
Sahoo","10/Apr/09 04:22;rickhall;Pierre, are the exceptions you are seeing related to the fact that update auto-refreshes? Your comment in your code mentions that the refresh isn't done when you receive the event. I guess it is clear now that your Updater was seeing the event of the auto-refresh, not its own refresh. Does this resolve this issue?","10/Apr/09 05:06;pderop;Richard,

I don't think that the Auto-Refresh issue is unrelated to this one (that's why I sent the auto-refresh issue on users-list, separately).

To work around the Auto-Refresh problem, I have added a sleep(10) in the Updater.Refresher inner class.
I just tested with a higher delay (5000), and I still have the ClassNotFound with the -XX options



","10/Apr/09 05:09;pderop;(oops, my previous message was not clear, I repost it):

the Auto-Refresh is (I think) UNRELATED to the ClassNotFound (and you can replace sleep(10) by sleep(5000) in the Updated.java file -> you will have the same ClassNotFound with -XX options)

/pierre","10/Apr/09 09:09;pderop;Richard, 

I reproduce the problem in a simpler way, without using the ""Updater"" bundle at all. (yon can discard it).
Now, in my felix config, I just start bundle A, and B:

----------------------------------
felix.auto.start.1= \
 file:bundle/org.apache.felix.shell-1.1.0-SNAPSHOT.jar \
 file:bundle/org.apache.felix.shell.tui-1.1.0-SNAPSHOT.jar \
 file:bundle/org.apache.felix.bundlerepository-1.3.0-SNAPSHOT.jar \
 file:bundle/A.jar \
 file:bundle/B.jar \

# don't activate felix debug ...
felix.log.level=1 
---------------------------------------------------------------------------

and I start felix like this (I use jdk 1.5.0_18):

rm -rf felix-cache/; 
java -XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass -jar bin/felix.jar

-> B starting ...
java.lang.ClassNotFoundException: a.A
        at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:565)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
        at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:164)
        at b.Legacy.run(Legacy.java:6)
        at java.lang.Thread.run(Thread.java:595)

If you don't get the CNF, then manually stop/update/refresh/start bundle B, like this, and you will probably get the CNF:

-> B starting ...

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (1.7.0.SNAPSHOT)
[   1] [Active     ] [    1] Apache Felix Shell Service (1.1.0.SNAPSHOT)
[   2] [Active     ] [    1] Apache Felix Shell TUI (1.1.0.SNAPSHOT)
[   3] [Active     ] [    1] Apache Felix Bundle Repository (1.3.0.SNAPSHOT)
[   4] [Active     ] [    1] A (1.0.0)
[   5] [Active     ] [    1] B (1.0.0)

-> stop 5
-> update 5
-> refresh 5
-> start 5
B starting ...
java.lang.ClassNotFoundException: a.A
        at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:565)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
        at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1434)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:169)
        at b.Legacy.run(Legacy.java:6)
        at java.lang.Thread.run(Thread.java:619)
","10/Apr/09 09:14;rickhall;Ok, thanks for the update. We are looking into it.","11/Apr/09 07:08;rickhall;Ok, I think I know what is going on here and it is a bug in Felix which is exposed by the additional level of concurrency enabled by the new JVM flag.

Basically, the situation is something like this:

1. Since the bundle is dynamically importing ""a"", there is a race condition among its threads to be the first to dynamically import it.
2. Assume all threads approximately finish searching their statically imported wires at the same time, none will find ""a.A"" because it hasn't been dynamically imported yet.
3. Further assume all threads end up trying to dynamically import ""a"" at around the same time; only one will actually be able to do so, because this operation is guarded by a global lock.
4. Whichever thread won the race to dynamically import the package will succeed in doing so and will load the class correctly.
5. All remaining threads will also [one at a time] try to dynamically import the package, but each will fail since the bundle now already imports the package as a result of the first thread. You are not allowed to dynamically import a package to which you are already wired.
6. Since the remaining bundles are all past the point where they can search their existing imports, each thread will throw a CNFE, since it looks like to them that the dynamic import failed.

I am pretty sure this is what is going on. The solution? We probably need to double-check to make sure the package hasn't already been dynamically imported when we attempt to dynamic import to detect the race condition.

I quickly hacked up a solution in my workspace and it looks like I am on the correct track, but I don't have a complete patch ready yet.",11/Apr/09 09:13;rickhall;I have attached a patch that performs double checking of the wire before attempting to dynamically import again. I believe this resolves the issue for this example. Not sure if the precise patch is good in general. It does result in some duplication with Resolver.isDynamicImportAllowed().,"14/Apr/09 15:51;pderop;All right, I have performed a non-regression test, and it looks like everything is ok with your patch and with the -XX options ...
Thanks !

Do you plan to commit this fix, or do you need to investigate further ?
","15/Apr/09 02:13;rickhall;We will commit it or something like it. I still want to look into improving the patch so it doesn't duplicate code, but otherwise it is probably ok.",23/Apr/09 08:35;rickhall;I have committed my simple double-check patch. Please close this issue if you are satisfied. Thanks.
Empty bundle.state file produces NPE,FELIX-902,12413391,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Critical,Fixed,rickhall,c00l,c00l,27/Jan/09 16:16,16/Mar/09 18:32,13/Mar/19 22:56,16/Mar/09 18:32,framework-1.0.4,,,,framework-1.6.0,,Framework,,,0,,,,,,"If I have empty bundle.state file in Felix cache then exception is thrown while bundle start:
java.lang.NullPointerException
            at org.apache.felix.framework.cache.BundleArchive.getPersistentState(BundleArchive.java:315)
            at org.apache.felix.framework.Felix.start(Felix.java:776)

But if i delete bundle.state then no exception is thrown and org.apache.felix.framework.cache.BundleArchive#getPersistentState returns 'Installed' state.
The exception is thrown because string comparsions in org.apache.felix.framework.cache.BundleArchive#getPersistentState do not respect java.io.BufferedReader#readLine's null return value if file is empty. Also there is a bug in org.apache.felix.framework.cache.BundleArchive#setPersistentState that can produce not persistent state of cache by creation of empty bundle.state file.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-27 18:52:38.526,,,no_permission,,,,,,,,,,,,58087,,,Mon Mar 16 18:32:08 UTC 2009,,,,,,0|i0vqy7:,183339,,,,,,,,"27/Jan/09 18:52;rickhall;Thanks for the feedback.

Regarding your first issue, I added a null check to make sure we will default to INSTALLED.

As for the second issue in setPersistentState(), I do not understand what you are saying. The method is quite simple, it opens a file, writes a value, then closes the file. What is the bug? It defaults to INSTALLED and seems there could only be an issue if it had difficulty writing to the disk. If that is the case, there isn't much we can do. Am I missing something?","28/Jan/09 11:13;c00l;Yes, org.apache.felix.framework.cache.BundleArchive#setPersistentState looks pretty secure but there is some magic about what it performs just after output stream is created. What if BufferedWriter, OutputStreamWriter or anything else that surrounded by try...catch throws exception if stream is created? The answer is simple: stream should be closed in finally block and we have an empty bundle.state file (This is may be platform dependent behavior. Reproduced on Windows).
But this is just my opinion, because at the moment i can't catch what excactly breaks bundle.state file. Our application runs under Applet environment and i expect that this situation may occur when we closing Applet while OSGi is still in startup state.","28/Jan/09 20:08;rickhall;Still, shouldn't the second issue be resolved by the first issue? Now, if for some reason there is an empty file created, it will be interpreted as being the INSTALLED state. Said another way, there is really only one bug here, which is under some circumstances an empty state file might be created, so we need to handle that when we read the state file. Would you agree?","29/Jan/09 13:42;c00l;Yes, you are completely right. The fix is to handle empty state files. But i just thought that you wil be interested in root cause of problem, because it can bring cache into not persistent state.
P.S. And when this fix will be released? :) It's really important for us, because this bug reproduces very often in our environment.","29/Jan/09 16:46;rickhall;Ok, good to understand. I just committed a fix for the empty state file. Unfortunately, I don't expect a release for a little while, since the trunk is undergoing some major refactoring. I would recommend rolling your own release with the fix if it is impacting you.

Since you can apparently reproduce the root cause, it would be excellent if you could look into what is going on a little bit to see if that is something we could fix too. Or if you can create an example to reproduce it, I will look into it. Thanks for your help.",16/Mar/09 18:32;rickhall;This has been fixed in trunk and will be included in the next release. Please close if satisfied. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,
ErrorHandlers should be applied in reverse order,FELIX-6008,13206364,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,cvgaviao,cvgaviao,25/Dec/18 12:07,11/Mar/19 15:05,13/Mar/19 22:56,11/Mar/19 15:05,converter-1.0.2,,,,converter-1.0.6,,Converter,,,0,,,,,,"It could become common to create a new converter from an existent one.
So, in case of more than one errorHandler were registered they must be applied in reverse order.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-01-18 15:57:33.141,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Mar 11 15:05:28 UTC 2019,,,,,,0|u00alc:,9223372036854775807,,,,,,,,"25/Dec/18 12:53;cvgaviao;Have added a commit on my github's fork: https://github.com/cvgaviao/felix/commit/a0798203a611a47f94296207f4bb0c6bf91a15f6

This have resolved the problem when there was multiple errorHandlers in the same converter, but didn't resolved when errorHandlers was added by parent converters...",18/Jan/19 15:57;bosschaert;I'm thinking should this also be the case for custom rules?,"19/Jan/19 02:51;cvgaviao;[~bosschaert], I also think that it is the case for custom rules too.","11/Mar/19 15:05;bosschaert;Fixed in http://svn.apache.org/viewvc?view=revision&revision=1855240

[~cvgaviao] could you please double check that this works for you?",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate registration of ConfigurationAdmin from PersistenceManagerTracker,FELIX-6066,13217250,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jbonofre,gzres,gzres,21/Feb/19 16:21,07/Mar/19 12:41,13/Mar/19 22:56,07/Mar/19 12:41,configadmin-1.9.10,configadmin-1.9.12,,,configadmin-1.9.14,,Configuration Admin,,,0,,,,,,"When custom instances of {{org.apache.felix.cm.PersistenceManager}} are unregistered and registered quickly, there's certain chance that such instance will be used *twice* to activate the Configuration Admin.

I'll send a PR which protects from using the same PersistanceManager more than once.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Feb 21 16:24:35 UTC 2019,,,,,,0|yi18n4:,9223372036854775807,,,,,,,,21/Feb/19 16:24;gzres;PR: https://github.com/apache/felix/pull/185,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console memory usage page does not display information on Java 11,FELIX-6079,13219853,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,rombert,rombert,06/Mar/19 09:33,06/Mar/19 12:14,13/Mar/19 22:56,06/Mar/19 12:14,webconsole-memoryusage-plugin-1.0.8,,,,webconsole-memoryusage-plugin-1.0.10,,Web Console,,,0,,,,,,"When running the web console on Java 11 the page does not contain any information. The error is caused by a pool name that contains a quote ({{'}}) character which makes the generated JSON invalid.

{code:javascript}var __pools__ = [{'name':'CodeHeap 'non-nmethods'','type':'Non-heap memory',
           {code}
",Java 11,,,,,,,,,,,,,,,,,,,,06/Mar/19 10:04;rombert;FELIX-6079.patch;https://issues.apache.org/jira/secure/attachment/12961378/FELIX-6079.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2019-03-06 12:14:27.916,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 06 12:14:27 UTC 2019,,,,,,0|z00e9s:,9223372036854775807,,,,,,,,06/Mar/19 10:06;rombert;Updated trivial patch which fixes the problem with Java 11 by escaping single quotes in the pool names.,06/Mar/19 12:14;karlpauls;I applied your patch in r1854912. Thanks a lot!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prevent NullPointerException in Healthcheck ScriptEnginesTracker,FELIX-6072,13218399,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,henzlerg,bischofs@jena.de,bischofs@jena.de,27/Feb/19 17:04,04/Mar/19 08:56,13/Mar/19 22:56,27/Feb/19 23:46,healthcheck.generalchecks 2.0.0,,,,healthcheck.generalchecks 2.0.2,,Health Checks,,,0,,,,,,"While any manipulation of configuration.json i got an NPE

 
{code:java}
ERROR: Bundle org.apache.felix.healthcheck.generalchecks [41] EventDispatcher: Error during dispatch. (java.lang.NullPointerException)
java.lang.NullPointerException
    at org.apache.felix.hc.generalchecks.util.ScriptEnginesTracker.unregisterFactories(ScriptEnginesTracker.java:113)
    at org.apache.felix.hc.generalchecks.util.ScriptEnginesTracker.bundleChanged(ScriptEnginesTracker.java:89)
    at org.apache.felix.framework.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:915)
    at org.apache.felix.framework.EventDispatcher.fireEventImmediately(EventDispatcher.java:834)
    at org.apache.felix.framework.EventDispatcher.run(EventDispatcher.java:1147)
    at org.apache.felix.framework.EventDispatcher.access$000(EventDispatcher.java:54)
    at org.apache.felix.framework.EventDispatcher$1.run(EventDispatcher.java:102)
    at java.base/java.lang.Thread.run(Thread.java:834)
{code}","openjdk11
fedora 29",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-02-27 23:46:43.297,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Mar 04 08:56:21 UTC 2019,,,,,,0|z005cg:,9223372036854775807,,,,,,,,27/Feb/19 23:46;henzlerg;Fixed in [r1854490|http://svn.apache.org/r1854490],"03/Mar/19 15:57;rakeshk15;I know this is in resolved state but NPE also occurs when I stop Felix. Glad this is fixed. Thanks.

 
{code:java}
ERROR: Bundle org.apache.felix.healthcheck.generalchecks [18] EventDispatcher: Error during dispatch. (java.lang.NullPointerException)
java.lang.NullPointerException
at org.apache.felix.hc.generalchecks.util.ScriptEnginesTracker.unregisterFactories(ScriptEnginesTracker.java:113)
at org.apache.felix.hc.generalchecks.util.ScriptEnginesTracker.bundleChanged(ScriptEnginesTracker.java:89)
at org.apache.felix.framework.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:915)
at org.apache.felix.framework.EventDispatcher.fireEventImmediately(EventDispatcher.java:834)
at org.apache.felix.framework.EventDispatcher.run(EventDispatcher.java:1147)
at org.apache.felix.framework.EventDispatcher.access$000(EventDispatcher.java:54)
at org.apache.felix.framework.EventDispatcher$1.run(EventDispatcher.java:102)
at java.lang.Thread.run(Thread.java:748){code}","04/Mar/19 08:56;henzlerg;[~rakeshk15] I'll call for a release for this as soon as possible, but there are potentially some other changes. In general from what I've seen, the exception is not nice but should not have any impact on the functionality.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassLoading and getService can fail unpredictably due to interrupts,FELIX-6067,13217421,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,rombert,rombert,22/Feb/19 11:56,22/Feb/19 22:41,13/Mar/19 22:56,22/Feb/19 22:40,framework-6.0.2,,,,framework-6.0.3,,Framework,,,0,,,,,,"I noticed an intermittent issue with our Felix-based app (Apache Sling). The flows seems to be the following:

(thread 1)
- component C is started
- component C invokes method on class K1
- class K1 is first accessed now and runs class initializers
- K1 static initializer calls method from class K2
- class K2 loading is triggered

(thread 2)
- component C is stopped ( I _think_ due to configuration coming in )

(thread 1)
- during class loading of K2 a RuntimeException is thrown, resulting in all calls to K1 leading to NoClassDefFoundError 

At this point although the error should be transient the component is unusable since one of the classes it uses is not available.

For the record, the stack trace which causes this is

{noformat}
21.02.2019 14:50:50.292 *ERROR* [Apache Sling Repository Startup Thread #1] org.apache.sling.jcr.oak.server.internal.OakSlingRepositoryManager start: Uncaught Throwable trying to access Repository, calling stopRepository()
java.lang.ExceptionInInitializerError: null
        at org.apache.sling.jcr.oak.server.internal.OakSlingRepositoryManager.acquireRepository(OakSlingRepositoryManager.java:144) [org.apache.sling.jcr.oak.server:1.2.0]
        at org.apache.sling.jcr.base.AbstractSlingRepositoryManager.initializeAndRegisterRepositoryService(AbstractSlingRepositoryManager.java:481) [org.apache.sling.jcr.base:3.0.6]
        at org.apache.sling.jcr.base.AbstractSlingRepositoryManager.access$300(AbstractSlingRepositoryManager.java:86) [org.apache.sling.jcr.base:3.0.6]
        at org.apache.sling.jcr.base.AbstractSlingRepositoryManager$4.run(AbstractSlingRepositoryManager.java:462) [org.apache.sling.jcr.base:3.0.6]
Caused by: java.lang.RuntimeException: java.lang.InterruptedException
        at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:369)
        at org.apache.felix.framework.Felix.getService(Felix.java:3954)
        at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.transformClass(BundleWiringImpl.java:2383)
        at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.findClass(BundleWiringImpl.java:2081)
        at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1565)
        at org.apache.felix.framework.BundleWiringImpl.access$300(BundleWiringImpl.java:79)
        at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1982)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
        at org.apache.jackrabbit.oak.plugins.tree.factories.RootFactory.createSystemRoot(RootFactory.java:80) [org.apache.jackrabbit.oak-core:1.8.8]
        at org.apache.jackrabbit.oak.InitialContent.initialize(InitialContent.java:134) [org.apache.jackrabbit.oak-core:1.8.8]
        at org.apache.jackrabbit.oak.InitialContent.createInitialContent(InitialContent.java:74) [org.apache.jackrabbit.oak-core:1.8.8]
        at org.apache.jackrabbit.oak.InitialContent.<clinit>(InitialContent.java:70) [org.apache.jackrabbit.oak-core:1.8.8]
        ... 4 common frames omitted
Caused by: java.lang.InterruptedException: null
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1302)
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)
        at org.apache.felix.framework.ServiceRegistry.getService(ServiceRegistry.java:365)
        ... 15 common frames omitted
{noformat}

(source code for all classes is available if needed)

Starting the component C at any later time fails with

{noformat}
21.02.2019 14:50:50.310 *ERROR* [Apache Sling Repository Startup Thread #2] org.apache.sling.jcr.oak.server.internal.OakSlingRepositoryManager start: Uncaught Throwable trying to access Repository, calling stopRepository()
java.lang.NoClassDefFoundError: Could not initialize class org.apache.jackrabbit.oak.InitialContent
        at org.apache.sling.jcr.oak.server.internal.OakSlingRepositoryManager.acquireRepository(OakSlingRepositoryManager.java:144) [org.apache.sling.jcr.oak.server:1.2.0]
        at org.apache.sling.jcr.base.AbstractSlingRepositoryManager.initializeAndRegisterRepositoryService(AbstractSlingRepositoryManager.java:481) [org.apache.sling.jcr.base:3.0.6]
        at org.apache.sling.jcr.base.AbstractSlingRepositoryManager.access$300(AbstractSlingRepositoryManager.java:86) [org.apache.sling.jcr.base:3.0.6]
        at org.apache.sling.jcr.base.AbstractSlingRepositoryManager$4.run(AbstractSlingRepositoryManager.java:462) [org.apache.sling.jcr.base:3.0.6]
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-02-22 12:21:59.249,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Feb 22 22:40:44 UTC 2019,,,,,,0|yi19ow:,9223372036854775807,,,,,,,,"22/Feb/19 12:21;karlpauls;I think what is needed for this to happen is a weaving hook present and two threads racing to get and unset service references. There is a path in that code, where we catch InterruptedException and rethrow it as a RuntimeException in the getService which is not correct.",22/Feb/19 22:40;karlpauls;Fixed in r1854178.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Converter doesn't properly handle PREFIX_ in marker annotations,FELIX-6057,13215584,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rotty3000,rotty3000,rotty3000,13/Feb/19 19:59,13/Feb/19 20:33,13/Mar/19 22:56,13/Feb/19 20:33,,,,,converter-1.0.4,,Converter,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Feb 13 20:33:12 UTC 2019,,,,,,0|yi0yfk:,9223372036854775807,,,,,,,,"13/Feb/19 20:01;rotty3000;Given the marker annotation:
{code}
@Retention(RetentionPolicy.RUNTIME)
public @interface PrefixMarkerAnnotation {
    static final String PREFIX_ = ""org.foo.bar."";
}
{code}
the following test fails:
{code}
    @Test
    @PrefixMarkerAnnotation
    public void testMarkerAnnotationPrefixToMap() throws Exception {
        final Converter converter = Converters.standardConverter();
        Method method = getClass().getMethod(""testMarkerAnnotationPrefixToMap"");
        PrefixMarkerAnnotation annotation = method.getDeclaredAnnotation(PrefixMarkerAnnotation.class);
        Map<String, Object> map = converter.convert(annotation).to(new TypeReference<Map<String, Object>>() {});
        assertTrue((Boolean)map.get(""org.foo.bar.prefix.marker.annotation""));
    }
{code}
The map contains {{prefix.marker.annotation=true}}.",13/Feb/19 20:33;rotty3000;See https://svn.apache.org/repos/asf/felix/trunk@1853533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lists are not recognized as typed properties,FELIX-6042,13212847,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,cfiehe,cfiehe,30/Jan/19 15:58,31/Jan/19 13:01,13/Mar/19 22:56,31/Jan/19 13:01,,,,,utils-1.11.4,,Utils,,,0,,,,,,"The issue is related to TypedProperties and appears only when lists are deserialized. It was originally reported by [tom@quarendon.net|mailto:tom@quarendon.net] (Apparent bug storing collection in org.apache.felix.utils.properties.TypedProperties) in the Felix mailing list.

The class org.apache.felix.utils.properties.Properties.PropertiesReader uses an incomplete regular expression, so that lists are not recognized as typed properties and get interpreted as strings.

Extending the regular expression will fix the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-01-30 16:09:10.382,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Jan 31 13:01:54 UTC 2019,,,,,,0|yi0hl4:,9223372036854775807,,,,,,,,"30/Jan/19 16:09;githubbot;GitHub user cfiehe opened a pull request:

    https://github.com/apache/felix/pull/176

    FELIX-6042: Fix the regular expression, so that lists get recognized …

    …as typed properties.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cfiehe/felix FELIX-6042

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/176.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #176
    
----
commit 3bea403475bbd66fd3eb82e1765901d542c10d7a
Author: Christoph Fiehe <christoph.fiehe@...>
Date:   2019-01-30T16:08:46Z

    FELIX-6042: Fix the regular expression, so that lists get recognized as typed properties.

----
","31/Jan/19 12:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/176
",31/Jan/19 13:01;bosschaert;Thanks for the patch [~cfiehe]! It's applied in http://svn.apache.org/viewvc?view=revision&revision=1852591,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wc command should be compliant with posix ones,FELIX-6033,13210833,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jbonofre,jbonofre,jbonofre,21/Jan/19 20:36,22/Jan/19 16:26,13/Mar/19 22:56,22/Jan/19 16:26,gogo.jline-1.1.0,gogo.jline-1.1.2,,,gogo.jline-1.1.4,,Gogo JLine,,,0,,,,,,"The Posix {{wc}} command formatting is not fully correct. For instance, a simple:

{code}
echo ""foo\nbar""|wc -l
{code}

displays:

{code}
       2     2
{code}

So the output formatting is not correct (result is displayed twice) and {{wc}} can't be easily used in scripting.

To be compliant with standard Posix {{wc}} command, the output should be:

{code}
2
{code}

I'm adding tests and fixes.",,,,,,,,,,KARAF-6060,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-01-22 14:07:27.217,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Jan 22 16:26:43 UTC 2019,,,,,,0|yi057k:,9223372036854775807,,,,,,,,"22/Jan/19 14:07;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/felix/pull/166

    [FELIX-6033] Align Felix Gogo wc posix action compliant with concrete posix one

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/felix FELIX-6033

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/166.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #166
    
----
commit 2ff4867362fb0cc7bb3783a0c8b28510b2feb58a
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2019-01-22T14:06:10Z

    [FELIX-6033] Align Felix Gogo wc posix action compliant with concrete posix one

----
","22/Jan/19 16:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/166
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Header in gogo.jline causing maven-bundle-plugin failure,FELIX-6030,13209909,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jbonofre,jbonofre,jbonofre,16/Jan/19 14:04,22/Jan/19 14:56,13/Mar/19 22:56,22/Jan/19 14:56,gogo.jline-1.1.2,,,,gogo.jline-1.1.4,,Gogo JLine,,,0,,,,,,"In the https://svn.apache.org/viewvc?view=revision&revision=1849343 revision, Gogo JLine bundle {{Activator}} now contains:

{code}
@Header(name = Constants.BUNDLE_ACTIVATOR, value = ""${@class}"")
{code}

In Karaf, we ""wrap"" {{gogo.jline}} in Karaf {{shell.core}}:

{code}
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Import-Package>
                            org.osgi.service.event;resolution:=optional,
                            org.apache.karaf.branding;resolution:=optional,
                            !org.apache.felix.gogo.jline*,
                            !org.apache.sshd.*,
                            *   
                        </Import-Package>
                        <Export-Package>
                            org.apache.karaf.shell.api.*;version=${project.version},
                            org.apache.karaf.shell.support.*;version=${project.version},
                            org.apache.felix.service.command,
                            org.apache.felix.service.threadio
                        </Export-Package>
                        <Private-Package>
                            org.apache.karaf.service.guard.tools,
                            org.apache.karaf.shell.impl.*,
                            org.apache.karaf.util,
                            org.apache.karaf.util.filesstream,
                            org.apache.karaf.util.jaas,
                            org.apache.karaf.util.tracker,
                            org.apache.felix.utils.properties,
                            org.apache.felix.utils.extender,
                            org.apache.felix.utils.manifest,
                            org.apache.felix.gogo.jline,
                            org.apache.felix.gogo.runtime,
                            org.apache.felix.gogo.runtime.threadio,
                            org.apache.felix.service.command,
                            org.apache.felix.service.threadio,
                        </Private-Package>
                        <Provide-Capability>
                            osgi.service;effective:=active;objectClass=org.apache.karaf.shell.api.console.SessionFactory
                        </Provide-Capability>
                        <Bundle-Activator>
                            org.apache.karaf.shell.impl.console.osgi.Activator
                        </Bundle-Activator>
                        <Main-Class>
                            org.apache.karaf.shell.impl.console.standalone.Main
                        </Main-Class>
                    </instructions>
                    <unpackBundle>true</unpackBundle>
                </configuration>
            </plugin>
{code}

Since the introduction of {{@Header}} in Felix Gogo JLine, the build fails with:

{code}
[ERROR] Bundle org.apache.karaf.shell:org.apache.karaf.shell.core:bundle:4.2.3-SNAPSHOT : The Bundle-Activator header only supports a single type. The following types were found: org.apache.karaf.shell.impl.console.osgi.Activator,org.apache.felix.gogo.jline.Activator. This usually happens when a macro resolves to multiple types
[ERROR] Error(s) found in bundle configuration
{code}

[~rotty3000] do you know a workaround in the {{maven-bundle-plugin}} about that ? If not, do you mind if I remove {{@Header}} from Gogo JLine Activator ?

Thanks.
JB",,,,,,,,,,KARAF-6096,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-01-16 14:18:10.555,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Jan 22 14:55:50 UTC 2019,,,,,,0|y002ko:,9223372036854775807,,,,,,,,"16/Jan/19 14:18;rotty3000;Sigh... I suppose you can remove it. I hope this type of issue doesn't go far into many bundles in Karaf, particularly as bundle annotations become more prolific.","16/Jan/19 18:12;rotty3000;Ok, so let's remove the header for right now, but I'm going to add a feature to bnd to allow a filter which opts out of per-class bundle annotation scanning. That should offer a better path long term.","16/Jan/19 19:30;jbonofre;[~rotty3000] thanks for the update. I don't think we have such case in Karaf: shell is a little bit special as it wraps several dependencies.

OK, I will submit a PR to remote the annotation then.

Thanks Ray !","22/Jan/19 14:17;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/felix/pull/167

    [FELIX-6030] Remove @Header on Gogo JLine Activator to avoid issue in Apache Karaf shell

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/felix FELIX-6030

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/167.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #167
    
----
commit b8468b585a4d3b806cd0f2305b27c92b10b00473
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2019-01-22T14:16:14Z

    [FELIX-6030] Remove @Header on Gogo JLine Activator to avoid issue in Apache Karaf shell

----
","22/Jan/19 14:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/167
",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Converter could not convert to Interfaces, which only has methods from inherited Interfaces",FELIX-6020,13208527,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,bischofs@jena.de,bischofs@jena.de,09/Jan/19 12:01,21/Jan/19 11:57,13/Mar/19 22:56,21/Jan/19 11:57,converter-1.0.2,,,,converter-1.0.4,,Converter,,,0,,,,,,"Hi,

the Converter could not convert to an Interfaces, when the Interface only has methods from inherited other Interfaces. 

Here is a TestCase:
{code:java}
import static org.junit.Assert.assertEquals;

import java.util.HashMap;
import java.util.Map;

import org.junit.Test;
import org.osgi.util.converter.Converter;
import org.osgi.util.converter.Converters;

public class ConvTest {
    interface InterfaceFoo {
        String foo();
    }

    interface InterfaceFooBar extends InterfaceFoo {
        String bar();
    }

    interface InterfaceFooNon extends InterfaceFoo {
        // Empty
    }

    private static final String fooValue = ""foofoo"";
    private static final String barValue = ""barbar"";

    final Converter converter = Converters.standardConverter();


    @Test
    public void testFooPure() throws Exception {

        final Map<String, Object> map = new HashMap<String, Object>();
        map.put(""foo"", fooValue);
        final InterfaceFoo iFoo = converter.convert(map).to(InterfaceFoo.class);
        assertEquals(fooValue, iFoo.foo());

    }


    @Test
    public void testFooBar() throws Exception {

        final Map<String, Object> map = new HashMap<String, Object>();
        map.put(""foo"", fooValue);
        map.put(""bar"", barValue);

        final InterfaceFooBar iFooBar = converter.convert(map).to(InterfaceFooBar.class);
        assertEquals(fooValue, iFooBar.foo());
        assertEquals(barValue, iFooBar.bar());

    }


    @Test
    public void testFooNon() throws Exception {

        final Map<String, Object> map = new HashMap<String, Object>();
        map.put(""foo"", fooValue);

        final InterfaceFooNon iFooNon = converter.convert(map).to(InterfaceFooNon.class);
        assertEquals(fooValue, iFooNon.foo());

    }

}{code}
 

 

Stacktrace
{code:java}
org.osgi.util.converter.ConversionException: Cannot convert foo to interface de.jena.servicehub.doc.latex.itest.ConvTest$InterfaceFooNon
    at org.osgi.util.converter.ConvertingImpl.to(ConvertingImpl.java:212)
    at org.osgi.util.converter.CustomConverterImpl$ConvertingWrapper.to(CustomConverterImpl.java:176)
    at org.osgi.util.converter.CustomConverterImpl$ConvertingWrapper.to(CustomConverterImpl.java:139)
    at org.osgi.util.converter.ConvertingImpl.convertMapEntryToSingleValue(ConvertingImpl.java:260)
    at org.osgi.util.converter.ConvertingImpl.to(ConvertingImpl.java:197)
    at org.osgi.util.converter.CustomConverterImpl$ConvertingWrapper.to(CustomConverterImpl.java:176)
    at org.osgi.util.converter.CustomConverterImpl$ConvertingWrapper.to(CustomConverterImpl.java:139)
    at org.osgi.util.converter.ConvertingImpl.convertMapToSingleValue(ConvertingImpl.java:236)
    at org.osgi.util.converter.ConvertingImpl.to(ConvertingImpl.java:195)
    at org.osgi.util.converter.CustomConverterImpl$ConvertingWrapper.to(CustomConverterImpl.java:176)
    at org.osgi.util.converter.CustomConverterImpl$ConvertingWrapper.to(CustomConverterImpl.java:139)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-01-21 11:57:16.585,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jan 21 11:57:16 UTC 2019,,,,,,0|u00nxk:,9223372036854775807,,,,,,,,21/Jan/19 11:57;bosschaert;Resolved with FELIX-6031,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gogo Command bundle should not include org.osgi.service.log classes,FELIX-5143,12922536,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,xfournet,xfournet,16/Dec/15 22:35,06/Jan/19 11:59,13/Mar/19 22:56,03/Jan/19 17:54,,,,,gogo.command-1.1.0,,Gogo Command,,,0,,,,,,"The classes of org.osgi.service.log are present in the Gogo command jar files.
The bundle should instead import this package. It seems that there was a confusion between Export-Package and Import-Package in the BND directives in pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-12-16 22:42:33.581,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Jan 06 11:59:50 UTC 2019,,,,,,0|i2q093:,9223372036854775807,,,,,,,,"16/Dec/15 22:42;githubbot;GitHub user xfournet opened a pull request:

    https://github.com/apache/felix/pull/49

    FELIX-5143 import org.osgi.service.log package instead of exporting it

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/xfournet/felix FELIX-5143

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/49.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #49
    
----
commit 94839d854d15b854e84a4080e8f2a53165c01c68
Author: Xavier Fournet <xavier.fournet@gmail.com>
Date:   2015-12-16T22:41:34Z

    FELIX-5143 import org.osgi.service.log package instead of exporting it

----
",11/Mar/18 14:46;xfournet;I rebased and improved the pull request. Could you please review it and include it into next release please ?,"02/May/18 17:24;xfournet;[~gnt]

The fix version is stuck on gogo.command-0.18.0 which seems outdated since next version is gogo.command-1.1.0

Could the fix version be updated to gogo.command-1.1.0 ? and i hope that finally this fix will be included :)

 ",03/Jan/19 17:54;rotty3000;This issue was solved in a slightly different way but to the same effect through FELIX-5958,"06/Jan/19 11:59;githubbot;Github user xfournet closed the pull request at:

    https://github.com/apache/felix/pull/49
",,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.felix.gogo.command: depends on org.osgi.* in scope <compile> should be <provided> ?,FELIX-2977,12508788,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,andrei.pozolotin,andrei.pozolotin,31/May/11 04:20,03/Jan/19 18:05,13/Mar/19 22:56,03/Jan/19 18:05,,,,,,,Gogo Command,,,0,,,,,,"org.apache.felix.gogo.command: depends on org.osgi.* in scope <compile> should be <provided> ?

http://search.maven.org/#artifactdetails|org.apache.felix|org.apache.felix.gogo.command|0.8.0|bundle

  <dependencies>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.gogo.runtime</artifactId>
      <version>0.8.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.bundlerepository</artifactId>
      <version>1.6.0</version>
    </dependency>
  </dependencies>
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56009,,,2011-05-31 04:20:40.0,,,,,,0|i1audz:,271389,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven-bundle-plugin generates wrong osgi.ee requirement on JDK 10,FELIX-5879,13169950,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,gjoranv,gjoranv,03/Jul/18 22:53,22/Dec/18 00:38,13/Mar/19 22:56,22/Dec/18 00:38,maven-bundle-plugin-3.5.0,,,,,,Maven Bundle Plugin,,,0,,,,,,"When building with JDK 10, maven-bundle-plugin (3.5.1) generates the following manifest attribute:

{{Require-Capability: osgi.ee;filter:=""(osgi.ee=UNKNOWN)""}}

See [this post on Stackoverflow|https://stackoverflow.com/questions/51138244/maven-bundle-plugin-osgi-ee-unknown] for details. According to the answer from BJ Hargrave, I tried adding an explicit dependency to bndlib 4.0 in the plugin declaration in pom.xml, and got the correct attribute in the manifest:

{{Require-Capability: osgi.ee;filter:=""(&(osgi.ee=JavaSE)(version=10.0))""}}

It would be great if you could release a version of the plugin with {{bndlib}} upgraded to version 4, in order to support JDK 10 without pom.xml hacks.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-10-22 03:30:05.061,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Dec 22 00:07:04 UTC 2018,,,,,,0|i3visf:,9223372036854775807,,,,,,,,"22/Oct/18 03:30;rotty3000;Can you verify this with release 4.1.0? By moving to bnd 4.1.0 which added support for up to Java 11, this should be addressed.","22/Dec/18 00:07;gjoranv;[~rotty3000], it works fine with 4.1.0. You can resolve this issue. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
errorHandler not consulted for conversions implemented via proxies,FELIX-6006,13205733,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,bosschaert,bosschaert,20/Dec/18 13:56,20/Dec/18 15:41,13/Mar/19 22:56,20/Dec/18 15:41,converter-1.0.2,,,,converter-1.0.4,,Converter,,,0,,,,,,See here for a description of the issue: https://www.mail-archive.com/dev@felix.apache.org/msg47246.html,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Dec 20 15:41:15 UTC 2018,,,,,,0|u006y0:,9223372036854775807,,,,,,,,20/Dec/18 15:41;bosschaert;Resolved with: http://svn.apache.org/viewvc?view=revision&revision=1849408,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gogo-command has mandatory dependency on bundlerepository,FELIX-5392,13017164,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,njbartlett,njbartlett,02/Nov/16 10:45,18/Dec/18 19:00,13/Mar/19 22:56,12/Dec/16 08:39,,,,,bundlerepository-2.0.10,gogo.command-1.0.2,Gogo Command,,,1,,,,,,"org.apache.felix.gogo.command version 1.0.0 has a mandatory dependency on {{org.apache.felix.bundlerepository}}.

It looks like this was unintentional, or perhaps intended to be optional, since there is also a DynamicImport-Package for that package, which is entirely redundant.

If there are Gogo commands relating to OBR functionality, they should be published from the bundlerepository bundle itself, rather than from the gogo.command bundle which is used by everybody.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-11-14 21:23:34.67,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Dec 12 08:39:16 UTC 2016,,,,,,0|i35puv:,9223372036854775807,,,,,,,,"14/Nov/16 21:23;gnt;The problem has been caused by the switch from the maven bundle plugin 2.3.5 to 3.2.0.
With 2.3.5, it seems the dynamic import was causing the import not to be added.

I agree the commands should be moved to bundlerepository (if anybody is actually using this bundle).  Fwiw, the bundlerepository bundle contains a ObrCommandImpl class which uses the org.apache.felix.shell bundle (last release in 2012).
I suppose at some point, a few bundles need to be officially deprecated ;-)","12/Dec/16 08:39;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	R	gogo/command/src/main/java/org/apache/felix/gogo/command/OBR.java => bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/ObrGogoCommand.java
	M	bundlerepository/pom.xml
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/Activator.java
	M	gogo/command/pom.xml
	M	gogo/command/src/main/java/org/apache/felix/gogo/command/Activator.java
Committed r1773751
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hashcode check doesn't work with fragment,FELIX-5997,13203761,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jbonofre,jbonofre,jbonofre,11/Dec/18 16:23,11/Dec/18 17:45,13/Mar/19 22:56,11/Dec/18 17:45,utils-1.11.0,,,,utils-1.11.2,,Utils,,,0,,,,,,"With the introduction of hashcode in {{AbstractCapabilityRequirement}}, utils is not able to deal with fragment.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-12-11 16:25:54.341,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 11 17:44:34 UTC 2018,,,,,,0|s01elk:,9223372036854775807,,,,,,,,"11/Dec/18 16:25;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/felix/pull/164

    [FELIX-5997] Remove hashcode and equals from AbstractCapabilityRequirement to deal with fragment

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/felix FELIX-5997

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/164.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #164
    
----
commit 1a74794ae49aceae5a4c45893f31910af0363d38
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2018-12-11T16:24:00Z

    [FELIX-5997] Remove hashcode and equals from AbstractCapabilityRequirement to deal with fragment

----
","11/Dec/18 17:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/164
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The Felix Web Console stores unsalted hashed password,FELIX-5934,13186549,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,asanso,asanso,21/Sep/18 06:06,20/Nov/18 08:26,13/Mar/19 22:56,13/Nov/18 10:38,,,,,webconsole-4.3.10,,Web Console,,,0,,,,,,"The Felix Web Console currently stores unsalted hashed password [0]

This violates common security hygiene and industry standard.

The suggestion is to either add a random salt or use a stronger Password Storage algorithm e.g. *Argon2*  or *PBKDF2*  *.* See [1]

 

 [0][https://github.com/apache/felix/blob/0bfe4ca7ebc6e81f0a9f4186a7ef58df4d92b4c9/webconsole/src/main/java/org/apache/felix/webconsole/internal/servlet/OsgiManager.java#L167]

[1] https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet",,,,,,,,,,,,,,,FELIX-5985,,,,,,15/Oct/18 11:13;asanso;FELIX-5934-patch.txt;https://issues.apache.org/jira/secure/attachment/12943926/FELIX-5934-patch.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2018-10-15 12:05:22.053,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Nov 13 11:03:11 UTC 2018,,,,,,0|i3yc8f:,9223372036854775807,,,,,,,,15/Oct/18 11:13;asanso;[~cziegeler] I attached a proposed patch. I improved the current hashing algorithm adding salting and hashing iterations.,"15/Oct/18 12:05;chris@die-schneider.net; If we have a fixed default password then I would keep it in the source code as plain text to make sure it is obvious that this password is not secure. 

I don't think hashing the default password makes any sense. It is just security by obscurity. Hashing a password only makes sense if it is secret. 

 ","15/Oct/18 13:35;asanso;[~chris@die-schneider.net] I agree, this is not part of my patch indeed.",13/Nov/18 10:38;cziegeler;Thanks for the patch [~asanso]. I'Ve applied it in rev 1846501.,13/Nov/18 10:52;asanso;[~cziegeler] thanks a lot for applying . I would not call it completely resolved though. There is still the password initialization part to solve... But maybe we can handle in a different ticket ?,"13/Nov/18 11:03;cziegeler;[~asanso] Different ticket sounds good to me, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,
Exception on changecount timer timeout,FELIX-5959,13190689,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rotty3000,rotty3000,rotty3000,10/Oct/18 16:35,22/Oct/18 11:05,13/Mar/19 22:56,11/Oct/18 16:42,,,,,scr-2.1.12,,Declarative Services (SCR),,,0,,,,,,"When running a large system with complex and deeply nested component graph, the changecount timer can time out resulting in exceptions like:

{code}
    [junit] java.lang.IllegalStateException: Timer already cancelled.
    [junit] 	at java.util.Timer.sched(Timer.java:397)
    [junit] 	at java.util.Timer.schedule(Timer.java:193)
    [junit] 	at org.apache.felix.scr.impl.ComponentRegistry.updateChangeCount(ComponentRegistry.java:722)
    [junit] 	at org.apache.felix.scr.impl.BundleComponentActivator.updateChangeCount(BundleComponentActivator.java:777)
    [junit] 	at org.apache.felix.scr.impl.manager.AbstractComponentManager.setState(AbstractComponentManager.java:1420)
    [junit] 	at org.apache.felix.scr.impl.manager.AbstractComponentManager.deactivateInternal(AbstractComponentManager.java:806)
    [junit] 	at org.apache.felix.scr.impl.manager.DependencyManager.deactivateComponentManager(DependencyManager.java:2330)
    [junit] 	at org.apache.felix.scr.impl.manager.DependencyManager.access$400(DependencyManager.java:56)
    [junit] 	at org.apache.felix.scr.impl.manager.DependencyManager$SingleStaticCustomizer.removedService(DependencyManager.java:1125)
    [junit] 	at org.apache.felix.scr.impl.manager.DependencyManager$SingleStaticCustomizer.removedService(DependencyManager.java:1007)
    [junit] 	at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.customizerRemoved(ServiceTracker.java:1242)
    [junit] 	at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.customizerRemoved(ServiceTracker.java:1137)
    [junit] 	at org.apache.felix.scr.impl.manager.ServiceTracker$AbstractTracked.untrack(ServiceTracker.java:997)
    [junit] 	at org.apache.felix.scr.impl.manager.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:1176)
    [junit] 	at org.apache.felix.scr.impl.BundleComponentActivator$ListenerInfo.serviceChanged(BundleComponentActivator.java:125)
    [junit] 	at org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener.serviceChanged(FilteredServiceListener.java:109)
    [junit] 	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEventPrivileged(ServiceRegistry.java:891)
    [junit] 	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.publishServiceEvent(ServiceRegistry.java:804)
    [junit] 	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:222)
    [junit] 	at org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.unregisterServices(ServiceRegistry.java:668)
    [junit] 	at org.eclipse.osgi.internal.framework.BundleContextImpl.close(BundleContextImpl.java:96)
    [junit] 	at org.eclipse.osgi.internal.framework.EquinoxBundle.stopWorker0(EquinoxBundle.java:1018)
    [junit] 	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.stopWorker(EquinoxBundle.java:359)
    [junit] 	at org.eclipse.osgi.container.Module.doStop(Module.java:636)
    [junit] 	at org.eclipse.osgi.container.Module.stop(Module.java:498)
    [junit] 	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.decStartLevel(ModuleContainer.java:1723)
    [junit] 	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1642)
    [junit] 	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1555)
    [junit] 	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
    [junit] 	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
    [junit] 	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)
{code}

There are two issues:
- the timeout is not configurable (hard coded to {{5000L}})
- the exception is not handled in a safe way (i.e. logged to an appropriate log which ends up in the system log)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-10-18 05:47:23.07,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Oct 22 11:05:26 UTC 2018,,,,,,0|i3z1m7:,9223372036854775807,,,,,,,,10/Oct/18 17:13;rotty3000;It can also fail by trying to schedule an update after the timer is already cancelled.,11/Oct/18 16:42;rotty3000;See https://svn.apache.org/repos/asf/felix/trunk@1843483,"18/Oct/18 05:47;cziegeler;[~rotty3000] I fail to see how this can happen as the code is synchronized (creating the timer, cancelling it and scheduling)?","22/Oct/18 11:05;cziegeler;Ray just explained it to, this can basically happening if for example configuration admin starts sending out configuration events and down the change some receiver is shutting down configuration admin. In that case the thread has already the lock",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception during event processing leaves CM threads alive and holding the JVM running during framework shutdown,FELIX-5962,13190982,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rotty3000,rotty3000,rotty3000,11/Oct/18 16:53,11/Oct/18 18:01,13/Mar/19 22:56,11/Oct/18 18:01,,,,,configadmin-1.9.10,,Configuration Admin,,,0,,,,,,"Under heave load a race condition exists and the side effect is that event processing results in an uncaught exception that will potentially leave the CM thread alive, preventing the framework from shutting down properly.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Oct 11 18:01:35 UTC 2018,,,,,,0|i3z3fb:,9223372036854775807,,,,,,,,11/Oct/18 18:01;rotty3000;See https://svn.apache.org/repos/asf/felix/trunk@1843578,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-bundle-plugin fails to parse meta-persistence,FELIX-5794,13142257,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jbonofre,jbonofre,03/Mar/18 07:07,08/Oct/18 20:32,13/Mar/19 22:56,08/Jun/18 15:27,maven-bundle-plugin-3.4.0,maven-bundle-plugin-3.5.0,,,maven-bundle-plugin-4.0.0,,Maven Bundle Plugin,,,2,,,,,,"Since {{maven-bundle-plugin}} 3.4.0 (and the update to bnd 3.4.0), the plugin fails to build bundle containing {{<Meta-Persistence/>}}. NB: the same bundle builds fine with {{maven-bundle-plugin}} 3.3.0.

The cause is:

{code}
[INFO] --- maven-bundle-plugin:3.5.0:bundle (default-bundle) @ karaf-jpa-example-provider ---
Output: [Provide-Capability: osgi.service;effective:=active;objectClass=javax.persistence.EntityManager;osgi.unit.name=""booking"", Provide-Capability: osgi.service;effective:=active;objectClass=org.apache.aries.jpa.template.JpaTemplate;osgi.unit.name=""booking"", Require-Capability: osgi.service;effective:=active;objectClass=javax.sql.DataSource;filter:=""(osgi.jndi.service.name=booking)"", DynamicImport-Package: org.hibernate.proxy;javassist.util.proxy, Provide-Capability: osgi.service;effective:=active;objectClass=javax.persistence.EntityManagerFactory;osgi.unit.name=""booking"", Provide-Capability: osgi.service;effective:=active;objectClass=org.apache.aries.jpa.supplier.EmSupplier;osgi.unit.name=""booking"", Import-Package: org.hibernate.proxy;javassist.util.proxy;resolution:=optional, Require-Capability: osgi.extender;osgi.extender=aries.jpa, Require-Capability: osgi.service;effective:=active;objectClass=javax.persistence.spi.PersistenceProvider;javax.persistence.provider=org.hibernate.jpa.HibernatePersistenceProvider, Require-Capability: osgi.service;effective:=active;objectClass=javax.transaction.TransactionManager;]
[ERROR] Bundle org.apache.karaf.examples:karaf-jpa-example-provider:bundle:4.2.0-SNAPSHOT : Header contains name field after attribute or directive: null from osgi.service;effective:=active;objectClass=javax.sql.DataSource;filter:=""(osgi.jndi.service.name=booking)"",osgi.extender;osgi.extender=aries.jpa,osgi.service;effective:=active;objectClass=javax.persistence.spi.PersistenceProvider;javax.persistence.provider=org.hibernate.jpa.HibernatePersistenceProvider,osgi.service;effective:=active;objectClass=javax.transaction.TransactionManager;. Name fields must be consecutive, separated by a ';' like a;b;c;x=3;y=4
[ERROR] Error(s) found in bundle configuration
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-03-23 14:48:56.176,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Jun 08 15:27:46 UTC 2018,,,,,,0|i3qtmn:,9223372036854775807,,,,,,,,"23/Mar/18 14:48;tuomas_kiviaho;This is caused by JpaPlugin. bnd seems to be picky about {{Require-Capability}} ending with ; I considered this to be a blocker for whole \{{JpaPlugin}} because {{jpa.xsl}} contains the following {{concat}} that causes this. 

The fix would consist of using http://www.xsltfunctions.com/xsl/fn_string-join.html to mend together interface and attributes + nl

{code:xml}
<xsl:template name=""service-capability"">
<xsl:param name=""interface""/>
<xsl:param name=""attributes"" select=""''""/>
<xsl:value-of select=""concat('Provide-Capability: osgi.service;effective:=active;',
'objectClass=', $interface, ';',
$attributes,
$nl)""/>
</xsl:template>

<xsl:template name=""service-requirement"">
<xsl:param name=""interface""/>
<xsl:param name=""attributes"" select=""''""/>
<xsl:value-of select=""concat('Require-Capability: osgi.service;effective:=active;',
'objectClass=', $interface, ';',
$attributes,
$nl)""/>
</xsl:template>
{code}
 ","24/Mar/18 05:10;tuomas_kiviaho;There seems to be a {{System.err}} in JpaPlugin. Could that be replaced with proper logging. BND has a reporter but this is what it suggests nowadays for debugging (see below). I don't know if that approach would honor Maven debug flag but now the output - although being helpful - is in fact quite intrusive. 

{code:java}
/**
	 * @deprecated Use SLF4J Logger.debug instead.
	 */
	@Deprecated
	public void trace(String msg, Object... parms) {
{code}","24/Mar/18 06:44;jbonofre;Thanks, I think I have a fix ready that I'm testing right now. I will create the PR soon and will let you know.","24/Mar/18 06:53;tuomas_kiviaho;Although there is a workaround to this in a form of a property, it seems that there is no directive variant (like {{-jpa-enable}}) available of it so the property will end up into the manifest. One way to circumvent this is of course to the plugin is all-together  via {{<_disable-plugin>org.apache.felix.bundleplugin.JpaPlugin</_disable-plugin>}} but that can't be added to an external BND file

{code:java}
        transformer.setParameter( ""jpa-enable"", analyzer.getProperty( ""jpa-enable"", ""true"" ) );
        transformer.setParameter( ""jpa-implementation"", analyzer.getProperty( ""jpa-implementation"", ""aries"" ) );
        transformer.setParameter( ""jpa-datasource-req"", analyzer.getProperty( ""jpa-datasource-req"", ""true"" ) );
{code}","08/Jun/18 15:27;gnt;{code}
Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	tools/maven-bundle-plugin/src/main/java/org/apache/felix/bundleplugin/JpaPlugin.java
	M	tools/maven-bundle-plugin/src/main/resources/org/apache/felix/bundleplugin/jpa.xsl
	M	tools/maven-bundle-plugin/src/test/java/org/apache/felix/bundleplugin/JpaPluginTest.java
Committed r1833192
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration _updates_ are ignored when using a NotCachablePersistenceManager,FELIX-5949,13189178,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rotty3000,rotty3000,rotty3000,03/Oct/18 14:13,03/Oct/18 20:04,13/Mar/19 22:56,03/Oct/18 20:04,,,,,configadmin-1.9.8,,Configuration Admin,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Oct 03 20:04:29 UTC 2018,,,,,,0|i3ysdz:,9223372036854775807,,,,,,,,03/Oct/18 20:04;rotty3000;See https://svn.apache.org/repos/asf/felix/trunk@1842756,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassLoader memory leak,FELIX-5947,13188566,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rotty3000,rotty3000,rotty3000,01/Oct/18 16:10,01/Oct/18 16:34,13/Mar/19 22:56,01/Oct/18 16:34,,,,,scr-2.1.10,,Declarative Services (SCR),,,0,,,,,,Occurs with multiple re-deployments of the same bundles.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Oct 01 16:34:27 UTC 2018,,,,,,0|i3yomf:,9223372036854775807,,,,,,,,01/Oct/18 16:11;rotty3000;See https://issues.liferay.com/browse/LPS-81754 for origin.,01/Oct/18 16:34;rotty3000;https://svn.apache.org/repos/asf/felix/trunk@1842515,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DM not working with latest Felix Framework,FELIX-5938,13186914,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,23/Sep/18 22:45,26/Sep/18 16:52,13/Mar/19 22:56,26/Sep/18 16:52,,,,,,,Dependency Manager,,,0,,,,,,"When using the latest Felix framework, DM is not resolved:
{code:java}
org.osgi.framework.BundleException: Unable to resolve org.apache.felix.dependencymanager [5](R 5.0): missing requirement [org.apache.felix.dependencymanager [5](R 5.0)] osgi.wiring.package; (&(osgi.wiring.package=org.osgi.framework)(version>=1.8.0)(!(version>=1.9.0))) Unresolved requirements: [[org.apache.felix.dependencymanager [5](R 5.0)] osgi.wiring.package; (&(osgi.wiring.package=org.osgi.framework)(version>=1.8.0)(!(version>=1.9.0)))]{code}
Surprisingly, bnd generates an odd import range and excludes the 1.9 version.
 Fixing the DM bnd like this resolves the issue:
{code:java}
Import-Package: !org.junit,!org.mockito.*,org.osgi.framework;version=""[1.8, 2)"",*
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Sep 26 16:52:58 UTC 2018,,,,,,0|i3yehb:,9223372036854775807,,,,,,,,26/Sep/18 16:52;pderop;committed in revision 1842034.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when project artifact has not been built,FELIX-5940,13187025,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,24/Sep/18 12:40,24/Sep/18 12:43,13/Mar/19 22:56,24/Sep/18 12:43,osgicheck-maven-plugin 0.1.0,,,,osgicheck-maven-plugin 0.2.0,,Tooling,,,0,,,,,,"Caused by: java.lang.NullPointerException
at java.util.zip.ZipFile.<init> (ZipFile.java:213)
at java.util.zip.ZipFile.<init> (ZipFile.java:155)
at java.util.jar.JarFile.<init> (JarFile.java:166)
at java.util.jar.JarFile.<init> (JarFile.java:130)
at org.apache.felix.maven.osgicheck.impl.featureutil.ManifestUtil.getManifest (ManifestUtil.java:42)
at org.apache.felix.maven.osgicheck.impl.CheckMojo.doExecute (CheckMojo.java:149)
at org.apache.felix.maven.osgicheck.impl.CheckMojo.execute (CheckMojo.java:126)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Sep 24 12:43:23 UTC 2018,,,,,,0|i3yf5z:,9223372036854775807,,,,,,,,24/Sep/18 12:43;cziegeler;Added extra check in rev 1841833,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FrameworkStartCheck does not work by default on bndtools,FELIX-5903,13177662,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,08/Aug/18 12:47,09/Aug/18 13:03,13/Mar/19 22:56,09/Aug/18 13:03,systemready-0.2.0,,,,systemready-0.4.0,,System Ready,,,0,,,,,,"Bndtools uses only one framework start level ""1"" and default bundle start level ""1"".

The current code in FrameworkStartCheck checks for default bundle level +1. So this check never succeeds. 

I propose to fix this by expecting the framework start level to be default bundle start level by default.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2018-08-08 12:47:46.0,,,,,,0|i3wtrr:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing uses constraints for OSGi spec packages,FELIX-5864,13165542,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,timothyjward,timothyjward,12/Jun/18 11:42,09/Jul/18 10:26,13/Mar/19 22:56,09/Jul/18 10:26,framework-5.6.10,,,,framework-6.0.0,,Framework,,,0,,,,,,"The System bundle is required to export a number of OSGi spec packages. Some of these must come from the system bundle, but others (for example, org.osgi.service.resolver) can be provided by other bundles as well. It is important, therefore, that the framework defines uses constraints on these packages.

Specifically ""org.osgi.service.resolver"" uses ""org.osgi.resource"" and both are available as separate installable bundles. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Jun 12 14:49:20 UTC 2018,,,,,,0|i3url3:,9223372036854775807,,,,,,,,"12/Jun/18 14:49;timothyjward;Looking now it appears that this may be fixed in trunk, but that still leaves 5.6.x broken, and there are no snapshots being published of the latest code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LogService lock contention under heavy load,FELIX-3623,12602139,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jajans,jajans,jajans,08/Aug/12 08:42,03/Jul/18 19:35,13/Mar/19 22:56,08/Aug/12 08:51,log-1.0.1,,,,log-1.2.0,,Log Service,,,0,,,,,,"Under heavy load, the LogService has severe lock contention in its LogListenerThread due to too coarse locks on m_entriesToDeliver and m_listeners. Also due to the 'single delivery' strategy, the performance of this service isn't that well under heavy load, it would be better to flush all available entries to all listeners in a single shot...

",,,,,,,,,,,,,,,,,,,,,08/Aug/12 08:43;jajans;lock-granularity.patch;https://issues.apache.org/jira/secure/attachment/12539793/lock-granularity.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,246064,,,Wed Aug 08 08:51:45 UTC 2012,,,,,,0|i07gqf:,41477,,,,,,,,08/Aug/12 08:43;jajans;Attached a patch that will fix the lock contention and improves the performance by flushing multiple entries to all interested listeners.,"08/Aug/12 08:51;jajans;Applied the patch myself as I've got commit rights...
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
User friendly syntax for floats and doubles in FileInstall,FELIX-5306,12989869,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,munene.kiruja,munene.kiruja,15/Jul/16 17:44,28/Jun/18 15:14,13/Mar/19 22:56,08/Sep/17 09:24,,,,,fileinstall-3.6.2,utils-1.10.2,File Install,,,1,,,,,,"The format for specifying a float in the .config format is <key>=F""<float value> and similarly for doubles but with the type character D.

When the floats and doubles are encountered in the config, java.lang.NumberFormatException is thrown with the message like:

{code}
java.lang.NumberFormatException: For input string: ""400.333""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
{code} 

The code is actually parsing using Integer and Long classes!! ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-08-17 18:52:09.313,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Jun 28 08:24:43 UTC 2018,,,,,,0|i311p3:,9223372036854775807,,,,,,,,"17/Aug/17 18:52;emily.berk;I think that Floats and Doubles must be specified in the ""IEEE 754 floating-point bit layout"" format. See {{org.apache.felix.utils.properties.ConfigurationHandler#writeSimple}}.

Documentation should be updated to explain this expected syntax.",17/Aug/17 19:51;mailings@hupie.com;See also #5642,"06/Sep/17 12:06;gnt;Fwiw, I don't think this is a regression.  It was the case previously too.
[~emily.berk] is right about the format used.

","06/Sep/17 13:54;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/ConfigInstallerTest.java
Committed r1807487

I've added a unit test demonstrating this feature.
I agree this is definitely not an obvious syntax... nor very user friendly, as the 400.333F needs to be written F""1137191584"".","08/Sep/17 09:09;gnt;The previous syntax will be kept for compatibility.
However, if the quoted string contains a dot character ('.'), it will be interpreted as a user-friendly representation of the float / double.","08/Sep/17 09:24;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	utils/src/main/java/org/apache/felix/utils/properties/ConfigurationHandler.java
	M	utils/src/test/java/org/apache/felix/utils/properties/TypedPropertiesTest.java
Committed r1807697
",28/Jun/18 07:55;kwin;Is the {{ConfigurationHandler}} within https://github.com/apache/felix/blob/trunk/configadmin/src/main/java/org/apache/felix/cm/file/ConfigurationHandler.java now no longer in use? Because that one has not been touched. Should it be deprecated?,"28/Jun/18 08:24;gnt;It's a fork.
The usage is slightly different, because FileInstall exposes those files while ConfigAdmin keep them internal.
Please raise a new JIRA issue for ConfigAdmin if you want to have some changes there.",,,,,,,,,,,,,,,,,,,,,,,,
URLHandlersContentHandlerProxy.getBuiltIn always returns null,FELIX-5874,13168524,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,wimvvv,wimvvv,27/Jun/18 05:48,27/Jun/18 10:40,13/Mar/19 22:56,27/Jun/18 10:40,framework-5.6.10,,,,framework-6.0.0,,Framework,,,0,,,,,,"the code immediately returns null due to a inverted logic expression, the method should return when m_builtIn.get(m_mimeType) returns non null instead of null.

In framework 5.4.0 there was no problem getting content handlers, but when switching to 5.6.10 this bug appeared",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-06-27 10:40:26.498,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Jun 27 10:40:26 UTC 2018,,,,,,0|i3va07:,9223372036854775807,,,,,,,,"27/Jun/18 10:40;karlpauls;Good catch - fixed in r1834491. 

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Servlet does not work in Apache Karaf,FELIX-5873,13168282,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,26/Jun/18 07:46,26/Jun/18 12:49,13/Mar/19 22:56,26/Jun/18 12:49,,,,,systemready-0.2.0,,System Ready,,,0,,,,,,"The systemready servlet selects a servlet context that is available in felix http service btu not in karaf:

osgi.http.whiteboard.context.select=(osgi.http.whiteboard.context.name=org.osgi.service.http)

This causes the servlet to be unavailable. We need to find a way that works in karaf (pax web) as well as in felix httpservice.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2018-06-26 07:46:34.0,,,,,,0|i3v8in:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test failure in build,FELIX-5872,13168085,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,25/Jun/18 16:17,26/Jun/18 07:43,13/Mar/19 22:56,26/Jun/18 07:43,,,,,systemready-0.2.0,,System Ready,,,0,,,,,,"h3. Error Message

Lambda expression in org.apache.felix.systemready.osgi.SystemReadyMonitorTest: expected <0> but was <1> within 1000 milliseconds.
h3. Stacktrace

org.awaitility.core.ConditionTimeoutException: Lambda expression in org.apache.felix.systemready.osgi.SystemReadyMonitorTest: expected <0> but was <1> within 1000 milliseconds. at org.apache.felix.systemready.osgi.SystemReadyMonitorTest.assertNumChecks(SystemReadyMonitorTest.java:109) at org.apache.felix.systemready.osgi.SystemReadyMonitorTest.test(SystemReadyMonitorTest.java:67)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Jun 26 07:43:39 UTC 2018,,,,,,0|i3v7bb:,9223372036854775807,,,,,,,,"25/Jun/18 16:19;chris@die-schneider.net;It turned out that this error happens when the FrameworkStartCheck was deactivated while it was running a check.

The problem was that during deactivate the bundle context was set to null which then probably caused a NPE during test execution. This caused the SystemReadyMonitorImpl to hang forever and not execute any more tests.",26/Jun/18 07:43;chris@die-schneider.net;https://github.com/apache/felix/commit/0bfe4ca7ebc6e81f0a9f4186a7ef58df4d92b4c9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle plugin cannot cope with Java 9 module-info.java,FELIX-5698,13104506,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,io7m,io7m,23/Sep/17 11:04,15/Jun/18 13:05,13/Mar/19 22:56,15/Jun/18 12:37,maven-bundle-plugin-3.3.0,,,,maven-bundle-plugin-3.5.0,,Maven Bundle Plugin,,,2,,,,,,"Please see the trivial repro case at:

[maven-bundle-plugin-20170923|https://github.com/io7m/maven-bundle-plugin-20170923]

The plugin fails with:

{noformat}
[ERROR] Bundle com.io7m.bugs:maven-bundle-plugin-20170923:bundle:0.1.0 : Exception: java.lang.ArrayIndexOutOfBoundsException: 19
[ERROR] Bundle com.io7m.bugs:maven-bundle-plugin-20170923:bundle:0.1.0 : Invalid class file module-info.class (java.lang.ArrayIndexOutOfBoundsException: 19)
{noformat}

There doesn't appear to be a way to exclude the module-info.java files from BND's class file analysis. An easy fix for this bug would be to simple ignore module-info.java files as they're irrelevant for OSGi (but will be present in projects that aim to support both OSGi and Jigsaw).","java version ""9""
Java(TM) SE Runtime Environment (build 9+181)
Java HotSpot(TM) 64-Bit Server VM (build 9+181, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-10-03 10:26:14.97,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Jun 15 13:05:34 UTC 2018,,,,,,0|i3kgan:,9223372036854775807,,,,,,,,"03/Oct/17 10:26;githubbot;GitHub user johnpoth opened a pull request:

    https://github.com/apache/felix/pull/122

    [FELIX-5698] Upgrade biz.aQute.bndlib to 3.5.0 for Java 9 GA support

    https://issues.apache.org/jira/browse/FELIX-5698
    
    Thanks!

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/johnpoth/felix FELIX-5698

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/122.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #122
    
----
commit 17dd7598750e33cd93854aa1bf5b1d647dc86c5a
Author: jpoth <poth.john@gmail.com>
Date:   2017-10-03T10:21:18Z

    [FELIX-5698] Upgrade biz.aQute.bndlib to 3.5.0 for Java 9 GA support

----
","03/Oct/17 10:29;jpoth;As per the PR, upgrading biz.aQute.bndlib to 3.5.0 seems to resolve the issue. While waiting for a fix to be release one can force the upgrade in the pom.xml 

{code}
<plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven-bundle-plugin-version}</version>
        // configuration  & execution
        <dependencies>
          <dependency>
            <groupId>biz.aQute.bnd</groupId>
            <artifactId>biz.aQute.bndlib</artifactId>
            <version>3.5.0</version>
          </dependency>
        </dependencies>
      </plugin>
{code}

HTH,

John.","03/Oct/17 10:39;io7m;Thanks very much for this!

I'll override the bndlib dependency until the next release.","15/Jun/18 13:05;githubbot;Github user johnpoth closed the pull request at:

    https://github.com/apache/felix/pull/122
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigInstaller should only handle events for configurations it manages,FELIX-5832,13153735,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,cgdrake,cgdrake,19/Apr/18 15:18,19/Apr/18 17:54,13/Mar/19 22:56,19/Apr/18 17:54,fileinstall-3.6.0,fileinstall-3.6.2,,,fileinstall-3.6.6,,File Install,,,1,,,,,,"Recent changes introduced by FELIX-5609 have caused ConfigInstaller to incorrectly write configuration objects which it does not manage to disk.

For example, given:
{code:java}
felix.fileinstall.filter=.*\\.cfg|.*\\.json{code}
and a CustomConfigInstaller implementing the ArtifactInstaller and ConfigurationListener interfaces for .json configuration files, the expectation is that .cfg files will be installed and written back to disk by Felix's ConfigInstaller.  Any .json configuration files will be installed and written to disk by the CustomConfigInstaller. Unfortunately since FileInstall 3.6.0, .json config files written to disk by the CustomConfigInstaller are overwritten by Felix's own ConfigInstaller.

The regression is caused by a change to the ConfigInstaller, whereby ConfigurationEvents for _*all configuration objects*_ are handled as apposed to previous behaviour where only those configuration objects managed by the Felix ConfigInstaller (aka .cfg and .config) are managed.",,,,,,,,,,,,,,,,,,,,,19/Apr/18 15:15;cgdrake;ConfigInstaller.diff;https://issues.apache.org/jira/secure/attachment/12919825/ConfigInstaller.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2018-04-19 15:25:11.505,,,no_permission,,,,Patch,,,,,,,,9223372036854775807,,,Thu Apr 19 15:25:11 UTC 2018,,,,,,0|i3srtb:,9223372036854775807,,,,,,,,"19/Apr/18 15:25;githubbot;GitHub user cgdrake opened a pull request:

    https://github.com/apache/felix/pull/134

    [FELIX-5832] Only handle ConfigurationEvents for config objects managed by us

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cgdrake/felix bugfix/FELIX-5832

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/134.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #134
    
----

----
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][runtime] Hitting Ctrl+C may kill the console output thread,FELIX-5821,13149977,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,04/Apr/18 12:05,04/Apr/18 12:08,13/Mar/19 22:56,04/Apr/18 12:08,gogo.runtime-1.0.10,,,,gogo.runtime-1.0.12,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Apr 04 12:08:15 UTC 2018,,,,,,0|i3s4q7:,9223372036854775807,,,,,,,,"04/Apr/18 12:08;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Closure.java
Committed r1828328
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EventAdmin webconsole plugins displays wrong value for Bundle STARTING event,FELIX-5806,13145014,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,14/Mar/18 12:39,14/Mar/18 13:09,13/Mar/19 22:56,14/Mar/18 13:09,,,,,webconsole-event-plugin-1.1.10,,Web Console,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 14 13:09:46 UTC 2018,,,,,,0|i3ra7j:,9223372036854775807,,,,,,,,"14/Mar/18 13:09;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
 M webconsole-plugins/event/src/main/java/org/apache/felix/webconsole/plugins/event/internal/converter/BundleEventConverter.java
Committed r1826709

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Changes in symlinked bundles not detected with NIO2 WatcherScanner,FELIX-4906,12832862,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,thully,thully,26/May/15 21:12,25/Jan/18 13:17,13/Mar/19 22:56,18/Oct/17 12:19,fileinstall-3.4.0,fileinstall-3.4.2,fileinstall-3.5.0,,fileinstall-3.6.4,,File Install,,,0,,,,,,"Since the new NIO2 WatcherScanner was introduced as part of FileInstall 3.4.0, I've noticed that FileInstall no longer detects changes to files symbolically linked to from the deploy directory. Also, there may be additional issues with network-mounted directories as well. These can be worked around by setting the felix.fileinstall.disableNio2 option to true, though this isn't ideal.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-12-15 16:27:43.63,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Jan 25 13:16:13 UTC 2018,,,,,,0|i2f81z:,9223372036854775807,,,,,,,,"15/Dec/15 16:27;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Watcher.java
Committed r1720189
","19/Jul/16 09:12;rvigniel;Hi
symlinks do not fully work yet on 3.5.2.

if a new link on a bundle appears, it's ok.

but if the linked file is updated ( config file modified for example ), the change is not detected.

everything was ok without NIO.


in the code, there is some NOFOLLOW_LINKS options that may prevents change detection on symlinked files.
https://svn.apache.org/repos/asf/felix/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Watcher.java

{code}
                    if (kind == ENTRY_CREATE) {
                        if (Files.isDirectory(child, NOFOLLOW_LINKS)) {

                            // if directory is created, and watching recursively, then
                            // register it and its sub-directories
                            Files.walkFileTree(child, new FilteringFileVisitor());
                        } else if (Files.isRegularFile(child, NOFOLLOW_LINKS)) {
                            scan(child);
                        }
                    } else if (kind == ENTRY_MODIFY) {
                        if (Files.isRegularFile(child, NOFOLLOW_LINKS)) {
                            scan(child);
                        }
                    } else if (kind == ENTRY_DELETE) {
                        unscan(child);
                    }
  
{code}

","18/Oct/17 12:19;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Watcher.java
Committed r1812501
","25/Jan/18 11:52;dtominac;This bug is still present in fileinstall 3.6.4.

OS: SUSE Linux Enterprise Server 11 (x86_64)
VERSION = 11
PATCHLEVEL = 0

Java: java version ""1.8.0_131""
Java(TM) SE Runtime Environment (build 1.8.0_131-b11)
Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)

Product: ServiceMix 6.3.1 with fileinstall updated to 3.6.4

ServiceMix is installed on *remote file system, mounted locally* on /aplik directory.

Workaround:

in file org.apache.felix.fileinstall-deploy.cfg  set

*felix.fileinstall.disableNio2 = true*

 ","25/Jan/18 13:16;dtominac;Additional info: hot deployment works fine for a few hours after ServiceMix/Karaf restart. But than it just ""stops monitoring""  deployment directory.  It does not detect bundle update or removal.

Restarting ServiceMix helps but only for short time. *felix.fileinstall.disableNio2 = true* is still a valid workaround.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Servlet API should be optional,FELIX-5755,13122769,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,cziegeler,cziegeler,05/Dec/17 06:21,05/Dec/17 06:25,13/Mar/19 22:56,05/Dec/17 06:25,inventory-1.0.4,,,,Inventory-1.0.6,,Inventory,,,0,,,,,,"Although the servlet api should be optional for the inventory bundle, it is currently only half optional which means not optional at all.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 05 06:25:42 UTC 2017,,,,,,0|i3nj5z:,9223372036854775807,,,,,,,,05/Dec/17 06:25;cziegeler;Fixed in rev 1817153 by moving the registration of the service factory outside of code requiring the servlet api,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix whitespace handling in TypedProperties,FELIX-5691,13102150,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,14/Sep/17 06:10,21/Nov/17 21:24,13/Mar/19 22:56,14/Sep/17 06:13,,,,,fileinstall-3.6.4,utils-1.10.4,Utils,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-09-14 16:49:58.132,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Sep 14 17:46:50 UTC 2017,,,,,,0|i3k1tr:,9223372036854775807,,,,,,,,"14/Sep/17 06:13;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	utils/src/main/java/org/apache/felix/utils/properties/ConfigurationHandler.java
	M	utils/src/test/java/org/apache/felix/utils/properties/ConfigurationHandlerTest.java
Committed r1808309
","14/Sep/17 16:49;mackncheesiest;This fix also affects `org.apache.felix.cm.file.ConfigurationHandler` in ConfigAdmin, which is what is used by Pax Exam and led to the discovery of this issue. If one package or the other is deprecated/preferred, insight would be appreciated

https://github.com/ops4j/org.ops4j.pax.exam2/blob/master/containers/pax-exam-container-karaf/src/main/java/org/ops4j/pax/exam/karaf/container/internal/KarafConfigFile.java#L29",14/Sep/17 17:46;gnt;I duplicated the issue because the utils module embeds a modified copy of the ConfigurationHandler class.  Both should be fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exclude EasyMock from the runtime classpath,FELIX-5626,13067436,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,man,man,27/Apr/17 16:04,07/Nov/17 17:52,13/Mar/19 22:56,28/Apr/17 08:59,bundlerepository-2.0.8,,,,bundlerepository-2.0.12,,Bundle Repository (OBR),,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-04-27 16:13:23.146,,,no_permission,,,https://github.com/apache/felix/pull/106,Patch,,,,,,,,9223372036854775807,,,Fri Apr 28 09:20:54 UTC 2017,,,,,,0|i3e73b:,9223372036854775807,,,,,,,,"27/Apr/17 16:13;githubbot;GitHub user manandbytes opened a pull request:

    https://github.com/apache/felix/pull/106

    [FELIX-5626] Exclude EasyMock from the runtime classpath

    ... and move it to the test classpath instead.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/manandbytes/felix FELIX-5626

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/106.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #106
    
----
commit 14310dc2467d72fbaa19e274020cae0f97356ff6
Author: Mykola Nikishov <mn@mn.com.ua>
Date:   2017-04-27T16:07:25Z

    [FELIX-5626] Exclude EasyMock from the runtime classpath
    
    ... and move it to the test classpath instead.

----
","27/Apr/17 18:43;io7m;Related, the `org.apache.felix.gogo.command` bundle has this same issue.","28/Apr/17 08:56;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/106
","28/Apr/17 08:59;bosschaert;Thanks for the patch [~man]! 

It's applied in https://svn.apache.org/viewvc?view=revision&revision=1793018","28/Apr/17 09:03;bosschaert;[~io7m] wrote:

bq. Related, the `org.apache.felix.gogo.command` bundle has this same issue.

I don't see an EasyMock dependency in the {{org.apache.felix.gogo.command}} bundle and the Mockito dep in there already has the {{test}} scope...","28/Apr/17 09:20;io7m;Sorry, for the noise, you are correct! We had a dependency exclusion set up in our project to remove an EasyMock dependency but it must presumably have been a transitive dependency of the org.apache.felix.gogo.command package that has been corrected elsewhere.",,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigInstaller is not deleting files in the etc directory,FELIX-5723,13110721,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,brandan.jeter,brandan.jeter,19/Oct/17 16:44,23/Oct/17 17:24,13/Mar/19 22:56,23/Oct/17 11:46,fileinstall-3.6.0,fileinstall-3.6.2,,,fileinstall-3.6.4,,,,,0,,,,,,"The ConfigInstaller takes the pid from the ConfigurationEvent and tries to get the configuration from ConfigAdmin. This will not return the config because the config has been deleted. See https://github.com/apache/felix/blob/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java#L182

The ConfigurationEvent must provide the felix.fileinstall property, so that the ConfigInstaller can use that to delete the corresponding file in etc.",,,,,,,,,,,,,,,FELIX-5686,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-10-19 18:00:25.323,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Oct 23 17:24:47 UTC 2017,,,,,,0|i3lh1j:,9223372036854775807,,,,,,,,"19/Oct/17 16:45;brandan.jeter;FELIX-5686 fixed a NPE that was happening due to this issue, but did not fix the issue of files not being deleted.",19/Oct/17 18:00;gnt;The dictionary is not available anymore when the event is sent.  This means we'll have to keep an additional map to cache the link between pid -> file so that we can delete the file when the pid is deleted.,19/Oct/17 18:00;gnt;[~brandan.jeter] Do you think you could provide a patch for that ?,"23/Oct/17 11:46;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/ConfigInstallerTest.java
Committed r1812996
","23/Oct/17 17:19;brandan.jeter;Thank you for the rapid response, [~gnt]","23/Oct/17 17:24;brandan.jeter;As an interesting side note, we had fixed this awhile back with this solution by implementing our own ConfigurationListener: https://github.com/codice/ddf/commit/e2bc11abdc00ae21089dcfb49d67e26d1299c0dd#diff-74d5172cba120da06c8629e456e88eb8R50

We didn't contribute it back here because we weren't sure if that would be an accepted solution to the problem. Next time, we'll offer the solution anyways and risk getting shot down! Thanks again.",,,,,,,,,,,,,,,,,,,,,,,,,,
Removing an entry from a configuration does not remove it from the monitored file,FELIX-5133,12920774,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,10/Dec/15 14:10,23/Oct/17 12:02,13/Mar/19 22:56,28/Nov/16 16:54,fileinstall-3.5.0,,,,fileinstall-3.5.8,,File Install,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-11-25 11:30:41.559,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Nov 28 16:54:18 UTC 2016,,,,,,0|i2ppx3:,9223372036854775807,,,,,,,,"25/Nov/16 11:30;githubbot;GitHub user grgrzybek opened a pull request:

    https://github.com/apache/felix/pull/77

    [FELIX-5133][fileinstall] Remove properties that are not present in updated configuration

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/grgrzybek/felix FELIX-5133

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/77.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #77
    
----
commit 37fd1959130b28dcc3f032e146f0a220bbdf744c
Author: Grzegorz Grzybek <gr.grzybek@gmail.com>
Date:   2016-11-25T11:24:28Z

    [FELIX-5133][fileinstall] Remove properties that are not present in updated configuration

----
",25/Nov/16 11:30;gzres;PR: https://github.com/apache/felix/pull/77,"25/Nov/16 13:22;gnt;The patch looks good, however  think we should the same mechanism to *.config files.
",28/Nov/16 15:33;gzres;I'll think about a test too.,"28/Nov/16 16:54;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java
Committed r1771767
",,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONParser needs a little bit more context when reporting an error,FELIX-5675,13093938,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,10/Aug/17 22:47,23/Oct/17 11:57,13/Mar/19 22:56,14/Aug/17 20:41,,,,,utils-1.10.2,,Utils,,,0,,,,,,"Occasionally a Key/Value Pair evaluates to an empty string. In that case, the error message is something like:

{code}
Caused by: java.lang.IllegalArgumentException: Malformatted JSON key-value pair: 
	at org.apache.felix.serializer.impl.json.JSONParser.parseKeyValue(JSONParser.java:106)
	at org.apache.felix.serializer.impl.json.JSONParser.parseObject(JSONParser.java:203)
	... 56 more
{code}

This makes it very challenging to find where the error is in the file.

In order to add more context, the previously-parsed Key/Value pair should also be output.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Aug 10 22:50:58 UTC 2017,,,,,,0|i3io1b:,9223372036854775807,,,,,,,,"10/Aug/17 22:50;dleangen;Committed in r1804738.

If there are no objections, then I will close this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Have to escape '=' characters in quoted values in *.config files,FELIX-4743,12764160,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,mailings@hupie.com,mailings@hupie.com,30/Dec/14 09:07,23/Oct/17 11:56,13/Mar/19 22:56,08/Sep/17 09:48,fileinstall-3.4.0,,,,fileinstall-3.6.2,utils-1.10.2,File Install,,,0,,,,,,"I have to escape '=' characters in quoted values in *.config files, the parser appears to be not-so-smart.

Looking at the code, the parser can use some TLC",Linux 64,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-09-08 09:48:25.853,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Sep 08 09:48:25 UTC 2017,,,,,,0|i23ubr:,9223372036854775807,,,,,,,,"08/Sep/17 09:48;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	A	utils/src/test/java/org/apache/felix/utils/properties/ConfigurationHandlerTest.java
	M	utils/src/main/java/org/apache/felix/utils/properties/ConfigurationHandler.java
	M	utils/src/test/java/org/apache/felix/utils/properties/TypedPropertiesTest.java
Committed r1807704
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in ConfigInstaller,FELIX-5125,12917198,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,romale,romale,01/Dec/15 09:42,23/Oct/17 09:41,13/Mar/19 22:56,23/Oct/17 09:41,fileinstall-3.5.0,,,,fileinstall-3.6.4,,File Install,,,0,,,,,,"Configuration values returned by getProperties may be null if the method update was not called (according to OSGi specs).

There is a NPE in ConfigInstaller line 106.
I got this error while testing my application with subsystems (after a bundle refresh).",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-05-18 09:02:06.666,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Oct 23 09:41:04 UTC 2017,,,,,,0|i2p3vb:,9223372036854775807,,,,,,,,"18/May/16 09:02;githubbot;GitHub user alexandreroman opened a pull request:

    https://github.com/apache/felix/pull/66

    FELIX-5125 NPE in ConfigInstaller

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alexandreroman/felix felix-5125

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/66.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #66
    
----
commit e22891689d8e7ee57201f19dfb779ce7857697b9
Author: Alexandre Roman <alexandre.roman@gmail.com>
Date:   2016-05-18T08:51:26Z

    FELIX-5125 NPE in ConfigInstaller

----
",23/Oct/17 08:24;gzres;same issue as FELIX-5686,"23/Oct/17 09:39;gnt;Well, actually, even if the NPE is the same, the originating line is different, as this one comes from the UPDATE event, so it should be fixed too.","23/Oct/17 09:41;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java
Committed r1812985
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in ConfigInstaller on ConfigDelete,FELIX-5686,13099330,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,brandan.jeter,brandan.jeter,01/Sep/17 22:09,19/Oct/17 16:45,13/Mar/19 22:56,19/Oct/17 07:31,fileinstall-3.6.0,,,,fileinstall-3.6.4,,,,,0,,,,,,"The ConfigInstaller is handling a Config Delete Event now, but it always throws a NullPointException which crowds up the logs.

On delete, the ConfigInstaller tries to get the corresponding Configuration object: https://github.com/apache/felix/blob/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java#L176

It's never going to get the Configuration object because it was just deleted. So the getConfiguration call creates a new one with null as the properties. Then on line 180 there is a NullPointerException. 

Unfortunately, the fix for this will require changing the ConfigurationListener API so that the ConfigurationEvent either has the whole Dictionary of configuration properties or at least the felix.file.install property, if it exists.",,,,,,,,,,,,,KARAF-5313,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-10-19 07:31:15.24,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Oct 19 16:45:57 UTC 2017,,,,,,0|i3jki7:,9223372036854775807,,,,,,,,"19/Oct/17 07:31;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java
Committed r1812602
","19/Oct/17 14:27;brandan.jeter;[~gnt]: I do not believe this is fully resolved. The NullPointerException is fixed, but that whole block of code that handles the Delete event is dead code. When it tries to get the configuration from ConfigAdmin, it will never get the actual config because the actual config was already deleted. So files in etc are never going to be properly deleted. How should I properly report this? Should I reopen the initial improvement ticket? https://issues.apache.org/jira/browse/FELIX-5610 Or create a bug ticket?",19/Oct/17 15:20;gnt;Please open a new issue.,19/Oct/17 16:26;gnt;Note that i just found FELIX-5722 which will make things a bit more difficult to handle.,"19/Oct/17 16:41;brandan.jeter;Yeah ultimately you'll need, at a minimum, the factory pid and the felix.file.install property from the configuration event. If they don't come with the event then the ConfigInstaller's hands are tied, so to speak.",19/Oct/17 16:45;brandan.jeter;Here's the bug I created: https://issues.apache.org/jira/browse/FELIX-5723,,,,,,,,,,,,,,,,,,,,,,,,,,
TypedProperties is missing a method to add a raw value,FELIX-5692,13102151,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,14/Sep/17 06:12,19/Oct/17 12:59,13/Mar/19 22:56,14/Sep/17 06:14,,,,,fileinstall-3.6.4,utils-1.10.4,Utils,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Sep 14 06:14:19 UTC 2017,,,,,,0|i3k1tz:,9223372036854775807,,,,,,,,"14/Sep/17 06:14;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	utils/src/main/java/org/apache/felix/utils/properties/TypedProperties.java
Committed r1808310
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"FileInstall: Property ""felix.fileinstall.filter"" ignored when the service start",FELIX-4661,12745303,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,j3rem1e,j3rem1e,01/Oct/14 16:50,19/Oct/17 08:57,13/Mar/19 22:56,19/Oct/17 08:57,fileinstall-3.4.2,,,,fileinstall-3.6.4,,File Install,,,1,,,,,,"When the fileinstall service start, it scan the container to find bundles already deployed whose location refers to a file in the configured folder.

However, this scan ignore the ""felix.fileinstall.filter"" : a bundle whose location is in the configured folder is registered by the DirectoryWatcher regardless of his name.

for instance, i have a Karaf instance with the following configuration :
folder: etc, filter: *.cfg, startLevel = 30
folder: etc, filter: *.xml, startLevel = 80

if i add a blueprint file in ""etc"", it will be transformed into a bundle at location ""blueprint:file:etc/myfile.xml"". Then, if i restart the container, this bundle will be registered by the two instances of DirectoryWatcher, and nasty things will happen (randomly refresh of this bundle, bundle not starting, etc)",,,,,,,,,,,,,,,,,,,,,30/Oct/14 15:42;metatech;felix4661.patch;https://issues.apache.org/jira/secure/attachment/12678210/felix4661.patch,01/Oct/14 16:53;j3rem1e;fi.patch;https://issues.apache.org/jira/secure/attachment/12672358/fi.patch,,,,2.0,,,,,,,,,,,,,,,,,,,2014-10-30 15:42:52.404,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Oct 19 08:57:44 UTC 2017,,,,,,0|i20p07:,9223372036854775807,,,,,,,,01/Oct/14 16:53;j3rem1e;Attached a patch fixing this issue,"30/Oct/14 15:42;metatech;The patch ""fi.patch"" does the filtering on the full path, and not only the file name.  This is not aligned with the ""FilenameFilter"" defined in the constructor of the DirectoryWatcher class.
Here is another patch ""felix4661.patch"" that does properly extract the filename from the full path of the file.
Thanks to the original contributor for the very good track to the solution.","19/Oct/17 08:57;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r1812606
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundles don't start if no BundleEvent fired after reaching start level,FELIX-4740,12764103,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,thully,thully,30/Dec/14 00:54,19/Oct/17 08:47,13/Mar/19 22:56,19/Oct/17 08:47,fileinstall-3.4.2,,,,fileinstall-3.6.4,,File Install,,,0,,,,,,"In working with FileInstall, I've discovered an odd condition under which bundles installed by FileInstall will never be started, even though their start level is reached. This seems to happen most frequently when the active level is set to a value less than the start level. 

In that case, the initial scan will install bundles in the deploy directory, but not start them. That is expected. However, once the required start level is reached, the installed bundles are only started if a BundleEvent is fired after the start level change. Otherwise, the stateChanged flag in FileInstall will not be set, and we will never start the installed bundles.
","Mac OS X 10.10, Apache Karaf 3.0.2",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-10-19 08:47:26.116,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Oct 19 08:47:26 UTC 2017,,,,,,0|i23tzr:,9223372036854775807,,,,,,,,"19/Oct/17 08:47;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r1812605
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException running history | grep,FELIX-5714,13109652,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,16/Oct/17 08:49,16/Oct/17 11:11,13/Mar/19 22:56,16/Oct/17 11:10,,,,,gogo.jline-1.0.10,,Gogo JLine,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Oct 16 11:10:55 UTC 2017,,,,,,0|i3lauv:,9223372036854775807,,,,,,,,"16/Oct/17 11:10;gnt;{code}
Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	A	gogo/jline/src/test/java/org/apache/felix/gogo/jline/PosixTest.java
	M	gogo/jline/src/main/java/org/apache/felix/gogo/jline/Posix.java
Committed r1812284
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle-NativeCode header should not require osname and processor parameter to be present to match,FELIX-5707,13107373,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,05/Oct/17 21:44,06/Oct/17 21:39,13/Mar/19 22:56,06/Oct/17 21:39,framework-5.6.8,,,,framework-5.6.10,,Framework,,,0,,,,,,"We currently require that clauses in the Bundle-NativeCode header have at least one osname and one processor parameter (that match the given platform). Otherwise, they will not match. I believe that is not required nor mandated by the spec (anymore) - hence, we should relax the matching accordingly.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Oct 06 21:39:20 UTC 2017,,,,,,0|i3kxuv:,9223372036854775807,,,,,,,,06/Oct/17 21:39;karlpauls;Fixed in r1811371.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PackageAdmin getHosts should only return hosts required via HOST_NAMESPACE.,FELIX-5709,13107629,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,06/Oct/17 21:33,06/Oct/17 21:38,13/Mar/19 22:56,06/Oct/17 21:38,framework-5.6.8,,,,framework-5.6.10,,Framework,,,0,,,,,,,,,,,,,,,,,,,,,FELIX-5649,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Oct 06 21:38:37 UTC 2017,,,,,,0|i3kzfj:,9223372036854775807,,,,,,,,"06/Oct/17 21:37;karlpauls;Similar to the issue we fixed in FELIX-5649 we should not return required hosts for any other namespace than HOST_NAMESPACE from PackageAdmin getHosts. 

Right now, we do and that causes the framework to be listed as host for all fragments (in other words, it still _looks_ like we would refresh the framework if you refresh the fragment even so we actually don't do that anymore due to FELIX-5649).",06/Oct/17 21:38;karlpauls;Fixed in r1811372.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refreshing a fragment causes the framework to be restarted,FELIX-5649,13077675,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,06/Jun/17 13:44,06/Oct/17 21:37,13/Mar/19 22:56,07/Jun/17 08:06,framework-5.0.0,,,,framework-5.6.6,,,,,0,,,,,,This is caused because the fragment has 2 wires: one to its host and another one to the system bundle for an osgi.ee requirement.,,,,,,,,,,KARAF-5180,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-06-06 14:58:18.223,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Jun 07 08:06:06 UTC 2017,,,,,,0|i3fxfj:,9223372036854775807,,,,,,,,"06/Jun/17 14:49;gnt;From the specs (section 3.15.1, https://github.com/apache/felix/blob/trunk/resolver/src/main/java/org/apache/felix/resolver/ResolverImpl.java#L2027-L2028), it seems that the fact that there are 2 wires on the fragment is expected.
However, such a wire should definitely not cause a refresh of the framework if a fragment is refreshed.
So I'm planning to add an additional test around the following line:
https://github.com/apache/felix/blob/trunk/framework/src/main/java/org/apache/felix/framework/BundleRevisionDependencies.java#L173

{code}
                        if (HostNamespace.HOST_NAMESPACE.equals(bw.getCapability().getNamespace()))
                        {
                            result.add(bw.getProvider().getBundle());
                        }
{code}","06/Jun/17 14:58;rickhall;Fragments can have multiple wires, but they should only be wires to hosts, they shouldn't have any other type of wire, IIRC.

I could be wrong, but I thought a fragment attached to the system bundle does cause a framework refresh, though.","06/Jun/17 15:16;karlpauls;Yeah, I'm a bit confused as well. As [~gnodet] references 3.15.1 it almost sounds like we are talking about an extension bundle - in which case, it would be correct that the framework gets refreshed (from the spec 3.15): 

""If a RESOLVED extension bundle is refreshed then the Framework must shutdown; the host VM must terminate and framework must be re-launched.""

Obviously, if we are talking about a ""normal"" fragment, it shouldn't.","06/Jun/17 17:56;gnt;In my case, the fragment is not an extension.  But reading the spec and the resolver impl lead me to think that osgi.ee requirements are not hosted, i.e. they are wired from the fragment itself and not its host.
That has been the case at least from framework 5.0.0 release.
If that's correct, then we simply need to only take into account host wires when calculating dependencies as suggested by my patch above.","06/Jun/17 18:02;gnt;See the section 7.4:
{code}
A fragment bundle will show all its declared capabilities and requirements on its Bundle Revision but during resolving the resolver only considers the osgi.wiring.host and osgi.ee requirements and the osgi.identity capability and requirements.
The osgi.wiring.host requirement represents the Fragment-Host header. A fragment can be attached to different hosts and each attachment creates a wire from the fragment's Bundle Wiring to the host's Bundle Wiring. The osgi.ee requirement is also never hosted.
{code}","06/Jun/17 19:12;rickhall;Ok, I see what you are saying. The reasoning behind not letting the ee requirement be hosted is not clear to me, although I understand there is no need to resolve the ee requirement more than once for hosting, it does no harm to do it more than once and doesn't create a special case. But if that is the case, then yes it does seem like refreshing should only consider host requirements when refreshing fragment dependencies.","07/Jun/17 08:06;gnt;{code}
Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	framework/src/main/java/org/apache/felix/framework/BundleRevisionDependencies.java
Committed r1797882
{code}",,,,,,,,,,,,,,,,,,,,,,,,,
Unable to access DTO fields using reflection,FELIX-5706,13106658,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,03/Oct/17 09:46,03/Oct/17 09:51,13/Mar/19 22:56,03/Oct/17 09:51,,,,,gogo.runtime-1.0.10,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Oct 03 09:51:10 UTC 2017,,,,,,0|i3kthb:,9223372036854775807,,,,,,,,"03/Oct/17 09:51;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Reflective.java
	M	gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/ReflectiveTest.java
Committed r1810825
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONParser is not handling escape char properly,FELIX-5555,13044524,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,chetanm,chetanm,20/Feb/17 11:08,01/Oct/17 09:21,13/Mar/19 22:56,24/Feb/17 12:12,utils-1.9.0,,,,utils-1.10.0,,Utils,,,0,,,,,,"{{JSONWriter}} currently adds an escape char for '/'. So ""foo=/bar"" is rendered as 
{noformat}
{""foo"":""\/bar""}
{noformat}

When such a json is read via {{JSONParser}} then the '\' is not removed

Following test fails
{code}
    @Test
    public void escapeChar() throws Exception{
        StringWriter sw = new StringWriter();
        JSONWriter js = new JSONWriter(sw);
        js.object().key(""foo"").value(""/bar"").endObject().flush();
        
        JSONParser jp = new JSONParser(sw.toString());
        assertEquals(""/bar"", jp.getParsed().get(""foo""));
    }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-20 11:20:09.407,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Feb 24 12:12:22 UTC 2017,,,,,,0|i3abov:,9223372036854775807,,,,,,,,20/Feb/17 11:13;chetanm;Added ignored test in 1783740. ,"20/Feb/17 11:20;cziegeler;The escaping of the writer is correct, a slash can be espaced - it's not a must though - some libs do, others don't. So I think this needs to be handled in the parser","20/Feb/17 11:37;chetanm;bq. escaping of the writer is correct, a slash can be espaced - it's not a must though

http://stackoverflow.com/questions/1580647/json-why-are-forward-slashes-escaped also confirms that. FWIW org.json.JSONObject did not escaped the slash but its done by other libraries","20/Feb/17 11:38;reschke;Indeed, see <https://greenbytes.de/tech/webdav/rfc7159.html#rfc.section.7>:

{noformat}
   string = quotation-mark *char quotation-mark

   char = unescaped /
       escape (
           %x22 /          ; ""    quotation mark  U+0022
           %x5C /          ; \    reverse solidus U+005C
           %x2F /          ; /    solidus         U+002F
           %x62 /          ; b    backspace       U+0008
           %x66 /          ; f    form feed       U+000C
           %x6E /          ; n    line feed       U+000A
           %x72 /          ; r    carriage return U+000D
           %x74 /          ; t    tab             U+0009
           %x75 4HEXDIG )  ; uXXXX                U+XXXX

   escape = %x5C              ; \

   quotation-mark = %x22      ; ""

   unescaped = %x20-21 / %x23-5B / %x5D-10FFFF
{noformat}",23/Feb/17 14:27;bosschaert;I can take a look at fixing this soon if nobody else beats me to it...,"24/Feb/17 12:12;bosschaert;Should be fixed in https://svn.apache.org/viewvc?view=revision&revision=1784269

I added a few additional tests as well.",,,,,,,,,,,,,,,,,,,,,,,,,,
JSONParser is not able to parse an array as root object,FELIX-5577,13047669,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,cziegeler,cziegeler,02/Mar/17 13:01,01/Oct/17 09:21,13/Mar/19 22:56,08/Sep/17 09:31,utils-1.9.0,,,,utils-1.10.0,,Utils,,,0,,,,,,"Usually a valid JSON is either on object or an array. The JSONParser currently only allows to have an object as the root. It fails do pass a valid json doc like
[1,2,3]",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-09-08 09:31:24.184,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Sep 08 09:31:24 UTC 2017,,,,,,0|i3aunr:,9223372036854775807,,,,,,,,08/Sep/17 09:31;gnt;https://github.com/apache/felix/commit/9cb9a5d822b9c0d9db4db146c45b2dd50eb45a28#diff-3c0c87b56f96c19f40c984c4db920811,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] Do not print stack traces when inspection can not access fields,FELIX-5441,13025912,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,06/Dec/16 10:08,08/Sep/17 12:17,13/Mar/19 22:56,13/Dec/16 22:25,gogo.runtime-1.0.0,,,,gogo.runtime-1.0.2,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 06 12:22:57 UTC 2016,,,,,,0|i377un:,9223372036854775807,,,,,,,,"06/Dec/16 12:22;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandSessionImpl.java
Committed r1772856
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interrupting a job should interrupt its children,FELIX-5433,13024477,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,30/Nov/16 15:18,08/Sep/17 12:17,13/Mar/19 22:56,30/Nov/16 15:55,gogo.runtime-1.0.0,,,,gogo.runtime-1.0.2,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Nov 30 15:55:49 UTC 2016,,,,,,0|i36yzr:,9223372036854775807,,,,,,,,"30/Nov/16 15:55;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandSessionImpl.java
Committed r1772066
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] Do not print results at end of pipe,FELIX-5440,13025911,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,06/Dec/16 10:05,08/Sep/17 12:17,13/Mar/19 22:56,06/Dec/16 12:22,gogo.runtime-1.0.0,,,,gogo.runtime-1.0.2,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 06 12:22:19 UTC 2016,,,,,,0|i377uf:,9223372036854775807,,,,,,,,"06/Dec/16 12:22;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Closure.java
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Pipe.java
Committed r1772855
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][jline] Command results should be printed by default,FELIX-5447,13027480,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,12/Dec/16 15:45,08/Sep/17 12:15,13/Mar/19 22:56,13/Dec/16 08:08,gogo.jline-1.0.0,,,,gogo.jline-1.0.2,,Gogo JLine,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 13 08:08:01 UTC 2016,,,,,,0|i37hj3:,9223372036854775807,,,,,,,,13/Dec/16 08:08;gnt;https://svn.apache.org/viewvc?view=revision&revision=1773807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][jline] The gosh_script can not resolve the motd file inside the jar,FELIX-5442,13025960,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,06/Dec/16 13:37,08/Sep/17 12:15,13/Mar/19 22:56,07/Dec/16 15:28,gogo.jline-1.0.0,,,,gogo.jline-1.0.2,,Gogo JLine,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Dec 07 15:28:33 UTC 2016,,,,,,0|i3785b:,9223372036854775807,,,,,,,,07/Dec/16 15:28;gnt;http://svn.apache.org/viewvc?view=revision&revision=1772892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gogo shell prints out nasty error on shutdown,FELIX-5077,12904562,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,13/Oct/15 14:25,08/Sep/17 12:15,13/Mar/19 22:56,13/Dec/16 07:12,,,,,gogo.jline-1.0.2,,Gogo Shell,,,1,,,,,,"The gogo shell always prints out a nasty error to the System.err stream on framework shutdown:

{code}$ java -jar bin/felix.jar
____________________________
Welcome to Apache Felix Gogo

g! stop 0
g! !!! FAILED TO STOP EXECUTOR !!!{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-01-19 12:59:37.452,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 13 07:12:53 UTC 2016,,,,,,0|i2mybj:,9223372036854775807,,,,,,,,"19/Jan/16 12:59;jajans;Fixed in rev #1725510.
","08/Nov/16 11:30;bosschaert;After updating gogo to 1.0.0 (FELIX-5395) this message started appearing again, so I'm reopening the issue.

This is with the following bundles installed (the current main distribution): 
{code}g! lb                                                                  11:26:23
START LEVEL 1
   ID|State      |Level|Name
    0|Active     |    0|System Bundle (5.7.0.SNAPSHOT)|5.7.0.SNAPSHOT
    1|Active     |    1|JLine (3.0.1)|3.0.1
    2|Active     |    1|Apache Felix Bundle Repository (2.0.8)|2.0.8
    3|Active     |    1|Apache Felix Gogo Command (1.0.0)|1.0.0
    4|Active     |    1|Apache Felix Gogo JLine Shell (1.0.0)|1.0.0
    5|Active     |    1|Apache Felix Gogo Runtime (1.0.0)|1.0.0{code}","13/Dec/16 07:12;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/jline/src/main/java/org/apache/felix/gogo/jline/Activator.java
	M	gogo/jline/src/main/java/org/apache/felix/gogo/jline/Shell.java
Committed r1773926
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Strange Prompt characters in the eclipse console,FELIX-5388,13015230,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,ivoleitao,ivoleitao,25/Oct/16 21:12,08/Sep/17 12:15,13/Mar/19 22:56,13/Dec/16 21:58,gogo.jline-1.0.0,,,,gogo.jline-1.0.2,,Gogo Shell,,,0,,,,,,"Hi, I'm using eclipse with bndtools and I normally use the console view of eclipse to display the gogo shell. With version 1.0.0 of the normal gogo shell I can use it perfectly without problems. With jline I see some strange characters close to the prompt. The commands seem to work however     ",Debian linux eclipse neon.1,,,,,,,,,,,,,,,,,,,,25/Oct/16 21:14;ivoleitao;prompt_characters.png;https://issues.apache.org/jira/secure/attachment/12835200/prompt_characters.png,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-11-17 16:12:58.311,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Dec 14 07:21:56 UTC 2016,,,,,,0|i35dxz:,9223372036854775807,,,,,,,,25/Oct/16 21:14;ivoleitao;Image of the characters in the prompt,17/Nov/16 16:12;gnt;Installing https://marketplace.eclipse.org/content/ansi-escape-console helps a bit.,17/Nov/16 16:13;gnt;I've raised https://github.com/jline/jline3/issues/42,"21/Nov/16 16:02;gnt;This has been fixed in jline 3.0.2 released today.
",21/Nov/16 21:46;ivoleitao;Thank you Guillaume,"11/Dec/16 17:29;ivoleitao;I've tried with jline 3.1.1 and I'm seeing the mentioned characters. Also there's and exception displayed now that I was not seeing before:

Sample output without jna library:

WARNING: Creating a dumb terminal
java.lang.IllegalStateException: Unable to create a system terminal
	at org.jline.terminal.TerminalBuilder.doBuild(TerminalBuilder.java:177)
	at org.jline.terminal.TerminalBuilder.build(TerminalBuilder.java:149)
	at org.apache.felix.gogo.jline.Activator.doStartShell(Activator.java:136)
	at org.apache.felix.gogo.jline.Activator.lambda$startShell$0(Activator.java:106)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: java.lang.NoClassDefFoundError: com/sun/jna/Platform
		at org.jline.terminal.impl.jna.JnaNativePty.current(JnaNativePty.java:37)
		at org.jline.terminal.TerminalBuilder.doBuild(TerminalBuilder.java:210)
		... 4 more
	Caused by: java.lang.ClassNotFoundException: com.sun.jna.Platform not found by org.jline [3]
		at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1558)
		at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:79)
		at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1998)
		at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
		... 6 more
	Suppressed: java.io.IOException: Not a tty
		at org.jline.terminal.impl.ExecPty.current(ExecPty.java:43)
		at org.jline.terminal.TerminalBuilder.doBuild(TerminalBuilder.java:219)
		... 4 more
	Caused by: java.io.IOException: Error executing 'tty': not a tty
		at org.jline.utils.ExecHelper.exec(ExecHelper.java:42)
		at org.jline.terminal.impl.ExecPty.current(ExecPty.java:40)
		... 5 more

____________________________
Welcome to Apache Felix Gogo

=[30m~[0m
 
g! [30m [0m

Sample output with jna library net.java.dev.jna/jna-osgi/4.1.0

WARNING: Creating a dumb terminal
java.lang.IllegalStateException: Unable to create a system terminal
	at org.jline.terminal.TerminalBuilder.doBuild(TerminalBuilder.java:177)
	at org.jline.terminal.TerminalBuilder.build(TerminalBuilder.java:149)
	at org.apache.felix.gogo.jline.Activator.doStartShell(Activator.java:136)
	at org.apache.felix.gogo.jline.Activator.lambda$startShell$0(Activator.java:106)
	at java.lang.Thread.run(Thread.java:745)
	Suppressed: com.sun.jna.LastErrorException: [25] )-¼
		at com.sun.jna.Native.invokeVoid(Native Method)
		at com.sun.jna.Function.invoke(Function.java:367)
		at com.sun.jna.Function.invoke(Function.java:315)
		at com.sun.jna.Library$Handler.invoke(Library.java:212)
		at com.sun.proxy.$Proxy0.ttyname_r(Unknown Source)
		at org.jline.terminal.impl.jna.linux.LinuxNativePty.current(LinuxNativePty.java:33)
		at org.jline.terminal.impl.jna.JnaNativePty.current(JnaNativePty.java:40)
		at org.jline.terminal.TerminalBuilder.doBuild(TerminalBuilder.java:210)
		... 4 more
	Suppressed: java.io.IOException: Not a tty
		at org.jline.terminal.impl.ExecPty.current(ExecPty.java:43)
		at org.jline.terminal.TerminalBuilder.doBuild(TerminalBuilder.java:219)
		... 4 more
	Caused by: java.io.IOException: Error executing 'tty': not a tty
		at org.jline.utils.ExecHelper.exec(ExecHelper.java:42)
		at org.jline.terminal.impl.ExecPty.current(ExecPty.java:40)
		... 5 more

____________________________
Welcome to Apache Felix Gogo

=[30m~[0m
 
g! [30m [0m ",13/Dec/16 21:58;gnt;Fixed in gogo-jline-1.0.2 + jline 3.0.4 / 3.1.2,14/Dec/16 07:21;ivoleitao;Thank you Guillaume I'll test it as soon as they are available in the repositories,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall writes .config files back with backslashes escaping spaces in config values,FELIX-5145,12923098,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,munene.kiruja,munene.kiruja,18/Dec/15 18:41,08/Sep/17 08:46,13/Mar/19 22:56,08/Sep/17 08:46,fileinstall-3.5.0,,,,fileinstall-3.6.2,utils-1.10.2,File Install,,,1,,,,,,"Fileinstall 3.5.0 added handling of .config file with an expanded syntax for configuration files allowing proper handling of arrays, etc. A great feature.

There is one thing that appears to be handled improperly though - if the values in the key/value pairs have spaces in them, the files are written back with backslash escapes for the spaces. 

What is the justification for that?

The effect is that the file is different from the original - which is quite a pain for automated installation with files generated from templates. The fake changes become a maintenance nightmare.

It appears that escaping of spaces can be harmlessly removed, and perhaps should not be a part of the feature... ",,,,,,,,,,,,,,,,,,,,,18/Dec/15 18:58;munene.kiruja;ConfigurationHandler.java;https://issues.apache.org/jira/secure/attachment/12778545/ConfigurationHandler.java,,,,,1.0,,,,,,,,,,,,,,,,,,,2017-09-08 08:46:11.365,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Sep 08 08:46:11 UTC 2017,,,,,,0|i2q3pr:,9223372036854775807,,,,,,,,"18/Dec/15 18:55;munene.kiruja;the writeQuoted static function in package org.apache.felix.cm.file.ConfigurationHandler.java can be changed to ignore escaping spaces as follows.

line 764, lines 789-795, 797

{code}
    private static void writeQuoted( Writer out, String simple ) throws IOException
    {
        if ( simple == null || simple.length() == 0 )
        {
            return;
        }

        char c = 0;
        int len = simple.length();
        for ( int i = 0; i < len; i++ )
        {
            c = simple.charAt( i );
            switch ( c )
            {
                case '\\':
                case TOKEN_VAL_CLOS:
//              case ' ':
                case TOKEN_EQ:
                    out.write( '\\' );
                    out.write( c );
                    break;

                // well known escapes
                case '\b':
                    out.write( ""\\b"" );
                    break;
                case '\t':
                    out.write( ""\\t"" );
                    break;
                case '\n':
                    out.write( ""\\n"" );
                    break;
                case '\f':
                    out.write( ""\\f"" );
                    break;
                case '\r':
                    out.write( ""\\r"" );
                    break;

                // other escaping
                default:
//                    if ( c < ' ' )
//                    {
//                        String t = ""000"" + Integer.toHexString( c );
//                        out.write( ""\\u"" + t.substring( t.length() - 4 ) );
//                    }
//                    else
//                    {
                        out.write( c );
//                    }
            }
        }
    }
{code}",18/Dec/15 18:59;munene.kiruja;File is attached,"08/Sep/17 08:46;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	utils/src/main/java/org/apache/felix/utils/properties/ConfigurationHandler.java
	M	utils/src/test/java/org/apache/felix/utils/properties/TypedPropertiesTest.java
Committed r1807685
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to specify an encoding for config files,FELIX-4416,12693345,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,acartapanis,acartapanis,05/Feb/14 13:47,08/Sep/17 08:13,13/Mar/19 22:56,08/Sep/17 08:13,fileinstall-3.2.6,,,,fileinstall-3.6.2,,File Install,,,0,,,,,,"FileInstall always use ISO-8859-1 for reading cfg file, even if the CFG file is not encoded in ISO-8859-1.

So when the CFG file contains non-ascii characters, those characters are ""transformed"" during parsing. Typically my file contains the line ""error.message.210=Identifiant d'entité cible invalide"" (without the """") but after FileInstall parsing, my string is transformed into ""Identifiant d'entitÃ© cible invalide"" (still without the """").

The org.apache.felix.utils.properties.Properties class has a default encoding defined to ISO-8859-1,which is always used whatever the actual file encoding is.
",Karaf 2.3.3,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-03-04 06:57:36.766,,,no_permission,,,,,,,,,,,,371930,,,Fri Sep 08 08:13:16 UTC 2017,,,,,,0|i1s3jr:,372234,,,,,,,,"04/Mar/14 06:57;barthel;Properties are always defined in ISO-8859-1.
See http://docs.oracle.com/javase/7/docs/api/java/util/Properties.html.

For use another Characterset instead of ISO-8859-1, the properties files has to prepare with native2ascii tool provided by JDK.","06/Mar/14 12:05;acartapanis;Quotation from your link: 
""The load(Reader) / store(Writer, String) methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The load(InputStream) / store(OutputStream, String) methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of The Java™ Language Specification; only a single 'u' character is allowed in an escape sequence. The native2ascii tool can be used to convert property files to and from other character encodings.
The loadFromXML(InputStream) and storeToXML(OutputStream, String, String) methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. An XML properties document has the following DOCTYPE declaration:""

For me i understand as this:
Loading properties from a Reader can be done for any encoding
Loading properties from an InputStream always use ISO 8859-1
Loading properties from an XML file should be possible, and in this case UTF-8 is the default encoding.

Why do you use the ""load(InputStream ...)"" method and not the ""load(Reader ...)"" method ? This would resolve the problem for me.","06/Mar/14 12:20;gnt;That would not really help, as the reader that file install would create would have to be given the encoding to decode.
","06/Mar/14 13:04;acartapanis;Yes, but in this case, it will use the system.fileEncoding properties, wich i can specify at startup...
Or even through a specific karaf properties, something like ""felix.fileinstall.encoding"", and still use ISO-9885 as default","18/Mar/14 18:04;gnt;I'm ok with adding a felix.fileinstall.configEncoding property which would default to ISO-9885.
Do you think you would have time for to write a patch for that ?
I'd like to release a new version of fileinstall in the coming weeks...",22/May/15 13:16;acartapanis;How do you want this property to be specified ? Through a -Dfelix.fileinstall.configEncoding=UTF-8 ?,25/Jun/15 16:38;acartapanis;Please see https://github.com/apache/felix/pull/25,"11/Jul/16 16:05;thanekamp;What is the current status of this issue? Is the pull request something that can be merged back or is the solution offered unsatisfactory and why?
I am running into the same issue as my UTF-8 encoded CFG files are interpreted as ISO-8859-1.","08/Sep/17 08:13;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/ConfigInstallerTest.java
Committed r1807678
",,,,,,,,,,,,,,,,,,,,,,,
"Exceptions from bundle.start() should be logged, not swallowed",FELIX-5448,13027552,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,vorburger,vorburger,12/Dec/16 19:18,08/Sep/17 07:55,13/Mar/19 22:56,08/Sep/17 07:55,fileinstall-3.5.4,,,,fileinstall-3.6.2,,File Install,,,0,,,,,,"based on http://stackoverflow.com/questions/41092687/how-to-see-why-bundle-requirements-are-not-fulfilled-in-apache-felix-log/ :

Isn't it a bug that File Install silently ""swallows"" (ignore, drops; does not log) any issues thrown when it (re)loads bundle and bundle.start() them?

Or are there valid use cases and reasons I'm missing why this ""sinking"" of bundle load errors may be intentional?

It's definitely a PITA to discover e.g. load issues by having to manually go into a Console, and lb and start - instead of just seeing them in the log.

Would a code contribution proposing a fix for this be welcome?",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-09-08 07:52:05.372,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Sep 08 07:55:43 UTC 2017,,,,,,0|i37hz3:,9223372036854775807,,,,,,,,"08/Sep/17 07:52;gnt;It's supposed to be the case, but there's definitely a bug.","08/Sep/17 07:55;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r1807677
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Directory Watcher leaks ZipInflater,FELIX-5539,13042449,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fabianlange,fabianlange,13/Feb/17 02:06,08/Sep/17 07:40,13/Mar/19 22:56,08/Sep/17 07:40,,,,,fileinstall-3.6.2,,File Install,,,0,,,,,,"The pattern used in DirectoyWatcher to close streams is closing the wrong stream (source input instead of jar). As a result of that, the ZipInflater created by JarInputStream remain open and leak native memory.",,,,,,,,,,,,,,,,,,,,,13/Feb/17 02:08;fabianlange;fileinstall.diff;https://issues.apache.org/jira/secure/attachment/12852276/fileinstall.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2017-09-08 07:40:03.143,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Sep 08 07:40:03 UTC 2017,,,,,,0|i39z3r:,9223372036854775807,,,,,,,,13/Feb/17 02:08;fabianlange;Also fixes a problem in util which does leave the inflater open on exception,"08/Sep/17 07:40;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r1807676
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall always expand configuration files,FELIX-5689,13100556,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,07/Sep/17 19:19,07/Sep/17 19:23,13/Mar/19 22:56,07/Sep/17 19:23,fileinstall-3.6.0,,,,fileinstall-3.6.2,,File Install,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,FELIX-5688,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2017-09-07 19:19:29.0,,,,,,0|i3js2f:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TypedProperties#put method is not idempotent,FELIX-5688,13100543,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,07/Sep/17 18:28,07/Sep/17 19:22,13/Mar/19 22:56,07/Sep/17 19:22,,,,,utils-1.10.2,,Utils,,,0,,,,,,"When loading substituted properties and using {{put}} to store the computed value (i.e. no real change), the layout should not be discarded, so that the non substituted value is kept in the file. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2017-09-07 18:28:36.0,,,,,,0|i3jrzj:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Do not use the threaded streams when passing the input stream to a command,FELIX-5687,13099876,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,05/Sep/17 15:46,05/Sep/17 17:11,13/Mar/19 22:56,05/Sep/17 17:11,gogo.jline-1.0.6,,,,gogo.jline-1.0.8,,Gogo JLine,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Sep 05 17:11:47 UTC 2017,,,,,,0|i3jnvj:,9223372036854775807,,,,,,,,05/Sep/17 17:11;gnt;http://svn.apache.org/viewvc/felix/trunk/gogo/jline/src/main/java/org/apache/felix/gogo/jline/Posix.java?rev=1807370&r1=1807369&r2=1807370&view=diff,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Embed-Transitive leaks transitive dependencies of excluded artifacts,FELIX-3565,12595220,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,tuomas_kiviaho,tuomas_kiviaho,20/Jun/12 07:08,26/Aug/17 19:23,13/Mar/19 22:56,09/Jul/15 20:00,maven-bundle-plugin-2.3.7,,,,maven-bundle-plugin-3.0.0,,Maven Bundle Plugin,,,0,patch,,,,,"I was trying to re-config some of my projects so that I get compile(+runtime) scoped dependencies and their transitive dependencies embedded by using Embed-Transitive=true with the exception of dependencies that I had with type bundle. Exclusion of bundles turned out to be trickier than I though because I can't use provided scope without sacrificing the respective transitive dependencies in the process. Everything went ok until I noticed that inclusion process with the transitive dependencies of already excluded compile scoped dependencies that had type set to bundle as shown below where I'm getting bb-2.2 embedded although it should be excluded. 

myproject (*;scope=compile|runtime;type=!bundle)
+a-1;scope=compile;type=jar // included ok
  +aa-1.1;scope=compile;type=jar // included ok
  -ab-1.2;scope=compile;type=bundle // excluded ok and there are no transitive dependency candidates available
  -ac-1.3;scope=provided;type=bundle // excluded ok because scope is provided
    -aca-1.3.1;scope=compile;type=jar  // excluded ok although scope is compile because provided scope doesn't reveal any of the existing dependencies as transitive dependencies
-b-2;scope=compile;type=bundle // excluded ok because type is bundle
  -ba-2.1;scope=provided;type=jar // excluded ok because scope is provided
  +bb-2.2;scope=compile;type=jar // NOT excluded ok because parent already excluded

In short: Everything not matching exclusion pattern (and matching inclusion pattern) will be excluded no matter if their origin has been already excluded.

I checked the codebase and noticed that the reason for having 'NOTE: test scoped dependencies are not included in the classpath seen by BND.' on the web page accumulated from the problem. It seems that dependency tree shared component seems to have given problems before and that Aether isn't backwards compatible but I suggest giving a try to maven-dependency-tree 2.0 that is Aether based for Maven 3 but remains still backwards compatible with Maven 2.",,,,,,,,,,,,,,,FELIX-5645,,,,,,19/Aug/12 08:43;tuomas_kiviaho;maven-bundle-plugin.patch;https://issues.apache.org/jira/secure/attachment/12541521/maven-bundle-plugin.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2015-07-09 20:00:23.786,,,no_permission,,,,,,,,,,,,307326,,,Thu Jul 09 20:00:23 UTC 2015,,,,,,0|i1avjz:,271578,,,,,,,,03/Aug/12 08:48;tuomas_kiviaho;Here's a patch that doesn't fix the described case of instruction based exclusion but works already for excludeDependencies parameter. It uses the newest dependency tree component that seems to be working for maven 2.x as promised. ,16/Aug/12 11:14;tuomas_kiviaho;I noticed that the example which used type bundle would not be working correctly due to http://jira.codehaus.org/browse/MSHARED-235,16/Aug/12 11:17;tuomas_kiviaho;Here's the same patch now working with released version of the new dependency tree,"19/Aug/12 08:43;tuomas_kiviaho;Here's the final patch that covers also instructions parameters and as well as exclusions parameter. It shouldn't be too hard for someone familiar with the testing harness to make a test case to cover the described case. This version already seems to be working with maven2 but maven3 requires still the MSHARED issue to be fixed in one way or another. 

Most of the changes are just delegation of the dependency graph down the execution stack until the dependency filtering is applied. Also the tests required passing of the dependency graph component. The actual work is done in new method AbstractDependencyFilter#filterDependencies and with helps of slight adjustment to AbstractDependencyFilter#processInstruction method. ",09/Jul/15 20:00;gnt;http://svn.apache.org/r1690153,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pretty format not implemented in JSON serializer,FELIX-5412,13020689,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,15/Nov/16 03:31,25/Aug/17 11:25,13/Mar/19 22:56,25/Aug/17 11:25,,,,,,,Converter,,,0,,,,,,"There is a configuration for ""pretty"" formatting, but it has not yet been implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-08-24 11:28:56.315,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Aug 25 11:25:44 UTC 2017,,,,,,0|i36blz:,9223372036854775807,,,,,,,,"15/Nov/16 03:32;dleangen;I wrote some code in order to submit a patch, but my attempt was too naive, and the output was not very pretty.",24/Aug/17 07:03;dleangen;I will make another attempt. :-),"24/Aug/17 08:16;dleangen;[~bosschaert], I am making quite a few changes. I would like to get your input before I commit, so I was thinking of creating a PR instead of directly committing to give you an opportunity to review. Is that ok?

Or is there something else I should do in this case, like create a separate branch?","24/Aug/17 11:28;githubbot;GitHub user dleangen opened a pull request:

    https://github.com/apache/felix/pull/118

    [FELIX-5412] Pretty format not implemented in JSON serializer

    @bosschaert, here is the PR for your review and so we can discuss. If approved, I will accept and merge.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dleangen/felix serializer-formatting

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/118.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #118
    
----
commit 9d07ca06ef4769a378046b2706f0126e7c0738b7
Author: David Leangen <dleangen@apache.org>
Date:   2017-08-24T11:26:15Z

    [FELIX-5412] Pretty format not implemented in JSON serializer

----
","24/Aug/17 11:29;dleangen;[~bosschaert], I have created a [PR for discussion|https://github.com/apache/felix/pull/118].","25/Aug/17 10:36;bosschaert;Thanks [~dleangen], I left some comments on the PR. 

Cheers, David","25/Aug/17 11:23;githubbot;Github user dleangen closed the pull request at:

    https://github.com/apache/felix/pull/118
",25/Aug/17 11:25;dleangen;Fixed in r1806160,,,,,,,,,,,,,,,,,,,,,,,,
Serializer goes into infinite loop,FELIX-5666,13091092,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,31/Jul/17 05:12,16/Aug/17 15:18,13/Mar/19 22:56,16/Aug/17 05:30,,,,,,,Converter,,,0,,,,,,"I'm only guessing as to what the problem is, following some stepping through the code. I could not find any similar existing test cases, but if the following does not immediately click for [~bosschaert], I will try to add one.

It appears that, when serializing an object to a ""DTO-Type"" object to a Map, some kind of backing object is created.

If the backing object contains a field that instantiates the same DTO, then the loop gets created.

Example:

{code}
public class MyDtoType {
  public String id;

  public MyDtoType( String anID ) {
    id = anID;
  }

  public static MyDtoType error() {
    return new MyDtoType( ""ERROR"" );
  }
}
{code}

It looks like the serializer keeps calling the error() method infinitely, but I am not able to easily pinpoint where this happens.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-07-31 10:32:14.321,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Aug 16 15:18:32 UTC 2017,,,,,,0|i3i6rj:,9223372036854775807,,,,,,,,"31/Jul/17 10:32;bosschaert;Hi [~dleangen], yes a testcase would be great. Thanks!","31/Jul/17 22:08;dleangen;Thank you, [~bosschaert].

I committed the test, and also committed a few other things.

However, the testing is failing for a reason I was not expecting...","31/Jul/17 22:51;dleangen;I noticed that even ""toString"" gets serialized, which I don't think is the expected behaviour...","02/Aug/17 04:30;dleangen;Hi David B.,

I have been digging around in the code some more to try to understand what is happening. I added another test. Since the tests fail, I have @Ingored them.

In order to deserialise an object, since it does not seem to work just doing it “directly”, I have been first converting it to a Map. However, this has a few issues in some cases.

When there is an embedded object, even if I do “sourceAsDTO”, this information gets lost during the serialisation. It happens in this method in JsonSerializingImpl:

{code}
    private String encode(Object obj)
{code}


Even though I converted it to a Map, because of the backing Facade, it is not true for the test;

{code}
 if (obj instanceof Map).
{code}

However, it is not a DTO, and the “sourceAsDTO” information is not there, so it falls through to the bottom and hits this line:

{code}
        return ""\"""" + converter.convert(obj).to(String.class) + ""\"""";
{code}


The Serializing class has a with(Converter) method, but the Converter does not have a “sourceAsDTO” method I can use in this with(Converter) method. It would be too unwieldy to have to inject a rule for every single type of “DTO-like” class I wish to deserialise...

I’m a bit stuck figuring out how to deserialise! :-)


Any ideas what we could do? At least for this case, it could be solved by somehow maintaining the ""sourceAsDTO"" information, I think.

By the way, I like the changes to the code. I find that it is much easier to follow and understand. Thanks for all your hard work!! :-)","02/Aug/17 05:57;dleangen;I found a ""temporary"" solution: creating a rule.

{code}
    static class MapTargetRule implements TargetRule {

        @Override
        public ConverterFunction getFunction() {
            return new MapConverterFunction();
        }

        @Override
        public Type getTargetType() {
            return Map.class;
        }        
    }

    static class MapConverterFunction implements ConverterFunction {

        @Override
        public Object apply( Object obj, Type targetType ) throws Exception {
            return Converters
                    .standardConverter()
                    .convert(obj)
                    .sourceAsDTO()
                    .to(targetType);
        }
    }
{code}

The reason I write ""temporary"" is because this rule seems too generic and the usage, I am guessing, so common, that it is a bit heavy-handed to be required to declare this type of rule each time.

But in any case, the serialization of a DTO-type object now works when called like this:

{code}
        String s = serializer
            .serialize( obj )
            .with(Converters.newConverterBuilder().rule(new MapTargetRule()).build())
            .toString();
{code}

What do you think we should do?

I just committed another test case so you can see. It is in JsonBackingObjectSerializationTest.","02/Aug/17 06:12;dleangen;Just a thought... but if in the end you believe that the current behaviour of the Serializer is correct, then another possible ""solution"" is to have a Converters.newDTOConverter(). It would make the serializer marginally better:

{code}
 String s = serializer
            .serialize( obj )
            .with(Converters.newDTOConverter())
            .toString();
{code}

I still think that the behaviour to start with is not right, though. :-)","03/Aug/17 10:47;bosschaert;Hi [~dleangen], just trying to start understanding the problem. 

The first test I started looking at is:
  JsonBackingObjectSerializationTest.testComplexMapSerializationFirstUsingConversion()

This test creates a DTO: MyDTOishObject and then converts it to a Map. This conversion seems to work correctly, but then the conversion from that map to the JSON seems to go wrong. Is this a correct assumption? It looks like the serialization of a DTO to JSON doesn't work... 

Actually I guess the problem can already be observed by calling {{JsonSerializerImpl().serialize(obj).toString()}} directly on the DTO, as the result there also contains the {{toString}} key in the JSON.
","03/Aug/17 10:55;dleangen;Hi [~bosschaert], thanks for looking into this. Yes, that is exactly correct! That is exactly what happens.

I think that the ""sourceAsDTO"" information gets ""lost"" once passed to the Serializer, so it ends up getting treated as an Interface, which creates odd behaviour.","03/Aug/17 12:32;bosschaert;Ah yes, exactly. The sourceAsDTO() is context information to the converter in relation to the provided object. It has no connection to the Json Serializer and it's also not stored in the converter. So when the serializer is called that information is simply not there any more.

I guess it might make sense to add things like sourceAsDTO() and others to the serializer? It might even inherit the Specifying.java interface from the Converter ([see here|https://oss.sonatype.org/content/repositories/osgi/org/osgi/org.osgi.util.converter/1.0.0-SNAPSHOT/org.osgi.util.converter-1.0.0-20170803.091235-72-sources.jar])...

WDYT about adding something like this to the serializer?","03/Aug/17 12:49;dleangen;I think that's a good idea. Thanks for giving this thought.

Actually, if the Serializer has this interface, it can ""configure"" its backing Converter, so injecting a Converter would only be necessary in very complex cases. Would make the client code much cleaner.

I don't know if it would be good or not to create that dependency on an interface from the Converter via inheritance (each time the Serializer API is used it would require the Converter API), but it could at least have the same methods. I'd have to sit down and think a bit more...","03/Aug/17 13:09;bosschaert;Yeah, it would be great if you can think this through, you might even have some time to prototype or even implement this? Using this to configure the backing converter sounds like a good idea to me.

BTW the dependency Serializer API -> Converter API is already there. Serializing.with() and Deserializing.with() already have a Converter as argument...","06/Aug/17 02:06;dleangen;Hi [~bosschaert], I have committed an update. Serializing now extends Specifying, and the tests are now passing.","08/Aug/17 07:43;bosschaert;Hi [~dleangen] - sounds great! I've assigned the issue to you - hope that makes sense? 
And I guess it can be closed as fixed? Or is there anything still to be done?","08/Aug/17 07:57;dleangen;Thanks, [~bosschaert]. Yes, I think this issue is fixed, though I don't think that there is ""complete coverage"" of the Specifying interface in the Serializer implementation.

I suppose we can just file issues as problems arise. wdyt? If that's ok, then I will close this issue.

Before that, though, would you mind just taking a look at the updates I did to the POM files (Converter, Serializer) to make sure they meet ""Felix standards"" (whatever those are)? I would appreciate your confirmation.

Sorry for bringing this up in here, but I kinda snuck in those changes as part of this work. :-)","08/Aug/17 07:59;dleangen;Oh, and one more question... Do you know of any ""tool"" hanging around in Felix that can help me compare the result of a converted or deserialized object to a hard-coded object?

The issue is that the converted object does not have a predictable order. It would be nice to be able to do a ""value-based"" equality test like this:

{code}
  assertEquals(expected, actual)
{code}

even though the ordering of the values are different.","16/Aug/17 15:18;bosschaert;Hi [~dleangen], only seeing this question now. No I don't really know of such a tool. You might have to create something like that for the purpose of the test...",,,,,,,,,,,,,,,,
[Serializer] Inject JSON Parser,FELIX-5674,13093920,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,10/Aug/17 21:16,16/Aug/17 05:30,13/Mar/19 22:56,16/Aug/17 05:30,,,,,,,Converter,,,0,,,,,,"Client should be able to choose the parser.

The current parser should be maintained as the default, do-nothing parser.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Aug 10 22:18:32 UTC 2017,,,,,,0|i3inxb:,9223372036854775807,,,,,,,,10/Aug/17 21:16;dleangen;Need to add a common parser interface.,"10/Aug/17 22:18;dleangen;Changes reflected in commit r1804736.

Waiting for approval from [~bosschaert] before closing this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Converter ignores rules of ParameterizedType,FELIX-5616,13064344,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,17/Apr/17 06:43,16/Aug/17 05:29,13/Mar/19 22:56,16/Aug/17 05:29,,,,,,,Converter,,,0,,,,,,"Rules based on ParameterizedTypes are ignored by the Converter.

I will make the simple fix.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-04-18 14:31:49.001,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Apr 19 12:02:32 UTC 2017,,,,,,0|i3dolz:,9223372036854775807,,,,,,,,"18/Apr/17 14:31;bosschaert;[~dleangen] I see that https://svn.apache.org/viewvc?view=revision&revision=1791667 does not contain any unit tests... This gives me the uneasy feeling that this might get broken again in the future without anyone noticing.

Would you be able to add some unit tests for the thing that you fixed?

Reopening the issue...","18/Apr/17 23:04;dleangen;[~bosschaert], yes, no problem.

In that case, do you mind if I expand the scope a little bit, and reorganize the tests a bit? Now that they are growing in number, and it is becoming harder to follow along, perhaps a more systematic approach is required.

I don't mind doing the reorganisation, but I'd like to get your input before making this update.

I could start with a few changes to give you an idea of what I have in mind. Then you could inspect and I could either revert, or continue.

wdyt?","19/Apr/17 12:02;bosschaert;Hi [~dleangen], I don't mind a new set of better structured unit tests, but I think we should keep the existing tests in place. This means that some things get tested twice but that doesn't matter because the tests are really fast. 

I would not be a fan of removing existing unit tests, simply because you're never sure that you're covering all the nuances that the old ones might be covering. 

So yes, as long as we keep the existing ones, I'm all for adding better structured ones as well :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible NPE in Expression.isNumber when passing an empty string,FELIX-5655,13082533,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,26/Jun/17 14:57,03/Aug/17 09:41,13/Mar/19 22:56,26/Jun/17 15:15,gogo.runtime-1.0.0,,,,gogo.runtime-1.0.8,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jun 26 15:15:48 UTC 2017,,,,,,0|i3gqj3:,9223372036854775807,,,,,,,,"26/Jun/17 15:15;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Expression.java
Committed r1799927
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
issues resolving with substitutable exports when the export is the last available provider,FELIX-5601,13059603,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,tjwatson,tjwatson,tjwatson,28/Mar/17 02:39,04/Jul/17 15:05,13/Mar/19 22:56,28/Mar/17 21:50,,,,,resolver-1.14.0,,Resolver,,,0,,,,,,"Substitutable exports that are used by other exported packages can cause a case where a valid solution cannot be found when one exists.  The issue only can occur when a substitutable export is the only valid candidate left for a resources mandatory requirement and the resolver decides to permute the substitutable requirement becaused of a used blame.  Something like the following resources

resource A1
  provides pkg X v1
  provides pkg Y v1 uses->X
  provides pkg Z v1 uses->Y

resource A2
  provides pkg X v2
  provides pkg Y v2 uses->X
  provides pkg Z v2 uses->Y
  import pkg X v[2,4)
  import pkg Y v[2,4)
  import pkg Z v[2,4)

resource A3
  provides pkg X v3
  provides pkg Y v3 uses->X
  provides pkg Z v3 uses->Y
  import pkg X v[2,4)
  import pkg Y v[2,4)
  import pkg Z v[2,4)

resource B1
  provides pkg W v1 uses->Z
  import pkg Z v[1,4)

resource C1
  imports pkg X v[3,4)

Resolve all resources A1, A2, A3, B1, C1 as mandatory resources.  This will result in resolution error for B1 because it is exposed to two versions of X through two uses blame chains.  The reason this fails is because the resolver first chooses to permute the substitutable requirement from A3 for X which causes X v3 to no longer be available for C1 to import.  This causes an error and the permutation fails and all other permutations based off that permutation will be ignored.  If instead the resolver would not permute the requirement for X from A3 the resolver would find a valid solution.",,,,,,,,,,,,,,,,,FELIX-5663,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Mar 28 21:50:23 UTC 2017,,,,,,0|i3cvdz:,9223372036854775807,,,,,,,,28/Mar/17 02:48;tjwatson;Fixed by not allowing an export to be substituted in a permutation when the export is the only available export left for another mandatory requirement.  I added some implementation notes in the code to explain why this is needed.,"28/Mar/17 21:13;tjwatson;I've found an issue with the current fix that needs addressed.

The original fix has issues with assuming the Candidates::m_dependenMap
is updated as the CandidateSelectors moved on to the next candidate.
An additional check is needed to make sure the current candidate is the
one that could be substituted.

This also exposed an issue with the solution for the testcase
that has a long blame requirement chain.  In this case we have
historically started at the direct requirement for the conflicting
capability and worked our way back to the root requirement for
the blame chain.
    
This worked for the most part when we didn't pay attention to
substitutable capabilities when permuting, but I suspect there
were still cases where this would eliminate.  Now that we are paying attention to substitutions there are cases where the solution will be found if we start traversing from the root -> direct requirement in the blame chain.","28/Mar/17 21:50;tjwatson;I fixed this by doing an additional check in Candidates::canRemoveCandidate that makes sure the current candidate of the dependent CandidateSelector is the candidate that is about to be substituted.

I also did the change to traverse the blame requirement chain from direct->root and root->direct requirement to be sure to find a solution if it exists.  This was necessary to pass the test testScenario18 which has a blame chain with 4 reqs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSLFilterRequest returns the server port of the underlying request instead of the default port of the protocol.,FELIX-5662,13084200,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,03/Jul/17 09:46,04/Jul/17 13:34,13/Mar/19 22:56,04/Jul/17 13:34,http.sslfilter-1.2.0,,,,http.sslfilter-1.2.2,,HTTP Service,,,0,,,,,,"FELIX-5259 made it so that the sslfilter request returns the underlying requests getServerPort() if no X-Forwarded-Port header is present on a call to getServerPort().

The problem that it tries to address is that the sslfilter returned -1 from getServerPort() when no X-Forwarded-Port header is set. As the javadoc does say:

{{int getServerPort()}}
{{Returns the port number to which the request was sent. It is the value of the part after "":"" in the Host header value, if any, or the server port where the client connection was accepted on.}}

that is not allowed but the intention was correct namely, it should be the default port for the forwarded protocol.

However, the fix is wrong. It basically makes it so that if no X-Forwarded-Port header is set the wrapped request will use the port of the connection. That doesn't make sense. It should default to the default port of the forwarded protocol (it just can't fall back to simply return -1 - it has to figure out the correct default port).",,,,,,,,,,,,,,,,,,,FELIX-5259,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-07-04 13:17:06.787,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Jul 04 13:34:29 UTC 2017,,,,,,0|i3h0s7:,9223372036854775807,,,,,,,,"04/Jul/17 13:12;karlpauls;After looking at the sslfilter, it appears that we only wrap the request in case of a https offload anyways - hence, it should be enough to hardcode the getServerPort() default to 443 (as we already the https protocol anyways). In other words, if we don't get a (parseable) X-Forwarded-Port header we fallback to returning 443 as the default port. 

[~cziegeler], unless you disagree, I'll go ahead and make that change as well as follow-up with a 1.2.2 release.","04/Jul/17 13:17;cziegeler;Sounds fine to me, we could think about using the port of the request if it is not 80 though - but always usign 443 in that case is as good or as bad I think",04/Jul/17 13:34;karlpauls;Done in r1800786.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][runtime] The Expander does not correctly support octal values,FELIX-5656,13082635,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,26/Jun/17 20:57,26/Jun/17 20:58,13/Mar/19 22:56,26/Jun/17 20:58,gogo.runtime-1.0.0,,,,gogo.runtime-1.0.8,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jun 26 20:58:06 UTC 2017,,,,,,0|i3gr5j:,9223372036854775807,,,,,,,,"26/Jun/17 20:58;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
        M       gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Expander.java
        M       gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/ExpanderTest.java
Committed r1799987
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Repository#getURI() is no longer unique in case of XML-based repositories,FELIX-5644,13074212,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,herr-herner,herr-herner,23/May/17 14:01,31/May/17 16:45,13/Mar/19 22:56,31/May/17 16:45,,,,,bundlerepository-2.0.12,,Bundle Repository (OBR),,,0,,,,,,"Because of a regression introduced by fixing FELIX-5611, the URI returned by {{Repository#getURI()}} is no longer unique in case of xml-based repository URIs. You cannot delete a repository using {{RepositoryAdmin#removeRepository(Repository#getURI()))}} when you use xml documents.

{code}
Repository firstRepository = repositoryAdmin.addRepository(""file:///C:/Users/myuser/repo_for_optional_resources.xml"");
System.out.println(firstRepository.getURI());
Repository secondRepository = repositoryAdmin.addRepository(""file:///C:/Users/myuser/repo_for_mandatory.xml"")
System.out.println(secondRepository.getURI());
{code}

Result:
{code}
file:/C:/Users/myuser/
file:/C:/Users/myuser/
{code}

The repositories are registered in the repository map with the original URIs, so that there is now way to remove a repository without knowing the initial URI under which it was registered.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-05-31 16:45:15.301,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed May 31 16:45:56 UTC 2017,,,,,,0|i3fcuf:,9223372036854775807,,,,,,,,"31/May/17 16:45;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/109
",31/May/17 16:45;bosschaert;The associated pull request https://github.com/apache/felix/pull/109 was applied in https://svn.apache.org/viewvc?view=revision&revision=1797072 with many thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update to latest resolver,FELIX-5605,13061517,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,04/Apr/17 19:51,24/May/17 20:30,13/Mar/19 22:56,24/May/17 20:30,framework-5.6.2,,,,framework-5.6.4,,Framework,,,0,,,,,,We need to update to the latest resolver when it is released to fix an issue with substitutable exports (see FELIX-5601).,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed May 24 20:30:54 UTC 2017,,,,,,0|i3d773:,9223372036854775807,,,,,,,,24/May/17 20:30;karlpauls;Done in 5.6.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing EE and system packages for Java 9,FELIX-5646,13074251,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,nbartlett,nbartlett,23/May/17 16:25,23/May/17 20:30,13/Mar/19 22:56,23/May/17 20:30,framework-5.6.2,,,,framework-5.6.6,,Framework,,,0,,,,,,"The default.properties file has added JRE exports for jre-1.9, however these are not picked up. Also there is no definition for ee-1.9 or eecap-1.9.

Java 9 provides the following system properties:

  java.runtime.name: Java(TM) SE Runtime Environment
  java.runtime.version: 9-ea+169
  java.specification.name: Java Platform API Specification
  java.specification.vendor: Oracle Corporation
  java.specification.version: 9

... and default.properties uses the value of java.specification-version as the suffix to ee-*, eecap-* and jre-*. We are expecting ""1.9"" but the actual value is just ""9"".

This problem causes basically ALL bundles to fail to resolve on Felix 5.6.2 under Java 9.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-05-23 16:52:55.837,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue May 23 20:30:22 UTC 2017,,,,,,0|i3fd33:,9223372036854775807,,,,,,,,"23/May/17 16:52;githubbot;GitHub user njbartlett opened a pull request:

    https://github.com/apache/felix/pull/108

    Fix JavaSE 9 EEs and package definitions in default.properties

    From Java 9 onwards, the capability version is 9,10,etc (NOT 1.9,1.10 etc). See
    https://www.osgi.org/developer/specifications/reference/
    
    Also java.specification.version reports ""9"" not ""1.9"".
    
    Fixes https://issues.apache.org/jira/browse/FELIX-5646
    
    Signed-off-by: Neil Bartlett <njbartlett@gmail.com>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/njbartlett/felix trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/108.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #108
    
----
commit c658245dc47e7dd5dddf473ee91a64462ca6bf17
Author: Neil Bartlett <njbartlett@gmail.com>
Date:   2017-05-23T16:49:11Z

    Fix JavaSE 9 EEs and package definitions in default.properties
    
    From Java 9 onwards, the capability version is 9,10,etc (NOT 1.9,1.10 etc). See
    https://www.osgi.org/developer/specifications/reference/
    
    Also java.specification.version reports ""9"" not ""1.9"".
    
    Fixes https://issues.apache.org/jira/browse/FELIX-5646
    
    Signed-off-by: Neil Bartlett <njbartlett@gmail.com>

----
",23/May/17 20:30;karlpauls;Thanks! I applied the patch in r1795960.,"23/May/17 20:30;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/108
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][runtime] Error throwns by commands are swallowed and lost,FELIX-5637,13070695,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,10/May/17 06:26,10/May/17 18:26,13/Mar/19 22:56,10/May/17 08:31,,,,,gogo.runtime-1.0.8,,Gogo Runtime,,,0,,,,,,"{code}
diff --git a/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandProcessorImpl.java b/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandProcessorImpl.java
index 451a1c8f0..b227d72c5 100644
--- a/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandProcessorImpl.java
+++ b/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandProcessorImpl.java
@@ -23,6 +23,7 @@ import java.io.OutputStream;
 import java.lang.reflect.Method;
 import java.util.Collections;
 import java.util.LinkedHashMap;
+import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.Set;
@@ -147,6 +148,18 @@ public class CommandProcessorImpl implements CommandProcessor
         String cfunction = name.substring(colon);
         boolean anyScope = (colon == 1 && name.charAt(0) == '*');
 
+        // HACK: testing errors
+        System.out.println(""NAME: "" + name);
+        if (name.equals(""*:error"")) {
+            return new Function() {
+                @Override
+                public Object execute(CommandSession session, List<Object> arguments) throws Exception {
+                    System.out.println(""THROWING ERROR"");
+                    throw new Error(""OOPS"");
+                }
+            };
+        }
+
         Map<Object, Integer> cmdMap = commands.get(name);
 
         if (null == cmdMap && anyScope)
{code}

and then in the jline3 demo:

{code}
g! error                                                                                                                                                                                                                                                                                              14:27:05
NAME: *:error
THROWING ERROR
g! 
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed May 10 08:31:02 UTC 2017,,,,,,0|i3er6f:,9223372036854775807,,,,,,,,10/May/17 08:31;gnt;https://github.com/apache/felix/commit/5f3b0eb477d47de608bbc9a05e1576b098bbbba4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][runtime] The parser indicates wrong repair string when parsing heredocs,FELIX-5631,13068390,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,02/May/17 11:26,02/May/17 11:27,13/Mar/19 22:56,02/May/17 11:27,gogo.jline-1.0.4,,,,gogo.jline-1.0.6,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue May 02 11:27:55 UTC 2017,,,,,,0|i3eczb:,9223372036854775807,,,,,,,,"02/May/17 11:27;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Tokenizer.java
	M	gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestTokenizer.java
Committed r1793472
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[gogo][jline] When a job is in the foreground, the shell should wait for its completion",FELIX-5629,13068327,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,02/May/17 06:09,02/May/17 06:14,13/Mar/19 22:56,02/May/17 06:14,gogo.jline-1.0.4,,,,gogo.jline-1.0.6,,Gogo JLine,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue May 02 06:14:50 UTC 2017,,,,,,0|i3eclb:,9223372036854775807,,,,,,,,"02/May/17 06:14;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/jline/src/main/java/org/apache/felix/gogo/jline/Shell.java
loy
Committed r1793434
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Normalize os.version system property in framework properties,FELIX-4695,12755040,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,fmeschbe,fmeschbe,13/Nov/14 11:53,27/Apr/17 19:21,13/Mar/19 22:56,27/Apr/17 19:21,framework-4.4.1,,,,framework-5.6.4,,Framework,,,0,,,,,,"The Felix class currently normalizes the processor name and os name system property before putting it into the framework properties.

Likewise the os version system property should be normalized as well.

Symptom of not normalizing the os version is the ExtensionManager.buildNativeCapabilites method failing to create the os version.

Alternatively, the ExtensionManager.buildNativeCapabilites method could itself normalize the os.version framework property. This would prevent the method from failing and would still allow the R4LibraryClause to match an os version capability (R4LlibraryClause does normalize the os version in the clause of the bundle before matching).",,,,,,,,,,,,,,,,,,,,,13/Nov/14 12:05;fmeschbe;FELIX-4695-ExtensionManager.patch;https://issues.apache.org/jira/secure/attachment/12681317/FELIX-4695-ExtensionManager.patch,13/Nov/14 12:05;fmeschbe;FELIX-4695-Felix.patch;https://issues.apache.org/jira/secure/attachment/12681318/FELIX-4695-Felix.patch,,,,2.0,,,,,,,,,,,,,,,,,,,2017-04-27 19:21:52.996,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Apr 27 19:21:52 UTC 2017,,,,,,0|i22btr:,9223372036854775807,,,,,,,,"13/Nov/14 12:05;fmeschbe;Two mutually ""exclusive"" patches:

One against the Felix class causing the org.osgi.framework.os.version property to be a valid Version value string. This would be in line of my reading section 4.2.2, Launching Propertes, of OSGi Core R6:

bq. The version of the operating system as used in the native code clause. If not set, then the framework must provide a default value. If the operating system reported version does not fit the standard version syntax (e.g. 2.4.32-kwt), then the launcher should define this launching property with a valid version value.

The other patch is against the ExtensionManager building the native capabilities. This would ensure the native capability property is a valid version.

Looking at cited section 4.2.2, I would probably prefer the patch against the Felix class to ensure the framework properties contain a valid OSGi Version string.

WDYT ?",27/Apr/17 19:21;karlpauls;I commited support for this in r1792947.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpLite complete bundle has wrong ranges for package imports,FELIX-5624,13067264,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,27/Apr/17 06:56,27/Apr/17 06:57,13/Mar/19 22:56,27/Apr/17 06:57,httplite-0.1.5,,,,httplite-0.1.6,,Lightweight HTTP Service,,,0,,,,,,"In particular, the servlet api is limited to 2.x",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2017-04-27 06:56:42.0,,,,,,0|i3e613:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BundleRepository should provide osgi.service and osgi.implementation capabilities,FELIX-5066,12903002,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,bosschaert,bosschaert,07/Oct/15 14:06,20/Apr/17 11:26,13/Mar/19 22:56,20/Apr/17 11:26,bundlerepository-2.0.6,,,,bundlerepository-2.0.10,,Bundle Repository (OBR),,,0,,,,,,"The OSGi repository spec defines capabilities that a bundlerepository implementation should provide. They are:

{code}Provide-Capability: osgi.implementation;
  osgi.implementation=""osgi.repository"";
  uses:=""org.osgi.service.repository"";
  version:Version=""1.1""
{code} and 
{code}Provide-Capability: osgi.service;
  objectClass:List<String>=""org.osgi.service.repository.Repository"";
  uses:=""org.osgi.service.repository""{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Apr 20 11:26:59 UTC 2017,,,,,,0|i2movr:,9223372036854775807,,,,,,,,20/Apr/17 11:26;bosschaert;Fixed in https://svn.apache.org/viewvc?view=revision&revision=1792041,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.felix.utils.json should be private,FELIX-5583,13049184,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,08/Mar/17 07:27,14/Apr/17 00:41,13/Mar/19 22:56,14/Apr/17 00:41,,,,,,,Converter,,,0,,,,,,"I believe that, as a ""library"", this package ought to be marked as private.

If there are no objections, I will make the update.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Mar 13 06:50:45 UTC 2017,,,,,,0|i3b3t3:,9223372036854775807,,,,,,,,"13/Mar/17 06:50;dleangen;Made package private.

Will keep issue around a little to see if there are any objections. If not, will close in about a week or so. :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Normalize require capabilites the same way we normalize provide capabilites,FELIX-5604,13061355,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,pkriens,pkriens,04/Apr/17 07:12,04/Apr/17 23:10,13/Mar/19 22:56,04/Apr/17 23:10,framework-5.6.2,,,,framework-5.6.4,,Framework,,,1,,,,,,"A Require-Capability like 'com.example.other;theList:List<String>=\""one,two,three\""' returns the String ""one,two,three"" instead of [""one"",""two"",""three""].

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-04-04 19:40:11.562,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Apr 04 23:10:05 UTC 2017,,,,,,0|i3d673:,9223372036854775807,,,,,,,,04/Apr/17 19:40;karlpauls;Could you provide a bit more information about where you are actually seeing this? ,04/Apr/17 21:10;bjhargrave;See https://mail.osgi.org/pipermail/osgi-dev/2017-April/006294.html,04/Apr/17 23:10;karlpauls;Fixed in r1790167.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow reusing a closure from a parent session,FELIX-5599,13058826,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,24/Mar/17 08:35,28/Mar/17 13:35,13/Mar/19 22:56,28/Mar/17 13:35,,,,,gogo.runtime-1.0.6,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Mar 28 13:35:46 UTC 2017,,,,,,0|i3cqlj:,9223372036854775807,,,,,,,,28/Mar/17 13:35;gnt;https://github.com/apache/felix/commit/cd2e785928f58e8a8050bd47088494cbf06c0802,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System streams are not correctly set when running a new shell,FELIX-5600,13058852,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,24/Mar/17 10:06,28/Mar/17 13:35,13/Mar/19 22:56,28/Mar/17 13:35,gogo.jline-1.0.0,,,,gogo.jline-1.0.6,,Gogo JLine,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Mar 28 13:35:30 UTC 2017,,,,,,0|i3cqrb:,9223372036854775807,,,,,,,,28/Mar/17 13:35;gnt;https://github.com/apache/felix/commit/809fea6b65adf4262be733ddda7548b7930f994e,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schematizer causes classCastException when framework is updated,FELIX-5588,13050408,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,13/Mar/17 07:04,13/Mar/17 07:11,13/Mar/19 22:56,13/Mar/17 07:11,,,,,,,Converter,,,0,,,,,,As discussed [here|https://groups.google.com/forum/#!topic/bndtools-users/m1n739Hhi-A].,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Mar 13 07:11:13 UTC 2017,,,,,,0|i3bb1z:,9223372036854775807,,,,,,,,13/Mar/17 07:11;dleangen;Using ServiceFactory<Schematizer> solves the problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SCR components and factoryPids random issues,FELIX-5576,13047605,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,paolo.antinori,paolo.antinori,02/Mar/17 08:33,10/Mar/17 17:27,13/Mar/19 22:56,10/Mar/17 17:27,scr-1.8.2,,,,scr-1.8.4,,Declarative Services (SCR),,,0,,,,,,"This affects {{mvn:org.apache.felix/org.apache.felix.scr/1.8.2}}.

There is an issue with SCR, {{ConfigAdmin}} and {{factoryPids}} that leads to possible situation when {{ConfigAdmin}} update events are discarded.

The issue is present in case of an interweaving of {{CM_LOCATION_CHANGED}} event.

If that event is processed, it changes updates the reference of {{TargetPID}} with the wrong one (uses {{instance}} one instead than a {{service}} one) basically turning the stored reference unreachable, thus discarding subsequent update requests.

The following code fixes the issue.

{code}
✔ /data/repositories/work/felix [org.apache.felix.scr-1.8.2|●1✚ 1…288] 
09:30 $ git diff --cached
diff --git a/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java b/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java
index e2f63e9..3a15073 100644
--- a/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java
+++ b/src/main/java/org/apache/felix/scr/impl/config/ConfigurationSupport.java
@@ -357,8 +357,8 @@ public class ConfigurationSupport implements ConfigurationListener
                                 //this is a better match, delete old before setting new
                                 componentHolder.configurationDeleted( pid.getServicePid() );
                             }
-                            componentHolder.configurationUpdated( pid.getServicePid(), configInfo.getProps(),
-                                    configInfo.getChangeCount(), pid );
+                            componentHolder.configurationUpdated( targetedPid.getServicePid(), configInfo.getProps(),
+                                    configInfo.getChangeCount(), targetedPid );
                         }
{code}
",,,,,,,,,,,,,,,,,,,,,09/Mar/17 11:58;paolo.antinori;0001-FELIX-5576-added-unit-test-and-modified-visibility-o.patch;https://issues.apache.org/jira/secure/attachment/12856989/0001-FELIX-5576-added-unit-test-and-modified-visibility-o.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2017-03-02 09:14:15.429,,,no_permission,,,,Patch,,,,,,,,9223372036854775807,,,Thu Mar 09 11:58:13 UTC 2017,,,,,,0|i3au9j:,9223372036854775807,,,,,,,,02/Mar/17 08:39;paolo.antinori;I'd like to open a PR but I'm not sure if there is a 1.x branch still maintained.,"02/Mar/17 09:14;gnt;Fixed at http://svn.apache.org/viewvc?view=revision&revision=1785091

Any idea if the problem also occur on 2.x ?",02/Mar/17 19:46;djencks;I think my refactoring fixed the problem in the 2.x versions.  It would be great if someone verified this as it's somewhat confusing.,"09/Mar/17 11:58;paolo.antinori;I have added a unit test:

https://github.com/paoloantinori/felix/commit/ab7f7b97e12910568e811a4869f588fb8c991025

To circumvent issues with package visibility and final methods, though, I had to change visibility of an inner class and of a method to {{protected}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][jline] Remove dependency on LineReaderImpl,FELIX-5584,13049298,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,08/Mar/17 16:01,08/Mar/17 16:49,13/Mar/19 22:56,08/Mar/17 16:08,gogo.jline-1.0.2,,,,gogo.jline-1.0.4,,Gogo JLine,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 08 16:08:27 UTC 2017,,,,,,0|i3b4if:,9223372036854775807,,,,,,,,08/Mar/17 16:08;gnt;http://svn.apache.org/viewvc?rev=1785994&view=rev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException in the parser,FELIX-5541,13042535,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,13/Feb/17 10:29,08/Mar/17 16:45,13/Mar/19 22:56,13/Feb/17 14:44,,,,,gogo.runtime-1.0.4,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 13 14:44:08 UTC 2017,,,,,,0|i39zmv:,9223372036854775807,,,,,,,,"13/Feb/17 10:30;gnt;When typing '<' or '>' at an empty prompt, the following exception is thrown:
{code}
java.lang.ArrayIndexOutOfBoundsException: 1
	at org.apache.felix.gogo.runtime.Token.charAt(Token.java:81)
	at java.util.regex.Pattern$Slice.match(Pattern.java:3969)
	at java.util.regex.Pattern$Ques.match(Pattern.java:4182)
	at java.util.regex.Pattern$Branch.match(Pattern.java:4604)
	at java.util.regex.Matcher.match(Matcher.java:1270)
	at java.util.regex.Matcher.matches(Matcher.java:604)
	at org.apache.felix.gogo.runtime.Tokenizer.next(Tokenizer.java:111)
	at org.apache.felix.gogo.runtime.Parser.next(Parser.java:284)
	at org.apache.felix.gogo.runtime.Parser.program(Parser.java:202)
	at org.apache.felix.gogo.jline.Highlighter.highlight(Highlighter.java:58)
	at org.jline.reader.impl.LineReaderImpl.getDisplayedBufferWithPrompts(LineReaderImpl.java:3398)
	at org.jline.reader.impl.LineReaderImpl.redisplay(LineReaderImpl.java:3338)
	at org.jline.reader.impl.LineReaderImpl.cleanup(LineReaderImpl.java:2263)
	at org.jline.reader.impl.LineReaderImpl.readLine(LineReaderImpl.java:623)
	at org.apache.felix.gogo.jline.Shell.runShell(Shell.java:407)
	at org.apache.felix.gogo.jline.Shell.gosh(Shell.java:329)
	at org.apache.felix.gogo.jline.Main.main(Main.java:79)
{code}","13/Feb/17 14:44;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Tokenizer.java
	M	gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestTokenizer.java
Committed r1782786
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][runtime] No way to concatenate arrays,FELIX-5465,13030074,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,22/Dec/16 10:35,08/Mar/17 16:43,13/Mar/19 22:56,08/Mar/17 16:43,,,,,gogo.runtime-1.0.4,,,,,0,,,,,,"There's no way to easy concatenate arrays.
We should have 
{code}
g! a = [1 2 3]
1
2
3

g! b = [ a b c ]
a
b
c

g! c = [ ${a[@]} ${b[@]} ]
1
2
3
a
b
c

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 08 16:07:23 UTC 2017,,,,,,0|i37xj3:,9223372036854775807,,,,,,,,"22/Dec/16 10:55;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Closure.java
	M	gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestParser4.java
Committed r1775620
",08/Mar/17 16:07;gnt;http://svn.apache.org/viewvc?rev=1785993&view=rev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't return null but throw a CNFE from BundleClassloader.loadclass and Bundle.loadClass on recursive class loads.,FELIX-5573,13047118,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,28/Feb/17 22:42,01/Mar/17 15:54,13/Mar/19 22:56,01/Mar/17 15:49,framework-5.6.2,,,,framework-5.6.4,,Framework,,,0,,,,,,"We need to detect recursive class loads while invoking weaving hooks, if recursion is detected for a class name then we want to simply ignore all weave hooks for the recursive class load and allow it to proceed to define class.",,,,,,,,,,,,,,,FELIX-5570,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-28 22:53:22.508,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 01 15:49:01 UTC 2017,,,,,,0|i3ar9j:,9223372036854775807,,,,,,,,28/Feb/17 22:43;karlpauls;One example of this is FELIX-5570 where we apparently just return null (we should probably make sure we throw a CNFE if we detect a recursive class load that doesn't involve weaving hooks too) which makes it so that SCR blows up.,"28/Feb/17 22:53;rickhall;Rightly or wrongly, we explicitly chose to return null in this case because we were under the assumption that this situation would only occur for internal framework operation (i.e., we didn't expect null to be returned to end user code). We explicitly check for null being returned and know we can ignore that case when we detect a cycle. So, if we just start throwing a CNFE, then we might have some difficulty ignoring it or knowing when to ignore it in the framework.",28/Feb/17 23:21;djencks;I don't see why there's a problem returning null if there's some problem such as recursion in class loading.  My question was what is supposed to happen if getService for one of the weaving hooks returns null.  If this is supposed to prevent the original class load then weaving hooks can't be DS components.  If that hook is supposed to be ignored (presumably with logging) then the original class load ought to succeed and DS succeed in creating the weaving hook.,"01/Mar/17 08:33;karlpauls;I agree, it might turn out to not be a bug but I want to investigate the situation as we clearly didn't expect that it would happen due to outside conditions. I might be wrong but as far as I understood the situation we are talking about two different null values - the one for getService and the one for getting the class. I'm interested in the latter - hence, this issue which may or may not be relevant for FELIX-5570. It so happens that it is triggered by the use-case in there but it might need to be (or not to be) addressed regardless. 

I'll try to look into it soon and report back here.","01/Mar/17 08:49;fmeschbe;My understanding is like David's: I think Bundle.loadClass should not return null as this sounds unexpected, although the specification is not entirely clear. So I would sort this under the topic ""managing expectations"".

How about throwing a new ""ClassLoadingCircularityDetectedException extends ClassNotFoundException"" ? This way callers get the ""ClassNotFoundException"" while internally you can differentiate between the cases. Plus logging the exception will properly indicate the actual problem: the circularity.","01/Mar/17 09:13;karlpauls;Right, throwing some kind of CNFE might be one solution to it but first things first - right now, we don't expect to return null in the first place. This is a special case that makes that happen but we ""explicitly"" assume it will not. The relevant comment is: 

// If a cycle is detected, we should return null to break the
// cycle. This should only ever be return to internal class
// loading code and not to the actual instigator of the class load. 

It sounds like this assumption doesn't hold in the case of a class load of a class that requires to be woven ""by itself"". In other words, we use null as a result to signal to _internal_ code that this was a cycle and needs to be dealt with accordingly. In this case our _internal_ code doesn't deal with it (or so it appears) and if that is true it needs to be addressed so that it does. That is when the question of how comes up. 

Whether the fix is to throw an exception or to ignore the cycle in this case and allow the class load to succeed unwoven we have to see. Regardless, it should be because we understand that this is going on and not an accident. ","01/Mar/17 15:35;karlpauls;Ok, I can confirm that we do return null in this case. I created a test case that reproduces the issue. Luckily, the immediate fix seems easy. Basically, all we are missing is a check in BundleClassloader.loadClass for the class to be null and throw a CNFE in that case. This is consistent with both, bundle.loadClass and (more importantly) Classloader.loadClass API (I don't think any of the two really allow to return a null). 

Regarding FELIX-5570, I think it will now work as [~djencks] describes it above i.e., the attempt to get the WeavingHook from the service factory will cause a CNFE inside the service factory which will make it return null (or maybe an exception) which in turn, makes us ignore the weaving hook for this classload. It sounds like this should get us on par with equinox for the moment.

Granted, I think [~tjwatson] raised another question in FELIX-5570 namely, whether it would be possible to detect that the cycle was due to this special situation and resolve it without throwing any exception but I think that discussion can continue somewhere else. I'm going to rename this issue to reflect that it is about not return null in a cycle but rather throw an CNFE.",01/Mar/17 15:49;karlpauls;I committed a test that reproduces the issue and a fix in r1784979.,,,,,,,,,,,,,,,,,,,,,,,,
Replace JSONParser in Serializer with the new one from utils,FELIX-5571,13046880,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,dleangen,dleangen,dleangen,28/Feb/17 07:07,28/Feb/17 11:05,13/Mar/19 22:56,28/Feb/17 11:05,,,,,,,Converter,,,0,,,,,,I can do this if there are no objections.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-28 08:52:51.494,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Feb 28 11:05:08 UTC 2017,,,,,,0|i3apsv:,9223372036854775807,,,,,,,,"28/Feb/17 08:52;bosschaert;That would be great, +1!","28/Feb/17 10:06;dleangen;Unfortunately, utils has a dependency on core 4.1.0, which is older than the current 6.0.0. I tried replacing 4.1.0 with 6.0.0, but it does not compile.

Therefore, this update is creating a dependency on core 4.1.0.

I think we should abandon after all until the core in utils gets updated. :-(","28/Feb/17 10:17;gnt;How does a dependency from utils to core affect the json parser ? I don't think those classes actually depend on osgi core.
The osgi core dependency can be excluded when used in the converter if needed.","28/Feb/17 10:21;cziegeler;Just declare the dependency as ""provided""","28/Feb/17 10:29;dleangen;It is in the Activator.

Actually, I did. I added the depdendency as:

{code}
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.utils</artifactId>
            <version>1.9.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
{code}

It pulls in the old osgi core transitively, and causes this exception:

{code}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:compile (default-compile) on project org.apache.felix.serializer: Compilation failure: Compilation failure:
[ERROR] /Users/dleangen/libs/felix/converter/serializer/src/main/java/org/apache/felix/serializer/impl/Activator.java:[35,16] no suitable method found for registerService(java.lang.Class<org.osgi.service.serializer.Serializer>,org.apache.felix.serializer.impl.json.JsonSerializerImpl,java.util.Dictionary<java.lang.String,java.lang.Object>)
[ERROR] method org.osgi.framework.BundleContext.registerService(java.lang.String[],java.lang.Object,java.util.Dictionary) is not applicable
[ERROR] (argument mismatch; java.lang.Class<org.osgi.service.serializer.Serializer> cannot be converted to java.lang.String[])
{code}

R6 allows a class as a parameter to BundleContext.registerService(), but R4 does not. I don't think it would be the right call to revert to the older version of this method call.","28/Feb/17 10:40;cziegeler;ok, then you have two options:
a) put the dependency to utils after the one to osgi.core
b) exclude the dependency to core 4.1 from the utils dependency (https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html)

","28/Feb/17 10:46;dleangen;Well well well... I had no idea that ordering mattered! Ok, thanks, that worked.",28/Feb/17 11:05;dleangen;Resolved in rev 1784722,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException during bundle update,FELIX-5103,12913404,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,brampouwelse,brampouwelse,16/Nov/15 19:02,24/Feb/17 13:03,13/Mar/19 22:56,24/Feb/17 13:03,framework-4.2.1,framework-5.2.0,,,,,Framework,,,0,,,,,,"I have traces like the one below quite often when bndtools is updating bundles in a running framework.  

{code}
! Error in updating the framework from the properties: Index: 0, Size: 0
! Bundle files does not exist: /Users/brampouwelse/git-repos/path/to/project/generated/mybundle.jar
ERROR: Bundle mybundle [251] Unable to update the bundle. (java.lang.IndexOutOfBoundsException: Index: 0, Size: 0)
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
    at java.util.ArrayList.rangeCheck(ArrayList.java:653)
    at java.util.ArrayList.get(ArrayList.java:429)
    at org.apache.felix.framework.BundleImpl.adapt(BundleImpl.java:1064)
    at org.apache.felix.framework.BundleImpl.getSymbolicName(BundleImpl.java:896)
    at org.apache.felix.framework.BundleImpl.createRevision(BundleImpl.java:1226)
    at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:1141)
    at org.apache.felix.framework.Felix.updateBundle(Felix.java:2282)
    at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:973)
    at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:960)
    at aQute.launcher.Launcher.synchronizeFiles(Launcher.java:534)
    at aQute.launcher.Launcher.update(Launcher.java:405)
    at aQute.launcher.Launcher$1.run(Launcher.java:194)
    at java.util.TimerThread.mainLoop(Timer.java:555)
    at java.util.TimerThread.run(Timer.java:505)
! Failed to update bundle /Users/brampouwelse/git-repos/path/to/project/generated/mybundle.jar, exception Update of bundle mybundle [251] failed.
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
    at java.util.ArrayList.rangeCheck(ArrayList.java:653)
    at java.util.ArrayList.get(ArrayList.java:429)
    at org.apache.felix.framework.BundleImpl.adapt(BundleImpl.java:1064)
ERROR: Bundle myotherbundle [252] Unable to update the bundle. (java.lang.IndexOutOfBoundsException: Index: 0, Size: 0)
    at org.apache.felix.framework.BundleImpl.getSymbolicName(BundleImpl.java:896)
    at org.apache.felix.framework.BundleImpl.createRevision(BundleImpl.java:1226)
    at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:1141)
    at org.apache.felix.framework.Felix.updateBundle(Felix.java:2282)
    at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:973)
    at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:960)
    at aQute.launcher.Launcher.synchronizeFiles(Launcher.java:534)
    at aQute.launcher.Launcher.update(Launcher.java:405)
    at aQute.launcher.Launcher$1.run(Launcher.java:194)
    at java.util.TimerThread.mainLoop(Timer.java:555)
    at java.util.TimerThread.run(Timer.java:505)
! Failed to update bundle /Users/brampouwelse/git-repos/path/to/project/generated/myotherbundle.jar, exception Update of bundle myotherbundle [252] failed.
{code}

Just had a look at the Felix code and this part is interesting. 

{code:title=BundleImpl.java}
    synchronized void revise(String location, InputStream is)
        throws Exception
    {
        // This operation will increase the revision count for the bundle.
        m_archive.revise(location, is);
        try
        {
            BundleRevision revision = createRevision(true);
            addRevision(revision);
        }
        catch (Exception ex)
        {
            m_archive.rollbackRevise();
            throw ex;
        }
    }
{code}

If the {{createRevision}} call throws an exception {{m_archive.rollbackRevise()}} is called this is removing revision at index 0 but the new revision was never added so it's removing the current revision instead of the new revision.  



Link to the bndtools issue: https://github.com/bndtools/bndtools/issues/1217",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-24 12:52:02.877,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Feb 24 13:03:36 UTC 2017,,,,,,0|i2oghz:,9223372036854775807,,,,,,,,24/Feb/17 12:52;karlpauls;Not sure this is still current but I want to look at it.,"24/Feb/17 13:03;karlpauls;I'm pretty sure this is fixed (or at least doesn't apply anymore). Please reopen if you still think it applies.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
new URL(string) suffers under concurrency,FELIX-5363,13007191,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,rryan@adobe.com,rryan@adobe.com,23/Sep/16 16:13,24/Feb/17 12:24,13/Mar/19 22:56,25/Sep/16 22:17,framework-5.4.0,,,,framework-5.6.1,,Framework,,,0,,,,,,"Under moderate concurrency (25threads) and frequent use of new java.net.URL(string) a bottleneck was seen with yourkit.  In one test involving HTML page generation new URL(url) was seen to take 20% of time (via yourkit).

This was tracked to org.apache.felix.framework.URLHandlers.getFrameworkFromContext() URLHandlers.java which accounted for 99% of the time used by new URL(url).

",,,,,,,,,,,,FELIX-4544,,,,,,,,,23/Sep/16 16:14;rryan@adobe.com;Merged-callees.csv;https://issues.apache.org/jira/secure/attachment/12830079/Merged-callees.csv,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-09-23 18:38:19.255,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Sep 25 22:17:26 UTC 2016,,,,,,0|i340hj:,9223372036854775807,,,,,,,,23/Sep/16 16:14;rryan@adobe.com;callees report from new URL(string) under moderate concurrency.,"23/Sep/16 18:38;karlpauls;Hm, maybe I'm reading this wrong but it looks to me like it isn't actually URLHandlersStreamHandlerProxy.getStreamHandlerService()  but rather URLHandlers.getFrameworkFromContext() which is the culprit (time v.s. own time). That would make sense to me as it is potentially a expensive call (depending on what you are doing, you might be able to disable the url handlers with felix.service.urlhandlers=false but that likely has to many sideeffects). 

However, you shouldn't necessarily run into the expensive part of it - are you running more than one framework at the same time? 

. ","23/Sep/16 18:49;rryan@adobe.com;yes it is about getFrameworkFromContext. true. 

There is only one framework in this case.

It doesn't appear to be a matter of expensive work, per se, rather expensive synchronization.  No time under getFrameworkFromContext is attributed to any called methods, and it starts with a synchronized block.  It appears likely that this call simply gets called enough that there are collisions enough to have java expand this particular synchronized block into a full (expensive) lock vs its usual cheaper treatment of synchronized blocks with low to no concurrency.


Note: the raw yourkit data lists plently of java.* things so it isn't likely that any significant time is being misattributed to getFrameworkFromContext as opposed to a callee.","23/Sep/16 19:06;karlpauls;Yeah, thats why I was asking if you had more than one framework. As you don't, it pretty much must be just the double lock that needs to be acquired. This code was written before we had java.util.concurrent (or at least while we where still targeting < 1.5) but as we are past that it should be easy to make this bottleneck go away. 

Will you be able to run your set-up in question with a patched version of felix (if so, I'll try to get you a patch that hopefully performs better)? ","23/Sep/16 19:20;rryan@adobe.com;I won't have availability for a few days, so no rush, but yes I'm in a position to test a patch.
","25/Sep/16 22:17;karlpauls;I did some testing on my local machine having some 25 threads create and connect about 4M urls in a tight loop and yes, while my system has 8 cores it never gets above 400%. 

I reworked the URLHandlers and related classes all the way down to the service lookup to be lock free on the lookup up path (i.e., the one needed for URL creation and usage) and now the test runs in about half the time. More importantly, it does max out all my cores - in other words, it probably would do even better with more cores available. 

As the ct and some other tests I run still pass I committed this in r1762242. 

Please try it out and if it works for you close this issue - otherwise, feel free to reopen with updated info on performance problems.

In any case, good catch - this is definitely a good improvement. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,
DataModelHelperImpl leaks Zip Streams / native Memory,FELIX-5540,13042452,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,fabianlange,fabianlange,13/Feb/17 02:18,20/Feb/17 07:48,13/Mar/19 22:56,20/Feb/17 07:48,,,,,bundlerepository-2.0.10,,Bundle Repository (OBR),,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,13/Feb/17 02:19;fabianlange;bundlerepo.diff;https://issues.apache.org/jira/secure/attachment/12852282/bundlerepo.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2017-02-20 07:48:11.028,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 20 07:48:11 UTC 2017,,,,,,0|i39z4f:,9223372036854775807,,,,,,,,"20/Feb/17 07:48;cziegeler;Thanks for your patch, it's applied in rev 1783718",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Windows files break the JSON parser,FELIX-5414,13021017,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,dleangen,dleangen,16/Nov/16 02:34,17/Feb/17 07:16,13/Mar/19 22:56,17/Feb/17 07:16,,,,,,,Converter,,,0,,,,,,"The parser outputs this error when attempting to parse a file with Windows newlines:
{code}
java.lang.IllegalArgumentException: Malformatted JSON key-value pair: [DATA-DELETED]
	at org.apache.felix.serializer.impl.json.JsonParser.parseKeyValue(JsonParser.java:96)
	at org.apache.felix.serializer.impl.json.JsonParser.parseObject(JsonParser.java:142)
	at org.apache.felix.serializer.impl.json.JsonParser.<init>(JsonParser.java:79)
	at org.apache.felix.serializer.impl.json.JsonDeserializingImpl.from(JsonDeserializingImpl.java:68)
	at org.apache.felix.serializer.impl.json.JsonDeserializingImpl.from(JsonDeserializingImpl.java:89)
	at org.apache.felix.serializer.impl.json.JsonDeserializingImpl.from(JsonDeserializingImpl.java:81)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2016-11-16 02:34:21.0,,,,,,0|i36dmv:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issues with substituted exports with require bundle,FELIX-5514,13040246,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,tjwatson,tjwatson,tjwatson,03/Feb/17 21:30,16/Feb/17 20:51,13/Mar/19 22:56,09/Feb/17 17:48,resolver-1.10.1,,,,resolver-1.12.0,,Resolver,,,0,,,,,,"When resolving require-bundle requirements there is an issue if the bundle being required has substituted exports.  The issue is that any requiring bundle will not have the export substituted included in their own class space.  At runtime the OSGi core specification requires that substituted exports be accessible to requiring bundles.  This can cause issues in the consistency check done by the resolver because the class space the requiring bundle will be missing packages that should be visible.

The resolver needs to keep track of substituted exports and make sure to include any substitutions in the class spaces of the requiring bundles.",All,,,,,,,,,,,,,,FELIX-5547,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Feb 09 17:48:25 UTC 2017,,,,,,0|i39ll3:,9223372036854775807,,,,,,,,09/Feb/17 17:48;tjwatson;I fixed this by keeping track of substitutions in the resolver for resources it is resolving.  For resources that have existing wirings I added a new method to FelixResolveContext called getSubstitutionWires so that the resolve doesn't have to recalculate this in cases where the resolve context already keeps track of it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fragments with multiple hosts can cause java.lang.ArrayIndexOutOfBoundsException,FELIX-5450,13028490,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,tjwatson,tjwatson,tjwatson,15/Dec/16 20:27,16/Feb/17 20:50,13/Mar/19 22:56,15/Dec/16 21:53,resolver-1.10.1,,,,resolver-1.12.0,,Resolver,,,0,,,,,,"The fix in FELIX-5389 for ShadowList is not complete.  There are still cases where the underlying ArrayList from the CandidateSelector is reused in the ShadowList when it is not intended.  This leads to exceptions like the following:

java.lang.ArrayIndexOutOfBoundsException: -1
	at java.util.ArrayList.elementData(ArrayList.java:418)
	at java.util.ArrayList.set(ArrayList.java:446)
	at org.apache.felix.resolver.util.ShadowList.replace(ShadowList.java:81)
	at org.apache.felix.resolver.Candidates.prepare(Candidates.java:915)
	at org.apache.felix.resolver.ResolverImpl.getInitialCandidates(ResolverImpl.java:502)
	at org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:387)
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:375)
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:368)

This is happening when there are multiple hosts for a single fragment and the fragment has a requirement that is getting resolved to a candidate from another host resource that also has at least one fragment.

The issue comes up when replacing the capability from the host with a wrapped capability for the fragment requirement which is a payload requirement for more than one host.  It should do this for each WrappedRequirement that is wrapping the payload requirement from the fragment to each host.  The first WrappedRequirement has its candidates modified, but that changes the shared ArrayList of the candidates for each of the other WrappedRequirements for the other hosts.  The fix for this is to ensure the ArrayList from a CandidateSelector is never shared with a ShadowList.

But once I fixed this I ran into another strange issue that ended up causing Uses constraint errors like this:

org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource host [osgi.identity; host] because it is exposed to package 'exporter' from resources exporter [osgi.identity; exporter] and exporter [osgi.identity; exporter] via two dependency chains.

Chain 1:
  host [osgi.identity; host]
    import: (osgi.wiring.package=exporter)
     |
    export: osgi.wiring.package: exporter
  exporter [osgi.identity; exporter]

Chain 2:
  host [osgi.identity; host]
    import: (osgi.wiring.package=exporter)
     |
    export: osgi.wiring.package: exporter
  exporter [osgi.identity; exporter]

This only happens if a fragment has more than one host and the fragment and host have a requirement for a the same package.  Additionally the capability that satisfies the payload requirement must come from a host that also has at least one fragment.  The issue here is how we are finding CandidateSelectors of depending requirements when we need to replace a capability with a wrapped capability.  There is a loop in the Candidates.prepare method which is says ""Copy candidates for fragment requirements to the host."".  This loop basically copies the candidates from the original requirement from the fragment to a CandidateSelector for the WrappedRequirement for the host.  But it also removes the original requirement from the dependents for the capability.  If there are multiple hosts this becomes problematic because this dependency set is used to find CandidateSelectors that need to be modified when wrapping a host.  But since we remove the original requirement from the fragment that means any other hosts the fragment is attached to will not be discovered and therefore will not have the original capability properly replaced with the WrappedCapability.  That makes the consistency check fail and give this bogus message that make it look like there are 2 identical chains leading to the identical capability.  But the two capabilities are different because one is wrapped and one is not.

The fix is to separate out the inner loop that ""Copy candidates for fragment requirements to the host."" to a outer loop that is done before the main loop over the hostResources.  This way we properly setup all the CandidateSelector for the payload WrappedRequirements before actually modifying the CandidateSelector capabilities with the WrappedCapabilities.

Super long story short:  Fragments are just horribly complex. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Dec 15 21:53:41 UTC 2016,,,,,,0|i37nrb:,9223372036854775807,,,,,,,,15/Dec/16 21:53;tjwatson;I committed a fix along with two new tests.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't take implicit boot delegation into account on service assignability check,FELIX-5544,13042974,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,14/Feb/17 15:26,14/Feb/17 16:19,13/Mar/19 22:56,14/Feb/17 16:19,framework-5.6.1,,,,framework-5.6.2,,Framework,,,0,,,,,,"We have a problem in the service lookup path when,

1) the class that instigates the lookup is coming from the outside
2) and the service class can actually be loaded from the outside but isn’t assignable to the class of the service
3) and both, the requirer and the provider, don’t have a wire to the package of the service class.

We need to stop trying to implicitly bootdelegate in the service lookup.",,,,,,,,,,,,,,,,,,,FELIX-5507,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Feb 14 16:19:34 UTC 2017,,,,,,0|i3a2c7:,9223372036854775807,,,,,,,,14/Feb/17 16:19;karlpauls;I fixed this in r1782982. I added a test case that reproduces the issue and makes sure its working as well as makes sure the implicitbootdelegation is working for the normal class load.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConfigSpiOSGi may end with incomplete realm due to race conditions,FELIX-5536,13042148,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chetanm,chetanm,chetanm,10/Feb/17 18:40,10/Feb/17 18:57,13/Mar/19 22:56,10/Feb/17 18:57,,,,,jaas-1.0.2,,JAAS,,,0,,,,,,"Some race conditions around this have been fixed with FELIX-5505. However one more case surfaced where {{ConfigSpiOsgi#recreateConfigs}} can be invoked concurrently without lock from 

# {{ConfigSpiOsgi#updated}} - When ConfigurationAdmin dispatches config update for {{org.apache.felix.jaas.ConfigurationSpi}}
# {{ConfigSpiOsgi#addingService}} - When some LoginModuleFactory is registered

In such a case the setup may end up with incomplete realm where some LoginModuleFactory are missed out",,,,,,,,,,,,,,,FELIX-5505,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Feb 10 18:57:36 UTC 2017,,,,,,0|i39x93:,9223372036854775807,,,,,,,,10/Feb/17 18:45;chetanm;Adding ignored test in 1782497,10/Feb/17 18:57;chetanm;Fixed with 1782501,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't process methods declared on the Annotation class,FELIX-5530,13041425,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,rotty3000,rotty3000,08/Feb/17 16:40,09/Feb/17 04:39,13/Mar/19 22:56,09/Feb/17 04:39,,,,,,,Converter,,,0,,,,,,"when converting annotations to Maps, don't handle the methods on the Annotation class, similar to how those from Object are ignored.

e.g.
{code:java}
Annotation annotation = (Annotation)...;
Map<String, Object> map = c.convert(annotation).sourceAs(
    annotation.annotationType()).to(
    new TypeReference<Map<String, Object>>(){});
{code}

In the above case the detection of properties should include a check like so:
{code:java}
        if (Object.class.equals(md.getDeclaringClass()) ||
            Annotation.class.equals(md.getDeclaringClass()))
            return null; // do not use any methods on the Object or Annotation class as a accessor
{code}
to avoid creating properties for annotationType, equals, hashCode, and toString (which in it's case are methods declared on the Annotation.class not Object.class).

Also note that it should be made clear when handling annotations that the {{sourceAs}} modifier should always be used with the result of {{annotation.annotationType()}} result because the {{getClass}} of an annotation object always returns the proxy class and not the Annotation type which confuses the converter.

e.g.
{code:java}
.sourceAs(annotation.annotationType()).to(...)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-08 16:52:49.658,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Feb 09 04:39:10 UTC 2017,,,,,,0|i39ssf:,9223372036854775807,,,,,,,,"08/Feb/17 16:52;githubbot;GitHub user rotty3000 opened a pull request:

    https://github.com/apache/felix/pull/91

    FELIX-5530 Don't process methods declared on the Annotation class

    Signed-off-by: Raymond Augé <rotty3000@apache.org>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rotty3000/felix FELIX-5530

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/91.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #91
    
----
commit bee87e64f42d53778014cfb327151d4ad9d8fd17
Author: Raymond Augé <rotty3000@apache.org>
Date:   2017-02-08T16:41:26Z

    FELIX-5530 Don't process methods declared on the Annotation class
    
    Signed-off-by: Raymond Augé <rotty3000@apache.org>

----
","09/Feb/17 04:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/91
",09/Feb/17 04:39;bosschaert;Thanks Ray! It's committed in https://svn.apache.org/viewvc?view=revision&revision=1782291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"For overloaded methods in interfaces, ensure there's a default (no-arg) method when converting to Map",FELIX-5529,13041420,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,rotty3000,rotty3000,08/Feb/17 16:09,09/Feb/17 04:13,13/Mar/19 22:56,09/Feb/17 04:12,,,,,,,Converter,,,0,,,,,,"When an interface implementing single argument methods (for passing default value) an error occurs when converted to Maps if there's no default (no-arg) method for the same key, since the backing fails on the method call.",Any,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-08 16:49:59.739,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Feb 09 04:13:56 UTC 2017,,,,,,0|i39srb:,9223372036854775807,,,,,,,,"08/Feb/17 16:49;githubbot;GitHub user rotty3000 opened a pull request:

    https://github.com/apache/felix/pull/90

    FELIX-5529 For overloaded methods in interfaces, ensure there's a def…

    …ault (no-arg) method when converting to Map
    
    Signed-off-by: Raymond Augé <rotty3000@apache.org>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rotty3000/felix FELIX-5529

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/90.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #90
    
----
commit ed5a0aa4f0656316ed99706b722294fd6dac6d7a
Author: Raymond Augé <rotty3000@apache.org>
Date:   2017-02-08T16:12:28Z

    FELIX-5529 For overloaded methods in interfaces, ensure there's a default (no-arg) method when converting to Map
    
    Signed-off-by: Raymond Augé <rotty3000@apache.org>

----
","09/Feb/17 04:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/90
",09/Feb/17 04:13;bosschaert;Thanks Ray! It's committed in https://svn.apache.org/viewvc?view=revision&revision=1782289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ensure that unbound services are always handled synchronously,FELIX-5471,13031278,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,30/Dec/16 14:10,06/Feb/17 15:08,13/Mar/19 22:56,06/Feb/17 15:08,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"When a component loses a service dependency, it should handle the lost service synchronously. For example, if service A loses a dependency on B (because B is being unregistered),  then A.remove(B) should be called synchronously (when B is being unregistered from the service registry), else the A.remove(B) callback could possibly be invoked while B is already unregistered and stopped.

Currently, unbound services may be handled asynchronously if DM is used in a concurrent mode (using a threadpool). And even if no threadpool is used, the issue may happen if there is a highly concurrent situation where services are registered/removed concurrently from multiple threads.

So, a patch should be done in order to ensure that a service dependency remove event is always handled synchronously (especially if DM is used with a threadpool).

I will provide a testcase soon.

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-01-01 12:07:32.618,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 15:08:42 UTC 2017,,,,,,0|i384yf:,9223372036854775807,,,,,,,,"30/Dec/16 14:13;pderop;Added test in revision 1776573:

org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/FELIX5471_SynchronousUnbindTest.java","30/Dec/16 14:25;pderop;Committed patch in 1776574.

A new schedule(boolean synchronous, Runnable task) has been added in ComponentImpl.java, allowing to possibly schedule a task synchronously through the internal component executor queue. The method uses a timeout of 30 seconds to protect against infinite wait, and the timeout can be configured using the DependencyManager.SCHEDULE_TIMEOUT constant, which is a bundle context property. it may take a value in  millis. (30000 by default).

So, ComponentImpl class is now using the new schedule method in order to handle removed dependency events synchronously. The ComponentImpl.stop() method is now also using the same schedule method, and the InvokcationUtil.invokeUpdated callback is also reusing the DependencyManager.SCHEDULE_TIMEOUT constant, when handling CM configuration update events.","01/Jan/17 12:07;JeroenDaanen;Indeed this solves the problems we talked about in the felix user mailing list.
However, I am wondering wether it is a good decision to introduce the timeout. 
If I am correct, the timeout for instance occurs when handling the remove callback takes a long time e.g. when the component is just processing the services its requires in a synchronized block, while the remove callback is synchronized on the same, or the implementation of the remove call back triggers a lot. This could easily take some time depending on your implementation, so you could run into this timeout pretty quickly. 
My suggestion would be to remove the timeout and the configurable property and just wait endlessly, because if thats happening I think there is another programming error (a deadlock or something) which must not be just 'ignored' by the warning message which is logged now when the timeout occurs.
What do you think Pierre?","02/Jan/17 08:20;pderop;Hello Jeroen;

The timeout I introduced last friday was because I wanted to avoid a corner case where lost dependencies could be stopped before calling ""removed"" callbacks (I will explain this below).
But to be honest, I should not have added this timeout because I realize that it may generate some deadlocks. I have added the FELIX5471_CyclicDependencyTest.java which demonstrates the deadlock:
So, running this test with the timeout guard in the ComponentImpl.schedule method (ComponentImpl.java, in revision 1776641) produces a deadlock, and after 30 seconds, we see this message log:

<code>
WARN - pool-3-thread-2 : [pool-3-thread-2] task could not be scheduled timely in component org.apache.felix.dm.itest.api.FELIX5471_CyclidDependencyTest$A (exception: java.util.concurrent.TimeoutException)
WARN - pool-3-thread-1 : [pool-3-thread-1] task could not be scheduled timely in component org.apache.felix.dm.itest.api.FELIX5471_CyclidDependencyTest$B (exception: java.util.concurrent.TimeoutException)
</code>

So, for now, I have committed a new patch (in revision 1776903.) which includes the FELIX5471_CyclicDependencyTest.java test. The patch does not use the timeout in the ComponentImpl.schedule method anymore.

Now, actually, the real patch which (partially) resolves the issue you found is that now, when we are
handling a REMOVED service event, then if a threadpool is used we try to not reschedule the REMOVED event it it and we try to call the handleRemoved method synchronously. Initially, the problem was that if a threadpool was used, then the REMOVED event was always scheduled in it, and the event was always handled asynchronously.

So, let me try to explain deeper what was going on using the scenario you gave in the users mailing list (that is: M depends on X, and M.remove(X) is called but at this point, X is already stopped):

1) So, X is being unregistered from the OSGi service registry. That is: the ComponentImpl for X is currently invoking m_registration.unregister() in the ComponentImpl.unregisterService() method.

2) Then, the framework callbacks the tracker of the M component, which ends up calling the ComponentImpl.handleEvent() method with the event for X being unregistered.
At this point, we are still in the call stack of the unregisterService for X (see step 1).
But the bug is that if we are using a threadpool, then the Component.handleRemoved() method was always executed asynchronously in the threadpool.

3) So, while the Component.handleRemoved method (for M) is being scheduled in the threadpool, then we return from the handleEvent method and then
the ComponentImpl.unregisterService() method returns (from step 1). So, then, at this point the thread from (1) ends up calling the X.stop() method, but
at a point where M.unbind(X) method has not been yet been scheduled and executed in the threadpool. So, in this case, X.stop() is called , and then, M.remove(X) is
called.

So, now, the Component.handleRemoved() method is not rescheduled in the threadpool (if possible). see the schedule method which invokes the DispatchExecutor.execute method:

{code}
    // Try to execute the task from the current thread if the threadpool is not currently running our queue.
    ((DispatchExecutor) exec).execute(task, false);
{code}

So, the patch will try to not schedule the Component.handleRemoved()  in the threadpool, but instead will invoke the method synchronously.

Unfortunately, the patch is not perfect, because the DispatchExecutor won't invoke the task synchronously if the queue for the Component is currently executing another task (like a concurrent service ADD event). This may happen in a highly concurrent situations, and for now, I don't see an easy solution in order to make sure M.remove(X) is called before X.stop().

For example, if during the unregistration of the X service, then at the same time another thread is registering a Z service on which M depends on, then it is possible that
at the time the ComponentImpl for M is called in handleEvent for the REMOVED X event , then the threadpool may possibly be currently handling the ADDED Z event.
In this case, since the state machine is single threaded, it won't be possible to handle the REMOVED X event synchronously, and the Component.handleRemoved() method call will be
scheduled in the threadpool, which will be executed after the handling of the Z ADDED event, but in this case, X.stop() will possibly be called before M.remove(X) is invoked.

Please notice that this can also happen even if no threadpool is used (antoher master thread me be running the queue while we are handling the REMOVED X event).

So, this is for this reason that I also introduced last friday the timeout guard in the schedule method (if the synchronous flag is true).
However, it does not work because it may introduce a nasty deadlock which is reproduced in the FELIX5471_CyclicDependencyTest.java test.

So, for now, I have simply removed the usage of the timeout guard.

it means that for most situations (whether or not you are using a threadpool), the ordering will be guaranteed.
But if there is a highly concurrent situation where some services are unregistered while others are added from multiple distinct threads, then the ordering can't be guaranteed in all cases.
Always ensuring the ordering guarantee seems that we would have to rework the state machine thread model with complex internal locking policy, and I'm not sure it's worth doing this.
Anyway, I will try to contact Marcel and see what he is thinking and will get back to this issue in case some more rework has to really be done.

Now,  I would also be interested to have your opinion ? do you think what is committed is reasonable ?

thanks a lot Jeroen;
/Pierre
","02/Jan/17 10:41;JeroenDaanen;I am glad you could remove the timeout. The new implementation looks good to me, only the comments on line 1695-1697 of ComponentImpl are a bit confusing (how would it be possible to don't have the SerialExecutor at that point when trySynchronous is true (except when someone overrides getExecutor)).

In order to create stable and reliable software, I do have to be sure that the order is guaranteed. Also I think the usage of the dependency manager is pretty concurrent in our software (when setting it to parallel), but I cannot estimate what the actual chance is of the order not being guaranteed? Can it be reproduced in a unit test? 
Anyway, I would really appreciate if this can be fixed and the order is always guaranteed.","04/Jan/17 21:57;pderop;Hi Jeroen,

I have committed a patch in rv 1777378 in ComponentImpl class in order to clarify the javadoc for the schedule method, and I renamed the ""trySynchronous"" argument of the schedule method to ""bypassThreadPoolIfPossible"" in order to make the method less confusing. So if there is no threadpool, the flag is ignored and then the default serial queue executor is used (the task is scheduled synchronously if the queue is not currently being run by another master thread). If now a threadpool is used and if bypassThreadPoolIfPossible is true, then the task is also run synchronously if the queue is not currently being run from the threadpool.

So, whether or not a ComponentExecutorFactory is used, we always try to handle removed service events synchronously if the component is not currently handling a service dependency (if its queue is idle, not busy).

Now let's try to clarify so you can estimate if you may or may not have the issue (whether or not you use a ComponentExecutorFactory):

* First let's recap the issue: sometimes, when a service X is being unregistered, then the other services (M for example) depending on X may not be called in M.unbind(X) synchronously while X is being unregistered. So X may then be stopped at a point where M.unbind(X) is not yet called (but will be called eventually, soon).

* When the issue does not happen ? you won't have the ordering issue if you stop your components synchronously from a single thread and after all components have been started (like it is the case for example when the framework is shutting down or when you manually stop a bundle from the gogo shell).

* When the issue may happen ? you may have the issue if you concurrently add *and* remove some components at the same time. For example you may have the issue in the following use case (whether or not you use concurrent DM):
** X, and Y are available, and M optionally depends on X, Y.
** you add M from thread T1
** then concurrently, you remove X from thread T2

So, using the scenario above,  it may happen that M.unbind(X) is called after X.stop().
This is because we have implemented the thread model in a non blocking way, using queues.

So to summarize: if you manage to stop components from a single thread  and at a point where components are all fully started, then there is no issue.

Now, I also added two concurrent test cases:

- ServiceRaceWithOrderedUnbindTest.java: this junit test does not use DM in concurrent mode (no ComponentExecutorFactory is used, as it is the case in default DM). So, the test uses manually created threads in order to perform concurrent component creations. Then, the components are unregistered from a single thread. And the test verifies if the unbound methods are called synchronously while the lost service dependencies are being unregistered.

- ServiceRaceParallelWithOrderedUnbindTest.java: same test as above, but this time we are using a ComponentExecutorFactory (concurrent DM is used). 

So, are you stopping components while some other components are starting concurrently ?

thank you.","05/Jan/17 12:29;JeroenDaanen;Yes we are stopping components while some other components are starting concurrently.
For instance, we use the dependency manager to create services based on what an end user has configured. So a configuration change may trigger the removal services, which will be replaced by other or new services. On top of that we have services launching other services, which are being required/used in other services.
","08/Jan/17 18:34;pderop;Hello Jeroen,

Ok; so last week, I made an attempt to try to introduce some locking in the component state machine in order to block
unregistering threads until listeners are called (like blocking the thread which is unregistering X until M.unbind(X) is called).
So, I tried to introduce a ""Future"" object in the Component.schedule() method in order to block the thread which is calling handleEvent() method with a REMOVED event (as I did in the previous patch which I reverted).

However, I came across some deadlocks especially when you have some cycles between components.

Then I tried to invoke the Component.unregisterService() method outside of the Component queue, but I then had to create a new UNREGISTERING state and I had to also implement a mechanism in order to allow to schedule a task outside the queue.
But even after having done that, I then came across some remaining concurrency issues and some concurrent tests were not working anymore.

I then abandoned and finally had the opportunity to have a long discussion with Marcel, and we came to the conclusion that
implementing synchronous listener notification (that is: M.unbind(X)) for service unregistration (when S is unregistering) in all concurrent scenarios would definitely weaken a lot the locking model currently used in DM (it could be possible but at a very high cost and with a major refactoring, and it's not reasonable to do that for the moment).

that being said, there is now some other aspects to consider: if the X service is already stopped at the time M.unbind(X) is called, then the X service is said to be ""stale"" in the osgi spec, and in this case, the behavior of a ""stale"" service object that becomes unregistered is undefined.
Such service objects may continue to work properly or throw an exception at their discretion (see 5.7 ""Stale Reference"" in core spec), or the objects could simply silently ignore further method calls after they are stopped.

So, in the framework there is a runtime org.osgi.framework.ServiceException exception which you could throw from X component in case M.unbind(X) calls some X methods after X has been stopped.
That exception also allows you to specify a reason why the call failed, and M.unbind method could then just log it.

So, all in all, it's not worth doing a massive refactoring for the moment, it would be too dangerous. If now you would like avoid the situation where the stale components can be temporarily called when unbound from other services, then may be the option is for the moment to not use the concurrent mode of DM  and use the single thread mode, as before (sorry about that).

","10/Jan/17 11:22;JeroenDaanen;Ok, I understand that. 
Now we know that if using the dependency manager in parallel you might, in highly concurrent situations, encounter a service being removed which is already 'stale'/stopped and just have to account for that.
Thanks a lot for investigating and discussing this, Pierre!",06/Feb/17 15:08;pderop;Just putting this issue to resolved before doing the release ...,,,,,,,,,,,,,,,,,,,,,,
services are not ungotten when swapped by an aspect,FELIX-5519,13040600,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,06/Feb/17 11:05,06/Feb/17 14:57,13/Mar/19 22:56,06/Feb/17 14:57,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"when a client is swapped with an aspect, then the original swapped service is not ungotten.

I will commit soon a test case for this (UngetAspectServiceTest.java)
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 14:57:55 UTC 2017,,,,,,0|i39np3:,9223372036854775807,,,,,,,,"06/Feb/17 14:57;pderop;fixed in revision 1651957
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
required dependencies added to a started adapter (or aspect) are not injected,FELIX-5523,13040605,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,06/Feb/17 11:14,06/Feb/17 14:56,13/Mar/19 22:56,06/Feb/17 14:56,dependencymanager-3.2.0,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"You declare an aspect or an adapter, and you start it.
Now the aspect (or adapter) is instantiated because an original service (or an adapted service) is registered.
Then later, you add a required available dependency to the aspect (or adapter).
Then if the dependency is required and available, it is then not injected in the aspect (or adapter) instance.

Will commit soon the corresponding test case in  AspectNotAlwaysInjectedWithRequiredDependencies.java
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 14:56:20 UTC 2017,,,,,,0|i39nq7:,9223372036854775807,,,,,,,,"06/Feb/17 14:56;pderop;fixed in revision r1651957
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression: Native JNA bundle cannot be installed on Windows Server 2012,FELIX-5184,12938794,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,mcculls,mcculls,12/Feb/16 12:26,25/Jan/17 14:57,13/Mar/19 22:56,24/Jan/17 00:03,framework-5.4.0,,,,framework-5.6.2,,Framework,,,3,,,,,,"The alias for Windows 2012 seems to have been lost when the ""osname"" aliases were moved to framework/src/main/resources/default.properties (in https://github.com/apache/felix/commit/c2b87c099bf3b5efc535cc80abc0d78fe9a7c2c0)

The following line should be added to framework/src/main/resources/default.properties:
{code}
felix.native.osname.alias.windowsserver2012=windows server 2012,win32
{code}",Windows 2012,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-07-15 21:44:21.908,,,no_permission,,,,Patch,,,,,,,,9223372036854775807,,,Wed Jan 25 14:57:28 UTC 2017,,,,,,0|i2srrj:,9223372036854775807,,,,,,,,15/Jul/16 21:44;andrew.tolbert;I am also encountering this with Felix 4.6.0.  The workaround for me was to add '-Dos.name=win32' to my jvm arguments.,"23/Jan/17 15:49;githubbot;GitHub user tobias-- opened a pull request:

    https://github.com/apache/felix/pull/87

    [FELIX-5184] Add alias for Windows Server 2012

    default.properties were missing alias for Windows Server 2012. 
    
    See [FELIX-5184:](https://issues.apache.org/jira/browse/FELIX-5184)

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tobias--/felix add-windows-2012-alias

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/87.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #87
    
----
commit 452e611daee4975f222c1e5c25ba4d2120470ae5
Author: tobias-- <tobias@niehues.me>
Date:   2017-01-23T15:46:09Z

    Add alias for Windows Server 2012

----
","24/Jan/17 00:03;bosschaert;Many thanks for your patch Tobias Niehues - it's applied in https://svn.apache.org/viewvc?view=revision&revision=1780003

This closes #87","24/Jan/17 06:58;githubbot;Github user tobias-- closed the pull request at:

    https://github.com/apache/felix/pull/87
","25/Jan/17 14:54;xfournet;The fix version is not good, since 5.6.1 release has been done the 24 October 2016, and the fix has been merged the 24 January 2017",25/Jan/17 14:57;bosschaert;Fixed the release version.,,,,,,,,,,,,,,,,,,,,,,,,,,
Schematizer POM requires updates,FELIX-5492,13035279,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,dleangen,dleangen,16/Jan/17 17:27,18/Jan/17 16:09,13/Mar/19 22:56,18/Jan/17 12:04,,,,,,,Converter,,,0,,,,,,Currently does not play well with other bundles due to a few issues with the POM.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-01-18 12:04:57.394,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Jan 18 12:04:57 UTC 2017,,,,,,0|i38rtr:,9223372036854775807,,,,,,,,"18/Jan/17 12:04;bosschaert;Many thanks [~dleangen], your patch is applied in https://svn.apache.org/viewvc?view=revision&revision=1779315

This closes #84",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][jline] The shell should display exception thrown from commands,FELIX-5498,13035838,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,18/Jan/17 10:12,18/Jan/17 10:15,13/Mar/19 22:56,18/Jan/17 10:15,gogo.jline-1.0.2,,,,gogo.jline-1.0.4,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Jan 18 10:15:19 UTC 2017,,,,,,0|i38v9r:,9223372036854775807,,,,,,,,"18/Jan/17 10:15;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/jline/src/main/java/org/apache/felix/gogo/jline/Shell.java
Committed r1779309
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update mime type in Schematizer,FELIX-5490,13035272,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,dleangen,dleangen,16/Jan/17 16:46,16/Jan/17 17:04,13/Mar/19 22:56,16/Jan/17 17:04,,,,,,,Converter,,,0,PR,,,,,"Mimetype needs to be changed from ""osgi.codec.mimetype"" to just ""mimetype"".",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-01-16 17:04:20.03,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jan 16 17:04:20 UTC 2017,,,,,,0|i38rsn:,9223372036854775807,,,,,,,,"16/Jan/17 17:04;bosschaert;Patch applied on behalf of [~dleangen] with many thanks!
https://svn.apache.org/viewvc?view=revision&revision=1779065",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][runtime] Avoid unnecessary conversions from strings to booleans/integers,FELIX-5486,13033684,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,11/Jan/17 11:03,11/Jan/17 11:08,13/Mar/19 22:56,11/Jan/17 11:08,gogo.runtime-1.0.2,,,,gogo.runtime-1.0.4,,Gogo Runtime,,,0,,,,,,"This can be problematic when calling methods and loosing the string if it looks like a number, for example:
{code}
> delete-version 1.10
{code}

During this call, the parameter is transformed to an integer and then back to a string, so the method is called with ""1.1"" instead of ""1.10"" which can be *really* problematic.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Jan 11 11:08:57 UTC 2017,,,,,,0|i38js7:,9223372036854775807,,,,,,,,"11/Jan/17 11:08;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Closure.java
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandProxy.java
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Reflective.java
	M	gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/TestCoercion.java
Committed r1778273
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][jline] The Main class should add a default Function->FunctionInterface converter,FELIX-5463,13030044,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,22/Dec/16 08:47,22/Dec/16 10:54,13/Mar/19 22:56,22/Dec/16 10:54,,,,,gogo.jline-1.0.4,,,,,0,,,,,,"The converter is added by the activator, but not outside of OSGi.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Dec 22 10:54:05 UTC 2016,,,,,,0|i37xcf:,9223372036854775807,,,,,,,,"22/Dec/16 08:57;gnt;Also, the conversion fails if the target interface has default methods.","22/Dec/16 10:54;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	A	gogo/jline/src/main/java/org/apache/felix/gogo/jline/BaseConverters.java
	A	gogo/jline/src/test/java/org/apache/felix/gogo/jline/BaseConvertersTest.java
	M	gogo/jline/src/main/java/org/apache/felix/gogo/jline/Converters.java
	M	gogo/jline/src/main/java/org/apache/felix/gogo/jline/Main.java
Committed r1775619
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo][runtime] Unable to add a converter using reflection,FELIX-5462,13030034,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,22/Dec/16 08:17,22/Dec/16 10:53,13/Mar/19 22:56,22/Dec/16 10:53,,,,,gogo.runtime-1.0.4,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Dec 22 10:53:38 UTC 2016,,,,,,0|i37xa7:,9223372036854775807,,,,,,,,"22/Dec/16 10:53;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/Reflective.java
	M	gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/ReflectiveTest.java
Committed r1775618

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Division by zero in new gogo for jline3,FELIX-5342,13004258,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,chris@die-schneider.net,chris@die-schneider.net,12/Sep/16 09:03,30/Nov/16 14:35,13/Mar/19 22:56,17/Sep/16 18:47,,,,,gogo.jline-1.0.0,,Gogo Shell,,,0,,,,,,"To reproduce start the shell, then type some invalid command like en then type tab twice. 
Interestingly it does not happens with abc and two tabs. I think this is because there are commands matching a.

gogoArithmeticException: / by zero
java.lang.ArithmeticException: / by zero
	at org.jline.reader.impl.LineReaderImpl$MenuSupport.next(LineReaderImpl.java:3808)
	at org.jline.reader.impl.LineReaderImpl$MenuSupport.<init>(LineReaderImpl.java:3800)
	at org.jline.reader.impl.LineReaderImpl.doMenu(LineReaderImpl.java:3945)
	at org.jline.reader.impl.LineReaderImpl.doList(LineReaderImpl.java:4089)
	at org.jline.reader.impl.LineReaderImpl.doComplete(LineReaderImpl.java:3710)
	at org.jline.reader.impl.LineReaderImpl.expandOrComplete(LineReaderImpl.java:3458)
	at org.jline.reader.impl.LineReaderImpl.readLine(LineReaderImpl.java:527)
	at org.apache.felix.gogo.jline.Shell.runShell(Shell.java:397)
	at org.apache.felix.gogo.jline.Shell.gosh(Shell.java:324)
	at org.apache.felix.gogo.jline.Activator.doStartShell(Activator.java:146)
	at org.apache.felix.gogo.jline.Activator.lambda$startShell$0(Activator.java:106)
	at java.lang.Thread.run(Thread.java:745)
",,,,,,,,,,,,,,,,,,,,,12/Sep/16 09:16;chris@die-schneider.net;samples.jar;https://issues.apache.org/jira/secure/attachment/12828002/samples.jar,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Sep 12 09:16:52 UTC 2016,,,,,,0|i33ifr:,9223372036854775807,,,,,,,,12/Sep/16 09:16;chris@die-schneider.net;Start this with java -jar samples.jar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove callbacks aren't called for optional dependencies in a ""circular"" dependency scenario",FELIX-5426,13023326,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,dobias,dobias,25/Nov/16 08:33,28/Nov/16 10:43,13/Mar/19 22:56,28/Nov/16 10:43,org.apache.felix.dependencymanager-r8,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"In some cases, the whiteboard pattern remove callbacks aren't called by the depenency manager.

See attached test class. Here some sort of ""cyclic"" dependency is made between 'Shop' -> 'Item' -> 'Shop'.

See the log when starting and stopping a bundle with the attached Activator.java for an example.

Some investigation pointed us to ComponentImpl line 1191:
{code}
if (dc.isRequired()) {
	invokeCallbackSafe(dc, EventType.REMOVED, e);
}
{code}

When removing the condition for the required dependency, the REMOVED callbacks are called!

Why is the above condition written in the ComponentImpl.java? Can you please investigate this?
 ",,,,,,,,,,,,,,,,,,,,,25/Nov/16 08:35;dobias;Activator.java;https://issues.apache.org/jira/secure/attachment/12840480/Activator.java,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-11-25 09:16:57.821,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Nov 28 10:43:21 UTC 2016,,,,,,0|i36rvz:,9223372036854775807,,,,,,,,"25/Nov/16 09:16;pderop;Hi Dobias,

I will investigate today and will let you know.
thanks.","25/Nov/16 09:17;pderop;Hi Dobias,

I will investigate today and will let you know.
thanks.","25/Nov/16 10:40;pderop;Dobias, 

I committed a quick patch in revision 1771275.
I have to go to now, but I will reconnect later today and will get back to you to explain more about the issue.
in the meantime, can you could give a shot to the trunk to see if your issue is fixed ?

PS: I did not have time to analyze and test your sample code but will do it today;

many thanks.","25/Nov/16 12:51;dobias;Hi Pierre,

Thanks for the quick action! I still encounter the same problems as described before however.. ""Items"" are still not removed properly.
","25/Nov/16 12:51;pderop;Sorry Dobias, please ignore my previous messages, I need to investigate more 
(I have uncommitted the revision 1771275).

","25/Nov/16 13:38;pderop;it looks like we posted at the same time and I did not see your last message ...
Ok, I'm starting to see the bug. and thanks Dobias, because your investigation was correct: it comes from the ""if (dc.isRequired()) {"" test.

but I need more time to fix this. will get you updated asap.

thanks","25/Nov/16 13:42;dobias;Thanks Pierre, I'll await your new update!","25/Nov/16 22:58;pderop;Hi Dobias,

I think I fixed this bug, and your sample Activator helped a lot; a big thanks !
it's nice that you reported this issue because I may make a release soon.

So, I created for this issue two test cases:

FELIX5426_OptionalCallbackNotCalledTest (I think it reproduces your usecase)
FELIX5426_OptionalChangeCallbackNotCalledTest (there is no bug for this one, it's just that  this kind of test was missing).

can you please give one another shot to the trunk ?

then please put this issue to resolved if all is well ... hopefully.

thanks.","26/Nov/16 22:47;dobias;Hi Pierre,

I did some quick tests and all seems to work fine now. Thanks for fixing this issue!
","28/Nov/16 10:43;pderop;Thanks Dobias for the check. Putting this issue to resolved.

PS: I will do my best to make a release this week.",,,,,,,,,,,,,,,,,,,,,,
httplite javadoc fails java8 javadoc lint,FELIX-5427,13023434,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,25/Nov/16 18:20,25/Nov/16 20:52,13/Mar/19 22:56,25/Nov/16 20:52,,,,,httplite-0.1.5,,Lightweight HTTP Service,,,0,,,,,,"It's not possible to release httplite using a Java 8 JDK because the javadoc fails lint.

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Nov 25 20:52:25 UTC 2016,,,,,,0|i36sjz:,9223372036854775807,,,,,,,,25/Nov/16 20:52;bmargulies;1771382.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependency events set not cleared when component is removed,FELIX-5428,13023443,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,25/Nov/16 20:39,25/Nov/16 20:42,13/Mar/19 22:56,25/Nov/16 20:42,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"During the implementation of 	FELIX-5336 (support for prototype scopes), I came across the following problem:

1) you create a Consumer component:

dm.add(consumer):

2) the consumer depends on some services providers, so you add two providers:

dm.add(p1);
dm.add(p2);

3) you remove the consumer:

dm.remove(consumer);

at this point, the consumer is unbound from the two providers because the consumer is being stopped, but the bug is the following: when the handleRemoved method is called, the events are not removed from the m_dependencyEvents collection because the  m_isStarted flag is set to true, so the two dependencies remains:

{code}
    private void handleRemoved(DependencyContext dc, Event e) {
    	try {
    		if (! m_isStarted) {
    			return;
    		}
{code}

4) now, you remove the two providers

5) you re-add the consumer and the two providers:

dm.add(consumer);
dm.add(p3);
dm.add(p4);

but when the consumer is re-added, it gets injected with the previous dependency events (the two previous p1,p2), and this is wrong of course.




",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Nov 25 20:42:51 UTC 2016,,,,,,0|i36slz:,9223372036854775807,,,,,,,,"25/Nov/16 20:42;pderop;committed the fix in revision 1771379.

also added the org.apache.felix.dm.itest.api.FELI5428_CleanupDependenciesWhenComponentIsStopped testcase.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
httplite should accept more date formats.,FELIX-5422,13022223,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,21/Nov/16 15:29,25/Nov/16 18:14,13/Mar/19 22:56,21/Nov/16 15:38,,,,,httplite-0.1.5,,Lightweight HTTP Service,,,0,,,,,,"Full http, via tomcat, accepts some additional date header formats -- including one that the webconsole uses. Lite could do likewise.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Nov 21 15:38:02 UTC 2016,,,,,,0|i36l2v:,9223372036854775807,,,,,,,,21/Nov/16 15:38;bmargulies;Fixed in 1770706.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
httplite does not urldecode parameter values,FELIX-5423,13022249,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,21/Nov/16 17:26,25/Nov/16 18:13,13/Mar/19 22:56,25/Nov/16 18:13,,,,,httplite-0.1.5,,Lightweight HTTP Service,,,0,,,,,,"Other servlet implementations, when you call getParameter, apply the URL decoder if the value has any instances of '+' or '%'. httplite does not.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Nov 25 18:13:30 UTC 2016,,,,,,0|i36l8n:,9223372036854775807,,,,,,,,25/Nov/16 18:13;bmargulies;1771365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractMethodError in bundlerepository due to wrong import range.,FELIX-5391,13017160,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,njbartlett,njbartlett,02/Nov/16 10:39,16/Nov/16 14:15,13/Mar/19 22:56,16/Nov/16 14:15,,,,,bundlerepository-2.0.10,,Bundle Repository (OBR),,,0,,,,,,"Bundle org.apache.felix.bundlerepository imports package {{org.osgi.service.repository}} using the range {{[1.0,2.0)}}. This is incorrect because it is a provider of that contract, so the range should be {{[1.0,1.1)}}.

At runtime this leads to AbstractMethodError because a client could wire to version 1.1 of the API and try to call one of the new methods such as {{Repository.newRequirementBuilder()}}, which is not implemented by Felix:

{noformat}
java.lang.AbstractMethodError: org.apache.felix.bundlerepository.impl.OSGiRepositoryImpl.newRequirementBuilder(Ljava/lang/String;)Lorg/osgi/service/repository/RequirementBuilder;
{noformat}

Affects version: 2.0.8 (not available in the JIRA dropdown for some reason).",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-11-16 14:15:16.214,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Nov 16 14:15:16 UTC 2016,,,,,,0|i35ptz:,9223372036854775807,,,,,,,,16/Nov/16 14:15;bosschaert;Thanks [~njbartlett]! The patch is applied in https://svn.apache.org/viewvc?view=revision&revision=1769986,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When you stop a component, the service references are not ungotten.",FELIX-5411,13020384,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,13/Nov/16 22:03,13/Nov/16 22:05,13/Mar/19 22:56,13/Nov/16 22:05,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"Surprisingly, a regression has been done in dm4, before releasing the first version:

In ComponentImpl.java, before the commit from revision 1640812, service references were properly ungotten when a DM component was stopped (using DependencyManager.remove(Component) method).

But since rev 1640812, when you programmatically remove a DM component, then any service references hold by the ServiceDependencies are not ungotten anymore.

I have a test case which reproduces this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Nov 13 22:05:27 UTC 2016,,,,,,0|i369q7:,9223372036854775807,,,,,,,,"13/Nov/16 22:05;pderop;Committed the org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/UngetServiceTest.java in revision 1769553.

Committed the fix in revision 1769554.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filter-based dependencies working differently for annotations,FELIX-5337,13000459,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,jajans,jajans,26/Aug/16 17:34,12/Nov/16 23:41,13/Mar/19 22:56,12/Nov/16 23:41,dependencymanager-4.3.0,,,,,,,,,0,,,,,,"I've got a ""catch all"" service dependency that simply wants to see *all* services being registered. In the activator based implementation I simply express my dependency as {{createServiceDependency().setService(""(objectClass=*)"").setRequired(false).setCallbacks(""addService"", ""removeService"")}} and I get all services I'm interested in (I mean: each and every registered service).

However, if I rewrite my code to use annotations using {{@ServiceDependency(filter=""(objectClass=*)"", required = false, removed = ...)}}, I suddenly do not see all services I expect: only services that seem to be compatible with the class-space of the bundle my code lives in.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-08-26 23:06:27.338,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Nov 12 23:41:29 UTC 2016,,,,,,0|i32v13:,9223372036854775807,,,,,,,,"26/Aug/16 23:06;pderop;thanks for reporting.

I have reproduced the issue in https://github.com/pderop/dm.felix5337

In the project above, the two service.v1 and service.v2  bundles provides two versions of the same service.
Now, the catchall.withapi bundle uses the DM api and is able to lookup all services, including service.v1, and service.v2.

the catchall.withapi does this:

{code}
		dm.add(createComponent()
				.setImplementation(CatchAll.class)
				.add(createServiceDependency().setService(""(objectClass=*)"").setRequired(false).setCallbacks(""addService"", null)));
{code}

this is working fine. But the catchall.withannotation bundle does not work. It only catches one service, not all the others.
It does this:

{code}
	@ServiceDependency(filter=""(objectClass=*)"", required = false) 
	void addService(Object service, Map<String, String> properties) {
		System.out.println(""Got service "" + service + "" with properties: "" + properties);
	}
{code}

After investigating, it turns out that the issue is the following: the runtime infers the service type using the signature of the addService method. So, it internally uses the DM api and does this:

{code}
setService(Object.class, ""(objectClass=*)"")
{code}

and this does not work: we don't catch all services, only one.

So, to summarize, the following works (and this is what catchall.withapi does):

{code}
createServiceDependency().setService(""(objectClass=*)"").setRequired(false).setCallbacks(...)
{code}

but the following does not work (this is what the runtime internally does):

{code}
createServiceDependency().setService(Object.class, ""(objectClass=*)"").setRequired(false).setCallbacks(...)
{code}

I will continue to investigate this WE.","26/Aug/16 23:18;pderop;Jan Willem, there is a work around:

if you uses a ServiceRefernce in the method signature, instead of Object, then it should work:

{code}
@Component
public class CatchAll {	
	@ServiceDependency(filter=""(objectClass=*)"", required = false) 
	void addService(ServiceReference service) {
		System.out.println(""Got service "" + service);
	}
}
{code}

In this case, the runtime does not infer any service dependency type from the method signature, and internally does this, which works:

{code}
createServiceDependency().setService(""(objectClass=*)"").setRequired(false).setCallbacks(...)
{code}

I will continue to investigate in order to see if a fix can be done (probably in the dm core, not in the runtime).","07/Sep/16 09:57;pderop;Hi Jan WIllem 

I have committed a candidate patch in 1759575, which seems to resolve the issue.
Can you please test it, and if it works in your side, then move this issue to resolved state ?

thank you (and sorry to be late !).
","07/Sep/16 10:41;pderop;Added test case:

org.apache.felix.dependencymanager.runtime.itest/src/org/apache/felix/dm/runtime/itest/components/FELIX5337.java
org.apache.felix.dependencymanager.runtime.itest/src/org/apache/felix/dm/runtime/itest/tests/FELIX5337Test.java","11/Nov/16 19:26;pderop;I reverted the patch from revision 1759575 and uncommitted it (in revision 1769329).

Indeed, it breaks the contract of the original ServiceDependency.SetService(Class<?> serviceName, String serviceFilter) in the DM api. Indeed, Dobias reported in FELIX-5403 that the following code which worked well before is not working anymore with the patch from rev 1759575:

{code}
manager.createServiceDependency()
	.setService(StoreService.class, ""(!(objectClass="" + ConsequenceStoreService.class.getName() + ""))"")
	.setCallbacks(""addStoreService"", null, ""removeStoreService"", ""swapStoreService"");
{code}

Indeed, with the wrong patch, the filter is not extended anymore with the type of the serviceName (StoreService).

Now, I will try to find a solution for the initial problem of this issue, which is: if you want to catch all services using the following code:

{code}
	@ServiceDependency(filter=""(objectClass=*)"", required = false) 
	void addService(Object service) {
		System.out.println(""Got service "" + service);
	}
{code}

then the problem is that the type of the ""addService"" parameter (Object) is used and the runtime then uses the following DM api method with the service type (Object), and the filter like this:

{code}
createServiceDependency().setService(Object.class, ""(objectClass=*)"").setRequired(false)
{code}

So, the setService method then uses the following filter, which is not what we want since we need to catch all services:

{code}
(&(objectClass=java.lang.Object)(objectClass=*))
{code}

I have to think more about this issue.

currently, the only work around is to use a ServiceReference in the addServiceParameter: in this case, since we can't infer the service type, we then end up using only the following DM api method, which works:

{code}
createServiceDependency().setService(""(objectClass=*)"").setRequired(false)
{code}","12/Nov/16 23:13;pderop;Ok; so the contract of the @ServiceDependency is the same as the ""ServiceDependency.setService(Class serviceType, String filter)"" method in the DM API. So, the serviceType is inferred from the bind method or from the class field.

Now, to allow to inject all services to a ""bind(Object service)"" callback, since we need to internally use the  ""ServiceDependency.setService(String filter)"" method from the DM API, I introduced a new ""Any"" marker interface in the ServiceDependency annotation, and you can now set the ""service"" attribute to it. This will make sure that the service type won't be inferred from the bind method parameters or from the field type:

{code}
@ServiceDenpendency(service=Any.class)
void bindServices(Object allServices) {
}
{code}

Of course, you can specify a filter. In the following, all services having the foo=bar property will be injected:

{code}
@ServiceDenpendency(service=Any.class, filter=""(foo=bar)"")
void bindServices(Object allServices) {
}
{code}


(committed patch in  revision 1769436). ","12/Nov/16 23:41;pderop;added test: org.apache.felix.dependencymanager.runtime.itest/src/org/apache/felix/dm/runtime/itest/components/FELIX5337_MatchAllServicesWithFilter.java

I think this issue is resolved.",,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in Candidates#prepare() method,FELIX-5389,13015552,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,tjwatson,matteor,matteor,26/Oct/16 19:44,03/Nov/16 10:37,13/Mar/19 22:56,02/Nov/16 19:41,resolver-1.10.0,,,,resolver-1.10.1,,Resolver,,,0,,,,,,"Project where the errors appear: https://github.com/mrulli/com.flairbit.eclipsecon.onesix

----
During the resolution of my bundles I get the following stacktrace (to trigger the resolution, just do {{mvn install}} from the {{example.cassandra.itest.bndrun}} folder in the project above):

{code}
[ERROR] Failed to execute goal biz.aQute.bnd:bnd-export-maven-plugin:3.4.0-SNAPSHOT:export (default) on project example.cassandra.bndrun: null: MojoExecutionException: NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal biz.aQute.bnd:bnd-export-maven-plugin:3.4.0-SNAPSHOT:export (default) on project example.cassandra.bndrun: null
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:216)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
 at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
 at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:347)
 at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:154)
 at org.apache.maven.cli.MavenCli.execute(MavenCli.java:582)
 at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)
 at org.apache.maven.cli.MavenCli.main(MavenCli.java:158)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.lang.reflect.Method.invoke(Method.java:498)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
 at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
 at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.apache.maven.plugin.MojoExecutionException
 at aQute.bnd.maven.export.plugin.ExportMojo.execute(ExportMojo.java:52)
 at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
 ... 19 more
Caused by: java.lang.NullPointerException
 at org.apache.felix.resolver.Candidates.prepare(Candidates.java:946)
 at org.apache.felix.resolver.ResolverImpl.getInitialCandidates(ResolverImpl.java:502)
 at org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:387)
 at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:375)
 at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:329)
 at biz.aQute.resolve.BndResolver.resolve(BndResolver.java:29)
 at biz.aQute.resolve.ResolveProcess.resolveRequired(ResolveProcess.java:75)
 at biz.aQute.resolve.ProjectResolver.resolve(ProjectResolver.java:109)
 at biz.aQute.resolve.ProjectResolver.getRunBundles(ProjectResolver.java:126)
 at aQute.bnd.maven.export.plugin.ExportMojo.resolve(ExportMojo.java:86)
 at aQute.bnd.maven.export.plugin.ExportMojo.export(ExportMojo.java:70)
 at aQute.bnd.maven.export.plugin.ExportMojo.execute(ExportMojo.java:49)
 ... 21 more
{code}

I tried to investigate a little bit this and I found that the NPE is generated in the {{prepare()}} method - {{org.apache.felix.resolver.Candidates}} class, within the following snippet:
{code}
m_candidateMap.put(r, cands.copy());
for (Capability cand : cands.getRemainingCandidates())
{
    Set<Requirement> dependents = m_dependentMap.get(cand);
    dependents.remove(origReq);
    dependents.add(r);
}
{code}
{{org.apache.felix.resolver.Candidates.m_dependentMap.get}} is invoked with key
{code}
    WrappedCapability: '[slf4j.api version=1.6.1] osgi.wiring.package; org.slf4j.impl' 
        m_cap: Provide[osgi.wiring.package]{version=1.6.1, osgi.wiring.package=org.slf4j.impl}{}
        m_host: slf4j.api version=1.6.1
{code}
and this nullifies {{dependents}} var. The only WrappedCapabilities within the m_dependentMap key set are the followings:
{code}
 [slf4j.api version=1.7.7] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j)(version>=1.6.1))
 [slf4j.api version=1.7.5] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j.spi)(version>=1.6.1))
 [slf4j.api version=1.7.5] osgi.wiring.package; (&(osgi.wiring.package=org.apache.log4j))
 [slf4j.api version=1.6.1] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
 [slf4j.api version=1.7.5] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.6.1))
 [slf4j.api version=1.7.7] osgi.wiring.package; (&(osgi.wiring.package=org.apache.log4j))
 [slf4j.api version=1.7.7] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j.helpers)(version>=1.6.1))
 [slf4j.api version=1.7.5] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
 [slf4j.api version=1.7.7] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j.spi)(version>=1.6.1))
 [slf4j.api version=1.7.7] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j.impl)(version>=1.6.0))
 [slf4j.api version=1.7.5] osgi.wiring.package; (&(osgi.wiring.package=org.slf4j)(version>=1.6.1))
{code}
and none of them match the specified key above, at least as long as the WrappedCapability equals method is concerned.
In my opinion a meaningful error should be thrown by the resolver instead of throwing NullPointerException. Or maybe it is just enough to skip actions on dependents in case null value is returned?",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-10-26 21:09:39.771,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Nov 02 19:41:12 UTC 2016,,,,,,0|i35fxj:,9223372036854775807,,,,,,,,"26/Oct/16 21:09;tjwatson;I get this error running mvn install from the example.cassandra.itest.bndrun folder:

[ERROR] Failed to execute goal biz.aQute.bnd:bnd-export-maven-plugin:3.4.0-SNAPSHOT:export (default) on project example.cassandra.bndrun: Parent not foundcom.flairbit.eclipsecon.onesix:example.cassandra.parent:pom:1.0.0 -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal biz.aQute.bnd:bnd-export-maven-plugin:3.4.0-SNAPSHOT:export (default) on project example.cassandra.bndrun: Parent not foundcom.flairbit.eclipsecon.onesix:example.cassandra.parent:pom:1.0.0

I did run mvn install from the root of the repo and it seemed to build example.cassandra.parent fine:

[INFO] Reactor Summary:
[INFO]
[INFO] example.cassandra.parent ........................... SUCCESS [  0.664 s]
[INFO] com.flairbit.example.cassandra.api ................. SUCCESS [ 16.953 s]
[INFO] com.flairbit.example.cassandra.impl ................ SUCCESS [ 17.562 s]
[INFO] com.flairbit.example.cassandra.cmd ................. SUCCESS [  0.242 s]
[INFO] com.flairbit.example.cassandra.itest ............... SUCCESS [  0.366 s]

","26/Oct/16 21:24;matteor;Yes sorry for that, one commit was missing: you can now pull again from git and run mvn install from the top level directory. 
Anyway, the error does not occur systematically: for me it happens one in two/three times.","27/Oct/16 07:45;rotty3000;BTW, this feels very much like the same NPE I've noted here: https://github.com/bndtools/bnd/issues/1697","28/Oct/16 13:58;tjwatson;It appears this is using the latest felix resolver code now.  I got a different flavor of the NPE just now.  Only recording it here to keep a record.  I also got the same NPE initially reported in a separate run.  Not sure what the cause is yet but I suspect improper wrapping for fragments ...

Caused by: java.lang.NullPointerException
        at org.apache.felix.resolver.util.CandidateSelector.<init>(CandidateSelector.java:39)
        at org.apache.felix.resolver.util.ShadowList.<init>(ShadowList.java:38)
        at org.apache.felix.resolver.util.ShadowList.createShadowList(ShadowList.java:31)
        at org.apache.felix.resolver.Candidates.prepare(Candidates.java:903)
        at org.apache.felix.resolver.ResolverImpl.getInitialCandidates(ResolverImpl.java:502)
        at org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:387)
        at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:375)
        at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:329)
        at biz.aQute.resolve.BndResolver.resolve(BndResolver.java:29)
        at biz.aQute.resolve.ResolveProcess.resolveRequired(ResolveProcess.java:75)
        at biz.aQute.resolve.ProjectResolver.resolve(ProjectResolver.java:109)
        at biz.aQute.resolve.ProjectResolver.getRunBundles(ProjectResolver.java:126)
        at aQute.bnd.maven.testing.plugin.TestingMojo.resolve(TestingMojo.java:135)
        at aQute.bnd.maven.testing.plugin.TestingMojo.testing(TestingMojo.java:91)
        at aQute.bnd.maven.testing.plugin.TestingMojo.execute(TestingMojo.java:66)
        ... 22 more","28/Oct/16 21:07;tjwatson;I have not been able to spend the necessary time to get to the bottom of this one yet.  But I find something strange with aQute.bnd.osgi.resource.ResourceImpl when it represents a fragment.  I see this list of capabilities for slf4j.log4j12 fragment:

[
 Provide[osgi.identity]{description=The slf4j log4j-12 binding, osgi.identity=slf4j.log4j12, type=osgi.fragment, version=1.6.1}{},  
 Provide[osgi.wiring.bundle]{bundle-version=1.6.1, osgi.wiring.bundle=slf4j.log4j12}{},
 Provide[osgi.wiring.package]{version=1.6.1, osgi.wiring.package=org.slf4j.impl}{},
 Provide[osgi.content]{size=9753, url=file:/C:/Users/IBM_ADMIN/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar, mime=vnd.osgi.bundle, osgi.content=CBAE818E0D2E020F0C850C4B9C7C169B1ED99311DA23E9A3EFE66CE60E8795BA}{},
 Provide[bnd.info]{name=org.slf4j:slf4j-log4j12:1.6.1, from=org.slf4j:slf4j-log4j12:1.6.1}{}
]

it is claiming it provides a osgi.wiring.bundle which is invalid for fragments.","31/Oct/16 20:10;rotty3000;With [~tjwatson]'s comment I believe I was able to track down the issue to the ResourceBuilder in bnd which was erroneously adding osgi.wiring.bundle capabilities into the index for fragments.

See https://github.com/bndtools/bnd/pull/1759",01/Nov/16 00:29;tjwatson;I have found an issue with fragment that have multiple hosts.  I think the issue only manifests when there are three or more hosts and there is a cycle between the host and fragment.  I have not found a solution yet.  The problem appears to be related to the shared candidate list held by each hosted fragment.   Manipulation of the candidate list is effecting multiple CandidateSelectors when it should not.  This causes an inconsistency that leads to various NPEs or other runtime errors.  I don't think the extra host capability on the fragment is causing the problem. ,"01/Nov/16 16:08;tjwatson;I have found an issue with fragments and have a fix and test in https://github.com/tjwatson/felix/tree/FELIX-5389

The error I see is an out of bounds exception when calling ShadowList.replace method and not the NPEs reported here.  That makes me worry that this is not the same issue.  I'm currently trying to figure out how to test the bnd maven plugin with my patched resolver.","01/Nov/16 19:23;rotty3000;for posterity, I also now see a different error after using the latest snapshot of bndlib:

*Using the supplied repository* my process was to first publish the bnd libraries to the .m2 repo (using the normal bnd build process) and then force the maven build of this repo to {{--offline}} so that it doesn't download other artifacts from the remote repositories.

{code}
[ERROR] Failed to execute goal biz.aQute.bnd:bnd-testing-maven-plugin:3.4.0-SNAPSHOT:testing (default) on project example.cassandra.itest.bndrun: null: MojoExecutionException: NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal biz.aQute.bnd:bnd-testing-maven-plugin:3.4.0-SNAPSHOT:testing (default) on project example.cassandra.itest.bndrun: null
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.apache.maven.plugin.MojoExecutionException
	at aQute.bnd.maven.testing.plugin.TestingMojo.execute(TestingMojo.java:77)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
	... 20 more
Caused by: java.lang.NullPointerException
	at org.apache.felix.resolver.util.CandidateSelector.<init>(CandidateSelector.java:39)
	at org.apache.felix.resolver.util.ShadowList.<init>(ShadowList.java:38)
	at org.apache.felix.resolver.util.ShadowList.createShadowList(ShadowList.java:31)
	at org.apache.felix.resolver.Candidates.prepare(Candidates.java:903)
	at org.apache.felix.resolver.ResolverImpl.getInitialCandidates(ResolverImpl.java:502)
	at org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:387)
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:375)
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:329)
	at biz.aQute.resolve.BndResolver.resolve(BndResolver.java:29)
	at biz.aQute.resolve.ResolveProcess.resolveRequired(ResolveProcess.java:75)
	at biz.aQute.resolve.ProjectResolver.resolve(ProjectResolver.java:109)
	at biz.aQute.resolve.ProjectResolver.getRunBundles(ProjectResolver.java:126)
	at aQute.bnd.maven.testing.plugin.TestingMojo.resolve(TestingMojo.java:135)
	at aQute.bnd.maven.testing.plugin.TestingMojo.testing(TestingMojo.java:97)
	at aQute.bnd.maven.testing.plugin.TestingMojo.execute(TestingMojo.java:71)
	... 22 more
{code}","02/Nov/16 14:46;rotty3000;[~matteor] while there's likely a bug in the resolver related to this issue, I wanted to alert you to the fact that -regardless of this fact what you have is a collection of runrequires which will need two different versions of slf4j.- you can get things working by using the following:

Make the following changes to your {{example.cassandra.itest.bndrun/itest.bndrun}}:

{code}
     slf4j.api; version='[1.7.7,1.7.8)',\
     slf4j.log4j12; version='[1.6.1,1.6.2)'
{code}

AND disable resolution in the pom file:
{code}
<resolve>false</resolve>
{code}

This gets the tests to run, but they fail for other reasons. However all bundles resolve.
","02/Nov/16 19:40;tjwatson;I have found another issue which is causing the two NPEs reported here:

java.lang.NullPointerException
	at org.apache.felix.resolver.util.CandidateSelector.<init>(CandidateSelector.java:39)

java.lang.NullPointerException
        at org.apache.felix.resolver.Candidates.prepare(Candidates.java:946)

Both these errors are occurring because the capability, requirement, resource equals methods are NOT symmetrical (a.equals(b) == b.equals(a)) when dealing with WrappedResource, WrappedCapability and WrappedRequirement.  This causes major issues for our implementations of Map and Set in the resolver.

For framework implementations that use the resolver this is not an issue because their implementations of capability, requirement, and resource effectively use identity equality (default Object.equals() behavior).  This is because even when the same bundle is installed multiple times in the framework we must treat the two copies of the bundle Resource as unique.

BND does not use identity equality for its capability, requirement, resource implementations.  Instead it tries to do equality check on the attributes/directives of the requirement or capability and then does an equality check on the resource.  It does an equality check on the resource by checking the osgi.content capability of the resource.  With this bit of implementation knowledge of BND I decided to work around this by augmenting the osgi.content capability when it is wrapped such that its 'url' key is different.  This causes bnd to do the 'right thing' WRT to symmetric equality with the resolver's wrapped objects.

I released this fix along with the other issues I found with out of bounds errors.",02/Nov/16 19:41;tjwatson;Resolving as fixed.  Please close if satisfied with the fix.,,,,,,,,,,,,,,,,,,,,
BundleWiring#getClassLoader should return null for fragments,FELIX-5372,13010474,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,07/Oct/16 14:51,21/Oct/16 20:55,13/Mar/19 22:56,07/Oct/16 14:53,framework-5.6.0,,,,framework-5.6.1,,Framework,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Oct 07 14:53:56 UTC 2016,,,,,,0|i34kqf:,9223372036854775807,,,,,,,,"07/Oct/16 14:53;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	framework/src/main/java/org/apache/felix/framework/BundleWiringImpl.java
Committed r1763773
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EventDispatcher#createWhitelistFromHooks fails under security,FELIX-5384,13013788,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,20/Oct/16 08:25,21/Oct/16 20:55,13/Mar/19 22:56,20/Oct/16 11:46,framework-5.6.0,,,,framework-5.6.1,,,,,0,,,,,,"{code}
	Caused by: java.security.AccessControlException: access denied (""org.osgi.framework.AdminPermission"" ""(id=0)"" ""context"")
		at java.security.AccessControlContext.checkPermission(java.base@9-ea/AccessControlContext.java:468) ~[?:?]
		at java.security.AccessController.checkPermission(java.base@9-ea/AccessController.java:894) ~[?:?]
		at java.lang.SecurityManager.checkPermission(java.base@9-ea/SecurityManager.java:548) ~[?:?]
		at org.apache.felix.framework.BundleImpl.getBundleContext(BundleImpl.java:243) ~[?:?]
		at org.apache.felix.framework.Felix.getBundleContext(Felix.java:106) ~[?:?]
		at org.apache.felix.framework.util.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:684) ~[?:?]
		at org.apache.felix.framework.util.EventDispatcher.filterListenersUsingHooks(EventDispatcher.java:560) ~[?:?]
		at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:543) ~[?:?]
		at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:4558) ~[?:?]
		at org.apache.felix.framework.Felix.registerService(Felix.java:3550) ~[?:?]
		at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:348) ~[?:?]
		at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:322) ~[?:?]
		at org.apache.felix.cm.impl.ConfigurationManager.start(ConfigurationManager.java:250) ~[?:?]
		at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1709) ~[?:?]
		at java.security.AccessController.doPrivileged(java.base@9-ea/Native Method) ~[?:?]
		at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:688) ~[?:?]
		at org.apache.felix.framework.Felix.activateBundle(Felix.java:2227) ~[?:?]
		at org.apache.felix.framework.Felix.startBundle(Felix.java:2145) ~[?:?]
		at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:998) ~[?:?]
		at org.apache.karaf.bundle.command.Restart.doExecute(Restart.java:51) ~[?:?]
		... 14 more
{code}",,,,,,,,,,,,,,,,,,,,,20/Oct/16 11:04;karlpauls;FELIX-5384.patch;https://issues.apache.org/jira/secure/attachment/12834372/FELIX-5384.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-10-20 09:21:49.012,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Oct 20 11:46:26 UTC 2016,,,,,,0|i3551j:,9223372036854775807,,,,,,,,20/Oct/16 09:21;karlpauls;Good catch - the EventDispatcher shouldn't try to call getBundleContext for this - it should use _getBundleContext() which doesn't check for permission.,20/Oct/16 09:23;karlpauls;Maybe we should grep for getBundleContext() inside the framework and make sure we use the right version between it and _getBundleContext() for all cases.,"20/Oct/16 09:26;gnt;Right, there are a bunch of those.",20/Oct/16 11:04;karlpauls;I think this patch should catch em all.,"20/Oct/16 11:46;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	R	framework/src/main/java/org/apache/felix/framework/util/EventDispatcher.java => framework/src/main/java/org/apache/felix/framework/EventDispatcher.java
	R	framework/src/test/java/org/apache/felix/framework/util/EventDispatcherTest.java => framework/src/test/java/org/apache/felix/framework/EventDispatcherTest.java
	M	framework/src/main/java/org/apache/felix/framework/DTOFactory.java
	M	framework/src/main/java/org/apache/felix/framework/Felix.java
Committed r1765806
",,,,,,,,,,,,,,,,,,,,,,,,,,,
remove callback fails after manually removing dynamic dependencies,FELIX-5274,12975051,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,brampouwelse,brampouwelse,02/Jun/16 05:48,27/Sep/16 13:20,13/Mar/19 22:56,27/Sep/16 13:20,org.apache.felix.dependencymanager-r8,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"When dynamic instance bound dependencies are removed in the component destroy dm fails to call the remove callback. 

I use an adapter service like 
{code}
manager.add(createAdapterService(ApplicationService.class, null, ""onAdd"", ""onChange"", ""onRemove"")
  .setInterface(Servlet.class.getName(), null)
  .setImplementation(WinkServlet.class)
  .setCallbacks(""dmInit"", ""dmStart"", ""dmStop"", ""dmDestroy"")
  );
{code}

In the WinkServlet init callback an additional dependency is added and this is removed in the destroy callback. When the component is removed I get log messages like

{code}
ERROR org.amdatu.web.rest.wink - [main] ""onRemove"" callback not found on component instances []
{code}

[http://www.mail-archive.com/users%40felix.apache.org/msg17300.html]",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-09-24 21:19:45.24,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Sep 27 13:20:52 UTC 2016,,,,,,0|i2yvcn:,9223372036854775807,,,,,,,,"24/Sep/16 21:19;pderop;Hi Bram,

I finally committed a patch in revision 1762151 for your issue (it fixes the issue where you explicitly remove an instance-bound dependency from ""destroy"" method).

added test case in FELIX5274_CleanupInstanceBoundDependenciesInDestroy.java.

Let me explain what was going on (I prefer to write here all the internals; for the record):

So, not easy to explain, but the DM state machine is currently re-entrant, and this may causes some side effects when you add or remove dependencies from lifecycle callback methods.
In your case, you are removing an instance-bound dependency from the ""destroy"" method. So, at the time you remove the instance-bound dependency from the destroy() method, then the
DM state machine (which is currently transiting from INSTANTIATED_AND_WAITING_FOR_REQUIRED -> WAITING_FOR_REQUIRED) then re-enter in the ""handleChange"" method, which then transits from
WAITING_FOR_REQUIRED -> INACTIVE, and the problem is that at this point we have not yet finished the transition from INSTANTIATED_AND_WAITING_FOR_REQUIRED -> WAITING_FOR_REQUIRED.

Here is the scenario which helps to understand the issue:

1) you remove a component, using ""dm.remove(component)"" for example.

2) so, at this point, the ""handleChange()"" method (which is internal to ComponentImpl.java in DM) then performs some state transitions in order to destroy the component.

3) and at the time the state machine transits from INSTANTIATED_AND_WAITING_FOR_REQUIRED -> WAITING_FOR_REQUIRED, then it does the following:

{code}
        if (oldState == ComponentState.INSTANTIATED_AND_WAITING_FOR_REQUIRED && newState == ComponentState.WAITING_FOR_REQUIRED) {
            invoke(m_callbackDestroy);  // 3.1
            removeInstanceBoundDependencies();
            invokeRemoveRequiredDependencies(); // 3.2
            notifyListeners(newState);
            if (! someDependenciesNeedInstance()) {
                destroyComponent();
            }
            return true;
        }
{code}

4) in 3.1, the ""invoke(m_callbackDestroy)"" is invoked, and your ""destroy"" callback then removes an instance bound dependency that was initially added in ""init"" callback.
And at this point the DM state machine sudenly transits from WAITING_FOR_REQUIRED -> INACTIVE (notice it has not yet finished the initial transition):
{code}
        if (oldState == ComponentState.WAITING_FOR_REQUIRED && newState == ComponentState.INACTIVE) {
            stopDependencies();
            destroyComponent(); // 4.1
            notifyListeners(newState);
            return true;
        }
{code}

so, you see in 4.1 the component is destroyed, and when the initial transition resumes, when we execute 3.2 the component
has already been destroyed in 4.1, and required dependencies can't be unbounded.

So, I think that the only way to properly resolve this issue without risks is to not allow reentrency in the state machine, a transition should be fully finished before evaluating what has been done in a lifecyle callback.

the patch which avoid the state machine to be reentrant is located at the beginning of the handleChange method:

{code}
    private void handleChange() {
        if (isHandlingChange()) {
            return;
        }
        ...
    }
{code}

With the patch, all tests are passing OK, except the ComponentTest.testAddAvailableDependencyFromInitCallback().

This test was testing that a dependency added or removed from a lifecycle callback was immediately evaluated, but now, since the patch does not allow to re-enter into the state machine, I had to modify a bit the test, which is still making sense.




",24/Sep/16 21:20;pderop;putting this issue to Fixed but feel free to reopen if any problems.,"26/Sep/16 08:32;pderop;Reopening this issue because it seems Amdatu remote integration tests are not passing anymore with the patch. 
will uncommit the patch and will investigate soon.",27/Sep/16 13:20;pderop;The patch actually works with amdatu-remote (I did a wrong test).,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot deserialize empty Map,FELIX-5358,13007142,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,dleangen,dleangen,23/Sep/16 12:49,26/Sep/16 15:12,13/Mar/19 22:56,26/Sep/16 15:12,,,,,,,Converter,,,0,,,,,,"This is the stack trace:
{code}
java.lang.IllegalArgumentException: Malformatted JSON key-value pair: 
	at org.apache.felix.serializer.impl.json.JsonParser.parseKeyValue(JsonParser.java:93)
	at org.apache.felix.serializer.impl.json.JsonParser.parseObject(JsonParser.java:136)
	at org.apache.felix.serializer.impl.json.JsonParser.<init>(JsonParser.java:79)
	at org.apache.felix.serializer.impl.json.JsonDeserializingImpl.from(JsonDeserializingImpl.java:55)
{code}

Here is a test case that fails (with the above Exception):
{code}
    @Test
    public void testEmptyMapSerialization() {
        Map<String, Object> m = new LinkedHashMap<>();
        String expected = ""{}"";
        assertEquals(expected, new JsonSerializerImpl().serialize(m).toString());
        Map<String, Object> m2 = new LinkedHashMap<>();
        Object o = new JsonSerializerImpl().deserialize( Map.class ).from( expected );
    }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-09-26 15:12:46.603,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Sep 26 15:12:46 UTC 2016,,,,,,0|i3406n:,9223372036854775807,,,,,,,,"26/Sep/16 15:12;bosschaert;Fixed in https://svn.apache.org/viewvc?view=revision&revision=1762341

Thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception thrown when field in Map missing from DTO,FELIX-5341,13003508,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,dleangen,dleangen,08/Sep/16 09:12,16/Sep/16 07:48,13/Mar/19 22:56,16/Sep/16 07:48,,,,,,,Converter,,,0,,,,,,"I believe that this is not the correct behaviour, so please correct me if I am mistaken.

If a Map (or Map representation of some object) contains a field, when converting to a DTO that does *not* contain that field, instead of just ignoring the field, an Exception is thrown, and the conversion fails.

The related code is [here|https://github.com/dleangen/felix/blob/trunk/converter/converter/src/main/java/org/apache/felix/converter/impl/ConvertingImpl.java#L242].",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-09-16 07:48:26.478,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Sep 16 07:48:26 UTC 2016,,,,,,0|i33dtb:,9223372036854775807,,,,,,,,16/Sep/16 07:48;bosschaert;Fixed and added test case in: https://svn.apache.org/viewvc?view=revision&revision=1761008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iPojo does not delegate to the right classloader for Nullable Proxy instantiation,FELIX-5285,12982663,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,ejuste,ejuste,24/Jun/16 12:08,31/Aug/16 15:26,13/Mar/19 22:56,31/Aug/16 15:26,,,,,,,iPOJO,,,1,,,,,,"iPojo runtime & api: 1.12.1 
Felix framework: 4.2.1
This issue is similar to https://issues.apache.org/jira/browse/FELIX-2093

This interface exist in v1.0 of an api and is exported by the system bundle (felix) A

{code}package com.data.service

public interface DataService
{
    public void search(String condition);
}{code}

A bundle, B, imports com.data.service;version=1.0:

{code}@Requires(optional = true)
private DataServiceImpl dataServiceImpl;{code}

where DataServiceImpl only implements the interface
All is working well at this point.

Then, the api evolves with a new method:

{code}package com.data.service

import com.data.service.conditions.Condition;

public interface DataService
{
    public void search(String condition);

    public void search(Condition condition);
}{code}

still exported by system bundle A but now as version 1.1
The bundle B is not recompiled against this new version and does not import the new package com.data.service.conditions

Now, when bundle B runs with v1.1 of the api, the requires of DataServiceImpl is failing in Dependency.createNullableObject() (http://felix.apache.org/ipojo/api/1.12.1/src-html/org/apache/felix/ipojo/handlers/dependency/Dependency.html line 433) when creating the proxy: the proxy class is created w/o issue but when an instance of this proxy class is done, there is a Class.forName() done that fails to load the class Condition because it is not imported

Since the class Condition is already available and allows to create the proxy class, it would make sense to use it instead of trying to load it thru the bundle classloader
To achieve this, the methods of the specification could be browsed, for each parameters and return types the classloader could be collected and given to the NullableClassLoader. All classloaders could be asked to load the class. At some point, the classloader of Condition would be queried and would return the class

I don't know if this is breaking OSGi principles but I think it can fix this issue

NB: I also tried to export the new api with uses directive:
com.data.service;version=1.1;uses:=""com.data.service.conditions""
with no result. If I understand correctly uses directive is not supposed to add implicit package import to bundle B, but are only used by the OSGi framework to help it on the wiring process

Here's the cause exception thrown in java.lang.IllegalStateException: Cannot create the Nullable object, a referenced class cannot be loaded:
{code}java.lang.NoClassDefFoundError: *** Class 'com.data.service.conditions.Condition' was not found because bundle B [5] does not import 'com.data.service.conditions' even though bundle org.apache.felix.framework [0] does export it. Additionally, the class is also available from the system class loader. There are two fixes: 1) Add an import for 'com.data.service.conditions' to bundle B [5]; imports are necessary for each class directly touched by bundle code or indirectly touched, such as super classes if their methods are used. 2) Add package 'com.data.service.conditions' to the 'org.osgi.framework.bootdelegation' property; a library or VM bug can cause classes to be loaded by the wrong class loader. The first approach is preferable for preserving modularity. ***{code}

And the stack trace of the loadClass that fails:
{code}""[iPOJO] pool-1-thread-1@4605"" daemon prio=5 tid=0x21 nid=NA runnable 
java.lang.Thread.State: RUNNABLE
	  at org.apache.felix.ipojo.handlers.dependency.Dependency$NullableClassLoader.loadClass(Dependency.java:1072)
	  at java.lang.Class.forName0(Class.java:-1)
	  at java.lang.Class.forName(Class.java:264)
	  at com.sun.proxy.$Proxy154.<clinit>(Unknown Source:-1)
	  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-1)
	  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	  at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	  at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:739)
	  at org.apache.felix.ipojo.handlers.dependency.Dependency.createNullableObject(Dependency.java:434)
	  at org.apache.felix.ipojo.handlers.dependency.Dependency.start(Dependency.java:457)
	  at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.__M_start(DependencyHandler.java:496)
	  at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.start(DependencyHandler.java:-1)
	  at org.apache.felix.ipojo.HandlerManager.start(HandlerManager.java:136)
	  at org.apache.felix.ipojo.InstanceManager.start(InstanceManager.java:421)
	  at org.apache.felix.ipojo.ComponentFactory.createInstance(ComponentFactory.java:179)
	  at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:319)
	  - locked <0x2a3b> (a org.apache.felix.ipojo.ComponentFactory)
	  at org.apache.felix.ipojo.IPojoFactory.createComponentInstance(IPojoFactory.java:240)
	  at org.apache.felix.ipojo.extender.internal.linker.ManagedType$InstanceSupport$1.call(ManagedType.java:312)
	  at org.apache.felix.ipojo.extender.internal.linker.ManagedType$InstanceSupport$1.call(ManagedType.java:306)
	  at org.apache.felix.ipojo.extender.internal.queue.JobInfoCallable.call(JobInfoCallable.java:114)
	  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	  at java.lang.Thread.run(Thread.java:745){code}",,,,,,,,,,,,,,,,,,,,,27/Jun/16 13:11;ejuste;FELIX-5285.patch;https://issues.apache.org/jira/secure/attachment/12813655/FELIX-5285.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-06-24 13:30:35.408,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Aug 31 15:26:22 UTC 2016,,,,,,0|i3013b:,9223372036854775807,,,,,,,,"24/Jun/16 13:30;clement.escoffier;Hi,

If you could provide a test case that would be great. If in addition you can provide a patch that would be awesome.","24/Jun/16 14:43;ejuste;Hi,

Ok I'll try to provide a test case and I'll provide a patch for the solution I proposed

Emmanuel","27/Jun/16 13:11;ejuste;Hi,

Here's attached the patch with the fix: I tested on my product and now the creation of the nullable object is successful!
I also made 2 unit tests to make sure the feature of nullable still works w/o any issue (it's a bit difficult,  in a unit test, to reproduce the context of the issue with multiple classloaders like in OSGi)

Emmanuel","04/Jul/16 08:35;ejuste;Hi [~clement.escoffier]

Any news? Could you have a look to the patch?

Many thanks!
Emmanuel","04/Jul/16 08:44;clement.escoffier;Will have a look this week (just back from the US, I'm out of phase ;-)).","13/Jul/16 09:55;ejuste;Hi,

I hope you're better now :)

Do you think you could have a look at the proposed patch?

Thanks!
Emmanuel",18/Jul/16 08:25;clement.escoffier;The patch looks good to me. I'm wondering if the same trick need to be done in the composition support.,"19/Jul/16 12:33;ejuste;Hi,

Great :)
Will you merge it on master?
Any idea when a release with this fix can be done?

About composition, I can't tell, I never used this feature

Emmanuel","22/Aug/16 14:23;ejuste;Hi [~clement.escoffier]

Any news?

Thanks
Emmanuel","31/Aug/16 14:43;clement.escoffier;Working on it, should land in the trunk tonight.","31/Aug/16 15:26;clement.escoffier;Patched applied in trunk. I'm deploying the snapshots.

Thanks ! ",,,,,,,,,,,,,,,,,,,,,
DOAP needs to provide <asfext:id> value for implements/Standard,FELIX-4881,12827100,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,sebb@apache.org,sebb@apache.org,05/May/15 00:24,22/Aug/16 17:19,13/Mar/19 22:56,22/Aug/16 17:19,,,,,,,,,,0,,,,,,"The DOAP implements/Standard entries must include a non-empty identifier in the <asfext:id> property. See [1] for details.

Please fix the project DOAP

[1] http://projects.apache.org/docs/standards.html",http://svn.apache.org/repos/asf/felix/trunk/doap/doap_Felix.rdf,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-08-22 17:19:17.017,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Aug 22 17:19:17 UTC 2016,,,,,,0|i2e9x3:,9223372036854775807,,,,,,,,20/May/15 00:22;sebb@apache.org;Ping. Can someone take a look at this please?,13/Jun/15 00:12;sebb@apache.org;Can someone fix this please? It's a trivial edit.,22/Aug/16 16:56;sebb@apache.org;PING - is anyone there?,"22/Aug/16 17:19;cziegeler;Done in rev 1757232
Updated links to website as well",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Double fields in Map if superclass shares a field name,FELIX-5330,12998653,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,dleangen,dleangen,20/Aug/16 05:03,22/Aug/16 10:12,13/Mar/19 22:56,22/Aug/16 09:11,,,,,,,Converter,,,0,,,,,,"If a DTO inherits from an superclass, and both the DTO and the superclass have a field with the same name, then a converted map has two fields with that name.

Example:

{code}
MyDTOSuper extends DTO {
  public String data;
}

MyDTOChild extends MyDTOSuper {
  public String data;
}

MyDTOChild dto = new MyDTOChild();
dto.data = ""howdy!"";
{code}

When converted to Map, it will have 2 fields named ""data"", one with the value ""howdy!"", the other with a null value.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-08-22 09:11:39.067,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Aug 22 10:12:59 UTC 2016,,,,,,0|i32jvz:,9223372036854775807,,,,,,,,"22/Aug/16 09:11;bosschaert;Thanks [~dleangen] for reporting the issue. 
The following commit should fix it: https://svn.apache.org/viewvc?view=revision&revision=1757121","22/Aug/16 10:12;dleangen;Thank you very much, David B.!!

As a workaround, I removed the field in the parent class so I cannot confirm, but I'm sure that the fix works. :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Direct injection of services fails when service properties are updated,FELIX-5305,12988698,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,jajans,jajans,12/Jul/16 11:35,11/Aug/16 09:36,13/Mar/19 22:56,11/Aug/16 09:36,org.apache.felix.dependencymanager-r1,,,,,,Dependency Manager,,,0,,,,,,"Consider the following scenario: I've got a service, say, {{ServiceA}}, that is instantiated through configuration by means of a FactoryConfigurationAdapterService. The configuration-update callback manages the service properties of the actual service (it is not propagated).

Another service, {{ServiceB}}, has a dependency on all instances of ServiceA. I use the direct field injection feature of DM to give me a map of all instances.

If I update the service properties of any of the {{ServiceA}} instances, I lose them from my instance-map. The configuration is updated, but the instance never is injected back into my map (or my map is not injected back).

When rewriting {{ServiceB}} to use plain callbacks, all changes are properly tracked.",,,,,,,,,,,,,,,,,,,,,12/Jul/16 11:44;jajans;FELIX-5305.tgz;https://issues.apache.org/jira/secure/attachment/12817397/FELIX-5305.tgz,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-08-10 22:37:27.148,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Aug 11 09:36:04 UTC 2016,,,,,,0|i30uh3:,9223372036854775807,,,,,,,,"12/Jul/16 11:44;jajans;Sample Bnd workspace that demonstrates the issue. Usage:

- start the {{local.bndrun}} file;
- run {{getMessages}} in the gogo console;
- there are three results reported;
- run {{stop 1}} & {{start 1}} (this triggers the configuration update);
- run {{getMessages}} again;
- observe that there *no* results reported.","10/Aug/16 22:37;pderop;Thanks for reporting. Indeed there was a bug when the service properties were updated (the corresponding map field was cleared instead of being updated).

I committed a testcase based on your sample code in rv 1755887 (FELIX5305_DirectInjectionShouldSeeServiceUpdates.java)
and fixed the bug in rv 1755889 (in FieldUtil.java).

Can you please give a try to the fix and resolve this issue if it's working fine in your environment ? thanks !",11/Aug/16 09:36;jajans;Tested the trunk of DM against the provided Bnd sample workspace and the issue no longer appears.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link for FAQ page on maven-bundle-plugin doc page,FELIX-5262,12972889,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,dkarr,dkarr,25/May/16 22:08,03/Jun/16 17:22,13/Mar/19 22:56,03/Jun/16 17:22,,,,,,,,,,0,,,,,,"The URL with the bad link is http://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html .

The text containing the bad link is here:
--------------------
If you have questions about the maven-bundle-plugin please read the FAQ first. If you still have questions you can ask them on the Felix user list.
-----------------

The link is on ""FAQ"", and it currently goes to ""http://felix.apache.org/site/apache-felix-bundle-plugin-faq.html"", which gets the 404.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2016-05-25 22:08:55.0,,,,,,0|i2yidj:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service not unregistered while bundle is starting,FELIX-5268,12973722,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,28/May/16 20:33,28/May/16 20:41,13/Mar/19 22:56,28/May/16 20:41,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"This bug has been reported by Bram from the felix users mailing list: http://www.mail-archive.com/users%40felix.apache.org/msg17269.html

-> When a bundle is starting, and if a service providing component is added from the Activator, then if the component is losing a required service dependency or if the component is intentionally removed from the activator, then the DM component is stopped, but any services provided by the component are not unregistered from the service registry.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat May 28 20:41:40 UTC 2016,,,,,,0|i2ynin:,9223372036854775807,,,,,,,,"28/May/16 20:40;pderop;Added test case in revision 1745936:

Adding         src/org/apache/felix/dm/itest/api/FELIX5268_AddRemoveServiceTest.java
Adding         src/org/apache/felix/dm/itest/bundle2
Adding         src/org/apache/felix/dm/itest/bundle2/Activator.java
Adding         src/org/apache/felix/dm/itest/bundle2/AddRemoveService.java
Adding         src/org/apache/felix/dm/itest/bundle2/packageinfo
",28/May/16 20:41;pderop;Issue fixed in revision 1745605,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't inject service using a method ref on a parent class method.,FELIX-5244,12963283,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,27/Apr/16 20:18,27/Apr/16 20:24,13/Mar/19 22:56,27/Apr/16 20:24,org.apache.felix.dependencymanager-r8,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager Lambda,,,0,,,,,,"With DM lambda, you can't inject a service using a method reference on a bind method which is inherited from a parent class.

For example, using the following classes:

{code}
    interface MyDependency {}
    
    class AbstractService {
         void bind(MyDependency myDependency) {
    	 }
    }
    
    class MyService extends AbstractService {
    }    
{code}

then the following does not work:

{code}
component(comp -> comp
    .impl(MyService.class)
    .withSvc(MyDependency.class, svc -> svc.add(AbstractService::bind)));
{code}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Apr 27 20:24:44 UTC 2016,,,,,,0|i2wv8n:,9223372036854775807,,,,,,,,"27/Apr/16 20:24;pderop;Fixed in rv 1741331, and added the following test case:

src/org/apache/felix/dm/lambda/itest/Felix5244Test.java

The problem was not only concerning service dependencies, but also other types of dependencies.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration updates may be missed when the component is restarting,FELIX-5242,12962735,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,26/Apr/16 20:52,26/Apr/16 21:10,13/Mar/19 22:56,26/Apr/16 21:10,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"When a component has some required dependencies, and also has a configuration dependency, then some configuration updates may be missed in the following situation:

1) the component has lost a required dependency: it is stopped.
2) the component is restarting because the lost required dependency becomes available again.
3) at the same time, concurrently, a configuration update is taking place.

Then, during this racy condition, it is possible (but not systematically) that the component misses the configuration update.

I have a test which demontrates this issue, as well as a patch. I will commit it soon.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Apr 26 21:10:04 UTC 2016,,,,,,0|i2wrwf:,9223372036854775807,,,,,,,,"26/Apr/16 20:56;pderop;Committed a test case in rv 1741102:

src/org/apache/felix/dm/itest/api/FELIX5243_ConfigUpdateMissedIfComponentIsRestartingTest.java","26/Apr/16 21:10;pderop;Committed a patch in rv 1741103.

To avoid the race conditions, the updated method is scheduled in the component executor queue, but of course, the completion of the method is awaited from the CM thread, in case the component ""updated"" callback has thrown a configuration exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Single @Property annotation on a type doesn't work,FELIX-5236,12959137,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,brampouwelse,brampouwelse,15/Apr/16 11:11,16/Apr/16 21:46,13/Mar/19 22:56,16/Apr/16 21:46,org.apache.felix.dependencymanager-r8,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager Annotations,,,0,,,,,,"FELIX-5180 introduced the option to add @Property annotations on a type, this doesn't work in case there is only a single property. 

 The {{AnnotationCollector}} gets the @Property annotations by reading the value of the @RepatableProperty annotation. This @RepeatableProperty is only available when there is more than one @Property annotation. 

{quote}
 If more than one annotation of the requested type is present, you can obtain them by first getting their container annotation. 
{quote}
https://docs.oracle.com/javase/tutorial/java/annotations/repeating.html",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-04-16 21:43:55.019,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Apr 16 21:46:49 UTC 2016,,,,,,0|i2w693:,9223372036854775807,,,,,,,,"16/Apr/16 21:43;pderop;Thanks Bram for reporting.

Just added a test case in dm.runtime integration tests which reproduces the bug (revision 1739518).
See src/org/apache/felix/dm/runtime/itest/components/Felix5236.java and src/org/apache/felix/dm/runtime/itest/tests/Felix5236Test.java",16/Apr/16 21:46;pderop;Committed a fix in rv 1739519. I think this issue is resolved.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing toString in FelixRequirementAdapter makes missing dep error impossible to solve,FELIX-5170,12932468,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,romale,romale,19/Jan/16 16:43,11/Apr/16 15:57,13/Mar/19 22:56,11/Apr/16 15:57,bundlerepository-2.0.6,,,,bundlerepository-2.0.10,,Bundle Repository (OBR),,,0,,,,,,"While using OBR, a missing dependency will raise this error in logs:

org.osgi.service.subsystem.SubsystemException: org.osgi.service.resolver.ResolutionException: Unable to resolve XXX;osgi.bundle: missing requirement org.apache.felix.bundlerepository.impl.FelixRequirementAdapter@ee869b56 [caused by: Unable to resolve XXX;osgi.bundle: missing requirement org.apache.felix.bundlerepository.impl.FelixRequirementAdapter@863065e7]
	at org.apache.aries.subsystem.core.internal.SubsystemResource.computeDependencies(SubsystemResource.java:395) ~[na:na]
	at org.apache.aries.subsystem.core.internal.SubsystemResource.computeDependencies(SubsystemResource.java:356) ~[na:na]
	at org.apache.aries.subsystem.core.internal.SubsystemResource.<init>(SubsystemResource.java:98) ~[na:na]
	at org.apache.aries.subsystem.core.internal.SubsystemResource.<init>(SubsystemResource.java:90) ~[na:na]
	at org.apache.aries.subsystem.core.internal.InstallAction.run(InstallAction.java:54) ~[na:na]
	at org.apache.aries.subsystem.core.internal.InstallAction.run(InstallAction.java:30) ~[na:na]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_66]
	at org.apache.aries.subsystem.core.internal.BasicSubsystem.install(BasicSubsystem.java:646) ~[na:na]
	at org.apache.aries.subsystem.core.internal.BasicSubsystem.install(BasicSubsystem.java:690) ~[na:na]
	at org.apache.aries.subsystem.core.internal.BasicSubsystem.install(BasicSubsystem.java:278) ~[na:na]
	at org.apache.aries.subsystem.core.internal.BasicSubsystem.install(BasicSubsystem.java:65) ~[na:na]
	...
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_66]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_66]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_66]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_66]
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:222) [2.0.2:na]
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:37) [2.0.2:na]
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:615) [2.0.2:na]
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:499) [2.0.2:na]
	at org.apache.felix.scr.impl.helper.ActivateMethod.invoke(ActivateMethod.java:295) [2.0.2:na]
	at org.apache.felix.scr.impl.manager.SingleComponentManager.createImplementationObject(SingleComponentManager.java:302) [2.0.2:na]
	at org.apache.felix.scr.impl.manager.SingleComponentManager.createComponent(SingleComponentManager.java:113) [2.0.2:na]
	at org.apache.felix.scr.impl.manager.SingleComponentManager.getService(SingleComponentManager.java:866) [2.0.2:na]
	at org.apache.felix.scr.impl.manager.SingleComponentManager.getServiceInternal(SingleComponentManager.java:833) [2.0.2:na]
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:724) [2.0.2:na]
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.enable(AbstractComponentManager.java:399) [2.0.2:na]
	at org.apache.felix.scr.impl.config.ConfigurableComponentHolder.enableComponents(ConfigurableComponentHolder.java:676) [2.0.2:na]
	at org.apache.felix.scr.impl.BundleComponentActivator.initialEnable(BundleComponentActivator.java:339) [2.0.2:na]
	at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:360) [2.0.2:na]
	at org.apache.felix.scr.impl.Activator.access$000(Activator.java:53) [2.0.2:na]
	at org.apache.felix.scr.impl.Activator$ScrExtension.start(Activator.java:260) [2.0.2:na]
	at org.apache.felix.utils.extender.AbstractExtender.createExtension(AbstractExtender.java:259) [2.0.2:na]
	at org.apache.felix.utils.extender.AbstractExtender.modifiedBundle(AbstractExtender.java:232) [2.0.2:na]
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:482) [org.apache.felix.framework-5.4.0.jar:na]
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:415) [org.apache.felix.framework-5.4.0.jar:na]
	at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:232) [org.apache.felix.framework-5.4.0.jar:na]
	at org.osgi.util.tracker.BundleTracker$Tracked.bundleChanged(BundleTracker.java:444) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:916) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:835) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:517) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4541) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2172) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:998) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:984) [org.apache.felix.framework-5.4.0.jar:na]
	...
	at org.apache.felix.framework.util.EventDispatcher.invokeFrameworkListenerCallback(EventDispatcher.java:882) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:831) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:1148) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:55) [org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:103) [org.apache.felix.framework-5.4.0.jar:na]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_66]
Caused by: org.osgi.service.resolver.ResolutionException: Unable to resolve XXX;osgi.bundle: missing requirement org.apache.felix.bundlerepository.impl.FelixRequirementAdapter@ee869b56 [caused by: Unable to resolve XXX;osgi.bundle: missing requirement org.apache.felix.bundlerepository.impl.FelixRequirementAdapter@863065e7]
	at org.apache.felix.resolver.ResolutionError.toException(ResolutionError.java:42) ~[org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:235) ~[org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:158) ~[org.apache.felix.framework-5.4.0.jar:na]
	at org.apache.aries.subsystem.core.internal.SubsystemResource.computeDependencies(SubsystemResource.java:373) ~[na:na]
	... 56 common frames omitted

The missing dependency is unknown, because FelixRequirementAdapter does not provide a toString method.
This class should provide such a method, delegating to the real Requirement instance (which already provide a toString method).

Same thing with FelixCapabilityAdapter.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-01-20 10:50:01.268,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Apr 11 15:57:49 UTC 2016,,,,,,0|i2rp13:,9223372036854775807,,,,,,,,"20/Jan/16 10:50;githubbot;GitHub user alexandreroman opened a pull request:

    https://github.com/apache/felix/pull/51

    FELIX-5170 - Add method toString

    This branch provides a fix for FELIX-5170.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alexandreroman/felix felix-5170

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/51.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #51
    
----
commit c92eb3bc36f603336a840434b1774bdfcb1f47c6
Author: Alexandre Roman <alexandre.roman@atos.net>
Date:   2016-01-20T10:20:25Z

    FELIX-5170 - Add method toString

----
","11/Apr/16 09:41;githubbot;Github user alexandreroman closed the pull request at:

    https://github.com/apache/felix/pull/51
","11/Apr/16 09:42;githubbot;GitHub user alexandreroman opened a pull request:

    https://github.com/apache/felix/pull/64

    This branch provides a fix for FELIX-5170.

    Branc rebased from Felix's trunk.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alexandreroman/felix felix-5170

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/64.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #64
    
----
commit ad878c7ba0371b46d2980e9137140b5198c60177
Author: Alexandre Roman <alexandre.roman@atos.net>
Date:   2016-01-20T10:20:25Z

    FELIX-5170 - Add method toString

----
","11/Apr/16 15:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/64
","11/Apr/16 15:57;bosschaert;Thanks [~romale], I've applied your patch in https://svn.apache.org/viewvc?view=revision&revision=1738594",,,,,,,,,,,,,,,,,,,,,,,,,,,
Only log failures for consistently failing bundles,FELIX-4934,12838283,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,rotty3000,rotty3000,16/Jun/15 20:39,01/Apr/16 14:50,13/Mar/19 22:56,01/Apr/16 14:50,fileinstall-3.5.0,,,,fileinstall-3.5.4,,File Install,,,0,,,,,,"Fileinstall logs failures at WARN even if the failure is an early attempt for which the dependency might already exist in the scan directories.

However, it's beneficial to get failure logs for the legitimate cases were dependencies are really missing.",All,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-06-16 21:01:34.126,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Apr 01 14:50:49 UTC 2016,,,,,,0|i2g4gf:,9223372036854775807,,,,,,,,"16/Jun/15 21:01;githubbot;GitHub user rotty3000 opened a pull request:

    https://github.com/apache/felix/pull/23

    FELIX-4934 Only log failures for consistently failing bundles

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rotty3000/felix FELIX-4934

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/23.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #23
    
----
commit f245713e54d7ada56ca65290d88cd4ccf67c4572
Author: Raymond Auge <raymond.auge@liferay.com>
Date:   2015-06-16T20:47:29Z

    FELIX-4934 Only log failures for consistently failing bundles

----
","15/Dec/15 10:03;gnt;I'm not sure to understand exactly the desired behaviour.

If I understand the patch correctly, the warning will only be issued when the same set of bundles fails for the second (or subsequent) time.
Won't that mean that if the deploy a set of bundle and never touch them again, you'll never see the warning ?","04/Jan/16 16:44;rotty3000;No that is not correct! This only limits the errors within a single ""iteration"" of the directory scanner.

To be more clear, the limit only applies to a single batch by the directory watcher. If the bundle fails again on a subsequent iteration it will still be reported.","01/Apr/16 14:50;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/23
",01/Apr/16 14:50;bosschaert;Many thanks for your patch [~rotty3000]! It's applied in https://svn.apache.org/viewvc?view=revision&revision=1737404,,,,,,,,,,,,,,,,,,,,,,,,,,,
Order Repositories in the order they are added,FELIX-5231,12955304,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,psoreide,psoreide,01/Apr/16 13:51,01/Apr/16 14:22,13/Mar/19 22:56,01/Apr/16 14:22,bundlerepository-2.0.6,,,,bundlerepository-2.0.8,,Bundle Repository (OBR),,,0,,,,,,Order Repositories in the order they are added. Change the map containing the repositories to a LinkedHashMap,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-04-01 13:57:15.304,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Apr 01 14:22:26 UTC 2016,,,,,,0|i2vimv:,9223372036854775807,,,,,,,,"01/Apr/16 13:57;githubbot;GitHub user psoreide opened a pull request:

    https://github.com/apache/felix/pull/63

    Fixes FELIX-5231 - Order Repositories in the order they are added

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/psoreide/felix map-change

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/63.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #63
    
----
commit e75f6461b2d3a9d2bc51e874372ca5af8929ffea
Author: PK Søreide <per.kristian.soreide@gmail.com>
Date:   2016-04-01T13:55:24Z

    Fixes FELIX-5231 - Order Repositories in the order they are added

----
","01/Apr/16 14:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/63
",01/Apr/16 14:22;bosschaert;Many thanks for your patch [~psoreide]! It's applied in https://svn.apache.org/viewvc?view=revision&revision=1737395,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BundleNamespace on Req/Cap is not translated correctly,FELIX-5229,12955257,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,psoreide,psoreide,01/Apr/16 09:44,01/Apr/16 14:17,13/Mar/19 22:56,01/Apr/16 14:17,bundlerepository-2.0.6,,,,bundlerepository-2.0.8,,Bundle Repository (OBR),,,0,,,,,,"When translating Requirements and Capabilities with namespace 'osgi.wiring.bundle' some attributes are not translated correctly.

Currently 'osgi.wiring.bundle:osgi.wiring.bundle' is translated to 'bundle:bundle' but it should be translated to 'bundle:symbolicname'.

Also 'bundle-version' should be translated to 'version' ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-04-01 09:50:31.631,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Apr 01 14:17:25 UTC 2016,,,,,,0|i2vicf:,9223372036854775807,,,,,,,,"01/Apr/16 09:50;githubbot;GitHub user psoreide opened a pull request:

    https://github.com/apache/felix/pull/61

    Fixes FELIX-5229 - BundleNamespace on Req/Cap is not translated

    Fixes FELIX-5229 - BundleNamespace on Req/Cap is not translated correctly
    
    Signed-off-by: PK Søreide <per.kristian.soreide@gmail.com>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/psoreide/felix bundle-namespace-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/61.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #61
    
----
commit 7b7d2263ec9f2d3fe5f27f56c205534e91fa5fad
Author: PK Søreide <per.kristian.soreide@gmail.com>
Date:   2016-04-01T09:47:13Z

    Fixes FELIX-5229 - BundleNamespace on Req/Cap is not translated correctly
    
    Signed-off-by: PK Søreide <per.kristian.soreide@gmail.com>

----
","01/Apr/16 13:11;bosschaert;[~psoreide] I'm actually just in the process of creating the 2.0.8 release right now, I guess it would be nice to have this one and FELIX-5230 included in that right?","01/Apr/16 13:13;psoreide;Yes, that would be great!","01/Apr/16 14:15;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/61
",01/Apr/16 14:17;bosschaert;Many thanks for your patch [~psoreide]! It's applied in https://svn.apache.org/viewvc?view=revision&revision=1737394,,,,,,,,,,,,,,,,,,,,,,,,,,,
Better handling of effective attribute on Requirements,FELIX-5230,12955259,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,psoreide,psoreide,01/Apr/16 10:21,01/Apr/16 14:04,13/Mar/19 22:56,01/Apr/16 14:04,bundlerepository-2.0.6,,,,bundlerepository-2.0.8,,Bundle Repository (OBR),,,0,,,,,,Requirements with effective attribute set other than 'resolve' should be ignored,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-04-01 10:25:20.034,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Apr 01 14:04:13 UTC 2016,,,,,,0|i2vicv:,9223372036854775807,,,,,,,,"01/Apr/16 10:25;githubbot;GitHub user psoreide opened a pull request:

    https://github.com/apache/felix/pull/62

    Fixes FELIX-5230 - Better handling of effective attribute on Reqs

    Fixes FELIX-5230 - Better handling of effective attribute on Requirements
    
    Signed-off-by: PK Søreide <per.kristian.soreide@gmail.com>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/psoreide/felix resolve-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/62.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #62
    
----
commit 6cbe8e3258adb44cae711537651688e4cf910749
Author: PK Søreide <per.kristian.soreide@gmail.com>
Date:   2016-04-01T10:22:23Z

    Fixes FELIX-5230 - Better handling of effective attribute on Requirements
    
    Signed-off-by: PK Søreide <per.kristian.soreide@gmail.com>

----
","01/Apr/16 14:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/62
",01/Apr/16 14:04;bosschaert;Many thanks for your patch [~psoreide]! It's applied in https://svn.apache.org/viewvc?view=revision&revision=1737391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't load bundle entries when embedding FelixConnect in JBoss,FELIX-5206,12947988,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,08/Mar/16 12:30,21/Mar/16 20:10,13/Mar/19 22:56,21/Mar/16 20:10,connect-0.1.0,,,,,,Connect,,,0,,,,,,"I'm using Apache Connect embedded in JBoss EAP 5.2.

I came across the following issue: When I launch Apache Connect under jboss, the ClasspathScanner loads bundles from a jboss classloader that I pass to the scanForBundles method. The problem is that jboss ClassLoader.getResources(...) method returns a list of URL with a special jboss ""vfszip"" URL, like:

vfszip:/opt/SPS_2_0_I16/jboss/common/lib/DNSClient-1.2759.01.jar/ 

Now, when declarative service (1.8.2) is started, it can't load the xml descriptors, because when it invokes the Bundle.findEntries(...) method, this one returns null, because the call to this method ends up calling the org.apache.felix.connect.URLRevision.getEntries() method, which is not implemented:

{code}
    @Override
    public Enumeration<String> getEntries()
    {
        return Collections.enumeration(Collections.EMPTY_LIST);
    }
{code}

I have attached a simple patch to this issue which resolves the problem.

Anyone could review it and let me know if I can commit it ?

thanks.



",,,,,,,,,,,,,,,,,,,,,09/Mar/16 16:21;pderop;FELIX-5206-wrap-vfszipurl-to-jarfileurl.patch;https://issues.apache.org/jira/secure/attachment/12792273/FELIX-5206-wrap-vfszipurl-to-jarfileurl.patch,16/Mar/16 16:35;pderop;FELIX-5206.VFS.tgz;https://issues.apache.org/jira/secure/attachment/12793778/FELIX-5206.VFS.tgz,08/Mar/16 12:32;pderop;FELIX-5206.patch;https://issues.apache.org/jira/secure/attachment/12791990/FELIX-5206.patch,,,3.0,,,,,,,,,,,,,,,,,,,2016-03-08 14:11:37.191,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Mar 21 20:02:59 UTC 2016,,,,,,0|i2ubwn:,9223372036854775807,,,,,,,,"08/Mar/16 12:32;pderop;Attached the proposed patch.
let me know if I can commit this ? 

thanks.","08/Mar/16 14:11;karlpauls;Well, I'm not sure that this is the correct way of handling this problem. 

It seems like you are assuming that you can just read any url as a jar. This probably is not a good assumption. Granted, I never really figured out what to do in this case so your guess is as good as any but I would rather say we should special case the vfszip protocol and turn it into a JarRevision when we encounter it. Have a look at the buildRevision(BundleDescriptor desc)  method in PojoSR. There we first check if it is a file url, then we check if it is a JarURLConnection, and then we fallback to a URLRevision. It almost looks like you could just detect that it is a vfszip protocol url, wrap it into a jar: url and make it a JarRevision there, no?","09/Mar/16 16:21;pderop;I have attached a second patch which just wraps the vfszip url in the PojoSR.buildRevision(BundleDescriptor desc) method.

However, I'm now hesitant. Indeed, I'm not a jboss expert, but looking at some links from google, it seems that vfszip is not the only URL protocol supported by jboss (there is also vfsjar, vfsfile, etc ...).

Another concern is about the vfszip, which seems to be able to not only point to real jars (like in my case), but also point to some inner jars from a non-exploded ear (not my case).

So, it seems that if we want to generically handle all the possible use cases, then we would need to call URL.openConnection() and get the content in a transparent way ? One option could be to try to wrap the vfszip
URL to a jar url in a more robust way, like using a custom URLStream Handler that would then internally call the actual vfszip URL.openConnection() in order to copy the content in a temporary file, etc ... (really similar to the RevisionAsJarURL inner class from [1]).

But then, this also looks similar to what I did in the initial patch (in the URLRevision) ? by the way, what is really wrong with it ?

So, what do you think ? (both patches are currently working for my use case, it's just that I would like to make sure that all use cases are correctly supported).

... maybe I'm rambling too much :-)

[1] http://svn.apache.org/viewvc/felix/trunk/framework/src/main/java/org/apache/felix/framework/BundleProtectionDomain.java?revision=1734034&view=co","16/Mar/16 16:17;pderop;As discussed with Karl, I'm attaching a new patch (FELIX-5206.VFS) which is now using the JBoss VFS api (if available) when loading bundles represented by ""vfs"" URLs:

Added VFSRevision.java, which allows to transparently load bundles regardless of the form in which the bundles are deployed (jar, ear, or unpackaged in the jboss deployment directory).
And If a vfs protocol is detected but the VFS API is not there, then we use by default the URLRevision. In this case, we assume that the bundle can be loaded from the root of the bundle URL.
Also patched the URLRevision.getEntries() method which is using the URL connection when accessing to the URL content.

Karl, are you OK with this ?","16/Mar/16 16:35;pderop;There was some problems with diff, so I replaced the FELIX-5206.VFS with a FELIX-5206.VFS.tgz archive, which contains the modified files.",17/Mar/16 13:12;karlpauls;I assume you tested it with old and new jboss versions and outside of jboss. If it works I'm fine with the patch - nice work!,"17/Mar/16 20:29;pderop;Thanks Karl, 

Yes I did some tests outside jboss, inside an old jboss which does not support vfs (only ""vfszip"" protocol), and tested the ""vfs"" protocol with an EAR archive inside JBoss EAP 6.4.0. The EAR contains some felix bundles (gogo , declarative service, etc ...), an EJB used to launch Connect, and then I was able to telnet to the EAR and browse my components.  

I also tested the EAR in two forms of deployment:

- EAR in the form of a packaged ""connect.ear"" archive file.
- EAR in the form of an unpackage ear, unjared in the jboss deployment directory (flat files).

Ok, I will commit all this soon. 

:-)",21/Mar/16 20:02;pderop;Committed the proposed patch in rv 1736078.,,,,,,,,,,,,,,,,,,,,,,,,
Fileinstall MemoryLeak / Performance degradation in WatcherScanner,FELIX-5218,12950771,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fabianlange,fabianlange,16/Mar/16 08:05,16/Mar/16 08:54,13/Mar/19 22:56,16/Mar/16 08:26,,,,,fileinstall-3.5.4,,File Install,,,0,,,,,,"WatcherScanner has a Watcher (called ScannerWatcher :-)) which will fill a set with all files that have been changed, so that it then can iterate over that.
however the set will never be cleaned, which leads to the problem that removed entries will be ""removed"" over and over again. ultimately bringing the system to a halt because it is busy removing stuff",,,,,,,,,,,,,,,,,,,,,16/Mar/16 08:16;fabianlange;Screen Shot 2016-03-16 at 09.16.10.png;https://issues.apache.org/jira/secure/attachment/12793713/Screen+Shot+2016-03-16+at+09.16.10.png,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-03-16 08:14:47.47,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 16 08:54:21 UTC 2016,,,,,,0|i2ur4n:,9223372036854775807,,,,,,,,"16/Mar/16 08:14;githubbot;GitHub user CodingFabian opened a pull request:

    https://github.com/apache/felix/pull/59

    [FELIX-5218] fileinstall: Removed files should no longer be considere…

    …d changed.
    
    This is probably a regression from adding the stable checksum mechanism. All removed files need to be removed from the ""changed"" hash set, otherwise they would be seen next iteration again and again be considered as removed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/CodingFabian/felix FELIX-5218

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/59.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #59
    
----
commit cc1ba9b565256f2a7cf7de0d261127b50ec9ca56
Author: Fabian Lange <lange.fabian@gmail.com>
Date:   2016-03-16T08:12:51Z

    [FELIX-5218] fileinstall: Removed files should no longer be considered changed.

----
","16/Mar/16 08:17;fabianlange;See attached screenshot, clearly showing changed is out of control with 9266 (yes the program does create and remove a lot of config files)",16/Mar/16 08:40;fabianlange;woops. together with FELIX-5217 this means 85858756 (86 million) iterations over the hash set :-),"16/Mar/16 08:54;githubbot;Github user CodingFabian closed the pull request at:

    https://github.com/apache/felix/pull/59
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fileinstall is handling removal of many files inefficiently,FELIX-5217,12950768,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fabianlange,fabianlange,16/Mar/16 07:56,16/Mar/16 08:53,13/Mar/19 22:56,16/Mar/16 08:25,,,,,fileinstall-3.5.4,,File Install,,,0,,,,,,"I am currently debugging a performance issue with file install.

The thread is very hot on:
java.util.HashMap.hash(java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashSet.add(java.lang.Object)
java.util.AbstractCollection.addAll(java.util.Collection) (line: 344)
org.apache.felix.fileinstall.internal.WatcherScanner.scan(boolean) (line: 100)
org.apache.felix.fileinstall.internal.DirectoryWatcher.run() (line: 302)

What I see in WatcherScanner, is that it potentially adds the same elements over and over again.
While I am sure that this is not the root cause, I suggest to change the method to avoid this. (submitting pr in a second)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-03-16 08:03:06.859,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Mar 16 08:53:57 UTC 2016,,,,,,0|i2ur3z:,9223372036854775807,,,,,,,,"16/Mar/16 08:03;githubbot;GitHub user CodingFabian opened a pull request:

    https://github.com/apache/felix/pull/58

    [FELIX-5217] fileinstall: Improve WatcherScanner performance

    note that the other option is to call addAll before the loop, but because the return value is ignored anyway, it is slightly more efficient to do this in the loop.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/CodingFabian/felix FELIX-5217

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/58.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #58
    
----
commit f324e9ea13f265d418131cfdce99d8d9315f7991
Author: Fabian Lange <lange.fabian@gmail.com>
Date:   2016-03-16T07:59:26Z

    [FELIX-5217] fileinstall: Improve WatcherScanner performance

----
","16/Mar/16 08:03;fabianlange;ok the root cause of the performance problem is that ""changed"" only grows, never shrinks.","16/Mar/16 08:13;gnt;Patch applied.

The {{changed}} set should shrink with line 86:
https://github.com/apache/felix/blob/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/WatcherScanner.java#L86
",16/Mar/16 08:15;fabianlange;Yes but it only does that if the file exists. if it doesnt 8because it was removed) then the changed set will not shrink (see FELIX-5218),"16/Mar/16 08:53;githubbot;Github user CodingFabian closed the pull request at:

    https://github.com/apache/felix/pull/58
",,,,,,,,,,,,,,,,,,,,,,,,,,,
[FileInstall] use framework bundle location to get framework bundle,FELIX-5209,12948696,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,djencks,djencks,djencks,10/Mar/16 07:33,10/Mar/16 07:47,13/Mar/19 22:56,10/Mar/16 07:47,fileinstall-3.5.0,,,,fileinstall-3.5.4,,File Install,,,0,,,,,,"FileInstall doesn't work in isolated regions where bundle 0 is not directly visible.   Usage of context.getBundle(0) needs to be replaced with  context.getBundle(Constants.SYSTEM_BUNDLE_LOCATION) which always works.  Also, the project doesn't appear to build because it's using an obsolete parent version.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Mar 10 07:47:48 UTC 2016,,,,,,0|i2ug9z:,9223372036854775807,,,,,,,,10/Mar/16 07:47;djencks;fixed rev r1734365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Provide-Capability not being processed for Resources,FELIX-5195,12941587,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,skahmann,skahmann,24/Feb/16 00:17,01/Mar/16 12:24,13/Mar/19 22:56,01/Mar/16 12:24,bundlerepository-2.0.6,,,,bundlerepository-2.0.8,,Bundle Repository (OBR),,,0,,,,,,Capabilities provided using Provide-Capability are not being added to Resources. PR Created.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-02-24 09:15:01.328,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Mar 01 12:24:02 UTC 2016,,,,,,0|i2t8yf:,9223372036854775807,,,,,,,,24/Feb/16 00:19;skahmann;PR here: https://github.com/apache/felix/pull/53,24/Feb/16 09:15;bosschaert;Thanks for your contribution [~skahmann]! I will take a look at it soon.,"29/Feb/16 18:53;skahmann;Hi [~bosschaert]. Sorry to bother you, but any update on this? Thanks!",01/Mar/16 12:24;bosschaert;Many thanks for your patch [~skahmann]! I've applied it in https://svn.apache.org/viewvc?view=revision&revision=1733051,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UserAdmin has hard dependency on EventAdmin,FELIX-4280,12673392,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jajans,jajans,jajans,11/Oct/13 08:39,25/Feb/16 12:12,13/Mar/19 22:56,11/Oct/13 08:59,,,,,useradmin-next,,User Admin,,,0,,,,,,"The import requirements of Felix UserAdmin require `org.osgi.service.eventadmin` as well. This is not required by the UserAdmin 1.1 specification and therefore should be optional.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,353015,,,Fri Oct 11 08:59:54 UTC 2013,,,,,,0|i1ov2f:,353302,,,,,,,,11/Oct/13 08:59;jajans;Made the import optional. See rev# 1531234.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UserAdmin MongoDB plugin cannot return role when properties or members is null,FELIX-4399,12690314,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jajans,adezeghe,adezeghe,22/Jan/14 17:03,25/Feb/16 12:12,13/Mar/19 22:56,23/Jan/14 09:25,,,,,useradmin-mongo-next,,User Admin,,,0,,,,,,"When fetching a role with no properties or roles from mongodb, a null object is returned by the DB. This causes a null pointer exception and as a result no roles are returned.

This can be solved by modifying following three methods in MongoSerializerHelper.java to:
    /**
     * Deserializes the given {@link DBObject} into the given {@link Dictionary}.
     * 
     * @param dictionary the dictionary to fill;
     * @param object the {@link DBObject} to deserialize.
     */
    private void deserializeDictionary(Dictionary dictionary, DBObject object) {
        if(object != null) {
	    	for (String key : object.keySet()) {
	            dictionary.put(KeyCodec.decode(key), object.get(key));
	        }
        }
    }
    
    /**
     * Serializes a given array of {@link Role}s to an list for storing in a {@link DBObject}.
     * 
     * @param members the {@link Role}s to serialize, cannot be <code>null</code>.
     * @return the ""serialized"" array, never <code>null</code>.
     */
    private List<String> getRoleNames(Role[] members) {
        List<String> result = new ArrayList<String>();
        if (members != null) {
            for (Role member : members) {
                result.add(member.getName());
            }
        }
        return result;
    }
    
    /**
     * Returns all roles mentioned in the given list.
     * 
     * @param list the list with role names to convert.
     * @return a list with {@link Role}s, never <code>null</code>.
     */
    private List<Role> getRoles(BasicDBList list) {
        List<Role> result = new ArrayList<Role>();
        if(list !=null) {
	        for (int i = 0, size = list.size(); i < size; i++) {
	            final String memberName = (String) list.get(i);
	            result.add(findExistingMember(memberName));
	        }
        }
        return result;
    }
","MongoDB 32-bit, v2.4.9
Java 1.7
UserAdmin 1.0.3",300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-01-23 09:25:45.678,,,no_permission,,,,,,,,,,,,369267,,,Thu Jan 23 09:25:45 UTC 2014,,,,,,0|i1rn9r:,369572,,,,,,,,23/Jan/14 09:25;jajans;Committed fix in rev #1560612. Added a MongoDB integration test to cover this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refreshing Gogo shell bundle leaves running daemon thread,FELIX-4024,12642453,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,lkirchev,lkirchev,14/Apr/13 16:30,19/Jan/16 13:56,13/Mar/19 22:56,19/Jan/16 13:56,gogo.shell-0.10.0,gogo.shell-0.8.0,,,,,Gogo Shell,,,1,,,,,,"In the Activator of the Gogo shell bundle a new thread is created (line 122) and started (line 123). The thread instance is stored and upon bundle stop it is interrupted (line 54). 

However, the thread which is created on line 122 is daemon, so after interruption on line 54 it does not go away. So each time the bundle is refreshed a new thread is created and started, but the old one continues to live. In this way a bunch of ""Gogo shell"" threads get created. These compete for input from the std in and the commands are not read correctly.

The line nubmers are valid for 0.8.0 and 0.10.0 versions.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-01-19 13:56:12.984,,,no_permission,,,,,,,,,,,,322867,,,Tue Jan 19 13:56:12 UTC 2016,,,,,,0|i1jpen:,323212,,,,,,,,19/Jan/16 13:56;jajans;I think this issue is solved with the fixes for FELIX-5077 / FELIX-3331. That is: I cannot reproduce this issue with these changes...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] Calling Activator.stop after Activator.start throws an exception,FELIX-3331,12540529,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,kdaniel,kdaniel,31/Jan/12 10:40,19/Jan/16 13:00,13/Mar/19 22:56,19/Jan/16 13:00,,,,,,,Gogo Shell,,,0,,,,,,"https://bugzilla.redhat.com/show_bug.cgi?id=786041

gogo: InterruptedException: sleep interrupted
java.lang.InterruptedException: sleep interrupted
        at java.lang.Thread.sleep(Native Method)
        at org.apache.felix.gogo.shell.Activator.run(Activator.java:72)
        at java.lang.Thread.run(Thread.java:722)

Thread.sleep() could be try catched and handle interrupted exception as a proper workflow.",,,,,,,,,,,,,,,,,,,,,31/Jan/12 13:45;kdaniel;ignoreActivatorException.patch;https://issues.apache.org/jira/secure/attachment/12512565/ignoreActivatorException.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-01-19 13:00:23.024,,,no_permission,,,,,,,,,,,,225942,,,Tue Jan 19 13:00:23 UTC 2016,,,,,,0|i1avg7:,271561,,,,,,,,31/Jan/12 13:45;kdaniel;A patch that ignores InterruptedException,19/Jan/16 13:00;jajans;Fixed in rev #1725510.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix fileinstall project set to incorrect java version,FELIX-4935,12838300,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,rotty3000,rotty3000,16/Jun/15 20:58,15/Dec/15 10:28,13/Mar/19 22:56,15/Dec/15 09:02,fileinstall-3.5.0,,,,fileinstall-3.5.2,,File Install,,,0,,,,,,,All,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-06-16 21:01:18.59,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 15 09:02:50 UTC 2015,,,,,,0|i2g4k7:,9223372036854775807,,,,,,,,"16/Jun/15 21:01;githubbot;GitHub user rotty3000 opened a pull request:

    https://github.com/apache/felix/pull/22

    FELIX-4935 Felix fileinstall project set to incorrect java version

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rotty3000/felix FELIX-4935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/22.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #22
    
----
commit 3fca580dbb8a0818135122fce8a4a746a63f6e6c
Author: Raymond Auge <raymond.auge@liferay.com>
Date:   2015-06-16T20:59:06Z

    FELIX-4935 Felix fileinstall project set to incorrect java version

----
","15/Dec/15 09:02;gnt;Fixed by https://github.com/apache/felix/commit/c04dc3138173944849ec65f806705d45ab149a71

I missed this jira when I committed the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix Fileinstall: add support for recursing and skipping subdirectories,FELIX-5137,12921610,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fabianlange,fabianlange,14/Dec/15 09:36,15/Dec/15 09:50,13/Mar/19 22:56,14/Dec/15 16:35,fileinstall-3.5.0,,,,fileinstall-3.5.2,,File Install,,,0,,,,,,"The current implementation follows the following pattern:
if a file in a watched directory is changed, it is updated. If it resides in a subdirectory, that subdirectory is treated as jar.
Sometimes it could be desired to organize files in subdirectories which shall not be treated as jars. sometimes you might want to have a separate watcher for a subdirectory, so the parent should skip them.

therefor I propose the addition of a new property called ""felix.fileinstall.subdir.mode"" with the values ""jar"", ""recurse"" and ""skip"". jar being default if unset.

This also would fix the problem described in FELIX-5134 which was found to be: works as designed.",,,,,,,,,,,,,,,FELIX-5134,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-12-14 10:51:41.699,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Dec 14 17:28:33 UTC 2015,,,,,,0|i2pujz:,9223372036854775807,,,,,,,,"14/Dec/15 10:51;githubbot;GitHub user CodingFabian opened a pull request:

    https://github.com/apache/felix/pull/47

    FELIX-5137 Added felix.fileinstall.subdir.mode = jar | skip | recurse

    This PR adds the ability to configure the mode fileinstall operates. the default mode is ""jar"" which means subdirectories in watched directories are treated as exploded jar.
    ""skip"" just skips subdirectories (for example to install a second watcher in that dir with different update interval)
    ""recurse"" will now pick the config files in any nested directory as if they would be in the watched directory. iThis mode is designed to ""organize"" config files in subdirectories

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/CodingFabian/felix new_subdir_mode_feature

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/47.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #47
    
----
commit 5248f4878eff70ac75ba7fe8c667686d3cd0da17
Author: Fabian Lange <lange.fabian@gmail.com>
Date:   2015-12-11T09:38:38Z

    FELIX-5137 Added felix.fileinstall.subdir.mode = jar | skip | recurse

----
","14/Dec/15 16:35;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Scanner.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/WatcherScanner.java
Committed r1719952
","14/Dec/15 17:28;githubbot;Github user CodingFabian closed the pull request at:

    https://github.com/apache/felix/pull/47
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fileinstall's ConfigInstaller leaks it's permission checks to caller,FELIX-4975,12849716,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,rotty3000,rotty3000,28/Jul/15 19:39,15/Dec/15 09:49,13/Mar/19 22:56,15/Dec/15 09:49,fileinstall-3.5.0,,,,fileinstall-3.5.2,,File Install,,,0,,,,,,"The following stack trace shows ConfigInstaller's permission leaking and failing for configadmin (the caller)

{code}
java.security.AccessControlException: access denied (""java.util.PropertyPermission"" ""felix.fileinstall.enableConfigSave"" ""read"")
	at java.security.AccessControlContext.checkPermission(AccessControlContext.java:372)
	at org.eclipse.osgi.internal.permadmin.EquinoxSecurityManager.internalCheckPermission(EquinoxSecurityManager.java:117)
	at com.liferay.portal.security.pacl.PortalSecurityManagerImpl$PermissionAction.run(PortalSecurityManagerImpl.java:1465)
	at com.liferay.portal.security.pacl.PortalSecurityManagerImpl$PermissionAction.run(PortalSecurityManagerImpl.java:1451)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.liferay.portal.security.pacl.PortalSecurityManagerImpl.checkPermission(PortalSecurityManagerImpl.java:331)
	at java.lang.SecurityManager.checkPropertyAccess(SecurityManager.java:1298)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.getProperty(BundleContextImpl.java:117)
	at org.apache.felix.fileinstall.internal.ConfigInstaller.shouldSaveConfig(ConfigInstaller.java:163)
	at org.apache.felix.fileinstall.internal.ConfigInstaller.configurationEvent(ConfigInstaller.java:93)
	at org.apache.felix.cm.impl.ConfigurationManager$FireConfigurationEvent.sendEvent(ConfigurationManager.java:2046)
	at org.apache.felix.cm.impl.ConfigurationManager$FireConfigurationEvent.run(ConfigurationManager.java:2014)
	at org.apache.felix.cm.impl.UpdateThread$1.run(UpdateThread.java:131)
	at org.apache.felix.cm.impl.UpdateThread$1.run(UpdateThread.java:128)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.felix.cm.impl.UpdateThread.run0(UpdateThread.java:127)
	at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:110)
	at java.lang.Thread.run(Thread.java:745)
{code}",any with security enabled,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-07-28 19:41:17.464,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 15 09:49:31 UTC 2015,,,,,,0|i2i19b:,9223372036854775807,,,,,,,,"28/Jul/15 19:41;githubbot;GitHub user rotty3000 opened a pull request:

    https://github.com/apache/felix/pull/30

    FELIX-4975 fileinstall's ConfigInstaller leaks it's permission checks…

    … to caller
    
    Signed-off-by: Raymond Auge <raymond.auge@liferay.com>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rotty3000/felix FELIX-4975

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/30.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #30
    
----
commit 68e2a681ab6d45fb1c381632b8588df3e849850e
Author: Raymond Auge <raymond.auge@liferay.com>
Date:   2015-07-28T19:39:53Z

    FELIX-4975 fileinstall's ConfigInstaller leaks it's permission checks to caller
    
    Signed-off-by: Raymond Auge <raymond.auge@liferay.com>

----
","15/Dec/15 09:49;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java
Committed r1720103
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix Fileinstall temp dir generation is inefficient,FELIX-5136,12921471,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fabianlange,fabianlange,13/Dec/15 11:18,15/Dec/15 08:56,13/Mar/19 22:56,15/Dec/15 08:56,fileinstall-3.5.0,,,,fileinstall-3.5.2,,File Install,,,0,,,,,,"If no tmpDir is set, DirectoryWatcher will use a SecureRandom to find a free temp dir.
This is ineffcient, because SecureRandom needs warmup time.
Additionally DirectoryWatcher wil unncessarily hold on to java.io.tmpdir and the secure random after intitialization.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-12-13 11:20:37.266,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 15 08:56:28 UTC 2015,,,,,,0|i2ptp3:,9223372036854775807,,,,,,,,"13/Dec/15 11:20;githubbot;GitHub user CodingFabian opened a pull request:

    https://github.com/apache/felix/pull/46

    FELIX-5136 Improve startup performance and memory consumption of Dire…

    …ctoryWatcher

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/CodingFabian/felix optimizeDirectoryWatcherStartup

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/46.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #46
    
----
commit 1ed6bc19f3e69c49af90ed17b789fa19b31d40f3
Author: Fabian Lange <lange.fabian@gmail.com>
Date:   2015-12-13T11:20:10Z

    FELIX-5136 Improve startup performance and memory consumption of DirectoryWatcher

----
","15/Dec/15 08:56;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r1720091
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix Fileinstall does not use all properties,FELIX-5135,12921469,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fabianlange,fabianlange,13/Dec/15 11:04,14/Dec/15 17:28,13/Mar/19 22:56,14/Dec/15 16:35,fileinstall-3.5.0,,,,fileinstall-3.5.2,,File Install,,,0,,,,,,Fileinstall ignores some of its supported settings because they are not added to the config in FileInstall#start(),apache karaf 4.0.3,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-12-13 11:05:44.232,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Dec 14 17:28:52 UTC 2015,,,,,,0|i2pton:,9223372036854775807,,,,,,,,"13/Dec/15 11:05;githubbot;GitHub user CodingFabian opened a pull request:

    https://github.com/apache/felix/pull/45

    FELIX-5135: Synchronize DirectoryWatcher Properties with FileInstall.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/CodingFabian/felix fix_fileinstall_config

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/45.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #45
    
----
commit 3761ef5d9ae9ea48d8a086df892b375e54c4c926
Author: Fabian Lange <lange.fabian@gmail.com>
Date:   2015-12-13T11:04:59Z

    FELIX-5135: Synchronize DirectoryWatcher Properties with FileInstall.

----
","14/Dec/15 16:35;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	A	gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/AbstractParserTest.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
Committed r1719953
","14/Dec/15 17:28;githubbot;Github user CodingFabian closed the pull request at:

    https://github.com/apache/felix/pull/45
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when deploying an OBR Resource already present in the runtime,FELIX-5112,12915013,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,skahmann,skahmann,20/Nov/15 22:34,08/Dec/15 18:49,13/Mar/19 22:56,08/Dec/15 18:49,bundlerepository-2.0.6,,,,bundlerepository-2.0.8,,Bundle Repository (OBR),,,0,,,,,,"When using OBR to deploy a bundle that is already present in the runtime, there is a ClassCastException:

{code}
java.lang.ClassCastException: org.apache.felix.bundlerepository.impl.LazyLocalResourceImpl cannot be cast to org.apache.felix.bundlerepository.impl.LocalResourceImpl
	at org.apache.felix.bundlerepository.impl.ResolverImpl.findUpdatableLocalResource(ResolverImpl.java:703)
	at org.apache.felix.bundlerepository.impl.ResolverImpl.deploy(ResolverImpl.java:569)
	at org.apache.karaf.obr.command.ObrCommandSupport.doDeploy(ObrCommandSupport.java:168)
	at org.apache.karaf.obr.command.StartCommand.doExecute(StartCommand.java:38)
	at org.apache.karaf.obr.command.ObrCommandSupport.execute(ObrCommandSupport.java:58)
	at org.apache.karaf.shell.impl.action.command.ActionCommand.execute(ActionCommand.java:83)
	at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:67)
	at org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:87)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:480)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:406)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:182)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:119)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:94)
	at org.apache.karaf.shell.impl.console.HeadlessSessionImpl.execute(HeadlessSessionImpl.java:90)
{code}",,,,,,,,,,,,,,,,,,,,,21/Nov/15 00:44;skahmann;fix_local_resource_resolver.diff;https://issues.apache.org/jira/secure/attachment/12773627/fix_local_resource_resolver.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2015-12-01 15:46:58.903,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Dec 08 18:49:49 UTC 2015,,,,,,0|i2oqe7:,9223372036854775807,,,,,,,,20/Nov/15 22:37;skahmann;[This|https://github.com/apache/felix/blob/trunk/bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/ResolverImpl.java#L703] cast is unsafe because the local resources are actually LazyLocalResourceImpl. It may be a better design to create an interface for a LocalResource that has the getBundle method (and any other) required from local resources.,21/Nov/15 00:44;skahmann;Patch attached.,21/Nov/15 00:44;skahmann;patch file,24/Nov/15 16:12;skahmann;I'm much more familiar with git so here's a PR: https://github.com/apache/felix/pull/42,01/Dec/15 15:46;bosschaert;An updated pull request has been provided here: https://github.com/apache/felix/pull/44,"08/Dec/15 18:49;bosschaert;Thanks for the patches, [~skahmann]! I've commited them as separate commits:

http://svn.apache.org/viewvc?view=revision&revision=1718668
http://svn.apache.org/viewvc?view=revision&revision=1718669
http://svn.apache.org/viewvc?view=revision&revision=1718670
http://svn.apache.org/viewvc?view=revision&revision=1718671
http://svn.apache.org/viewvc?view=revision&revision=1718672
http://svn.apache.org/viewvc?view=revision&revision=1718674",,,,,,,,,,,,,,,,,,,,,,,,,,
Coordinator should provide osgi.service capability,FELIX-5065,12903001,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,bosschaert,bosschaert,07/Oct/15 14:01,04/Nov/15 08:31,13/Mar/19 22:56,04/Nov/15 06:48,coordinator-1.0.0,,,,coordinator-1.0.2,,Coordinator Service,,,0,,,,,,"The OSGi specs define an osgi.service capability that should be defined by bundles that provide a service. The coordinator service should provide this capability. It should be like this:

{code}Provide-Capability: osgi.service; objectClass:List<String>=org.osgi.service.coordinator.Coordinator; uses:=org.osgi.service.coordinator{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-11-04 06:48:26.269,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Nov 04 08:31:54 UTC 2015,,,,,,0|i2movj:,9223372036854775807,,,,,,,,04/Nov/15 06:48;cziegeler;[~bosschaert] I've added the capability in rev 1712481. Could you please verify? ,"04/Nov/15 08:31;bosschaert;Looks good to me, thanks [~cziegeler]!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-bundle-plugin includes tests dependencies in package analysis,FELIX-5062,12902384,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,radu.cotescu,radu.cotescu,05/Oct/15 09:05,27/Oct/15 08:50,13/Mar/19 22:56,27/Oct/15 07:13,maven-bundle-plugin-3.0.0,,,,maven-bundle-plugin-3.0.1,,Maven Bundle Plugin,,,0,,,,,,"It appears that version 3.0.0 of the {{maven-bundle-plugin}} includes test dependencies in its package analysis:

{noformat}
[INFO] --- maven-bundle-plugin:3.0.0:bundle (default-bundle) @ org.apache.sling.scripting.javascript ---
[WARNING] Bundle org.apache.sling:org.apache.sling.scripting.javascript:bundle:2.0.25-SNAPSHOT : Split package, multiple jars provide the same package:org/mozilla/javascript/debug
Use Import/Export Package directive -split-package:=(merge-first|merge-last|error|first) to get rid of this warning
Package found in   [Jar:rhino, Jar:js]
Class path         [Jar:., Jar:org.apache.sling.api, Jar:org.apache.sling.scripting.api, Jar:org.apache.sling.scripting.core, Jar:org.apache.sling.jcr.resource, Jar:org.apache.sling.commons.classloader, Jar:org.apache.sling.commons.json, Jar:org.apache.sling.commons.osgi, Jar:org.osgi.core, Jar:org.osgi.compendium, Jar:jcr, Jar:servlet-api, Jar:org.apache.felix.scr.annotations, Jar:rhino, Jar:slf4j-api, Jar:commons-collections, Jar:commons-io, Jar:org.apache.sling.commons.testing, Jar:org.apache.sling.jcr.api, Jar:jackrabbit-api, Jar:jackrabbit-jcr-commons, Jar:jackrabbit-core, Jar:concurrent, Jar:commons-dbcp, Jar:commons-pool, Jar:jackrabbit-spi-commons, Jar:jackrabbit-spi, Jar:tika-parsers, Jar:tika-core, Jar:commons-compress, Jar:pdfbox, Jar:fontbox, Jar:jempbox, Jar:bcmail-jdk15, Jar:bcprov-jdk15, Jar:poi, Jar:poi-scratchpad, Jar:poi-ooxml, Jar:poi-ooxml-schemas, Jar:xmlbeans, Jar:dom4j, Jar:geronimo-stax-api_1.0_spec, Jar:tagsoup, Jar:asm, Jar:metadata-extractor, Jar:boilerpipe, Jar:rome, Jar:jdom, Jar:netcdf, Jar:jcl-over-slf4j, Jar:lucene-core, Jar:derby, Jar:org.apache.sling.adapter, Jar:js, Jar:commons-httpclient, Jar:commons-codec, Jar:slf4j-simple, Jar:junit, Jar:hamcrest-core, Jar:jmock-junit4, Jar:jmock, Jar:hamcrest-library, Jar:junit-dep, Jar:powermock-module-junit4, Jar:powermock-module-junit4-common, Jar:powermock-core, Jar:javassist, Jar:powermock-reflect, Jar:objenesis, Jar:powermock-api-mockito, Jar:mockito-all, Jar:powermock-api-support, Jar:bndlib]
{noformat}

In this case {{js.jar}} is a transitive dependency of a testing dependency:
{noformat}
<dependency>
    <groupId>org.apache.sling</groupId>
    <artifactId>org.apache.sling.commons.testing</artifactId>
    <version>2.0.16</version>
    <scope>test</scope>
</dependency>
{noformat}


For more details check the pom from https://github.com/apache/sling/blob/0faf720a105fb26ba6d02c476f9674830b06262b/bundles/scripting/javascript/pom.xml.",,,,,,,,,,,,,,,SLING-5196,SLING-5080,,,,,26/Oct/15 15:46;jsedding;FELIX-5062-integration-test.patch;https://issues.apache.org/jira/secure/attachment/12768745/FELIX-5062-integration-test.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2015-10-26 15:46:40.543,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Oct 27 08:50:25 UTC 2015,,,,,,0|i2ml2v:,9223372036854775807,,,,,,,,26/Oct/15 15:46;jsedding;The patch adds an integration test illustrating the problem introduced with the update to bnd 3.0.0. The scenario is derived from SLING-5196.,"26/Oct/15 17:27;cziegeler;This is introduced by the changes of FELIX-3565, in the method BundlePlugin#getClasspath, the following check:
                if ( !Artifact.SCOPE_TEST.equals( artifact.getScope() ) )
                {
                    inscope.add( artifact );
                }
has been removed, which causes all test artifacts to be added to the classpath

[~gnt] WDYT, can we add this check back in?","27/Oct/15 07:13;cziegeler;Thanks for your test case, Julian. I've added it to the test base.
I've fixed the issue by readding the check if the dependent artifact has scope test. If it has test scope, it's excluded",27/Oct/15 08:50;jsedding;Thanks for the quick fix!,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cd refuses to leave initial directory ,FELIX-4969,12846741,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,djencks,bmargulies,bmargulies,22/Jul/15 02:20,24/Oct/15 11:47,13/Mar/19 22:56,21/Aug/15 23:13,gogo.command-0.12.0,,,,gogo.command-0.16.0,,Gogo Command,,,0,,,,,,"Actually observed in gogo command 0.14.0.

The implementation of the cd command in Files.java won't permit an absolute pathname with ordinary syntax.  If I type extra slashes, it stops complaining -- but it also doesn't change the directory.

{noformat}
basis-osgi> cd /tmp
gogo: IOException: Directory does not exist
basis-osgi>

basis-osgi> cd //tmp
Name                 gogo
Parent               /Users/benson/x/rosette-osgi
CanonicalPath        /Users/benson/x/rosette-osgi/gogo
Path                 /Users/benson/x/rosette-osgi/gogo
ParentFile           /Users/benson/x/rosette-osgi
AbsolutePath         /Users/benson/x/rosette-osgi/gogo
AbsoluteFile         /Users/benson/x/rosette-osgi/gogo
CanonicalFile        /Users/benson/x/rosette-osgi/gogo
TotalSpace           999334871040
FreeSpace            247179890688
UsableSpace          246917746688
{noformat}

It's also awfully noisy.

A patch will be forthcoming to the refusal.



",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-07-22 12:44:28.596,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Oct 24 11:47:45 UTC 2015,,,,,,0|i2hj2n:,9223372036854775807,,,,,,,,"22/Jul/15 12:44;githubbot;GitHub user bimargulies opened a pull request:

    https://github.com/apache/felix/pull/29

    FELIX-4969: use the URI class for cd

    to handle absolute pathnames.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bimargulies/felix felix-4969-cwd

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/29.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #29
    
----
commit d33087d2f32ec0ef3685cb7e096f56ea745bc783
Author: Benson Margulies <benson@basistech.com>
Date:   2015-07-22T12:42:59Z

    FELIX-4969: use the URI class to handle resolution of absolute or relative pathnames in 'cd'.

----
","21/Aug/15 23:13;djencks;I applied the patch from github and committed in r1697070.  I couldn't figure out how to use git to merge, perhaps because the felix tree has changed so much recently.  I think you will need to close the github pull request.","24/Oct/15 11:47;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/29
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service already unregistered exception from HttpServicePlugin,FELIX-4645,12742426,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,arjans,arjans,18/Sep/14 11:30,02/Oct/15 06:44,13/Mar/19 22:56,02/Oct/15 06:44,,,,,http.jetty-3.1.0,,HTTP Service,,,0,,,,,,"Running into the following stacktrace after the Felix target received an update from its Apache ACE server (stopunaffectedbundles is set to true)

http.jetty 2.2.2 bundle

{code}
2014-09-17 20:19:34.973:WARN:oejs.ServletHolder:
java.lang.IllegalStateException: Service already unregistered.
        at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:123)
        at org.apache.felix.http.base.internal.handler.HttpServicePlugin.unregister(HttpServicePlugin.java:189)
        at org.apache.felix.http.base.internal.HttpServiceController.unregister(HttpServiceController.java:153)
        at org.apache.felix.http.base.internal.DispatcherServlet.destroy(DispatcherServlet.java:54)
        at org.eclipse.jetty.servlet.ServletHolder.destroyInstance(ServletHolder.java:344)
        at org.eclipse.jetty.servlet.ServletHolder.doStop(ServletHolder.java:317)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
        at org.eclipse.jetty.servlet.ServletHandler.doStop(ServletHandler.java:204)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:107)
        at org.eclipse.jetty.server.session.SessionHandler.doStop(SessionHandler.java:132)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:107)
        at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:777)
        at org.eclipse.jetty.servlet.ServletContextHandler.doStop(ServletContextHandler.java:149)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStop(HandlerCollection.java:250)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:107)
        at org.eclipse.jetty.server.Server.doStop(Server.java:342)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
        at org.apache.felix.http.jetty.internal.JettyService.stopJetty(JettyService.java:228)
        at org.apache.felix.http.jetty.internal.JettyService.access$100(JettyService.java:72)
        at org.apache.felix.http.jetty.internal.JettyService$3.doExecute(JettyService.java:169)
        at org.apache.felix.http.jetty.internal.JettyService$JettyOperation.call(JettyService.java:792)
        at org.apache.felix.http.jetty.internal.JettyService$JettyOperation.call(JettyService.java:783)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
2014-09-17 20:19:34.974:INFO:oejsh.ContextHandler:stopped o.e.j.s.ServletContextHandler{/,null}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-09-18 12:58:05.834,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Sep 18 12:58:05 UTC 2014,,,,,,0|i207dr:,9223372036854775807,,,,,,,,18/Sep/14 12:58;bramk;I think it is a race conditions that happens servlets deregister in concurrence with the HttpService asynchronously shutting down. That is something likely to happen in your scenario and I also saw this trace frequently in integration tests where bundles are stopped/started all the time. Upgrading to 2.3.0 solved it for me.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestDispatchTest Failure,FELIX-4744,12764348,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,kfreidank,kfreidank,31/Dec/14 04:32,02/Oct/15 06:43,13/Mar/19 22:56,02/Oct/15 06:43,,,,,http.base-3.0.0,http.jetty-3.1.0,HTTP Service,,,0,,,,,,"After building the plugins, the build of the bundle fails during the integrated http tests.  There seems to be an added ctrl-M returned from this line in the test RequestDispatchTest::testDispatchForwardToAbsoluteURIOk()
        assertContent(""FORWARD\n"", createURL(""/test/foo?bar=qux&quu""));

BUILD COMMAND
mvn -Dpackaging=bundle install

FAILURE OUTPUT
...prior tests passing, then
Running org.apache.felix.http.itest.RequestDispatchTest
37237 [main] INFO org.ops4j.pax.exam.spi.DefaultExamSystem - Pax Exam System (Version: 2.6.0) created.
37303 [main] INFO org.ops4j.exec.DefaultJavaRunner - DefaultJavaRunner completed successfully
...a few of theses 
39308 [main] INFO org.ops4j.exec.DefaultJavaRunner - Platform has been shutdown.
39347 [main] INFO org.ops4j.exec.DefaultJavaRunner - DefaultJavaRunner completed successfully
...then the failure
45428 [main] INFO org.ops4j.exec.DefaultJavaRunner - Platform has been shutdown.
45464 [main] INFO org.ops4j.exec.DefaultJavaRunner - DefaultJavaRunner completed successfully

45838 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.link : downloading...
45838 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.link : 76805 bytes @ [ 76805kBps ]
45869 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.rbc.link : downloading...
45869 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.rbc.link : 46032 bytes @ [ 46032kBps ]
45885 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.inject.link : downloading...
45885 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.inject.link : 5472 bytes @ [ 5472kBps ]
45885 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.extender.service.link : downloading...
45885 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.extender.service.link : 13016 bytes @ [ 13016kBps ]
45900 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.osgi.compendium.link : downloading...
45900 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.osgi.compendium.link : 614152 bytes @ [ 614152kBps ]
45916 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.logging.api.link : downloading...
45916 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.logging.api.link : 96728 bytes @ [ 96728kBps ]
45932 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.base.link : downloading...
45932 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.base.link : 97938 bytes @ [ 97938kBps ]
45932 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.core.link : downloading...
45932 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.core.link : 8749 bytes @ [ 8749kBps ]
45947 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.extender.link : downloading...
45947 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.extender.link : 21766 bytes @ [ 21766kBps ]
45963 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.framework.link : downloading...
45963 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.framework.link : 12055 bytes @ [ 12055kBps ]
45963 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.lifecycle.link : downloading...
45963 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.swissbox.lifecycle.link : 6496 bytes @ [ 6496kBps ]
45978 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.apache.geronimo.specs.atinject.link : downloading...
45978 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.apache.geronimo.specs.atinject.link : 10034 bytes @ [ 10034kBps ]
45978 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.slf4j/slf4j-api/1.6.5 : downloading...
45978 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.slf4j/slf4j-api/1.6.5 : 25962 bytes @ [ 25962kBps ]
45994 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:ch.qos.logback/logback-core/1.0.6 : downloading...
45994 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:ch.qos.logback/logback-core/1.0.6 : 349706 bytes @ [ 349706kBps ]
46010 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:ch.qos.logback/logback-classic/1.0.6 : downloading...
46010 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:ch.qos.logback/logback-classic/1.0.6 : 251784 bytes @ [ 251784kBps ]
46041 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.http.api/2.3.3-SNAPSHOT : downloading...
46041 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.http.api/2.3.3-SNAPSHOT : 11098 bytes @ [ 11098kBps ]
46056 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.http.servlet-api/1.0.2-SNAPSHOT : downloading...
46056 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.http.servlet-api/1.0.2-SNAPSHOT : 69442 bytes @ [ 69442kBps ]
46056 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.http.jetty/2.3.3-SNAPSHOT : downloading...
46072 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.http.jetty/2.3.3-SNAPSHOT : 1315550 bytes @ [ 1315550kBps ]
46088 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.configadmin/1.8.0 : downloading...
46088 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.felix/org.apache.felix.configadmin/1.8.0 : 116382 bytes @ [ 116382kBps ]
46103 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.junit/4.10_1 : downloading...
46103 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.junit/4.10_1 : 266728 bytes @ [ 266728kBps ]

46119 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.invoker.junit.link : downloading...
46119 [main] INFO org.ops4j.pax.exam.forked.provision.StreamUtils - link:classpath:META-INF/links/org.ops4j.pax.exam.invoker.junit.link : 10014 bytes @ [ 10014kBps ]
org.ops4j.pax.logging.pax-logging-api[org.ops4j.pax.logging.internal.Activator] : Enabling SLF4J API support.
org.ops4j.pax.logging.pax-logging-api[org.ops4j.pax.logging.internal.Activator] : Enabling Jakarta Commons Logging API support.
org.ops4j.pax.logging.pax-logging-api[org.ops4j.pax.logging.internal.Activator] : Enabling Log4J API support.
org.ops4j.pax.logging.pax-logging-api[org.ops4j.pax.logging.internal.Activator] : Enabling Avalon Logger API support.
org.ops4j.pax.logging.pax-logging-api[org.ops4j.pax.logging.internal.Activator] : Enabling JULI Logger API support.
[INFO] Started Jetty 8.1.14.v20131031 at port(s) HTTP:8080 on context path /
[INFO] Started Jetty 8.1.14.v20131031 at port(s) HTTP:8080 on context path /context
[ERROR] Exception while initializing Jetty.
java.lang.IllegalStateException: Invalid BundleContext.
        at org.apache.felix.framework.BundleContextImpl.checkValidity(BundleContextImpl.java:514)
        at org.apache.felix.framework.BundleContextImpl.getProperty(BundleContextImpl.java:84)
        at org.apache.felix.http.jetty.internal.JettyConfig.getProperty(JettyConfig.java:536)
        at org.apache.felix.http.jetty.internal.JettyConfig.getProperty(JettyConfig.java:288)
        at org.apache.felix.http.jetty.internal.JettyConfig.getIntProperty(JettyConfig.java:253)
        at org.apache.felix.http.jetty.internal.JettyConfig.getMaxFormSize(JettyConfig.java:304)
        at org.apache.felix.http.jetty.internal.JettyService.initializeJetty(JettyService.java:254)
        at org.apache.felix.http.jetty.internal.JettyService.startJetty(JettyService.java:197)
        at org.apache.felix.http.jetty.internal.JettyService.updated(JettyService.java:189)
        at org.apache.felix.http.jetty.internal.JettyManagedService$1.updated(JettyManagedService.java:44)
        at org.apache.felix.cm.impl.helper.ManagedServiceTracker.updateService(ManagedServiceTracker.java:148)
        at org.apache.felix.cm.impl.helper.ManagedServiceTracker.removeConfiguration(ManagedServiceTracker.java:89)
        at org.apache.felix.cm.impl.ConfigurationManager$DeleteConfiguration.run(ConfigurationManager.java:1818)
        at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:103)
        at java.lang.Thread.run(Thread.java:745)
[INFO] Started Jetty 8.1.14.v20131031 at port(s) HTTP:8080 on context path /

47641 [main] INFO org.ops4j.exec.DefaultJavaRunner - Platform has been shutdown.
Tests run: 5, Failures: 5, Errors: 0, Skipped: 0, Time elapsed: 10.406 sec <<< FAILURE!



SUREFIRE REPORTS
-------------------------------------------------------------------------------
Test set: org.apache.felix.http.itest.RequestDispatchTest
-------------------------------------------------------------------------------
Tests run: 5, Failures: 5, Errors: 0, Skipped: 0, Time elapsed: 10.406 sec <<< FAILURE!
testDispatchForwardToAbsoluteURIOk:org.apache.felix.http.itest.RequestDispatchTest.testDispatchForwardToAbsoluteURIOk:org.ops4j.pax.exam.forked.ForkedTestContainer@7bfb5(org.apache.felix.http.itest.RequestDispatchTest)  Time elapsed: 2.024 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<FORWARD[]
> but was:<FORWARD[
]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:188)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:214)
	at org.apache.felix.http.itest.RequestDispatchTest.testDispatchForwardToAbsoluteURIOk(RequestDispatchTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:70)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:37)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:136)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.invokeViaJUnit(JUnitProbeInvoker.java:124)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.findAndInvoke(JUnitProbeInvoker.java:94)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.call(JUnitProbeInvoker.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.ops4j.pax.swissbox.framework.RemoteFrameworkImpl.callService(RemoteFrameworkImpl.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)
	at sun.rmi.transport.Transport$1.run(Transport.java:177)
	at sun.rmi.transport.Transport$1.run(Transport.java:174)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:173)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:556)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

testDispatchForwardToRelativeURIOk:org.apache.felix.http.itest.RequestDispatchTest.testDispatchForwardToRelativeURIOk:org.ops4j.pax.exam.forked.ForkedTestContainer@7bfb5(org.apache.felix.http.itest.RequestDispatchTest)  Time elapsed: 2.025 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<FORWARD[]
> but was:<FORWARD[
]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:188)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:214)
	at org.apache.felix.http.itest.RequestDispatchTest.testDispatchForwardToRelativeURIOk(RequestDispatchTest.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:70)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:37)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:136)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.invokeViaJUnit(JUnitProbeInvoker.java:124)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.findAndInvoke(JUnitProbeInvoker.java:94)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.call(JUnitProbeInvoker.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.ops4j.pax.swissbox.framework.RemoteFrameworkImpl.callService(RemoteFrameworkImpl.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)
	at sun.rmi.transport.Transport$1.run(Transport.java:177)
	at sun.rmi.transport.Transport$1.run(Transport.java:174)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:173)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:556)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

testDispatchIncludeAbsoluteURIOk:org.apache.felix.http.itest.RequestDispatchTest.testDispatchIncludeAbsoluteURIOk:org.ops4j.pax.exam.forked.ForkedTestContainer@7bfb5(org.apache.felix.http.itest.RequestDispatchTest)  Time elapsed: 2.031 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<BEFORE[
INCLUDE
AFTER]
> but was:<BEFORE[
INCLUDE
AFTER
]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:188)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:214)
	at org.apache.felix.http.itest.RequestDispatchTest.testDispatchIncludeAbsoluteURIOk(RequestDispatchTest.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:70)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:37)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:136)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.invokeViaJUnit(JUnitProbeInvoker.java:124)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.findAndInvoke(JUnitProbeInvoker.java:94)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.call(JUnitProbeInvoker.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.ops4j.pax.swissbox.framework.RemoteFrameworkImpl.callService(RemoteFrameworkImpl.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)
	at sun.rmi.transport.Transport$1.run(Transport.java:177)
	at sun.rmi.transport.Transport$1.run(Transport.java:174)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:173)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:556)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

testDispatchIncludeRelativeURIOk:org.apache.felix.http.itest.RequestDispatchTest.testDispatchIncludeRelativeURIOk:org.ops4j.pax.exam.forked.ForkedTestContainer@7bfb5(org.apache.felix.http.itest.RequestDispatchTest)  Time elapsed: 2.058 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<BEFORE[
INCLUDE
AFTER]
> but was:<BEFORE[
INCLUDE
AFTER
]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:188)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:214)
	at org.apache.felix.http.itest.RequestDispatchTest.testDispatchIncludeRelativeURIOk(RequestDispatchTest.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:70)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:37)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:136)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.invokeViaJUnit(JUnitProbeInvoker.java:124)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.findAndInvoke(JUnitProbeInvoker.java:94)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.call(JUnitProbeInvoker.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.ops4j.pax.swissbox.framework.RemoteFrameworkImpl.callService(RemoteFrameworkImpl.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)
	at sun.rmi.transport.Transport$1.run(Transport.java:177)
	at sun.rmi.transport.Transport$1.run(Transport.java:174)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:173)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:556)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

testDispatchOnNonRootContextPathOk:org.apache.felix.http.itest.RequestDispatchTest.testDispatchOnNonRootContextPathOk:org.ops4j.pax.exam.forked.ForkedTestContainer@7bfb5(org.apache.felix.http.itest.RequestDispatchTest)  Time elapsed: 2.212 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<FORWARD[]
> but was:<FORWARD[
]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:188)
	at org.apache.felix.http.itest.BaseIntegrationTest.assertContent(BaseIntegrationTest.java:214)
	at org.apache.felix.http.itest.RequestDispatchTest.doTestForwardAbsoluteURI(RequestDispatchTest.java:430)
	at org.apache.felix.http.itest.RequestDispatchTest.testDispatchOnNonRootContextPathOk(RequestDispatchTest.java:357)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:70)
	at org.ops4j.pax.exam.invoker.junit.internal.ContainerTestRunner.runChild(ContainerTestRunner.java:37)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:136)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.invokeViaJUnit(JUnitProbeInvoker.java:124)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.findAndInvoke(JUnitProbeInvoker.java:94)
	at org.ops4j.pax.exam.invoker.junit.internal.JUnitProbeInvoker.call(JUnitProbeInvoker.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.ops4j.pax.swissbox.framework.RemoteFrameworkImpl.callService(RemoteFrameworkImpl.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)
	at sun.rmi.transport.Transport$1.run(Transport.java:177)
	at sun.rmi.transport.Transport$1.run(Transport.java:174)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:173)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:556)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

","source:  trunk branch
git commit d591b70e9fe2f1441ee61776e49b94629f4c4f35

$ mvn -version
Apache Maven 3.2.5 (12a6b3acb947671f09b81f49094c53f426d8cea1; 2014-12-14T12:29:23-05:00)
Maven home: c:\tools\apache-maven-3.2.5
Java version: 1.7.0_71, vendor: Oracle Corporation
Java home: c:\tools\Java\jdk1.7.0_71\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows vista"", version: ""6.0"", arch: ""x86"", family: ""windows""

",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-09-26 00:07:51.594,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Sep 26 00:07:51 UTC 2015,,,,,,0|i23vhb:,9223372036854775807,,,,,,,,"26/Sep/15 00:07;srs;It does not seems that this is a problem anymore. I build using Java 1.7 on OSX and it's running the tests without failure. 

Do you know if this is still a problem in your environment?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updates in service ranking not picked up by filters,FELIX-4946,12842002,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,jajans,jajans,01/Jul/15 14:01,02/Oct/15 06:43,13/Mar/19 22:56,02/Oct/15 06:43,http.jetty-3.0.2,http-2.3.2,,,http.jetty-3.1.0,,HTTP Service,,,0,,,,,,"If I change the service ranking of a registered filter at runtime, it does not change the order in which the filter chain is executed. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-07-04 23:21:17.279,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Jul 04 23:21:17 UTC 2015,,,,,,0|i2gqmv:,9223372036854775807,,,,,,,,"04/Jul/15 23:21;cziegeler;[~jajans] I think this is fixed in current trunk, can you confirm this?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console Event plugin exception when sending event with property of type hex/base64,FELIX-5026,12861813,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,04/Sep/15 11:24,04/Sep/15 11:30,13/Mar/19 22:56,04/Sep/15 11:30,webconsole-event-plugin-1.1.2,,,,,,Web Console,,,0,,,,,,"base64/hex/sha1 types are basically unsupported by the java code, but the UI renders them as supported types:
{code}
java.lang.IllegalArgumentException: Unsupported type!
        at org.apache.felix.webconsole.plugins.event.internal.PropertiesEditorSupport.convert(PropertiesEditorSupport.java:90)
        at org.apache.felix.webconsole.plugins.event.internal.PropertiesEditorSupport.convertProperties(PropertiesEditorSupport.java:51)
        at org.apache.felix.webconsole.plugins.event.internal.PluginServlet.newEvent(PluginServlet.java:109)
        at org.apache.felix.webconsole.plugins.event.internal.PluginServlet.doPost(PluginServlet.java:121)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
        at org.apache.felix.webconsole.internal.WebConsolePluginAdapter.service(WebConsolePluginAdapter.java:216)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:567)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager$3.run(OsgiManager.java:465)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:461)
        at com.prosyst.mbs.impl.services.http.ServletProperties.service(ServletProperties.java:109)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Sep 04 11:30:22 UTC 2015,,,,,,0|i2jsd3:,9223372036854775807,,,,,,,,"04/Sep/15 11:30;v_valchev;fixed in svn r1701216

I've actually removed the hex/base64/sha1 support. It was a little weird to send hashes over event admin. If it is really a password hash, the event admin is not the a secure way to provide it to some other component(s).

Instead I've added support for 'byte array'. And it handles different formats of those byte arrays. All those variants are accepted:
""0, 03, 0xfa, #40""
""{10,23,32}""
""[30,33,33]""
""00:00:00:00""

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SCR Gogo commands outputs wrong infos when a component is unsatisfied because of missing configuration,FELIX-4857,12821862,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,djencks,magnet,magnet,17/Apr/15 12:35,30/Aug/15 05:23,13/Mar/19 22:56,30/Aug/15 05:11,scr-1.8.2,,,,scr-2.0.0,,Declarative Services (SCR),,,0,,,,,,"The Gogo scr:info command doesn't show when a DS component has Configuration.REQUIRE and is unsatisfied because the configuration is missing. Instead, it marks a reference as unsatisfied even though it is available and consumed elsewhere in the same bundle.

{noformat}
$ scr:info 0
ID: 0
Name: my-component
Bundle: my-bundle (56)
State: unsatisfied 
Default State: enabled
Activation: delayed
Configuration Policy: require
Activate Method: activate (declared in the descriptor)
Deactivate Method: deactivate
Modified Method: -
Configuration Pid: my-component
Services: io.lambdacube.service.MyService
Service Type: service
Reference: JsonMapper
    Satisfied: unsatisfied
    Service Name: io.lambdacube.core.json.JsonMapper
    Multiple: single
    Optional: mandatory
    Policy: static
    Policy option: reluctant
    (unbound)
Properties:
    component.id = 0
    component.name = my-component
{noformat}

In that example, JsonMapper is actually available. Instead, the scr:info command should state it's unsatisfied because the configuration entry is missing.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-04-17 14:23:45.975,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Aug 30 05:11:54 UTC 2015,,,,,,0|i2degv:,9223372036854775807,,,,,,,,"17/Apr/15 14:23;djencks;This should not be a problem in trunk where the commands are based on the new DTOs.  First we show the ComponentDescriptionDTO, then any ComponentConfigurationDTOs.  In this case, there are no ComponentConfigurationDTOs (missing configuration) so you'll only see the ComponentDescriptionDTO info.

I'd appreciate it if everyone :-) would try out trunk and, in this case, look at the output from the gogo command and (at least) criticize it's formatting.","17/Apr/15 14:49;magnet;Great. By the way does trunk implement RFC 190 entirely? (or has it become Compendium R6 already? I can't find any information on this).

Anyway I'll try to have a look in the upcoming days. Thanks!",17/Apr/15 15:06;djencks;I think trunk is a complete implementation of DS 1.3/rfc 190.  However it's hard to be sure without the CTS :-).  User testing would be fabulous….,"20/Apr/15 09:17;magnet;I don't know what is the right place to discuss this, but I've given a try to trunk. It works fine for current features, but I was unable to get config objects (using Annotation classes) to work. SCR fails by stating that ""activate method [activate] not found; Component will fail"". The activate method contains my config annotation object as stated in the RFC 190 (as far as I know).","20/Apr/15 17:18;djencks;Hi Simon, maybe the dev list would be better?  although I'm having some trouble receiving all messages lately ( I didn't see this one for instance).

Are you sure the namespace version is 1.3?  It should be if you are using bnd trunk, which is needed for the rfc 190 features.  There are some unit tests where this works, e.g. org.apache.felix.scr.integration.AnnoConfigTest","20/Apr/15 18:45;magnet;Alright, I'll keep you updated on the dev ML. You are right I forgot to update the namespace.I will try again asap. Thanks.",30/Aug/15 05:11;djencks;This is fixed in the recent scr 2 release.,,,,,,,,,,,,,,,,,,,,,,,,,
Empty string value for property causes build failure,FELIX-4691,12754758,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,Mikael Åsberg,Mikael Åsberg,12/Nov/14 13:59,13/Jul/15 14:53,13/Mar/19 22:56,13/Jul/15 14:53,maven-bundle-plugin-2.5.3,,,,maven-bundle-plugin-3.0.0,,Maven Bundle Plugin,,,2,,,,,,"Hi, when I upgraded from maven-bundle-plugin version 2.4.0 to version 2.5.3, I noticed a build failure when I performed ""mvn clean install"" on one of my OSGi services. The error is related to a service property of type String where the value has been set to empty string:

@Property (value = """")
private static final String MY_PROPERTY = ""foo"";

The error is:
[INFO] --- maven-bundle-plugin:2.5.3:bundle (default-bundle) @ servicepropertytest ---
[ERROR] Bundle org.mindcooler:servicepropertytest:bundle:0.1.0 : No value after '=' sign for attribute foo
[ERROR] Error(s) found in bundle configuration

I see the same problem versions 2.5.2, 2.5.1, and 2.5.0 of maven-bundle-plugin, but if I go back to version 2.4.0 of maven-bundle-plugin, but change nothing else, the problem disappears.

Have I found a problem here or is my code incorrect?

I have attached a minimal sample Maven project",,,,,,,,,,,,,,,,,,,,,12/Nov/14 14:03;Mikael Åsberg;servicepropertytest.zip;https://issues.apache.org/jira/secure/attachment/12681069/servicepropertytest.zip,,,,,1.0,,,,,,,,,,,,,,,,,,,2015-01-27 02:46:30.56,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jul 13 14:53:22 UTC 2015,,,,,,0|i22a53:,9223372036854775807,,,,,,,,"12/Nov/14 14:03;Mikael Åsberg;Minimal Maven sample project illustrating the failure. See it by issuing ""mvn clean install"", change to maven-bundle-plugin version 2.4.0 and ""mvn clean install"" does not fail.","27/Jan/15 02:46;talios;Has anyone happened to look at this ticket at all? I seem to see this error occurring on one of my projects - but ONLY on the builder server, and not on my local builds - very strange.",10/Jul/15 08:02;gnt;This is a bug in bndlib.,10/Jul/15 08:31;gnt;See https://github.com/bndtools/bnd/pull/995,13/Jul/15 14:53;gnt;http://svn.apache.org/viewvc?view=revision&revision=1690579,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalArgumentException: Invalid syntax for version: 0.1-SNAPSHOT,FELIX-4874,12826758,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,amichai,amichai,02/May/15 21:38,09/Jul/15 20:03,13/Mar/19 22:56,09/Jul/15 20:03,maven-bundle-plugin-2.5.4,,,,maven-bundle-plugin-3.0.0,,Maven Bundle Plugin,,,4,,,,,,"Started getting this exception in 2.5.4 (doesn't happen in 2.5.3 and earlier, where everything builds and runs just fine):

java.lang.IllegalArgumentException: Invalid syntax for version: 0.1-SNAPSHOT
        at aQute.bnd.version.Version.<init>(Version.java:46)
        at aQute.bnd.osgi.Analyzer.augmentExports(Analyzer.java:1711)
        at aQute.bnd.osgi.Analyzer.analyze(Analyzer.java:229)
        at aQute.bnd.osgi.Builder.analyze(Builder.java:352)
        at aQute.bnd.osgi.Analyzer.calcManifest(Analyzer.java:618)
        at aQute.bnd.osgi.Builder.build(Builder.java:81)
        at org.apache.felix.bundleplugin.BundlePlugin.buildOSGiBundle(BundlePlugin.java:632)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:351)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:268)
        at org.apache.felix.bundleplugin.BundlePlugin.execute(BundlePlugin.java:259)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions(MojoExecutor.java:365)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:199)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:497)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)",,,,,,,,,,,,,,,,,,FELIX-4956,,,24/May/15 14:37;keal_;maven-bundle-plugin-fail.tgz;https://issues.apache.org/jira/secure/attachment/12735071/maven-bundle-plugin-fail.tgz,,,,,1.0,,,,,,,,,,,,,,,,,,,2015-05-15 08:53:48.631,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Jul 09 20:03:17 UTC 2015,,,,,,0|i2e7uf:,9223372036854775807,,,,,,,,15/May/15 08:53;cziegeler;[~amichai] Thanks for reporting; Could you please attach a simple test project?,"24/May/15 14:37;keal_;In the attached file there is an example that reproduces the error

The error occurs when using the tag
{code:xml}
   <Export-Package>com.test;version=${project.version}</ Export-Package>
{code}
When the version of the project is SNAPSHOT","09/Jul/15 13:59;gnt;This seems to be a regression in bndlib 2.4.0, I'll investigate a bit.",09/Jul/15 20:03;gnt;Fixed with the upgrade to latest bndlib,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Filtering snapshots is failing if version qualifier contains more than ""SNAPSHOT"".",FELIX-4823,12779347,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jdelaire,jdelaire,04/Mar/15 10:11,09/Jul/15 20:02,13/Mar/19 22:56,09/Jul/15 20:02,maven-bundle-plugin-2.5.3,,,,maven-bundle-plugin-3.0.0,,Maven Bundle Plugin,,,0,,,,,,"AbstractBaselinePlugin.java#519

private void filterSnapshots( List<ArtifactVersion> versions )
{
    for ( Iterator<ArtifactVersion> versionIterator = versions.iterator(); versionIterator.hasNext(); )
    {
        ArtifactVersion version = versionIterator.next();
        if ( ""SNAPSHOT"".equals( version.getQualifier() ) )
                versionIterator.remove();
        }
    }
}    

endWith should be used instead of equals.

  if (  version.getQualifier().endWith(""SNAPSHOT"") )",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-07-09 20:02:14.242,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Jul 09 20:02:14 UTC 2015,,,,,,0|i26c87:,9223372036854775807,,,,,,,,09/Jul/15 20:02;gnt;http://svn.apache.org/r1690156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EventListenerHooks are not called,FELIX-4903,12832080,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,22/May/15 07:21,22/May/15 07:26,13/Mar/19 22:56,22/May/15 07:26,,,,,connect-0.1.0,,Connect,,,0,,,,,,See https://groups.google.com/forum/#!topic/pojosr-discuss/saPAJS25s2Q,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri May 22 07:26:37 UTC 2015,,,,,,0|i2f3d3:,9223372036854775807,,,,,,,,22/May/15 07:26;gnt;https://github.com/apache/felix/commit/b1a8f2709e2ffbed4fe5caed421c3fb1bdc3e622,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Embed missing org.osgi.resource package,FELIX-4901,12832078,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,22/May/15 07:20,22/May/15 07:23,13/Mar/19 22:56,22/May/15 07:23,,,,,connect-0.1.0,,Connect,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri May 22 07:23:23 UTC 2015,,,,,,0|i2f3cn:,9223372036854775807,,,,,,,,"22/May/15 07:23;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	connect/pom.xml
Committed r1681014
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in maven-bundle-plugin,FELIX-4892,12831022,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,bosschaert,bosschaert,19/May/15 14:11,20/May/15 07:31,13/Mar/19 22:56,19/May/15 14:27,maven-bundle-plugin-2.5.4,,,,maven-bundle-plugin-3.0.0,,Maven Bundle Plugin,,,0,,,,,,"I am getting an NPE with the (as yet unreleased version of) the maven-bundle-plugin:

{code}[ERROR] Failed to execute goal org.apache.felix:maven-bundle-plugin:2.5.5-SNAPSHOT:baseline (baseline) on project myproject: Execution baseline of goal org.apache.felix:maven-bundle-plugin:2.5.5-SNAPSHOT:baseline failed. NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.felix:maven-bundle-plugin:2.5.5-SNAPSHOT:baseline (baseline) on project myproject: Execution baseline of goal org.apache.felix:maven-bundle-plugin:2.5.5-SNAPSHOT:baseline failed.
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:225)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.PluginExecutionException: Execution baseline of goal org.apache.felix:maven-bundle-plugin:2.5.5-SNAPSHOT:baseline failed.
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:110)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	... 19 more
Caused by: java.lang.NullPointerException
	at org.apache.felix.bundleplugin.baseline.AbstractBaselinePlugin.execute(AbstractBaselinePlugin.java:164)
	at org.apache.felix.bundleplugin.baseline.AbstractBaselinePlugin.execute(AbstractBaselinePlugin.java:136)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	... 20 more{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-05-20 07:25:40.001,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed May 20 07:31:02 UTC 2015,,,,,,0|i2exfr:,9223372036854775807,,,,,,,,19/May/15 14:27;bosschaert;Fixed in http://svn.apache.org/viewvc?view=revision&revision=1680303,20/May/15 07:25;kwin;I guess this was caused by the improvement from FELIX-4666. Therefore version 2.5.4 is also affected. [~bosschaert] Can you adjust the affected version?,20/May/15 07:31;bosschaert;[~kwin] you are correct. I have updated the version info. Thanks for pointing this out.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error parsing the default gosh_profile.,FELIX-4697,12755071,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,jajans,jajans,13/Nov/14 14:34,19/Jan/15 19:11,13/Mar/19 22:56,19/Jan/15 19:11,gogo.runtime-0.14.0,,,,,,Gogo Runtime,,,2,,,,,,"It appears that the implementation of FELIX-4671 has caused an unexpected side-effect in the parsing of the default {{gosh_profile}}. More specifically: the Tokenizer now bails out on the following expression:
{code}
    addcommand system (((${.context} bundles) 0) loadclass java.lang.System)
{code}
The reason for this is that the {{((}} makes the Tokenizer believe that it should keep parsing until {{))}} is found, which isn't the case in the above situation. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-11-13 16:10:05.111,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jan 19 19:11:46 UTC 2015,,,,,,0|i22c0n:,9223372036854775807,,,,,,,,13/Nov/14 16:10;marrs;Should we re-open that issue and figure out a different way of implementing it?,"23/Nov/14 10:50;donarus;Yesterday I got into the same issue. And it takes me too much time to find the bug and then to find this bug report.
 
So first, I'd like to add some exception message output because google will index it sooner or later :)

{noformat}
bundle://5.0:1/gosh_profile:17.22: EOFException: unexpected EOT looking for matching ')'
java.io.EOFException: unexpected EOT looking for matching ')'
	at org.apache.felix.gogo.runtime.Closure.setLocation(Closure.java:101)
	at org.apache.felix.gogo.runtime.Closure.<init>(Closure.java:61)
	at org.apache.felix.gogo.runtime.Closure.eval(Closure.java:277)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:339)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:179)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:116)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)
	at org.apache.felix.gogo.shell.Shell.source(Shell.java:192)
	at org.apache.felix.gogo.shell.Shell.gosh(Shell.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.felix.gogo.runtime.Reflective.invoke(Reflective.java:137)
	at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:82)
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:179)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:116)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)
	at org.apache.felix.gogo.shell.Activator.run(Activator.java:75)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.felix.gogo.runtime.EOFError: unexpected EOT looking for matching ')'
	at org.apache.felix.gogo.runtime.Tokenizer.group(Tokenizer.java:328)
	at org.apache.felix.gogo.runtime.Tokenizer.next(Tokenizer.java:179)
	at org.apache.felix.gogo.runtime.Parser.command(Parser.java:109)
	at org.apache.felix.gogo.runtime.Parser.pipeline(Parser.java:68)
	at org.apache.felix.gogo.runtime.Parser.program(Parser.java:44)
	at org.apache.felix.gogo.runtime.Closure.<init>(Closure.java:57)
	... 22 more
{noformat}

Second, why not use $${} ... I suggest to use $$ because $$ is currently an illegal combination so it shouldn't break anythink and it is also backward compatible.",26/Dec/14 04:54;cvgaviao;I got the  EOFException: unexpected EOT looking for matching ')' when tried 0.14.0 with Equinox Luna. I had to comeback to 0.12.1 then. ,08/Jan/15 22:57;mailings@hupie.com;Just had it too. Have to revert back to 0.12.1,"15/Jan/15 17:27;rickhall;If this can't be fixed in a timely manner, perhaps FELIX-4671 should be rolled back and we should re-release?",19/Jan/15 19:11;jajans;Reverted the code from FELIX-4671 in rev #1653078.,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console has a non-optional dependency on commons fileupload,FELIX-4044,12645807,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,tdiesler,tdiesler,02/May/13 13:22,29/Dec/14 14:16,13/Mar/19 22:56,29/Dec/14 14:16,webconsole-4.0.0,,,,,,Web Console,,,0,,,,,,"The documentation suggests that the full variant contains file upload

{code}
Caused by: org.osgi.service.resolver.ResolutionException: Unable to resolve HostBundleRevision[org.apache.felix.webconsole:4.0.0]: missing requirement XPackageRequirement[dirs={filter=(&(osgi.wiring.package=org.apache.commons.fileupload)(&(version>=1.2.0)(!(version>=2.0.0))))},[org.apache.felix.webconsole:4.0.0]]
	at org.apache.felix.resolver.Candidates.populateResource(Candidates.java:285)
	at org.apache.felix.resolver.Candidates.populate(Candidates.java:153)
	at org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:100)
	at org.jboss.osgi.resolver.felix.FelixResolver.resolve(FelixResolver.java:54)
	at org.jboss.osgi.framework.internal.ResolverImpl.resolveInternal(ResolverImpl.java:177)
	at org.jboss.osgi.framework.internal.ResolverImpl.resolveAndApply(ResolverImpl.java:125)
	at org.jboss.osgi.framework.spi.BootstrapBundlesResolve.start(BootstrapBundlesResolve.java:107)
{code}",,,,,,,,,,,,,FELIX-3778,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-05-06 12:06:24.043,,,no_permission,,,,,,,,,,,,326166,,,Mon May 06 12:10:33 UTC 2013,,,,,,0|i1k9qv:,326511,,,,,,,,"06/May/13 12:06;fmeschbe;Thanks for reporting.

Web Console 4.0.0 does not have a ""full"" profile. We realized that such a profile would be helpful and recreated it as part of FELIX-3778.

The current trunk build already provides this fill profile, a release is imminent.

Thus I would think this issue could be resolved as a duplicate. Do you agree ?","06/May/13 12:10;tdiesler;Sure, if its fixed its fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WovenClassImpl is still mutable after Transform.,FELIX-4724,12759948,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bobpaulin,bobpaulin,bobpaulin,06/Dec/14 05:46,06/Dec/14 05:55,13/Mar/19 22:56,06/Dec/14 05:55,,,,,,,Framework,,,0,,,,,,The transformed bytes and class imports should not be mutable following the classes transform operation.,,,,,,,,,,,,,,,FELIX-4582,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Dec 06 05:55:05 UTC 2014,,,,,,0|i2357z:,9223372036854775807,,,,,,,,06/Dec/14 05:54;bobpaulin;Separated transform and define behavior so that each can update WovenClass state correctly.,06/Dec/14 05:55;bobpaulin;Fixed with rev 164495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ImmutableList should throw UnsupportedOperationException for additional methods.,FELIX-4723,12759947,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bobpaulin,bobpaulin,bobpaulin,06/Dec/14 05:40,06/Dec/14 05:48,13/Mar/19 22:56,06/Dec/14 05:48,,,,,,,Framework,,,0,,,,,,Immutable Lists should not allow modification via the clear or retainAll operations.  Should throw UnsupportedOperationException in both cases.,,,,,,,,,,,,,,,FELIX-4582,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Dec 06 05:48:24 UTC 2014,,,,,,0|i2357r:,9223372036854775807,,,,,,,,06/Dec/14 05:48;bobpaulin;Fixed with rev 1643494,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow WovenClassListener to be used as a Hook,FELIX-4722,12759946,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bobpaulin,bobpaulin,bobpaulin,06/Dec/14 05:34,06/Dec/14 05:37,13/Mar/19 22:56,06/Dec/14 05:37,,,,,,,Framework,,,0,,,,,,Currently the WovenClassListeners are not functioning because the class is not setup to be a hook in the ServiceRegistry.  Adding the class to the list of Hook classes will allow it to be used just like the WeavingHook.,,,,,,,,,,,,,,,FELIX-4582,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Dec 06 05:37:23 UTC 2014,,,,,,0|i2357j:,9223372036854775807,,,,,,,,06/Dec/14 05:37;bobpaulin;Fixed with rev 1643493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Native Capabiliities throws Exception on Linux Kernel,FELIX-4721,12759944,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bobpaulin,bobpaulin,bobpaulin,06/Dec/14 05:06,06/Dec/14 05:17,13/Mar/19 22:56,06/Dec/14 05:17,,,,,,,Framework,,,0,,,,,,The Linux Kernel doesn't properly parse into a Version Object.  We should parse it into a proper version number before putting it in the version object.,Linux,,,,,,,,,,,,,,FELIX-4503,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Dec 06 05:17:42 UTC 2014,,,,,,0|i23573:,9223372036854775807,,,,,,,,"06/Dec/14 05:16;bobpaulin;Updated to convert linux kernel version to an osgi compliant version.  EG 2.6.32-431.3.1.el6.x86_64 becomes 2.6.32
",06/Dec/14 05:17;bobpaulin;Fixed with rev 1643492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException when doing a 'dm notavail' shell command.,FELIX-2955,12507595,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,marrs,marrs,18/May/11 11:30,26/Jun/14 08:22,13/Mar/19 22:56,18/May/11 14:37,dependencymanager-3.0.0,,,,,,Dependency Manager,,,0,,,,,,"Using the shell command sometimes gives an exception somewhat like this one:

osgi> dm notavail
java.lang.IllegalStateException: BundleContext is no longer valid
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.checkValid(BundleContextImpl.java:1003)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.getBundle(BundleContextImpl.java:151)
	at org.apache.felix.dm.impl.index.BundleContextInterceptorBase.getBundle(BundleContextInterceptorBase.java:61)
	at org.apache.felix.dm.shell.DMCommand$DependencyManagerSorter.compare(DMCommand.java:234)
	at java.util.Arrays.mergeSort(Arrays.java:1270)
	at java.util.Arrays.mergeSort(Arrays.java:1282)
	at java.util.Arrays.mergeSort(Arrays.java:1281)
	at java.util.Arrays.mergeSort(Arrays.java:1282)
	at java.util.Arrays.mergeSort(Arrays.java:1281)
	at java.util.Arrays.mergeSort(Arrays.java:1281)
	at java.util.Arrays.sort(Arrays.java:1210)
	at java.util.Collections.sort(Collections.java:159)
	at org.apache.felix.dm.shell.DMCommand.execute(DMCommand.java:89)
	at org.apache.felix.dm.shell.EquinoxDMCommand._dm(EquinoxDMCommand.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.osgi.framework.internal.core.FrameworkCommandInterpreter.execute(FrameworkCommandInterpreter.java:155)
	at org.eclipse.osgi.framework.internal.core.FrameworkConsole.docommand(FrameworkConsole.java:156)
	at org.eclipse.osgi.framework.internal.core.FrameworkConsole.runConsole(FrameworkConsole.java:141)
	at org.eclipse.osgi.framework.internal.core.FrameworkConsole.run(FrameworkConsole.java:105)
	at java.lang.Thread.run(Thread.java:680)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-06-26 08:22:16.818,,,no_permission,,,,,,,,,,,,56030,,,Thu Jun 26 08:22:16 UTC 2014,,,,,,0|i0vs73:,183541,,,,,,,,"18/May/11 14:37;marrs;Added a test to validate the problem, and a fix to make it go away.","26/Jun/14 08:22;andras;i'm still seeing this under specific circumstances

http://apache-felix.18485.x6.nabble.com/Dependency-Manager-Shell-IllegalStateException-Invalid-BundleContext-after-update-of-some-bundles-td5008783.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Attempt to create nullable object for non-interface service,FELIX-4488,12708535,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,15/Apr/14 15:21,06/May/14 16:38,13/Mar/19 22:56,06/May/14 16:38,ipojo-runtime-1.11.2,,,,ipojo-runtime-1.12.0,,iPOJO,,,0,,,,,,"
iPOJO tries to create nullable object for non-interface services. It should return 'null' in this case.

Here is the stack trace:
15/04/14 17:18:31 (W) LoggerService.log : [WARNING]  : [org.wisdom.template.thymeleaf.tracker.TemplateTracker-0] The dependency is not optional, however no service object can be injected in engine -> org.wisdom.template.thymeleaf.ThymeleafTemplateCollector
15/04/14 17:18:31 (S) LoggerService.log : [ERROR]  : [org.wisdom.template.thymeleaf.tracker.TemplateTracker-0] The callback method stop has thrown an exception : Cannot create the Nullable object, an unexpected error occurs
java.lang.IllegalStateException: Cannot create the Nullable object, an unexpected error occurs
	at org.apache.felix.ipojo.handlers.dependency.Dependency.createNullableObject(Dependency.java:436)
	at org.apache.felix.ipojo.handlers.dependency.Dependency.createServiceObject(Dependency.java:748)
	at org.apache.felix.ipojo.handlers.dependency.Dependency.onGet(Dependency.java:711)
	at org.apache.felix.ipojo.InstanceManager.onGet(InstanceManager.java:1191)
	at org.wisdom.template.thymeleaf.tracker.TemplateTracker.__getengine(TemplateTracker.java)
	at org.wisdom.template.thymeleaf.tracker.TemplateTracker.__M_removedBundle(TemplateTracker.java:110)
	at org.wisdom.template.thymeleaf.tracker.TemplateTracker.removedBundle(TemplateTracker.java)
	at org.wisdom.template.thymeleaf.tracker.TemplateTracker.__M_removedBundle(TemplateTracker.java:44)
	at org.wisdom.template.thymeleaf.tracker.TemplateTracker.removedBundle(TemplateTracker.java)
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerRemoved(BundleTracker.java:491)
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerRemoved(BundleTracker.java:414)
	at org.osgi.util.tracker.AbstractTracked.untrack(AbstractTracked.java:341)
	at org.osgi.util.tracker.BundleTracker.close(BundleTracker.java:192)
	at org.wisdom.template.thymeleaf.tracker.TemplateTracker.__M_stop(TemplateTracker.java:77)
	at org.wisdom.template.thymeleaf.tracker.TemplateTracker.stop(TemplateTracker.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.felix.ipojo.util.Callback.call(Callback.java:237)
	at org.apache.felix.ipojo.util.Callback.call(Callback.java:193)
	at org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallback.call(LifecycleCallback.java:86)
	at org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.__M_stateChanged(LifecycleCallbackHandler.java:162)
	at org.apache.felix.ipojo.handlers.lifecycle.callback.LifecycleCallbackHandler.stateChanged(LifecycleCallbackHandler.java)
	at org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:572)
	at org.apache.felix.ipojo.InstanceManager.stateChanged(InstanceManager.java:1521)
	at org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:585)
	at org.apache.felix.ipojo.HandlerManager.stateChanged(HandlerManager.java:230)
	at org.apache.felix.ipojo.Handler.setValidity(Handler.java:176)
	at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.__M_invalidate(DependencyHandler.java:143)
	at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.invalidate(DependencyHandler.java)
	at org.apache.felix.ipojo.util.DependencyModel.invalidate(DependencyModel.java:511)
	at org.apache.felix.ipojo.util.DependencyModel.computeAndSetDependencyState(DependencyModel.java:360)
	at org.apache.felix.ipojo.util.DependencyModel.onChange(DependencyModel.java:1123)
	at org.apache.felix.ipojo.dependency.impl.ServiceReferenceManager.fireUpdate(ServiceReferenceManager.java:561)
	at org.apache.felix.ipojo.dependency.impl.ServiceReferenceManager.onDepartureOfAMatchingService(ServiceReferenceManager.java:672)
	at org.apache.felix.ipojo.dependency.impl.ServiceReferenceManager.removedService(ServiceReferenceManager.java:687)
	at org.apache.felix.ipojo.util.Tracker$Tracked.untrack(Tracker.java:739)
	at org.apache.felix.ipojo.util.Tracker$Tracked.serviceChanged(Tracker.java:637)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:943)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:794)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:544)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:4425)
	at org.apache.felix.framework.Felix.access$000(Felix.java:75)
	at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:402)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:153)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:128)
	at org.apache.felix.ipojo.handlers.providedservice.ProvidedService.unregisterService(ProvidedService.java:415)
	at org.apache.felix.ipojo.handlers.providedservice.ProvidedServiceHandler.__M_stateChanged(ProvidedServiceHandler.java:476)
	at org.apache.felix.ipojo.handlers.providedservice.ProvidedServiceHandler.stateChanged(ProvidedServiceHandler.java)
	at org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:572)
	at org.apache.felix.ipojo.InstanceManager.stateChanged(InstanceManager.java:1521)
	at org.apache.felix.ipojo.InstanceManager.setState(InstanceManager.java:585)
	at org.apache.felix.ipojo.HandlerManager.stateChanged(HandlerManager.java:230)
	at org.apache.felix.ipojo.Handler.setValidity(Handler.java:176)
	at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.__M_invalidate(DependencyHandler.java:143)
	at org.apache.felix.ipojo.handlers.dependency.DependencyHandler.invalidate(DependencyHandler.java)
	at org.apache.felix.ipojo.util.DependencyModel.invalidate(DependencyModel.java:511)
	at org.apache.felix.ipojo.util.DependencyModel.computeAndSetDependencyState(DependencyModel.java:360)
	at org.apache.felix.ipojo.util.DependencyModel.onChange(DependencyModel.java:1123)
	at org.apache.felix.ipojo.dependency.impl.ServiceReferenceManager.fireUpdate(ServiceReferenceManager.java:561)
	at org.apache.felix.ipojo.dependency.impl.ServiceReferenceManager.onDepartureOfAMatchingService(ServiceReferenceManager.java:672)
	at org.apache.felix.ipojo.dependency.impl.ServiceReferenceManager.removedService(ServiceReferenceManager.java:687)
	at org.apache.felix.ipojo.util.Tracker$Tracked.untrack(Tracker.java:739)
	at org.apache.felix.ipojo.util.Tracker$Tracked.serviceChanged(Tracker.java:637)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:943)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:794)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:544)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:4425)
	at org.apache.felix.framework.Felix.access$000(Felix.java:75)
	at org.apache.felix.framework.Felix$1.serviceChanged(Felix.java:402)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:153)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:128)
	at org.apache.felix.ipojo.handlers.providedservice.ProvidedService.unregisterService(ProvidedService.java:415)
	at org.apache.felix.ipojo.handlers.providedservice.ProvidedService$ServiceController.setValue(ProvidedService.java:878)
	at org.apache.felix.ipojo.handlers.providedservice.ProvidedServiceHandler.__M_onSet(ProvidedServiceHandler.java:429)
	at org.apache.felix.ipojo.handlers.providedservice.ProvidedServiceHandler.onSet(ProvidedServiceHandler.java)
	at org.apache.felix.ipojo.InstanceManager.onSet(InstanceManager.java:1401)
	at org.wisdom.configuration.ApplicationConfigurationImpl.__setcontroller(ApplicationConfigurationImpl.java)
	at org.wisdom.configuration.ApplicationConfigurationImpl$ConfigurationDeployer.__M_onFileChange(ApplicationConfigurationImpl.java:317)
	at org.wisdom.configuration.ApplicationConfigurationImpl$ConfigurationDeployer.onFileChange(ApplicationConfigurationImpl.java)
	at org.ow2.chameleon.core.activators.DirectoryMonitor$FileMonitor.onFileChange(DirectoryMonitor.java:502)
	at org.apache.commons.io.monitor.FileAlterationObserver.doMatch(FileAlterationObserver.java:400)
	at org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(FileAlterationObserver.java:334)
	at org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(FileAlterationObserver.java:304)
	at org.apache.commons.io.monitor.FileAlterationMonitor.run(FileAlterationMonitor.java:182)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.IllegalArgumentException: org.wisdom.template.thymeleaf.ThymeleafTemplateCollector is not an interface
	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:589)
	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:556)
	at java.lang.reflect.WeakCache$Factory.get(WeakCache.java:230)
	at java.lang.reflect.WeakCache.get(WeakCache.java:127)
	at java.lang.reflect.Proxy.getProxyClass0(Proxy.java:418)
	at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:717)
	at org.apache.felix.ipojo.handlers.dependency.Dependency.createNullableObject(Dependency.java:427)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,386858,,,Tue May 06 16:38:02 UTC 2014,,,,,,0|i1un67:,387122,,,,,,,,06/May/14 16:38;clement.escoffier;Fixed in trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong configuration admin package import / export clause,FELIX-4464,12703449,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,25/Mar/14 12:50,06/May/14 16:05,13/Mar/19 22:56,06/May/14 16:05,ipojo-runtime-1.11.2,,,,ipojo-runtime-1.12.0,,iPOJO,,,0,,,,,,"For now, the easiest work around is to deploy the OSGi compendium.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,381784,,,Tue May 06 16:05:51 UTC 2014,,,,,,0|i1trzj:,382059,,,,,,,,06/May/14 16:05;clement.escoffier;Fixed in trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable Bundle Repository to run as source project with eclipse and m2e,FELIX-4496,12710397,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,bosschaert,cvgaviao,cvgaviao,24/Apr/14 18:57,05/May/14 22:39,13/Mar/19 22:56,05/May/14 08:16,,,,,,,Bundle Repository (OBR),,,0,,,,,,"at Equinox I'm getting the following error:

   Caused by: java.lang.ClassNotFoundException:
   org.apache.felix.utils.log.Logger cannot be found by osgi.identity;
   osgi.identity=""org.apache.felix.bundlerepository"";
   type=""osgi.bundle""; version:Version=""1.7.0.SNAPSHOT""

-The solution seems to embed org.apache.felix.utils, kxml2 and woodstox-core-asl-

After a better investigation I found the problem was caused by a bad integration between maven-bundle-plugin (an old version) being used and m2e",Equinox,,,,,,,,,,,,,,,,,,,,02/May/14 16:08;cvgaviao;BundleRepositoryLauncher.launch;https://issues.apache.org/jira/secure/attachment/12643063/BundleRepositoryLauncher.launch,02/May/14 15:50;bosschaert;org.apache.felix.bundlerepository-1.7.0-SNAPSHOT.jar;https://issues.apache.org/jira/secure/attachment/12643059/org.apache.felix.bundlerepository-1.7.0-SNAPSHOT.jar,,,,2.0,,,,,,,,,,,,,,,,,,,2014-04-24 19:27:10.263,,,no_permission,,,,,,,,,,,,388719,,,Mon May 05 22:39:30 UTC 2014,,,,,,0|i1uyjz:,388969,,,,,,,,"24/Apr/14 19:27;githubbot;GitHub user cvgaviao opened a pull request:

    https://github.com/apache/felix/pull/6

    [FELIX-4496] embedding org.apache.felix.utils, kxml2 and

    woodstox-core-asl inside org.apache.felix.bundlerepository

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cvgaviao/felix trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/6.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #6
    
----
commit 9e6570b0b447937d8fff3b640156c45518b889f3
Author: Cristiano Gavião <cvgaviao@gmail.com>
Date:   2014-04-24T18:59:30Z

    [FELIX-4496] embedding org.apache.felix.utils, kxml2 and
    woodstox-core-asl inside org.apache.felix.bundlerepository

----
","02/May/14 12:58;bosschaert;I'm not seeing this issue. 

With equinox 3.8.2 and the latest OBR from trunk it installs nicely without any dependencies:
{code}osgi> ss

Framework is launched.

id	State       Bundle
0	ACTIVE      org.eclipse.osgi_3.8.2.v20130124-134944
1	ACTIVE      org.apache.felix.bundlerepository_1.7.0.SNAPSHOT
{code}","02/May/14 13:53;cvgaviao;Well, I'm using Luna. 

I did:
- created a new workspace;
- imported the org.apache.felix.bundlerepository bundle into it;
- started a new OSGi launch configuration with only some plugins selected.

!SESSION 2014-05-02 10:49:01.654 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.7.0_51
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -dev file:/home/cvgaviao/workspaces/felix/.metadata/.plugins/org.eclipse.pde.core/New_configuration/dev.properties -os linux -ws gtk -arch x86_64 -consoleLog -console

!ENTRY org.apache.felix.bundlerepository 4 0 2014-05-02 10:49:02.151
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Error starting module.
	at org.eclipse.osgi.container.Module.doStart(Module.java:580)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1562)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)
Caused by: java.lang.NoClassDefFoundError: org/apache/felix/utils/log/Logger
	at org.apache.felix.bundlerepository.impl.Activator.<clinit>(Activator.java:35)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at java.lang.Class.newInstance(Class.java:374)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	... 8 more
Caused by: java.lang.ClassNotFoundException: org.apache.felix.utils.log.Logger cannot be found by org.apache.felix.bundlerepository_1.7.0.SNAPSHOT
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:423)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:336)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:328)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 19 more
Root exception:
java.lang.NoClassDefFoundError: org/apache/felix/utils/log/Logger
	at org.apache.felix.bundlerepository.impl.Activator.<clinit>(Activator.java:35)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at java.lang.Class.newInstance(Class.java:374)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:936)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:319)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1562)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)
Caused by: java.lang.ClassNotFoundException: org.apache.felix.utils.log.Logger cannot be found by org.apache.felix.bundlerepository_1.7.0.SNAPSHOT
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:423)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:336)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:328)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 19 more

!ENTRY org.eclipse.osgi 4 0 2014-05-02 10:49:02.219
!MESSAGE Bundle org.apache.felix.bundlerepository_1.7.0.SNAPSHOT [1] is not active.
osgi> ss
""Framework is launched.""


id	State       Bundle
0	ACTIVE      org.eclipse.osgi_3.10.0.v20140414-0312
	            Fragments=3
1	RESOLVED    org.apache.felix.bundlerepository_1.7.0.SNAPSHOT
2	ACTIVE      org.eclipse.equinox.util_1.0.500.v20130404-1337
3	RESOLVED    org.eclipse.osgi.compatibility.state_1.0.0.v20140403-1907
	            Master=0
4	ACTIVE      org.eclipse.equinox.ds_1.4.200.v20131126-2331
5	ACTIVE      org.eclipse.equinox.event_1.3.100.v20140115-1647
6	ACTIVE      org.apache.felix.gogo.command_0.10.0.v201209301215
7	ACTIVE      org.apache.felix.gogo.shell_0.10.0.v201212101605
8	ACTIVE      org.eclipse.equinox.common_3.6.200.v20130402-1505
9	ACTIVE      org.eclipse.osgi.services_3.4.0.v20140312-2051
10	ACTIVE      org.eclipse.osgi.util_3.3.0.v20131023-1243
11	ACTIVE      org.apache.felix.gogo.runtime_0.10.0.v201209301036
12	ACTIVE      org.eclipse.equinox.console_1.1.0.v20140131-1639
osgi> ","02/May/14 14:24;bosschaert;Could you maybe try again with the latest Felix OBR built from trunk? I haven't applied your patch yet, but it looks like it's now pulling in the right classes anyway (not sure why though). With Equinox from Eclipse 44M6:

{code}osgi> ss
""Framework is launched.""

id	State       Bundle
0	ACTIVE      org.eclipse.osgi_3.10.0.v20140305-1523
1	ACTIVE      org.apache.felix.gogo.runtime_0.10.0.v201209301036
2	ACTIVE      org.apache.felix.gogo.command_0.10.0.v201209301215
3	ACTIVE      org.eclipse.equinox.console_1.1.0.v20140131-1639
4	ACTIVE      org.apache.felix.gogo.shell_0.10.0.v201212101605
5	ACTIVE      org.apache.felix.bundlerepository_1.7.0.SNAPSHOT{code}

I see from your patch that it updates some of the dependencies/plugins to the latest version, which I think is good anyway, but before doing that I just wanted to confirm that the issue is gone for you too.","02/May/14 15:17;cvgaviao;Tried the latest trunk (I've cloned it again in another directory).
That is the version I'm using: Version: Luna (4.4) Build id: I20140415-0800
This time I didn't get the exception immediately but can't start the bundle:
 
osgi> ss
""Framework is launched.""


id	State       Bundle
0	ACTIVE      org.eclipse.osgi_3.10.0.v20140414-0312
1	ACTIVE      org.eclipse.equinox.util_1.0.500.v20130404-1337
2	RESOLVED    org.eclipse.osgi.services_3.4.0.v20140312-2051
3	ACTIVE      org.apache.felix.gogo.command_0.10.0.v201209301215
4	ACTIVE      org.apache.felix.gogo.runtime_0.10.0.v201209301036
5	ACTIVE      org.eclipse.equinox.ds_1.4.200.v20131126-2331
6	ACTIVE      org.apache.felix.gogo.shell_0.10.0.v201212101605
7	RESOLVED    org.apache.felix.bundlerepository_1.7.0.SNAPSHOT
8	ACTIVE      org.eclipse.equinox.console_1.1.0.v20140131-1639
osgi> diag 7
org.apache.felix.bundlerepository [7]
  No resolution report for the bundle.
osgi> start 7
gogo: BundleException: Error starting module.
osgi> 
",02/May/14 15:20;cvgaviao;could you try selecting DS bundle and its dependencies in your launcher ?,"02/May/14 15:50;bosschaert;I tried it with Luna M6 with the same bundles as you are using, and it still works fine for me:

{code}osgi> ss
""Framework is launched.""

id	State       Bundle
0	ACTIVE      org.eclipse.osgi_3.10.0.v20140305-1523
1	ACTIVE      org.apache.felix.gogo.command_0.10.0.v201209301215
2	ACTIVE      org.apache.felix.gogo.shell_0.10.0.v201212101605
3	ACTIVE      org.eclipse.equinox.console_1.1.0.v20140131-1639
4	ACTIVE      org.eclipse.equinox.util_1.0.500.v20130404-1337
5	ACTIVE      org.eclipse.osgi.services_3.4.0.v20131120-1328
6	ACTIVE      org.apache.felix.gogo.runtime_0.10.0.v201209301036
7	ACTIVE      org.eclipse.equinox.ds_1.4.200.v20131126-2331
8	ACTIVE      org.apache.felix.bundlerepository_1.7.0.SNAPSHOT{code}

As a sanity check I've attached the bundlerepository jar that I'm using to this bug. Maybe you could try that? It would be weird if there was a difference between that and what you have, but just to be sure...","02/May/14 16:09;cvgaviao;That is weird !
Are you using a fresh workspace ? 

I will test with your bundle, but in mean time check the launcher I'm using. I'm attaching it.
","02/May/14 17:21;cvgaviao;David I tested with your bundle and I generated a jar from the sources using my local maven, too.

added them into target platform and both worked well.

So, seems to be a problem with latest m2e, PDE and maven-bundle-plugin setup being used by org.apache.felix.bundlerepository bundle.
","02/May/14 17:31;cvgaviao;Found a better solution...

using the changes bellow resolved the problem of running with the project source in the workspace.

I upgraded maven-bundle-plugin version and added unpackBundle setting: 

{code}

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        -->> <version>2.4.0</version>
        <extensions>true</extensions>
        <configuration>
          -->> <unpackBundle>true</unpackBundle>
          <instructions>
           ...
{code}
","02/May/14 17:36;githubbot;Github user cvgaviao closed the pull request at:

    https://github.com/apache/felix/pull/6
","02/May/14 17:59;githubbot;GitHub user cvgaviao opened a pull request:

    https://github.com/apache/felix/pull/7

    Update pom.xml

    FELIX-4496

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cvgaviao/felix patch-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/7.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #7
    
----
commit a86f707a9771fb8422cc2752f577bb678937b85b
Author: Cristiano Gavião <cvgaviao@gmail.com>
Date:   2014-05-02T17:59:24Z

    Update pom.xml
    
    FELIX-4496

----
","05/May/14 08:16;bosschaert;Christiano, I have applied your patch/pull request:
http://svn.apache.org/viewvc?view=revision&revision=1592466

many thanks!","05/May/14 22:39;githubbot;Github user cvgaviao closed the pull request at:

    https://github.com/apache/felix/pull/7
",,,,,,,,,,,,,,,,,,
[Inventory] Zip Writer does not pass the correct isZip status to the InventoryPrinterHandler,FELIX-4437,12697394,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,26/Feb/14 15:56,26/Feb/14 15:58,13/Mar/19 22:56,26/Feb/14 15:58,inventory-1.0.2,,,,inventory-1.0.4,,Inventory,,,0,,,,,,"The ZipConfigurationWriter calls the InventoryPrinterHandler for the TEXT format (if TEXT is supported) but does not forward that the output goes into the ZIP file.

This may cause InventoryPrinterHandler to not generate the appropriate output. For example the WebConsole's Thread Dumper will omit the stack traces if the thread dumps do not go to the ZIP file.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,375868,,,Wed Feb 26 15:58:00 UTC 2014,,,,,,0|i1srqf:,376164,,,,,,,,26/Feb/14 15:58;fmeschbe;Fixed in Rev. 1572113,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The console does not work anymore when connecting to another karaf instance,FELIX-1529,12434047,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,26/Aug/09 14:20,29/Nov/13 14:24,13/Mar/19 22:56,28/Aug/09 07:16,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"Using:
   > admin:create k1
   > admin:start k1
   > admin:connect k1

It seems keystrokes are eaten by another thread ....",,,,,,,,,,,,,,,FELIX-4336,,,,,FELIX-1536,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57497,,,Fri Aug 28 07:16:10 UTC 2009,,,,,,0|i0vtvz:,183815,,,,,,,,"28/Aug/09 06:42;gnt;URL: http://svn.apache.org/viewvc?rev=808773&view=rev

With this commit and FELIX-1536 being fixed, it seems to work.
Still one problem when using ^D from the shell to my localhost unix sshd","28/Aug/09 07:16;gnt;URL: http://svn.apache.org/viewvc?rev=808782&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceDiagnostics WebConsole Plugin fails on DependencyManager BundleDependency,FELIX-3898,12632204,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,apanday,apanday,13/Feb/13 13:22,24/Sep/13 12:33,13/Mar/19 22:56,13/Feb/13 13:32,webconsole-4.0.0,,,,webconsole-servicediagnostics-plugin 0.1.3,,Web Console,,,0,,,,,,parsing of ComponentDependencyDeclaration.getName() fails on BundleDependency,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,312700,,,Wed Feb 13 13:32:49 UTC 2013,,,,,,0|i1hyof:,313046,,,,,,,,13/Feb/13 13:32;apanday;fixed name parsing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
service diagnostics plugin wrongly detects wrong service loops,FELIX-4162,12656307,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,apanday,apanday,04/Jul/13 22:01,24/Sep/13 12:32,13/Mar/19 22:56,24/Sep/13 12:32,,,,,webconsole-servicediagnostics-plugin 0.1.3,,Web Console,,,0,,,,,,"optional dependencies are not treated symetrically in the SCR and DM plugins therefore leading to wrong interpretations.

additionally circular dependencies can make the graph hard to read and should be shown separately",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,336530,,,2013-07-04 22:01:16.0,,,,,,0|i1m1qv:,336854,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PreferencesManager can throw NPE after being stopped.,FELIX-3334,12540577,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,jajans,jajans,31/Jan/12 16:21,08/Aug/13 10:56,13/Mar/19 22:56,08/Aug/13 10:56,prefs-1.0.4,,,,prefs-1.0.6,,Preferences Service,,,0,patch,,,,,"PreferencesManager#bundleChanged tries to intercept bundles that are uninstalled. However, if the PreferencesManager itself is stopped, it does not unregister itself as bundle listener, causing possible NPEs when other bundles depending on the preferences service are stopped later on, for example during a shutdown.

I've got a patch available, will attach it to this issue to be applied.",,,,,,,,,,,,,,,,,,,,,29/Feb/12 10:01;jajans;felix-prefs-3334-2.patch;https://issues.apache.org/jira/secure/attachment/12516541/felix-prefs-3334-2.patch,06/Feb/12 21:28;jajans;quickfix-new.patch;https://issues.apache.org/jira/secure/attachment/12513501/quickfix-new.patch,,,,2.0,,,,,,,,,,,,,,,,,,,2012-02-01 07:33:39.11,,,no_permission,,,,,,,,,,,,225990,,,Thu Aug 08 10:56:23 UTC 2013,,,,,,0|i07glz:,41457,,,,,,,,31/Jan/12 16:22;jajans;A simple fix for this issue is attached.,"01/Feb/12 07:33;fmeschbe;A bundle being stopped is automatically unregistered as a bundle listener but only after having called the stop method of the BundleActivator.

Looking at the code, chances are minimal (if there is a concurrency between event handling and handling stop), but this would not be 100% solved by the patch (because an event might still be coming in.

A better fix would be to check for the null-situation in the event handler when accessing the store.

Did you actually encounter an NPE ?","06/Feb/12 21:28;jajans;@Felix: you're right; I was too early with my conclusion. The spec clearly says that bundles are to be unregistered automatically as listeners after being stopped.

We actually do encounter the NPE, but we're running multiple instances of the PreferenceService to provide this service in a multi-tenant situation. That said, we also encountered situations that the original fix did not fix the problem either. So, I've changed the code to test for null, which does resolve the issue for our situation.

",08/Feb/12 07:38;cziegeler;Thanks for your patch. I've applied it in revision 1241796,"29/Feb/12 10:00;jajans;I'm reopening this issue after giving my earlier fix yet another thought. From field tests it appears that other NPEs can occur even with my earlier fix.

Why not let the BackingStoreManager#getStore() throw an BackingStoreException if there is no backing store service tracker available?

While it would mean a (internal) API-change, all usages of the #getStore() method would only yield an exception if used after the bundle has being stopped. We could try to cover all usages of #getStore() with a null-check as well, but would make the code (IMO) more complicated than necessary?!

I've investigated the impact of this change, and found that all places where #getStore() is called already handle or throw a BackingStoreException, making it a trivial change.",29/Feb/12 10:01;jajans;Trivial patch to support my previous comment.,"12/Mar/12 13:12;marrs;Applied this patch with a small change:
To prevent a possible race condition when ""this.storeTracker"" is nulled whilst in the middle of this method, I read the member once into a local variable and use that throughout the rest of the codebase.
To be honest, I have the feeling that there are other possible concurrency issues in this code, but for now I wanted to allow J.W. to test his patch.
@Carsten/@Felix WDYT?","12/Mar/12 13:21;cziegeler;To be honest, i'm not using this implementation very intensively, so chances are that there are more concurrency issues.
I'm wondering if we need the support for different stores at all or just go with the default store and are done. So far I haven't heard that someone is using its own store implementation","12/Mar/12 13:40;marrs;Can't speak for everybody, but I actually like the fact that you can plug-in a different store implementation. I don't think it structurally causes problems (other than the fact that it slightly complicates the design and leaves us with questions like ""what should happen if the backing store changes or goes away). The concurrency issues are things we should keep working on. In any case we're actively using prefs in http://amdatu.org/ so we'll keep contributing patches whenever we run into something.","12/Mar/12 13:49;cziegeler;Yeah, I liked this feature as well but I fear those questions in reality. A lot of interesting things could happen which in most cases might be unwanted.
Maybe we should just use a different way of pluggability which allows for more predictable scenarios:
- moving the default implementation of the store into a separate bundle and making the dependency required would be one solution
- require people to create their own prefs bundle where the store impl has to be inside the prefs bundle would be another one
Not nice either....
","08/Aug/13 10:56;sahoo;Since there has been no negative comments since the last patch, I am marking this issue as resolved.",,,,,,,,,,,,,,,,,,,,,
osgi:list column for spring is sometimes filled and sometimes not,FELIX-1717,12437471,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,lhein,lhein,07/Oct/09 08:18,14/Jun/13 13:25,13/Mar/19 22:56,15/Oct/09 12:35,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"see IRC discussion:

[09:24] <lhein> gnodet: did you recognize that the osgi:list Spring column is sometimes filled with lots of ""started"" and most times it's simply empty?
[09:25] <lhein> most is maybe not correct...it seems to be a random effect
[09:57] <gnodet> lhein: that's a problem with spring
[09:57] <gnodet> mostly when you add a spring listener, you don't know about previous events
[09:58] <gnodet> so if the listener was registered too late, it will miss some events
[09:58] <gnodet> but we only register the listener when using osgi:list command, so you may want to raise a bug so that it's done earlier if possible

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-15 12:35:59.131,,,no_permission,,,,,,,,,,,,57312,,,Fri Jun 14 13:25:52 UTC 2013,,,,,,0|i0vtdr:,183733,,,,,,,,"15/Oct/09 12:35;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/osgi/src/main/java/org/apache/felix/karaf/shell/osgi/SpringStateListenerFactory.java
	M	karaf/shell/osgi/src/main/resources/OSGI-INF/blueprint/shell-osgi.xml
Committed r825477
","14/Jun/13 13:25;metatech;I still have the problem with Karaf 2.2.4.
The Spring status stays empty, until the first invocation of ""osgi:list"" in the Karaf shell, after which the listener gets registered, but the Spring status stays empty until the next bundle restart.
A more reliable solution to this problem would be to register the listeners in a bundle activator in the Karaf Shell OSGi bundle, so that all events are listened from the early start of the server.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PreferencesService doesn't work if a PermissionAdmin is present,FELIX-1908,12441935,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,sahoo,udittmer,udittmer,30/Nov/09 09:55,25/May/13 01:07,13/Mar/19 22:56,25/May/13 01:07,prefs-1.0.4,,,,prefs-1.0.6,,Preferences Service,,,0,,,,,,"If a PermissionAdmin service is present, then a bundle making use of PreferencesService currently needs a ""org.osgi.service.prefs.PreferencesService"" ""get"" ServicePermission (which is as it should be), but also a FilePermission for the felix-cache subdirectory that contains the data for the PreferencesService bundle. WIthout it, an attempt to alter preferences results in a security exception.

A bundle should not have (or need) file access to another bundle's private data.",,,,,,,,,,,,,,,,,,,,,22/May/13 07:34;sahoo;FelixPrefsServiceTest.zip;https://issues.apache.org/jira/secure/attachment/12584264/FelixPrefsServiceTest.zip,22/May/13 12:41;sahoo;felix.preferences.security.patch;https://issues.apache.org/jira/secure/attachment/12584299/felix.preferences.security.patch,,,,2.0,,,,,,,,,,,,,,,,,,,2013-05-22 07:29:28.302,,,no_permission,,,,,,,,,,,,57137,,,Sat May 25 01:07:48 UTC 2013,,,,,,0|i1asqn:,271122,,,,,,,,"07/Dec/09 08:47;udittmer;Just to clarify, the Prefs bundle had AllPermission assigned.","16/Dec/09 09:28;udittmer;Added ""Permission Admin"" to components, since I'm not sure where the actual problem is.","11/Jul/10 10:39;udittmer;I can no longer reproduce this with the current versions (Felix Main 3.0.1, Security 1.2.0, Prefs 1.0.4), so I think this has been resolved.","22/May/13 07:29;sahoo;I am going to attach a test case that demonstrates the issue with Felix 4.2.1. So, I am reopening this bug.","22/May/13 07:34;sahoo;To reproduce the issue please follow these steps:

0) Unzip the attached zip file. It contains sources as well as ready to use jar files in respective target directories. It has 2 netbeans/maven projects, viz:

a) FelixPrefsServiceTestLauncher -> This contains the launcher that embeds Felix, configures security & deploys the test

b) FelixPrefsServiceTest -> This contains a test that just tries to use FelixPreferencesService. This test configured to have limited permissions ( package import & service get only) by the launcher

1) Download http://mirrors.gigenet.com/apache//felix/org.apache.felix.main.distribution-4.2.1.zip
2) Extract the zip file & goto felix-framework-4.2.1 directory
3) Download the following & copy to the bundle directory
a) http://mirrors.gigenet.com/apache//felix/org.apache.felix.framework.security-2.2.0.jar
b) http://mirrors.gigenet.com/apache//felix/org.apache.felix.log-1.0.1.jar
c) http://mirrors.gigenet.com/apache//felix/org.apache.felix.prefs-1.0.4.jar
4) create a all.policy file with the following content
grant { permission java.security.AllPermission; };
5) Run the following command after replacing <path> with the full path to the directory where you extracted the FelixPrefsServiceTest.zip file
java -Djava.security.policy=./all.policy -cp ./bundle/org.apache.felix.framework.security-2.2.0.jar:./bin/felix.jar:<path>/FelixPrefsServiceTestLauncher/target/FelixPrefsServiceTestLauncher-1.0-SNAPSHOT.jar test.felixprefsservicetestlauncher.Main file:<path>/FelixPrefsServiceTest/target/FelixPrefsServiceTest-1.0-SNAPSHOT.jar

6) You should see the following message

Starting framework...
Configuring framework security...
Deploying system bundles...
deployed file:/Users/riaz/Work/embedded/jes8/felix-framework-4.2.1/bundle/org.apache.felix.log-1.0.1.jar
deployed file:/Users/riaz/Work/embedded/jes8/felix-framework-4.2.1/bundle/org.apache.felix.prefs-1.0.4.jar
Deploying application bundle...
deployed file:/Users/riaz/NetBeansProjects/FelixPrefsServiceTest/target/FelixPrefsServiceTest-1.0-SNAPSHOT.jar
Exception in thread ""main"" org.osgi.framework.BundleException: Activator start error in bundle test.FelixPrefsServiceTest [4].
at org.apache.felix.framework.Felix.activateBundle(Felix.java:2196)
at org.apache.felix.framework.Felix.startBundle(Felix.java:2064)
at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:955)
at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:942)
at test.felixprefsservicetestlauncher.Main.main(Main.java:66)
Caused by: java.security.AccessControlException: access denied (java.io.FilePermission ./felix-cache/bundle3/data/P4.ser read)
at java.security.AccessControlContext.checkPermission(AccessControlContext.java:374)
at java.security.AccessController.checkPermission(AccessController.java:549)
at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)
at java.lang.SecurityManager.checkRead(SecurityManager.java:871)
at java.io.File.exists(File.java:731)
at org.apache.felix.prefs.impl.DataFileBackingStoreImpl.load(DataFileBackingStoreImpl.java:155)
at org.apache.felix.prefs.impl.StreamBackingStoreImpl.update(StreamBackingStoreImpl.java:102)
at org.apache.felix.prefs.PreferencesImpl.sync(PreferencesImpl.java:588)
at org.apache.felix.prefs.impl.PreferencesServiceImpl.getSystemPreferences(PreferencesServiceImpl.java:80)
at test.felixprefsservicetest.Activator.start(Activator.java:18)
at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1605)
at java.security.AccessController.doPrivileged(Native Method)
at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:636)
at org.apache.felix.framework.Felix.activateBundle(Felix.java:2146)
... 4 more","22/May/13 12:41;sahoo;All that's missing in the code are a few doPrivileged blocks. A simple patch. If nobody has objections, I would like to commit it.",22/May/13 13:31;rickhall;Go for it.,25/May/13 01:07;sahoo;Committed the attached patch in svn #1486267.,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent modification problem in StatefulResolver$ResolverStateImpl.getCandidates,FELIX-3242,12532580,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,djencks,djencks,24/Nov/11 06:16,02/May/13 02:30,13/Mar/19 22:56,05/Feb/13 18:10,framework-4.0.1,,,,framework-4.2.0,,Framework,,,1,,,,,,"I occasionally see this stack trace (2 examples) starting stuff in karaf running on felix 4.0.1  Unfortunately it happens rarely and with no pattern I can discern.

[Blueprint Extender: 3] ERROR org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe$Listener - Error calling listener method public synchronized void org.apache.karaf.shell.console.jline.ConsoleFactory.registerCommandProcessor(org.apache.felix.service.command.CommandProcessor) throws java.lang.Exception
java.lang.reflect.InvocationTargetException
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:238)
       at org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe$Listener.invokeMethods(AbstractServiceReferenceRecipe.java:460)
       at org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe$Listener.bind(AbstractServiceReferenceRecipe.java:442)
       at org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.bind(AbstractServiceReferenceRecipe.java:339)
       at org.apache.aries.blueprint.container.ReferenceRecipe.bind(ReferenceRecipe.java:149)
       at org.apache.aries.blueprint.container.ReferenceRecipe.retrack(ReferenceRecipe.java:114)
       at org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.updateListeners(AbstractServiceReferenceRecipe.java:331)
       at org.apache.aries.blueprint.container.ReferenceRecipe.internalCreate(ReferenceRecipe.java:93)
       at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:71)
       at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
       at java.util.concurrent.FutureTask.run(FutureTask.java:138)
       at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:79)
       at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:220)
       at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:154)
       at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:630)
       at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:326)
       at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:228)
       at org.apache.aries.blueprint.utils.threading.impl.DiscardableRunnable.run(DiscardableRunnable.java:48)
       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
       at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
       at java.util.concurrent.FutureTask.run(FutureTask.java:138)
       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)
       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)
       at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
       at java.lang.Thread.run(Thread.java:680)
Caused by: java.util.ConcurrentModificationException
       at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
       at java.util.AbstractList$Itr.next(AbstractList.java:343)
       at org.apache.felix.framework.StatefulResolver$ResolverStateImpl.getCandidates(StatefulResolver.java:1333)
       at org.apache.felix.framework.StatefulResolver.isAllowedDynamicImport(StatefulResolver.java:521)
       at org.apache.felix.framework.StatefulResolver.resolve(StatefulResolver.java:216)
       at org.apache.felix.framework.BundleWiringImpl.searchDynamicImports(BundleWiringImpl.java:1539)
       at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1439)
       at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:72)
       at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1843)
       at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
       at java.lang.ClassLoader.defineClass1(Native Method)
       at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)
       at java.lang.ClassLoader.defineClass(ClassLoader.java:615)
       at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.findClass(BundleWiringImpl.java:2128)
       at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1432)
       at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:72)
       at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1843)
       at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
       at org.apache.felix.framework.BundleWiringImpl.getClassByDelegation(BundleWiringImpl.java:1317)
       at org.apache.felix.framework.BundleWiringImpl.searchImports(BundleWiringImpl.java:1481)
       at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1427)
       at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:72)
       at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1843)
       at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
       at org.apache.karaf.shell.console.jline.ConsoleFactory.start(ConsoleFactory.java:71)
       at org.apache.karaf.shell.console.jline.ConsoleFactory.registerCommandProcessor(ConsoleFactory.java:51)
       ... 30 more


----------------------------------------------------
[Thread-8] ERROR org.apache.karaf.features.internal.FeaturesServiceImpl - Error installing boot feature management
java.io.IOException: javax.xml.bind.JAXBException: Unable to create context
- with linked exception:
[java.lang.reflect.InvocationTargetException] : mvn:org.apache.karaf.features/enterprise/3.0.0-SNAPSHOT/xml/features
       at org.apache.karaf.features.internal.RepositoryImpl.load(RepositoryImpl.java:96)
       at org.apache.karaf.features.internal.RepositoryImpl.getRepositories(RepositoryImpl.java:69)
       at org.apache.karaf.features.internal.FeaturesServiceImpl.getFeatures(FeaturesServiceImpl.java:910)
       at org.apache.karaf.features.internal.FeaturesServiceImpl.getFeature(FeaturesServiceImpl.java:870)
       at org.apache.karaf.features.internal.FeaturesServiceImpl$1.run(FeaturesServiceImpl.java:994)
Caused by: java.lang.RuntimeException: javax.xml.bind.JAXBException: Unable to create context
- with linked exception:
[java.lang.reflect.InvocationTargetException]
       at org.apache.karaf.features.internal.model.JaxbUtil.unmarshal(JaxbUtil.java:126)
       at org.apache.karaf.features.internal.RepositoryImpl.load(RepositoryImpl.java:88)
       ... 4 more
Caused by: javax.xml.bind.JAXBException: Unable to create context
- with linked exception:
[java.lang.reflect.InvocationTargetException]
       at javax.xml.bind.ContextFinder.find(ContextFinder.java:116)
       at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:65)
       at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:56)
       at org.apache.karaf.features.internal.model.JaxbUtil.unmarshal(JaxbUtil.java:107)
       ... 5 more
Caused by: java.lang.reflect.InvocationTargetException
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at javax.xml.bind.ContextFinder.find(ContextFinder.java:114)
       ... 8 more
Caused by: java.util.ConcurrentModificationException
       at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
       at java.util.AbstractList$Itr.next(AbstractList.java:343)
       at org.apache.felix.framework.StatefulResolver$ResolverStateImpl.getCandidates(StatefulResolver.java:1333)
       at org.apache.felix.framework.StatefulResolver.isAllowedDynamicImport(StatefulResolver.java:521)
       at org.apache.felix.framework.StatefulResolver.resolve(StatefulResolver.java:216)
       at org.apache.felix.framework.BundleWiringImpl.searchDynamicImports(BundleWiringImpl.java:1539)
       at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1439)
       at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:72)
       at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1843)
       at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
       at java.lang.Class.forName0(Native Method)
       at java.lang.Class.forName(Class.java:247)
       at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:95)
       at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:107)
       at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:31)
       at sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:370)
       at sun.reflect.annotation.AnnotationParser.parseAnnotation(AnnotationParser.java:181)
       at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:69)
       at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:52)
       at java.lang.reflect.Method.declaredAnnotations(Method.java:693)
       at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:686)
       at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:175)
       at com.sun.xml.bind.v2.model.annotation.RuntimeInlineAnnotationReader.getAllMethodAnnotations(RuntimeInlineAnnotationReader.java:89)
       at com.sun.xml.bind.v2.model.annotation.RuntimeInlineAnnotationReader.getAllMethodAnnotations(RuntimeInlineAnnotationReader.java:57)
       at com.sun.xml.bind.v2.model.impl.ClassInfoImpl.ensureNoAnnotation(ClassInfoImpl.java:1130)
       at com.sun.xml.bind.v2.model.impl.ClassInfoImpl.collectGetterSetters(ClassInfoImpl.java:1069)
       at com.sun.xml.bind.v2.model.impl.ClassInfoImpl.findGetterSetterProperties(ClassInfoImpl.java:943)
       at com.sun.xml.bind.v2.model.impl.ClassInfoImpl.getProperties(ClassInfoImpl.java:314)
       at com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl.getProperties(RuntimeClassInfoImpl.java:186)
       at com.sun.xml.bind.v2.model.impl.ModelBuilder.getClassInfo(ModelBuilder.java:247)
       at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:104)
       at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:85)
       at com.sun.xml.bind.v2.model.impl.ModelBuilder.getClassInfo(ModelBuilder.java:213)
       at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:99)
       at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:85)
       at com.sun.xml.bind.v2.model.impl.ModelBuilder.getTypeInfo(ModelBuilder.java:319)
       at com.sun.xml.bind.v2.model.impl.ModelBuilder.getTypeInfo(ModelBuilder.java:334)
       at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:483)
       at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:319)
       at com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1170)
       at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:145)
       ... 13 more
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-12-04 04:29:04.373,,,no_permission,,,,,,,,,,,,218313,,,Sun Feb 10 11:02:02 UTC 2013,,,,,,0|i1av0n:,271491,,,,,,,,"04/Dec/11 04:29;rickhall;I see what is going on here, but I'm not sure the best way to resolve it yet.

Basically, the current approach for implementing the R4.3 resolver hooks caches them at the beginning of a resolve operation and assumes that they are only accessed while holding the global lock, but this isn't true. They are also accessed in getCandidates() when trying to determine if a bundle should attempt a dynamic import, which purposely doesn't acquire the global lock to avoid lock contention for dynamic imports.

I'll need to think about this some more.","15/Aug/12 00:12;ceefour;I'm not sure if this is the same bug, but I'll add my stacktrace, using Karaf 2.3.0-SNAPSHOT and Aries Blueprint 0.3.2 :

{code}
2012-08-15 07:09:45,081 | ERROR | rint Extender: 1 | BlueprintContainerImpl           | container.BlueprintContainerImpl  364 | 9 - org.apache.aries.blueprint - 0.3.2 | Unable to start blueprint container for bundle id.co.bippo.commerce.core
java.util.ConcurrentModificationException
        at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:390)[:1.7.0_03]
        at java.util.LinkedHashMap$KeyIterator.next(LinkedHashMap.java:401)[:1.7.0_03]
        at java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1067)[:1.7.0_03]
        at org.apache.aries.blueprint.container.RecipeBuilder.createRepository(RecipeBuilder.java:87)[9:org.apache.aries.blueprint:0.3.2]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.processProcessors(BlueprintContainerImpl.java:495)[9:org.apache.aries.blueprint:0.3.2]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:320)[9:org.apache.aries.blueprint:0.3.2]
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:230)[9:org.apache.aries.blueprint:0.3.2]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)[:1.7.0_03]
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)[:1.7.0_03]
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)[:1.7.0_03]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)[:1.7.0_03]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)[:1.7.0_03]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)[:1.7.0_03]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)[:1.7.0_03]
        at java.lang.Thread.run(Thread.java:722)[:1.7.0_03]
{code}","05/Feb/13 18:10;rickhall;The issue here really is that some of the resolver state API is only intended to be called by the resolver implementation during a resolve operation. We were sort of treating these methods as if they could be called in another context, but they cannot. To try to deal with this situation, I've tried to provide better separation by keeping track of some data (resolver hooks in this case) in local variables that I pass around rather than have them as member variables. Please close if satisfied, thanks.","10/Feb/13 03:47;ceefour;Thank you Richard!

To test it, I can just replace the felix.framework.jar on Karaf 2.3.0 with the latest snapshot?",10/Feb/13 04:09;rickhall;Should be able to...either framework.jar or felix.jar from main...whichever Karaf normally uses.,10/Feb/13 04:15;ceefour;Thanks!,"10/Feb/13 08:24;ceefour;Richard Hall's fix (https://issues.apache.org/jira/browse/FELIX-3242?focusedCommentId=13571524&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13571524) definitely helped.

The #ARIES-954 bug still persists, HOWEVER:

1. Using felix.framework 4.0.3, the bundle getting this exception will go into Failure state and this is practically irrecoverable, there are two options: A. uninstall then reinstall the bundle; B. restart Karaf

2. Using org.apache.felix.framework-4.1.0-20130205.222907-15.jar, a simple ""restart {bundle}"" is now working to return the bundle back to Active-Created state! :-)

Progress! :)","10/Feb/13 11:02;ceefour;Spoke too soon. Now I'm not sure if felix 4.1.0-20130205.222907-15 made an effect. Error after restart/refresh bundle:

{code}
{
  ""level"" : ""ERROR"",
  ""message"" : {
    ""messagePattern"" : ""Unable to start blueprint container for bundle berbatik_dev_commerce_model""
  },
  ""logger"" : ""org.apache.aries.blueprint.container.BlueprintContainerImpl"",
  ""throwable"" : {
    ""cause"" : {
      ""name"" : ""java.lang.NullPointerException"",
      ""omittedElements"" : 0
    },
    ""message"" : ""java.lang.NullPointerException"",
    ""name"" : ""org.osgi.service.blueprint.container.ComponentDefinitionException"",
    ""omittedElements"" : 0,
    ""stackTrace"" : [ {
      ""className"" : ""org.apache.aries.blueprint.container.ReferenceRecipe"",
      ""exact"" : false,
      ""fileName"" : ""ReferenceRecipe.java"",
      ""lineNumber"" : 116,
      ""methodName"" : ""internalCreate""
    }, {
      ""className"" : ""org.apache.aries.blueprint.di.AbstractRecipe$1"",
      ""exact"" : false,
      ""fileName"" : ""AbstractRecipe.java"",
      ""lineNumber"" : 79,
      ""methodName"" : ""call""
    }, {
      ""className"" : ""java.util.concurrent.FutureTask$Sync"",
      ""exact"" : false,
      ""fileName"" : ""FutureTask.java"",
      ""lineNumber"" : 334,
      ""methodName"" : ""innerRun""
    }, {
      ""className"" : ""java.util.concurrent.FutureTask"",
      ""exact"" : false,
      ""fileName"" : ""FutureTask.java"",
      ""lineNumber"" : 166,
      ""methodName"" : ""run""
    }, {
      ""className"" : ""org.apache.aries.blueprint.di.AbstractRecipe"",
      ""exact"" : false,
      ""fileName"" : ""AbstractRecipe.java"",
      ""lineNumber"" : 88,
      ""methodName"" : ""create""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BeanRecipe"",
      ""exact"" : false,
      ""fileName"" : ""BeanRecipe.java"",
      ""lineNumber"" : 933,
      ""methodName"" : ""setProperty""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BeanRecipe"",
      ""exact"" : false,
      ""fileName"" : ""BeanRecipe.java"",
      ""lineNumber"" : 907,
      ""methodName"" : ""setProperties""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BeanRecipe"",
      ""exact"" : false,
      ""fileName"" : ""BeanRecipe.java"",
      ""lineNumber"" : 888,
      ""methodName"" : ""setProperties""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BeanRecipe"",
      ""exact"" : false,
      ""fileName"" : ""BeanRecipe.java"",
      ""lineNumber"" : 820,
      ""methodName"" : ""internalCreate2""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BeanRecipe"",
      ""exact"" : false,
      ""fileName"" : ""BeanRecipe.java"",
      ""lineNumber"" : 787,
      ""methodName"" : ""internalCreate""
    }, {
      ""className"" : ""org.apache.aries.blueprint.di.AbstractRecipe$1"",
      ""exact"" : false,
      ""fileName"" : ""AbstractRecipe.java"",
      ""lineNumber"" : 79,
      ""methodName"" : ""call""
    }, {
      ""className"" : ""java.util.concurrent.FutureTask$Sync"",
      ""exact"" : false,
      ""fileName"" : ""FutureTask.java"",
      ""lineNumber"" : 334,
      ""methodName"" : ""innerRun""
    }, {
      ""className"" : ""java.util.concurrent.FutureTask"",
      ""exact"" : false,
      ""fileName"" : ""FutureTask.java"",
      ""lineNumber"" : 166,
      ""methodName"" : ""run""
    }, {
      ""className"" : ""org.apache.aries.blueprint.di.AbstractRecipe"",
      ""exact"" : false,
      ""fileName"" : ""AbstractRecipe.java"",
      ""lineNumber"" : 88,
      ""methodName"" : ""create""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BlueprintRepository"",
      ""exact"" : false,
      ""fileName"" : ""BlueprintRepository.java"",
      ""lineNumber"" : 247,
      ""methodName"" : ""createInstances""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BlueprintRepository"",
      ""exact"" : false,
      ""fileName"" : ""BlueprintRepository.java"",
      ""lineNumber"" : 230,
      ""methodName"" : ""createInstance""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BlueprintRepository"",
      ""exact"" : false,
      ""fileName"" : ""BlueprintRepository.java"",
      ""lineNumber"" : 155,
      ""methodName"" : ""create""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BlueprintContainerImpl"",
      ""exact"" : false,
      ""fileName"" : ""BlueprintContainerImpl.java"",
      ""lineNumber"" : 534,
      ""methodName"" : ""processProcessors""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BlueprintContainerImpl"",
      ""exact"" : false,
      ""fileName"" : ""BlueprintContainerImpl.java"",
      ""lineNumber"" : 367,
      ""methodName"" : ""doRun""
    }, {
      ""className"" : ""org.apache.aries.blueprint.container.BlueprintContainerImpl"",
      ""exact"" : false,
      ""fileName"" : ""BlueprintContainerImpl.java"",
      ""lineNumber"" : 272,
      ""methodName"" : ""run""
    }, {
      ""className"" : ""org.apache.aries.blueprint.utils.threading.impl.DiscardableRunnable"",
      ""exact"" : false,
      ""fileName"" : ""DiscardableRunnable.java"",
      ""lineNumber"" : 48,
      ""methodName"" : ""run""
    }, {
      ""className"" : ""java.util.concurrent.Executors$RunnableAdapter"",
      ""exact"" : false,
      ""fileName"" : ""Executors.java"",
      ""lineNumber"" : 471,
      ""methodName"" : ""call""
    }, {
      ""className"" : ""java.util.concurrent.FutureTask$Sync"",
      ""exact"" : false,
      ""fileName"" : ""FutureTask.java"",
      ""lineNumber"" : 334,
      ""methodName"" : ""innerRun""
    }, {
      ""className"" : ""java.util.concurrent.FutureTask"",
      ""exact"" : false,
      ""fileName"" : ""FutureTask.java"",
      ""lineNumber"" : 166,
      ""methodName"" : ""run""
    }, {
      ""className"" : ""java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask"",
      ""exact"" : false,
      ""fileName"" : ""ScheduledThreadPoolExecutor.java"",
      ""lineNumber"" : 178,
      ""methodName"" : ""access$201""
    }, {
      ""className"" : ""java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask"",
      ""exact"" : false,
      ""fileName"" : ""ScheduledThreadPoolExecutor.java"",
      ""lineNumber"" : 292,
      ""methodName"" : ""run""
    }, {
      ""className"" : ""java.util.concurrent.ThreadPoolExecutor"",
      ""exact"" : false,
      ""fileName"" : ""ThreadPoolExecutor.java"",
      ""lineNumber"" : 1110,
      ""methodName"" : ""runWorker""
    }, {
      ""className"" : ""java.util.concurrent.ThreadPoolExecutor$Worker"",
      ""exact"" : false,
      ""fileName"" : ""ThreadPoolExecutor.java"",
      ""lineNumber"" : 603,
      ""methodName"" : ""run""
    }, {
      ""className"" : ""java.lang.Thread"",
      ""exact"" : false,
      ""fileName"" : ""Thread.java"",
      ""lineNumber"" : 722,
      ""methodName"" : ""run""
    } ]
  },
  ""callStack"" : [ {
    ""className"" : ""org.apache.aries.blueprint.container.BlueprintContainerImpl"",
    ""exact"" : false,
    ""fileName"" : ""BlueprintContainerImpl.java"",
    ""lineNumber"" : 409,
    ""methodName"" : ""doRun""
  } ],
  ""mdc"" : {
    ""bundle.id"" : ""7"",
    ""bundle.version"" : ""1.0.1"",
    ""application"" : ""berbatik_dev"",
    ""bundle.name"" : ""org.apache.aries.blueprint.core""
  },
  ""threadInfo"" : {
    ""name"" : ""Blueprint Extender: 3""
  },
  ""loggerContext"" : {
    ""name"" : ""berbatik_dev""
  },
  ""timeStamp"" : 1360493985973
}
{code}

But I guess it's on Aries's side.",,,,,,,,,,,,,,,,,,,,,,,,
Referenced service throws UndeclaredThrowableException instead of real one,FELIX-2295,12462633,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jeanphi,jeanphi,21/Apr/10 10:20,02/May/13 02:29,13/Mar/19 22:56,17/May/10 12:14,karaf-1.4.0,,,,karaf 1.6.0,,Karaf,,,0,,,,,,"Project uses Blueprint. There are 3 bundles.

Bundle 1 - exports an API - API includes an interface X with a method Y sending an exception Z
Bundle 2 - implements the interface X of the API and exports it with <service> tag
Bundle 3 - uses the exported service of the API with <reference> tag (and gets without ""knowing"" it the service of Bundle 2)

Expected behavior: Bundle 3 calls the method Y of interface X and gets the exception Z (when thrown).
Obtained behavior: Bundle 3 calls the method Y of interface X and gets the exception:
UndeclaredThrowableException
caused by InvocationTargetException
caused by Z

This is 100% reproductible",XP / Ubuntu,,,,,,,,,,,,,,,,,,,ARIES-211,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-21 15:58:36.667,,,no_permission,,,,,,,,,,,,56444,,,Mon May 17 12:14:07 UTC 2010,,,,,,0|i0vtif:,183754,,,,,,,,21/Apr/10 15:58;justinedelson;This looks like Bundle 2 and Bundle 3 are seeing different versions of the class exception Z.,"21/Apr/10 16:37;jeanphi;Yes, which should not be the case as Bundle 2 and Bundle 3 both import Bundle 1 (API).","21/Apr/10 17:03;justinedelson;in your original description, it is not clear that Z is part of Bundle 1. Is that the case?

In any case, I'd suggest you attach a sample set of bundles illustrating this problem.","21/Apr/10 17:28;jeanphi;Exception Z is part of bundle 1.

I will try to provide a set of bundles asap, but please don't expect it too fast ;)",17/May/10 12:14;gnt;This one should be fixed by the upgrade to the aries blueprint implementation release.,,,,,,,,,,,,,,,,,,,,,,,,,,,
osgi:shutdown just hang when use karaf-client.jar,FELIX-1642,12436569,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,ffang,ffang,25/Sep/09 08:56,02/May/13 02:29,13/Mar/19 22:56,30/Oct/09 11:39,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"I tried with karaf/demos/web example, all is fine, I can use java -jar lib/karaf-client.jar to connect the karaf instance deployed in servlet container,
osgi:list return is ok,
but when I try to use osgi:shutdown to quit the client, the console just hang",,,,,,,,,,,,,,,,,,,,SSHD-43,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-25 09:00:55.668,,,no_permission,,,,,,,,,,,,57386,,,Fri Oct 30 11:39:56 UTC 2009,,,,,,0|i0vr13:,183352,,,,,,,,"25/Sep/09 09:00;gnt;Can you please attach thread dumps ?
Also, if it's easy to reproduce, try with equinox and see if it's better.  That could point to a problem in felix framework.","25/Sep/09 09:17;ffang;Hi Guillaume,

Thanks for the response, as the console hang, both ctrl + \  and kill -3 pid can't get the thread dump.
And might be a stupid question, how to replace my framework with equinox? 

Freeman ","25/Sep/09 09:30;ffang;Hi Guillaume,

I just test it with equinox as you suggested, it's same behavior.
Btw, the hang is easily to reproduce, I can see this problem each time.

Thanks
Freeman","25/Sep/09 10:32;eglynn;Could the client ""hang"" occur because the shutdown command is actually interpreted as ""shutdown the remote karaf instance"" as opposed to ""shutdown the local client""?

That's what I'm seeing when I use a karaf-client to interact with a remote karaf instance started standalone, or launched from MOP (though not running in a servlet container as per your use-case).
","25/Sep/09 11:16;eglynn;Here's a thread dump from a client after running shutdown:

karaf@root> shutdown
karaf@root> 2009-09-25 12:12:27
Full thread dump Java HotSpot(TM) Server VM (14.2-b01 mixed mode):

""ClientInputStreamPump"" daemon prio=10 tid=0x8fffa800 nid=0x84a runnable [0x8f5fe000]
   java.lang.Thread.State: RUNNABLE
	at java.io.FileInputStream.readBytes(Native Method)
	at java.io.FileInputStream.read(FileInputStream.java:199)
	at org.apache.sshd.client.channel.ChannelSession.pumpInputStream(ChannelSession.java:78)
	at org.apache.sshd.client.channel.ChannelSession$1.run(ChannelSession.java:50)

""pool-1-thread-1"" prio=10 tid=0x091b0800 nid=0x83f waiting on condition [0x8fcad000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0xb1084c68> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)

""pool-2-thread-1"" prio=10 tid=0x8ff1f400 nid=0x83d waiting on condition [0x8fcfe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0xb10f3890> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)

""Low Memory Detector"" daemon prio=10 tid=0x08c2d800 nid=0x834 runnable [0x00000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread1"" daemon prio=10 tid=0x08c2b800 nid=0x833 waiting on condition [0x00000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread0"" daemon prio=10 tid=0x08c28c00 nid=0x832 waiting on condition [0x00000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=10 tid=0x08c27400 nid=0x831 waiting on condition [0x00000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=10 tid=0x08c16c00 nid=0x830 in Object.wait() [0x90332000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0xb16c29c8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <0xb16c29c8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=10 tid=0x08c12000 nid=0x82f in Object.wait() [0x90383000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0xb16c29e8> (a java.lang.ref.Reference$Lock)
	at java.lang.Object.wait(Object.java:485)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
	- locked <0xb16c29e8> (a java.lang.ref.Reference$Lock)

""main"" prio=10 tid=0x08b6f000 nid=0x829 in Object.wait() [0xb739d000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0xb12f34b0> (a java.lang.Object)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.sshd.client.channel.AbstractClientChannel.waitFor(AbstractClientChannel.java:155)
	- locked <0xb12f34b0> (a java.lang.Object)
	at org.apache.felix.karaf.client.Main.main(Main.java:92)

""VM Thread"" prio=10 tid=0x08c0e000 nid=0x82e runnable 

""GC task thread#0 (ParallelGC)"" prio=10 tid=0x08b75800 nid=0x82a runnable 

""GC task thread#1 (ParallelGC)"" prio=10 tid=0x08b77000 nid=0x82b runnable 

""GC task thread#2 (ParallelGC)"" prio=10 tid=0x08b78800 nid=0x82c runnable 

""GC task thread#3 (ParallelGC)"" prio=10 tid=0x08b79c00 nid=0x82d runnable 

""VM Periodic Task Thread"" prio=10 tid=0x08c2f400 nid=0x835 waiting on condition 

JNI global references: 680

Heap
 PSYoungGen      total 12800K, used 12228K [0xb09f0000, 0xb16f0000, 0xb41f0000)
  eden space 12288K, 95% used [0xb09f0000,0xb1561b60,0xb15f0000)
  from space 512K, 99% used [0xb1670000,0xb16ef800,0xb16f0000)
  to   space 512K, 0% used [0xb15f0000,0xb15f0000,0xb1670000)
 PSOldGen        total 28672K, used 108K [0x949f0000, 0x965f0000, 0xb09f0000)
  object space 28672K, 0% used [0x949f0000,0x94a0b000,0x965f0000)
 PSPermGen       total 16384K, used 5235K [0x909f0000, 0x919f0000, 0x949f0000)
  object space 16384K, 31% used [0x909f0000,0x90f0ce40,0x919f0000)
","25/Sep/09 12:14;gnt;Shutdown will actually asks the server to shutdown the osgi framework.
That should also cause the client to be terminated because of the loss of connection with the ssh server somehow.
This thread dump is ok, as the main class is simply waiting for the client to terminate, which should happen automatically.
I think the prolem might be on the server side rather than the client.","28/Oct/09 13:21;gnt;The sshd issues fixes the problem, so we need to upgrade when it's released.","30/Oct/09 11:39;gnt;URL: http://svn.apache.org/viewvc?rev=831271&view=rev
Log:
FELIX-1642: osgi:shutdown just hang when using karaf-client.jar

Modified:
   felix/trunk/karaf/pom.xml
   felix/trunk/karaf/shell/ssh/src/main/java/org/apache/felix/karaf/shell/ssh/SshTerminal.java
",,,,,,,,,,,,,,,,,,,,,,,,
ClassLoader.getResources(String) do not search resources in imports,FELIX-466,12386509,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sauthieg,sauthieg,17/Jan/08 16:19,02/May/13 02:29,13/Mar/19 22:56,25/Jan/08 16:28,framework-1.0.0,,,,,,Framework,,,0,,,,,,"I've got a third party library that is using the JDK ClassLoader API to load some resources using the getResources(String) method that returns an Enumeration of available resources.

The ContentClassLoader of Felix do not override this method because it was marked as final in JDK <= 1.4.

A trick to do that would be to change the ContentClassLoader.findResources(String) (which is called by ClassLoader.getResources(String)) to search the resources using the ISearchPolicy.findResources() so that the imports are searched.",,,,,,,,,,,,,,,,,,,,FELIX-467,18/Jan/08 12:18;sauthieg;FELIX-466.patch;https://issues.apache.org/jira/secure/attachment/12373505/FELIX-466.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-25 16:28:53.181,,,no_permission,,,,,,,,,,,,58521,,,Fri Jan 25 16:28:53 UTC 2008,,,,,,0|i0vuc7:,183888,,,,,,,,"18/Jan/08 09:00;sauthieg;As a side note, I can add that ContentClassLoader.findResource(String) (the one that return only 1 URL, not an enumeration) only look for local content, even if the bundle's state is RESOLVED.
I guess it should use the ISearchPolicy too?",18/Jan/08 12:18;sauthieg;This super easy patch only delegate the ContentClassLoader finResource*() methods to the module's ISearchPolicy.,"25/Jan/08 16:28;rickhall;I committed this patch, I think the issue can be closed now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall watched bundles are restarted twice upon update,FELIX-1851,12439961,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,05/Nov/09 18:16,24/Apr/13 13:03,13/Mar/19 22:56,16/Dec/09 12:16,fileinstall-1.2.0,,,,fileinstall-2.0.8,,File Install,,,0,,,,,,"I am observing that bundles watched by fileinstall (1.2.0) are getting stopped & subsequently started twice when they are updated. First time, they are stopped and started by a call to update() and then because of a call to refreshPackages(). The scenario where this is happening is given below:

bundle A exports package p and is tracking service of type p.Foo.
bundle B imports a package p from A. It exports a service object with the service interface p.Foo.

I am updating bundle A and it is getting stopped and started twice.

The explanation given to me (thanks to Richard) is that:

""The update operation is defined as first stopping a bundle and restarting it after the update. This is once.

Since an updated bundle is not really updated until it is refreshed, when you refresh, bundle A's update is finalized by being refreshed, which causes it to stop and restart. This is twice. 
...
If bundle A was not being used, Felix would optimize this and do the refresh as part of the update, so it would only happen once.

If File Install always refreshes after an update, it would be better to change it to first stop all bundles being updated, then update all bundles, then refresh, then restart all updated bundles. This way they would only stop/restart once.""

I am not sure if the behavior has changed in newer version of fileinstall or not. If not, this will be a good change to make.


",generic,,,,,,,,,,,,,,,,,,,,24/Apr/13 13:03;draier;FELIX-1851.patch;https://issues.apache.org/jira/secure/attachment/12580282/FELIX-1851.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-16 12:16:48.051,,,no_permission,,,,,,,,,,,,57190,,,Wed Apr 24 13:03:18 UTC 2013,,,,,,0|i0vuav:,183882,,,,,,,,"16/Dec/09 12:16;gnt;Sending        fileinstall/pom.xml
Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Transmitting file data ..
Committed revision 891210.
","24/Apr/13 13:03;draier;Hi,

The fix that has been submitted here only works when you have the ""felix.fileinstall.bundles.new.start"" set to true - when auto start is not used , I have exactly the same issue - bundle is restarted first by the framework, then by the refresh. 
I did a patch to handle this case - can you confirm the patch is correct and can be included in a next release ?

Regards,
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slightly invalid logic for pre-checking dynamic imports which cause the framework the grab the lock with no real need,FELIX-3766,12616670,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,19/Nov/12 00:41,05/Feb/13 18:12,13/Mar/19 22:56,05/Feb/13 18:12,framework-4.0.2,,,,framework-4.2.0,,Framework,,,0,,,,,,"Proposed patch

{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/StatefulResolver.java b/framework/src/main/java/org/apache/felix/framework/StatefulResolver.java
index cc9a387..7255649 100644
--- a/framework/src/main/java/org/apache/felix/framework/StatefulResolver.java
+++ b/framework/src/main/java/org/apache/felix/framework/StatefulResolver.java
@@ -39,6 +39,7 @@ import org.apache.felix.framework.resolver.ResolverWire;
 import org.apache.felix.framework.util.ShrinkableCollection;
 import org.apache.felix.framework.util.Util;
 import org.apache.felix.framework.util.manifestparser.R4Library;
+import org.apache.felix.framework.wiring.BundleCapabilityImpl;
 import org.apache.felix.framework.wiring.BundleRequirementImpl;
 import org.apache.felix.framework.wiring.BundleWireImpl;
 import org.osgi.framework.Bundle;
@@ -755,6 +756,44 @@ class StatefulResolver
             attrs);
         List<BundleCapability> candidates = findProviders(req, false);
 
+        // Try to find a dynamic requirement that matches the capabilities.
+        BundleRequirementImpl dynReq = null;
+        for (int dynIdx = 0;
+             (candidates.size() > 0) && (dynReq == null) && (dynIdx < dynamics.size());
+             dynIdx++)
+        {
+            for (Iterator<BundleCapability> itCand = candidates.iterator();
+                 (dynReq == null) && itCand.hasNext(); )
+            {
+                BundleCapability cap = itCand.next();
+                if (CapabilitySet.matches(
+                        (BundleCapabilityImpl) cap,
+                        ((BundleRequirementImpl) dynamics.get(dynIdx)).getFilter()))
+                {
+                    dynReq = (BundleRequirementImpl) dynamics.get(dynIdx);
+                }
+            }
+        }
+
+        // If we found a matching dynamic requirement, then filter out
+        // any candidates that do not match it.
+        if (dynReq != null)
+        {
+            for (Iterator<BundleCapability> itCand = candidates.iterator();
+                 itCand.hasNext(); )
+            {
+                BundleCapability cap = itCand.next();
+                if (!CapabilitySet.matches(cap, dynReq.getFilter()))
+                {
+                    itCand.remove();
+                }
+            }
+        }
+        else
+        {
+            candidates.clear();
+        }
+
         return !candidates.isEmpty();
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-30 04:29:59.423,,,no_permission,,,,,,,,,,,,258526,,,Tue Feb 05 18:12:45 UTC 2013,,,,,,0|i0ktxj:,119667,,,,,,,,"30/Nov/12 04:29;rickhall;I think there was a reason that was omitted from ResolveImpl.getDynamicImportCandidates(), but off the top of my head I cannot think of why. Also, I notice that this isn't technically 100% correct since you can have multiple dynamic requirements that match a given package, thus we may pick the wrong one to filter. We should probably make dynReq a list of potentially matching dynamic requirements and then filter candidates that don't match any of them.","05/Feb/13 18:12;rickhall;Since I couldn't think of any reasons why not, I went ahead and basically applied the supplied patch. This pre-check is still just an approximation, since it doesn't take into account resolver hooks, but it should make it more accurate. Please close if satisfied, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible exception when accessing headers,FELIX-3273,12535271,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,15/Dec/11 08:35,05/Feb/13 14:24,13/Mar/19 22:56,05/Feb/13 14:24,framework-3.0.9,,,,framework-4.2.0,,,,,0,,,,,,"{code}
ERROR: Bundle org.ops4j.pax.logging.pax-logging-service [3] EventDispatcher: Error during dispatch. (java.util.NoSuchElementException)
java.util.NoSuchElementException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:796)
	at java.util.HashMap$ValueIterator.next(HashMap.java:822)
	at org.apache.felix.framework.BundleImpl.getCurrentLocalizedHeader(BundleImpl.java:334)
	at org.apache.felix.framework.Felix.getBundleHeaders(Felix.java:1428)
	at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:311)
	at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:293)
	at org.ops4j.pax.logging.service.internal.PaxLoggerImpl.setDelegateContext(PaxLoggerImpl.java:101)
	at org.ops4j.pax.logging.service.internal.PaxLoggerImpl.debug(PaxLoggerImpl.java:131)
	at org.ops4j.pax.logging.service.internal.PaxLoggingServiceImpl.log(PaxLoggingServiceImpl.java:149)
	at org.ops4j.pax.logging.service.internal.PaxLoggingServiceImpl.log(PaxLoggingServiceImpl.java:115)
	at org.ops4j.pax.logging.service.internal.FrameworkHandler.bundleChanged(FrameworkHandler.java:93)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:807)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:729)
	at org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:949)
	at org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
	at org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
	at java.lang.Thread.run(Thread.java:680)
{code}

The problem happened on 3.0.9 but looking at the getLocalizedHeaders method, nothing has changed so the bug should still be valid for 4.0.x

I suppose the problem is in the BundleImpl#uninstall method which may clear the cached headers without populating with the default.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-12-15 14:19:43.025,,,no_permission,,,,,,,,,,,,220955,,,Tue Feb 05 14:24:58 UTC 2013,,,,,,0|i1auxz:,271479,,,,,,,,"15/Dec/11 14:19;rickhall;Looking at the source for BundleImpl.uninstall(), it does populate with the default locale as described in the long comment. Unless there is some bug in the logic, it looks like it should be happening. If this is repeatable, perhaps you can set a breakpoint in the uninstall() and see if it does get populated or not. Issue FELIX-2840 seems potentially related.",16/Jun/12 19:18;rickhall;Any followup on this?,"31/Jan/13 18:53;gnt;I don't have any way to reproduce this issue, as I did not really track it.

However, and maybe this is an edge case, what if someone calls  {{bundle.uninstall()}} two times consecutively ?
Or maybe if the bundle has been modified and two threads call getHeaders() concurrently ? I see a gap between the time the cached headers are cleared and the time they are populated.","31/Jan/13 19:39;rickhall;Where is the gap? Inside BundleImpl.uninstall() we do this:

        synchronized (m_cachedHeaders)
        {
            if ((m_cachedHeaders.size() > 1)
                || !m_cachedHeaders.containsKey(Locale.getDefault().toString()))
            {
                m_cachedHeaders.clear();
                Map map = getCurrentLocalizedHeader(Locale.getDefault().toString());
            }
        }

So, we hold the lock while clearing the cache and populating it with the default locale. If another thread came in, it wouldn't try to cache the default locale again because cache size would be 1 and it would contain the default locale.

Unless there was some weird possibility that the thread had a different default locale.","31/Jan/13 20:42;gnt;Yeah, the uninstall() path won't work, but I think the second use case I mentioned is valid.

bundle.getHeaders() does not hold any lock while calling getCurrentLocalizedHeader, so if the bundle is modified, and 2 threads call getHeaders() concurrently, there may be a problem.

The first one will clear the headers using
                else if (getLastModified() > m_cachedHeadersTimestamp)
                {
                    m_cachedHeaders.clear();
                }

while the second one may throw an exception because the updateHeaderCache will not be called yet by the first thread, thus having an empty map and throwing the exception.
","05/Feb/13 14:24;rickhall;There was one place we were accessing the headers cache without the lock, so I fixed that. Additionally, I could see that there was some issue around clearing the cache on uninstalled and trying to populate it with the default locale which always led to a check-then-act scenario. To avoid this, I decided against caching the final default locale in the header cache and instead put it in a separate variable. That way the caching of the default locale can be done atomically when uninstalling the bundle. Hopefully, that fixes this issue. Please close if satisfied, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,
problem with URLHandlers when running 2 frameworks in one jvm in separate class loaders,FELIX-3840,12626520,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,itay.hindy,itay.hindy,08/Jan/13 09:23,01/Feb/13 21:17,13/Mar/19 22:56,01/Feb/13 21:17,framework-4.0.2,framework-4.0.3,,,framework-4.2.0,,Framework,,,0,,,,,,"This bug happens with 4.0.2 and 4.1.0-SNAPSHOT framework versions.
Run embedded felix with tomcat as describe in http://felix.apache.org/site/apache-felix-framework-launching-and-embedding.html and as shown in http://heapdump.wordpress.com/2010/03/25/osgi-enabled-war/

One war activate Felix and works great. Adding another war gives the below error :
""Unable to update the bundle. (java.net.MalformedURLException: Unknown protocol: obr""

After debugging I saw the problem is generally in the URLHandlers classes implementation.
In URLHandlersStreamHandlerProxy class the getStreamHandlerService function does not return the correct value. The below code fails since framework is from current webapp class loader and Felix is from first webapp class loader
if (framework instanceof Felix)
{
	service = ((Felix) framework).getStreamHandlerService(m_protocol);
}
so we try to execute the below code and fail with method not recognize error
service = m_action.invoke(
m_action.getMethod(framework.getClass(), ""getStreamHandlerService"", STRING_TYPES), 
framework, new Object[]{m_protocol});

After I set getStreamHandlerService function to public in Felix class it works.

Then in URLHandlersStreamHandlerProxy  class the below function fails (for the setURL method) since m_service is null

public Object invoke(Object obj, Method method, Object[] params)
	throws Throwable
{
	try
	{
		Class[] types = method.getParameterTypes();
		if (""parseURL"".equals(method.getName()))
		{
			types[0] = m_service.getClass().getClassLoader().loadClass(
				URLStreamHandlerSetter.class.getName());
			params[0] = Proxy.newProxyInstance(
				m_service.getClass().getClassLoader(), new Class[]{types[0]}, 
				(URLHandlersStreamHandlerProxy) params[0]);
		}
		return m_action.invokeDirect(m_action.getMethod(m_service.getClass(), 
			method.getName(), types), m_service, params);
	} 
	catch (Exception ex)
	{
		throw ex;
	}
}
",windows 7 64bit,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-08 11:10:46.482,,,no_permission,,,,,,,,,,,,303126,,,Fri Feb 01 21:17:21 UTC 2013,,,,,,0|i17853:,250287,,,,,,,,"08/Jan/13 11:10;karlpauls;1. we need to set the class accessible - its form a different classloader so we don't have visibility. 
2. I need to investigate why m_service is null - it shouldn't be.

I'll try to get to it asap.","01/Feb/13 21:17;karlpauls;As I said, the problem was that we didn't use the getDeclaredMethod. That was a problem since the classes are loaded by different classloaders. Now, we get the service even so the methods are not public.

Furthermore, there was a bug in the proxy (the nullpointer you did see). I fixed this as well. Please close this issue if it works for you (or reopen if not).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getClassloader permission,FELIX-3367,12544596,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,slimmy,slimmy,29/Feb/12 12:10,01/Feb/13 21:14,13/Mar/19 22:56,01/Feb/13 21:14,framework-3.2.2,,,,framework-4.2.0,,Framework,,,0,,,,,,"When I deny getClassloader with conditional permission admin for a specific bundle the bundle throws a securityexception when starting the bundle. 

org.osgi.framework.BundleException: Activator start error in bundle HelloBundle [3].
        at org.apache.felix.framework.Felix.activateBundle (Felix.java:1908)
        at org.apache.felix.framework.Felix.startBundle (Felix.java:1783)
        at org.apache.felix.framework.BundleImpl.start (BundleImpl.java:919)
        at com.technicolor.osgi.bundle.bm.tasks.StartTask.run (StartTask.java:77)
        at com.technicolor.osgi.bundle.bm.TaskQueue$1.run (TaskQueue.java:92)
        at java.lang.Thread.run (Unknown Source, bco=16)
Caused by: java.lang.SecurityException: java.security.AccessControlException: permission failure
        at org.apache.felix.framework.Felix$1.checkPermission (Felix.java:586)
        at java.lang.ClassLoader.getParent (Unknown Source, bco=36)
        at org.apache.felix.framework.ModuleImpl.getBootDelegationClassLoader (ModuleImpl.java:1654)
        at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation (ModuleImpl.java:697)
        at org.apache.felix.framework.ModuleImpl.access$400 (ModuleImpl.java:71)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass (ModuleImpl.java:1768)
        at java.lang.ClassLoader.loadClass (Native Method)
        at java.lang.ClassLoader.handleLoadClass (Native Method)
        at java.lang.ClassLoader.handleLoadClass (Native Method)
        at HelloBundle.Activator.<init> (Activator.java:12)
        at org.apache.felix.framework.Felix.createBundleActivator (Felix.java:3716)
        at org.apache.felix.framework.Felix.activateBundle (Felix.java:1856)
        ... 5 more
Caused by: java.security.AccessControlException: permission failure
        at java.security.AccessControlContext.checkPermission (Unknown Source, bco=47)
        at java.security.AccessController.checkPermission (Unknown Source, bco=21)
        at java.lang.SecurityManager.checkPermission (Unknown Source, bco=4)
        at org.apache.felix.framework.Felix$1.checkPermission (Felix.java:587)
        ... 16 more

shouldn't ""activator = (BundleActivator) clazz.newInstance();"" in createBundleActivator happen in doPrivileged ? For example:
            try {
              activator = (BundleActivator) AccessController.doPrivileged(new PrivilegedExceptionAction() {
              public Object run() throws Exception {
                return (BundleActivator) clazz.newInstance();
              }
            });
            } catch (PrivilegedActionException e) {
              throw e.getException();
            }     
works.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-02-29 20:14:04.765,,,no_permission,,,,,,,,,,,,229782,,,Fri Feb 01 21:14:59 UTC 2013,,,,,,0|i1avd3:,271547,,,,,,,,"29/Feb/12 20:14;rickhall;It looks like the issue is in getBootDelegationClassLoader(), we should be have a privileged block around getting the parent class loader, which is what is causing the issue. Putting the privileged block around creating the instance is probably too broad.","16/Jun/12 19:21;rickhall;Karl, take a look and see if my suggested fix is correct, thanks.",01/Feb/13 21:14;karlpauls;I made it so that we call getParent in a secure action. This should fix this issues. Please close if it works for you. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle.start() returns without starting the bundle,FELIX-3713,12612034,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,16/Oct/12 13:45,01/Feb/13 21:05,13/Mar/19 22:56,01/Feb/13 21:05,framework-4.0.2,,,,framework-4.2.0,,Framework,,,1,,,,,,"See email exchange between Sahoo & Richard that happened in dev alias on 16th Oct 2012 for issue details:

> While investigating some issues in GlassFish, what we are seeing is that even if our code is calling bundle.start(START_TRANSIENT), the bundle is not getting started immediately, nor is the code blocking. It simply returns without Bundle's activator getting called and bundle.getState() == RESOLVED. We see this happening when there is a start level change in progress. We are currently using Felix 4.0.2. Looking at the code, I see this to be by design, but isn't it a non-compliant behavior? Should bundle.start() not wait until the bundle is started?

The spec has always been a little lenient about how start levels are processed to give leeway to the frameworks. For us, we viewed this as somewhat of a race condition between threads starting bundles and the start level thread.

However, in the transient case, I wouldn't expect it to remain in RESOLVED state. If its start level wasn't met, it should have thrown an exception. Yet there is a chance in the transient case that it could start asynchronously...not sure if this would really be problematic for you or not...

But it shouldn't remain in the RESOLVED state. Looking at the code, I think there is a bug in this scenario where a transient bundle that is handled asynchronously will not actually end up getting started since the start level thread checks the persistent state of the bundle, which is not set for transient bundles.

You could definitely open up a bug for this last issue...

-> richard
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-14 03:27:23.026,,,no_permission,,,,,,,,,,,,248986,,,Fri Feb 01 21:05:11 UTC 2013,,,,,,0|i0a3av:,56808,,,,,,,,"14/Nov/12 03:27;tangyong;I think that the problem needs to be fixed in felix, I offer a real use case as following:

On glassfish starting, there is a Start Level thread to adjust Start Level, in the process of executing the Start Level thread, I have a bundle tracker to trace some bundle to start the bundle in order to finish something. I used bundle.start(Bundle.START_TRANSIENT) to start the bundle while tracing the bundle. However, the bundle's activator was not executed. If I used  bundle.start() method to start the bundle while tracing the bundle, although the bundle's activator was executed, the bundle's ondemand starting(on some cases, the bundle maybe started by other handling logic) disappeared because bundle.start() method keeped bundle's state persisted.

So, I wish that felix team can fix it.

Thanks.
--Tang","14/Nov/12 04:27;rickhall;Yep, that's why we opened an issue on it. Thanks.","30/Nov/12 05:31;rickhall;I'm not sure I see a great solution for this one. One possibility is to somehow pass along the fact in the tuple that this bundle is being transiently started as opposes to being a bundle that is persistently stopped. This still treats the bundle asynchronously and potentially is somewhat complicated since we'd somehow need to mark the bundle as STARTING so that it couldn't be stopped before it was started.

Another approach is to treat transient bundles differently and directly activate them if their start level is met (or fail if it is not). The downside of this approach is that they may activate slightly out of order since it could not be coordinated with the start level thread's active start level.

I think the latter approach is probably the better of the two.","05/Dec/12 06:35;tangyong;Thanks richard's suggestions very much. 
I have a solution for this problem:

The problem happened on the following codes(felix.java Line : 1820, and I used felix 4.0.2):

 if (!Thread.currentThread().getName().equals(FrameworkStartLevelImpl.THREAD_NAME))
            {
                synchronized (m_startLevelBundles)
                {
                    if (!m_startLevelBundles.isEmpty())
                    {
                        // Only add the bundle to the start level bundles
                        // being process if it is not already there.
                        boolean found = false;
                        for (StartLevelTuple tuple : m_startLevelBundles)
                        {
                            if (tuple.m_bundle == bundle)
                            {
                                found = true;
                            }
                        }
                        if (!found)
                        {
...
                            m_startLevelBundles.add(new StartLevelTuple(bundle, bundleLevel));
                        }
                        return;
                    }
                }

My solution is that :

1) in Felix class, adding a public method to observer  whether m_startLevelBundles is empty or not until FelixStartLevel thread finished.
2) adding an api into StartLevel Service to make user or client see whether current bundle(tuple) is in m_startLevelBundles by 1)

In this way, once finding current bundle is in m_startLevelBundles, client will wait until FelixStartLevel thread finished and then execute start(int) method.

Do you agree with me?

Thanks
--Tang","05/Dec/12 11:39;tangyong;>2) adding an api into StartLevel Service to make user or client see whether current bundle(tuple) is in m_startLevelBundles by 1)
I know that adding api for StartLevel will change OSGi Core Specification, maybe you do not agree with me, however, from a user's perspective, this should be a good way to resolve such a problem, after all, in current OSGi Core Specification, when appearing such a scene, there is not a clear description.","06/Dec/12 00:59;tangyong;Hi sahoo, richard,

About the issue happened on glassfish, according to richard's reply, while attempting to execute ""bundle.start(Bundle.START_TRANSIENT)"" and the bundle is used by FelixStartLevel thread, using the following method should resolve the issue,

1) before executing ""bundle.start(Bundle.START_TRANSIENT), using StartLevel.getStartLevel() to seeing whether active start level value of the Framework is equal to the value of ""glassfish.osgi.start.level.final"".
2) if being equal, this means that basiclly Framework Acitve StartLevel has been adjusted, and m_startLevelBundles has removed the transient bundle, then, we start to execute ""bundle.start(Bundle.START_TRANSIENT).
3) if not being equal, we do a loop until active start level value of the Framework is equal to the value of ""glassfish.osgi.start.level.final"", then, we start to execute ""bundle.start(Bundle.START_TRANSIENT).

I will spend some time to validate the above.

Thanks
--Tang","01/Feb/13 21:05;rickhall;I just committed a patch that modifies start level handling such that we always process transiently started bundles synchronously, which means they'll either be started on the calling thread if they meet the active start level or they will throw an exception if they don't. Please close if satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,
GOGO - key press handling broken for non-Firefox-browsers,FELIX-3859,12628530,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,bö,bö,21/Jan/13 10:43,21/Jan/13 21:05,13/Mar/19 22:56,21/Jan/13 21:05,,,,,webconsole-gogo-plugin-1.0.0,,Gogo Shell,Web Console,,0,,,,,,revision 1345205 changed the key-event-handling in gogo.js. The keydown event (which is delivered first) calls a method (ignoreKey) which stops the event delivery for this key press on all browsers but Firefox.,,,,,,,,,,,,,,,,,,,,,21/Jan/13 10:43;bö;patch.txt;https://issues.apache.org/jira/secure/attachment/12565763/patch.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-21 15:27:40.77,,,no_permission,,,,,,,,,,,,306614,,,Mon Jan 21 21:05:49 UTC 2013,,,,,,0|i19wzz:,265980,,,,,,,,21/Jan/13 10:43;bö;[~fmeschbe] I added the proposed patch,21/Jan/13 15:27;fmeschbe;Thanks for the patch. Investigating.,"21/Jan/13 15:39;fmeschbe;Hmm, this patch does not seem to work.

Tested on Windows: Works in FF but neither in Chrome nor IE 9
Tested on MacOSX: Works in FF but not in Safari; partially works in Chrome

On the non-working systems no keyboard input is accepted at all.

In Chrome on OSX keyboard input works with displaying keys as them being pressed but the backspace key actually goes back in the browser history instead of killing the previous character.","21/Jan/13 15:41;bö;Sorry to ask, but did you clear all caches? Tested with Chrome, Safari, Firefox, Opera and IE8...","21/Jan/13 15:59;bö;Update: the local echo of the pressed characters works for all browsers I tested but I agree that the handling of ""special"" chars like the backspace leads to different results.","21/Jan/13 21:05;fmeschbe;""Cache clear"" was the key: Yes it works. Sorry for the noise.

Applied the patch in Rev. 1436617",21/Jan/13 21:05;fmeschbe;This can be considered fixed.,,,,,,,,,,,,,,,,,,,,,,,,,
DependencyManager stop can trigger IndexOutOfBoundsException,FELIX-3402,12547579,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,bramk,bramk,22/Mar/12 12:01,15/Jan/13 10:20,13/Mar/19 22:56,15/Jan/13 10:20,dependencymanager-3.0.0,,,,,,Dependency Manager,,,0,,,,,,"DependencyManager.clear(), pre FELIX-3042 known as DependencyActivatorBase.cleanup(), iterates over unprotected list determining size only at the start. 

{code}
build	22-Mar-2012 10:03:08	java.lang.IndexOutOfBoundsException: Index: 66, Size: 66
build	22-Mar-2012 10:03:08		at java.util.ArrayList.RangeCheck(ArrayList.java:547)
build	22-Mar-2012 10:03:08		at java.util.ArrayList.get(ArrayList.java:322)
build	22-Mar-2012 10:03:08		at java.util.Collections$SynchronizedList.get(Collections.java:1816)
build	22-Mar-2012 10:03:08		at java.util.Collections$UnmodifiableList.get(Collections.java:1154)
build	22-Mar-2012 10:03:08		at org.apache.felix.dm.DependencyActivatorBase.cleanup(DependencyActivatorBase.java:301)
build	22-Mar-2012 10:03:08		at org.apache.felix.dm.DependencyActivatorBase.stop(DependencyActivatorBase.java:90)
build	22-Mar-2012 10:03:08		at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:663)
build	22-Mar-2012 10:03:08		at org.apache.felix.framework.Felix.stopBundle(Felix.java:2361)
build	22-Mar-2012 10:03:08		at org.apache.felix.framework.BundleImpl.stop(BundleImpl.java:980)
build	22-Mar-2012 10:03:08		at org.apache.felix.framework.BundleImpl.stop(BundleImpl.java:967)
{code}",,,,,,,,,,,,,,,,,,,,,22/Mar/12 12:16;bramk;FELIX-3402-sync.patch;https://issues.apache.org/jira/secure/attachment/12519431/FELIX-3402-sync.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-15 10:20:40.987,,,no_permission,,,,,,,,,,,,232677,,,Tue Jan 15 10:20:40 UTC 2013,,,,,,0|i17mav:,252582,,,,,,,,"15/Jan/13 10:20;marrs;Reviewed the patch, applied it in a slightly modified way:
 - using an array instead of a (more expensive) LinkedList;
 - not using getComponent but synchronizing on the list directly.

The big question however is, if this happens, who was modifying this list and can this fix have a side effect in that scenario that leaves double or not stopped components dangling. That's not necessarily something in scope for this fix though.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aspect and Adapter filter indices to not handle components that have been bound with multiple interfaces correctly.,FELIX-3828,12625108,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,uiterlix,uiterlix,uiterlix,22/Dec/12 11:39,22/Dec/12 11:40,13/Mar/19 22:56,22/Dec/12 11:40,,,,,,,Dependency Manager,,,0,,,,,,Both the Aspect and Adapter filter indices currently ignore the objectClass property in returning service references through the getAllServiceReferences() and the serviceChanged() methods.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,301644,,,Sat Dec 22 11:40:08 UTC 2012,,,,,,0|i16v93:,248195,,,,,,,,22/Dec/12 11:40;uiterlix;Added check against objectClass.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle#getResource always try to resolve the bundle,FELIX-3803,12618720,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,04/Dec/12 10:51,14/Dec/12 16:33,13/Mar/19 22:56,14/Dec/12 16:25,,,,,framework-4.2.0,,Framework,,,0,,,,,,"I think the behavior should be similar to Bundle#loadClass, i.e. only try to resolve the bundle if the bundle is in the INSTALLED state.  The spec says:  ""If this bundle’s state is INSTALLED, this method must attempt to resolve this bundle before attempting to get the specified resource. """,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-12-14 16:28:54.926,,,no_permission,,,,,,,,,,,,295942,,,Fri Dec 14 16:33:39 UTC 2012,,,,,,0|i143bb:,231999,,,,,,,,06/Dec/12 15:36;gnt;The same problem also concerns Bundle#findEntries,14/Dec/12 16:25;gnt;Fixed in  http://svn.apache.org/viewvc?rev=1421961&view=rev,"14/Dec/12 16:28;rickhall;I assume the issue here is to avoid grabbing the global lock?

I think in the past the INSTALLED check was done in the resolver back when it was a single root (i.e., one bundle at a time) resolver. I guess we sort of lost that check when we moved to a multi-root resolve approach in 4.0.

Putting a check back in probably makes sense, but we should probably do it in Felix.resolveBundleRevision() since that is used from multiple places, so they could all benefit.","14/Dec/12 16:33;gnt;Yes, the goal is to avoid grabbing the lock for no reason.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When a bundle registers a service, the bundle lock is obtained without any real purpose",FELIX-3761,12616379,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,16/Nov/12 09:15,14/Dec/12 16:24,13/Mar/19 22:56,14/Dec/12 16:24,framework-4.0.2,,,,framework-4.2.0,,,,,0,,,,,,"It leads to the following kind of deadlocks:

{code}

""Felix WebConsole worker"" Id=170 in WAITING on lock=[Ljava.lang.Object;@108a93d9
    at java.lang.Object.wait(Native Method)
    at java.lang.Object.wait(Object.java:485)
    at org.apache.felix.framework.Felix.acquireBundleLock(Felix.java:5203)
    at org.apache.felix.framework.Felix.registerService(Felix.java:3452)
    at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:346)
    at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:320)
    at org.apache.felix.webconsole.internal.core.BundlesServlet.activate(BundlesServlet.java:132)
    at org.apache.felix.webconsole.internal.servlet.PluginHolder$InternalPlugin.doGetConsolePlugin(PluginHolder.java:752)
    at org.apache.felix.webconsole.internal.servlet.PluginHolder$Plugin.getConsolePlugin(PluginHolder.java:535)
    at org.apache.felix.webconsole.internal.servlet.PluginHolder.getPlugin(PluginHolder.java:205)
    at org.apache.felix.webconsole.internal.servlet.OsgiManager.initInternalPlugins(OsgiManager.java:1016)
    at org.apache.felix.webconsole.internal.servlet.OsgiManager.doUpdateConfiguration(OsgiManager.java:981)
    at org.apache.felix.webconsole.internal.servlet.OsgiManager$6.run(OsgiManager.java:930)
    at org.apache.felix.webconsole.internal.servlet.Executor$Worker.run(Executor.java:67)

""FelixFrameworkWiring"" Id=168 in WAITING on lock=java.lang.Object@3d6bca49
    at java.lang.Object.wait(Native Method)
    at java.lang.Object.wait(Object.java:485)
    at org.apache.felix.webconsole.internal.servlet.Executor.shutdown(Executor.java:45)
      - locked org.apache.felix.webconsole.internal.servlet.Executor@21875b11
    at org.apache.felix.webconsole.internal.servlet.OsgiManager.dispose(OsgiManager.java:407)
    at org.apache.felix.webconsole.internal.KarafOsgiManagerActivator.stop(KarafOsgiManagerActivator.java:52)
    at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:667)
    at org.apache.felix.framework.Felix.stopBundle(Felix.java:2604)
    at org.apache.felix.framework.Felix$RefreshHelper.stop(Felix.java:4961)
    at org.apache.felix.framework.Felix.refreshPackages(Felix.java:4203)
    at org.apache.felix.framework.FrameworkWiringImpl.run(FrameworkWiringImpl.java:172)
    at java.lang.Thread.run(Thread.java:680)
{code}

There's really no need to grab the bundle lock because the bundle is necessarily starting / active / stopping, else an exception would have been thrown when calling the registerService because the BundleContext object would have been invalidated, and the registry itself is synchronized.  
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-30 04:20:12.006,,,no_permission,,,,,,,,,,,,258157,,,Fri Dec 14 16:24:13 UTC 2012,,,,,,0|i0kncv:,118601,,,,,,,,"16/Nov/12 09:18;gnt;I'm proposing the following patch, which is only about removing the bundle lock access in the Felix#registerService method
{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/Felix.java b/framework/src/main/java/org/apache/felix/framework/Felix.java
index 8ffec89..08b6d90 100644
--- a/framework/src/main/java/org/apache/felix/framework/Felix.java
+++ b/framework/src/main/java/org/apache/felix/framework/Felix.java
@@ -3446,51 +3446,32 @@ public class Felix extends BundleImpl implements Framework
             throw new IllegalArgumentException(""Service object cannot be null."");
         }
 
-        // Acquire bundle lock.
-        try
-        {
-            acquireBundleLock(bundle, Bundle.STARTING | Bundle.ACTIVE | Bundle.STOPPING);
-        }
-        catch (IllegalStateException ex)
-        {
-            throw new IllegalStateException(
-                ""Can only register services while bundle is active or activating."");
-        }
-
         ServiceRegistration reg = null;
 
-        try
+        // Check to make sure that the service object is
+        // an instance of all service classes; ignore if
+        // service object is a service factory.
+        if (!(svcObj instanceof ServiceFactory))
         {
-            // Check to make sure that the service object is
-            // an instance of all service classes; ignore if
-            // service object is a service factory.
-            if (!(svcObj instanceof ServiceFactory))
+            for (int i = 0; i < classNames.length; i++)
             {
-                for (int i = 0; i < classNames.length; i++)
+                Class clazz = Util.loadClassUsingClass(svcObj.getClass(), classNames[i], m_secureAction);
+                if (clazz == null)
                 {
-                    Class clazz = Util.loadClassUsingClass(svcObj.getClass(), classNames[i], m_secureAction);
-                    if (clazz == null)
-                    {
-                        throw new IllegalArgumentException(
-                            ""Cannot cast service: "" + classNames[i]);
-                    }
-                    else if (!clazz.isAssignableFrom(svcObj.getClass()))
-                    {
-                        throw new IllegalArgumentException(
-                            ""Service object is not an instance of \""""
-                            + classNames[i] + ""\""."");
-                    }
+                    throw new IllegalArgumentException(
+                        ""Cannot cast service: "" + classNames[i]);
+                }
+                else if (!clazz.isAssignableFrom(svcObj.getClass()))
+                {
+                    throw new IllegalArgumentException(
+                        ""Service object is not an instance of \""""
+                        + classNames[i] + ""\""."");
                 }
             }
-
-            reg = m_registry.registerService(bundle, classNames, svcObj, dict);
-        }
-        finally
-        {
-            // Always release bundle lock.
-            releaseBundleLock(bundle);
         }
 
+        reg = m_registry.registerService(bundle, classNames, svcObj, dict);
+
         // Check to see if this a listener hook; if so, then we need
         // to invoke the callback with all existing service listeners.
         if (ServiceRegistry.isHook(
{code}
","30/Nov/12 04:20;rickhall;Perhaps I'm missing something, but if we remove the bundle lock, then isn't it possible that the bundle could stop before the service is registered and thus the service would get missed when unregistering all services when the bundle is stopped? Ultimately, this would leave the service in the service registry even though the bundle is stopped.",30/Nov/12 06:51;fmeschbe;Looking from the Web Console side of the things: I never have seen this Executor class. What is this about ?,"30/Nov/12 07:12;rickhall;Just to follow up with a little more detail as to why I think the lock is necessary...

It is true that we check if the bundle is in the correct state in BundleContextImpl.registerService(), but if we don't prevent the bundle's state from changing then the bundle could technically be stopped in between when the validity check occurs in BundleContextImpl and when we acquire the service registry lock in Felix.registerService(). This is appears to be a typical check-then-act scenario.",30/Nov/12 07:12;gnt;The web console Executor comes from FELIX-3760,"30/Nov/12 08:28;gnt;I think the main problem is that bundles are supposed to be able to register services while stopping, but this rule isn't really possible with felix now, because a bundle being stopped can't really register services from another thread because of the bundle lock being grabbed while calling the activator.

I agree that with the proposed patch the bundle could be stopped while registering a service, so between the check and the actual registration.
I think a better way would be to check the validity of the bundle context from inside the service registry.
I'll work on an improved patch.
","30/Nov/12 08:34;rickhall;Checking the validity inside the service registry is complicated by the fact that it still needs to hold the bundle lock to do so for the entire until it is done registering the service, which is why the call to it was wrapped with a bundle lock in the first place. Wrapping the code inside service registry method is no different than wrapping it on the outside. Further, the code inside doesn't have access to these locking mechanisms and would require breaking abstractions to do so.","30/Nov/12 08:50;gnt;I disagree.  It's not about grabbing the bundle lock inside the registry, it's just about checking that the bundle context is still valid.
Something like:

{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java b/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
index 4a6aa8e..357d557 100644
--- a/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
+++ b/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
@@ -118,6 +118,10 @@ public class ServiceRegistry
 
         synchronized (this)
         {
+            if (bundle.getBundleContext() == null) {
+                throw new IllegalStateException(""Invalid BundleContext."");
+            }
+
             // Create the service registration.
             reg = new ServiceRegistrationImpl(
                 this, bundle, classNames, new Long(m_currentServiceId++), svcObj, dict);
{code}

It should solve all problems.  While the activator is running, the bundle will still be able to register services from a different thread.  Once the activator has run, felix will invalidate the bundle context, then unregister all services.  So even is a service is registered while the activator is running (or even after it has run but before the context is invalidated), that service will be correctly unregistered.
If the service is being registered after the bundle context has been invalidated, it will be rejected as expected.

It may happen there is still a gap between the service registration thread being run and the check of the bundle context validity, which means the bundle could be restarted and the service registered.  I agree that's bad and the service registry should be given the calling bundle context instead of the bundle itself, which would make get rid of that problem by making sure the context is still valid.


So I think this could be solved the following way:
{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/BundleContextImpl.java b/framework/src/main/java/org/apache/felix/framework/BundleContextImpl.java
index d7bbfa0..e7a3f4e 100644
--- a/framework/src/main/java/org/apache/felix/framework/BundleContextImpl.java
+++ b/framework/src/main/java/org/apache/felix/framework/BundleContextImpl.java
@@ -343,7 +343,7 @@ class BundleContextImpl implements FelixBundleContext
             }
         }
 
-        return m_felix.registerService(m_bundle, clazzes, svcObj, dict);
+        return m_felix.registerService(this, clazzes, svcObj, dict);
     }
 
     public <S> ServiceRegistration<S> registerService(
@@ -498,7 +498,7 @@ class BundleContextImpl implements FelixBundleContext
         return m_felix.getDataFile(m_bundle, s);
     }
 
-    private void checkValidity()
+    void checkValidity()
     {
         if (m_valid)
         {
diff --git a/framework/src/main/java/org/apache/felix/framework/Felix.java b/framework/src/main/java/org/apache/felix/framework/Felix.java
index 08b6d90..2ad8a70 100644
--- a/framework/src/main/java/org/apache/felix/framework/Felix.java
+++ b/framework/src/main/java/org/apache/felix/framework/Felix.java
@@ -3435,7 +3435,7 @@ public class Felix extends BundleImpl implements Framework
      * @return A <code>ServiceRegistration</code> object or null.
     **/
     ServiceRegistration registerService(
-        BundleImpl bundle, String[] classNames, Object svcObj, Dictionary dict)
+        BundleContextImpl context, String[] classNames, Object svcObj, Dictionary dict)
     {
         if (classNames == null)
         {
@@ -3470,7 +3470,7 @@ public class Felix extends BundleImpl implements Framework
             }
         }
 
-        reg = m_registry.registerService(bundle, classNames, svcObj, dict);
+        reg = m_registry.registerService(context, classNames, svcObj, dict);
 
         // Check to see if this a listener hook; if so, then we need
         // to invoke the callback with all existing service listeners.
diff --git a/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java b/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
index 4a6aa8e..77b17b8 100644
--- a/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
+++ b/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
@@ -112,12 +112,14 @@ public class ServiceRegistry
 
     // Caller is expected to fire REGISTERED event.
     public ServiceRegistration registerService(
-        Bundle bundle, String[] classNames, Object svcObj, Dictionary dict)
+        BundleContextImpl context, String[] classNames, Object svcObj, Dictionary dict)
     {
         ServiceRegistrationImpl reg = null;
 
         synchronized (this)
         {
+            Bundle bundle = context.getBundle();
+
             // Create the service registration.
             reg = new ServiceRegistrationImpl(
                 this, bundle, classNames, new Long(m_currentServiceId++), svcObj, dict);
{code}

Thoughts ?","07/Dec/12 19:42;rickhall;Yes, I had thought about switching to bundle context in the past too. I think that approach might work.",14/Dec/12 16:24;gnt;Fixed in  http://svn.apache.org/viewvc?rev=1421958&view=rev,,,,,,,,,,,,,,,,,,,,,,
PackageAdmin.isBundleType throws NPE for uninstalled bundle,FELIX-3670,12607921,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,fmeschbe,fmeschbe,17/Sep/12 16:27,07/Dec/12 10:00,13/Mar/19 22:56,19/Sep/12 15:44,framework-4.0.3,,,,framework-4.2.0,,Framework,,,0,,,,,,"From FELIX-3666:

The PackageAdmin.isBundleType is defined to throw an IllegalArgumentException ""If the specified Bundle was not created by the same framework instance that registered this PackageAdmin service"". I would assume calling this method on an uninstalled bundle should just return the information because it basically just accesses the bundle headers which must remain available after the bundle has been uninstalled.

In fact the PackageAdminImpl.isBundleType does

   bundle.adapt(BundleRevision.class))

which will return null if the bundle is uninstalled. Instead it should do

   bundle.adapt(BundleRevisionImpl.class))

which never returns null and thus still provides access to the headers. ",,,,,,,,,,,,,,,FELIX-3318,FELIX-3666,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,294007,,,Wed Sep 19 15:44:36 UTC 2012,,,,,,0|i0vrdz:,183410,,,,,,,,19/Sep/12 15:44;fmeschbe;Fixed as proposed in Rev. 1387646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in UserAdmin MongoDB backend when supplying configuration through CM,FELIX-3774,12617289,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jajans,jajans,jajans,22/Nov/12 08:41,22/Nov/12 09:19,13/Mar/19 22:56,22/Nov/12 09:19,,,,,,,User Admin,,,0,,,,,,"When supplying a configuration to the MongoDB store, the password property is incorrectly read at #306, causing NPEs.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,259502,,,Thu Nov 22 09:19:57 UTC 2012,,,,,,0|i0lq33:,124877,,,,,,,,22/Nov/12 09:19;jajans;Committed fix in rev #1412466.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in UserAdmin MongoDB backend when first time configuration is supplied,FELIX-3775,12617290,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,jajans,jajans,22/Nov/12 08:42,22/Nov/12 09:19,13/Mar/19 22:56,22/Nov/12 09:19,,,,,,,User Admin,,,0,,,,,,"When its configuration is updated, the MongoDB backend tries to disconnect from the ""old"" store. This is done also the first time the configuration is updated, causing a NPE due to the lack of the ""old"" store...
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,259503,,,Thu Nov 22 09:19:42 UTC 2012,,,,,,0|i0lq3b:,124878,,,,,,,,22/Nov/12 09:19;jajans;Committed fix in rev #1412466.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use more sensible defaults for MongoDB configuration properties,FELIX-3776,12617294,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,jajans,jajans,jajans,22/Nov/12 09:02,22/Nov/12 09:19,13/Mar/19 22:56,22/Nov/12 09:19,,,,,,,User Admin,,,0,,,,,,"The MongoDB store currently needs at least three configuration parameters for it to work: server, db-name and collection-name. This could be reduced to only db-name, as for the other two sensible defaults can be chosen.

In addition, the configuration key names can be made shorter as the ""useradmin.mongodb."" prefix is rather superfluous.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,259507,,,Thu Nov 22 09:19:25 UTC 2012,,,,,,0|i0lq47:,124882,,,,,,,,"22/Nov/12 09:19;jajans;Made all configuration values optional, making use of sensible defaults as is also done for the system properties variant.

Committed fix in rev #1412466.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Store initialization not always performed,FELIX-3735,12613463,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,jajans,jajans,25/Oct/12 09:44,25/Oct/12 13:09,13/Mar/19 22:56,25/Oct/12 13:09,,,,,,,User Admin,,,0,,,,,,"If the store is started after the useradmin bundle itself, its initialization is not performed causing it to remain empty. In fact, it will overwrite the existing store upon restart, causing it to be emptied...

See also ML thread: <http://www.mail-archive.com/users@felix.apache.org/msg13101.html>",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,251001,,,Thu Oct 25 13:09:01 UTC 2012,,,,,,0|i0b36f:,62627,,,,,,,,25/Oct/12 13:09;jajans;Committed a fix for this (+ integration test) in rev #1402139.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DS Factory Components don't support configuration-policy = require,FELIX-3700,12610457,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pderop,pderop,pderop,05/Oct/12 06:56,19/Oct/12 20:25,13/Mar/19 22:56,19/Oct/12 20:25,,,,,,,Declarative Services (SCR),,,0,,,,,,"With scr 1.6.0 and also with scr from trunk, there is the following problem:

When a factory component (declared with a factory attribute in the Component element), and when the Component is also defined with configuration-policy = require, then the org.osgi.service.component.ComponentFactory associated to the factory component is registered in the OSGi registry even if the configuration for the component is not yet available.

This is  a problem because when the org.osgi.service.component.ComponentFactory is registered in the registry, then another component using the ComponentFactory may call the newInstance method and then instantiate the component without the required configuration.

For example, in the following code, Main is injected with the A ComponentFactory and creates immediately one A instance: but at this point, the Configuration for A has not yet been created (see in the Main.start method, where a thread is started in order to create the A configuration after 1 second ...).

I expect A ComponentFactory to be registered only after the A Configuration is available from config admin, because the A configuration-policy has been set to the ""require"" value.

Am I correct or does the spec forbid factory components to use the configuration-policy = require ?

->

@Component(name=""A"", factory = ""A"", configurationPolicy = ConfigurationPolicy.require)
public class A {
  @Activate
  void start(Map<?, ?> config) {
    System.out.println(""A.start:"" + config.get(""foo"");
  }
}

@Component
public class Main {
  private ConfigurationAdmin _cm;
  
  @Reference(type = '*', target = ""(component.factory=A)"")
  void bindCF(ComponentFactory cf) { // should only be called once A config admin configuration is avail
    System.out.println(""Main.bindCF"");
    cf.newInstance(null);
  }
  
  @Reference
  void bindCM(ConfigurationAdmin cm) {
    _cm = cm;
  }
  
  @Activate
  void start() {
    System.out.println(""Main.start"");
    
    new Thread(new Runnable() {
      public void run() {
        try {
          Thread.sleep(1000);
          System.out.println(""Configuring A"");          
          Configuration config = _cm.getConfiguration(""A"", null);
          config.update(new Hashtable() {
            {
              put(""foo"", ""bar"");
            }
          });          
        } catch (Exception ioe) {
          ioe.printStackTrace();
        }
      }
    }).start();
  }
}
","linux, jdk1.6",,,,,,,,,,,,,,,,,,,,05/Oct/12 21:18;pderop;ComponentFactoryTest.java;https://issues.apache.org/jira/secure/attachment/12548047/ComponentFactoryTest.java,05/Oct/12 20:48;pderop;FELIX-3700.patch;https://issues.apache.org/jira/secure/attachment/12548041/FELIX-3700.patch,15/Oct/12 17:35;pderop;FELIX-37000.patch2;https://issues.apache.org/jira/secure/attachment/12549171/FELIX-37000.patch2,16/Oct/12 08:03;pderop;FELIX-37000.patch3;https://issues.apache.org/jira/secure/attachment/12549275/FELIX-37000.patch3,,4.0,,,,,,,,,,,,,,,,,,,2012-10-05 18:37:24.985,,,no_permission,,,,,,,,,,,,242605,,,Fri Oct 19 20:25:48 UTC 2012,,,,,,0|i02xf3:,15015,,,,,,,,"05/Oct/12 18:37;djencks;Why do you think it makes sense to configure a component factory with config admin?  

If the factory xml configuration has a configuration pid, how does the configuration admin configuration relate to the 1001 component instances you create by calling newinstance on the factory?  How about if the factory xml specifies a factory pid?

Suppose you put a configuration pid in the properties you give the component factory.  What happens?

Suppose you put a factory pid in the properties.  What happens?

I don't think any of these scenarios make sense.  Since the spec doesn't explain what should happen I tend to think they aren't supposed to be supported.","05/Oct/12 19:54;fmeschbe;A Component Factory can take configuration just as any configuration and this configuration is inherited by all instances (though existing instances are not updated IIRC).

From reading the code, I would think this should work ...

But then: we have a test (test_component_factory_require_configuration) but it looks like this test is implemented wrong and expects a Factory Component requiring configuration to be active even if no configuration is available.","05/Oct/12 20:47;pderop;I believe I failed to explain my problem clearly ... hope you will give me another chance :-)

(I have joined a patch to this issue, it's certainly incomplete, but if you could take a look at it)

So, In our applications, we simply have the following components:

1) a component ""C"", which can be instantiated several times (C1/C2), but all instances are using the same configuration, from the same PID ""C"". For example, in the ""C"" configuration pid, we configure some shared informations, like a syslog address, some database addr, etc ...

C is declared like this:

@Component(name=""C"", factory=""CFactory"", configuraton-policy=require)""
class C {
   ...
}

2) we also have a ""Manager"" component which is in charge of instantiating C1/C2. We don't instantiate 1001 components. We are actually writing an ""elastic"" http container,  where DS components are dynamically created if the load increase. (such components are actually actor components). So, This ""Manager"" component tracks the org.osgi.service.component.ComponentFactory instances with filter ""(component.factory=CFactory)"" in order to instantiate C1/C2.

3) finally, we have a ""Configurator"" component, which loads the configuration from a database and registers it into CM (config-admin osgi service), using pid ""C"".

Now the problem is that if the ComponentFactory for C is registered by SCR before the configuration for the PID ""C"" is registered into CM, then  C1/C2 will be instantiated with an empty configuration. (because the Configuration has not yet registered it into CM).

Now,  I could probably rework the application in order to use another strategy, but I believe that the component factory for C should not be registered before the configuration pid for C is available, because C is declared with configuration-policy=require.

Please take a look at the patch
thanks in advance.
","05/Oct/12 20:48;pderop;attached the proposed patch (it's probably incomplete, but it will give the idea of my problem).","05/Oct/12 20:52;pderop;Oops felix, I missed your response.

Yes, I do agree that may be there is a problem with the test_component_factory_require_configuration.
I actually started to modify it in order to reproduce the problem, but I have not yet finished.

","05/Oct/12 21:18;pderop;attached a modified version of the ComponentFactoryTest.java with a new added method
test_component_factory_require_configuration2().

With the patch, the test_component_factory_require_configuration2() works and the old test_component_factory_require_configuration() test is failing.

Without the patch, the old method works and the new configuration2() is failing.","14/Oct/12 22:08;pderop;Felix,

I'm sorry about to insist, but can you please give me your opinion on this issue ?
I would like to commit the attached fix, but since David disagrees, I'm now a bit embarrassed.

I have checked the specification and I think that a component factory can inherit from config admin properties, and that the configuration-policy=require is making sense for component factories. I also checked and equinox ds is implementing configuration-policy=require with factory components (that is: a factory component is not registered if the configuration from config-admin is not available).

Can you please decide if this issue should be really closed or if I can commit ? 
(but I would like you to review the patch because I'm not sure if the locking is correctly done or not).

(I have found another problem with component factory + configuration-policy=require, but I would like to conclude about this issue, before going ahead ...)

Thanks.","15/Oct/12 01:04;djencks;Section 112.7 does clearly say that a component factory can be configured by config admin.  I don't understand why it says you can't use a factory pid with a component factory.  Wouldn't this just give you one component factory per configuration?

I haven't tried your patch but I don't really understand why you need the new variable.  What happens if you leave it out?

It also looks to me as if ComponentFactoryImpl.getProperties is wrong in the presence of a configuration that overrides some target properties from the metadata.  Is this the additional problem you saw?

The locking looks correct to me.","15/Oct/12 10:19;pderop;Thanks David for reacting;

Ok, I do agree: in section 112.7, the specification forbids to use a factory configuration pid in order to configure a DS component factory.
But this issue is not about using a factory configuration pid: it is about using a single configuration pid for configuring a DS component factory. By ""single"" configuration pid, I'm talking about configurations created with the ""org.osgi.service.cm.ConfigurationAdmin.getConfiguration(java.lang.String pid, java.lang.String location)"" method.

That beeing said, one week has passed since I posted this issue and many commits have been made ...
So I have to recheck with the current trunk, and will get back as soon as possible.

","15/Oct/12 14:18;pderop;ok, I have aligned the patch with the current trunk.

so, regarding your questions:

1) ""I haven't tried your patch but I don't really understand why you need the new variable. What happens if you leave it out? ""
->

the m_componentMetadata variable is used because the ComponentFactoryImpl.hasConfiguration() should return false if the config policy is required and if the configuration is not yet available. This variable is set to true when the configurationUpdated method is called (when config admin gives us the configuration).

Now, I do agree that we could avoid using this extra variable... I will manage to rework the patch without using this extra variable.

2) ""It also looks to me as if ComponentFactoryImpl.getProperties is wrong in the presence of a configuration that overrides some target properties from the metadata. Is this the additional problem you saw?""

I did not find this problem but looking at the code, I do agree with you, we probably have this problem too.

Now the new problem I found is another one: Since the commit of AbstractComponentManager.java, from revision 1397887:

   http://svn.apache.org/viewvc/felix/trunk/scr/src/main/java/org/apache/felix/scr/impl/manager/AbstractComponentManager.java?r1=1397886&r2=1397887

then any component factory defined with configuration-policy = require, and also with some required (and available) service dependencies remains unsatisfied.
I mean: the ComponentFactory is never registered into the registry even if the required References are available and if the configuration is also available.
I have to make an integration test for this problem ...

If we remove the ""if ( !m_componentMetadata.isConfigurationRequired() )"" test from the AbstractComponentManager.enableDependencyManagers method, 
then we don't have the problem:

    private void enableDependencyManagers() throws InvalidSyntaxException
    {
//        if ( !m_componentMetadata.isConfigurationRequired() )
//        {
            Iterator it = getDependencyManagers();
            while ( it.hasNext() )
            {
                DependencyManager dm = (DependencyManager) it.next();
                dm.enable();
            }
//        }
    }

I wonder why the dependency managers are not enabled if the configuration is required ?

","15/Oct/12 17:35;pderop;Attached a cleaned version of the initial patch (I'm still using an extra ""m_isConfigured"" class attribute).

The patch also includes a modification made in the integration ComponentFactoryTest.

Also implemented deactivation of the ComponentFactory when configuration is lost (and when configuration policy was required).

I wonder if all created component instances (with ComponentFactory.newInstance) should also be deactivated when configuration is lost ? (I prefer to think about this a bit before committing anything. what do you think ?

 ","15/Oct/12 18:57;djencks;I agree, configuration required should work with component factories.

I changed the enableDependencyManagers to look if configuration was required because if it is there is no point registering the service listeners to look for the reference services before we know what the target filter is.  This should be true for component factories too.  So I think that the component factory should set the target filters when it gets the configuration by calling AbstractComponentManager.updateTargets(Dictionary properties)","16/Oct/12 08:03;pderop;thanks David,

I applied your suggestion and it seems to work. 
I joined the FELIX-37000.patch3 diff with the modifications you suggested.
(I don't commit for now because I prefer to test this patch during a couple of days, before committing).

I have one remaining question:

It looks like the super.updateTargets(Properties) method should be invoked while holding a lock. So, I'm using a read lock. Should I use a write lock instead of a read lock ?

thanks.
",16/Oct/12 16:08;djencks;I think the read lock should be sufficient.,"16/Oct/12 23:02;pderop;Committed a patch in revision 1399033.

So, the component factory is not registered until the configuration is available (if policy=require),
and the target filters are updated in case the configuration is updated and the state is either DISABLE or UNSATISFIED.

For now, when the configuration is removed, I don't unregister the component factory and any created component instances.
Indeed, in the ComponentFactoryTest.test_component_factory_require_configuration() test, it sounds like Felix does not expect the component factory to be unregistered automatically when configuration is lost.


","16/Oct/12 23:10;djencks;I may not understand what you are saying.  I see in the spec 112.2.4

Any component configurations activated via the component factory are unaffected by the unregistration of the Component Factory service, but may themselves become unsatisfied for the same reason.

I think that, in the situation where the component factory has configuration required,  the component factory service must be unregistered if the required configuration is removed, but none of the components created by calling factory.newInstance should be removed.","17/Oct/12 07:33;pderop;Thanks for clarifying, I was not sure what should be done.

Actually, I've been confused by the following comment, in ComponentFactoryTest.test_component_factory_require_configuration():

->
    @Test
    public void test_component_factory_require_configuration() throws InvalidSyntaxException
        ...
        // delete config, ensure factory still active and component instance, not changed


... Ok, I do agree with you and I'll commit a fix in order to remove the component factory (but not the created component instances), and will also change the test.



","17/Oct/12 13:21;pderop;committed in 1399224 a fix, in order to unregister the component factory if the required configuration is removed.","19/Oct/12 20:25;pderop;Committed last fix for this issue, in revision 1400265.
I think this issue is now resolved.",,,,,,,,,,,,,
Race condition in gogo runtime activator,FELIX-3703,12610764,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,tomaspan,tomaspan,07/Oct/12 19:35,11/Oct/12 13:17,13/Mar/19 22:56,11/Oct/12 13:17,gogo.runtime-0.10.0,,,,gogo.shell-0.12.0,,Gogo Runtime,,,0,,,,,,"Starting gogo.command (0.12.0) before gogo.runtime(0.10.0) produces CommandNotFoundException: Command not found: gosh.
This is because runtime's Activator first registers CommandProcessor before creating commandTracker.
Creating CommandProcessor triggers event on .command which will start adding commands, but since commandTracker is not present, those commands will be ignored.",Embedded felix 4.0.3,,,,,,,,,,,,,,,,,,,,07/Oct/12 19:36;tomaspan;my.patch;https://issues.apache.org/jira/secure/attachment/12548169/my.patch,11/Oct/12 12:10;tomaspan;osgi-embedded.zip;https://issues.apache.org/jira/secure/attachment/12548731/osgi-embedded.zip,,,,2.0,,,,,,,,,,,,,,,,,,,2012-10-08 08:24:15.037,,,no_permission,,,,,,,,,,,,244982,,,Thu Oct 11 13:17:56 UTC 2012,,,,,,0|i05xbb:,32496,,,,,,,,07/Oct/12 19:36;tomaspan;patch,"08/Oct/12 08:24;db82407;Hi Thomas,

The gogo:gosh command is provided by the Shell bundle, not the Command bundle and is therefore present even if the Command bundle is not started.

I cannot reproduce the condition you describe, even if I start the Shell bundle before the Runtime bundle.

A ServiceTracker is used to locate gogo commands in other bundles. It should not matter when this tracker is started, as it gives an initial list of matching services and then updates and new services appear.

The patch you provided caused a NPE at Activator:156 where the process field is accessed.

Please provide more details of your problem, ideally a test-case.
",11/Oct/12 12:10;tomaspan;test case,"11/Oct/12 12:12;tomaspan;Hi Derek, perhaps I am doing something wrong during initialization, please find attached test case. When I start runtime after command and shell, I don't see the gogo shell and the ""Gogo shell"" thread is killed by this exception:
gogo: CommandNotFoundException: Command not found: gosh
org.apache.felix.gogo.runtime.CommandNotFoundException: Command not found: gosh
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:474)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
	at org.apache.felix.gogo.shell.Activator.run(Activator.java:75)
	at java.lang.Thread.run(Thread.java:662)","11/Oct/12 13:16;db82407;Hi Thomas,

Thanks for the stack trace and test case.

Coincidently, I recently filed FELIX-3706 which fixes this problem.
(I didn't realise it was the same problem until I saw the stack trace).

Your test case works if you use gogo-shell-0.11.0-SNAPSHOT, using the subversion HEAD containing the fix for FELIX-3706.",11/Oct/12 13:17;db82407;fixed by FELIX-3706.,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem loading native library on OS X ,FELIX-3612,12600281,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,26/Jul/12 08:42,30/Jul/12 14:02,13/Mar/19 22:56,26/Jul/12 08:49,,,,,framework-4.0.3,,Framework,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,246053,,,Mon Jul 30 14:02:38 UTC 2012,,,,,,0|i07gtj:,41491,,,,,,,,26/Jul/12 08:49;gnt;Fixed in http://svn.apache.org/viewvc?view=revision&revision=1365912,"30/Jul/12 14:02;gnt;The issue was raised while running the TCK on my local machine, so this issue is just here to capture the required fix for JDK 1.7 on Mac OS X",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in Permissions class,FELIX-3101,12521169,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,slimmy,slimmy,02/Sep/11 11:03,27/Jul/12 15:34,13/Mar/19 22:56,12/Sep/11 10:18,framework.security-1.4.1,,,,framework.security-2.0.0,,Conditional Permission Admin,,,0,,,,,,"In the cleanUp function of Permission.java we get a ClassCastException. It tries casting a SoftReference to Entry.

We currently did a dirty fix where we first check if the object from the ReferenceQueue is a Entry object or not before we cast it.

Any idea what the cause is?",mika with maximum java heap size of 10M,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-02 15:46:20.413,,,no_permission,,,,,,,,,,,,55899,,,Mon Sep 12 10:18:43 UTC 2011,,,,,,0|i0b3nz:,62706,,,,,,,,"02/Sep/11 15:46;karlpauls;Looks like a bug. I think its using the wrong queue by mistake. In any case, your dirty fix should be fine for now - I'll try to fix the real problem asap.","02/Sep/11 19:54;karlpauls;I think, the problem is that we create a softreference with m_queue at one point. It looks like we should just create the softreference without a queue to begin with (as the m_permissionsCache is never cleanUp()-ed ). Im going to make that change and see what the ct has to say about it soon.

Thanks for the report. ",12/Sep/11 10:18;karlpauls;I commited a fix for this. If you want to test it you have to work with the current framework and framework.security trunk. Please close this issue if it works for you.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resources in META-INF/xxx/ fodlers in a signed bundle should be checked,FELIX-3603,12599716,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,gnt,gnt,21/Jul/12 11:39,27/Jul/12 09:24,13/Mar/19 22:56,27/Jul/12 09:24,,,,,framework.security-2.2.0,,Framework Security,,,0,,,,,,"See section 2.3.2 of the OSGi Core spec,

Bundles do not support partially signed bundles. The manifest must contain name sections for all resources but should not have entries for resources in the META-INF directory. Signed entries in the META-INF directory must be verified. Sub directories of META-INF must be treated like any other JAR directory.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-22 18:41:17.354,,,no_permission,,,,,,,,,,,,246075,,,Fri Jul 27 09:24:02 UTC 2012,,,,,,0|i07h7b:,41553,,,,,,,,"21/Jul/12 11:49;gnt;The problem is located in the following method:
https://github.com/apache/felix/blob/trunk/framework.security/src/main/java/org/apache/felix/framework/security/verifier/BundleDNParser.java#L271

The verifier ignores all META-INF/xxx entries but it should check resources located inside a subfolder of META-INF as specified in the spec.",22/Jul/12 18:41;karlpauls;Good catch. I'll take care of it. Thanks.,25/Jul/12 11:54;karlpauls;I added a check which should make this work. Can you please check the current trunk? Thanks.,"26/Jul/12 23:55;gnt;It seems there is a problem.
The java.util.jar.JarVerifier class ignores all entries inside the META-INF folder, so even if those are signed, they won't be verified.
I'm investigating a work around.",27/Jul/12 09:24;gnt;Fixed with  http://svn.apache.org/viewvc?rev=1366310&view=rev,,,,,,,,,,,,,,,,,,,,,,,,,,,
No error log if the certificate is not valid,FELIX-3604,12599777,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,gnt,gnt,22/Jul/12 20:08,25/Jul/12 11:53,13/Mar/19 22:56,25/Jul/12 11:53,,,,,framework.security-2.2.0,,Framework Security,,,0,,,,,,"If bundles are signed with an invalid or already expired certificate the certificate will be revoked but there is no log entry because it's not implemented.
See TODO in
org/apache/felix/framework/security/verifier/BundleDNParser.java line 445 which catches the CertificateException without any logging.

{code}
417     private void getRootChains(Certificate[] certificates, List chains,
418         boolean check)
419     {
420         List chain = new ArrayList();
421 
422         boolean revoked = false;
423 
424         for (int i = 0; i < certificates.length - 1; i++)
425         {
426             X509Certificate certificate = (X509Certificate) certificates[i];
427 
428             if (!revoked && isRevoked(certificate))
429             {
430                 revoked = true;
431             }
432             if (!check || !revoked)
433             {
434                 try
435                 {
436                     if (check)
437                     {
438                         certificate.checkValidity();
439                     }
440 
441                     chain.add(certificate);
442                 }
443                 catch (CertificateException ex)
444                 {
445                     // TODO: log this or something
446                     revoked = true;
447                 }
448             }
{code}

It's hard to find the problem why a BundleSignerCondition is not applied to your bundle when nobody tells you that the certificate of your bundle was revoked.

We should add an error log and print appropriate logging to tell user what's happening here.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-22 20:14:22.472,,,no_permission,,,,,,,,,,,,246043,,,Wed Jul 25 11:53:27 UTC 2012,,,,,,0|i07gvz:,41502,,,,,,,,"22/Jul/12 20:14;karlpauls;Yeah, that probably makes sense. The problem I had with logging inside framework.security is that it is somewhat problematic to get a logger - I should add at least a print out for now.","23/Jul/12 08:05;gnt;I suppose you're talking about FELIX-536.
The felix Logger class does just print to stdout now, so I think a reusing it would be a good idea, so that we can at least control the log level and output in a more common way.",25/Jul/12 09:36;gnt;Did you start working on that already ? I can do it if you want.,"25/Jul/12 11:53;karlpauls;I get the framework logger and log a warning. Can you check if that works for you?

The reason i wasn't using the logger inside security was that it was doing security sensitive calls during that time which created all sorts of problems. It doesn't at the moment so we should be good for now. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceDependencyImpl does not copy the swapped callback in it's constructor.,FELIX-3592,12598380,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,uiterlix,uiterlix,uiterlix,11/Jul/12 14:18,12/Jul/12 07:55,13/Mar/19 22:56,12/Jul/12 07:55,,,,,,,Dependency Manager,,,0,,,,,,ServiceDependencyImpl does not clone the swapped callback in it's constructor causing the dependency to lose this parameter when being cloned.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,246078,,,Thu Jul 12 07:55:33 UTC 2012,,,,,,0|i07glb:,41454,,,,,,,,12/Jul/12 07:55;uiterlix;copied the swappedCallback value in the constructor of ServiceDependencyImpl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in ResolverImpl.permutateIfNeeded,FELIX-3003,12510669,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,thegis,thegis,17/Jun/11 14:58,29/Jun/12 22:12,13/Mar/19 22:56,29/Jun/12 22:12,framework-3.0.9,,,,framework-4.0.3,,Framework,,,1,,,,,,"After upgrade to Karaf 2.2.1, I noticed the following NPE in the Felix framework code:

14:31:54,306 | WARN  | tenerContainer-1 | AbstractMessageListenerContainer  694 | b120 | Execution of JMS message listener failed, and no ErrorHandler has been set.
java.lang.NullPointerException
	at org.apache.felix.framework.resolver.ResolverImpl.permutateIfNeeded(ResolverImpl.java:1156)
	at org.apache.felix.framework.resolver.ResolverImpl.checkPackageSpaceConsistency(ResolverImpl.java:1085)
	at org.apache.felix.framework.resolver.ResolverImpl.resolve(ResolverImpl.java:171)
	at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:4103)
	at org.apache.felix.framework.ModuleImpl.searchDynamicImports(ModuleImpl.java:1412)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:734)
	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:71)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1768)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)[:1.6.0_20]
	at java.lang.Class.forName0(Native Method)[:1.6.0_20]
	at java.lang.Class.forName(Class.java:247)[:1.6.0_20]
	at org.apache.activemq.util.ClassLoadingAwareObjectInputStream.load(ClassLoadingAwareObjectInputStream.java:63)
	at org.apache.activemq.util.ClassLoadingAwareObjectInputStream.resolveClass(ClassLoadingAwareObjectInputStream.java:37)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1575)[:1.6.0_20]
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1496)[:1.6.0_20]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1732)[:1.6.0_20]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)[:1.6.0_20]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)[:1.6.0_20]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)[:1.6.0_20]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)[:1.6.0_20]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)[:1.6.0_20]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)[:1.6.0_20]
	at java.util.ArrayList.readObject(ArrayList.java:593)[:1.6.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.6.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)[:1.6.0_20]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)[:1.6.0_20]
	at java.lang.reflect.Method.invoke(Method.java:597)[:1.6.0_20]
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)[:1.6.0_20]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1849)[:1.6.0_20]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)[:1.6.0_20]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)[:1.6.0_20]
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)[:1.6.0_20]
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)[:1.6.0_20]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)[:1.6.0_20]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)[:1.6.0_20]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)[:1.6.0_20]
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:184)[103:org.apache.activemq.activemq-core:5.5.0]
	at org.springframework.jms.support.converter.SimpleMessageConverter.extractSerializableFromMessage(SimpleMessageConverter.java:215)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.support.converter.SimpleMessageConverter.fromMessage(SimpleMessageConverter.java:103)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.adapter.MessageListenerAdapter.extractMessage(MessageListenerAdapter.java:407)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:345)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:535)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:495)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)[120:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)[120:org.springframework.jms:3.0.5.RELEASE]
	at java.lang.Thread.run(Thread.java:619)[:1.6.0_20]

I guess there is nothing I can do except downgrading to karaf 2.2.0? Any other ideas?","karaf 2.2.1, activemq 5.5.0",,,,,,,,,,,,,,,,,,,,22/Jun/11 18:48;thegis;felix-3003-bundle103-headers.txt;https://issues.apache.org/jira/secure/attachment/12483479/felix-3003-bundle103-headers.txt,22/Jun/11 18:48;thegis;felix-3003-bundle123-headers.txt;https://issues.apache.org/jira/secure/attachment/12483480/felix-3003-bundle123-headers.txt,22/Jun/11 18:48;thegis;felix-3003-resolverimpl-sysout-NPE.txt;https://issues.apache.org/jira/secure/attachment/12483481/felix-3003-resolverimpl-sysout-NPE.txt,,,3.0,,,,,,,,,,,,,,,,,,,2011-06-17 19:52:06.387,,,no_permission,,,,,,,,,,,,55989,,,Fri Jun 29 22:12:32 UTC 2012,,,,,,0|i0vsh3:,183586,,,,,,,,"17/Jun/11 19:52;rickhall;Is this something you could give me a set of steps to reproduce it for myself? If so, that would be great.","20/Jun/11 16:33;thegis;Unfortunately I cannot provide our bundles for testing, but this is basically what I am doing:

A standard java client (outside of Karaf) sends a ActiveMQObjectMessage that contains classes defined in bundle A to a JMS broker running inside Karaf. (I've installed the ""activemq-blueprint"" feature and created a local broker.)

Bundle A (""API"") contains the domain objects. The Karaf headers command shows essentially:
...
Tool = Bnd-1.15.0
Bundle-SymbolicName = my.api
Bundle-Version = 1.0.0.SNAPSHOT
Export-Package = 
my.api;version=1.0.0,
...

Bundle B (""Service"") defines a JMS Listener through a Spring configuration and receives the ActiveMQObjectMessage from the local JMS broker.
...
Tool = Bnd-1.15.0
Bundle-SymbolicName = my.service
Bundle-Version = 1.0.0.SNAPSHOT
Import-Package = 
my.api;resolution:=optional;version=""[1.0,2)"",
org.apache.activemq;resolution:=optional,
org.springframework.beans.factory.config;resolution:=optional;version=""[3.0,4)"",
org.springframework.jms.core;resolution:=optional,
...

Looking at the stacktrace, it looks like ActiveMQ tries to load the domain class (via Class.forName) and Felix does not find ""candidates for the requirement"" as seen in the source:

{code:title=ResolverImpl.java|borderStyle=solid}
ResolverImpl.permutateIfNeeded(
Map<Requirement, Set<Capability>> candidateMap, Requirement req, List<Map<Requirement, Set<Capability>>> permutations) {
	Set<Capability> candidates = candidateMap.get(req);
	if (candidates.size() > 1) //<-- NPE is thrown here
{code}

I am not sure if this helps. Do you need other infos?","20/Jun/11 17:05;rickhall;Well, candidates should not be null at this point, so it is difficult for me to diagnose without being able to reproduce. I'd really like to look into this issue, since I've heard about it once before, but I've never been able to reproduce it. I don't need your specific bundles if you can create simple example bundles that recreate the situation. I know nothing about Karaf, Spring, etc., so I need a set of steps to avoid having to spend a lot of time trying to remotely duplicate the scenario.","21/Jun/11 10:54;fmeschbe;Chiming in here since I am also chasing this situation.

We are running 3.0.7 and one situation where this situation is with resolving a dynamic import:

   req: Bundle 166  needs javax.transaction
   candidateMap: [Bundle 166 imports *] --> { [Bundle 187 provides com.XXXX] }

Bundle 166 in this case is rather complex by having lots of imports and exports plus it has

    DynamicImport-Package: *

I have tracked down the problem to a situation where in a complex resolution situation a consistent class space could not be resolved. In this case ensuring the javax.transaction package is only exported once resolved the problem.","21/Jun/11 11:34;rickhall;This stack trace here is with a dynamic import too, but that still isn't enough to help me figure it out unfortunately.",22/Jun/11 06:44;fmeschbe;How about just adding a null check for the short term and throwing ResolveException (which is handled by the resolver) instead of just throwing NPE which is not handled here ?,22/Jun/11 08:40;rickhall;The biggest downside is that it might prevent me from ever getting a reproducible scenario...people actually report NPEs. :-),"22/Jun/11 18:48;thegis;I've got ride of the NPE and found out that it was caused by a wrong export statement (exporting a version that didn't exists) in one of my bundles. I am not sure why this problem has never occured before and why it only occurs on first start of Karaf. Further startups doesn't show the NPE at all! I'll guess OSGi is more dynamic then I thought.. ;-)

Here are the involved bundles:
Bundle 103: activemq-core-5.5.0
Bundle 122: custom-api
Bundle 123: custom-osgified-libs (with lots of im/exports)

1) First, I've figured out which requirement caused the NPE through patching felix-framework.jar with sysout statements in ResolverImpl.permutateIfNeeded:
    	System.out.println(""Needed Req: "" + req);
    	Iterator<Requirement> iter = candidateMap.keySet().iterator();
    	while (iter.hasNext()) {
			Requirement requirement = (Requirement) iter.next();
			Set<Capability> capabilities = candidateMap.get(requirement);
			System.out.println( ""Req: "" + req + "" --> "" + (capabilities!=null?capabilities.toString():""null"") );
		}
		
2) It seems that just before the NPE ""org.apache.commons.logging"" was needed but only 1 other packages was in the candidateMap:

    Needed Req: [103.0] package; (package=org.apache.commons.logging)
    Req: [103.0] package; (package=org.apache.commons.logging) --> [[123.0] package; package=org.geotools.geometry.jts]
    13:34:13,546 | WARN  | tenerContainer-2 | AbstractMessageListenerContainer  694 | b120 | Execution of JMS message listener failed, and no ErrorHandler has been set.
    java.lang.NullPointerException
        at org.apache.felix.framework.resolver.ResolverImpl.permutateIfNeeded(ResolverImpl.java:1164)
        
3) Then, I wondered why the ""org.geotools.geometry.jts"" package is the only candidate. This package is exported by bundle 123 (""lib""). Also, this package uses ""com.vividsolutions.jts.geom"", which in turn is used, embedded and exported by bundle 122 (""API""). Bundle 122 contains the domain objects that bundle 103 (""amq"") tries to deserialize (imported through DynamicImport *). This was misleading, tough (at least for my problem, maybe it is still interesting for you).

4) It turns out, the problem was related to the ""org.apache.commons.logging"" package that was exported by bundle 123 (""lib"") with a wrong version:
karaf> packages:exports |grep ""commons.logging""
     4 org.apache.commons.logging; version=1.1.1
     4 org.apache.commons.logging; version=1.0.4
     4 org.apache.commons.logging.impl; version=1.1.1
     4 org.apache.commons.logging.impl; version=1.0.4
   116 org.apache.commons.logging; version=1.1.1
   116 org.apache.commons.logging.impl; version=1.1.1
   123 org.apache.commons.logging; version=1.7.0
   123 org.apache.commons.logging.impl; version=1.7.0

5) Bundle 103 (""amq""), which caused the NPE, imported this package statically without version through Import-Package as well as with DynamicImport-Package * (see attached file).
6) Maybe the DynamicImport picked the highest version available, but the framework couldn't deliver, because, well, this version isn't even implemented.. ;-) 
7) The reason for the commons-logging version export 1.7.0 was due to an misconfigured maven-bundle-plugin, which included the commons-logging export statement due to transitive dependencies. I actually only wanted to export commons-beanutils:
    <Export-Package>
        org.apache.commons.*;version=${commons.beanutils.version};-split-package:=merge-first,
        
So, yeah I guess this issue is resolved for me. I am not sure if this is enough information for you guys to fix the NPE in the framework. If you need any more infos or output of karaf commands, let me know.",24/Jun/11 09:08;fmeschbe;Re downside: quite right ;-),"28/Jul/11 13:56;jbbriaud;I have the exact same error and we also have commons-logging in our dependencies.
I'm using Jonas 5.2.1.

I'm investigating ...","15/Jun/12 17:31;rickhall;Charles Moulliard sent me a scenario to reproduce this issue and I think I understand what is going on...

It is directly related to resolving dynamic imports. It occurs because they are a special case. Similar to what Torsten reported, Charles scenario generated the NPE due to underlying resolution error while trying to permutate the candidates.

The reason why we were seeing a null candidates set here when we normally shouldn't see null is because dynamic importing is a special case where the revision is already resolved and we are just trying to resolve a single additional requirement for it. Thus, we only populate the candidates set for the single requirement we are trying to resolve, not all existing requirements that already have a wire.

The issue then arises in a situation where the resolver detects a conflict with the new requirement's candidate and the provider of an existing wire. In that case, it tries to permutate the ""original"" decision by getting its candidates. Since resolved requirements do not populate the candidates set, we get an NPE because there is nothing there to permutate.

So, technically, just adding a null check here may be ok. Another approach is to populate already resolved requirements as only having one candidate, which is the provider of the wire. I'll think about this a little bit, but we should be able to do something here. This issue still exists in 4.0.x, so it will be a good fix.

Thanks to all.","23/Jun/12 20:22;rickhall;We are in the process of packaging the resolver as a separate module that implements in the RFC-112 resolver service (i.e., OBR resolver). The issue causing this NPE is fixed in the OBR resolver, so once we replace the framework's resolver with the OBR resolver, then this issue will be fixed.","26/Jun/12 17:34;rickhall;I'm going to push a quick 4.0.3 framework release to fix two issues related to dynamic imports, including this one.",29/Jun/12 05:54;cmoulliard;Is an Apache Felix 4.0.3-SNAPSHOT already available and including these 2 fixes ?,"29/Jun/12 13:29;rickhall;No, but I was planning to start the release vote on Sunday.","29/Jun/12 22:12;rickhall;This has been fixed in the 4.0.3 release candidate. It won't be ported to trunk since the trunk resolver will be completely replaced by the OBR resolver which fixes this separately.

Please close this issue if you are satisfied. Thanks.",,,,,,,,,,,,,,,,
URLHandlers caches null as values for common protocols,FELIX-3296,12537436,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,bstansberry,bstansberry,05/Jan/12 23:01,26/Jun/12 19:17,13/Mar/19 22:56,03/May/12 20:39,framework-3.0.8,,,,framework-4.0.3,,Framework,,,1,,,,,,"A JBoss AS7 user has reported being unable to run the Apache Sling web app in AS 7. I determined that the issue is once org.apache.felix.framework.URLHandlers is installed as the JVM's URLStreamHandlerFactory, URLs with protocol ""jar"" can no longer be parsed.[1]

Here's the problem. Line references are to [2]:

1) The singleton of this URLHandlers class gets instantiated. It attempts to load and cache standard handlers for common protocols. At L148 it does this for ""jar"".

2) At L353 it's trying to load one of the standard URLStreamHandler impls for the ""jar"" protocol, e.g. sun.net.www.protocol.jar.Handler. It uses Class.forName(""sun.net.www.protocol.jar.Handler""). This fails (returns null) because the JBoss Modules module for this deployment does not have visibility to this class.

3) At L367 it stores ""null"" for this protocol in its m_builtIn map under key ""jar"".

4) Thereafter any call to createURLStreamHandler (L390) will call into getBuiltInStreamHandler (L413). That will return null because it will find the null in m_builtIn stored in step 3) above (L330 & L332).

A fairly simple fix is to at L148 test the result of the getBuiltInStreamHandler call and if null remove the entry from m_builtIn. It should probably do the same kind of thing in the init(String) method (L120).

An alternative is to do all the step 1) stuff between L142 and L148 after the try/catch block at L157. At that point a ref to the standard AS7 URLStreamHandlerFactory will be available in field m_streamHandlerFactory and can be used to load the standard handlers rather than relying on Class.forName.

[1] http://lists.jboss.org/pipermail/jboss-as7-dev/2012-January/004956.html
[2] http://grepcode.com/file/repo1.maven.org/maven2/org.apache.felix/org.apache.felix.framework/2.0.5/org/apache/felix/framework/URLHandlers.java
","Apache Sling  org.apache.sling.launchpad-6.war running in build of current master branch of JBoss Application Server 7 (https://github.com/jbossas/jboss-as). I'm reporting this against framework-3.0.8 as that seems to be what's included in Sling, but a review of the code in 4.0.2 shows the class is the same.",,,,,,,,,,,,,,,,,,,,03/May/12 15:36;fmeschbe;FELIX-3296-2.patch;https://issues.apache.org/jira/secure/attachment/12525459/FELIX-3296-2.patch,03/May/12 10:09;fmeschbe;FELIX-3296.patch;https://issues.apache.org/jira/secure/attachment/12525426/FELIX-3296.patch,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-09 13:54:30.109,,,no_permission,,,,,,,,,,,,222944,,,Thu May 03 20:39:03 UTC 2012,,,,,,0|i00x0n:,3281,,,,,,,,"09/Jan/12 13:54;karlpauls;Yes, I agree - this is a bug. Thanks for reporting - I'll try to get to it asap.",09/Jan/12 19:13;tdiesler;Related to https://issues.jboss.org/browse/AS7-3228,"30/Apr/12 09:22;rmuntean;In reply to comment #1:
> Yes, I agree - this is a bug. Thanks for reporting - I'll try to get to it asap.

Karl, did you manage to look into this? I'm willing to test any patches if needed.","03/May/12 10:09;fmeschbe;Proposed patch:

Instead of just trying to load the well-known default handlers we have to play some tricks. The patch changes the setup as follows to load each pre-defined scheme:

  1. try installed URLStreamHandlerFactory if any
  2. try loading well-known handler class through framework class loader
  3. try loading well-known handler class through system class loader (ClassLoader.getSystemClassLoader())

The first step IMHO makes sense if the pre-installed factory would overwrite any well-known handler (for example the file: handler from JBoss). The last step is to circumvent the JBoss ModuleClassLoader, which effectively hides the Java Platform classes (as OSGi does).",03/May/12 11:03;karlpauls;I'll try to have a look tonight.,"03/May/12 13:42;karlpauls;Well, after looking at a bit more, I'm not so sure what the correct solution is. First, I disagree with the proposed fix in the description. The idea is that if there is a previous urlhandlersfactory, we should delegate to that one. If it isn't doing that, there is a bug in there. Caching the null value is what should happen.

Regarding the patch of Felix Meschberger: I see the problem however, I'm not sure it is a correct solution to default to the system classloader. Thing is, somebody on the outside doesn't want us to see the classes, so we shouldn't try to get them from some place else. Granted, if that is the only work to make this work we might have to but the URLHandlers are a very tricky hack to begin with so lets see whether there is a different way. 

Am I correct in saying that jboss installs its own urlhandlersfactory which will give us the required protocols?","03/May/12 14:30;fmeschbe;> The idea is that if there is a previous urlhandlersfactory, we should delegate to that one. If it
> isn't doing that, there is a bug in there. Caching the null value is what should happen.

Event the platform is not expecting the URLStreamHandlerFactory to be ""complete"". If the factory does not return anything, it checks with its known handler classes (see URL.getURLStreamHandler(String); at least in the Sun VM).

> Caching the null value is what should happen

That's still happening, if there is a null situation after all.

> Thing is, somebody on the outside doesn't want us to see the classes, so we shouldn't try to get them from some place else

Agreed. But then that somebody (URLStreamHandlerFactory) should provide the handlers. Particularly the jar: handler but probably also the other ones, at least http: and https: would be helpful.

> but the URLHandlers are a very tricky hack to begin with so lets see whether there is a different way. 

I'd love to have a better solution ;-)

> Am I correct in saying that jboss installs its own urlhandlersfactory which will give us the required protocols? 

It installs, but does not give the missing handlers, which is why I did that trickery.

BTW: The patch implements exactly the three steps: trying the factory, falling back to known packages in framework class loader, falling back to known packages in system class loader.","03/May/12 14:40;karlpauls;> Event the platform is not expecting the URLStreamHandlerFactory to be ""complete"". If the factory does not return anything, it checks with its known handler classes (see URL.getURLStreamHandler(String); at least in the Sun > VM). 

And that is our problem. We can't get the handlers from anywhere proper but we have to get them. That is the overal story of the urlhandlers, we have to fight the system every turn just to get them to work :-(

>> Caching the null value is what should happen

> That's still happening, if there is a null situation after all. 

Right, that wasn't in regard to your patch but in regard to the original proposal.

>> but the URLHandlers are a very tricky hack to begin with so lets see whether there is a different way.

> I'd love to have a better solution ;-) 

Me too :-)

but as I said, we might have to resort to your patch. As of now, i can only think of stuff that is even worse :-D","03/May/12 14:45;karlpauls;Regarding your patch so, I think there are some issues with it - can we discuss it via skype?","03/May/12 15:36;fmeschbe;Extended patch:
  + in the init() method ensure the handler found is used to create the URL
  + synchronize initialization on URL.class since we fiddle with the factory field

This supercedes (and includes) the previous patch","03/May/12 15:49;karlpauls;Thanks, Felix. That looks good now - I'll give it some more looking at and try to work in the other outstanding URLHandlers issues but i expect to commit something tonight.",03/May/12 20:39;karlpauls;I applied the patch. Please close if it works for you.,,,,,,,,,,,,,,,,,,,,
Possible deadlock with reentrant calls,FELIX-3393,12546394,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,14/Mar/12 14:07,26/Jun/12 19:01,13/Mar/19 22:56,02/Apr/12 20:21,framework-4.0.2,,,,framework-4.0.3,,Framework,,,1,,,,,,"This happen when a thread which has a bundle lock has some reentrant call while the global lock is held by another thread (see stack trace below)

In the code Felix#acquireBundleLock, the comment on the loop says ""Wait if the desired bundle is already locked by someone else or if any thread has the global lock, unless the current thread holds the global lock or the bundle lock already."" which makes total sense, but I don't think the code handle the case where the lock is already held by the current thread *and* the global lock is held by a different thread.

Possible patch below.

{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/Felix.java b/framework/src/main/java/org/apache/felix/framework/Felix.java
index 6504f13..0965d8b 100644
--- a/framework/src/main/java/org/apache/felix/framework/Felix.java
+++ b/framework/src/main/java/org/apache/felix/framework/Felix.java
@@ -5002,7 +5002,8 @@ public class Felix extends BundleImpl implements Framework
             // holds the global lock or the bundle lock already.
             while (!bundle.isLockable() ||
                 ((m_globalLockThread != null)
-                    && (m_globalLockThread != Thread.currentThread())))
+                    && (m_globalLockThread != Thread.currentThread())
+                    && (bundle.getLockingThread() != Thread.currentThread())))
             {
                 // Check to make sure the bundle is in a desired state.
                 // If so, keep waiting. If not, throw an exception.
{code}


{code}
""FelixStartLevel"" daemon prio=5 tid=7fb1b2ac7800 nid=0x111144000 in Object.wait() [111142000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7e039bc90> (a [Ljava.lang.Object;)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.felix.framework.Felix.acquireBundleLock(Felix.java:5025)
	- locked <7e039bc90> (a [Ljava.lang.Object;)
	at org.apache.felix.framework.Felix.registerService(Felix.java:3282)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:346)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.registerService(BlueprintContainerImpl.java:408)
	at org.apache.aries.blueprint.container.ServiceRecipe.register(ServiceRecipe.java:184)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.registerServices(BlueprintContainerImpl.java:666)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:334)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:230)
	- locked <7f5898750> (a java.util.concurrent.atomic.AtomicBoolean)
	- locked <7f5898740> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.aries.blueprint.container.BlueprintExtender.checkBundle(BlueprintExtender.java:325)
	at org.apache.aries.blueprint.container.BlueprintExtender.bundleChanged(BlueprintExtender.java:244)
	at org.apache.aries.blueprint.container.BlueprintExtender$BlueprintBundleTrackerCustomizer.modifiedBundle(BlueprintExtender.java:471)
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:495)
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:1)
	at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:238)
	at org.osgi.util.tracker.BundleTracker$Tracked.bundleChanged(BundleTracker.java:457)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:870)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:791)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:515)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4321)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1945)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1213)
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:295)
	at java.lang.Thread.run(Thread.java:680)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-03-14 14:18:42.796,,,no_permission,,,,,,,,,,,,231552,,,Mon Apr 02 20:21:06 UTC 2012,,,,,,0|i07gif:,41441,,,,,,,,"14/Mar/12 14:18;rickhall;Just out of curiousity, I did some source code archeology and it appears that this bug has existed since we switched to our current locking approach around framework 1.6.0, so it is a good catch. Not sure how often we run into this, but it is good to have it fixed.","30/Mar/12 16:57;gawor@mcs.anl.gov;I was hoping that this fix also addresses the problem we were seeing in Geronimo (which looks very similar to the original stack trace) but we are still seeing the problem. Here are the relevant stack traces:

""FelixShutdown"" prio=10 tid=0x08157c00 nid=0x5a0c in Object.wait() [0x30ffe000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0xa33ded98> (a java.lang.Integer)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.felix.framework.FrameworkStartLevelImpl.setStartLevelAndWait(FrameworkStartLevelImpl.java:153)
        - locked <0xa33ded98> (a java.lang.Integer)
        at org.apache.felix.framework.Felix$SystemBundleActivator.stop(Felix.java:4492)
        at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:663)
        at org.apache.felix.framework.Felix.stopBundle(Felix.java:2361)
        at org.apache.felix.framework.Felix$2.run(Felix.java:882)
        at java.lang.Thread.run(Thread.java:662)


""Blueprint Extender: 1"" daemon prio=10 tid=0x086fa400 nid=0x5a09 in Object.wait() [0x312fb000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x9f6a28f0> (a [Ljava.lang.Object;)
        at java.lang.Object.wait(Object.java:485)
        at org.apache.felix.framework.Felix.acquireBundleLock(Felix.java:4871)
        - locked <0x9f6a28f0> (a [Ljava.lang.Object;)
        at org.apache.felix.framework.Felix.registerService(Felix.java:3205)
        at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:346)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.registerService(BlueprintContainerImpl.java:388)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:324)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:213)
        - locked <0xa26ec7f0> (a java.util.concurrent.atomic.AtomicBoolean)
        - locked <0xa26ec7e0> (a java.util.concurrent.atomic.AtomicBoolean)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)

""FelixStartLevel"" daemon prio=10 tid=0x082dcc00 nid=0x5a07 waiting for monitor entry [0x326c8000]
   java.lang.Thread.State: BLOCKED (on object monitor)
        at org.apache.aries.blueprint.container.BlueprintContainerImpl.destroy(BlueprintContainerImpl.java:810)
        - waiting to lock <0xa26ec7f0> (a java.util.concurrent.atomic.AtomicBoolean)
        at org.apache.aries.blueprint.container.BlueprintExtender.destroyContext(BlueprintExtender.java:204)
        at org.apache.aries.blueprint.container.BlueprintExtender.bundleChanged(BlueprintExtender.java:196)
        at org.apache.aries.blueprint.container.BlueprintExtender$BlueprintBundleTrackerCustomizer.modifiedBundle(BlueprintExtender.java:385)
        at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:453)
        at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:237)
        at org.osgi.util.tracker.BundleTracker$Tracked.bundleChanged(BundleTracker.java:413)
        at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:868)
        at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:789)
        at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:514)
        at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4244)
        at org.apache.felix.framework.Felix.stopBundle(Felix.java:2351)
        at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1214)
        at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:298)
        at java.lang.Thread.run(Thread.java:662)

""main"" prio=10 tid=0x08058c00 nid=0x470e in Object.wait() [0xb7410000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x9f875888> (a org.apache.felix.framework.util.ThreadGate)
        at org.apache.felix.framework.util.ThreadGate.await(ThreadGate.java:79)
        - locked <0x9f875888> (a org.apache.felix.framework.util.ThreadGate)
        at org.apache.felix.framework.Felix.waitForStop(Felix.java:921)
","02/Apr/12 20:21;rickhall;I am closing this because the Aries Blueprint issue is unrelated. If nothing else it deserves a separate bug.

However, I don't see how the Aries Blueprint issue can be easily resolved by the framework. Aries is using a synchronous bundle listener to react to bundle events and it is trying to grab an internal user-code lock, which is already held by Aries extender trying to register a service on a different thread.

The framework is forced to hold some locks when calling out to user code due to synchronous listeners and especially in this case since this is on the STOPPING bundle event and still has work to do. So the fact that Aries Blueprint is calling into framework code while holding its own locks creates a dangerous situation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in Filterindex / ServiceRegistryCache,FELIX-3564,12595058,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,uiterlix,janhoeve,janhoeve,19/Jun/12 06:55,19/Jun/12 14:52,13/Mar/19 22:56,19/Jun/12 14:52,dependencymanager-3.0.0,,,,,,Dependency Manager,,,0,memory_leak,,,,,"The filter indexes in the ServiceRegistryCache caches ServiceListeners for a faster lookup.
However, once a ServiceListener is stored in the cache, it will never be released which will eventually lead to an OutOfMemoryError.

This is caused by the implementation of BundleContextIntercepter#removeServiceListener.
While debugging, it appears the cache has no filterindex for arguments null,null and thus leaving the listener in the cache.","Linux Mint 12, x64, Dell E6520",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-19 14:51:04.635,,,no_permission,,,,,,,,,,,,246083,,,Tue Jun 19 14:52:16 UTC 2012,,,,,,0|i07ghr:,41438,,,,,,,,"19/Jun/12 14:51;uiterlix;Fixed by a rather brute force call to FilterIndex.removeListener() for two reasons:
- It aligns nicely with the BundleContext.removeListener() API which promises to do nothing when a listener is passed that is not available in this bundleContext;
- Another solution would be to explicitly keep track in the ServiceRegistryCache of what listener is registered with which FilterIndex,  It's cheaper in memory consumption to have the indices perform an unnecessary map.remove(). The extra processing overhead is negligible.",19/Jun/12 14:52;uiterlix;See comment.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The obr page in the webconsole does not update on refresh,FELIX-3503,12554887,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,passchieri,passchieri,11/May/12 10:43,29/May/12 11:00,13/Mar/19 22:56,29/May/12 11:00,webconsole-3.1.8,,,,webconsole-obr-plugin-1.0.0,,Web Console,,,0,obr,ui,,,,"If the Bundle Repositories are refreshed via the webconsole ""OSGi Repository"", the repository is refreshed in the felix environment and the new data is send back to the webpage. However, the new data is not displayed in the webpage, as the reply from felix is ignored in the obr.js javascript file.

The patch below will fix this, by inserting the available data from the reply in the obrData internal datastructurre, before updating the UI.

### Eclipse Workspace Patch 1.0
#P org.apache.felix.webconsole-3.1.8
Index: src/main/resources/res/ui/obr.js
===================================================================
--- src/main/resources/res/ui/obr.js	(revision 1228192)
+++ src/main/resources/res/ui/obr.js	(working copy)
@@ -63,7 +63,12 @@
         $.post(pluginRoot, {
             'action' : action,
             'url'    : url
-        }, renderData, 'json');
+        }, function(data) {
+        	for (var par in data) {
+        		obrData[par]=data[par];
+        	};
+        	renderData();
+        	}, 'json');
     }
 }
 
","Felix running on Ubuntu Linux 10.04.3 LTS
Java version OpenJDK Runtime Environment (IcedTea6 1.9.13) (6b20-1.9.13-0ubuntu1~10.04.1)
OpenJDK 64-Bit Server VM (build 19.0-b09, mixed mode)
Browser for webpage: Firefox 12.0 on Windows 7",,,,,,,,,,,,,,,,,,,,11/May/12 11:20;passchieri;FELIX-3503.patch;https://issues.apache.org/jira/secure/attachment/12526512/FELIX-3503.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-05-29 11:00:52.067,,,no_permission,,,,,,,,,,,,239140,,,Tue May 29 11:00:52 UTC 2012,,,,,,0|i07h87:,41557,,,,,,,,"29/May/12 11:00;v_valchev;fixed in svn rev.1343664

please note, that the fix is in the separate obr plugin. it is no-longer build-in webconsole plugin",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SCR Annotation Reference Documentation - ""interface"" must be ""referenceInterface""",FELIX-3512,12556219,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,cziegeler,dkuffner,dkuffner,17/May/12 10:25,23/May/12 08:09,13/Mar/19 22:56,23/May/12 08:09,,,,,,,Documentation,,,0,,,,,,"Please documentation of Reference on http://felix.apache.org/site/scr-annotations.html 
The table contains a annotation attribute called ""interface"" which doesn't exist.
The correct name is ""referenceInterface""

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-05-23 08:09:38.469,,,no_permission,,,,,,,,,,,,294010,,,Wed May 23 08:09:38 UTC 2012,,,,,,0|i0vsfr:,183580,,,,,,,,"23/May/12 08:09;cziegeler;Thanks, I've corrected this",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restarting the framework from the web console (or using update on the system bundle) does not work,FELIX-2045,12455397,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,05/Feb/10 08:17,17/Apr/12 15:52,13/Mar/19 22:56,05/Feb/10 08:37,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-05 14:08:19.843,,,no_permission,,,,,,,,,,,,56684,,,Fri Feb 05 14:08:19 UTC 2010,,,,,,0|i0vsb3:,183559,,,,,,,,"05/Feb/10 08:37;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
Committed r906851
","05/Feb/10 08:38;gnt;Note that restarting the framework only works if the framework supports that, which is the case for Equinox but not for Felix.","05/Feb/10 14:08;rickhall;Well, it may or may not be buggy, but it is implemented:

    public void update(InputStream is) throws BundleException
    {
        Object sm = System.getSecurityManager();

        if (sm != null)
        {
            ((SecurityManager) sm).checkPermission(new AdminPermission(this,
                AdminPermission.EXECUTE));
        }

        // Spec says to close input stream first.
        try
        {
            if (is != null) is.close();
        }
        catch (IOException ex)
        {
            m_logger.log(Logger.LOG_WARNING, ""Exception closing input stream."", ex);
        }

        // Then to stop and restart the framework on a separate thread.
        new Thread(new Runnable() {
            public void run()
            {
                try
                {
                    // First acquire the system bundle lock to verify the state.
                    acquireBundleLock(Felix.this, Bundle.STARTING | Bundle.ACTIVE);
                    // Set the reason for the shutdown.
                    m_shutdownGate.setMessage(
                        new FrameworkEvent(FrameworkEvent.STOPPED_UPDATE, Felix.this, null));
                    // Record the state and stop the system bundle.
                    int oldState = Felix.this.getState();
                    try
                    {
                        stop();
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
native2ascii doesn't work for DS plugin,FELIX-3442,12549686,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,v_valchev,v_valchev,05/Apr/12 12:04,05/Apr/12 14:18,13/Mar/19 22:56,05/Apr/12 14:13,webconsole-ds-plugin-1.0.0,,,,webconsole-ds-plugin-1.0.0,,Web Console,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-04-05 14:13:47.285,,,no_permission,,,,,,,,,,,,234677,,,Thu Apr 05 14:18:57 UTC 2012,,,,,,0|i07gyv:,41515,,,,,,,,"05/Apr/12 14:13;fmeschbe;Same problem as with FELIX-3406: The bundle plugin includes the unprocessed resources. To have the processed resources, they must be explicitly included.","05/Apr/12 14:18;fmeschbe;Explicit inclusion of the processed language files with the Include-Resources directive in Rev. 1309872 (and tested).

Sorry Valentin, did realize only after the fact, that you already fixed this by adding another maven resource element. IMHO this is a problem of the bundle plugin which should be solved by configuration of the bundle plugin.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
native2ascii doesn't work for deployment admin plugin,FELIX-3443,12549688,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,05/Apr/12 12:07,05/Apr/12 12:08,13/Mar/19 22:56,05/Apr/12 12:08,webconsole-deployment-admin-plugin-1.0.0,,,,webconsole-deployment-admin-plugin-1.0.0,,Web Console,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234679,,,Thu Apr 05 12:08:36 UTC 2012,,,,,,0|i07g3j:,41374,,,,,,,,05/Apr/12 12:08;v_valchev;fixed in rev.1309807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad German localization in memory usage plugin,FELIX-3439,12549680,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,05/Apr/12 11:51,05/Apr/12 11:51,13/Mar/19 22:56,05/Apr/12 11:51,webconsole-memoryusage-plugin-1.0.4,,,,webconsole-memoryusage-plugin-1.0.4,,Web Console,,,0,,,,,,"Seems that the properties file was not stored as UTF-8, so some umlauts were not stored correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234671,,,Thu Apr 05 11:51:46 UTC 2012,,,,,,0|i07g3r:,41375,,,,,,,,05/Apr/12 11:51;v_valchev;Fixed in rev.1309794,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
native2ascii doesn't work for memory usage plugin,FELIX-3437,12549675,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,05/Apr/12 11:26,05/Apr/12 11:49,13/Mar/19 22:56,05/Apr/12 11:49,webconsole-memoryusage-plugin-1.0.2,,,,webconsole-memoryusage-plugin-1.0.4,,Web Console,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234666,,,Thu Apr 05 11:49:06 UTC 2012,,,,,,0|i07g4n:,41379,,,,,,,,05/Apr/12 11:49;v_valchev;fixed in rev.1309786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UPnP plugin doesn't play nice if the service doesn't have state variables,FELIX-3435,12549668,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,05/Apr/12 11:06,05/Apr/12 11:09,13/Mar/19 22:56,05/Apr/12 11:09,webconsole-upnp-plugin-1.0.2,,,,webconsole-upnp-plugin-1.0.2,,Web Console,,,0,,,,,,If the device doesn't have state variables the plugin will not show any service details.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234659,,,Thu Apr 05 11:09:28 UTC 2012,,,,,,0|i07fzr:,41357,,,,,,,,05/Apr/12 11:09;v_valchev;fixed in rev.1309751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in UPnP Web Console Plugin,FELIX-3427,12549359,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,v_valchev,v_valchev,03/Apr/12 16:26,03/Apr/12 16:29,13/Mar/19 22:56,03/Apr/12 16:29,webconsole-upnp-plugin-1.0.0  ,,,,webconsole-upnp-plugin-1.0.2,,Web Console,,,0,,,,,,"Some buggy implementation might return invalid image stream (null) and this will cause the following NPE in web console:

fw>$19:20:59.667 ERROR - [HTTP] Problem while making answer to request /system/console/upnp from client address null  prosyst.mbs.httpjsp.?():?
java.lang.NullPointerException
        at org.apache.felix.webconsole.plugins.upnp.internal.ControlServlet.doGet(ControlServlet.java:109)
        at org.apache.felix.webconsole.plugins.upnp.internal.WebConsolePlugin.doGet(WebConsolePlugin.java:119)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:702)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:815)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:493)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:418)
        at com.prosyst.mbs.impl.services.http.ServletProperties.service(ServletProperties.java:109)
        at com.prosyst.mbs.impl.services.http.Response.defaultResponse(Response.java:353)
        at com.prosyst.mbs.impl.services.http.FiltersManagerImpl.dispatch(FiltersManagerImpl.java:183)
        at com.prosyst.mbs.impl.services.http.FiltersFactory.dispatch(FiltersFactory.java:38)
        at com.prosyst.mbs.impl.services.http.Response.makeAnswer(Response.java:181)
        at com.prosyst.mbs.impl.services.http.ThreadProcess.run(ThreadProcess.java:112)
        at com.prosyst.util.impl.tpt.threadpool.ExecutorImpl.run(ExecutorImpl.java:191)


Instead of that NPE web console should return 404 status.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,234350,,,Tue Apr 03 16:29:48 UTC 2012,,,,,,0|i07g2f:,41369,,,,,,,,03/Apr/12 16:29;v_valchev;fixed in rev.1309021,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall is too verbose,FELIX-1789,12438711,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,21/Oct/09 14:45,05/Mar/12 09:40,13/Mar/19 22:56,09/Dec/09 16:44,fileinstall-2.0.0,,,,fileinstall-2.0.8,,File Install,,,0,,,,,,"GlassFish users have commented that FileInstall is too verbose. They suggest the initial configuration related messages to be moved to debug level.

e.g.,

INFO: {felix.fileinstall.poll (ms) = 5000, felix.fileinstall.dir = /space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/domains/domain1/autodeploy/bundles, felix.fileinstall.debug = 1, felix.fileinstall.bundles.new.start = true, felix.fileinstall.tmpdir = /tmp/fileinstall, felix.fileinstall.filter = null}
",generic,,,,,,,,,,,,,,,,,,,,01/Dec/09 17:49;rickhall;FELIX-1789.txt;https://issues.apache.org/jira/secure/attachment/12426553/FELIX-1789.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-11 17:31:00.028,,,no_permission,,,,,,,,,,,,57248,,,Wed Dec 09 16:44:44 UTC 2009,,,,,,0|i0vten:,183737,,,,,,,,"11/Nov/09 17:31;rickhall;It looks like File Install uses the Log Service if its present, but if not then it always logs to stdout. So, if there is a log service then the output can be controlled, but if there is not then there is no control over what is logged to stdout. It seems like this could be solved by adding a configuration property to indicate which level of messages should be logged. This would control what was logged regardless of whether it was using the log service or stdout.","01/Dec/09 17:57;rickhall;The way File Install handles logging is not very good. It doesn't itself have a log level, it simply uses a single flag (felix.fileinstall.debug) to indicate whether or not it should print exception stack traces for all messages and it doesn't actually assign a log level to a message, which means there really is no way to control which messages get logged.

I have attached a patch that has deleted the ""felix.fileinstall.debug"" property (since it doesn't make much sense) and have added a ""felix.fileinstall.log.level"" property, which controls which level of messages get logged. I have then modified the logging methods to associate a log level with the message being logged. Thus, messages only get logged if felix.fileinstall.log.level is greater than zero (i.e., enabled) and if the message log level is less than or equal to the configured log level.

This is an improvement, but logging is still pretty ugly since it is based on a static approach. Seems like it be cleaner to give each DirectoryWatcher its own logger which is properly configured for it, but the patch is better than nothing.

Two issues:

1. Some people may care that I deleted the old property, but really it served little purpose.
2. I wasn't sure which log level to assign to the various messages, so someone may want to check that.

Thoughts?","08/Dec/09 16:48;rickhall;So, does anyone have any feedback on this patch? Should I just go ahead and commit? I am not a user of File Install, so I'd appreciate some feedback.","08/Dec/09 17:00;gnt;Sorry, I missed your patch. Let me until tomorrow to review it.","09/Dec/09 16:34;gnt;I've spotted one slight problem which can lead to a NPE if I understand the patch correctly.
In the Utils file, the patch looks the following:
{code}
@@ -216,11 +240,15 @@
         {
             return true;
         }
-        public void log(boolean debug, String message, Throwable throwable)
+
+        public void log(int logLevel, int msgLevel, String message, Throwable throwable)
         {
-            System.out.println(message + (throwable == null ? """" : "": "" + throwable));
-            if (debug && throwable != null)
+            // Only print the message if logging is enabled and
+            // the message level is less than or equal to the log
+            // level.
+            if ((logLevel > 0) && (msgLevel <= logLevel))
             {
+                System.out.println(message + (throwable == null ? """" : "": "" + throwable));
                 throwable.printStackTrace(System.out);
             }
         }
{code}

if {{throwable}} is {{null}}, this should lead to a NPE which was prevented with the test in the current code.
The remaining of the patch looks good to me.","09/Dec/09 16:44;rickhall;Good catch. I modified the patch to check for null. Sahoo, please close this issue if you are satisfied with the result. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,
Adapter services do not get their adapted services transparently replaced when an aspect is added to them.,FELIX-3186,12528688,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,uiterlix,uiterlix,25/Oct/11 15:20,02/Jan/12 19:23,13/Mar/19 22:56,02/Jan/12 19:23,dependencymanager-3.0.0,,,,dependencymanager-3.0.0,,Dependency Manager,,,0,bug,,,,,"A service consumer consumes an adapter service. The adapter service adapts a service provider.
An aspect is added to the service provider. This should not impact the service consumer.
Expected behavior is transparent replacement of the service the adapter adapts with the aspect service.",mac-osx,,,,,,,,,,,,,,,,,,,,25/Oct/11 15:22;uiterlix;AspectAdapterTest.java;https://issues.apache.org/jira/secure/attachment/12500691/AspectAdapterTest.java,02/Jan/12 16:35;uiterlix;adapteronsomethingwithaspectpatch.patch;https://issues.apache.org/jira/secure/attachment/12509062/adapteronsomethingwithaspectpatch.patch,02/Jan/12 16:35;uiterlix;adapteronsomethingwithaspecttestpatch.patch;https://issues.apache.org/jira/secure/attachment/12509063/adapteronsomethingwithaspecttestpatch.patch,,,3.0,,,,,,,,,,,,,,,,,,,2012-01-02 19:23:52.062,,,no_permission,,,,,,,,,,,,214548,,,Mon Jan 02 19:23:52 UTC 2012,,,,,,0|i0vuvz:,183977,,,,,,,,25/Oct/11 15:22;uiterlix;See attached testcase for reproduction of the issue.,"25/Oct/11 15:23;uiterlix;The testcase also finishes with a warning which needs to be checked:
WARNING: Invocation of 'added' failed. (java.lang.IllegalStateException: Can only register services while bundle is active or activating.)
",02/Jan/12 16:35;uiterlix;Find the enclosed patch which resolves the issue. It also adds the possibility to provide a swap callback method for an adapter service which is called when the service the adapter adapts is changed due to an aspect becoming (un)available. The modified adapter tests are also included in a separate patch file.,"02/Jan/12 19:23;marrs;Thanks for this extensive patch, Xander. As you can see from the commit log, I applied the patches with some changes, so it probably makes sense that you review my changes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error page on component reload,FELIX-3135,12524972,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,v_valchev,lgalfaso,lgalfaso,27/Sep/11 21:47,17/Dec/11 18:27,13/Mar/19 22:56,17/Dec/11 18:27,webconsole-3.1.8,,,,webconsole-ds-plugin-1.0.0,,Web Console,,,0,,,,,,"Reloads returns an error on the web console.
On the web console:
 - Click on ""components""
 - Select any component
 - Click ""reload""

You get an error page.
","Mac OSX, Java 6",,,,,,,,,,,,,,,,,,,,27/Sep/11 21:50;lgalfaso;Screen Shot 2011-09-27 at 6.42.58 PM.png;https://issues.apache.org/jira/secure/attachment/12496803/Screen+Shot+2011-09-27+at+6.42.58+PM.png,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-28 15:58:10.674,,,no_permission,,,,,,,,,,,,33751,,,Sat Dec 17 18:27:43 UTC 2011,,,,,,0|i0vsdb:,183569,,,,,,,,27/Sep/11 21:50;lgalfaso;Screenshot (I did not added as a screenshot as the JIRA Java plugin is a mess in Mac),28/Sep/11 15:58;v_valchev;This is fixed in the SVN. I did that during separation of the plugin in different jar.,17/Dec/11 18:27;fmeschbe;So I think this can be resolved.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When a servlet impl writes to PrintWriter, trailing null byte appended to stream.",FELIX-3274,12535308,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,kgilmer,kgilmer,kgilmer,15/Dec/11 13:45,15/Dec/11 13:48,13/Mar/19 22:56,15/Dec/11 13:48,,,,,,,,,,0,,,,,,"Issue captured in test /org.apache.felix.httplite/src/test/java/org/apache/felix/httplite/osgi/test/cases/TestServletContainer.java test testGETResponseStringContent().

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,220992,,,Thu Dec 15 13:48:26 UTC 2011,,,,,,0|i0vscn:,183566,,,,,,,,15/Dec/11 13:48;kgilmer;Fixed in committed revision 1214756.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PrintWriter in HttpServletResponse does not send string content to client,FELIX-3266,12534640,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,kgilmer,kgilmer,kgilmer,11/Dec/11 06:02,11/Dec/11 06:03,13/Mar/19 22:56,11/Dec/11 06:03,,,,,,,Lightweight HTTP Service,,,0,,,,,,"
The following snippet will fail to send ""Hello"" to HTTP client:

       protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

		resp.getWriter().print(""Hello"");
	}

Only resp.getOutputStream() will work in version 0.1.2.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,220361,,,2011-12-11 06:02:13.0,,,,,,0|i0vsbz:,183563,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] refreshPackages() should stop bundles in one pass and refresh them in a second pass,FELIX-3153,12526461,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,iocanel,iocanel,10/Oct/11 15:47,10/Oct/11 20:13,13/Mar/19 22:56,10/Oct/11 20:00,framework-3.0.9,framework-3.2.2,,,framework-4.0.1,,,,,0,,,,,,"When using refreshPackages on a bundle that is used by a lot of other bundles, it results in error.
There is no deterministic behavior and the error is not always the same, even if I repeat the exact same test twice.

A typical example on how I reproduce it is to refresh the spring-context bundle inside servicemix 4.4 (running on felix).
If I switch to equinox I don't have that issue. That doesn't say much, but I mention it to exclude other possibilities. 

From my logs I see that Felix tries to refresh the bundles in the populated graph with a different order each time (I don't know if this helps identifying the issue).

Usually, the error looks like this:

ERROR: Bundle org.springframework.osgi.extender [83] Error stopping bundle. (java.lang.NoClassDefFoundError: org/osgi/framework/ServiceRegistration)
java.lang.NoClassDefFoundError: org/osgi/framework/ServiceRegistration
	at org.springframework.osgi.util.OsgiServiceUtils.unregisterService(OsgiServiceUtils.java:41)
	at org.springframework.osgi.extender.internal.support.NamespaceManager.unregisterResolverService(NamespaceManager.java:195)
	at org.springframework.osgi.extender.internal.support.NamespaceManager.destroy(NamespaceManager.java:223)
	at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.shutdown(ContextLoaderListener.java:547)
	at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.stop(ContextLoaderListener.java:431)
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:651)
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2216)
	at org.apache.felix.framework.Felix$RefreshHelper.stop(Felix.java:4489)
	at org.apache.felix.framework.Felix.refreshPackages(Felix.java:3581)
	at org.apache.felix.framework.PackageAdminImpl.run(PackageAdminImpl.java:363)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.ClassNotFoundException: org.osgi.framework.ServiceRegistration not found by org.springframework.osgi.core [80]
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:787)
	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:71)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1768)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 11 more
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-10-10 16:07:46.736,,,no_permission,,,,,,,,,,,,56781,,,Mon Oct 10 20:12:29 UTC 2011,,,,,,0|i0vuun:,183971,,,,,,,,10/Oct/11 16:07;rickhall;Try to recreate on the current framework release. Let me know what happens.,"10/Oct/11 17:16;iocanel;I also managed to reproduce the same behavior using 3.2.2. 
An other interesting exception I get from time to time (using the same scenario) is the following:

ERROR: Bundle org.apache.servicemix.jbi.deployer [171] EventDispatcher: Error during dispatch. (java.lang.LinkageError: loader constraint violation: loader (instance of org/apache/felix/framework/ModuleImpl$ModuleClassLoaderJava5) previously initiated loading for a different type with name ""org/apache/servicemix/executors/Executor"")
java.lang.LinkageError: loader constraint violation: loader (instance of org/apache/felix/framework/ModuleImpl$ModuleClassLoaderJava5) previously initiated loading for a different type with name ""org/apache/servicemix/executors/Executor""
	at org.apache.servicemix.wsn.component.WSNComponent$WSNEndpointManager.unregister(WSNComponent.java:291)
	at org.apache.servicemix.wsn.AbstractEndpoint.unregister(AbstractEndpoint.java:52)
	at org.apache.servicemix.wsn.AbstractPublisher.destroy(AbstractPublisher.java:81)
	at org.apache.servicemix.wsn.jms.JmsPublisher.destroy(JmsPublisher.java:149)
	at org.apache.servicemix.wsn.AbstractNotificationBroker.destroy(AbstractNotificationBroker.java:104)
	at org.apache.servicemix.wsn.jms.JmsNotificationBroker.destroy(JmsNotificationBroker.java:58)
	at org.apache.servicemix.wsn.component.WSNComponent.doShutDown(WSNComponent.java:191)
	at org.apache.servicemix.common.AsyncBaseLifeCycle.shutDown(AsyncBaseLifeCycle.java:259)
	at org.apache.servicemix.jbi.deployer.artifacts.ComponentImpl$ComponentWrapper.shutDown(ComponentImpl.java:277)
	at org.apache.servicemix.jbi.deployer.artifacts.ComponentImpl.shutDown(ComponentImpl.java:182)
	at org.apache.servicemix.jbi.deployer.impl.Deployer.unregisterComponent(Deployer.java:452)
	at org.apache.servicemix.jbi.deployer.impl.Deployer.unregisterDeployedComponent(Deployer.java:676)
	at org.apache.servicemix.jbi.deployer.impl.Deployer$1.removedService(Deployer.java:223)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerRemoved(ServiceTracker.java:922)
	at org.osgi.util.tracker.AbstractTracked.untrack(AbstractTracked.java:351)
	at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:865)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:871)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:733)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3890)
	at org.apache.felix.framework.Felix.access$000(Felix.java:79)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:728)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:135)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:129)
	at org.apache.aries.blueprint.container.ServiceRecipe.unregister(ServiceRecipe.java:201)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.notifySatisfaction(BlueprintContainerImpl.java:615)
	at org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.setSatisfied(AbstractServiceReferenceRecipe.java:305)
	at org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.serviceRemoved(AbstractServiceReferenceRecipe.java:281)
	at org.apache.aries.blueprint.container.AbstractServiceReferenceRecipe.serviceChanged(AbstractServiceReferenceRecipe.java:251)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:871)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:733)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3890)
	at org.apache.felix.framework.Felix.access$000(Felix.java:79)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:728)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:135)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:129)
	at org.apache.aries.blueprint.container.ServiceRecipe.unregister(ServiceRecipe.java:201)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.unregisterServices(BlueprintContainerImpl.java:673)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.namespaceHandlerUnregistered(BlueprintContainerImpl.java:866)
	at org.apache.aries.blueprint.namespace.NamespaceHandlerRegistryImpl$NamespaceHandlerSetImpl.unregisterHandler(NamespaceHandlerRegistryImpl.java:365)
	at org.apache.aries.blueprint.namespace.NamespaceHandlerRegistryImpl.unregisterHandler(NamespaceHandlerRegistryImpl.java:149)
	at org.apache.aries.blueprint.namespace.NamespaceHandlerRegistryImpl.removedService(NamespaceHandlerRegistryImpl.java:119)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerRemoved(ServiceTracker.java:922)
	at org.osgi.util.tracker.AbstractTracked.untrack(AbstractTracked.java:351)
	at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:865)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:871)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:733)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3890)
	at org.apache.felix.framework.Felix.access$000(Felix.java:79)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:728)
	at org.apache.felix.framework.ServiceRegistry.unregisterService(ServiceRegistry.java:135)
	at org.apache.felix.framework.ServiceRegistrationImpl.unregister(ServiceRegistrationImpl.java:129)
	at org.apache.aries.blueprint.container.ServiceRecipe.unregister(ServiceRecipe.java:201)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.unregisterServices(BlueprintContainerImpl.java:673)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.destroy(BlueprintContainerImpl.java:822)
	at org.apache.aries.blueprint.container.BlueprintExtender.destroyContext(BlueprintExtender.java:250)
	at org.apache.aries.blueprint.container.BlueprintExtender.bundleChanged(BlueprintExtender.java:242)
	at org.apache.aries.blueprint.container.BlueprintExtender$BlueprintBundleTrackerCustomizer.modifiedBundle(BlueprintExtender.java:431)
	at org.osgi.util.tracker.BundleTracker$Tracked.customizerModified(BundleTracker.java:453)
	at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:237)
	at org.osgi.util.tracker.BundleTracker$Tracked.bundleChanged(BundleTracker.java:413)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:807)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:729)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:610)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3879)
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2268)
	at org.apache.felix.framework.Felix$RefreshHelper.stop(Felix.java:4668)
	at org.apache.felix.framework.Felix.refreshPackages(Felix.java:3699)
	at org.apache.felix.framework.PackageAdminImpl.run(PackageAdminImpl.java:365)
	at java.lang.Thread.run(Thread.java:680)
",10/Oct/11 17:18;iocanel;I haven't tried 4.0.0 (if this is what you meant by current release) since it still requires some more work to be used with karaf/servicemix. ,"10/Oct/11 17:31;rickhall;Yes, the ""current"" release is 4.0.0. :-)

Can you just replace the old Felix framework JAR file with the new one in Karaf as a quick and dirty fix? I don't think it should look much different from a client's perspective.","10/Oct/11 18:51;iocanel;Richard,

thanks for your lightning fast responses. I appreciate the help!
Unfortunately, the dirty fix doesn't work. I get plenty of errors. So I guess that I will have to spent some more time with it.","10/Oct/11 19:53;rickhall;Ok, I hacked up ServiceMix to run with framework 4.0.0...the difficult part is that they provide their own OSGi API classes instead of using the ones coming from the framework...this is probably not a smart thing since frameworks are free to make implementation-specific adaptations to the OSGi API implementations, so you cannot be sure that a given framework will work properly with the original OSGi JARs. At any rate...

I was able to reproduce similar issues. In the end, I believe I understand at least some aspect of what is going wrong. When refreshing bundles, the Felix framework is stopping and refreshing bundles one at a time, when in fact it should be stopping them all first, then refreshing them all in a separate pass, and finally restarting them again in a third pass. So, I will commit a patch to do just that and change the subject of this bug to more accurately reflect the issue.

Unfortunately, it doesn't appear to make the refresh of the spring context bundle work correctly, but at least the error is more consistent and controlled. I regularly see this:

ERROR: Bundle org.apache.servicemix.jbi.osgi [123] EventDispatcher: Error during dispatch. (org.apache.servicemix.nmr.api.ServiceMixException: Unable to register service servicemix-wsn2005 with properties {NAME=servicemix-wsn2005, objectClass=[Ljava.lang.String;@2cf9f1b5, service.id=725, TYPE=service-engine}. Reason: javax.jbi.JBIException: Error calling init)
org.apache.servicemix.nmr.api.ServiceMixException: Unable to register service servicemix-wsn2005 with properties {NAME=servicemix-wsn2005, objectClass=[Ljava.lang.String;@2cf9f1b5, service.id=725, TYPE=service-engine}. Reason: javax.jbi.JBIException: Error calling init
	at org.apache.servicemix.nmr.core.ServiceRegistryImpl.register(ServiceRegistryImpl.java:52)
	at org.apache.servicemix.nmr.osgi.OsgiServiceRegistryTracker.addingService(OsgiServiceRegistryTracker.java:78)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:980)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:906)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:262)
	at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:234)
	at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:941)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:932)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:793)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:543)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:4250)
	at org.apache.felix.framework.Felix.registerService(Felix.java:3275)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:346)
	at org.apache.servicemix.jbi.deployer.impl.Deployer.registerService(Deployer.java:762)
	at org.apache.servicemix.jbi.deployer.impl.Deployer.registerComponent(Deployer.java:418)
	at org.apache.servicemix.jbi.deployer.impl.ComponentInstaller.initComponent(ComponentInstaller.java:424)
	at org.apache.servicemix.jbi.deployer.impl.ComponentInstaller.install(ComponentInstaller.java:150)
	at org.apache.servicemix.jbi.deployer.impl.Deployer.registerDeployedComponent(Deployer.java:657)
	at org.apache.servicemix.jbi.deployer.impl.Deployer$1.addingService(Deployer.java:222)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:980)
	at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:906)
	at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:262)
	at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:234)
	at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:941)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:932)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:793)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:543)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:4250)
	at org.apache.felix.framework.Felix.registerService(Felix.java:3275)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:346)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.registerService(BlueprintContainerImpl.java:388)
	at org.apache.aries.blueprint.container.ServiceRecipe.register(ServiceRecipe.java:166)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.registerServices(BlueprintContainerImpl.java:646)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:314)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:213)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.jbi.JBIException: Error calling init
	at org.apache.servicemix.common.AsyncBaseLifeCycle.init(AsyncBaseLifeCycle.java:213)
	at org.apache.servicemix.jbi.deployer.artifacts.ComponentImpl$ComponentWrapper.init(ComponentImpl.java:247)
	at org.apache.servicemix.jbi.runtime.impl.ComponentRegistryImpl.doRegister(ComponentRegistryImpl.java:89)
	at org.apache.servicemix.jbi.runtime.impl.ComponentRegistryImpl.doRegister(ComponentRegistryImpl.java:38)
	at org.apache.servicemix.nmr.core.ServiceRegistryImpl.register(ServiceRegistryImpl.java:47)
	... 42 more
Caused by: javax.jms.JMSException: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:286)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:230)
	at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:178)
	at org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:137)
	at org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:121)
	at org.apache.activemq.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:92)
	at $javax.jms.ConnectionFactory$$EnhancerByCGLIB$$786945a.createConnection(<generated>)
	at org.apache.servicemix.wsn.jms.JmsNotificationBroker.init(JmsNotificationBroker.java:48)
	at org.apache.servicemix.wsn.component.WSNComponent.doInit(WSNComponent.java:147)
	at org.apache.servicemix.common.AsyncBaseLifeCycle.init(AsyncBaseLifeCycle.java:205)
	... 46 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:432)
	at java.net.Socket.connect(Socket.java:529)
	at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:484)
	at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:447)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.transport.InactivityMonitor.start(InactivityMonitor.java:127)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:266)
	... 55 more",10/Oct/11 19:58;iocanel;This is probably one step. Maybe hacking the order of refresh could be the trick?,"10/Oct/11 20:00;rickhall;I have committed a patch for the issue related to the framework not refreshing bundles in multiple passes; this fix will go out in the 4.0.1 release happening today. If you cannot use 4.0.1 yet, then you can port the patch for this issue to 3.0.9, it should be really easy. If you are satisfied by this fix, please close this issue.

The other issue (i.e., connection refused) appearing when refreshing the Spring context bundle may or may not be related to Felix. If you feel that it is, please open up a separate issue for it. Thanks.","10/Oct/11 20:12;rickhall;I don't see how the order of refresh would play a role here. Once stop is called on all bundles they should cease to execute any code. If the bundles misbehaved and continued to let their threads execute after stop(), then you might see failures.

I suppose one other possibility where order could be important is for bundles whose code assumed they were active and thus had bundle contexts (e.g., lazily activated bundles). If so, that would be another good argument against lazy activation because it makes your bundle dependent on deactivation order.

You can open up another bug for that and I can look into it too, but not for this release.",,,,,,,,,,,,,,,,,,,,,,,
[Framework] Provide org.osgi.util.tracker version 1.5,FELIX-3015,12511947,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,pascalrapicault,pascalrapicault,28/Jun/11 03:06,31/Aug/11 17:50,13/Mar/19 22:56,31/Aug/11 17:50,,,,,framework-4.0.0,,Framework,,,0,,,,,,"Code from trunk.

I must be missing something but when I run the attached jar of the framework which export org.osgi.util.tracker 1.5 and try to import the tracker package 1.5 from another bundle it fails. Doing a headers command shows that the fwk exports version 1.4... I'm confused :)
",,,,,,,,,,,,,,,,,,,,,28/Jun/11 03:07;pascalrapicault;TestTRacker_1.0.0.201106280449.jar;https://issues.apache.org/jira/secure/attachment/12484380/TestTRacker_1.0.0.201106280449.jar,28/Jun/11 03:07;pascalrapicault;felix.jar;https://issues.apache.org/jira/secure/attachment/12484379/felix.jar,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-28 14:49:24.451,,,no_permission,,,,,,,,,,,,55977,,,Wed Aug 31 17:50:07 UTC 2011,,,,,,0|i0vs93:,183550,,,,,,,,28/Jun/11 03:07;pascalrapicault;Attaching fwk jar built locally from trunk and a test bundle.,"28/Jun/11 14:49;rickhall;To the best of my knowledge Service Tracker 1.5 is provisional (i.e., it hasn't been released yet), so the framework does only include 1.4. Please close if you are satisfied. Thanks.","28/Jun/11 17:25;pascalrapicault;There is something fishy going on. The manifest in the attached felix jar is shown below and it definitely advertises tracker 1.5. Now when I do a headers command in the console, I see tracker 1.4 being exported from the fwk. So even though technically speaking the 1.5 tracker is not released yet (though from what I heard from Tom W. it will be released this summer) there is still something going on since the fwk manifest says 1.5.

Manifest-Version: 1.0
Export-Package: org.osgi.service.startlevel;uses:=""org.osgi.framework""
 ;version=""1.1"",org.osgi.framework.launch;uses:=""org.osgi.framework"";v
 ersion=""1.0"",org.osgi.framework.startlevel;uses:=""org.osgi.framework""
 ;version=""1.0"",org.osgi.util.tracker;uses:=""org.osgi.framework"";versi
 on=""1.5"",org.osgi.framework.wiring;uses:=""org.osgi.framework"";version
 =""1.0"",org.osgi.framework;version=""1.6"",org.osgi.service.url;version=
 ""1.0"",org.osgi.framework.hooks.weaving;uses:=""org.osgi.framework.wiri
 ng"";version=""1.0"",org.osgi.service.packageadmin;uses:=""org.osgi.frame
 work"";version=""1.2"",org.osgi.framework.hooks.bundle;uses:=""org.osgi.f
 ramework"";version=""1.0"",org.osgi.framework.hooks.service;uses:=""org.o
 sgi.framework"";version=""1.1"",org.osgi.framework.hooks.resolver;uses:=
 ""org.osgi.framework.wiring"";version=""1.0""
Private-Package: org.apache.felix.framework,org.apache.felix.framework
 .cache,org.apache.felix.framework.capabilityset,org.apache.felix.fram
 ework.ext,org.apache.felix.framework.resolver,org.apache.felix.framew
 ork.util,org.apache.felix.framework.util.manifestparser,org.apache.fe
 lix.framework.wiring,org.apache.felix.main
Ignore-Package: java.util.jar,java.nio.channels,java.util,java.net,org
 .osgi.framework.startlevel,org.osgi.framework.wiring,org.osgi.service
 .url,dalvik.system,org.osgi.framework.hooks.service,org.osgi.framewor
 k.hooks.resolver,org.osgi.service.startlevel,java.io,org.osgi.framewo
 rk.launch,org.osgi.util.tracker,java.util.zip,java.lang.ref,javax.sec
 urity.auth.x500,java.lang,org.osgi.service.packageadmin,org.osgi.fram
 ework.hooks.bundle,java.security,java.lang.reflect,java.security.cert
 ,org.osgi.framework,org.osgi.framework.hooks.weaving,android.dalvik
Built-By: rickhall
Tool: Bnd-0.0.255
Bundle-Name: Apache Felix
Created-By: Apache Maven Bundle Plugin
Bundle-Vendor: The Apache Software Foundation
Build-Jdk: 1.6.0_24
Bundle-Version: 3.3.0.SNAPSHOT
Bnd-LastModified: 1309207710036
Bundle-ManifestVersion: 2
Bundle-Description: OSGi R4 framework.
Bundle-License: http://www.apache.org/licenses/LICENSE-2.0.txt
Bundle-DocURL: http://www.apache.org/
Bundle-SymbolicName: org.apache.felix.main
Embed-Dependency: *;artifactId=org.apache.felix.framework;inline=true
Main-Class: org.apache.felix.main.Main

=-=-=-= Output from the headers command =-=-=-=-=

System Bundle (0)
-----------------
Bundle-Description = This bundle is system specific; it implements various system services.
Bundle-ManifestVersion = 2
Bundle-Name = System Bundle
Bundle-SymbolicName = org.apache.felix.framework
Bundle-Version = 3.3.0.SNAPSHOT
Export-Package = org.osgi.framework; version=""1.6.0"", org.osgi.framework.launch; version=""1.0.0"", org.osgi.framework.hooks.service; version=""1.0.0"", org.osgi.framework.wiring; version=""1.0.0"", org.osgi.service.packageadmin; version=""1.2.0"", org.osgi.service.startlevel; version=""1.1.0"", org.osgi.service.url; version=""1.0.0"", org.osgi.util.tracker; version=""1.4.0"", javax.accessibility; version=""0.0.0.1_006_JavaSE"", javax.activation; version=""0.0.0.1_006_JavaSE"", javax.activity; version=""0.0.0.1_006_JavaSE"", javax.annotation; version=""0.0.0.1_006_JavaSE"", javax.annotation.processing; version=""0.0.0.1_006_JavaSE"", javax.crypto; version=""0.0.0.1_006_JavaSE"", javax.crypto.interfaces; version=""0.0.0.1_006_JavaSE"", javax.crypto.spec; version=""0.0.0.1_006_JavaSE"", javax.imageio; version=""0.0.0.1_006_JavaSE"", javax.imageio.event; version=""0.0.0.1_006_JavaSE"", javax.imageio.metadata; version=""0.0.0.1_006_JavaSE"", javax.imageio.plugins.bmp; version=""0.0.0.1_006_JavaSE"", javax.imageio.plugins.jpeg; version=""0.0.0.1_006_JavaSE"", javax.imageio.spi; version=""0.0.0.1_006_JavaSE"", javax.imageio.stream; version=""0.0.0.1_006_JavaSE"", javax.jws; version=""0.0.0.1_006_JavaSE"", javax.jws.soap; version=""0.0.0.1_006_JavaSE"", javax.lang.model; version=""0.0.0.1_006_JavaSE"", javax.lang.model.element; version=""0.0.0.1_006_JavaSE"", javax.lang.model.type; version=""0.0.0.1_006_JavaSE"", javax.lang.model.util; version=""0.0.0.1_006_JavaSE"", javax.management; version=""0.0.0.1_006_JavaSE"", javax.management.loading; version=""0.0.0.1_006_JavaSE"", javax.management.modelmbean; version=""0.0.0.1_006_JavaSE"", javax.management.monitor; version=""0.0.0.1_006_JavaSE"", javax.management.openmbean; version=""0.0.0.1_006_JavaSE"", javax.management.relation; version=""0.0.0.1_006_JavaSE"", javax.management.remote; version=""0.0.0.1_006_JavaSE"", javax.management.remote.rmi; version=""0.0.0.1_006_JavaSE"", javax.management.timer; version=""0.0.0.1_006_JavaSE"", javax.naming; version=""0.0.0.1_006_JavaSE"", javax.naming.directory; version=""0.0.0.1_006_JavaSE"", javax.naming.event; version=""0.0.0.1_006_JavaSE"", javax.naming.ldap; version=""0.0.0.1_006_JavaSE"", javax.naming.spi; version=""0.0.0.1_006_JavaSE"", javax.net; version=""0.0.0.1_006_JavaSE"", javax.net.ssl; version=""0.0.0.1_006_JavaSE"", javax.print; version=""0.0.0.1_006_JavaSE"", javax.print.attribute; version=""0.0.0.1_006_JavaSE"", javax.print.attribute.standard; version=""0.0.0.1_006_JavaSE"", javax.print.event; version=""0.0.0.1_006_JavaSE"", javax.rmi; version=""0.0.0.1_006_JavaSE"", javax.rmi.CORBA; version=""0.0.0.1_006_JavaSE"", javax.rmi.ssl; version=""0.0.0.1_006_JavaSE"", javax.script; version=""0.0.0.1_006_JavaSE"", javax.security.auth; version=""0.0.0.1_006_JavaSE"", javax.security.auth.callback; version=""0.0.0.1_006_JavaSE"", javax.security.auth.kerberos; version=""0.0.0.1_006_JavaSE"", javax.security.auth.login; version=""0.0.0.1_006_JavaSE"", javax.security.auth.spi; version=""0.0.0.1_006_JavaSE"", javax.security.auth.x500; version=""0.0.0.1_006_JavaSE"", javax.security.cert; version=""0.0.0.1_006_JavaSE"", javax.security.sasl; version=""0.0.0.1_006_JavaSE"", javax.sound.midi; version=""0.0.0.1_006_JavaSE"", javax.sound.midi.spi; version=""0.0.0.1_006_JavaSE"", javax.sound.sampled; version=""0.0.0.1_006_JavaSE"", javax.sound.sampled.spi; version=""0.0.0.1_006_JavaSE"", javax.sql; version=""0.0.0.1_006_JavaSE"", javax.sql.rowset; version=""0.0.0.1_006_JavaSE"", javax.sql.rowset.serial; version=""0.0.0.1_006_JavaSE"", javax.sql.rowset.spi; version=""0.0.0.1_006_JavaSE"", javax.swing; version=""0.0.0.1_006_JavaSE"", javax.swing.border; version=""0.0.0.1_006_JavaSE"", javax.swing.colorchooser; version=""0.0.0.1_006_JavaSE"", javax.swing.event; version=""0.0.0.1_006_JavaSE"", javax.swing.filechooser; version=""0.0.0.1_006_JavaSE"", javax.swing.plaf; version=""0.0.0.1_006_JavaSE"", javax.swing.plaf.basic; version=""0.0.0.1_006_JavaSE"", javax.swing.plaf.metal; version=""0.0.0.1_006_JavaSE"", javax.swing.plaf.multi; version=""0.0.0.1_006_JavaSE"", javax.swing.plaf.synth; version=""0.0.0.1_006_JavaSE"", javax.swing.table; version=""0.0.0.1_006_JavaSE"", javax.swing.text; version=""0.0.0.1_006_JavaSE"", javax.swing.text.html; version=""0.0.0.1_006_JavaSE"", javax.swing.text.html.parser; version=""0.0.0.1_006_JavaSE"", javax.swing.text.rtf; version=""0.0.0.1_006_JavaSE"", javax.swing.tree; version=""0.0.0.1_006_JavaSE"", javax.swing.undo; version=""0.0.0.1_006_JavaSE"", javax.tools; version=""0.0.0.1_006_JavaSE"", javax.transaction; version=""0.0.0.1_006_JavaSE"", javax.transaction.xa; version=""0.0.0.1_006_JavaSE"", javax.xml; version=""0.0.0.1_006_JavaSE"", javax.xml.bind; version=""0.0.0.1_006_JavaSE"", javax.xml.bind.annotation; version=""0.0.0.1_006_JavaSE"", javax.xml.bind.annotation.adapters; version=""0.0.0.1_006_JavaSE"", javax.xml.bind.attachment; version=""0.0.0.1_006_JavaSE"", javax.xml.bind.helpers; version=""0.0.0.1_006_JavaSE"", javax.xml.bind.util; version=""0.0.0.1_006_JavaSE"", javax.xml.crypto; version=""0.0.0.1_006_JavaSE"", javax.xml.crypto.dom; version=""0.0.0.1_006_JavaSE"", javax.xml.crypto.dsig; version=""0.0.0.1_006_JavaSE"", javax.xml.crypto.dsig.dom; version=""0.0.0.1_006_JavaSE"", javax.xml.crypto.dsig.keyinfo; version=""0.0.0.1_006_JavaSE"", javax.xml.crypto.dsig.spec; version=""0.0.0.1_006_JavaSE"", javax.xml.datatype; version=""0.0.0.1_006_JavaSE"", javax.xml.namespace; version=""0.0.0.1_006_JavaSE"", javax.xml.parsers; version=""0.0.0.1_006_JavaSE"", javax.xml.soap; version=""0.0.0.1_006_JavaSE"", javax.xml.stream; version=""0.0.0.1_006_JavaSE"", javax.xml.stream.events; version=""0.0.0.1_006_JavaSE"", javax.xml.stream.util; version=""0.0.0.1_006_JavaSE"", javax.xml.transform; version=""0.0.0.1_006_JavaSE"", javax.xml.transform.dom; version=""0.0.0.1_006_JavaSE"", javax.xml.transform.sax; version=""0.0.0.1_006_JavaSE"", javax.xml.transform.stax; version=""0.0.0.1_006_JavaSE"", javax.xml.transform.stream; version=""0.0.0.1_006_JavaSE"", javax.xml.validation; version=""0.0.0.1_006_JavaSE"", javax.xml.ws; version=""0.0.0.1_006_JavaSE"", javax.xml.ws.handler; version=""0.0.0.1_006_JavaSE"", javax.xml.ws.handler.soap; version=""0.0.0.1_006_JavaSE"", javax.xml.ws.http; version=""0.0.0.1_006_JavaSE"", javax.xml.ws.soap; version=""0.0.0.1_006_JavaSE"", javax.xml.ws.spi; version=""0.0.0.1_006_JavaSE"", javax.xml.ws.wsaddressing; version=""0.0.0.1_006_JavaSE"", javax.xml.xpath; version=""0.0.0.1_006_JavaSE"", org.ietf.jgss; version=""0.0.0.1_006_JavaSE"", org.omg.CORBA; version=""0.0.0.1_006_JavaSE"", org.omg.CORBA_2_3; version=""0.0.0.1_006_JavaSE"", org.omg.CORBA_2_3.portable; version=""0.0.0.1_006_JavaSE"", org.omg.CORBA.DynAnyPackage; version=""0.0.0.1_006_JavaSE"", org.omg.CORBA.ORBPackage; version=""0.0.0.1_006_JavaSE"", org.omg.CORBA.portable; version=""0.0.0.1_006_JavaSE"", org.omg.CORBA.TypeCodePackage; version=""0.0.0.1_006_JavaSE"", org.omg.CosNaming; version=""0.0.0.1_006_JavaSE"", org.omg.CosNaming.NamingContextExtPackage; version=""0.0.0.1_006_JavaSE"", org.omg.CosNaming.NamingContextPackage; version=""0.0.0.1_006_JavaSE"", org.omg.Dynamic; version=""0.0.0.1_006_JavaSE"", org.omg.DynamicAny; version=""0.0.0.1_006_JavaSE"", org.omg.DynamicAny.DynAnyFactoryPackage; version=""0.0.0.1_006_JavaSE"", org.omg.DynamicAny.DynAnyPackage; version=""0.0.0.1_006_JavaSE"", org.omg.IOP; version=""0.0.0.1_006_JavaSE"", org.omg.IOP.CodecFactoryPackage; version=""0.0.0.1_006_JavaSE"", org.omg.IOP.CodecPackage; version=""0.0.0.1_006_JavaSE"", org.omg.Messaging; version=""0.0.0.1_006_JavaSE"", org.omg.PortableInterceptor; version=""0.0.0.1_006_JavaSE"", org.omg.PortableInterceptor.ORBInitInfoPackage; version=""0.0.0.1_006_JavaSE"", org.omg.PortableServer; version=""0.0.0.1_006_JavaSE"", org.omg.PortableServer.CurrentPackage; version=""0.0.0.1_006_JavaSE"", org.omg.PortableServer.POAManagerPackage; version=""0.0.0.1_006_JavaSE"", org.omg.PortableServer.POAPackage; version=""0.0.0.1_006_JavaSE"", org.omg.PortableServer.portable; version=""0.0.0.1_006_JavaSE"", org.omg.PortableServer.ServantLocatorPackage; version=""0.0.0.1_006_JavaSE"", org.omg.SendingContext; version=""0.0.0.1_006_JavaSE"", org.omg.stub.java.rmi; version=""0.0.0.1_006_JavaSE"", org.omg.stub.javax.management.remote.rmi; version=""0.0.0.1_006_JavaSE"", org.w3c.dom; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.bootstrap; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.css; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.events; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.html; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.ls; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.ranges; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.stylesheets; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.traversal; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.views; version=""0.0.0.1_006_JavaSE"", org.w3c.dom.xpath; version=""0.0.0.1_006_JavaSE"", org.xml.sax; version=""0.0.0.1_006_JavaSE"", org.xml.sax.ext; version=""0.0.0.1_006_JavaSE"", org.xml.sax.helpers; version=""0.0.0.1_006_JavaSE""
Export-Service = org.osgi.service.packageadmin.PackageAdmin,org.osgi.service.startlevel.StartLevel,org.osgi.service.url.URLHandlers

TestTRacker (1)
---------------
Bundle-ManifestVersion = 2
Bundle-Name = TestTRacker
Bundle-SymbolicName = TestTRacker
Bundle-Version = 1.0.0.201106280449
Import-Package = org.osgi.util.tracker;version=""1.5.0""
Manifest-Version = 1.0",28/Jun/11 17:25;pascalrapicault;Reopening to continue the conversation,"28/Jun/11 17:55;rickhall;Yeah, there is something a little fishy here. It does appear that Service Tracker 1.5 is included in framework trunk, even though it hasn't been released yet (neither has framework trunk, for that matter). I guess we need to decide if we will keep this in there or not, but I can defer that decision until we go to release framework trunk, which won't happen until framework 4.0. In the meantime, I'll update the framework properties to export 1.5.

FYI, one reason you are confused, is that you expect the manifest file to be the rule that defines what the system bundle exports, but it is not the case for the Felix framework. The framework's OSGi manifest headers are present purely because we use bnd to create it, not because they serve any purpose. All of that is controlled by configuration properties and the default properties are in the default.properties file embedded in the framework.jar file. In this file, it still says the framework is exporting 1.4...I will change that now to be 1.5.

However, I'll leave this bug open and assign its fix version so I can remember to deal with this one way or the other before releasing framework 4.0. Thanks.",28/Jun/11 22:06;pascalrapicault;It was indeed the presence of 1.5 in the manifest that confused me :) I'm now up and running.,"31/Aug/11 17:50;rickhall;After some discussions inside the OSGi Alliance, I will keep tracker 1.5 in the next release of the framework since tracker 1.5 is effectively released, even though it is not officially available yet from the OSGi Alliance. In particular, it has already shipped in Equinox and any future changes to it will require version number changes. To avoid this type of situation in the future, the tracker package will be moved into the core spec for R4.4.",,,,,,,,,,,,,,,,,,,,,,,,,
getServiceReferences() should not return an empty array,FELIX-3057,12515489,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,marrs,marrs,27/Jul/11 08:39,27/Jul/11 09:44,13/Mar/19 22:56,27/Jul/11 09:44,dependencymanager-3.0.0,,,,,,Dependency Manager,,,0,,,,,,"When using the (still experimental) filter indices, under certain circumstances you can get an index out of bounds exception in the ServiceDependencyImpl.lookupService() method. The cause is an empty array being returned by BundleContext.getServiceReferences(). The spec states the method should return null in these cases in stead. The problem is in the filter index, which intercepts the bundle context, but does not special case for this, simply returning empty arrays if there were no references (or none were assignable).",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,55939,,,Wed Jul 27 09:44:37 UTC 2011,,,,,,0|i0vupb:,183947,,,,,,,,27/Jul/11 09:44;marrs;Committed both a test and a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The System Bundle is not providing WS Addressing,FELIX-2073,12456147,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,jvazquez,jvazquez,12/Feb/10 15:36,15/Jun/11 16:27,13/Mar/19 22:56,13/Feb/10 03:40,framework-2.0.3,,,,framework-2.0.4,,Framework,,,0,,,,,,The System Bundle is not providing support for WS Addressing because the package javax.xml.ws.wsaddressing is missing in the jre-1.6.properties file.,JRE 1.6,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-13 03:40:09.869,,,no_permission,,,,,,,,,,,,56658,,,Sat Feb 13 03:40:09 UTC 2010,,,,,,0|i0vs87:,183546,,,,,,,,"13/Feb/10 03:40;rickhall;Committed a patch. This will go out in Framework 2.0.4. Please close if satisfied, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InvocationUtil cache is not used properly for determining that methods do not exist in a class,FELIX-2976,12508697,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,marrs,marrs,marrs,30/May/11 09:54,30/May/11 10:04,13/Mar/19 22:56,30/May/11 10:04,dependencymanager-3.0.0,,,,,,Dependency Manager,,,0,,,,,,"There is a bug in the InvocationUtil cache that prevents it from properly remembering that certain methods did not exist in a class. InvocationUtil.getDeclaredMethod(...) checks the cache and only returns something when the cache does not return null. But, null is actually a valid result, so we need to add a check to see if they key was in the map but with a null value.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56010,,,2011-05-30 09:54:11.0,,,,,,0|i0vs7j:,183543,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle.getEntryPaths and findEntries are returning META-INF/ multiple times,FELIX-2935,12505301,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,27/Apr/11 12:31,11/May/11 17:41,13/Mar/19 22:56,09/May/11 15:49,framework-3.0.8,,,,framework-3.2.2,,Framework,,,0,,,,,,"Bundle.getEntryPaths(""/"") and Bundle.findEntries(""/"", ""*"", true) return META-INF/ twice. There is no fragment attached, so there is no reason for findEntries to return twice.

My code looks like this:
    void printEntryPaths(Bundle b, String s) {
        Enumeration e = b.getEntryPaths(s);
        if (e!=null) {
            while (e.hasMoreElements()) {
                String next = (String)e.nextElement();
                System.out.println(next);
                printEntryPaths(b, next);
            }
        }
    }


    void printEntryPaths2(Bundle b, String s) {
        Enumeration e = b.findEntries(s, ""*"", true);
        if (e != null) {
            while (e.hasMoreElements()) {
                URL next = (URL)e.nextElement();
                System.out.println(next.getPath());
            }
        }
    }

This seems to be a regression.",,,,,,,,,,,,,,,,,,,,,27/Apr/11 12:34;sahoo;FELIX-2935.zip;https://issues.apache.org/jira/secure/attachment/12477533/FELIX-2935.zip,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-27 15:45:35.75,,,no_permission,,,,,,,,,,,,56048,,,Mon May 09 15:49:49 UTC 2011,,,,,,0|i0vs6f:,183538,,,,,,,,27/Apr/11 12:34;sahoo;Unzip. See README for simple instructions to test.,"27/Apr/11 15:45;rickhall;This is what I see:

g! lb
START LEVEL 1
   ID|State      |Level|Name
    0|Active     |    0|System Bundle (3.0.8)
    1|Active     |    1|Apache Felix Bundle Repository (1.6.2)
    2|Active     |    1|Apache Felix Gogo Command (0.8.0)
    3|Active     |    1|Apache Felix Gogo Runtime (0.8.0)
    4|Active     |    1|Apache Felix Gogo Shell (0.8.0)
    5|Installed  |    1|print-bundle-entries (1.0.0.SNAPSHOT)
g! start 5
Foo() called
sahoo.osgitest1.Foo@13e58d4.start()
Installed rfc143.test4 [6]
Using printEntryPaths
META-INF/
META-INF/MANIFEST.MF
index.html
WEB-INF/
WEB-INF/lib/
WEB-INF/lib/entities1-osgi.jar
Using printEntryPaths2
/META-INF/
/META-INF/MANIFEST.MF
/index.html
/WEB-INF/
/WEB-INF/lib/
/WEB-INF/lib/entities1-osgi.jar
Uninstalled rfc143.test4 [6]
g! 

What should I be seeing? Maybe it is platform specific.","28/Apr/11 13:54;rickhall;After some investigation, I determined that this bug is actually happening and that it occurs when a directory entry in the JAR appears after an entry in the directory. Duplicate bug FELIX-2940 has a pretty good explanation.","09/May/11 15:49;rickhall;Committed a patch. Please close this issue if satisfied, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix Framework 3.2.0 and Framework Security 1.4.2 fails OSGI Conditional Permission Admin CT when running on IBM JVM 5 and 6.,FELIX-2941,12505717,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,jwross@us.ibm.com,jwross@us.ibm.com,28/Apr/11 19:53,11/May/11 17:41,13/Mar/19 22:56,28/Apr/11 21:38,framework-3.2.0,,,,framework-3.2.2,,Framework,,,0,,,,,,"I was executing the ConditionalTestControl.testMultipleBundlesOnStack() test case of the org.osgi.test.cases.condpermadmin CT using org.apache.felix.framework-3.2.0.jar and org.apache.felix.framework.security-1.4.2.jar but ran into the following issue using IBM JVM 5 and 6. Ran fine on Oracle JVM 6 and IBM JVM 4.2.

org.osgi.framework.BundleException: Activator start error in bundle org.osgi.test.cases.condpermadmin.tb2 [5].
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1899)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1769)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:927)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:914)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:510)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:496)
	at org.osgi.test.cases.condpermadmin.junit.ConditionalTestControl.setState(ConditionalTestControl.java:823)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.setUp(DefaultTestBundleControl.java:51)
	at junit.framework.TestCase.runBare(TestCase.java:128)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:200)
	at aQute.junit.Activator.run(Activator.java:51)
Caused by: java.lang.SecurityException: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)
	at org.apache.felix.framework.Felix$1.checkPermission(Felix.java:560)
	at java.lang.ClassLoader.getParent(ClassLoader.java:420)
	at org.apache.felix.framework.ModuleImpl.getBootDelegationClassLoader(ModuleImpl.java:1684)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:722)
	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:72)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1801)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:619)
	at org.osgi.test.cases.condpermadmin.tb2.Activator.start(Activator.java:44)
	at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1243)
	at java.security.AccessController.doPrivileged(AccessController.java:284)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:620)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1852)
	... 16 more
Caused by: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)
	at java.security.AccessController.checkPermission(AccessController.java:108)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:544)
	at org.apache.felix.framework.Felix$1.checkPermission(Felix.java:556)
	... 27 more
#   add error to testMultipleBundlesOnStack(org.osgi.test.cases.condpermadmin.junit.ConditionalTestControl) : Activator start error in bundle org.osgi.test.cases.condpermadmin.tb2 [5].
org.osgi.framework.BundleException: Activator start error in bundle org.osgi.test.cases.condpermadmin.tb2 [5].
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1899)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1769)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:927)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:914)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:510)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:496)
	at org.osgi.test.cases.condpermadmin.junit.ConditionalTestControl.setState(ConditionalTestControl.java:823)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.setUp(DefaultTestBundleControl.java:51)
	at junit.framework.TestCase.runBare(TestCase.java:128)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:200)
	at aQute.junit.Activator.run(Activator.java:51)
Caused by: java.lang.SecurityException: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)
	at org.apache.felix.framework.Felix$1.checkPermission(Felix.java:560)
	at java.lang.ClassLoader.getParent(ClassLoader.java:420)
	at org.apache.felix.framework.ModuleImpl.getBootDelegationClassLoader(ModuleImpl.java:1684)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:722)Not able to install testbundle bundle://2.0:0/tb2.jar
Nested java.lang.SecurityException: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)

	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:72)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1801)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:619)
	at org.osgi.test.cases.condpermadmin.tb2.Activator.start(Activator.java:44)
	at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1243)
	at java.security.AccessController.doPrivileged(AccessController.java:284)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:620)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1852)
	... 16 more
Caused by: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)
	at java.security.AccessController.checkPermission(AccessController.java:108)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:544)
	at org.apache.felix.framework.Felix$1.checkPermission(Felix.java:556)
	... 27 more
#   << testMultipleBundlesOnStack(org.osgi.test.cases.condpermadmin.junit.ConditionalTestControl), fails=1
# out: Not able to install testbundle bundle://2.0:0/tb2.jar
Nested java.lang.SecurityException: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)

# err: org.osgi.framework.BundleException: Activator start error in bundle org.osgi.test.cases.condpermadmin.tb2 [5].
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1899)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1769)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:927)
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:914)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:510)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:496)
	at org.osgi.test.cases.condpermadmin.junit.ConditionalTestControl.setState(ConditionalTestControl.java:823)
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.setUp(DefaultTestBundleControl.java:51)
	at junit.framework.TestCase.runBare(TestCase.java:128)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:200)
	at aQute.junit.Activator.run(Activator.java:51)
Caused by: java.lang.SecurityException: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)
	at org.apache.felix.framework.Felix$1.checkPermission(Felix.java:560)
	at java.lang.ClassLoader.getParent(ClassLoader.java:420)
	at org.apache.felix.framework.ModuleImpl.getBootDelegationClassLoader(ModuleImpl.java:1684)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:722)
	at org.apache.felix.framework.ModuleImpl.access$400(ModuleImpl.java:72)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1801)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:619)
	at org.osgi.test.cases.condpermadmin.tb2.Activator.start(Activator.java:44)
	at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1243)
	at java.security.AccessController.doPrivileged(AccessController.java:284)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:620)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1852)
	... 16 more
Caused by: java.security.AccessControlException: Access denied (java.lang.RuntimePermission getClassLoader)
	at java.security.AccessController.checkPermission(AccessController.java:108)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:544)
	at org.apache.felix.framework.Felix$1.checkPermission(Felix.java:556)
	... 27 more","java version ""1.6.0""
Java(TM) SE Runtime Environment (build pwi3260sr9-20101125_01(SR9))
IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows XP x86-32 jvmwi3260sr9-20101124_69295 (JIT enabled, AOT enabled)
J9VM - 20101124_069295
JIT  - r9_20101028_17488ifx2
GC   - 20101027_AA)
JCL  - 20101119_01

java version ""1.5.0""
Java(TM) 2 Runtime Environment, Standard Edition (build pwi32devifx-20070725 (SR5a))
IBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 Windows XP x86-32 j9vmwi3223-20070426 (JIT enabled)
J9VM - 20070420_12448_lHdSMR
JIT  - 20070419_1806_r8
GC   - 200704_19)
JCL  - 20070725",,,,,,,,,,,,,,,,,,,,28/Apr/11 21:02;karlpauls;felix.jar;https://issues.apache.org/jira/secure/attachment/12477693/felix.jar,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-28 20:35:12.894,,,no_permission,,,,,,,,,,,,56044,,,Thu Apr 28 21:32:08 UTC 2011,,,,,,0|i0vrbz:,183401,,,,,,,,"28/Apr/11 20:35;karlpauls;This indeed looks like a bug. On first sight, it looks like we should be doing the getParent() call on the classloader in a doPriv ... I'm wondering so why this is not a problem with the other vms. Maybe it has to do with the way classes are loaded. If I provide you with a patch to quickly test whether a doPriv fixes the issue can you test it for me (I have some difficulties finding and running IBM JVM 6).",28/Apr/11 20:55;jwross@us.ibm.com;I'll be happy to as long as you mean a patched binary jar(s) as I'm not working with the source....,"28/Apr/11 21:02;karlpauls;Can you try with this one? Its just a quick that uses doPrivs for the getParent call in question (based on the current trunk). 

If that doesn't work I'll have to first set-up an environment myself and debug things a little more closely.",28/Apr/11 21:16;jwross@us.ibm.com;The attached jar fixes the issue. The CT will execute successfuly using IBM JVM 5 and 6 (and continues to do so on Oracle 6 and IBM 4.2).,28/Apr/11 21:32;karlpauls;Ok. Good. I just commited the patch to trunk. Well make it part of the next release.,,,,,,,,,,,,,,,,,,,,,,,,,,,
LogListeners do not receive messages in order,FELIX-2406,12466861,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,maguro,maguro,13/Jun/10 22:11,05/Apr/11 17:17,13/Mar/19 22:56,24/Mar/11 19:36,,,,,log-1.0.1,,Log Service,,,1,,,,,,"LogListeners do not receive messages in order.  They receive all messages sent but the messages are not in order.

You can see a sample test in http://github.com/maguro/papoose-log","log 1.0.0
",,,,,,,,,,,,,,,,,,,,24/Mar/11 19:00;ruok0101;felix_logger.patch;https://issues.apache.org/jira/secure/attachment/12474547/felix_logger.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-24 19:00:32.43,,,no_permission,,,,,,,,,,,,56361,,,Tue Apr 05 17:17:16 UTC 2011,,,,,,0|i0vran:,183395,,,,,,,,24/Mar/11 19:00;ruok0101;Use Vector instead of Stack for messages,"24/Mar/11 19:02;ruok0101;I too have seen this problem. It looks like the author assumed using add() and pop() from a Stack would use opposite ends of the Vector, but this is not the case. 

I attached a patch to use a raw Vector instead and explicitly remove entries from the front of the Vector when delivering entries to the listeners. I have verified this fixed the log ordering issue, in my environment at least.

What are the chances we can get a new release of felix-log with this change applied?",24/Mar/11 19:36;rickhall;I applied your patch with a few modifications. I will do a quick 1.0.1 release. Thanks for the patch. Please close this issue if satisfied.,"24/Mar/11 19:36;rickhall;Actually, since Alan is the reporter, he'll have to close it...or we'll eventually close it later.","28/Mar/11 17:07;maguro;How odd, I don't think I got the emails for this.  I'll test it today.",28/Mar/11 18:33;rickhall;I think you need to add a watch...you are not automatically added if you report the issue.,05/Apr/11 17:14;maguro;Now passes my tests.,05/Apr/11 17:17;rickhall;Thanks. I'll close the vote shortly.,,,,,,,,,,,,,,,,,,,,,,,,
Possible synchronization issue with BundleContext.getBundle(),FELIX-2748,12494129,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,27/Dec/10 16:30,15/Mar/11 20:49,13/Mar/19 22:56,15/Mar/11 20:49,framework-3.0.7,,,,framework-3.2.0,,Framework,,,0,,,,,,"On 12/26/10 23:24, Sahoo wrote:
> Hi,
>
> Looking at the code, it seems to me that BundleContext.getBundle() can return a bundle even though the BundleContext has been invalidated. I say this based on the following reasoning:
>
> public BundleContext.getBundle()
> {
>         checkValidity();
>
>         return m_bundle;
> }
>
> private void checkValidity() // non-synchronized method
> {
>         if (m_valid) // m_valid is a non-volatile field
>         {
>             switch (m_bundle.getState())
>             {
>                 case Bundle.ACTIVE:
>                 case Bundle.STARTING:
>                 case Bundle.STOPPING:
>                     return;
>             }
>         }
>
>         throw new IllegalStateException(""Invalid BundleContext."");
>
> }
>
> protected void invalidate()    {        m_valid = false;    }
>
> class Bundle  {
>   public int getState() // non-synchronized method
>     {
>         return m_state;
>     }
> }
>
> time t1: thread1 has access to bundleContext.
> time t2: thread2 calls b.update()
> time t3: bundle has been stopped and is now in STARTING state. thread1 calls bundleContext.getBundle().
> Since m_valid is not a volatile field, it can see m_valid as true, although thread2 would have set it to false. Since m_state is volatile, it sees its value as STARTING. So, it fails to detect invalidation of the bundle and is returned with the bundle object instead of IllegalStateException.
>
> Am I missing anything here?

No, I think you are correct.

I'll have to think about it a little more, but I think the real issue here is the fact that the validity of the bundle context has to be more directly tied to the bundle. They can't be treated as independent values, because even if they were both volatile or synchronized, you could still end up with a change in state between checking each value.

I think the simpler BundleContext.checkValidity() method should be something like:

    m_bundle._getBundleContext() == this

Which says as long as ""this"" bundle context is the bundle's bundle context, then it is valid. I think. I'll still need to think about it. :-)

Want to open a bug on this issue?

Is this a theoretical exercise or are you suffering from this?

-> richard
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-28 16:05:18.632,,,no_permission,,,,,,,,,,,,56163,,,Tue Mar 15 20:49:29 UTC 2011,,,,,,0|i0vs5z:,183536,,,,,,,,"28/Dec/10 16:05;rickhall;Even if we modify the checkValidity() method like I suggest, I think there will still be a race condition between the check and the action (e.g., registering a listener). We need to check and make sure that each existing action either does a double check while holding the bundle lock or make it acquire the bundle lock to perform the associated action.","15/Mar/11 20:49;rickhall;I have committed a patch for this. In some cases, I think it is ok for us to ignore the race condition since the result is no different than if the calling thread had won the race. On the other hand, for the listener-related methods, I modified the framework code to grab the bundle state lock which acts as a double check, since not doing so could leave lingering listeners from an stopped bundle. For registering services, we already grabbed the bundle state lock. Please close if you are satisfied. Thanks for reporting.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in ResolverImpl.calculatePackageSpaces,FELIX-2741,12493971,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,23/Dec/10 12:36,11/Mar/11 17:08,13/Mar/19 22:56,11/Mar/11 17:08,framework-3.0.6,,,,framework-3.2.0,,Framework,,,0,,,,,,"A GlassFish user has reported a NPE while doing stress testing and the stack is given below:

[#|2010-12-22T11:28:28.910+0100|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=18;_ThreadName=Thread-1;|java.lang.NullPointerException
        at org.apache.felix.framework.resolver.ResolverImpl.calculatePackageSpaces(ResolverImpl.java:557)
        at org.apache.felix.framework.resolver.ResolverImpl.calculatePackageSpaces(ResolverImpl.java:619)
        at org.apache.felix.framework.resolver.ResolverImpl.calculatePackageSpaces(ResolverImpl.java:619)
        at org.apache.felix.framework.resolver.ResolverImpl.resolve(ResolverImpl.java:94)
        at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3982)
        at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3397)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1714)
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:922)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.start(DirectoryWatcher.java:1136)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.start(DirectoryWatcher.java:1122)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.startAllBundles(DirectoryWatcher.java:1115)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.process(DirectoryWatcher.java:433)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:241)
 |#]

m_wires must be null for this NPE to be caused by the following code:
            for (Wire wire : module.getWires())
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-23 17:00:36.21,,,no_permission,,,,,,,,,,,,56167,,,Fri Mar 11 17:08:46 UTC 2011,,,,,,0|i0vrbb:,183398,,,,,,,,"23/Dec/10 17:00;rickhall;Well, I don't think doing a null check here will solve the issue, since m_wires should always be non-null for a resolved module. Even if there are no wires, it should be an empty list. Since the global lock is being held here due to the resolve, it doesn't seem like this would be a race condition with someone refreshing the bundle.","07/Jan/11 11:40;ancoron;We just saw this one again during a bundle update and maybe could be reproduced by refreshing a package with changed dynamic package imports (at least this is what we've done here).
","07/Jan/11 15:43;rickhall;What do you mean exactly?

Bundle v1 had something like:

DynamicImport-Package: org.foo

And you updated it to bundle v2 with something like:

DynamicImport-Package: org.bar

Then refreshed?

If I can get a reproducible example, I can fix it.","07/Jan/11 23:19;ancoron;Exactly, e.g. I previously used the upstream version of WSS4j v1.5.9 which doesn't declared and DynamicImport-Package manifest header but at runtime it e.g. tries to load the following JCE providers:

* org.bouncycastle.jce.provider.BouncyCastleProvider
* org.apache.security.juice.provider.JuiCEProviderOpenSSL

So I've just tried to update the WSS4J bundle with a modified version that includes this new header:

DynamicImport-Package: org.bouncycastle.jce.provider,org.apache.security.juice.provider

And just by that I could raise the issue here.

","09/Jan/11 22:55;ancoron;Just got another one, maybe related to this:

[#|2011-01-09T23:26:46.605+0100|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=74;_ThreadName=Thread-1;|In main loop, we have serious trouble: java.lang.NullPointerException|#]

[#|2011-01-09T23:26:46.606+0100|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=74;_ThreadName=Thread-1;|java.lang.NullPointerException
        at org.apache.felix.framework.resolver.ResolverImpl.calculateExportedPackages(ResolverImpl.java:1196)
        at org.apache.felix.framework.resolver.ResolverImpl.calculatePackageSpaces(ResolverImpl.java:604)
        at org.apache.felix.framework.resolver.ResolverImpl.calculatePackageSpaces(ResolverImpl.java:611)
        at org.apache.felix.framework.resolver.ResolverImpl.calculatePackageSpaces(ResolverImpl.java:611)
        at org.apache.felix.framework.resolver.ResolverImpl.resolve(ResolverImpl.java:90)
        at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3996)
        at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3402)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1719)
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:922)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.start(DirectoryWatcher.java:1136)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.start(DirectoryWatcher.java:1122)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.startAllBundles(DirectoryWatcher.java:1115)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.process(DirectoryWatcher.java:433)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:241)
|#]
",09/Jan/11 22:57;ancoron;Last stackatrace is from 3.0.7,10/Jan/11 17:00;rickhall;I've just tried to recreate such a scenario but am having no luck. Can you give me a precise set of steps that will result in such an exception?,"25/Jan/11 03:07;rickhall;I'm still looking for a way to reproduce this, any luck on helping me out?","04/Feb/11 21:12;rickhall;I have to believe this is related to FELIX-2822 if not the same thing, since no other module should be able to have null wires.","04/Feb/11 22:48;ancoron;That could indeed be an issue.

I'm still unable to reproduce it, once I get to see a similar exception and with the latest versions of GlassFish 3.1 I had few luck in producing such an issue and even if I was ""able"" to produce it I was completely unable to reproduce it. But as it always seems to be related to ""DynamicImport-Package"" stuff, I think the system bundle could be involved here.","18/Feb/11 14:38;gnt;I have run into the same problem.  The problem involves fragments that can't be resolved, while bundles that do actually import packages from those fragments are actually incorrectly resolved.

So I have 
# Bundle A
# Bundle B is a fragment attached to Bundle A, but it does import package that can't be resolved
# Bundle C imports package provided by Bundle B

When I start the framework, Bundle A and Bundle C are active (though Bundle C should not be resolved).
I then refresh bundles A, B, C.  Bundle C is back in Installed stated. 
Then I start Bundle C, and I end up with that NPE.
","18/Feb/11 15:01;rickhall;Interesting. Makes some sense. I have completely rewritten fragment handling and will commit it shortly, so we'll have to see what impact that has before trying to debug this further.","10/Mar/11 19:29;rickhall;Guillaume, the new resolver is basically complete and committed. Could you try to see if you can re-create some of the issues you were experiencing previously for this error and others? You can build from trunk or grab the latest snapshots. Hopefully, this issue plus the ones you resolved for 3.0.9 are fixed in this version of the resolver, but if they aren't we should try to squash them for the coming framework 3.2.0 release.",11/Mar/11 16:23;gnt;The resolver seems to now behave correctly for the fragment problems above.,"11/Mar/11 17:08;rickhall;Awesome, I'll resolve this bug.",11/Mar/11 17:08;rickhall;This issue has been addressed while addressing FELIX-2858.,,,,,,,,,,,,,,,,
java6 update 24 breaks felix when used inside webstart,FELIX-2877,12501002,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,10/Mar/11 10:39,10/Mar/11 22:00,13/Mar/19 22:56,10/Mar/11 10:55,framework-3.0.9,,,,framework-3.2.0,,Framework,,,0,,,,,,"The problem was reported on FELIX-2780 but is an issue in its own right. From the comments:

... this exception is what I
got due to update 24.

This happens in static code inside javax.imageio.ImageIO when its trying to
load the image handlers.

Caused by: java.lang.SecurityException: Permission denied:
http://felix.extensions:9/META-INF/services/javax.imageio.spi.ImageInputStreamSpi
    at
com.sun.deploy.security.DeployURLClassPath$UrlLoader.findResource(Unknown
Source)
    at com.sun.deploy.security.DeployURLClassPath$1.next(Unknown Source)
    at com.sun.deploy.security.DeployURLClassPath$1.hasMoreElements(Unknown
Source)
    at java.net.URLClassLoader$3$1.run(Unknown Source)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader$3.next(Unknown Source)
    at java.net.URLClassLoader$3.hasMoreElements(Unknown Source)
    at sun.misc.CompoundEnumeration.next(Unknown Source)
    at sun.misc.CompoundEnumeration.hasMoreElements(Unknown Source)
    at sun.misc.CompoundEnumeration.next(Unknown Source)
    at sun.misc.CompoundEnumeration.hasMoreElements(Unknown Source)
    at sun.misc.Service$LazyIterator.hasNext(Unknown Source)
    at
javax.imageio.spi.IIORegistry.registerApplicationClasspathSpis(Unknown
Source)
    at javax.imageio.spi.IIORegistry.<init>(Unknown Source)
    at javax.imageio.spi.IIORegistry.getDefaultInstance(Unknown Source)
    at javax.imageio.ImageIO.<clinit>(Unknown Source)

...

this snippet of code seem so be the source of the problem 
why is this an illegal URL? 

class ExtensionManager extends URLStreamHandler implements Content 
{ 
    // The private instance that is added to Felix.class.getClassLoader() - 
    // will be null if extension bundles are not supported (i.e., we are not 
    // loaded by an instance of URLClassLoader) 
    static final ExtensionManager m_extensionManager; 

    static 
    { 
        // pre-init the url sub-system as otherwise we don't work on gnu/classpath 
        ExtensionManager extensionManager = new ExtensionManager(); 
        try 
        { 
            (new URL(""http://felix.extensions:9/"")).openConnection(); 
        } 
        catch (Throwable t) 

In the end, Sylvain RIBEYRON did find this fix:

Hi all. 

I've had the same issue running Felix on Web Start. 

I've resolved the issue by patching the ExtensionManager.java. 

At line 510, replace the line: 

throw new IOException(""Resource not provided by any extension!""); 

By the following code: 

        // JDK6u24 issue 
        return new URLConnection(url) { 
@Override 
public void connect() throws IOException { 
throw new IOException(""Resource not provided by any extension!""); 
} 
}; 
        // End JDK6u24 issue 

The issue occurs when looking up classes, because IOException is thrown on URL.openConnection when classes (or resources) are not found. The IOException should not be thrown on the openConnection method, but later on the connect method on URLConnection (this streamHandler should work as any other http handler: when a file does not exist, the http server sends a 404 response. This response can only occur when URLconnection is established, not when URLConnection is initialized). ",java6 update24,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56102,,,2011-03-10 10:39:37.0,,,,,,0|i0vs53:,183532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deadlock on SystemBundle.stop(),FELIX-1816,12439261,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,dennisg,dennisg,28/Oct/09 09:34,10/Mar/11 21:12,13/Mar/19 22:56,10/Mar/11 21:12,framework-2.0.1,,,,framework-3.2.0,,Framework,,,0,,,,,,"When one calls SystemBundle.stop within BundleActivator.start(BundleContext) a deadlock occurs.

I will attach a stacktrace.",,,,,,,,,,,,,,,,,,,,,28/Oct/09 12:17;dennisg;Activator.java;https://issues.apache.org/jira/secure/attachment/12423444/Activator.java,28/Oct/09 12:17;dennisg;felix-framework-2.0.1.tar.gz;https://issues.apache.org/jira/secure/attachment/12423443/felix-framework-2.0.1.tar.gz,28/Oct/09 12:17;dennisg;trace-nohook.log;https://issues.apache.org/jira/secure/attachment/12423445/trace-nohook.log,28/Oct/09 09:35;dennisg;trace.log;https://issues.apache.org/jira/secure/attachment/12423430/trace.log,,4.0,,,,,,,,,,,,,,,,,,,2009-10-28 10:43:36.197,,,no_permission,,,,,,,,,,,,57221,,,Thu Mar 10 21:12:42 UTC 2011,,,,,,0|i0vr3b:,183362,,,,,,,,"28/Oct/09 10:43;karlpauls;This doesn't seem to be correct in the sense that the systembundle.stop isn't the only thing contributing to the deadlock. The shutdownhook in the launcher is running and causing your problems again. Are you ctrl-c'ing or sending kill signals to the jvm externally? Just have a look at the stacktrace:

""SIGTERM handler"" daemon prio=9 tid=0x0000000102830800 nid=0x114b94000 in Object.wait() [0x0000000114b93000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x000000010637fa10> (a org.apache.felix.main.Main$1)
	at java.lang.Thread.join(Thread.java:1167)
	- locked <0x000000010637fa10> (a org.apache.felix.main.Main$1)
	at java.lang.Thread.join(Thread.java:1220)
	at java.lang.ApplicationShutdownHooks.runHooks(ApplicationShutdownHooks.java:79)
	at java.lang.ApplicationShutdownHooks$1.run(ApplicationShutdownHooks.java:24)
	at java.lang.Shutdown.runHooks(Shutdown.java:79)
	at java.lang.Shutdown.sequence(Shutdown.java:123)
	at java.lang.Shutdown.exit(Shutdown.java:168)
	- locked <0x000000010ba5b830> (a java.lang.Class for java.lang.Shutdown)
	at java.lang.Terminator$1.handle(Terminator.java:35)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:637)

The jvm is getting a SIGTERM. Notice, in the other issue the stacktrace didn't contain a SIGTERM but just the call to system exit. If you don't do anything externally please attach an example again so that i can try to reproduce. 

Anyways, I will have to investigate as a control-c together with a systembundle.stop shouldn't deadlock in the first place. Thanks for reporting :-)","28/Oct/09 11:34;karlpauls;Ok, I think I see what is gonig on. You probably just hit ctrl-c to terminate the jvm after it was deadlocking. 

Nevermind, this looks like a bug. I will try to fix it (but you might not like the solution). Basically, the issue seems to be that you are trying to stop the system bundle while it is still starting. This shouldn't deadlock but we probably will have to throw some exception from the stop method. I will have to look into this some more first, however. Thanks again. ","28/Oct/09 12:17;dennisg;Thanks for looking into the issue. It's much appreciated!

Indeed I get my _stacktraces_ from a 'kill -QUIT'; Thus the SIGTERM handler kicking in.

I hadn't noticed that the SIGTERM isn't there in the trace of the other issue (FELIX-1812). Is this due to the fact that System.exit already has been called ?

the blocking factors are:
""Felix Shutdown Hook"" prio=5 tid=0x0000000102031000 nid=0x114c97000 in Object.wait() [0x0000000114c96000]
        ...
        at org.apache.felix.framework.Felix.acquireBundleLock(Felix.java:4481)
        - locked <0x0000000106451f38> (a [Ljava.lang.Object;)

and
""FelixStartLevel"" daemon prio=5 tid=0x00000001020f7800 nid=0x114904000 in Object.wait() [0x0000000114903000]
        ...
        at org.apache.felix.framework.Felix.acquireBundleLock(Felix.java:4481)
        - locked <0x0000000106451f38> (a [Ljava.lang.Object;)


Please find attached an additional stacktrace, also recorded using a 'kill -QUIT'  while running WITHOUT the shutdown hook. Then, the end result is such, that the java process is not stopped. There's no deadlock however, since ctrl-c'ing stops the process.

","30/Oct/09 14:38;karlpauls;Ok, well, the problem is in this case that the system bundle is still in the STARTING state when it's stop method is called. That get us into the deadlock. 

Now, a proper solution would probably include a timeout mechanism but for now i just resolved the issue by having the framework throw an exception as a result of the stop call (this is allowed by the spec and would happen with a timeout too - eventually). Downside for you is that you don't get what you want (i.e., the framework shutdown) but an exception inside your Activator.start. Again, what you would have to do is to at least wait for the framework to be in the ACTIVE state before calling the stop method (you can check the state and if its not ACTIVE then register a framework listener and wait for that event). 

However, as a side effect this makes it possible again to call System.exit inside an activator.start method while the framework is still in the STARTING state. See FELIX-1812 for more on that. ",30/Oct/09 14:39;karlpauls;Please close this issue if you are satisfied with the change to trunk.,"30/Oct/09 19:24;dennisg;verified, indeed the exception is thrown, with a very good explanation of the situation.",01/Nov/09 16:40;karlpauls;I re-open this issue as I really don't like the solution (and it makes various other cases fail). I will have to get back to this and fix it correctly by introducing timeouts or something. The result for this case would be the same I imagine but for now i will rollback.,"10/Mar/11 21:12;rickhall;I committed a patch to move the shutdown thread out further so that the calling thread doesn't attempt to lock the system bundle, thus allowing it to return immediately and avoiding the deadlock.",,,,,,,,,,,,,,,,,,,,,,,,
"Bundle#update, Bundle#uninstall and Bundle#stop should wait for a (configurable) timeout before throwing an exception if the bundle is starting or stopping",FELIX-1581,12435432,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,11/Sep/09 13:58,21/Feb/11 09:30,13/Mar/19 22:56,19/Jan/11 09:45,framework-3.0.6,,,,framework-3.0.9,,Framework,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,40393,,,Wed Jan 19 09:45:04 UTC 2011,,,,,,0|i0aq1j:,60492,,,,,,,,"19/Jan/11 09:45;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	framework/src/main/java/org/apache/felix/framework/Felix.java
	A	framework/src/test/java/org/apache/felix/framework/StartStopBundleTest.java
Committed r1060731

No timeout has been added yet.  I'll raise a separate issue for that.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When the framework try to grab the bundle lock, it ignores thread interruption",FELIX-2784,12495801,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,17/Jan/11 16:07,21/Feb/11 09:30,13/Mar/19 22:56,19/Jan/11 09:46,framework-3.0.7,,,,framework-3.0.9,,Framework,,,0,,,,,,"That's usually not an issue unless you actually want to interrupt the thread.
From the console, i can't interrupt a bundle operation as the framework ignores those.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,40396,,,Wed Jan 19 09:46:11 UTC 2011,,,,,,0|i0aq3j:,60501,,,,,,,,"19/Jan/11 09:46;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	framework/src/main/java/org/apache/felix/framework/Felix.java
Committed r1060732
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolution problems after a fragment can't be resolved,FELIX-2851,12499094,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,18/Feb/11 22:45,21/Feb/11 09:28,13/Mar/19 22:56,21/Feb/11 09:28,,,,,framework-3.0.9,,Framework,,,0,,,,,,"When a fragment can't be resolved correctly, his removal isn't properly handled.
The following patch seems to fix the problem:
{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/FelixResolverState.java b/framework/src/main/java/org/apache/felix/framework/FelixResolverState.java
index 534d56f..ca74100 100644
--- a/framework/src/main/java/org/apache/felix/framework/FelixResolverState.java
+++ b/framework/src/main/java/org/apache/felix/framework/FelixResolverState.java
@@ -157,8 +157,9 @@ public class FelixResolverState implements Resolver.ResolverState
 
     public void detachFragment(Module host, Module fragment)
     {
-        List<Module> fragments = ((ModuleImpl) host).getFragments();
+        List<Module> fragments = new ArrayList<Module>(((ModuleImpl) host).getFragments());
         fragments.remove(fragment);
+        removeFragment(fragment);
         try
         {
             ((ModuleImpl) host).attachFragments(fragments);
{code}

The first line is needed as the attachFragments() processing is screwed because the original list of modified.
The second line will actually remove packages exported by the fragment from the capabilities set.

I'd like to apply that on to the 3.0.x branch and trunk (eventually), so please review.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-18 22:52:42.076,,,no_permission,,,,,,,,,,,,40410,,,Fri Feb 18 23:49:32 UTC 2011,,,,,,0|i0aqb3:,60535,,,,,,,,"18/Feb/11 22:52;rickhall;Again, this code won't even exist next week, so I'm not sure it makes sense to bother with it right now. However, if you have some use case that is impacted by this bug, keep it around so we can test it on the new resolver next week.","18/Feb/11 23:27;gnt; I do get that point. However, I  I think the resolver rewrite is quite a big change, so it may introduce different behaviors.  We already had problems when trying to upgrade from 3.0.2 to 3.0.8 so I wonder if creating a 3.0.9 bug fix release before you put in the new resolver would be a good idea.","18/Feb/11 23:49;rickhall;I am certain there will be different behavior. Still, if we end up needing to do a bug fix release for some reason, we can always branch from the 3.0.8 release tag.

However, I'm not against a 3.0.9 release. We can branch trunk right now temporarily to prepare a 3.0.9 release. Once 3.0.9 is released, the branch can be deleted and if any subsequent bug fix releases are needed, they can be branched from the 3.0.9 release tag.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PackageAdmin return fragments / hosts even if the host isn't resolved,FELIX-2850,12499008,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,18/Feb/11 08:12,21/Feb/11 09:27,13/Mar/19 22:56,21/Feb/11 09:27,,,,,framework-3.0.9,,,,,0,,,,,,"It seems fragments are attached before the resolution when the fragment is installed and PackageAdmin uses this information, so it will return those fragments even if the host isn't (or can't be) resolved.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-18 14:56:24.539,,,no_permission,,,,,,,,,,,,40431,,,Fri Feb 18 15:33:35 UTC 2011,,,,,,0|i0aqdj:,60546,,,,,,,,"18/Feb/11 14:56;rickhall;Yeah, that sounds like a bug, but I wouldn't worry about it unless you need a fix right now, since I will be committing some major resolver changes probably next week that totally re-write fragment handling.",18/Feb/11 15:22;gnt;I think the problem is really limited to PackageAdmin.  Maybe PackageAdmin should just return an empty host list is the fragment isn't resolved and should prune the list of fragments attached to those that are actually resolved ?  Not sure the resolution process is involved here.,"18/Feb/11 15:33;rickhall;In trunk, I agree, the resolution process isn't involved. But the new version of the resolver doesn't pre-attach fragments, so this issue might not even exist once it is committed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PackageAdmin is inconsistent between getFragments and getHosts,FELIX-2849,12499005,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,18/Feb/11 07:56,21/Feb/11 09:27,13/Mar/19 22:56,21/Feb/11 09:27,,,,,framework-3.0.9,,,,,0,,,,,,"getFragments returns a list of fragments attached to the current module, while getHosts returns a list of all dependant bundles (not only hosts) for all revisions of the bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-18 14:55:11.596,,,no_permission,,,,,,,,,,,,40413,,,Fri Feb 18 15:47:34 UTC 2011,,,,,,0|i0apx3:,60472,,,,,,,,"18/Feb/11 14:55;rickhall;Fragments can only have one type of dependency, which is the host they are attached to, so it seems returning all dependents of the fragment for getHosts() is correct, unless I am missing something.","18/Feb/11 15:16;gnt;Well, that still leaves the problem that it returns hosts for all revisions, so in my case, I can either have a host when the fragment is unresolved (for an older revision) or even a list with multiple bundles (one host for each revision).  I think only the last revision should be checked so that the result is consistent between getFragments and getHosts.","18/Feb/11 15:31;rickhall;For dependencies, I always return from all revisions, because these are the actual dependencies. See getImportingBundles(), for example, it is done the same way, it returns anyone importing from any revision of the bundle. Looking at getFragments(), it is the one that should probably be changed to work like the others.","18/Feb/11 15:42;gnt;Sounds good, I'll write a patch for getFragments() then.","18/Feb/11 15:47;rickhall;Ok.

This sort of issue is precisely why a BundleRevision concept was included in the new R4.3 API so that you could accurately model these sorts of relationships which up until now had to be flattened into the Bundle level. I plan to start working on the R4.3 API after I get the resolver in shape, so pretty soon you'll have that at your disposal.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Spelling Mistake,FELIX-2827,12497809,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,drozzy,drozzy,07/Feb/11 00:18,07/Feb/11 16:19,13/Mar/19 22:56,07/Feb/11 16:19,,,,,,,Documentation,,,0,grammar,spelling,,,,"In the Providing OSGI services:
http://felix.apache.org/site/providing-osgi-services.html#ProvidingOSGiservices-Instancereconfiguration

The mistakes are:
1. Under ""Service Serving & Object Creation"", first sentence in parenthesis, first word should be ""from"" not ""form"".
2. Under ""Service Serving & Object Creation"", in the bullet points under ""Other strategies are available:"", first point: ""strategy=""instance"" allows creating one service object per asking iPOJO instance (despite they are in the same bundle)"" - I find the use of word ""asking"" weird here, and the wording inside the parenthesis is confusing - what is in the same bundle as what?
3. In the section titled ""Several Service Providing (XML only)"", ""Several Service Providing"" is not a proper sentence or a combination of words, I think.
4. Under ""Several Service Providing (XML only)"", 1st paragraph, 2nd sentence: ""All this provided service will be manage"" - should be ""managed"". Also it is not clear what is meant by - ""by the same handler but separately"", how can the same handler manage them ""separately"", as opposed to ""together""?
5. Under ""Service Property Propagation"", 1st paragraph, 2nd sentence, ends in ""to all published service."", should be ""services"".
6. Section titled ""Publishing abstract and concrete class as services"" perhaps should be titled ""Publishing an Abstract or Concrete class as a Service""?. Same change must be carried into the 1st sentence.
7. Under ""Publishing abstract and concrete class as services"", last sentence of the section ""However, such practice are not recommended."", should be ""is not."".",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-07 16:19:51.606,,,no_permission,,,,,,,,,,,,56131,,,Mon Feb 07 16:19:51 UTC 2011,,,,,,0|i0vubr:,183886,,,,,,,,"07/Feb/11 16:19;clement.escoffier;Hi,

I've updated the page. Will be sync shortly.

Thanks !",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JarRevision does not close URLConnections which are instances of HttpURLConnection,FELIX-2728,12493094,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,brucej,brucej,13/Dec/10 17:30,22/Dec/10 15:05,13/Mar/19 22:56,21/Dec/10 18:39,framework-3.0.6,,,,framework-3.0.7,,Framework,,,0,,,,,,"Android (unlike the regular JDK) does not clean up and close HttpURLConnection objects properly which can cause all manner of problems.

The initialize() method in JarRevision creates a URLConnection but never closes it because close() is only present in HttpURLConnection. We need a modified class which checks for the URLConnection being of type HttpURLConnection, and will correctly close() it at the end of the method.",Affects Felix running on Android,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-21 18:39:00.798,,,no_permission,,,,,,,,,,,,40453,,,Tue Dec 21 18:39:00 UTC 2010,,,,,,0|i0aquf:,60622,,,,,,,,"21/Dec/10 18:39;rickhall;I assume you meant disconnect() instead of close(), since there is no close() method. I've committed a patch to trunk. Please closet this issue if satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix bundle classloader always delegates to parent loader in getResources(),FELIX-2569,12473051,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,01/Sep/10 16:00,21/Sep/10 21:09,13/Mar/19 22:56,21/Sep/10 21:09,framework-3.0.2,,,,framework-3.0.3,,Framework,,,0,,,,,,"Felix's bundle class loader does not override getResources(); instead it overrides findResources(). As a result of this, it always delegates to parent class loader. I see the following interesting comment in the code:

        // The findResources() method should only look at the module itself, but
        // instead it tries to delegate because in Java version prior to 1.5 the
        // getResources() method was final and could not be overridden. We should
        // override getResources() like getResource() to make it delegate, but we
        // can't. As a workaround, we make findResources() delegate instead.
        protected Enumeration findResources(String name)
        {
            return getResourcesByDelegation(name);
        } 

Can we have something like two different implementations targeting pre and post JRE 1.5 and let runtime select appropriate one? If there is a better way, then even better.",,,,,,,,,,,,,,,,,,,,,16/Sep/10 03:01;mrdon;FELIX-2569.test.patch;https://issues.apache.org/jira/secure/attachment/12454735/FELIX-2569.test.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-05 14:30:06.095,,,no_permission,,,,,,,,,,,,40478,,,Tue Sep 21 21:09:12 UTC 2010,,,,,,0|i0aqcv:,60543,,,,,,,,05/Sep/10 14:30;rickhall;Related to: https://glassfish.dev.java.net/issues/show_bug.cgi?id=13287,"16/Sep/10 03:01;mrdon;Attaching patch to add a unit test that will verify the current buggy behavior.  Wasn't able to fix it without drastically altering the structure of ModuleImpl, which may be best left to a committer.  The patch introduces mockito (mocking) and janino (class compilation).",21/Sep/10 21:09;rickhall;I've created a new module class loader inner class for Java5 that overrides getResources() in addition to the old module class loader. Now depending on the platform we use the appropriate class loader. Please close this bug if satisfied.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] The syntax does not provide a way to call methods on a string,FELIX-1473,12432850,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,gnt,gnt,12/Aug/09 07:58,21/Sep/10 19:04,13/Mar/19 22:56,30/Jun/10 12:06,gogo-0.6.0,,,,gogo-0.6.1,,Gogo Runtime,,,0,,,,,,"When the first argument is a string, gogo considers it to be a command.
The problem is that it leads to unpredictible behavior when using variables

> $a length

Depending on the type of $a, it will either try to call a command named by the value of $a, or call the length method on the $a object.",,,,,,,,,,,,,,,,,,,,,26/Aug/09 10:19;db82407;FELIX-1473.patch;https://issues.apache.org/jira/secure/attachment/12417725/FELIX-1473.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-26 10:19:55.384,,,no_permission,,,,,,,,,,,,57551,,,Wed Jun 30 12:06:16 UTC 2010,,,,,,0|i0vsxr:,183661,,,,,,,,"26/Aug/09 10:19;db82407;gogo command or method execution depends on the type of the command object,
as described in Closure.execute():

        // Now there are the following cases
        // <string> '=' statement // complex assignment
        // <string> statement // cmd call
        // <object> // value of <object>
        // <object> statement // method call

FELIX-1473.patch adds an experimental '.' operator to force the command
to be treated as a reflective method call.

This allows methods to be called on String objects:

% x = ""hello world""    
hello world

% $x . startsWith hello
true

% $x . equals hello
false

% $x . matches h.*d    
true

% $x . split ' '       
hello
world

% $x . length
11

This experimental . operator is also useful for chaining method invocations:


% pwd = <new java.io.File .>
.

% $pwd . touri . resolve bin . resolve ../etc
file:/Users/derek/devl/Zebedee/etc

% <<$pwd touri> resolve bin> resolve ../etc  
file:/Users/derek/devl/Zebedee/etc

The first example (using .) is easier to type and read than the one using <>




","06/May/10 00:16;db82407;typing a period(.) after a command, forces reflective method invocation on String, rather than trying to invoke a command.

This allows the use of all the methods on String, for example:

x = (method args..)

if { $x . startsWith /} {...}","29/Jun/10 20:33;db82407;a better solution to this issue has been proposed:

currently any command object that implements CharSequence is treated as a command, so it is impossible to call String methods. For example:

if {$HOSTNAME endsWith .com} {...} // this fails with 'command not found: my.host.name'

The current solution uses the period to force method invocation, for example:

if {$HOSTNAME . endsWith .com} {...}

The new proposal is to only treat 'bare' words as commands and to treat everything else as method calls. For example:

if {$HOSTNAME endsWith .com} {...} // $HOSTNAME is NOT a bareword as it is a variable expansion, so this works as expected

g! cmd = echo
g! $cmd hello // fails with 'can't coerce hello() to any of []'

The above fails, as there is no method ""hello"" on the String object 'echo';
To make the indirect command expansion above work, we need to introduce an osgi:eval command:

g! eval $cmd hello
hello


","30/Jun/10 12:06;db82407;use new approach to call methods on Strings.

e.g. this now works:

g! $SCOPE length
6

g! cmd = echo
echo
g! $cmd hello
gogo: IllegalArgumentException: Cannot coerce hello() to any of []
g!         
g! eval $cmd hello
hello",,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] NPE/coercion failure when null first parameter to method expecting arry,FELIX-2432,12467478,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,db82407,db82407,21/Jun/10 12:28,21/Sep/10 19:04,13/Mar/19 22:56,21/Jun/10 12:58,gogo-0.6.0,,,,gogo-0.6.1,,Gogo Runtime,,,0,,,,,,"g! echo null hello
gogo: NullPointerException: null
g! e
java.lang.NullPointerException
        at org.apache.felix.gogo.runtime.Reflective.method(Reflective.java:174)
        at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:82)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:421)
        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:335)
        at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:184)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:121)
        at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:78)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56342,,,Mon Jun 21 12:58:56 UTC 2010,,,,,,0|i0vrsn:,183476,,,,,,,,21/Jun/10 12:58;db82407;fixed in coercion code,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gogo isn't decoupled from OSGi anymore,FELIX-2606,12474671,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,chirino,gnt,gnt,21/Sep/10 08:39,21/Sep/10 19:02,13/Mar/19 22:56,21/Sep/10 08:44,,,,,gogo-0.6.1,,Gogo Runtime,,,0,,,,,,We need gogo to be able to run without any OSGi classes in the classpath,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,40562,,,Tue Sep 21 08:44:49 UTC 2010,,,,,,0|i0aqtr:,60619,,,,,,,,"21/Sep/10 08:44;gnt;Author: gnodet
Date: Tue Sep 21 08:43:27 2010
New Revision: 999273

URL: http://svn.apache.org/viewvc?rev=999273&view=rev
Log:
[FELIX-2606] Decoupled the CommandProcessorImpl from osgi a bit so that it can be reused  to implement non-osgi shells.

Modified:
   felix/trunk/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandProcessorImpl.java
   felix/trunk/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/CommandSessionImpl.java
   felix/trunk/gogo/runtime/src/main/java/org/apache/felix/gogo/runtime/activator/Activator.java
   felix/trunk/gogo/runtime/src/test/java/org/apache/felix/gogo/runtime/Context.java

Patch provide by Hiram Chirino",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When specifying the packages exported by the system bundle, attributes and directives on packages do not show up in the system bundle headers",FELIX-2599,12474158,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,15/Sep/10 09:48,21/Sep/10 14:43,13/Mar/19 22:56,21/Sep/10 14:43,framework-3.0.2,,,,framework-3.0.3,,Framework,,,0,,,,,,"When using:
   javax.transaction; partial=true; mandatory:=partial, \
   javax.transaction.xa; partial=true; mandatory:=partial, \

for example, the headers become:
	javax.transaction;version=0.0.0,
	javax.transaction.xa;version=0.0.0,

The attributes may actually been taken into account, because specifying a version does have an effect, but not completely sure about other attributes.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-21 14:43:55.181,,,no_permission,,,,,,,,,,,,40568,,,Tue Sep 21 14:43:55 UTC 2010,,,,,,0|i0ar1z:,60656,,,,,,,,21/Sep/10 14:43;rickhall;I committed a patch to append all attributes/directives to the export package header for system bundle. I believe this was the only issue and otherwise they were being taken into account. Please close this bug if you are satisfied.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hang in Felix: thread owing a bundle lock waits for ever to lock it again,FELIX-2598,12474030,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,14/Sep/10 04:17,20/Sep/10 20:58,13/Mar/19 22:56,20/Sep/10 20:58,framework-3.0.2,,,,framework-3.0.3,,Framework,,,0,,,,,,"In GlassFish, I detected a hang. PFA jstack output. The scenario happens like this:

a) I updated a bundle using telnet console. This thread is holding the bundle lock.
b) Upon receiving the UPDATED event, one of our extenders bundle enhances the bundle and calls PackageAdmin.refreshPackages(bundle).
c) PackageAdmin thread holds the global lock and tries to hold the bundle lock, which is currently held by telnetconsole thread.
d) telnetconsole thread is waiting indefinitely to obtain the bundle lock.",,,,,,,,,,,,,,,,,,,,,14/Sep/10 04:20;sahoo;hang.txt;https://issues.apache.org/jira/secure/attachment/12454517/hang.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-20 19:53:14.794,,,no_permission,,,,,,,,,,,,40540,,,Mon Sep 20 20:58:46 UTC 2010,,,,,,0|i0aqxj:,60636,,,,,,,,14/Sep/10 04:20;sahoo;jstack output,"20/Sep/10 19:53;rickhall;This appears to be a logic bug in how we check whether or not we can get the bundle lock in acquireBundleLock(). We allow bundles already holding bundle locks to continue holding them when the global lock is acquired, but we don't want new bundle locks to be acquired. The idea is that in most cases only a single bundle lock is required to perform an operation so the existing threads holding bundle locks should be able to complete. If the global lock holder needs a locked bundle, it just needs to wait for the holder to finish.

The logic error is that we block a thread from acquiring the bundle lock of a lock it already owns, which isn't correct, it should be reentrant. We need to specifically check for this case in the condition of our wait loop.","20/Sep/10 20:58;rickhall;Committed a fix for this, please close if you are satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when deleting Sigil project,FELIX-2592,12473783,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,brindy,brindy,10/Sep/10 10:01,10/Sep/10 17:59,13/Mar/19 22:56,10/Sep/10 17:59,sigil-1.0.0,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"I get the following error when deleting a Sigil project:

An internal error occurred during: ""Resolving Sigil projects"".

java.lang.NullPointerException
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.getBundle(SigilProject.java:405)
at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.isDependent(ResolveProjectsJob.java:102)
at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.runInWorkspace(ResolveProjectsJob.java:82)
at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)


Right before that, with virtually the same timestamp, I get:

Problems occurred when invoking code from plug-in: ""org.eclipse.equinox.preferences"".

java.lang.IllegalStateException: Preference node ""org.apache.felix.sigil.eclipse.core"" has been removed.
at org.eclipse.core.internal.preferences.EclipsePreferences.checkRemoved(EclipsePreferences.java:157)
at org.eclipse.core.internal.preferences.EclipsePreferences.parent(EclipsePreferences.java:733)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject$2.removed(SigilProject.java:357)
at org.eclipse.core.internal.preferences.EclipsePreferences$1.run(EclipsePreferences.java:687)
at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
at org.eclipse.core.internal.preferences.EclipsePreferences.fireNodeEvent(EclipsePreferences.java:690)
at org.eclipse.core.internal.preferences.EclipsePreferences.removeNode(EclipsePreferences.java:913)
at org.eclipse.core.internal.preferences.EclipsePreferences.removeNode(EclipsePreferences.java:885)
at org.eclipse.core.internal.preferences.EclipsePreferences.removeNode(EclipsePreferences.java:890)
at org.eclipse.core.internal.resources.ProjectPreferences.removeNode(ProjectPreferences.java:243)
at org.eclipse.core.internal.resources.ProjectPreferences.deleted(ProjectPreferences.java:154)
at org.eclipse.core.internal.resources.ProjectPreferences.deleted(ProjectPreferences.java:169)
at org.eclipse.core.internal.resources.Resource.deleteResource(Resource.java:852)
at org.eclipse.core.internal.resources.Project.deleteResource(Project.java:343)
at org.eclipse.core.internal.resources.ResourceTree.deletedProject(ResourceTree.java:169)
at org.eclipse.core.internal.resources.ResourceTree.standardDeleteProject(ResourceTree.java:870)
at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1942)
at org.eclipse.core.internal.resources.Resource.delete(Resource.java:786)
at org.eclipse.core.internal.resources.Project.delete(Project.java:331)
at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:130)
at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:278)
at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:278)
at org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:258)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1975)
at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:306)
at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:92)
at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:218)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1975)
at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)




",,,,,,,,,,,,,FELIX-2574,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-10 17:59:47.485,,,no_permission,,,,,,,,,,,,56210,,,Fri Sep 10 17:59:47 UTC 2010,,,,,,0|i0vsu7:,183645,,,,,,,,"10/Sep/10 17:59;davemssavage;I believe these exceptions are fixed in the latest svn trunk - can you try updating the eclipse plugins from the update site [1] - the latest successful build is 0.9.0.20100910_005339

Please reopen if this doesn't fix the issue for you

[1] http://ci.codecauldron.org/hudson/view/sigil/job/sigil-apache-daily/lastSuccessfulBuild/artifact/sigil/site/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sigil OBR handler throws a runtime exception if two resources point to the same physical resource,FELIX-2565,12472931,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,davemssavage,davemssavage,davemssavage,31/Aug/10 11:08,31/Aug/10 11:31,13/Mar/19 22:56,31/Aug/10 11:31,,,,,sigil-1.0.0,,Sigil,,,0,,,,,," [ivy:info] Failed to parse /Users/dave/development/felix-trunk/sigil/build/felix.obr
 [ivy:info] java.lang.RuntimeException: Duplicate uri http://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.webconsole/3.1.0/org.apache.felix.webconsole-3.1.0.jar
 [ivy:info]     at org.apache.felix.sigil.common.obr.impl.OBRHandler.startResource(OBRHandler.java:160)
 [ivy:info]     at org.apache.felix.sigil.common.obr.impl.OBRHandler.startElement(OBRHandler.java:88)
 [ivy:info]     at org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source)
 [ivy:info]     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)
 [ivy:info]     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
 [ivy:info]     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
 [ivy:info]     at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
 [ivy:info]     at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
 [ivy:info]     at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
 [ivy:info]     at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
 [ivy:info]     at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
 [ivy:info]     at org.apache.xerces.jaxp.SAXParserImpl.parse(Unknown Source)
 [ivy:info]     at javax.xml.parsers.SAXParser.parse(SAXParser.java:331)
 [ivy:info]     at org.apache.felix.sigil.common.obr.impl.AbstractOBRBundleRepository.readBundles(AbstractOBRBundleRepository.java:76)
 [ivy:info]     at org.apache.felix.sigil.common.obr.impl.NonCachingOBRBundleRepository.accept(NonCachingOBRBundleRepository.java:54)
 [ivy:info]     at org.apache.felix.sigil.common.repository.AbstractBundleRepository.findAllProviders(AbstractBundleRepository.java:189)
 [ivy:info]     at org.apache.felix.sigil.common.core.repository.BundleResolver.findProviders(BundleResolver.java:548)
 [ivy:info]     at org.apache.felix.sigil.common.core.repository.BundleResolver.findProvidersAtPriority(BundleResolver.java:534)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56223,,,Tue Aug 31 11:31:38 UTC 2010,,,,,,0|i0vryn:,183503,,,,,,,,31/Aug/10 11:31;davemssavage;Now logs a warning vs throwing an exception.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implicit bootdelegation doesn't ignore classloaders if they are inner classes,FELIX-2421,12467265,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,17/Jun/10 20:41,18/Aug/10 20:02,13/Mar/19 22:56,17/Jun/10 20:44,framework-3.0.0,,,,framework-3.0.2,,Framework,,,0,,,,,,"The implicit (a.k.a., magic) bootdelegation doesn't bootdelegate if it finds a classloader on the stack which is an inner class of a bundle-loaded class. If the classloader would be loaded from a bundle it will not prevent bootdelegation but if it happens to be an inner class it will. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56353,,,Thu Jun 17 20:44:42 UTC 2010,,,,,,0|i0vudb:,183893,,,,,,,,17/Jun/10 20:44;karlpauls;Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[sigil] UI update of project containing multiple bundles is broken,FELIX-2495,12470507,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,db82407,db82407,30/Jul/10 11:19,30/Jul/10 12:37,13/Mar/19 22:56,30/Jul/10 12:37,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"sigil.properties supports multiple bundles, but the UI view only shows the ""default"" bundle.

If the dependencies change, the UI creates a sigil.properties file with <bundle-id>;-imports=xxx, which is wrong, as the -imports compile dependencies are common to all bundles, so should not be prefixed by <bundle-id>;",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56287,,,2010-07-30 11:19:20.0,,,,,,0|i0vrz3:,183505,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[sigil] UI incorrectly saves sigil.properties containing renamed resources,FELIX-1813,12439194,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,db82407,db82407,27/Oct/09 16:22,28/Jul/10 18:33,13/Mar/19 22:56,28/Jul/10 18:33,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"sigil.properties supports resource renaming, which it passes directly to BND:

e.g.

-resources: \
  META-INF/XXX=resources/YYY


but the Sigil UI only supports resources relative to its base directory, without renaming.

When sigil.properties is saved, the target of the assignment is lost, e.g.

-resources: \
	META-INF/XXX

This will cause BND to fail as META-INF/XXX doesn't exist.


",,,,,,,,,,,,,,,FELIX-1509,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-27 16:57:49.043,,,no_permission,,,,,,,,,,,,57224,,,Wed Jul 28 18:33:18 UTC 2010,,,,,,0|i0vtqn:,183791,,,,,,,,27/Oct/09 16:57;davemssavage;Assigned to 1.0.0 release,27/Oct/09 16:59;davemssavage;I'm thinking of creating a new Path class that understands more of the BND syntax in this respect. This also has the benefit of removing one of the dependencies on the eclipse.common bundle (FELIX-1509),27/Oct/09 17:06;davemssavage;I've created FELIX-1814 to track this,28/Jul/10 18:33;davemssavage;Fixed by patch for FELIX-1814,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[sigil] order of -resources is not preserved,FELIX-2463,12468527,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,db82407,db82407,05/Jul/10 01:01,05/Jul/10 01:03,13/Mar/19 22:56,05/Jul/10 01:03,,,,,,,Sigil,,,0,,,,,,the order of resources specified using -resources is not preserved - impl should use LinkedHashMap.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56319,,,2010-07-05 01:01:48.0,,,,,,0|i0vrzj:,183507,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in Wrapper.unwrap() when calling Resolver.add(x implements Resource),FELIX-2306,12463204,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,mnuttall,mnuttall,28/Apr/10 12:11,15/Jun/10 11:05,13/Mar/19 22:56,15/Jun/10 08:41,bundlerepository-1.6.0,,,,bundlerepository-1.6.4,,Bundle Repository (OBR),,,0,,,,,,"This looks like a regression from OBR 1.4.1 to 1.6.  I have a resource class that implements org.osgi.service.obr.Resource. When I call Resolver.add(myResource) I
get a ClassCastException:

Caused by: java.lang.ClassCastException:my.resources.MyResource
incompatible with
org.apache.felix.bundlerepository.impl.wrapper.ResourceWrapper
       at org.apache.felix.bundlerepository.impl.wrapper.Wrapper.unwrap(Wrapper.java:59)
       at org.apache.felix.bundlerepository.impl.wrapper.ResolverWrapper.add(ResolverWrapper.java:40)
       at my.provisioning.impl.OBRProvisioner.resolve(OBRProvisioner.java:496)

Looking at Wrapper.java:

   public static Resource unwrap(org.osgi.service.obr.Resource resource) {
       return ((ResourceWrapper) resource).resource;
   }

I've passed in a class that implemented obr.Resource which this code is attempting to cast to ResourceWrapper: this fails. We got there via,

  // ResolverWrapper.java
  public void add(org.osgi.service.obr.Resource resource) {
       resolver.add(Wrapper.unwrap(resource));
   }

At no time was my Resource wrapped before it was unwrapped. ","Windows 7, Java 6",,,,,,,,,,,,,,,,,,,,14/Jun/10 15:16;gawor@mcs.anl.gov;FELIX-2306.patch;https://issues.apache.org/jira/secure/attachment/12447032/FELIX-2306.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-06-14 15:16:17.688,,,no_permission,,,,,,,,,,,,56433,,,Tue Jun 15 11:05:37 UTC 2010,,,,,,0|i0vrwv:,183495,,,,,,,,"14/Jun/10 15:16;gawor@mcs.anl.gov;Proposed patch for this issue. The patch code will attempt to covert osgi Resource to felix Resource by copying the data. This might not work in all cases but should in most.
","15/Jun/10 08:41;gnt;Adding         bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/wrapper/ConvertedResource.java
Sending        bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/wrapper/Wrapper.java
Transmitting file data ..
Committed revision 954751.
",15/Jun/10 11:05;mnuttall;Thank you for this. I've only a minor comment - 'int j = 0;' inside ConvertedResource() seems to be spurious. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Execution environment property is not correctly exposed,FELIX-2385,12466101,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gawor@mcs.anl.gov,gawor@mcs.anl.gov,03/Jun/10 16:08,08/Jun/10 11:28,13/Mar/19 22:56,08/Jun/10 11:28,bundlerepository-1.6.2,,,,bundlerepository-1.6.4,,Bundle Repository (OBR),,,0,,,,,,"The org.osgi.framework.executionenvironment property can be a list of comma separated of supported execution environments. Currently, the OBR assumes it contains a single value and publishes it as a single capability. If the value of this property is a list, the OBR resolution will pretty much fail since the filter generated based on the Bundle-RequiredExecutionEnvironment header will not match the single capability.
",,,,,,,,,,,,,,,,,,,,,03/Jun/10 16:09;gawor@mcs.anl.gov;FELIX-2385.patch;https://issues.apache.org/jira/secure/attachment/12446261/FELIX-2385.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-06-08 11:28:14.466,,,no_permission,,,,,,,,,,,,56371,,,Tue Jun 08 11:28:14 UTC 2010,,,,,,0|i0vrrb:,183470,,,,,,,,"03/Jun/10 16:09;gawor@mcs.anl.gov;A patch for this issue. The patch publishes each value in the org.osgi.framework.executionenvironment property as a separate capability.
","08/Jun/10 11:28;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/LocalResourceImpl.java
Committed r952615
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CLONE -NPE ""name can't be null"" when trying to install a bundle in Felix 2.0.3",FELIX-2271,12461774,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,11/Apr/10 23:08,30/May/10 22:10,13/Mar/19 22:56,30/May/10 22:10,framework-2.0.3,framework-2.0.4,,,framework-3.0.0,,Framework,,,0,,,,,,"The following exception is thrown when trying to install a bundle in Felix 2.0.3; it worked fine in 2.0.2 and older versions. Bundles such as Security, Log and Prefs can be installed w/o problems, though.

     [java] org.osgi.framework.BundleException: Could not create bundle object.
     [java]     at org.apache.felix.framework.Felix.installBundle(Felix.java:2483)
     [java]     at org.apache.felix.framework.Felix.installBundle(Felix.java:2330)
     [java]     at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:122)
     [java]     at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:108)
     [java]     at host.Main.fileNew(Main.java:97)
     [java]     at host.Main.filePresentAtStartup(Main.java:126)
     [java]     at host.DirectoryWatcher.addListener(DirectoryWatcher.java:82)
     [java]     at host.Main.main(Main.java:33)

     [java] Caused by: java.lang.NullPointerException: name can't be null
     [java]     at java.security.BasicPermission.init(BasicPermission.java:82)
     [java]     at java.security.BasicPermission.<init>(BasicPermission.java:120)
     [java]     at org.osgi.framework.BundlePermission.<init>(BundlePermission.java:136)
     [java]     at org.osgi.framework.BundlePermission.<init>(BundlePermission.java:126)
     [java]     at org.apache.felix.framework.FelixResolverState.getMatchingFragments(FelixResolverState.java:810)
     [java]     at org.apache.felix.framework.FelixResolverState.addHost(FelixResolverState.java:702)
     [java]     at org.apache.felix.framework.FelixResolverState.addModule(FelixResolverState.java:70)
     [java]     at org.apache.felix.framework.BundleImpl.addModule(BundleImpl.java:1108)
     [java]     at org.apache.felix.framework.BundleImpl.<init>(BundleImpl.java:80)
     [java]     at org.apache.felix.framework.Felix.installBundle(Felix.java:2425)

This is the manifest being used:

Bundle-Name: Square
Bundle-Description: A bundle that implements some plugin functionality
Bundle-Vendor: Ulf
Bundle-Version: 1.0.0
Bundle-Activator: plugin2.Square
Import-Package: org.osgi.framework,api

Let me know what other information might be pertinent.","Java 5 on OS X 10.5, but I don't think that matters",,,,,,,,,,FELIX-2087,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56467,,,Sun Apr 11 23:08:59 UTC 2010,,,,,,0|i0vruf:,183484,,,,,,,,11/Apr/10 23:08;karlpauls;Fixed in 2.0.5 but needs to be fixed in current trunk for 3.0.0 too.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getClassLoader-permission required accessing classes from dynamically loaded class,FELIX-2273,12461803,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,reto,reto,12/Apr/10 10:19,30/May/10 22:09,13/Mar/19 22:56,30/May/10 22:09,framework-2.0.4,,,,framework-3.0.0,,Framework,,,0,,,,,,"Using compiled scripts in clerezza as unpriledged users in clerezza yields to the exception below, I guess felix should get the ClassLoader as priviledged as this is not the permission one expects to need for simply using a class.

Caused by: java.security.AccessControlException: access denied (java.lang.RuntimePermission getClassLoader)
        at java.security.AccessControlContext.checkPermission(AccessControlContext.java:342)
        at java.security.AccessController.checkPermission(AccessController.java:553)
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)
        at java.lang.Class.getClassLoader(Class.java:611)
        at org.apache.felix.framework.ModuleImpl.isClassNotLoadedFromBundle(ModuleImpl.java:1577)
        at org.apache.felix.framework.ModuleImpl.searchDynamicImports(ModuleImpl.java:1530)
        at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:765)
        at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:61)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1733)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:264)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:332)
        at exception_templatebab01985c378e091c11d7b48ae16c8fc.main(exception_templatebab01985c378e091c11d7b48ae16c8fc)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:616)
        at org.apache.clerezza.scala.interpreter.ScalaInterpreter.execute(ScalaInterpreter.scala:269)
        at org.apache.clerezza.scala.interpreter.ScalaInterpreter.execute(ScalaInterpreter.scala:292)
        at org.apache.clerezza.scala.service.CompiledScript.execute(CompiledScript.scala:77)
        at org.apache.clerezza.platform.typerendering.scalaserverpages.ScalaServerPagesRenderlet.render(ScalaServerPagesRenderlet.java:136)
        ... 36 more
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-12 10:39:16.536,,,no_permission,,,,,,,,,,,,56465,,,Sun May 30 22:09:21 UTC 2010,,,,,,0|i0vrtz:,183482,,,,,,,,12/Apr/10 10:39;karlpauls;Looks like a bug. You should be able to work around this issue if you turn off our magic bootdelegation (assuming this is something you can do). Just set FelixConstants.IMPLICIT_BOOT_DELEGATION_PROP to false. Thanks for reporting.,30/May/10 22:09;karlpauls;Fixed in trunk. Please reopen if it doesn't work for you.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URLStreamHandlerProxy.setURL may not set query component correctly,FELIX-2150,12457735,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,sahoo,sahoo,01/Mar/10 13:31,28/May/10 22:14,13/Mar/19 22:56,28/May/10 22:14,framework-2.0.4,framework-2.0.5,,,framework-3.0.0,,Framework,,,0,,,,,,"On Mon, Mar 1, 2010 at 12:56 PM, Sahoo <Sahoo@sun.com> wrote:
> > Hi,
> >
> > org.apache.felix.framework.URLStreamHandlerProxy has following methods:
> >
> >   public void setURL(
> >       URL url, String protocol, String host, int port, String authority,
> >       String userInfo, String path, String query, String ref)
> >   {
> >       super.setURL(url, protocol, host, port, authority, userInfo, path,
> > query, ref);
> >   }
> >
> >   public void setURL(
> >       URL url, String protocol, String host, int port, String file, String
> > ref)
> >   {
> >       super.setURL(url, protocol, host, port, null, null, file, null, ref);
> >   }
> >
> >
> > There appears to be a *bug* in the latter method. It passes ""file"" as
> > ""path."" Should file not be brone into path and query components which would
> > have automatically happened if
> > super.setURL(url, protocol, host, port, file, ref) been called? Any
> > comments? I have not done any testing, just concluding based on code
> > inspection.

I agree, looks like a bug. It is not as bad as the path can be the
file as well but if you would call getQuery() on the resulting url it
will return null i think (even if you had a query). Could you create a
jira for this?

Thanks and regards,

Karl

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-28 22:12:01.266,,,no_permission,,,,,,,,,,,,56586,,,Fri May 28 22:14:01 UTC 2010,,,,,,0|i0vri7:,183429,,,,,,,,28/May/10 22:12;karlpauls;Include this in 3.0,28/May/10 22:14;karlpauls;I changed it to use the correct super method. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lots of contention on ExtensionManager.openConnection(URL),FELIX-2332,12464205,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,jedws,jedws,11/May/10 05:22,21/May/10 13:43,13/Mar/19 22:56,21/May/10 13:43,framework-2.0.5,,,,framework-3.0.0,,Framework,,,0,,,,,,"This method is synchronized, apparently to protect is the iteration through the m_extensions list. We have seen significant blocking in our applications as this lock encompasses the call to URL.openConnection as well.

As this list is rarely changed, a copy-on-write structure would be more appropriate, but at the very least the, only holding the lock during the iteration would be far preferable.",,,,,,,,,,,,,,,,,,,,,11/May/10 05:27;jedws;ExtensionManager.java.patch;https://issues.apache.org/jira/secure/attachment/12444181/ExtensionManager.java.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-11 20:14:07.149,,,no_permission,,,,,,,,,,,,56409,,,Fri May 21 13:43:50 UTC 2010,,,,,,0|i0vrs7:,183474,,,,,,,,11/May/10 05:27;jedws;attached is a simple patch that reduces the scope of the sync block to the iteration.,11/May/10 20:14;karlpauls;I think i fixed the problem in r943265. Please test and close this issue if it works for you.,"12/May/10 04:49;jedws;Karl, there are a couple of things I am concerned about with your commit.

Firstly there is partial visibility of changes, specifically in _removeExtensions(Object). It now completely clears the m_extensionsCache and then calls _add(String, Bundle) to add the old ones in one by one. As the openConnection(URL) method is no longer synchronised it can see the m_extensionsCache in a partially updated state. It would be better to write the m_extensionsCache at the end of the method once m_extensions is completely updated. This would also remove any intermediate array creation in this case. Obviously addExtension(Object source, Bundle extension) would also need to explicitly write the m_extensionsCache as well. This partial visibility issue could lead to some spurious and very hard to reproduce IOExceptions.

Second is a small point, the rewritten openConnection method uses Java5 syntax (foreach loop), but the m_extensionsCache write in _add uses the old 1.4 explicit cast of the array, unnecessary in Java5. I don't know if Felix3 is Java5 or not, or if it is whether there a policy for using Java5 features.","12/May/10 08:15;karlpauls;Jed, we just switched to using the -target jsr14 hack to be able to use some java5 language features and still targeting older jvms. We are slowly moving the framework to generics and the new for loop (in other words, that is ok).

Regarding the visibility issues I agree, if you are using extension bundles a lot and have a lot of races you might run into problems so i will make sure we do the update in one go. Thanks.",12/May/10 08:26;karlpauls;Should be fixed now. Please close if it works for you.,"13/May/10 00:53;jedws;Sorry Karl, one more thing. In _removeExtensions(Object source) you still write a blank m_extensionCache (line 526 in r943407). If you remove that line all should be good.","20/May/10 01:53;jedws;Any update?

The m_extensions_cache is still being written to with an blank cache during the remove operation.","20/May/10 09:27;karlpauls;I agree, will fix as soon as i find the time (weekend in this case probably) - getting close to a release and this will be part of it.",21/May/10 13:43;karlpauls;Done as of r947003. Please close if it works for you.,,,,,,,,,,,,,,,,,,,,,,,
Drop-in deployment of feature descriptor with spring-dm bundles fails,FELIX-2191,12458706,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,peter.gardfjell@gmail.com,peter.gardfjell@gmail.com,10/Mar/10 19:26,18/May/10 14:00,13/Mar/19 22:56,18/May/10 14:00,karaf-1.4.0,,,,karaf 1.6.0,,Karaf,,,0,,,,,,"Drop-in deployment of a feature descriptor in the deploy/ directory fails when the feature descriptor contains spring-dm 1.2.1 bundles.

Reproduce as follows:

(1) Start a fresh instance of Karaf 1.4.0 (unzip a new distribution and run bin\karaf.bat) 
(2) Copy a feature.xml file with the following contents to the deploy/ directory

<features>
  <feature name=""org.osgi.sample.sample.dependencies"">
    <bundle>mvn:org.springframework.osgi/spring-osgi-extender/1.2.1</bundle>
    <bundle>mvn:org.springframework.osgi/spring-osgi-core/1.2.1</bundle>
    <bundle>mvn:org.springframework.osgi/spring-osgi-io/1.2.1</bundle>
    <bundle>mvn:org.springframework.osgi/spring-osgi-web/1.2.1</bundle>
  </feature>
</features>

This fails and gives the following error entry in the log:

20:09:20,819 | ERROR | lixDispatchQueue | FeatureDeploymentListener
    | atures.FeatureDeploymentListener  136 | Unable to install
features
java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at 
org.apache.geronimo.blueprint.container.AbstractServiceReferenceRecipe$JdkProxyFactory$1.invoke(AbstractServiceReferenceRecipe.java:561)
        at $Proxy4.installFeatures(Unknown Source)
        at 
org.apache.felix.karaf.deployer.features.FeatureDeploymentListener.bundleChanged(FeatureDeploymentListener.java:132)
        at 
org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:800)
        at 
org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:728)
        at 
org.apache.felix.framework.util.EventDispatcher.run(EventDispatcher.java:942)
        at 
org.apache.felix.framework.util.EventDispatcher.access$000(EventDispatcher.java:54)
        at 
org.apache.felix.framework.util.EventDispatcher$1.run(EventDispatcher.java:106)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at 
org.apache.felix.karaf.features.internal.FeaturesServiceImpl.getFeaturesContainingBundle(FeaturesServiceImpl.java:899)
        at 
org.apache.felix.karaf.features.internal.FeaturesServiceImpl.getFeaturesContainingBundleList(FeaturesServiceImpl.java:910)
        at 
org.apache.felix.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:296)
        ... 13 more
","Windows 7
Java 1.6.0_16",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-18 14:00:39.033,,,no_permission,,,,,,,,,,,,56547,,,Tue May 18 14:00:39 UTC 2010,,,,,,0|i0vr9b:,183389,,,,,,,,"20/Mar/10 22:48;peter.gardfjell@gmail.com;I did some research into this matter.
Without being familiar with the inner workings of the FeatureServiceImpl class, there seems to be something weird going on which causes the features map to be nulled whenever a feature repository is added/removed. This causes the NPE later on in installFeatures. I made some small changes to prevent the features map from being nulled and apparently that made the NPE go away. I don't know if it's a solution but I thought it might at least provide some guidance to solving this issue. The following is a diff of the changes I introduced against the karaf 1.4.0 branch.

Index: src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java
===================================================================
--- src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java	(revision 925639)
+++ src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java	(working copy)
@@ -85,7 +85,7 @@
     private PreferencesService preferences;
     private Set<URI> uris;
     private Map<URI, RepositoryImpl> repositories = new HashMap<URI, RepositoryImpl>();
-    private Map<String, Map<String, Feature>> features;
+    private Map<String, Map<String, Feature>> features = new HashMap<String, Map<String,Feature>>();
     private Map<Feature, Set<Long>> installed = new HashMap<Feature, Set<Long>>();
     private String boot;
     private boolean bootFeaturesInstalled;
@@ -170,7 +170,9 @@
         repo.load();
         repositories.put(uri, repo);
         callListeners(new RepositoryEvent(repo, RepositoryEvent.EventType.RepositoryAdded, false));
-        features = null;
+        LOGGER.info(""internalAddRepository: "" + uri);
+        Thread.currentThread().dumpStack();
+        features.clear();
         return repo;
         
     }
@@ -185,7 +187,8 @@
     public void internalRemoveRepository(URI uri) {
         Repository repo = repositories.remove(uri);
         callListeners(new RepositoryEvent(repo, RepositoryEvent.EventType.RepositoryRemoved, false));
-        features = null;
+        LOGGER.info(""internalRemoveRepository"");
+        features.clear();
     }
 
     public Repository[] listRepositories() {
@@ -603,7 +606,7 @@
     }
 
     protected Map<String, Map<String, Feature>> getFeatures() throws Exception {
-        if (features == null) {
+        if (features.isEmpty()) {
         	//the outer map's key is feature name, the inner map's key is feature version       
             Map<String, Map<String, Feature>> map = new HashMap<String, Map<String, Feature>>();
             // Two phase load:
@@ -895,6 +898,7 @@
     }
 
     public Set<Feature> getFeaturesContainingBundle (Bundle bundle) {
+    	LOGGER.info(""getFeaturesContainingBundle: this.features: "" + this.features);
         Set<Feature> features = new HashSet<Feature>();
         for (Map<String, Feature> featureMap : this.features.values()) {
             for (Feature f : featureMap.values()) {
","18/May/10 14:00;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java
Committed r945659
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configurations on features should not override existing configurations,FELIX-2347,12464785,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,18/May/10 11:31,18/May/10 11:37,13/Mar/19 22:56,18/May/10 11:37,,,,,karaf 1.6.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56395,,,Tue May 18 11:37:01 UTC 2010,,,,,,0|i0vthz:,183752,,,,,,,,"18/May/10 11:37;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java
Committed r945596
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible NPE for jars with null Manifest,FELIX-2317,12463559,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,03/May/10 14:19,11/May/10 18:59,13/Mar/19 22:56,11/May/10 18:59,framework-2.0.5,,,,framework-3.0.0,,Framework,,,0,,,,,,"JarFile.getManifest() can return null, so to avoid NPE, code must check for null return value. The following code in framework does not do so:

    public Map getManifestHeader() throws Exception
    {
        // Get the embedded resource.
        Manifest mf = m_jarFile.getManifest();
        // Create a case insensitive map of manifest attributes.
        return new StringMap(mf.getMainAttributes(), false);
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-11 18:59:10.554,,,no_permission,,,,,,,,,,,,56423,,,Tue May 11 18:59:10 UTC 2010,,,,,,0|i0vtj3:,183757,,,,,,,,"11/May/10 18:59;rickhall;I committed a patch that checks for a null manifest. Please close if you are satisfied, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updating bundles when debugging switched on might result in a deadlock with 100% CPU usage,FELIX-2080,12456341,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,roland.huss,roland.huss,15/Feb/10 16:17,11/May/10 18:37,13/Mar/19 22:56,11/May/10 18:37,framework-2.0.3,,,,framework-3.0.0,,Framework,,,0,,,,,,"With the following minimal scenario using Spring 3.0.0.RELEASE bundles the following happen when one update spring-core first and the spring-web:

$ grep log conf/config.properties
felix.log.level=4

$ ls bundle/
com.springsource.javax.servlet-2.4.0.jar               org.apache.felix.shell-1.4.2.jar      spring-context-3.0.0.RELEASE.jar
com.springsource.org.aopalliance-1.0.0.jar             org.apache.felix.shell.tui-1.4.1.jar  spring-core-3.0.0.RELEASE.jar
com.springsource.org.apache.commons.logging-1.1.1.jar  spring-aop-3.0.0.RELEASE.jar          spring-web-3.0.0.RELEASE.jar
org.apache.felix.bundlerepository-1.4.3.jar            spring-beans-3.0.0.RELEASE.jar
$ java -jar bin/felix.jar
....
-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.0.3)
[   1] [Active     ] [    1] Java Servlet API (2.4.0)
[   2] [Active     ] [    1] AOP Alliance API (1.0.0)
[   3] [Active     ] [    1] Apache Commons Logging (1.1.1)
[   4] [Active     ] [    1] Apache Felix Bundle Repository (1.4.3)
[   5] [Active     ] [    1] Apache Felix Shell Service (1.4.2)
[   6] [Active     ] [    1] Apache Felix Shell TUI (1.4.1)
[   7] [Active     ] [    1] Spring AOP (3.0.0.RELEASE)
[   8] [Active     ] [    1] Spring Beans (3.0.0.RELEASE)
[   9] [Active     ] [    1] Spring Context (3.0.0.RELEASE)
[  10] [Active     ] [    1] Spring Core (3.0.0.RELEASE)
[  11] [Active     ] [    1] Spring Web (3.0.0.RELEASE)

-> update 10
DEBUG: WIRE: 10.1 -> org.apache.commons.logging -> 3.0
DEBUG: WIRE: 10.1 -> javax.xml.transform.stax -> 0
DEBUG: WIRE: 10.1 -> javax.xml.stream.events -> 0
DEBUG: WIRE: 10.1 -> org.w3c.dom -> 0
DEBUG: WIRE: 10.1 -> org.xml.sax -> 0
DEBUG: WIRE: 10.1 -> javax.xml.namespace -> 0
DEBUG: WIRE: 10.1 -> javax.xml.stream -> 0
DEBUG: WIRE: 10.1 -> javax.xml.stream.util -> 0
DEBUG: WIRE: 10.1 -> org.xml.sax.ext -> 0
DEBUG: WIRE: 10.1 -> javax.xml.transform -> 0
DEBUG: WIRE: 10.1 -> javax.xml.transform.sax -> 0
DEBUG: WIRE: 10.1 -> org.xml.sax.helpers -> 0
-> update 11
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.1] and org.springframework.core from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core from [10.0] and org.springframework.core from [10.1]
.....

and so on ...

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-16 06:04:58.493,,,no_permission,,,,,,,,,,,,56653,,,Tue May 11 18:37:34 UTC 2010,,,,,,0|i0vr7j:,183381,,,,,,,,"16/Feb/10 06:04;rickhall;I was excited to see this bug because we need such ""simple"" problematic use cases to help us debug the current resolver and/or test our coming new resolver. Unfortunately, I seem to be missing something or perhaps there is a step you are forgetting:

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.0.3)
[   1] [Active     ] [    1] Apache Felix Bundle Repository (1.4.3)
[   2] [Active     ] [    1] Apache Felix Shell Service (1.4.2)
[   3] [Active     ] [    1] Apache Felix Shell TUI (1.4.1)
[   4] [Active     ] [    1] Java Servlet API (2.4.0)
[   5] [Active     ] [    1] AOP Alliance API (1.0.0)
[   6] [Active     ] [    1] Apache Commons Logging (1.1.1)
[   7] [Active     ] [    1] Spring AOP (3.0.0.RELEASE)
[   8] [Active     ] [    1] Spring Beans (3.0.0.RELEASE)
[   9] [Active     ] [    1] Spring Context (3.0.0.RELEASE)
[  10] [Active     ] [    1] Spring Core (3.0.0.RELEASE)
[  11] [Active     ] [    1] Spring Web (3.0.0.RELEASE)
-> update 10
DEBUG: WIRE: 10.1 -> org.xml.sax -> 0
DEBUG: WIRE: 10.1 -> javax.xml.namespace -> 0
DEBUG: WIRE: 10.1 -> org.w3c.dom -> 0
DEBUG: WIRE: 10.1 -> org.apache.commons.logging -> 6.0
DEBUG: WIRE: 10.1 -> javax.xml.transform -> 0
DEBUG: WIRE: 10.1 -> javax.xml.transform.sax -> 0
DEBUG: WIRE: 10.1 -> org.xml.sax.ext -> 0
DEBUG: WIRE: 10.1 -> org.xml.sax.helpers -> 0
-> update 11
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core.io from [10.1] and org.springframework.core.io from [10.0]
DEBUG: Constraint violation for 11.0 detected; module can see org.springframework.core.io from [10.0] and org.springframework.core.io from [10.1]

...SNIP...

DEBUG: WIRE: 11.0 -> javax.servlet.http -> 4.0
DEBUG: WIRE: 11.0 -> javax.xml.namespace -> 0
DEBUG: WIRE: 11.0 -> javax.xml.transform -> 0
DEBUG: WIRE: 11.0 -> javax.servlet -> 4.0

...SNIP...

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.0.3)
[   1] [Active     ] [    1] Apache Felix Bundle Repository (1.4.3)
[   2] [Active     ] [    1] Apache Felix Shell Service (1.4.2)
[   3] [Active     ] [    1] Apache Felix Shell TUI (1.4.1)
[   4] [Active     ] [    1] Java Servlet API (2.4.0)
[   5] [Active     ] [    1] AOP Alliance API (1.0.0)
[   6] [Active     ] [    1] Apache Commons Logging (1.1.1)
[   7] [Active     ] [    1] Spring AOP (3.0.0.RELEASE)
[   8] [Active     ] [    1] Spring Beans (3.0.0.RELEASE)
[   9] [Active     ] [    1] Spring Context (3.0.0.RELEASE)
[  10] [Active     ] [    1] Spring Core (3.0.0.RELEASE)
[  11] [Active     ] [    1] Spring Web (3.0.0.RELEASE)
-> 

Notice that I did get constraint violations, but it still finished quickly. One difference I can see is that when I do ""update 10"", I don't get as many resulting wires as you, not sure why that'd be the case.

Any help to reproduce this would be greatly appreciated. Thanks!","16/Feb/10 06:11;rickhall;Perhaps the issue is our bundles are not actually the same, I notice my file names are different than yours. I just downloaded mine from the SpringSource bundle repository:

    http://www.springsource.com/repository/app/

Mine are called:

    org.springframework.beans-3.0.0.RELEASE.jar
    org.springframework.context-3.0.0.RELEASE.jar
    org.springframework.core-3.0.0.RELEASE.jar
    org.springframework.aop-3.0.0.RELEASE.jar	
    org.springframework.web-3.0.0.RELEASE.jar

Yours are called:

    spring-beans-3.0.0.RELEASE.jar 
    spring-context-3.0.0.RELEASE.jar
    spring-core-3.0.0.RELEASE.jar
    spring-aop-3.0.0.RELEASE.jar
    spring-web-3.0.0.RELEASE.jar

Where do I get the ones you are using?","16/Feb/10 11:49;roland.huss;My spring bundles are directly from my local maven repository as they are distributed by spring itself (e.g http://mirrors.ibiblio.org/pub/mirrors/maven2/org/springframework/spring-core/3.0.0.RELEASE/). If you like, I can zip up my sample installation and send it to you.

Unfortunately, it seems the problem seems either to be a race condition or depends on the number of updates performed on a single bundle. 
In fact, I it is not reproducible for the first updates. Also, switching debugging on/off seems to have an effect, too.

But what I can reproduce is, that for multiple updates on these bundles the processing time increases more than linearly 
for each update:

update 10
update 11 --> 0:01
update 10
update 11 --> 0:06
update 10
update 11 --> 0:33
update 10
update 11 --> 2:13
update 10 
update 11 --> 6:22

Theses test are done on a freshly started felix (with an empty cache)  (on my MBP, second generation).
My feeling is also that the time passed between starting the updates has an influence, too.

FYI: I encountered the problems first, when I tried to update 15 spring bundles via JMX with the Aries implementation of the OSGi EEG JMX Spec 
for FrameworkMBean.installBundles() which under the hood calls update() on each bundle separately in a loop. With this, I'm able to 
kill my server reproducibly (and always ;-) from the first time. I can offer to post some thread dumps taken after (1,5,10,..) minutes for this scenario.
A minor difference from the scenario above here is, that the debug looks like

DEBUG: Constraint violation for 64.1 detected; module can see org.springframework.context.support from [32.1] and org.springframework.context.support from [32.0]
DEBUG: Constraint violation for 64.1 detected; module can see org.springframework.context.support from [32.1] and org.springframework.context.support from [32.0]
DEBUG: Constraint violation for 64.1 detected; module can see org.springframework.context.support from [32.1] and org.springframework.context.support from [32.0]
DEBUG: Constraint violation for 64.1 detected; module can see org.springframework.context.support from [32.1] and org.springframework.context.support from [32.0]
DEBUG: Constraint violation for 64.1 detected; module can see org.springframework.context.support from [32.1] and org.springframework.context.support from [32.0]
DEBUG: Constraint violation for 64.1 detected; module can see org.springframework.context.support from [32.1] and org.springframework.context.support from [32.0]
DEBUG: Constraint violation for 64.1 detected; module can see org.springframework.context.support from [32.1] and org.springframework.context.support from [32.0]
...

where the minor version (""64.1"",""32.1"",""32.0"") are always the same (64 here is org.springframework.web.servlet, 32 is org.springframework.context) and I don't whether it
ever stops ;-) ","16/Feb/10 13:00;rickhall;The linear increase likely makes sense since every update causes a new version of the existing package to be introduced (i.e., adds another provider of the package). Thus, the number of constraint violations grows each time.

Thread dumps are not so helpful, since I pretty much know what is going on...it is looping trying to find a consistent set of candidates. What I really need is a reproducible test case, which is why I was excited about your small scenario. Still, if you can reproduce it in a big scenario, that's better than nothing. So if you can create something I can download or you can email to me, please do. Thanks!",11/May/10 18:37;rickhall;Resolving this since I am not able to reproduce and the resolver changes for framework 3.0 are intended to address this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,
Freeze finding consistent class space,FELIX-1967,12444637,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,mrdon,mrdon,04/Jan/10 23:46,11/May/10 18:35,13/Mar/19 22:56,11/May/10 18:35,framework-2.0.1,,,,framework-3.0.0,,Framework,,,0,,,,,,"Felix seems to be frozen (as in still running from yesterday) while creating a consistent class space.  Here are excerpts from five thread dumps:

(first three times and the last)

74012 ""http-2990-Processor1"" daemon prio=10 tid=0x9048b800 nid=0x52eb runnable [0x90fcc000..0x90fceeb0]
74013    java.lang.Thread.State: RUNNABLE
74014     at java.util.AbstractCollection.containsAll(AbstractCollection.java:276)
74015     at org.apache.felix.framework.searchpolicy.ResolvedPackage.isSubset(ResolvedPackage.java:55)
74016     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:775)
74017     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:720)
74018     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:720)
74019     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:720)
74020     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:720)
74021     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:720)
74022     at org.apache.felix.framework.searchpolicy.Resolver.findConsistentClassSpace(Resolver.java:462)
74023     at org.apache.felix.framework.searchpolicy.Resolver.resolve(Resolver.java:94)
74024     at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3733)
74025     at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3105)
74026     at org.apache.felix.framework.Felix.startBundle(Felix.java:1441)
74027     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:779)
74028     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:760)

(fourth time)
76082 ""http-2990-Processor1"" daemon prio=10 tid=0x9048b800 nid=0x52eb runnable [0x90fcc000..0x90fceeb0]
76083    java.lang.Thread.State: RUNNABLE
76084     at java.util.HashMap.put(HashMap.java:385)
76085     at org.apache.felix.framework.searchpolicy.Resolver.calculateExportedPackages(Resolver.java:1071)
76086     at org.apache.felix.framework.searchpolicy.Resolver.calculateModulePackages(Resolver.java:954)
76087     at org.apache.felix.framework.searchpolicy.Resolver.getModulePackages(Resolver.java:929)
76088     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:697)
76089     at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:720)
76090     at org.apache.felix.framework.searchpolicy.Resolver.findConsistentClassSpace(Resolver.java:462)
76091     at org.apache.felix.framework.searchpolicy.Resolver.resolve(Resolver.java:94)
76092     at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3733)
76093     at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3105)
76094     at org.apache.felix.framework.Felix.startBundle(Felix.java:1441)
76095     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:779)
76096     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:760)",,,,,,,,,,,,,,,,,,,,,05/Jan/10 05:34;dusan.hornik;MANIFEST.MF;https://issues.apache.org/jira/secure/attachment/12429417/MANIFEST.MF,08/Jan/10 06:19;dusan.hornik;felix.m_configMap.txt;https://issues.apache.org/jira/secure/attachment/12429720/felix.m_configMap.txt,06/Jan/10 01:20;dusan.hornik;manifests.zip;https://issues.apache.org/jira/secure/attachment/12429488/manifests.zip,,,3.0,,,,,,,,,,,,,,,,,,,2010-01-05 00:37:47.635,,,no_permission,,,,,,,,,,,,57084,,,Tue May 11 18:35:46 UTC 2010,,,,,,0|i0vr6n:,183377,,,,,,,,05/Jan/10 00:37;karlpauls;Can you get us the manifests of the bundles that you are resolving? ,05/Jan/10 05:34;dusan.hornik;attaching manifest file,"05/Jan/10 15:34;rickhall;It is unlikely frozen, it is just taking a long time. Both equally bad.

It would be better if you could give the set of manifests for all installed bundles. More of a pain, I know, but definitely more helpful.","06/Jan/10 01:20;dusan.hornik;Attached are all (31) manifests.

Very long time means the app doesn't come back even after a day of waiting. It looks like some kind of infinite loop.
",06/Jan/10 15:20;rickhall;Which bundle are you trying to resolve?,"06/Jan/10 16:33;rickhall;Also, are you configuring the system bundle to export packages from the class path? If so, could you give me the configuration. I am unable to resolve the above bundles due to unsatisfied constraints.","08/Jan/10 06:19;dusan.hornik;Attaching system bundle debug info.

{{com.atlassian.jira.toolkit}} is the bundle that gets in loop and stops the system from loading. 
","08/Jan/10 19:30;rickhall;There appears to be another missing package: com.atlassian.plugin.osgi.bridge.external

I added this to system packages extra and now the bundle resolves for me without issue. It looks these steps are not sufficient to reproduce. I would guess that what is happening is that some of the bundles are resolved before resolving the toolkit bundle, which would change the priority of some packages, which could lead to constraint conflicts.

If you are able to reproduce this regularly, then please tell me the precise steps. I should note that it looks like you are using a patched 1.8.x framework, while I am testing on the trunk.","10/Jan/10 23:37;dusan.hornik;Hi Richard, 

Thanks for looking into this issue. We have this problem with Felix 2.0.1 (last time I accidentally used 1.8.1, but usually we use 2.0.1)

During our functional tests we restart the osgi framework several times. Most of the time bundles gets resolved properly but in average 1 in 10 times we hit the problem and resolving stops. So it's not always easily reproducible.

It seems to be looping forever in {{while}} loop in  {{Resolver.findConsistentClassSpace}}","11/Jan/10 00:17;rickhall;Too bad we can't reproduce it...makes it difficult to debug. I am not convinced it is an infinite loop, but it could be. Since the algorithm is relatively deterministic, I would expect it to do the same thing with the same input, which is why I guess you are likely getting into a situation where you are not starting from a clean slate, e.g., the bundles are not all in the INSTALLED state at the start of the resolve. If you figure out how to reproduce, definitely let me know.

I am actually hard at work on a new resolver implementation, since I do know for a fact that the current algorithm can take too long in certain scenarios. Unfortunately, I cannot say if this new algorithm will help your scenario since we cannot reproduce it. I can definitely say that it looks like it greatly improves on some scenarios that take the current resolver a long time.

I don't have a definitive time frame for the new resolver yet, since it is still somewhat in its infancy. I am hopeful that I won't run into any roadblocks and this is my top priority right now. If all goes well, I expect it to be part of the next major framework release, but I expect another micro release of the framework before that.","21/Jan/10 13:24;alexander.klimetschek;I experience the same issue with many bundles (started using Sling's jcrinstall, just as it was the case for Betrand in FELIX-961) in Felix 2.0.2.

This happened upon restart of the framework after a kill -9 due to an OutOfMemory exception, and I have seen it at least twice with Felix 2.0.x. although the last time it happened during a bundle install during runtime. Some of our bundles have lots of imports, which might foster the issue.

The JVM process is at >90% all the time (> 10 minutes already) and my thread dumps always contain what I added below (done multiple times). A kill -9 restart helped, although I had to manually start a few bundles in the web console - this might be related to jcrinstall however.

What would be good is to have some kind of debugging output that is always generated (ie. in case it takes longer than a certain amount of time), so that I can grab and post that if I experience the issue again.

""FelixStartLevel"" daemon prio=5 tid=0x0000000102db8000 nid=0x131ec1000 runnable [0x0000000131ebf000]
   java.lang.Thread.State: RUNNABLE
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:956)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:983)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:983)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:983)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:983)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:983)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:983)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:983)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateUsesConstraints(Resolver.java:935)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:814)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.findConsistentClassSpace(Resolver.java:543)
	at org.apache.felix.framework.searchpolicy.Resolver.resolve(Resolver.java:104)
	at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3866)
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3256)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1597)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1077)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:637)

""FelixStartLevel"" daemon prio=5 tid=0x0000000102db8000 nid=0x131ec1000 runnable [0x0000000131ec0000]
   java.lang.Thread.State: RUNNABLE
	at org.apache.felix.framework.searchpolicy.Resolver.calculateExportedPackages(Resolver.java:1150)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateModulePackages(Resolver.java:1036)
	at org.apache.felix.framework.searchpolicy.Resolver.getModulePackages(Resolver.java:1011)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:779)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.findConsistentClassSpace(Resolver.java:543)
	at org.apache.felix.framework.searchpolicy.Resolver.resolve(Resolver.java:104)
	at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3866)
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3256)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1597)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1077)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:637)

""FelixStartLevel"" daemon prio=5 tid=0x0000000102db8000 nid=0x131ec1000 runnable [0x0000000131ec0000]
   java.lang.Thread.State: RUNNABLE
	at org.apache.felix.framework.ModuleImpl.getCapabilities(ModuleImpl.java:257)
	- locked <0x000000010aec2508> (a org.apache.felix.framework.ModuleImpl)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateExportedPackages(Resolver.java:1145)
	at org.apache.felix.framework.searchpolicy.Resolver.calculateModulePackages(Resolver.java:1036)
	at org.apache.felix.framework.searchpolicy.Resolver.getModulePackages(Resolver.java:1011)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:779)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.isClassSpaceConsistent(Resolver.java:802)
	at org.apache.felix.framework.searchpolicy.Resolver.findConsistentClassSpace(Resolver.java:543)
	at org.apache.felix.framework.searchpolicy.Resolver.resolve(Resolver.java:104)
	at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3866)
	at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3256)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1597)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1077)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:637)


","21/Jan/10 18:38;rickhall;Any repeatable scenarios are definitely welcome.

I am currently working on a new resolver algorithm implementation in my sandbox with the intention of making it part of the next major framework release. I am not sure precisely when this will happen, since it is somewhat complicated and I still have a little bit of work to implement all aspects of the spec and assuming I don't run into any obstacles along the way.

The good news is I tested the scenario from FELIX-961 and it resolves pretty quickly with the new algorithm, so now I just need to get it to the point where I can run it against the TCK to know if it is resolving correctly. So far, so good.",11/May/10 18:35;rickhall;Resolving this since I am not able to reproduce and the resolver change for framework 3.0 are intended to address this issue.,,,,,,,,,,,,,,,,,,,
JRE packages are exported with wrong version,FELIX-995,12419177,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,22/Mar/09 14:15,07/May/10 18:15,13/Mar/19 22:56,07/May/10 18:15,framework-1.4.1,,,,framework-3.0.0,,Framework,,,0,,,,,,"Felix 1.4.1 exports JRE packages with a version equals to the JRE version. e.g., if I am using Java SE 6, then all packages are exported with version=1.6. This is incorrect. Most of the packages are versioned as per the JSRs they are defined by.",generic,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-22 15:37:41.815,,,no_permission,,,,,,,,,,,,57995,,,Fri May 07 18:15:35 UTC 2010,,,,,,0|i0vus7:,183960,,,,,,,,"22/Mar/09 15:37;rickhall;Yes, this is true. We did this for expediency and lack of knowledge for the actual versions. I would assume that some do not have real versions, so then what should those versions be? It was tricky, so we just did this.

However, if you know the definitive answer, feel free to submit a patch. Thanks.","23/Mar/09 02:09;sahoo;If we don't know the actual version, won't it be better to leave it unspecified, thus it defaulting to 0.0.0? Setting them to JRE version does pose a problem in some situations. e.g., I am trying to provide a bundle with javax.transaction; version=1.1, but it is never getting picked up as the system provides version=1.6.","24/Mar/09 16:24;rickhall;Good question, but I don't really know the answer to that. The main downside of leaving it 0.0.0 is then there is no way to differentiate between the packages no matter on which platform you run Felix.","24/Mar/09 17:02;mcculls;Could we perhaps pick up the version from org.osgi.framework.system.packages / org.osgi.framework.system.packages.extra ?

If we supported versions attached to the package names then we could add some initial spec versions to our default configuration properties and users could override the defaults with alternative versions as required","24/Mar/09 17:35;sahoo;Richard,
javax packages don't always vary with JRE. The ones that do vary tend to have a version unrelated to the JRE version. They are probably controlled by their own JSR version. I am trying to find out the actual API versions of various javax packages distributed in JRE.","24/Mar/09 21:08;rickhall;Stuart, we do pick up the version for the property, so it is definitely something that can be overridden.

Sahoo, if we can find proper versions for the javax packages, then I think it makes sense to include them for each platform in our default properties. If no version is known, then I think using the Java version makes sense, since we will be treating it as an implementation package tied to the Java version.","09/Apr/10 08:59;sahoo;Given that versions of Java SE and EE packages are being discussed at a much wider level, we should wait for them to finalize package versions. In the mean while, I think Felix should not specify package version, as some of the package are defined in specifications which are still at 1.0 level. I think equinox is configured this as well. 

Secondly, we should at least do something about packages like javax.transaction and org.omg.CORBA which is known to be incomplete in JRE. e.g., this is what we do in GlassFish while exporting:

 javax.transaction; javax.transaction.xa;partial=true; mandatory:=partial, \

We also set a boot delegation flag for javax.transaction and javax.transaction.*, else javax.sql won't work because of constraint violation. The more enterprise users use Felix, the more often they will encounter this problem of not finding some javax.transaction classes.","09/Apr/10 11:18;davemssavage;Yep I recently ran into the javax.transaction:1.6 problem in relation to deploying aries on felix. Here I get NoClassDefFoundError 

Stack Trace: org.osgi.framework.BundleException: Activator start error in bundle org.apache.aries.transaction.manager [34].
        at org.apache.felix.framework.Felix.activateBundle(Felix.java:1803)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1678)
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)
...
Caused by: java.lang.NoClassDefFoundError: javax/transaction/TransactionManager
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:700)
        at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1872)

This is caused by the fact that the aries transaction manager bundle exports javax.transaction:1.3 and imports [1.3,2.0) and the aries bundle actually includes the full javax.transaction package.

In equinox this works fine as there they export the version as 0.0.0 so the import range ensures that it is not wired, but in felix the 1.6 version trumps the 1.3 version supplied by the bundle so it get's wired in its place but leads to a runtime failure.

Now I think one could also argue that in this case the version range should actually be [1.3,1.4) as they actually implement the API which would fix this specific case but in general it's still a problem for consumers.","09/Apr/10 13:30;rickhall;I have been looking into adding ""uses"" constraint information to the JRE packages too, although it is not clear if this will help the situation or not at this point. Regardless, one thing is clear is that the system bundle is not telling the truth about its constraints if it omits ""uses"" constraints.

Regarding the version number, I still think it is a mistake to include the same version number for all JRE packages on every version of the JRE. This means there is never anyway to differentiate. However, we could just assign 0.0.0 with a qualifier, e.g., 0.0.0.jre-1.6 or something.","09/Apr/10 13:40;karlpauls;I think the 0.0.0.jre-1.6 idea makes sense. Maybe we should make it the name of the matching execution-env for the qualifier (i.e., JRE-1.1, J2SE-1.2, J2SE-1.3, J2SE-1.4, J2SE-1.5, JavaSE-1.6)?

regards,

Karl","09/Apr/10 13:45;tjwatson;FWIW, I would be willing to add EE qualifiers to the VM packages exported by the system bundle in Equinox so we can be consistent.  I would use the Execution Environment string for the VM instead of jre-1.6 though (e.g.  0.0.0.JavaSE-1.6, 0.0.0.J2SE-1.4 etc.).  There is an issue for what the qualifier should be for embedded VMs since '/' is not a valid character in a qualifier (e.g. CDC-1.1/Foundation-1.1)  We would have to substitute '_' or something else for '/'.
",09/Apr/10 13:49;rickhall;Sounds good to me.,"26/Apr/10 17:07;rickhall;I committed a patch to implement this approach for JRE package version numbering.

We actually can't use '.' in the qualifier either, so I ended up with: 0.0.0.J2SE-1_3, 0.0.0.JavaSE-1_6, etc.

Would be better with a '.', but not much we can do. Sahoo, you can close this bug if you are satisfied. Thanks!","06/May/10 06:22;sahoo;Whatever solution we go for should allow users to control what they want to use. e.g.:

a) They should be able to select JRE packages if they want to.

Can this be achieved by using provider selection mechanism? e.g., can I say
Import-Package: javax.xml.bind; Bundle-SymbolicName=system.bundle

b) They should be able to use alternative packages sources for some of these packages.
How to achieve this if the alternative sources also don't specify any package versions and user does not know the bundle symbolic names of the alternative bundles?

Are these valid requirements? If yes, does the current solution meet these requirements? If not, does it make any sense to have an attribute in addition to or instead of package version qualifier so that user has more control over wiring process. May be a mandatory attribute will do the trick for #b?

Thanks,
Sahoo","06/May/10 13:09;rickhall;> a) They should be able to select JRE packages if they want to.
> 
> Can this be achieved by using provider selection mechanism? e.g., can I say
> Import-Package: javax.xml.bind; Bundle-SymbolicName=system.bundle 

Yes, this should work.

> b) They should be able to use alternative packages sources for some of these packages.
> How to achieve this if the alternative sources also don't specify any package
> versions and user does not know the bundle symbolic names of the alternative bundles? 

They have all the normal mechanism available in OSGi to differentiate and can always disable the system bundle exports if they chose. I don't think we need to do anything else.

Mandatory attributes on the system bundle would be a nightmare because no one would match anything by default.",07/May/10 18:06;rickhall;Need to account for ordering of JRE versions.,"07/May/10 18:15;rickhall;Ok, as crazy as it is, I've modified the JRE package version numbering scheme to enable proper sort order of versions so you can technically use them for version ranges and backwards compatibility. The new scheme is like this:

    1_006_JavaSE

I put the version first and add some zeroes. I didn't use any zeroes in the major number because I assume we won't live that long.",,,,,,,,,,,,,,,
[gogo] automatic expansion of $args in Closure stops direct access to $args list,FELIX-1493,12433306,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,db82407,db82407,18/Aug/09 07:33,06/May/10 00:49,13/Mar/19 22:56,06/May/10 00:23,,,,,gogo-0.6.0,,Gogo Runtime,,,0,,,,,,"individual arguments to Closures can be accessed as $0, $1, $2
all arguments can be accessed as the List $args.

> x = { echo hello $args }
> x a b

used to produce:
hello [a b]

because the $args List was passed directly as a single argument to echo.

This is not desirable in most cases, so the parser was changed to expand $args in Closures by expanding the $args List,
thus producing:

hello a b

Unfortunately, this also broke the ability for a closure to access the $args list directly:

% loop = { each $args { echo arg is $it }}
% loop a b
IllegalArgumentException: Cannot coerce each[1, 2, 3, org.apache.felix.gogo.runtime.shell.Closure@b1deea] to any of [(CommandSession, Collection, Function)]

A simple fix would be to introduce an alternative Closure variable name e.g. argv that is NOT expanded, but remains as a list:

% loop = { each $argv { echo arg is $it }}
% loop a b
arg is a
arg is b






",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57531,,,Thu May 06 00:23:55 UTC 2010,,,,,,0|i0vt2f:,183682,,,,,,,,"06/May/10 00:23;db82407;I have added $argv which is always a non-null List and is not expanded specially like $args.

for example

x = {
   shift = ($argv remove 0)
   echo arg1=$shift rest=$args
}

% x 1 2 3
arg1=1 rest=2 3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The order of the list of boot features is not used when installing the features,FELIX-2319,12463570,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,03/May/10 16:07,03/May/10 16:12,13/Mar/19 22:56,03/May/10 16:12,karaf-1.4.0,,,,karaf 1.6.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56422,,,Mon May 03 16:12:47 UTC 2010,,,,,,0|i0vrvr:,183490,,,,,,,,"03/May/10 16:12;gnt;URL: http://svn.apache.org/viewvc?rev=940499&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove the Bootstrap class which is not needed anymore,FELIX-2311,12463420,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,30/Apr/10 09:28,30/Apr/10 09:29,13/Mar/19 22:56,30/Apr/10 09:29,,,,,karaf 1.6.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56429,,,Fri Apr 30 09:29:17 UTC 2010,,,,,,0|i0vtl3:,183766,,,,,,,,"30/Apr/10 09:29;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	D	karaf/main/src/main/java/org/apache/felix/karaf/main/Bootstrap.java
	M	karaf/assembly/src/main/distribution/unix-shell/bin/karaf
	M	karaf/assembly/src/main/distribution/windows-text/bin/karaf.bat
	M	karaf/demos/web/src/main/java/org/apache/felix/karaf/web/WebAppListener.java
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
Committed r939602
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Don't install jaas.boot bundle, its in the startup classpath",FELIX-2270,12461691,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,djencks,djencks,09/Apr/10 16:57,30/Apr/10 08:55,13/Mar/19 22:56,30/Apr/10 08:41,karaf-1.4.0,,,,karaf 1.6.0,,Karaf,,,0,,,,,,"etc/startup.properties should not have the line for jaas.boot bundle, as it is in the startup classloader for karaf and only works there.",,,,,,,,,,,,,,,,,,,,,09/Apr/10 17:28;djencks;FELIX-2270.patch;https://issues.apache.org/jira/secure/attachment/12441316/FELIX-2270.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-30 08:41:46.651,,,no_permission,,,,,,,,,,,,56468,,,Fri Apr 30 08:55:22 UTC 2010,,,,,,0|i0vtkv:,183765,,,,,,,,"09/Apr/10 17:28;djencks;Also, I suspect you want to use the copy of options without the ProxyLoginModule options to initialize the delegate login module.  Otherwise there's no reason to copy the options:

Index: jaas/boot/src/main/java/org/apache/felix/karaf/jaas/boot/ProxyLoginModule.java
===================================================================
--- jaas/boot/src/main/java/org/apache/felix/karaf/jaas/boot/ProxyLoginModule.java      (revision 932189)
+++ jaas/boot/src/main/java/org/apache/felix/karaf/jaas/boot/ProxyLoginModule.java      (working copy)
@@ -73,7 +73,7 @@
         } catch (Exception e) {
             throw new IllegalStateException(""Can not load or create login module "" + module + "" for bundle "" + bundleId, e);
         }
-        target.initialize(subject, callbackHandler, sharedState, options);
+        target.initialize(subject, callbackHandler, sharedState, newOptions);
     }
 
     /* (non-Javadoc)","30/Apr/10 08:41;gnt;I've applied the patch, but the jaas-boot bundle is not in the etc/startup.properties file.
This may be a geronimo problem if you have overriden that file.","30/Apr/10 08:55;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/jaas/boot/src/main/java/org/apache/felix/karaf/jaas/boot/ProxyLoginModule.java
Committed r939590
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Karaf] Failover Clustering Mechanism - Database shutdown / loss results in all Karaf instances becoming Active on restart of that DB,FELIX-2130,12457297,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jgoodyear,jgoodyear,24/Feb/10 14:28,30/Apr/10 08:34,13/Mar/19 22:56,30/Apr/10 08:33,,,,,karaf 1.6.0,,Karaf,,,1,,,,,,"
Two part issue.
1) Oracle isAlive() method needs to poll its connection to DB to ensure connection alive.

2) Main#lock() remove second break statement - in the event of DB service loss this breaks the lock out of normal spin lock routine.

I'll be supplying a patch for this issue.",Oracle XE Database backend for Karaf JDBC Lock.,,,,,,,,,,,,,,,,,,,,30/Apr/10 00:32;jgoodyear;felix2130.patch;https://issues.apache.org/jira/secure/attachment/12443254/felix2130.patch,24/Feb/10 18:22;jgoodyear;felix2130.txt;https://issues.apache.org/jira/secure/attachment/12436882/felix2130.txt,,,,2.0,,,,,,,,,,,,,,,,,,,2010-03-10 20:59:08.97,,,no_permission,,,,,,,,,,,,56604,,,Fri Apr 30 08:34:26 UTC 2010,,,,,,0|i0vr8v:,183387,,,,,,,,"24/Feb/10 18:22;jgoodyear;File: felix2130.txt

Contains fixes for the two issues outlined in this Jira entry.","10/Mar/10 20:59;javier;hi,

remove the break statement is ok, but the log will grow a lot with a DB error in the loop of the Main#lock(). it would be great a sleep or incremental sleep 

javier","29/Apr/10 19:06;jgoodyear;Hi,

In the event that the DB is lost already exists a ""Thread.sleep(lockDelay);"" within the Main#lock method -- we can extend this out to be a larger value or as you suggested make this an incremental delay. Will post back an updated patch, thanks for that catch.

Jamie","30/Apr/10 00:32;jgoodyear;File: felix2130.patch

This updated file contains the changes from the original patch file, plus an incremental sleep that resets when a successful lock occurs.","30/Apr/10 08:33;gnt;I've applied the first patch as I don't think having a growing delay for the keep alive is a good idea.   I would be ok with a different value if there is a need, but using a growing delay would mean that after some time, the delay for the keep alive could be one day, which does not make sense i think.","30/Apr/10 08:34;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/OracleJDBCLock.java
Committed r939585
",,,,,,,,,,,,,,,,,,,,,,,,,,
Single quotes need to be escaped in xml attribute values ,FELIX-2304,12463078,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,27/Apr/10 08:01,27/Apr/10 08:09,13/Mar/19 22:56,27/Apr/10 08:09,bundlerepository-1.6.0,,,,bundlerepository-1.6.2,,Bundle Repository (OBR),,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56435,,,Tue Apr 27 08:09:32 UTC 2010,,,,,,0|i0vrxb:,183497,,,,,,,,"27/Apr/10 08:09;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/XmlWriter.java
Committed r938350
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
platform security: m_permissions memory leak,FELIX-2283,12462065,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,reto,reto,14/Apr/10 18:07,14/Apr/10 19:35,13/Mar/19 22:56,14/Apr/10 19:35,framework.security-1.0.0,,,,,,Framework Security,,,0,,,,,,"Constant growth of memory using platform security 1.0.0 results in heap overflow as memory usage incerases with permission checks.


Having a look at it I found two problems, for which I can submit a patch:
- a value from m_permissions is never retrieved, as the PemissionsInfo Array is never equals to an existing key
Solution: invoke get with an instance of Entry, change Entry.equals to check for deep equality of array-entries
- as the Persmissions instance kept as (non-weak) reference in the m_permissions values references the PermissionInfo[] key-entry, none of them can be garbage collected. As a result the size of m_permissions constantly grows",,,,,,,,,,,,,,,,,,,,,14/Apr/10 18:17;reto;ASF.LICENSE.NOT.GRANTED--Permissions.java.patch;https://issues.apache.org/jira/secure/attachment/12441755/ASF.LICENSE.NOT.GRANTED--Permissions.java.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-14 19:35:57.237,,,no_permission,,,,,,,,,,,,56455,,,Wed Apr 14 19:35:57 UTC 2010,,,,,,0|i0vspr:,183625,,,,,,,,"14/Apr/10 18:17;reto;Patch fixing the issue described, massive decreasing the derivative of the memory consumption.",14/Apr/10 19:35;karlpauls;I just committed a modified version of your patch (mostly using Arrays.equals instead of Arrays.deepEquals as the security provider targets 1.3). I pushed a new 1.1.0-SNAPSHOT. Please test it and close this issue if it works for you. Thanks a lot!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Authentication credentials for proxies are not set when retrieving resources,FELIX-2276,12461896,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,rickhall,rickhall,12/Apr/10 20:29,13/Apr/10 15:30,13/Mar/19 22:56,13/Apr/10 15:30,bundlerepository-1.4.3,,,,bundlerepository-1.6.2,,Bundle Repository (OBR),,,0,,,,,,"OBR sets authentication credentials when retrieving the repository.xml file, but not when retrieving resources. Thus, while it is possible to see what's available from behind a proxy, it's not possible to actually deploy anything.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-04-13 15:30:44.062,,,no_permission,,,,,,,,,,,,56462,,,Tue Apr 13 15:30:44 UTC 2010,,,,,,0|i0vsrj:,183633,,,,,,,,"13/Apr/10 15:30;gnt;I've fixed the issue. 
However, I wonder why we don't expect the user to use the java.net.Authenticator class which seems to fulfil this exact purpose.
Note that the java.net.Authenticator is a system wide singleton, so I don't really think OBR should configure it, but the felix / karaf launcher could set up one and we could remove that code from bundlerepository.

Thoughts anyone ?

Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/DataModelHelperImpl.java
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/FileUtil.java
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/ResolverImpl.java
Committed r933677
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NPE ""name can't be null"" when trying to install a bundle in Felix 2.0.3",FELIX-2087,12456518,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,udittmer,udittmer,17/Feb/10 09:35,11/Apr/10 23:09,13/Mar/19 22:56,11/Apr/10 23:09,framework-2.0.3,,,,framework-2.0.5,,Main,,,0,,,,,,"The following exception is thrown when trying to install a bundle in Felix 2.0.3; it worked fine in 2.0.2 and older versions. Bundles such as Security, Log and Prefs can be installed w/o problems, though.

     [java] org.osgi.framework.BundleException: Could not create bundle object.
     [java]     at org.apache.felix.framework.Felix.installBundle(Felix.java:2483)
     [java]     at org.apache.felix.framework.Felix.installBundle(Felix.java:2330)
     [java]     at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:122)
     [java]     at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:108)
     [java]     at host.Main.fileNew(Main.java:97)
     [java]     at host.Main.filePresentAtStartup(Main.java:126)
     [java]     at host.DirectoryWatcher.addListener(DirectoryWatcher.java:82)
     [java]     at host.Main.main(Main.java:33)

     [java] Caused by: java.lang.NullPointerException: name can't be null
     [java]     at java.security.BasicPermission.init(BasicPermission.java:82)
     [java]     at java.security.BasicPermission.<init>(BasicPermission.java:120)
     [java]     at org.osgi.framework.BundlePermission.<init>(BundlePermission.java:136)
     [java]     at org.osgi.framework.BundlePermission.<init>(BundlePermission.java:126)
     [java]     at org.apache.felix.framework.FelixResolverState.getMatchingFragments(FelixResolverState.java:810)
     [java]     at org.apache.felix.framework.FelixResolverState.addHost(FelixResolverState.java:702)
     [java]     at org.apache.felix.framework.FelixResolverState.addModule(FelixResolverState.java:70)
     [java]     at org.apache.felix.framework.BundleImpl.addModule(BundleImpl.java:1108)
     [java]     at org.apache.felix.framework.BundleImpl.<init>(BundleImpl.java:80)
     [java]     at org.apache.felix.framework.Felix.installBundle(Felix.java:2425)

This is the manifest being used:

Bundle-Name: Square
Bundle-Description: A bundle that implements some plugin functionality
Bundle-Vendor: Ulf
Bundle-Version: 1.0.0
Bundle-Activator: plugin2.Square
Import-Package: org.osgi.framework,api

Let me know what other information might be pertinent.","Java 5 on OS X 10.5, but I don't think that matters",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-17 09:41:30.91,,,no_permission,,,,,,,,,,,,56646,,,Sun Apr 11 23:09:45 UTC 2010,,,,,,0|i0vr7z:,183383,,,,,,,,"17/Feb/10 09:41;karlpauls;Your bundle is missing a Bundle-SymbolicName. Are you trying to deploy an R3 bundle? Otherwise, add the bundle manifest version 2 and the symbolic name to the bundle.","17/Feb/10 09:47;karlpauls;Yup, this is a bug. If you install an R3 bundle (without a symbolic name) and have security enabled you'll get this exception. The workaround for now is to only use R4 bundles (i.e., with a symbolic name) if using security. 

I'll fix this as soon as i can.",11/Apr/10 23:09;karlpauls;Fixed in 2.0.5.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Only the higher version of a given bundle is kept in a repository,FELIX-2269,12461686,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,09/Apr/10 16:27,09/Apr/10 16:33,13/Mar/19 22:56,09/Apr/10 16:33,bundlerepository-1.6.0,,,,bundlerepository-1.6.2,,Bundle Repository (OBR),,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56469,,,Fri Apr 09 16:33:18 UTC 2010,,,,,,0|i0vson:,183620,,,,,,,,"09/Apr/10 16:33;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	bundlerepository/src/main/java/org/apache/felix/bundlerepository/impl/RepositoryImpl.java
Committed r932494
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The start level should check that the bundle still exists before starting it to avoid an ugly exception,FELIX-1753,12438004,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,13/Oct/09 19:44,01/Apr/10 13:00,13/Mar/19 22:56,25/Mar/10 06:02,framework-2.0.0,,,,framework-2.0.5,,Framework,,,0,,,,,,"ERROR: Error locking file:/Users/gnodet/work/felix/git/karaf/assembly/target/apache-felix-karaf-1.1.0-SNAPSHOT/deploy/test.xml (java.lang.IllegalStateException: Bundle in unexpected state.)
java.lang.IllegalStateException: Bundle in unexpected state.
	at org.apache.felix.framework.Felix.acquireBundleLock(Felix.java:4513)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1048)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:613)


This is the exception I have when i start felix after having removed a bundle managed by fileinstall while felix was stopped.
I think it should be easy enough to add a check to avoid this exception.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-13 21:15:47.205,,,no_permission,,,,,,,,,,,,57278,,,Thu Mar 25 06:02:20 UTC 2010,,,,,,0|i0vs1j:,183516,,,,,,,,"13/Oct/09 21:15;rickhall;Well, we could change the log ERROR to a WARNING, but the whole point is we let start level change process be a little loose so we don't run into any deadlocks. So, we just get all bundles at the beginning while holding the lock and then cycle through them all starting/stopping as appropriate without the lock.","13/Oct/09 22:07;gnt;I certainly did not imply to add more locking.

But if you have lots of bundles to start at a given level, during the time you start the first bundles, you may have other bundles being uninstalled.  I just think we should not print anything if one bundle has been uninstalled between the time the bundle list has been computed and the time we try to actually start the bundle.

What about adding the following just before trying to acquire the lock in the setActiveStartLevel method:

if (impl.getState() == Bundle.UNINSTALLED)
{
   continue;
}

I don't think we should print / log an error, as this is imho a valid, yet rare, use case.","13/Oct/09 22:18;rickhall;I am not against that, but, to be clear, that doesn't eliminate the possibility, it just shortens the window in which it can happen.

We could also log just the message and not the exception, since that is more of an implementation detail anyway.","13/Oct/09 22:28;gnt;Maybe a better fix would be to modify the code to the following:

                // Lock the current bundle.
                try
                {
                    acquireBundleLock(impl,
                        Bundle.INSTALLED | Bundle.RESOLVED | Bundle.ACTIVE
                        | Bundle.STARTING | Bundle.STOPPING);
                }
                catch (IllegalStateException ex)
                {
                    if (impl.getState() != Bundle.UNINSTALLED)
                    {
                        fireFrameworkEvent(FrameworkEvent.ERROR, impl, ex);
                        m_logger.log(
                            Logger.LOG_ERROR,
                            ""Error locking "" + impl._getLocation(), ex);
                    }
                    continue;
                }

","25/Mar/10 06:02;rickhall;I committed your last suggest patch, please close if satisfied. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix OBR seems to just randomly choose one of the satisifed bundles if more than one bundle meets the requirement,FELIX-1792,12438746,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,davidsmall99,davidsmall99,21/Oct/09 21:05,15/Mar/10 23:09,13/Mar/19 22:56,25/Jan/10 15:09,bundlerepository-1.4.2,,,,bundlerepository-1.4.3,,Bundle Repository (OBR),,,0,,,,,,"I have one bundle bundle1, which imports a package called com.obr.bundle

Bundle1's manifest:

Manifest-Version: 1.0
Ant-Version: Apache Ant 1.7.0
Bundle-ManifestVersion: 2
Bundle-Name: Bundle Plug-in
Bundle-SymbolicName: com.obr.bundle1
Bundle-Version: 1.0.0
Export-Package: com.obr.bundle1
Import-Package: com.obr.bundle;version=""[1.2.0.999,3.2.2.bz]""


There are two bundles in my repositories, bundler2 and bundle 3. Both of them export package com.obr.bundle. Below are their manifest files.
Bundle2

Manifest-Version: 1.0
Ant-Version: Apache Ant 1.7.0
Bundle-ManifestVersion: 2
Bundle-Name: Bundle Plug-in
Bundle-SymbolicName: com.obr.bundle2
Bundle-Version: 1.0.0
Bundle-Vendor: xxx
Import-Package: a.b.c
Export-Package: com.obr.bundle;version=3.2.2.blah


Bundle3:
Manifest-Version: 1.0
Ant-Version: Apache Ant 1.7.0
Bundle-ManifestVersion: 2
Bundle-Name: Bundle Plug-in
Bundle-SymbolicName: com.obr.bundle3
Bundle-Version: 1.0.0
Import-Package: a.b.c
Export-Package: com.obr.bundle;version=3.1

As you can see, both bundle2 and bundle3 meet the requirements of bundle1. I hope the highest package version, which is bundle2, is chosen by felix obr. However, sometimes bundle 3 was chosen instead of bundle2. The behaviour is random.

Am I right to say that the Felix obr runtime just picks the first bundle that meets the requirements and then stop searching for any more eligible bundles?

Thanks
",n/a,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-21 21:28:09.44,,,no_permission,,,,,,,,,,,,57245,,,Mon Mar 15 23:09:16 UTC 2010,,,,,,0|i0vton:,183782,,,,,,,,"21/Oct/09 21:28;rickhall;OBR tries to select the highest version among matching candidates, however there are cases where this might not be the case. For example, if you explicitly added the lower version resource to the set of resources to be resolved, then OBR would prefer the added resource over including another resource exporting a higher version of the package. Another example is if a lower version of the resource was already selected to resolve a different dependency of another resource being resolved, in that case OBR would favor the already selected resource rather than adding another resource exporting the same package again.

OBR tries to limit the number of bundles it is going to download. It is not random, although it may not be completely obvious.
","21/Oct/09 21:57;davemssavage;Hmmm one possible source of entropy could be the use of HashSets in the ResolverImpl? I recently had make a similar fix to the sigil resolver, to use LinkedLists vs HashSets. A cursory look at the code suggests the ResolverImpl performs the resolution by iterating over a number of different HashSets which are inherently unordered...so could lead to different graph traversals depending on the already selected resources? I would need to do further analysis to see if this is actually the case though...but thought it might be of use...","22/Oct/09 13:42;davidsmall99;Thanks Richard and David,

The above test scenario returns different bundles when I run the test in the exact same environment. The majority of time returns the highest version, which is bundle2. This behavior does not fit in the cases Richard mentioned. It suggests there might be a bug somewhere, as hinted by David.

Thanks again.","23/Oct/09 08:15;davemssavage;Hi David,

Would it be possible to submit a small unit test that demonstrates this problem - then we can take a look at it in more depth?

Regards,

Dave","02/Dec/09 23:23;hehe;Further to Dave's comment, will the repository.xml help in diagnosing the problem? Not too sure what kind of unit tests required for this kind of information?
Thanks
Emily","09/Dec/09 13:41;hehe;Hi, 
Can anyone look at the issue again? This defect blocks me. I am happy to supply any more information if needed.
Thanks
Emily","09/Dec/09 17:04;rickhall;It is really difficult for me to say if the above scenario description is correct or not, since I am not able to reproduce by creating bundles for the above three manifests.

I mentioned two situations above where it might choose a lower version instead of a higher version; however, I do see a potential issue when selecting the ""best candidate"". In that case, we are selecting based on the highest version of the candidate, not the highest version of the capability. Thus, if bundle2 is version 1.0.0 and bundle3 is version 2.0.0, then we will select bundle3.

I don't recall if this was the original intent of selecting the best candidate, but my intuition tells me this is a logical error. It makes more sense to find the matching capability from each resource, then select the capability with the highest version. I will try to create a patch for this, but it is not clear to me if this will address your scenario or not.","09/Dec/09 21:26;rickhall;Ok, I committed a patch to address the issue I saw above and deployed a snapshot release. Please let me know if this makes any difference in the various use cases. Thanks.","11/Dec/09 00:00;hehe;Richard,
Thanks for looking into this. I am looking forward to trying the fix. Where can I access the snapshot release?
Thanks
Emily","11/Dec/09 14:50;rickhall;Here:

https://repository.apache.org/content/groups/snapshots-group/org/apache/felix/org.apache.felix.bundlerepository/1.5.0-SNAPSHOT/","22/Dec/09 15:50;hehe;Hi Richard,

Thanks for the patch. I tried it but I got deadlock problem for the following situation:

Bundle71 (in repo) : Depends on Bundle72
Bundle72 v1 (in repo) : depends on bundle73
Bundle72_2 v2 (in eba)  : Depends on Bundle.invalid // This should not be picked up
Bundle73 (in eba) : No Dependencies

I expect bundle71, bundle71 v1 and bundle73 are installed in framework.



3XMTHREADINFO      ""Thread-129"" TID:0x000000000238A400, j9thread_t:0x000004000ABA1920, state:CW, prio=5
3XMTHREADINFO1            (native thread ID:0x6BF9, native priority:0x5, native policy:UNKNOWN)
3XMTHREADINFO2            (native stack address range from:0x000004000B580000, to:0x000004000B540000, size:0x40000)
4XESTACKTRACE          at java/lang/Character.toLowerCase(Character.java:4187(Compiled Code))
4XESTACKTRACE          at java/lang/String.compareValue(String.java:450(Compiled Code))
4XESTACKTRACE          at java/lang/String.compareToIgnoreCase(String.java:466(Compiled Code))
4XESTACKTRACE          at org/apache/felix/bundlerepository/ResourceImpl$1.compare(ResourceImpl.java:55(Compiled Code))
4XESTACKTRACE          at java/util/TreeMap.cmp(TreeMap.java:4472(Compiled Code))
4XESTACKTRACE          at java/util/TreeMap.get(TreeMap.java:4344(Compiled Code))
4XESTACKTRACE          at org/apache/felix/bundlerepository/ResourceImpl.getSymbolicName(ResourceImpl.java:107(Compiled Code))
4XESTACKTRACE          at org/apache/felix/bundlerepository/ResourceImpl.hashCode(ResourceImpl.java:84(Compiled Code))
4XESTACKTRACE          at java/util/HashMap.getEntry(HashMap.java:506(Compiled Code))
4XESTACKTRACE          at java/util/HashMap.containsKey(HashMap.java:432(Compiled Code))
4XESTACKTRACE          at java/util/HashSet.contains(HashSet.java:138(Compiled Code))
4XESTACKTRACE          at org/apache/felix/bundlerepository/ResolverImpl.resolve(ResolverImpl.java:158(Compiled Code))
4XESTACKTRACE          at org/apache/felix/bundlerepository/ResolverImpl.resolve(ResolverImpl.java:199(Compiled Code))
4XESTACKTRACE          at org/apache/felix/bundlerepository/ResolverImpl.resolve(ResolverImpl.java:199)
4XESTACKTRACE          at org/apache/felix/bundlerepository/ResolverImpl.resolve(ResolverImpl.java:133)

Please let me know if you need more information.
Thanks
Emily","22/Dec/09 16:07;rickhall;What does ""in eba"" mean?

Could you give me a simplified example of the bundle manifests and a description of the steps needed to reproduce the issue? If so, I will look into it.","23/Dec/09 11:10;hehe;Hi Richard,

What I mean about ""in eba"" is that I put the bundles in my local repository. Sorry about the confusion. You can put the bundles in any repositories, which should not make any difference.

Below are the manifests for the bundles I mentioned in my previous email. 

bundle71.jar

Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: Bundle Plug-in
Bundle-SymbolicName: a.b.c.bundle71
Bundle-Version: 1.0.0
Bundle-Vendor: ABC
Import-Package: a.b.c.bundle72;version=3.0
Export-Package: a.b.c.bundle71

bundle72.jar
Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: Bundle Plug-in
Bundle-SymbolicName: a.b.c.bundle72
Bundle-Version: 1.0.0
Bundle-Vendor: ABC
Import-Package: a.b.c.bundle73
Export-Package: a.b.c.bundle72;version=3.2.4.1ded6

bundle72_2.jar
Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: Bundle Plug-in
Bundle-SymbolicName: a.b.c.bundle72
Bundle-Version: 2.0.0
Bundle-Vendor: ABC
Import-Package: a.b.c.bundle.invalid
Export-Package: a.b.c.bundle72;version=9

bundle73
Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: Bundle Plug-in
Bundle-SymbolicName: a.b.c.bundle73
Bundle-Version: 1.0.0
Bundle-Vendor: ABC
Export-Package: a.b.c.bundle73
Import-Package: org.osgi.framework

Feel free to let me know if you need more explanation.
Thanks
Emily","13/Jan/10 08:32;hehe;Hi Richard,

Can you please investigate the hanging?

Thanks
Emily",13/Jan/10 13:59;rickhall;I will try to look into it...got caught up in some higher priority issues...,"13/Jan/10 20:36;rickhall;It was not a deadlock, but an infinite loop. In my last patch, I was attempting to remove a Resource from the list of candidates when it failed to resolve, but I should have been removing a Capability. As a result, the list never got smaller, which led to an infinite loop. I fixed it and your example now works for me. I deployed a new snapshot, let me know if you run into any other issues. Thanks.","24/Jan/10 22:18;hehe;Hi Richard,
Sorry for the delay. I was away last week. The patch worked. Thanks for your help. Which release will contain this fix?

Thanks again.
Emily","25/Jan/10 15:09;rickhall;The fix will be in the next release of the OBR bundle, which will hopefully be soon.","25/Jan/10 23:44;hehe;Thanks Richard,

Can you please notify me by adding a quite comment when it is available, if possible? It will be great if it is available in the next couple of weeks:o.

Thanks again
Emily",05/Feb/10 17:05;rickhall;This should be released next week with Framework 2.0.3.,"15/Mar/10 23:09;hehe;Hi Richard,

I moved up to the latest release and found a bug, which might be related to the fix for this defect. I raised a separate bug, which is https://issues.apache.org/jira/browse/FELIX-2205.

Thanks
Emily",,,,,,,,,,,
Karaf uses old version of Aries artifacts,FELIX-2196,12458879,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gawor@mcs.anl.gov,gawor@mcs.anl.gov,12/Mar/10 00:57,12/Mar/10 08:11,13/Mar/19 22:56,12/Mar/10 08:06,,,,,karaf 1.6.0,,Karaf,,,0,,,,,,"In trunk, Karaf uses 1.0.0-SNAPSHOT version for Aries artifacts but the latest version is 0.1-SNAPSHOT.
",,,,,,,,,,,,,,,,,,,,,12/Mar/10 00:58;gawor@mcs.anl.gov;FELIX-2196.patch;https://issues.apache.org/jira/secure/attachment/12438561/FELIX-2196.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-12 08:06:55.298,,,no_permission,,,,,,,,,,,,56542,,,Fri Mar 12 08:11:12 UTC 2010,,,,,,0|i0vtlj:,183768,,,,,,,,"12/Mar/10 08:06;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/pom.xml
Committed r922170
","12/Mar/10 08:11;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/pom.xml
Committed r922173

Fix bad version number :-(",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
creating a second sigil project breaks with internal error,FELIX-2166,12458048,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,gustavomzw,gustavomzw,03/Mar/10 22:47,04/Mar/10 13:44,13/Mar/19 22:56,04/Mar/10 13:44,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"Created NewtonInterface project and NewtonService project in sequence latest daily build

eclipse.buildId=unknown
java.version=1.6.0_18
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86 -product org.eclipse.epp.package.java.product

Error
Wed Mar 03 19:24:21 GMT-03:00 2010
An internal error occurred during: ""Resolving Sigil project"".

java.lang.IllegalArgumentException: Attempted to beginRule: R/, does not match outer scope rule: P/NewtonInterface
at org.eclipse.core.runtime.Assert.isLegal(Assert.java:63)
at org.eclipse.core.internal.jobs.ThreadJob.illegalPush(ThreadJob.java:120)
at org.eclipse.core.internal.jobs.ThreadJob.push(ThreadJob.java:230)
at org.eclipse.core.internal.jobs.ImplicitJobs.begin(ImplicitJobs.java:80)
at org.eclipse.core.internal.jobs.JobManager.beginRule(JobManager.java:232)
at org.eclipse.core.internal.resources.WorkManager.checkIn(WorkManager.java:117)
at org.eclipse.core.internal.resources.Workspace.prepareOperation(Workspace.java:1747)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1795)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1782)
at org.eclipse.core.internal.resources.Project.internalBuild(Project.java:502)
at org.eclipse.core.internal.resources.Project.build(Project.java:94)
at org.apache.felix.sigil.eclipse.SigilCore.rebuild(SigilCore.java:587)
at org.apache.felix.sigil.eclipse.SigilCore.rebuildBundleDependencies(SigilCore.java:577)
at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.rebuildDependencies(SigilProject.java:179)
at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.run(ResolveProjectsJob.java:65)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-03 23:58:16.045,,,no_permission,,,,,,,,,,,,56571,,,Thu Mar 04 13:44:03 UTC 2010,,,,,,0|i0vrmn:,183449,,,,,,,,03/Mar/10 23:58;davemssavage;Should be fixed in the next daily build - sorry spotted this one myself after further testing. I've been making improvements to the UI side of things when projects are added/removed in various non direct paths. Please let me know if you still see the problem in the next build though. I'll leave this open for the time being.,04/Mar/10 10:43;gustavomzw;confirmed working,04/Mar/10 13:44;davemssavage;resolving issue as confirmed fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Karaf] Possible hang with slave instances of Karaf when using Oracle JDBC lock.,FELIX-2129,12457296,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,jgoodyear,jgoodyear,24/Feb/10 14:22,03/Mar/10 10:40,13/Mar/19 22:56,03/Mar/10 10:40,,,,,karaf 1.6.0,,Karaf,,,0,,,,,,"Possible hang with slave instances of Karaf when using Oracle JDBC lock.

If we start up the master and slave as normal, then try to stop the slave, it does not release its attempted JDBC lock, and therefore hangs during shutdown. If we then stop the master, the slave throws an error and finally exits.


The problem is in the FOR UPDATE statement in setUpdateCursor, adding NOWAIT resolves the issue.

I'll be supplying a patch for this.",Oracle XE Database backend for Karaf JDBC locking.,,,,,,,,,,,,,,,,,,,,24/Feb/10 17:58;jgoodyear;felix2129.txt;https://issues.apache.org/jira/secure/attachment/12436877/felix2129.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-03 10:40:30.208,,,no_permission,,,,,,,,,,,,56605,,,Wed Mar 03 10:40:30 UTC 2010,,,,,,0|i0vrj3:,183433,,,,,,,,"24/Feb/10 17:58;jgoodyear;File: felix2129.txt

Contains a one line change to add the NOWAIT directive to the FOR UPDATE statement.

This will allow slave instances to gracefully skip blocking on a locked table.",03/Mar/10 10:40;ccustine;Applied patch from Jamie Goodyear.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JRE packages & org.osgi.framework.BundleException: Unresolved constraint,FELIX-2116,12456979,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,cmoulliard,cmoulliard,22/Feb/10 08:34,22/Feb/10 11:30,13/Mar/19 22:56,22/Feb/10 11:30,karaf-1.2.0,,,,,,Karaf,,,0,,,,,,"Here is more details about the unresolved constraint

Here is what the bundle import :

karaf@root> headers 117

MAESTRO :: SOA Fw :: WebServices (117)
--------------------------------------
Bnd-LastModified = 1266589733099
Build-Jdk = 1.6.0_16
Built-By = T0106319
Bundle-ManifestVersion = 2

Bundle-Name = MAESTRO :: SOA Fw :: WebServices
Bundle-SymbolicName = maestro_SOAFw_WebServices
Bundle-Version = 0.4.0.migr-42-SNAPSHOT
Created-By = Apache Maven Bundle Plugin
DynamicImport-Package = javax.*,org.w3c.*,org.xml.*

Export-Package = com.thalesgroup.maestro.wsdl.system.xsd;uses:=""javax.xml.bind.annotation,javax.xml.datatype"",com.thalesgroup.maestro.wsdl.event;uses:=""javax.jws.soap,javax.jws,javax.xml.bind.annotation,com.thalesgroup.maestro.wsdl.event.xsd,javax.xml.ws,javax.xml.namespace"",com.thalesgroup.maestro.wsdl.sop.xsd;uses:=""javax.xml.bind.annotation,javax.xml.datatype"",wsdl,com.thalesgroup.maestro.wsdl.status.xsd;uses:=""javax.xml.bind.annotation,javax.xml.datatype"",com.thalesgroup.maestro.wsdl.alarm.x

sd;uses:=""javax.xml.bind.annotation,javax.xml.datatype"",com.thalesgroup.maestro.wsdl.alarm;uses:=""javax.jws.soap,javax.jws,com.thalesgroup.maestro.wsdl.alarm.xsd,javax.xml.bind.annotation,javax.xml.ws,javax.xml.namespace"",com.thalesgroup.maestro.wsdl.event.xsd;uses:=""javax.xml.bind.annotation,javax.xml.datatype"",com.thalesgroup.maestro.wsdl.system;uses:=""javax.jws.soap,com.thalesgroup.maestro.wsdl.system.xsd,javax.jws,javax.xml.bind.annotation,javax.xml.ws,javax.xml.namespace"",com.thalesgroup.ma

estro.wsdl.command.xsd;uses:=""javax.xml.bind.annotation,javax.xml.datatype"",com.thalesgroup.maestro.wsdl.status;uses:=""javax.jws.soap,javax.jws,com.thalesgroup.maestro.wsdl.status.xsd,javax.xml.bind.annotation,javax.xml.ws,javax.xml.namespace"",com.thalesgroup.maestro.wsdl.command;uses:=""javax.jws.soap,javax.jws,javax.xml.bind.annotation,javax.xml.ws,javax.xml.namespace,com.thalesgroup.maestro.wsdl.command.xsd"",com.thalesgroup.maestro.wsdl.sop;uses:=""javax.jws.soap,com.thalesgroup.maestro.wsdl.so

p.xsd,javax.jws,javax.xml.bind.annotation,javax.xml.ws,javax.xml.namespace""
Import-Package = com.thalesgroup.maestro.wsdl.alarm,com.thalesgroup.maestro.wsdl.alarm.xsd,com.thalesgroup.maestro.wsdl.command,com.thalesgroup.maestro.wsdl.command.xsd,com.thalesgroup.maestro.wsdl.event,com.thalesgroup.maestro.wsdl.event.xsd,com.thalesgroup.maestro.wsdl.sop,com.thalesgroup.maestro.wsdl.sop.xsd,com.thalesgroup.maestro.wsdl.status,com.thalesgroup.maestro.wsdl.status.xsd,com.thalesgroup.maestro.wsdl.system,com.thalesgroup.maestro.wsdl.system.xsd,javax.jws;version=""2.0"",javax.jws.s

oap;version=""2.0"",javax.xml.bind.annotation;version=""2.1"",javax.xml.datatype;version=""1.4"",javax.xml.namespace;version=""1.4"",javax.xml.ws;version=""2.1"",wsdl

Manifest-Version = 1.0
Tool = Bnd-0.0.238
karaf@root>

So we see that the bundle import the following package : javax.xml.datatype;version=""1.4"" and that 

DynamicImport-Package = javax.*,org.w3c.*,org.xml.* has been defined

And the error generated :

DEBUG: DYNAMIC WIRE: 114.0 -> org.apache.camel.spi -> 44.0

DEBUG: META-INF/services/javax.xml.parsers.DocumentBuilderFactory
DEBUG: META-INF/services/javax.xml.parsers.DocumentBuilderFactory
ERROR: Error starting file:/D:/Dev/apache-servicemix-4.2.0-fuse-01-00/deploy/maestro-webservices-0.4.0-migr-4.2-SNAPSHOT.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle maestro_SOAFw_WebServices [117]: package; (&(package=javax.xml.datatype)(version>=1.4.0)))

org.osgi.framework.BundleException: Unresolved constraint in bundle maestro_SOAFw_WebServices [117]: package; (&(package=javax.xml.datatype)(version>=1.4.0))
DEBUG: DYNAMIC WIRE: 114.0 -> com.sun.org.apache.xerces.internal.jaxp -> 0

DEBUG: DYNAMIC WIRE: 114.0 -> org.xml.sax -> 0  at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3263)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1597)
        at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1077)

        at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
        at java.lang.Thread.run(Thread.java:619)

If we check what is exported by the bundle 0 (=jre) of Felix, we see that datatype is exported :


System Bundle (0): javax.xml.datatype; version=0.0.0

Can someone tell me what is wrong ?",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-22 08:42:14.34,,,no_permission,,,,,,,,,,,,56618,,,Mon Feb 22 11:30:45 UTC 2010,,,,,,0|i0vrin:,183431,,,,,,,,"22/Feb/10 08:42;rickhall;I don't believe this is an issue with the Felix framework, it sounds like a configuration issue with Karaf to me. I will assign this to Karaf for now.","22/Feb/10 08:46;cmoulliard;Does this command ""DynamicImport-Package = javax.*,org.w3c.*,org.xml.*"" will resolve ""bundle constraint"" or not ?","22/Feb/10 09:17;rickhall;Not sure what you mean. Dynamic imports are not considered by the resolver at all, they are a run-time issue.

Further, since your bundle imports javax.xml.datatype, it is not eligible for dynamic importation.

The issue is, the bundle in question imports javax.xml.datatype;version=1.4.0, but there is no provider of this package with that version.","22/Feb/10 09:36;cmoulliard;@Richard,

You are right. The DynamicImport statement is not used at all during the dependency resolution by Felix and the issue is related to the fact that Karaf exports all the JRE packages with
version = '0.0.0'. 

In the example that I report here, the client uses the '*' in the Import-Package instruction to add automatically the packages. The plugin/bnd tool discovers maven transversal dependencies
and add them as I mention with a version number. To solve this problem, I propose to the user to check which packages must be imported and add them manually. If he prefers to continue 
to work with '*' instruction, then he must parameter it like that : *;resolution:=optional","22/Feb/10 11:25;rickhall;I don't recall if you are creating this bundle. If so, you could use ""javax.*;version=0.0.0,*"" in your BND import-package instruction to remove the version.","22/Feb/10 11:30;cmoulliard;As we have a workaround and that it is not related to an issue with the framework of felix, I propose to close it.",,,,,,,,,,,,,,,,,,,,,,,,,,
Bring back the history command,FELIX-2074,12456156,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,12/Feb/10 16:43,15/Feb/10 14:11,13/Mar/19 22:56,15/Feb/10 14:11,,,,,karaf-1.4.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56657,,,Mon Feb 15 14:11:11 UTC 2010,,,,,,0|i0vth3:,183748,,,,,,,,"15/Feb/10 14:11;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/commands/src/main/java/org/apache/felix/karaf/shell/commands/HistoryAction.java
	M	karaf/shell/commands/src/main/resources/OSGI-INF/blueprint/shell-commands.xml
	M	karaf/shell/console/src/main/java/org/apache/felix/karaf/shell/console/jline/Console.java
Committed r910220
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Karaf]  OracleJDBCLock filling UNDO segment.,FELIX-2072,12456144,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jgoodyear,jgoodyear,12/Feb/10 15:12,12/Feb/10 16:33,13/Mar/19 22:56,12/Feb/10 16:33,,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"When using the Oracle JDBC Lock mechanism the UNDO table space fills at a rapid pace. The following log entry will be observed:

ERROR | Thread-1 | OracleJDBCLock | .felix.karaf.main.OracleJDBCLock 211 | Error occured while testing lock: java.sql.SQLException: ORA-30036: unable to extend segment by 8 in undo tablespace 'UNDO'
ORA-30036: unable to extend segment by 8 in undo tablespace 'UNDO'


Reviewing the Oracle JDBC Lock class it appears the UNDO space is being consumed by un-necessary update commands.

I'll be attaching a patch for this shortly.",,,,,,,,,,,,,,,,,,,,,12/Feb/10 15:42;jgoodyear;felix-2072.diff;https://issues.apache.org/jira/secure/attachment/12435702/felix-2072.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-12 16:33:29.997,,,no_permission,,,,,,,,,,,,56659,,,Fri Feb 12 16:33:29 UTC 2010,,,,,,0|i0vrkv:,183441,,,,,,,,"12/Feb/10 15:42;jgoodyear;File: felix-2072.diff

See attached file felix-2072.diff.

This patch modifies OracleJDBCLock to use less UNDO tablespace.

Tested with Oracle XE on Linux.","12/Feb/10 16:33;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/OracleJDBCLock.java
Committed r909494
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring status does not show properly after osgi:list command,FELIX-1995,12445910,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,19/Jan/10 10:07,12/Feb/10 08:57,13/Mar/19 22:56,19/Jan/10 10:09,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57057,,,Fri Feb 12 08:57:52 UTC 2010,,,,,,0|i0vtfz:,183743,,,,,,,,"19/Jan/10 10:09;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/osgi/src/main/java/org/apache/felix/karaf/shell/osgi/SpringStateListenerFactory.java
Committed r900715

The problem is really that the dynamic imports are not dynamic enough so that the spring listener is only created at startup time if possible (not sure exactly why though).","12/Feb/10 08:57;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/osgi/src/main/java/org/apache/felix/karaf/shell/osgi/SpringStateListenerFactory.java
Committed r909302
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BootstrapLogManager doesn't load etc/org.ops4j.pax.logging.cfg file,FELIX-2065,12455911,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,jbonofre,jbonofre,10/Feb/10 14:57,10/Feb/10 17:12,13/Mar/19 22:56,10/Feb/10 17:12,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"The BootstrapLogManager doesn't load the org.ops4j.pax.logging.cfg file from the correct location.

By consequence, the log4j.appender.out.file property is set to ${karaf.base}/data/log/karaf.log. If the user setup a different log file name in the appender - for instance as follows:

# File appender
log4j.appender.out=org.apache.log4j.FileAppender
log4j.appender.out.layout=org.apache.log4j.PatternLayout
log4j.appender.out.layout.ConversionPattern=%d{ABSOLUTE} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %m%n
log4j.appender.out.file=${karaf.base}/data/log/my.log
log4j.appender.out.append=true

he will set:
my.log
karaf.log

in the ${karaf.base}/data/log directory.","Linux Debian
JVM Sun 1.5.0",,,,,,,,,,,,,,,,,,,,10/Feb/10 15:00;jbonofre;FELIX-2065.patch;https://issues.apache.org/jira/secure/attachment/12435454/FELIX-2065.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-10 17:12:25.527,,,no_permission,,,,,,,,,,,,56665,,,Wed Feb 10 17:12:25 UTC 2010,,,,,,0|i0vron:,183458,,,,,,,,10/Feb/10 17:12;ccustine;Patch applied on behalf of Jean-Baptiste Onofré.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[karaf] Ssh client out put is poorly formatted.,FELIX-1939,12443134,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jgoodyear,jgoodyear,11/Dec/09 19:44,10/Feb/10 16:16,13/Mar/19 22:56,10/Feb/10 16:16,,,,,karaf-1.4.0,,,,,0,,,,,,"Output from Karaf is poorly formatted when connected to console via ssh connection.

This may be related to recent changes in Mina SSHD:
http://svn.apache.org/viewvc/mina/sshd/trunk/sshd-core/src/main/java/org/apache/sshd/server/channel/ChannelSession.java?r1=835763&r2=882134&diff_format=h

Restoring LfToCrLfFilterOutputStream to mina sshd appears to resolve the issue for Karaf, however we may want to resolve this issue on our side. Thoughts? Comments?",Linux,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-10 16:16:43.646,,,no_permission,,,,,,,,,,,,57108,,,Wed Feb 10 16:16:43 UTC 2010,,,,,,0|i0vr67:,183375,,,,,,,,"14/Dec/09 19:13;jgoodyear;I've uploaded to Apache Mina SSHD a patch to will restore the Lf to CrLf filter.
https://issues.apache.org/jira/browse/SSHD-67","10/Feb/10 16:16;gnt;URL: http://svn.apache.org/viewvc?rev=908534&view=rev
URL: http://svn.apache.org/viewvc?rev=908564&view=rev

We need to remove this TODO when SSHD is upgraded.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf shell doens't work properly under windows,FELIX-1843,12439846,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,sweber,sweber,04/Nov/09 12:48,10/Feb/10 15:04,13/Mar/19 22:56,10/Feb/10 15:04,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"When ever you  try to complete a command  the completion doesn't replace the prevoiusly typed characters but will be appended to them. Also backspace isn't working.
Same behaviour  if you use the ""up""-key to get the last used command.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-04 12:59:09.992,,,no_permission,,,,,,,,,,,,57198,,,Wed Feb 10 15:04:13 UTC 2010,,,,,,0|i0vr47:,183366,,,,,,,,"04/Nov/09 12:59;gnt;Does that happen with karaf-1.0.0 or with a recent snapshot ?
Could you try with a recent snapshot ? I think we've fixed a lot of issues.","04/Nov/09 22:55;sweber;i used the latest build (#138) from hudson.
I suppose that the latest build has karaf 1.2.0 included.
This behaviour only appears on windows. Tested the same build on ubuntu 9.04. No problem.","09/Nov/09 11:57;sweber;Tested with Build #151 still the same issue.

But maybe this is helpful:
At the first start of smx (fresh unzipped) the console does not initialize correctly. The ansi colors are missing. But at this time the console works properly. If i shutdown the smx and restart it ansi works but the console doesn't.",19/Dec/09 10:44;db82407;removed gogo from list of components; this is a karaf issue.,"07/Feb/10 19:04;lhein;This issue is still a ""no go"" for windows systems.

Lars
","08/Feb/10 12:19;gnt;I've raised two issues for the things we've found on WIndows, but I'll close that one, as we can't seem to reproduce issues with backspaces or the up key with the latest snapshots ...",08/Feb/10 17:11;sweber;Still not working. And yes its reproduceable. Tested it on 3xWindows XP Prof with different JAVA 1.6 SDKs with latest build 195,"08/Feb/10 19:54;gnt;For colors, full ansi support must be enabled using an optional JNA library on windows (see http://jansi.fusesource.org/).
Three of us have tested today on windows and haven't seen any problems beyond the one I raised ...
So could you precisely describe your environment, what you do, what you see and what you expect to see instead ?
And just to be sure, do you use the latest karaf snapshots (from https://repository.apache.org/content/groups/snapshots-group/org/apache/felix/karaf/apache-felix-karaf/1.3.0-SNAPSHOT/ for example) ?
","08/Feb/10 21:12;sweber;What i've done:
 * downloaded SMX 4.1.0 snapshot build #195
 * downloaded karaf 1.3.0   	 Mon Feb 08 00:44:46 GMT+00:00 2010  	 4360928  	   
 * put downloaded karaf ""system"" folder contents in smx system folder
 * deleted the ""data"" dir to be sure everything is clear
 * started smx and waited till all bundles are loaded (remark: no ansi support on first start)
 * shut down smx
 * started it again (remark: ansi support from start now)
After this the original described behaviour applys...","09/Feb/10 11:43;lhein;I had a deeper look at this problem with Guillaume and we found out that the problem is the Ansi support.

Inside a bare Karaf 1.3.0-SNAPSHOT  (most recent) the behaviour is fine even after restarting it.

Then I did what is explained here:

http://felix.apache.org/site/71-enabling-colorized-console-output-on-windows.html

Afterwards you will find the same wrong behaviour also in Karaf. Guillaume was also able to reproduce it.

Regards
Lars
","09/Feb/10 15:54;gnt;The console problems come from two things:
  * jline when in windows loads a native library using a system call.  when running in osgi, the osgi way of loading native library should be used, else we run into an UnsatifiedLinkError Native LIbrary already loaded in another classloader
  * jansi library is missing support for a few ansi calls that are used by jline, causing backspace and history to not work well
We need to update to newer versions of those libraries asap.","10/Feb/10 15:04;gnt;Chris and I solved the issues which were in jline and jansi.  karaf now uses new releases of those libraries and the console seems to work nicely.

FWIW, servicemix has a colorized console after restart because the jruby-1.1.2 bundle has a built-in version of the jna library that it exports (not sure why this is the case).",,,,,,,,,,,,,,,,,,,,
[karaf] hardcoding org.ops4j.pax.exam.rbc.rmi.port property in raw pax runner --vmOptions is problematic when 1099 is not the next free port,FELIX-2063,12455853,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,eglynn,eglynn,10/Feb/10 01:00,10/Feb/10 06:41,13/Mar/19 22:56,10/Feb/10 06:41,karaf-1.4.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"Pax-runner calculates the next free port to use on the ""client side"" of the RMI connection, whereas the ""server side"" RMI registry takes its port from the org.ops4j.pax.exam.rbc.rmi.port property regardless of whether this is free or not.

Therefore the org.ops4j.pax.exam.rbc.rmi.port should not be hard-coded via the rawPaxRunnerOption(""--vmOptions"", ...) mechanism. 

Now the whole point of setting the raw --vmOptions was to avoid the karaf-specific system.packages setting being overridden by pax-runner. However a similar effect can be achieved without having to specify a org.ops4j.pax.exam.rbc.rmi.port property if the org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption is used instead of the org.ops4j.pax.exam.container.def.PaxRunnerOptions.rawPaxRunnerOption.

This approach appears to work even when another process is hogging port 1099.",,,,,,,,,,,,,,,,,,,,,10/Feb/10 01:02;eglynn;felix_2063.patch;https://issues.apache.org/jira/secure/attachment/12435387/felix_2063.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-10 06:41:42.844,,,no_permission,,,,,,,,,,,,56667,,,Wed Feb 10 06:41:42 UTC 2010,,,,,,0|i0vro7:,183456,,,,,,,,"10/Feb/10 01:02;eglynn;Patch attached, please review and commit if OK.",10/Feb/10 06:41;ccustine;Patch applied on behalf of Eoghan Glynn.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Completion does not reprint previous characters in some circumstances,FELIX-2053,12455625,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,08/Feb/10 12:12,08/Feb/10 15:37,13/Mar/19 22:56,08/Feb/10 15:37,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,FELIX-1843,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56676,,,Mon Feb 08 15:37:46 UTC 2010,,,,,,0|i0vr73:,183379,,,,,,,,"08/Feb/10 12:13;gnt;THis happen when typing ""in<tab>""
The ""in"" characters disappear after having displayed the possible alternatives.","08/Feb/10 12:48;gnt;The problem comes from the fact that jline does not support ""weird"" completions.
For example, the command completer is able to return the following values when called with ""in"":
  * osgi:install
  * shell:info
The problem is that jline rewrite the current line with the longest match, and in this case, the first letters are not the same.
This leads to jline blanking the line, while still displaying the set of available completions.","08/Feb/10 15:37;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/console/src/main/java/org/apache/felix/karaf/shell/console/completer/SessionScopeCompleter.java
Committed r907694
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logo is garbled when connecting using putty,FELIX-2054,12455626,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,08/Feb/10 12:16,08/Feb/10 12:18,13/Mar/19 22:56,08/Feb/10 12:18,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,FELIX-1843,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56675,,,Mon Feb 08 12:18:09 UTC 2010,,,,,,0|i0vrp3:,183460,,,,,,,,"08/Feb/10 12:18;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/console/src/main/filtered-resources/org/apache/felix/karaf/shell/console/branding.properties
Committed r907629
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
file host.key is not correctly written for a new instance(s),FELIX-2032,12455152,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,cmoulliard,cmoulliard,03/Feb/10 10:48,05/Feb/10 14:22,13/Mar/19 22:56,05/Feb/10 14:22,,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"When a second instance of Karaf is created, then the file host.key is not created or copied in the folder etc of this instance. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-04 08:04:44.289,,,no_permission,,,,,,,,,,,,56697,,,Fri Feb 05 13:35:47 UTC 2010,,,,,,0|i0vti7:,183753,,,,,,,,"03/Feb/10 12:35;cmoulliard;Here is the message that we see in the log :

13:30:41,109 | INFO | NioProcessor-1 | FileKeyPairProvider | AbstractGeneratorHostKeyProvider 149 | Generating host key...
13:30:41,125 | INFO | NioProcessor-1 | FileKeyPairProvider | AbstractGeneratorHostKeyProvider 137 | Unable to write key I:Dvlptapache-sourceapache-felix-karaf-1.3.0-SNAPSHOTinstanceskaraf1/etc/host.key: java.io.FileNotFoundException: I:Dvlptapache-sourceapache-felix-karaf-1.3.0-SNAPSHOTinstanceskaraf1\etc\host.key (The system cannot find the path specified)","04/Feb/10 08:04;gnt;I don't think the host key shoud be the same as its really a different ssh server.
However, does the log message actually appear the same way than in jira, i.e. where all backslash have been removed ? That would surely be a problem in that case.","04/Feb/10 08:17;cmoulliard;@Hi Guillaume,

I confirm that what I copy/paste in the comment is what I retrieve from the log file of my Win XP machine.

Regards,

Charles","04/Feb/10 09:29;cmoulliard;If I create a second instance on SMX4, the message is quite similar but different :

10:17:49,540 | INFO | pool-2-thread-1 | SecurityUtils | e.sshd.common.util.SecurityUtils 80 | BouncyCastle not registered, using the default JCE provider
10:18:17,274 | INFO | NioProcessor-1 | ServerSession | shd.server.session.ServerSession 83 | Session created...
10:18:17,321 | INFO | NioProcessor-1 | FileKeyPairProvider | AbstractGeneratorHostKeyProvider 149 | Generating host key...
10:18:17,352 | INFO | NioProcessor-1 | FileKeyPairProvider | AbstractGeneratorHostKeyProvider 137 | Unable to write key ${karaf.base}/etc/host.key: java.io.FileNotFoundException: ${karaf.base}\etc\host.key (The system cannot find the path specified)
10:18:17,430 | INFO | NioProcessor-1 | ServerSession | shd.server.session.ServerSession 281 | Client version string: SSH-2.0-PuTTY_Release_0.60 ","05/Feb/10 13:35;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	D	karaf/admin/core/src/test/resources/etc/org.ops4j.pax.url.mvn.cfg
	D	karaf/admin/core/src/test/resources/etc/system.properties
	M	karaf/admin/core/src/main/java/org/apache/felix/karaf/admin/internal/AdminServiceImpl.java
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/bin/karaf
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/bin/karaf.bat
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/bin/start
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/bin/start.bat
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/bin/stop
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/bin/stop.bat
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/etc/org.apache.felix.karaf.shell.cfg
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/etc/org.ops4j.pax.url.mvn.cfg
	M	karaf/admin/core/src/main/resources/org/apache/felix/karaf/admin/etc/system.properties
	M	karaf/admin/core/src/test/java/org/apache/felix/karaf/admin/internal/AdminServiceImplTest.java
Committed r906932
",,,,,,,,,,,,,,,,,,,,,,,,,,,
System bundles are started out of order if the karaf.lock.level is > 1,FELIX-2044,12455325,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,04/Feb/10 16:07,04/Feb/10 16:11,13/Mar/19 22:56,04/Feb/10 16:11,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56685,,,Thu Feb 04 16:11:44 UTC 2010,,,,,,0|i0vrhb:,183425,,,,,,,,"04/Feb/10 16:11;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
Committed r906540
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The custom deployers leveraging url handlers must not be registered before the url handler is actually registered in the osgi framework,FELIX-2027,12455024,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,02/Feb/10 08:53,02/Feb/10 09:36,13/Mar/19 22:56,02/Feb/10 09:36,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"We must make sure that the URL handler is ready to use when the custom fileisntall deployer is registered, else fileinstall can start using the deployer and lead to a failure if the url handler has not been fully registered with the framework.  The reason is that the URL handler is registered in the same blueprint bundle.
In order to improve reliability, add a reference to the url handler to the deployer.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56702,,,Tue Feb 02 09:36:30 UTC 2010,,,,,,0|i0vthr:,183751,,,,,,,,"02/Feb/10 09:36;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/deployer/blueprint/pom.xml
	M	karaf/deployer/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint-deployer.xml
	M	karaf/deployer/features/pom.xml
	M	karaf/deployer/features/src/main/java/org/apache/felix/karaf/deployer/features/FeatureDeploymentListener.java
	M	karaf/deployer/features/src/main/resources/OSGI-INF/blueprint/features-deployer.xml
	M	karaf/deployer/spring/pom.xml
	M	karaf/deployer/spring/src/main/resources/OSGI-INF/blueprint/spring-deployer.xml
Committed r905551
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web Console admin,features and gogo plugins do not work with Equinox",FELIX-1994,12445882,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ffang,ffang,ffang,19/Jan/10 04:20,28/Jan/10 09:36,13/Mar/19 22:56,19/Jan/10 04:47,,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"we will get exception in the browser like if we click ""Admin"", ""Features"" or ""Gogo""


java.lang.NullPointerException
        at org.apache.felix.webconsole.AbstractWebConsolePlugin.spoolResource(AbstractWebConsolePlugin.java:355)
        at org.apache.felix.webconsole.AbstractWebConsolePlugin.doGet(AbstractWebConsolePlugin.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:314)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:363)
        at org.ops4j.pax.web.service.internal.HttpServiceServletHandler.handle(HttpServiceServletHandler.java:64)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
        at org.ops4j.pax.web.service.internal.HttpServiceContext.handle(HttpServiceContext.java:111)


But it works with felix.",,,,,,,,,,,,,,,FELIX-2017,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57058,,,Thu Jan 28 09:36:09 UTC 2010,,,,,,0|i0vtgf:,183745,,,,,,,,"19/Jan/10 04:47;ffang;commit fix
http://svn.apache.org/viewvc?rev=900659&view=rev","28/Jan/10 09:36;ffang;improve fix to handle more generic case
http://svn.apache.org/viewvc?rev=904011&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Configuring Failover Deployments doc to to include Oracle support,FELIX-2004,12446656,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,dporter,dporter,26/Jan/10 10:18,26/Jan/10 10:53,13/Mar/19 22:56,26/Jan/10 10:53,karaf-1.0.0,,,,karaf-1.2.0,,Documentation,,,0,,,,,,"I have made a number of changes to the Configuring Failover Deployments topic in the Karaf user's guide (http://felix.apache.org/site/67-configuring-failover-deployments.html)

I have restructured the topic and added detail on the Oracle support added in FELIX-1975.

I don't have rights to update the wiki page, so I have added the revised topic to a test wiki space here: http://cwiki.apache.org/confluence/display/test/6.7.+Configuring+Failover+Deployments

I need someone to copy the contents of that page and overwrite the current page, which is here: 

http://cwiki.apache.org/confluence/display/FELIX/6.7.+Configuring+Failover+Deployments



",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-26 10:53:06.55,,,no_permission,,,,,,,,,,,,57048,,,Tue Jan 26 10:53:06 UTC 2010,,,,,,0|i0vt6n:,183701,,,,,,,,"26/Jan/10 10:53;gertvanthienen;Updated http://cwiki.apache.org/confluence/display/FELIX/6.7.+Configuring+Failover+Deployments with the content provided in the test space.

@David: Thanks a lot for providing this new content!  Could you quickly verify that the new content is in the correct place and close this issue if it is OK?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The stop script should always work even if the default user / password / host has been changed,FELIX-1970,12444888,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,07/Jan/10 10:23,18/Jan/10 14:37,13/Mar/19 22:56,18/Jan/10 14:37,,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"Using the ssh connection to stop karaf from the stop script leads to configuration problems if the default user / password or host for the ssh connection has been changed.  Furthermore, we can imagine disabling the ssh server and there would be no way to stop karaf ...

I'm planning use the same mechanism as tomcat do, i.e. create a socket bound on localhost (so that it can't be accessed from another computer) and put the socket number in a file or something like that.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57081,,,2010-01-07 10:23:07.0,,,,,,0|i0vtfb:,183740,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to extend the console shell in current snapshot,FELIX-1798,12438841,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,danieldominguez,danieldominguez,22/Oct/09 20:08,07/Jan/10 10:11,13/Mar/19 22:56,07/Jan/10 10:11,,,,,,,Karaf,,,0,,,,,,"I've followed the instructions from http://felix.apache.org/site/61-extending-the-console.html on extending the karaf console shell.  

When I install my bundle into the current Karaf 1.1.0-SNAPSHOT, the osgi bundle installs but the command cannot be found.  I found this working properly in the Karaf 1.0 release.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-22 20:14:31.221,,,no_permission,,,,,,,,,,,,57239,,,Tue Oct 27 14:23:00 UTC 2009,,,,,,0|i0vtf3:,183739,,,,,,,,"22/Oct/09 20:14;gnt;Can you check if the commands have been registered in the OSGi registry using the ""osgi:ls -a"" command and check the log for any error ?","22/Oct/09 21:11;danieldominguez;osgi:ls -a output:

jbi-karaf-commands (32) provides:
---------------------------------
org.osgi.service.command.Function, org.apache.felix.karaf.shell.console.CompletableFunction
org.osgi.service.blueprint.container.BlueprintContainer


Also, no errors appear in the log file","22/Oct/09 22:03;danieldominguez;Appears related to https://issues.apache.org/jira/browse/FELIX-1772

If I build with felix framework 2.0.0, then the command begins to work again.",22/Oct/09 22:28;karlpauls;Could this be related to FELIX-1754 (towards the end of the discussion it looks like there is a bug in felix 2.0.1 but we still need to investigate it)?,23/Oct/09 06:38;gnt;Then we may want to revert FELIX-1772 back to Felix Framework 2.0.0 is it works better.  I will try to reproduce the issue.,"23/Oct/09 07:32;karlpauls;Maybe. However, notice that if it is related to FELIX-1754 the issue could be resolved if you are able to change dynamic imports into import packages for all that packages that are used for the service isassignable matching. Not sure whether that is possible or a good idea in your case but still might be worth investigating...","23/Oct/09 11:49;gnt;I've updated the karaf user's guide to introduce a fix for this problem, see http://cwiki.apache.org/FELIX/61-extending-the-console.html
The problem is that when checking if a reference is compatible with a bundle, felix  wants the service exporter to have be wired to the package containing the exported interface.  I'm still not clear is this is a bug or not (though i tend to think it is).  The work around is to ensure that the bundle is wired against all the packages that are used to export service interfaces.",23/Oct/09 13:20;danieldominguez;I've verified that the workaround works for me.  Thanks!,"26/Oct/09 22:22;rickhall;I have attached a diff to FELIX-1754 that I hope might address this issue too. If someone could apply it and test it, that would be great. Thanks.","27/Oct/09 08:46;gnt;Richard, your patch seems to fix the issue :-)","27/Oct/09 14:23;rickhall;Good news.Well, I will try to ponder this solution a little more to make sure it makes sense before committing it.",,,,,,,,,,,,,,,,,,,,,
Unable to choose the framework using system properties,FELIX-1964,12444581,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,04/Jan/10 12:28,04/Jan/10 12:30,13/Mar/19 22:56,04/Jan/10 12:30,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57086,,,Mon Jan 04 12:30:55 UTC 2010,,,,,,0|i0vsjr:,183598,,,,,,,,"04/Jan/10 12:30;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
Committed r895615
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fileinstall thread name as printed in log messages need to be less verbose,FELIX-1862,12440413,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,11/Nov/09 13:44,22/Dec/09 20:45,13/Mar/19 22:56,17/Dec/09 08:01,fileinstall-2.0.4,,,,fileinstall-2.0.8,,File Install,,,0,,,,,,"Look at the following message. The thread created by fileinstall has a name that includes everything that's used to configure fileinstall:

[#|2009-11-11T19:06:28.958+0530|INFO|glassfishv3.0|null|_ThreadID=23;_ThreadName={felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=true, felix.fileinstall.dir=/space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/modules/autostart/, felix.fileinstall.debug=1};|Installed /space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/modules/autostart/org.apache.felix.fileinstall-autodeploy-bundles.cfg|#]

It would have been sufficient to only include the watched directory name in the thread name as there is always one thread per watched directory.",generic,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-17 08:01:24.646,,,no_permission,,,,,,,,,,,,57180,,,Thu Dec 17 08:01:24 UTC 2009,,,,,,0|i0vtdb:,183731,,,,,,,,"17/Dec/09 08:01;gnt;Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Transmitting file data .
Committed revision 891575.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall created temp directories are never deleted,FELIX-1861,12440411,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,11/Nov/09 13:40,22/Dec/09 20:45,13/Mar/19 22:56,16/Dec/09 22:05,fileinstall-2.0.4,,,,fileinstall-2.0.8,,File Install,,,0,,,,,,"In GlassFish, I don't configure any specific temp folder for file install, so it creates some temp folders in ${java.io.tmpdir}, but I never see them getting deleted. e.g., from fileinstall logs, I see the following:
[#|2009-11-11T19:06:23.633+0530|INFO|glassfishv3.0|null|_ThreadID=22;_ThreadName={felix.fileinstall.poll=5000, service.pid=org.apache.felix.fileinstall.5ed48f74-77d9-4b78-9972-9e235f76ba8c, felix.fileinstall.bundles.new.start=true, felix.fileinstall.dir=/space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/domains/domain1/autodeploy/bundles/, service.factorypid=org.apache.felix.fileinstall, felix.fileinstall.filename=org.apache.felix.fileinstall-autodeploy-bundles.cfg, felix.fileinstall.debug=1};|{felix.fileinstall.poll (ms) = 5000, felix.fileinstall.dir = /space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/domains/domain1/autodeploy/bundles, felix.fileinstall.debug = 1, felix.fileinstall.bundles.new.start = true, felix.fileinstall.tmpdir = /tmp/fileinstall-867036041551774039, felix.fileinstall.filter = null}|#]

[#|2009-11-11T19:06:23.637+0530|INFO|glassfishv3.0|null|_ThreadID=23;_ThreadName={felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=true, felix.fileinstall.dir=/space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/modules/autostart/, felix.fileinstall.debug=1};|{felix.fileinstall.poll (ms) = 5000, felix.fileinstall.dir = /space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/modules/autostart, felix.fileinstall.debug = 1, felix.fileinstall.bundles.new.start = true, felix.fileinstall.tmpdir = /tmp/fileinstall-2323635376943197261, felix.fileinstall.filter = null}|#]

and after the program is stopped, I still see those tmp folders. In fact, they just keep getting created and it's a nightmare.
ls /tmp/fileinstall-* | wc
     41      21     827
",Linux/SunJDK6,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-16 22:05:57.598,,,no_permission,,,,,,,,,,,,57181,,,Wed Dec 16 22:05:57 UTC 2009,,,,,,0|i0vtef:,183736,,,,,,,,"16/Dec/09 22:05;gnt;Sending        fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Transmitting file data .
Committed revision 891449.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
File installer starts bundles too early on restart,FELIX-1928,12442749,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,ccustine,ccustine,08/Dec/09 16:42,22/Dec/09 20:45,13/Mar/19 22:56,08/Dec/09 17:03,fileinstall-2.0.4,,,,fileinstall-2.0.8,,File Install,,,0,,,,,,"File installer will try to start bundles before the proper startlevel has been reached on startup, leading to problems on restart.  Caused by fix for FELIX-1540.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57117,,,Tue Dec 08 17:03:13 UTC 2009,,,,,,0|i0vtev:,183738,,,,,,,,"08/Dec/09 17:03;ccustine;This fix works just fine in Equinox, but not with Felix.  It seems that the call to getStartLevel() returns the requested startlevel even when the framework is still incrementing through the startlevels.  I will open a separate issue for that and fix it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
should catch exception for FeaturesServiceImpl.internalAddRepository per uri,FELIX-1768,12438358,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,ffang,ffang,17/Oct/09 01:30,11/Dec/09 18:31,13/Mar/19 22:56,11/Dec/09 18:31,karaf-1.0.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,so that if there's one invalid uri in featuresRepositories list won't block other valid feature repository to be loaded.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-11 16:27:38.132,,,no_permission,,,,,,,,,,,,57265,,,Fri Dec 11 16:27:38 UTC 2009,,,,,,0|i0vunr:,183940,,,,,,,,"17/Oct/09 01:51;ffang;commit fix
http://svn.apache.org/viewvc?rev=826157&view=rev",11/Dec/09 16:27;ccustine;My fix for FELIX-1869 has regressed this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
framework.security can't be built or run against Felix 1.6,FELIX-1101,12424163,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,udittmer,udittmer,29/Apr/09 13:41,26/Nov/09 20:24,13/Mar/19 22:56,24/Nov/09 23:24,framework-1.6.0,,,,,,Conditional Permission Admin,Permission Admin,,0,,,,,,"The org.apache.felix.framework.SecurityActivator and org.apache.felix.framework.SecurityProviderImpl classes have a dependency on the org.apache.felix.framework.FelixBundle class, which seems to have been removed since Felix 1.4 (which, BTW, works fine with the PermissionAdmin service).

Most -but not all- of the required methods seem to be available in org.apache.felix.framework.BundleImpl now. Further changes involve using IModule instead of IContentLoader.",,,,,,,,,,,,,,,,,,,,,01/May/09 10:07;udittmer;framework-security.zip;https://issues.apache.org/jira/secure/attachment/12406999/framework-security.zip,04/May/09 06:03;udittmer;security.diff;https://issues.apache.org/jira/secure/attachment/12407132/security.diff,,,,2.0,,,,,,,,,,,,,,,,,,,2009-05-01 15:45:32.942,,,no_permission,,,,,,,,,,,,57912,,,Thu Nov 26 20:24:22 UTC 2009,,,,,,0|i0vusf:,183961,,,,,,,,"01/May/09 10:07;udittmer;The attached source files can be compiled and run with the current Felix trunk. I verified that they work just like the existing sources work with Felix 1.4, both for PermissionAdmin and ConditionalPermissionAdmin (with a BundleLocationCondition). The fix for issue Felix-1103 is also included.",01/May/09 15:45;karlpauls;Great. Thanks. I will look at it soon. Could you attach a diff as well? Otherwise I will diff it myself. Thanks again and I come back to this soon.,"03/May/09 19:40;udittmer;There's still an issue that I think isn't correct (and it was like that before - it's not something that got introduced now):

If a bundle is installed at the same location under which another bundle was installed and uninstalled before, then the CPA is no longer consulted if the bundle also had PA permissions. That can lead to the new bundle not being installed if it depends on permissions granted by the CPA.

This is caused by the m_store Map in the PermissionAdminImpl still having permission information for that location; see the use of the boolean ""file"" in the hasPermission method. If it gets set to true due to permissions of the old (now uninstalled) bundle being cached, then the method returns false and the CPA is not consulted.

While it's not hard for the host application to set null permissions for any bundle that gets uninstalled (thus removing the cache entry), I think the PA should do that automatically. Maybe a BundleListener could remove the cache entry when a bundle gets uninstalled?

(PS: Since I'd have to do the diff of 7 files manually, I want to wait until I hear about this, so I only have to do it once...)","03/May/09 20:06;karlpauls;Why can't you just do a:

> svn diff framework.security

That will diff all files in one go ...","04/May/09 06:03;udittmer;... because I was unaware that svn can do that recursively for a directory :-) I'm using an SVN GUI client that supports diff for single files only.

I've attached the diff for the whole ""framework.security"" directory.","09/May/09 12:23;udittmer;There's another issue that prevents some bundles (like org.apache.felix.scr-1.0.8.jar) to be started if the PA/CPA bundle is active. Trying to start it results in the exception quoted below. The missing method is part of BundleImpl, not Felix. Maybe the getDeclaredMethod call should be done repeatedly with the respective superclass if it fails?

     [java] java.lang.NoSuchMethodException: org.apache.felix.framework.Felix.getSignerMatcher()
     [java]     at java.lang.Class.getDeclaredMethod(Class.java:1909)
     [java]     at org.osgi.framework.AdminPermission.createSigner(AdminPermission.java:245)
     [java]     at org.osgi.framework.AdminPermission.access$200(AdminPermission.java:43)
     [java]     at org.osgi.framework.AdminPermission$1.run(AdminPermission.java:227)
     [java]     at java.security.AccessController.doPrivileged(Native Method)
     [java]     at org.osgi.framework.AdminPermission.getBundleDictionary(AdminPermission.java:221)
     [java]     at org.osgi.framework.AdminPermission.implies(AdminPermission.java:197)
     [java]     at org.osgi.framework.AdminPermissionCollection.implies(AdminPermission.java:442)
     [java]     at org.apache.felix.framework.security.util.Permissions.implies(Permissions.java:393)
     [java]     at org.apache.felix.framework.security.permissionadmin.PermissionAdminImpl.check(PermissionAdminImpl.java:175)
     [java]     at org.apache.felix.framework.security.permissionadmin.PermissionAdminImpl.hasPermission(PermissionAdminImpl.java:157)
     [java]     at org.apache.felix.framework.SecurityProviderImpl.hasBundlePermission(SecurityProviderImpl.java:109)
     [java]     at org.apache.felix.framework.Felix.impliesBundlePermission(Felix.java:3312)
     [java]     at org.apache.felix.framework.BundleProtectionDomain.implies(BundleProtectionDomain.java:46)
     [java]     at java.security.AccessControlContext.checkPermission(AccessControlContext.java:249)
     [java]     at java.security.AccessController.checkPermission(AccessController.java:427)
     [java]     at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)
     [java]     at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:239)
     [java]     at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:230)
     [java]     at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:210)
     [java]     at org.apache.felix.scr.impl.Activator.loadAllComponents(Activator.java:193)
     [java]     at org.apache.felix.scr.impl.Activator.start(Activator.java:102)
     [java]     at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1114)
     [java]     at java.security.AccessController.doPrivileged(Native Method)
     [java]     at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:580)
     [java]     at org.apache.felix.framework.Felix.startBundle(Felix.java:1458)
     [java]     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:774)
     [java]     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:755) ",24/Nov/09 23:24;karlpauls;I did migrate the security provider to felix 2.0.2 as of revision 883923.,"25/Nov/09 18:20;udittmer;A quick test indicates that it works as advertised. One change I observe from previous versions is that bundles loaded while PA/CPA is active now require a java.lang.RuntimePermission for ""getClassLoader"" - that wasn't the case before. It's possible that that's OK as per the spec, but it seemed like an odd -and rather dangerous- permission to have to grant to random bundles, and since it was't needed before I thought I'd mention it. I'm attaching the stack trace I get if the permission is not granted; ""plugin1.PlusOne"" is the bundle class implementing BundleActivator, and ""host.Main"" is the application class that tries to load the bundle.

     [java] java.security.AccessControlException: access denied (java.lang.RuntimePermission getClassLoader)
     [java]     at java.security.AccessControlContext.checkPermission(AccessControlContext.java:264)
     [java]     at java.security.AccessController.checkPermission(AccessController.java:427)
     [java]     at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)
     [java]     at java.lang.Class.getClassLoader(Class.java:588)
     [java]     at org.apache.felix.framework.util.Util.loadClassUsingClass(Util.java:168)
     [java]     at org.apache.felix.framework.Felix.registerService(Felix.java:2696)
     [java]     at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:252)
     [java]     at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:230)
     [java]     at plugin1.PlusOne.start(PlusOne.java:24)
     [java]     at org.apache.felix.framework.util.SecureAction$Actions.run(SecureAction.java:1262)
     [java]     at java.security.AccessController.doPrivileged(Native Method)
     [java]     at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:631)
     [java]     at org.apache.felix.framework.Felix.activateBundle(Felix.java:1700)
     [java]     at org.apache.felix.framework.Felix.startBundle(Felix.java:1622)
     [java]     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:915)
     [java]     at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:902)
     [java]     at host.Main.fileNew(Main.java:98)
","25/Nov/09 20:01;karlpauls;Well, I just did update the security provider and got it back to work with felix 2.0.2. I didn't yet get back to work on the security inside the framework. This is just one of several place I will have to look into to a) make sure we do the required checks and b) as in this case, make sure we do have the right doPriv blocks in place. I will hopefully be able to find the time soon.","25/Nov/09 21:06;karlpauls;Ok, I just did a quick fix to the framework which should fix the issue you did see. Please close this issue if it works for you. I will create new issues for all the other outstanding security related work. Thanks again!","26/Nov/09 11:49;udittmer;If by ""the issue you did see"" you mean the ""RuntimePermission for getClassLoader"", then that's still happening. What's no longer happening is the ""getSignerMatcher"" issue I mentioned above. I'll create a new issue about the install/uninstall/reinstall behavior I mentioned in my second post.","26/Nov/09 19:57;karlpauls;Um, are you sure you tested it with the latest _framework_ trunk? The fix for your second issue has been for framework _not_ the framework.security...","26/Nov/09 20:24;udittmer;Ah, sorry, I misunderstood. Running it with the latest framework sources indeed no longer shows the problem. Thanks!",,,,,,,,,,,,,,,,,,,
Exporter can load classes from importer,FELIX-1538,12434268,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,tdiesler,tdiesler,28/Aug/09 11:43,25/Nov/09 17:35,13/Mar/19 22:56,25/Nov/09 17:35,framework-2.0.0,,,,framework-2.0.2,,Framework,,,0,,,,,,"A imports X
B imports X

Can X load a class from A or B?
Can A load a class from B and vice versa?

testLoadClass(org.jboss.test.osgi.jbosgi142.OSGI142TestCase) Time elapsed: 1.743 sec <<< FAILURE!
java.lang.AssertionError: ClassNotFoundException expected for: jbosgi142-bundleX loads org.jboss.test.osgi.jbosgi142.bundleA.BeanA
at org.junit.Assert.fail(Assert.java:92)
at org.jboss.test.osgi.jbosgi142.OSGI142TestCase.assertBundleLoadClass(OSGI142TestCase.java:105)
at org.jboss.test.osgi.jbosgi142.OSGI142TestCase.testLoadClass(OSGI142TestCase.java:83)
",,,,,,,,,,,,,,,,,,,,,28/Aug/09 16:35;tdiesler;jbosgi142-bundleA.jar;https://issues.apache.org/jira/secure/attachment/12418001/jbosgi142-bundleA.jar,28/Aug/09 16:35;tdiesler;jbosgi142-bundleB.jar;https://issues.apache.org/jira/secure/attachment/12418002/jbosgi142-bundleB.jar,28/Aug/09 16:35;tdiesler;jbosgi142-bundleX.jar;https://issues.apache.org/jira/secure/attachment/12418003/jbosgi142-bundleX.jar,,,3.0,,,,,,,,,,,,,,,,,,,2009-08-28 14:36:43.567,,,no_permission,,,,,,,,,,,,57488,,,Wed Nov 25 17:35:51 UTC 2009,,,,,,0|i0vr1z:,183356,,,,,,,,"28/Aug/09 11:45;tdiesler;The related jboss issue is: https://jira.jboss.org/jira/browse/JBOSGI-142

","28/Aug/09 12:23;tdiesler;Here is the test

http://anonsvn.jboss.org/repos/jbossas/projects/jboss-osgi/trunk/testsuite/functional/src/test/java/org/jboss/test/osgi/jbosgi142/OSGI142TestCase.java","28/Aug/09 14:36;rickhall;I created a simple text case where A exports and B imports. In this test case, B can load a class from A, but A fails to load a class from B, which is what I would expect. Thus, it appears that there is more to your test case than meets the eye. Can you attach example manifests that recreate the issue?",28/Aug/09 16:35;tdiesler;Attached are the bundles that I use,"28/Aug/09 17:04;rickhall;I guess we are still missing something. I created this test case:

    public void testImportClassLoad2() throws Exception
    {
        try
        {
            InputStream is = this.getClass().getClassLoader().getResourceAsStream(""jbosgi142-bundleX.jar"");
            m_bundleA = getBundleContext().installBundle(""jbosgi142-bundleX.jar"", is);
            m_bundleA.start();
            is = this.getClass().getClassLoader().getResourceAsStream(""jbosgi142-bundleA.jar"");
            m_bundleB = getBundleContext().installBundle(""jbosgi142-bundleA.jar"", is);
            m_bundleB.start();
            is = this.getClass().getClassLoader().getResourceAsStream(""jbosgi142-bundleB.jar"");
            m_bundleC = getBundleContext().installBundle(""jbosgi142-bundleB.jar"", is);
            m_bundleC.start();

            Class clazz;
            try
            {
                clazz = m_bundleC.loadClass(""org.jboss.test.osgi.jbosgi142.bundleX.BeanX"");
            }
            catch (Exception ex)
            {
                assertTrue(""Imported class should be visible."", false);
            }
            try
            {
                clazz = m_bundleA.loadClass(""org.jboss.test.osgi.jbosgi142.bundleA.BeanA"");
                assertTrue(""Importer's class should NOT be visible."", false);
            }
            catch (Exception ex)
            {
                ex.printStackTrace();
            }
        }
        finally
        {
            cleanup();
        }
    }

Which works correctly. For the exception message I get:

      [bnd] java.lang.ClassNotFoundException: *** Class 'org.jboss.test.osgi.jbosgi142.bundleA.BeanA' was not found because bundle 42 does not import 'org.jboss.test.osgi.jbosgi142.bundleA' even though bundle 43 does export it. To resolve this issue, add an import for 'org.jboss.test.osgi.jbosgi142.bundleA' to bundle 42. ***

So, we still appear to be missing something. Are these classes somehow available through the class path?

Are you working against Felix' trunk?","31/Aug/09 07:05;tdiesler;I updated to revision 809474.

Yes, the class is loaded from the system classloader

testLoadClass(org.jboss.test.osgi.jbosgi142.OSGI142TestCase)  Time elapsed: 1.066 sec  <<< FAILURE!
java.lang.AssertionError: ClassNotFoundException expected for: jbosgi142-bundleX loads org.jboss.test.osgi.jbosgi142.bundleA.BeanA
Loaded from sun.misc.Launcher$AppClassLoader@2bbd86
	at org.junit.Assert.fail(Assert.java:92)
	at org.jboss.test.osgi.jbosgi142.OSGI142TestCase.assertBundleLoadClass(OSGI142TestCase.java:106)
	at org.jboss.test.osgi.jbosgi142.OSGI142TestCase.testLoadClass(OSGI142TestCase.java:82)

This should not happen, right?",31/Aug/09 07:07;tdiesler;Thanks for looking into this,"31/Aug/09 14:46;rickhall;This can happen because Felix contains a ""hack"" to guess when to do a boot delegation, so if you have not configured boot delegation, then maybe our hack is guessing incorrectly.

Basically, the hack does this: Before throwing a CNFE, it checks to see if the class instigating the class load is NOT from a bundle. If it is NOT, then it assumes it should boot delegate unless the external class was calling Bundle.loadClass().

It seems your use case should fall into this last case and it should not boot delegate, but perhaps we are missing a condition.

We can test this, but you will need to update from trunk again. I added a configuration property to disable this hack, called felix.bootdelegation.implicit...set it to false in conf/config.properties and see if it solves the issue.

If so, it would be nice if we could try to debug why the hack guesses incorrectly. In that case, would it be possible for you to create a self-contained test case out of your failing test case and send it to me? It doesn't need to be pretty, just something I can use to recreate the issue. ","01/Oct/09 13:18;tdiesler;Hi Richard,

the test that covers this issue is very generic

http://anonsvn.jboss.org/repos/jbossas/projects/jboss-osgi/trunk/testsuite/functional/src/test/java/org/jboss/test/osgi/jbosgi142/OSGI142TestCase.java

just throw out the org.jboss.osgi.spi stuff and boot the Felix framework in your preferred way.
","25/Nov/09 17:35;tdiesler;Yes, this fixes it - thanks

# Felix config properties  
felix.bootdelegation.implicit=false
",,,,,,,,,,,,,,,,,,,,,,
install one feature failed in org.apache.felix.karaf.features.cfg featuresBoot list shouldn't block install other features in this list,FELIX-1784,12438647,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ffang,ffang,ffang,21/Oct/09 01:12,25/Nov/09 12:20,13/Mar/19 22:56,21/Oct/09 01:17,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-21 13:00:28.848,,,no_permission,,,,,,,,,,,,57252,,,Wed Oct 21 13:00:28 UTC 2009,,,,,,0|i0vulr:,183931,,,,,,,,"21/Oct/09 01:17;ffang;commit fix
http://svn.apache.org/viewvc?rev=827861&view=rev","21/Oct/09 13:00;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/features/core/src/main/java/org/apache/felix/karaf/features/FeaturesService.java
	M	karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java
	M	karaf/features/core/src/test/java/org/apache/felix/karaf/features/FeaturesServiceTest.java
Committed r827999

Slightly enhance the behavior that can not be controlled using an option.  Added unit tests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backspace not working when using admin:connect,FELIX-1857,12440201,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,ccustine,ccustine,09/Nov/09 19:10,25/Nov/09 12:20,13/Mar/19 22:56,09/Nov/09 19:19,karaf-1.2.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57185,,,2009-11-09 19:10:28.0,,,,,,0|i0vsjb:,183596,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
instances/myinst/bin/karaf.bat leaks environment variables to shell,FELIX-1778,12438555,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,20/Oct/09 10:53,25/Nov/09 12:20,13/Mar/19 22:56,20/Oct/09 12:50,karaf-1.2.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"When launching a Karaf instance using the instances\myinst\bin\karaf.bat command the KARAF_BASE environment variable is leaked to the parent shell. This has the nasty side effect that if you try to launch the root Karaf instance again (with bin\karaf.bat) it starts myinst instead!

This can easily be fixed by moving the setlocal call one line up as in the attached karaf.bat file",Windows ,,,,,,,,,,,,,,,,,,,,20/Oct/09 10:54;bosschaert;karaf.bat;https://issues.apache.org/jira/secure/attachment/12422670/karaf.bat,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-20 12:50:38.568,,,no_permission,,,,,,,,,,,,57257,,,Tue Oct 20 12:50:38 UTC 2009,,,,,,0|i0vs0f:,183511,,,,,,,,20/Oct/09 10:54;bosschaert;The attached version of karaf.bat is a fixed one.,"20/Oct/09 12:50;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/admin/src/main/resources/org/apache/felix/karaf/shell/admin/bin/karaf.bat
Committed r827424
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The features deployment listener tacks installed bundles and force their resolution,FELIX-1786,12438679,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,21/Oct/09 10:18,25/Nov/09 12:20,13/Mar/19 22:56,21/Oct/09 12:59,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57251,,,Wed Oct 21 12:59:07 UTC 2009,,,,,,0|i0vsmf:,183610,,,,,,,,"21/Oct/09 12:59;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/deployer/features/src/main/java/org/apache/felix/karaf/deployer/features/FeatureDeploymentListener.java
Committed r827996
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[karaf] admin:start silently fails to launch new instance,FELIX-1751,12437988,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,eglynn,eglynn,13/Oct/09 16:23,25/Nov/09 12:20,13/Mar/19 22:56,13/Oct/09 16:29,karaf-1.2.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"""admin:start foobar"" fails silently, i.e. no process is launched for foobar instance

After running the equivalent command directly, I see a FileNotFound on the framework jar:
java.io.FileNotFoundException: ...apache-felix-karaf-.../org/apache/felix/org.apache.felix.framework/2.0.0/org.apache.felix.framework-2.0.0.jar

The path above is missing just the ""system"" component. This is due to the karaf.default.repository=system property being present in top-level etc/system.properties but missing from instances/foobar/etc/system.properties.",,,,,,,,,,,,,,,,,,,,,13/Oct/09 16:25;eglynn;felix_1751.patch;https://issues.apache.org/jira/secure/attachment/12421995/felix_1751.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-13 16:29:43.919,,,no_permission,,,,,,,,,,,,57280,,,Tue Oct 13 16:29:43 UTC 2009,,,,,,0|i0vumv:,183936,,,,,,,,13/Oct/09 16:25;eglynn;Can some committer review and apply the attached patch. ,"13/Oct/09 16:29;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/admin/src/main/resources/org/apache/felix/karaf/shell/admin/etc/system.properties
Committed r824835

Thx for the patch Eoghan!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"karaf should not hardcode the ""system"" location of its maven-like repository",FELIX-1660,12436880,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,djencks,djencks,30/Sep/09 00:07,25/Nov/09 12:20,13/Mar/19 22:56,07/Oct/09 11:03,karaf-1.2.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"A lot of stuff in the karaf setup is configurable, but the directory in which the maven-like bundle repo is located is not.  For geronimo integration we'd like to not surprise our users and use ""repository"" instead of ""system"".

I'm attaching a minimal patch to enable configuring this, I'll refine it if the idea meets with approval.",,,,,,,,,,,,,,,,,,,,,07/Oct/09 09:21;kmshi_array;1660-more.patch;https://issues.apache.org/jira/secure/attachment/12421508/1660-more.patch,30/Sep/09 00:08;djencks;FELIX-1660.diff;https://issues.apache.org/jira/secure/attachment/12420863/FELIX-1660.diff,,,,2.0,,,,,,,,,,,,,,,,,,,2009-09-30 07:08:34.437,,,no_permission,,,,,,,,,,,,57368,,,Wed Oct 07 11:03:36 UTC 2009,,,,,,0|i0vr2f:,183358,,,,,,,,"30/Sep/09 00:08;djencks;simple patch that enables configuring the default internal repo location from ""system""","30/Sep/09 07:08;gnt;Good idea.  The patch looks good.
Just one question, is there any reason you have changed the 
   configPropURL = file.toURL();
to
   configPropURL = file.toURI().toURL();

Is that intended, and if so, what's the effect of that ?","30/Sep/09 10:29;db82407;toURI().toURL() also escapes spaces, such as those found in windows paths.","05/Oct/09 16:16;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
	M	karaf/main/src/main/resources/config.properties
Committed r821901
","06/Oct/09 14:12;kmshi_array;I believe this fix was not fully completed:

1. The config.properties to be modified should be assembly/src/main/filtered-resources/etc/config.properties, not main/src/main/resources/config.properties (which is outdated and should be removed)

2. assembly/src/main/distribution/text/etc/org.ops4j.pax.url.mvn.cfg should also be modified accordingly.

A 1660-more.patch is attached.","07/Oct/09 09:33;kmshi_array;More, 

3. The best place to store karaf.default.repository is system.properties file.

4. To perform property substitution on karaf.framework.felix(or equinox) , the Bootstrap.java file should be refactored.

The 1660-more.patch is updated.
",07/Oct/09 11:03;gnt;Thx for this patch.  I've applied it.,,,,,,,,,,,,,,,,,,,,,,,,,
osgi:update on xml deployments will cause ZIPExceptions,FELIX-1715,12437462,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,lhein,lhein,07/Oct/09 07:11,25/Nov/09 12:20,13/Mar/19 22:56,14/Oct/09 11:47,karaf-1.0.0,,,,fileinstall-2.0.4,karaf-1.2.0,File Install,Karaf,,0,,,,,,"I deployed a Spring xml file by copying it to deploy folder. It was installed fine.

When trying to run
     osgi:update
on that bundle then it throws exceptions:

-------------------------------------------------
karaf@root> update 195                                                                                                                                      
ERROR: Unable to update the bundle. (java.util.zip.ZipException: error in opening zip file)                                                                 
java.util.zip.ZipException: error in opening zip file                                                                                                       
        at java.util.zip.ZipFile.open(Native Method)                                                                                                        
        at java.util.zip.ZipFile.<init>(ZipFile.java:114)                                                                                                   
        at java.util.jar.JarFile.<init>(JarFile.java:133)                                                                                                   
        at java.util.jar.JarFile.<init>(JarFile.java:97)                                                                                                    
        at org.apache.felix.framework.util.JarFileX.<init>(JarFileX.java:36)                                                                                
        at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:592)                                                                      
        at org.apache.felix.framework.cache.JarRevision.getManifestHeader(JarRevision.java:90)                                                              
        at org.apache.felix.framework.BundleImpl.createModule(BundleImpl.java:1090)                                                                         
        at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:1044)                                                                               
        at org.apache.felix.framework.Felix.updateBundle(Felix.java:1835)                                                                                   
        at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:908)                                                                                
        at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:895)                                                                                
        at org.apache.felix.karaf.shell.osgi.UpdateBundle.doExecute(UpdateBundle.java:37)                                                                   
        at org.apache.felix.karaf.shell.osgi.BundleCommand.doExecute(BundleCommand.java:42)                                                                 
        at org.apache.felix.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:41)                                                      
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)                                                            
        at org.apache.felix.gogo.runtime.shell.CommandProxy.execute(CommandProxy.java:45)                                                                   
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:211)                                                                            
        at org.apache.felix.gogo.runtime.shell.Closure.executeStatement(Closure.java:146)                                                                   
        at org.apache.felix.gogo.runtime.shell.Pipe.run(Pipe.java:91)                                                                                       
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:75)                                                                             
        at org.apache.felix.gogo.runtime.shell.CommandSessionImpl.execute(CommandSessionImpl.java:71)
        at org.apache.felix.karaf.shell.console.jline.Console.run(Console.java:115)
        at java.lang.Thread.run(Thread.java:619)
org.osgi.framework.BundleException: Update of bundle net.compart.dbesb.examples.webservice.mill [195] failed.
        at org.apache.felix.framework.Felix.updateBundle(Felix.java:1966)
        at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:908)
        at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:895)
        at org.apache.felix.karaf.shell.osgi.UpdateBundle.doExecute(UpdateBundle.java:37)
        at org.apache.felix.karaf.shell.osgi.BundleCommand.doExecute(BundleCommand.java:42)
        at org.apache.felix.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:41)
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
        at org.apache.felix.gogo.runtime.shell.CommandProxy.execute(CommandProxy.java:45)
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:211)
        at org.apache.felix.gogo.runtime.shell.Closure.executeStatement(Closure.java:146)
        at org.apache.felix.gogo.runtime.shell.Pipe.run(Pipe.java:91)
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:75)
        at org.apache.felix.gogo.runtime.shell.CommandSessionImpl.execute(CommandSessionImpl.java:71)
        at org.apache.felix.karaf.shell.console.jline.Console.run(Console.java:115)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.util.zip.ZipException: error in opening zip file
        at java.util.zip.ZipFile.open(Native Method)
        at java.util.zip.ZipFile.<init>(ZipFile.java:114)
        at java.util.jar.JarFile.<init>(JarFile.java:133)
        at java.util.jar.JarFile.<init>(JarFile.java:97)
        at org.apache.felix.framework.util.JarFileX.<init>(JarFileX.java:36)
        at org.apache.felix.framework.util.SecureAction.openJAR(SecureAction.java:592)
        at org.apache.felix.framework.cache.JarRevision.getManifestHeader(JarRevision.java:90)
        at org.apache.felix.framework.BundleImpl.createModule(BundleImpl.java:1090)
        at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:1044)
        at org.apache.felix.framework.Felix.updateBundle(Felix.java:1835)
        ... 14 more
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-12 12:24:45.59,,,no_permission,,,,,,,,,,,,57314,,,Wed Oct 14 11:47:05 UTC 2009,,,,,,0|i0vs27:,183519,,,,,,,,"12/Oct/09 12:24;gnt;Not sure how to handle this use case.
The problem is that the url for the installed bundle directly points to the xml (non transformed artifact) file.
So if you run ""osgi:update"", the deployer is bypassed and the osgi framework try to update from the non transformed artifact, which obviously fails in this case.

One possible enhancement would be to have fileinstall use a different url.  We could force custom deployment listeners to always go through a custom url handler and have the transformed artifact be done on the fly.   I think this would solve the problem.

FWIW, you don't really need to to an osgi:update on transformed artifacts, because those are already updated as soon as a change is detected by fileinstall, but I guess that's not really the point.","14/Oct/09 11:47;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	A	fileinstall/src/main/java/org/apache/felix/fileinstall/ArtifactUrlTransformer.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Artifact.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/BundleTransformer.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
	A	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/JarDirUrlHandler.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Util.java
	M	karaf/deployer/blueprint/src/main/java/org/apache/felix/karaf/deployer/blueprint/BlueprintDeploymentListener.java
	M	karaf/deployer/blueprint/src/main/java/org/apache/felix/karaf/deployer/blueprint/BlueprintURLHandler.java
	M	karaf/deployer/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint-deployer.xml
	M	karaf/deployer/spring/src/main/java/org/apache/felix/karaf/deployer/spring/SpringDeploymentListener.java
	M	karaf/deployer/spring/src/main/java/org/apache/felix/karaf/deployer/spring/SpringURLHandler.java
	M	karaf/deployer/spring/src/main/resources/OSGI-INF/blueprint/spring-deployer.xml
Committed r825093
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hitting backspace beyond last character causes LOUD BEEP,FELIX-1777,12438553,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,20/Oct/09 10:46,25/Nov/09 12:20,13/Mar/19 22:56,20/Oct/09 13:15,karaf-1.2.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"This issue was reported before as https://issues.apache.org/activemq/browse/SMX4KNL-137 and although it's marked as 'WontFix' it was fixed at some point.
However, the switch to the gogo shell seems to have reintroduced it. 

Its an extremely annoying issue because when you hit 'backspace' once too many on the console your machine will beep loudly. Switching off the sound has no effect, as I suspect its using the 'system beep'. Especially if you're in a room with other people its distracting and embarrassing.",Windows XP / Java 6,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-20 13:15:55.064,,,no_permission,,,,,,,,,,,,57258,,,Tue Oct 20 13:15:55 UTC 2009,,,,,,0|i0vufj:,183903,,,,,,,,"20/Oct/09 13:15;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/assembly/src/main/distribution/text/etc/system.properties
	M	karaf/shell/console/src/main/java/org/apache/felix/karaf/shell/console/jline/Console.java
Committed r827428
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The port for the jmx server needs to be configured at two locations,FELIX-1779,12438557,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,20/Oct/09 11:06,25/Nov/09 12:20,13/Mar/19 22:56,20/Oct/09 13:03,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"The serviceUrl property should look like:
  serviceUrl = service:jmx:rmi:///jndi/rmi://localhost:${rmiRegistryPort}/karaf-${karaf.name}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57256,,,Tue Oct 20 13:03:34 UTC 2009,,,,,,0|i0vugv:,183909,,,,,,,,"20/Oct/09 13:03;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/assembly/src/main/distribution/text/etc/org.apache.felix.karaf.management.cfg
Committed r827426
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration loaded from the etc/ directory are only available after a delay,FELIX-1626,12436242,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,21/Sep/09 19:25,25/Nov/09 12:20,13/Mar/19 22:56,12/Oct/09 09:19,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"This can cause various problems, especially when trying to use the maven url handler if the repositories list has not been configured correctly yet.",,,,,,,,,,,,,,,,,,,,,07/Oct/09 12:48;kmshi_array;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12421525/screenshot-1.jpg,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-07 12:48:46.705,,,no_permission,,,,,,,,,,,,57402,,,Mon Oct 12 09:19:59 UTC 2009,,,,,,0|i0vuiv:,183918,,,,,,,,22/Sep/09 06:24;gnt;The real problem is that fileinstall should load the configurations as soon as the config admin is available so that other bundles can rely on those configurations when they don't use managed factories.,07/Oct/09 12:48;kmshi_array;Unwanted (fileinstall) message appears after fileinstall bundle's startLevel changes to 5.,"12/Oct/09 09:19;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/assembly/src/main/filtered-resources/etc/config.properties
	M	karaf/assembly/src/main/filtered-resources/etc/startup.properties
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
Committed r824271
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ensure launch karaf java process from KARAF_BASE folder,FELIX-1793,12438769,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ffang,ffang,ffang,22/Oct/09 01:41,25/Nov/09 12:20,13/Mar/19 22:56,22/Oct/09 01:43,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,so that the relative path could be resolved correctly like in spring url handler,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57244,,,Thu Oct 22 01:43:18 UTC 2009,,,,,,0|i0vte7:,183735,,,,,,,,"22/Oct/09 01:43;ffang;commit fix
http://svn.apache.org/viewvc?rev=828279&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backspace does not work anymore when connecting from the karaf-client,FELIX-1817,12439272,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,28/Oct/09 12:28,25/Nov/09 12:20,13/Mar/19 22:56,30/Oct/09 11:43,karaf-1.2.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-28 14:25:18.483,,,no_permission,,,,,,,,,,,,57220,,,Fri Oct 30 11:43:21 UTC 2009,,,,,,0|i0vtxz:,183824,,,,,,,,28/Oct/09 14:25;ccustine;This is probably related to the changes I made to support line wrapped command editing and backspacing.  I will take a look at it.,"29/Oct/09 10:34;gnt;Not sure how it was working before your changes, but one problem is related to SSHD-47.
As the terminal parameters are not correctly sent to the ssh server, the jline SshTerminal incorrectly set the flag for switching backspace and delete, which leads to backspace not working on some environments.","30/Oct/09 11:43;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/client/pom.xml
	M	karaf/client/src/main/java/org/apache/felix/karaf/client/Main.java
	A	karaf/client/src/main/java/org/slf4j/impl/SimpleLogger.java
	M	karaf/pom.xml
	M	karaf/shell/ssh/src/main/java/org/apache/felix/karaf/shell/ssh/SshTerminal.java
Committed r831272

Tested on Mac OS X, Unbuntu and Windows",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ctrl-C kills the karaf-client, but it should be sent to the server",FELIX-1818,12439273,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,28/Oct/09 12:30,25/Nov/09 12:20,13/Mar/19 22:56,28/Oct/09 18:59,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57219,,,Wed Oct 28 18:59:48 UTC 2009,,,,,,0|i0vtwv:,183819,,,,,,,,"28/Oct/09 18:59;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/client/pom.xml
	M	karaf/client/src/main/java/org/apache/felix/karaf/client/Main.java
	M	karaf/shell/ssh/src/main/java/org/apache/felix/karaf/shell/ssh/ShellFactoryImpl.java
Committed r830725
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Karaf] Slave instances on same host as Master instance does not properly lock.,FELIX-1723,12437527,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jgoodyear,jgoodyear,07/Oct/09 17:37,25/Nov/09 12:20,13/Mar/19 22:56,14/Oct/09 19:02,karaf-1.0.0,,,,karaf-1.2.0,,,,,0,,,,,,"Slave instances on same host as Master instance does not properly lock.

Slave instances on same host as Master fail to either lock on initial startup or fail to become master after Master instance releases lock.

",Linux / Windows,,,,,,,,,,,,,,,,,,,,07/Oct/09 17:40;jgoodyear;FELIX-1723.patch;https://issues.apache.org/jira/secure/attachment/12421551/FELIX-1723.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-14 19:02:21.511,,,no_permission,,,,,,,,,,,,57307,,,Wed Oct 14 19:02:21 UTC 2009,,,,,,0|i0vtx3:,183820,,,,,,,,"07/Oct/09 17:40;jgoodyear;file: FELIX-1723.patch

Contains modification to DefaultJDBCLock.java. Relaxed strictness of locking table check results value (may be more than one table entry when instances are on the same host). 

Tested on Ubuntu 9.04 with JDK 1.6.0_13-b03.","14/Oct/09 19:02;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/DefaultJDBCLock.java
Committed r825220
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refactor and enable AdminServiceMBean,FELIX-1766,12438284,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,16/Oct/09 10:06,25/Nov/09 12:20,13/Mar/19 22:56,22/Oct/09 18:03,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"The MBean for the AdminService is currently not registered with the MBean Server. 
Before it can be registered it needs to be refactored to be more coarse-grained, like the FeaturesServiceMBean.",,,,,,,,,,,,,,,,,,,,,21/Oct/09 10:23;bosschaert;admin-management-assembly.patch;https://issues.apache.org/jira/secure/attachment/12422791/admin-management-assembly.patch,20/Oct/09 14:03;bosschaert;jmx_4.patch;https://issues.apache.org/jira/secure/attachment/12422687/jmx_4.patch,,,,2.0,,,,,,,,,,,,,,,,,,,2009-10-21 11:32:13.238,,,no_permission,,,,,,,,,,,,57266,,,Thu Oct 22 18:03:47 UTC 2009,,,,,,0|i0vu07:,183834,,,,,,,,19/Oct/09 11:50;bosschaert;I am starting to look into this one now...,"20/Oct/09 14:03;bosschaert;The attached patch (jmx_4.patch) contains an implementation of this. The shape of it is pretty much similar to how this is done for the Features Service MBean: it's in a bundle of its own.

Unit tests included for all new code.

Main thing missing is to make this new bundle part of the assembly.",21/Oct/09 10:23;bosschaert;The admin-management-assembly patch contains the bits needed to include the new admin-management bundle in the assembly and make it part of the default startup.,"21/Oct/09 11:32;gnt;I wonder if we should refactor the admin service as we did for the features service, i.e. split in 3 bundles: service, commands and management.
Thoughts ?","21/Oct/09 11:44;bosschaert;At least that would be consistent :) It could easily be done after applying this patch as this one already provides the management portion of it.

I guess the one reservation I would have is that Karaf is becoming quite large in terms of the number bundles. But if nobody has an issue with that I'd say we should do the refactor as you suggested...","22/Oct/09 18:03;gnt;URL: http://svn.apache.org/viewvc?rev=828802&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,
[karaf] The branding properties load can't find the external branding file,FELIX-1638,12436507,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,24/Sep/09 12:49,25/Nov/09 12:20,13/Mar/19 22:56,24/Sep/09 13:26,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"The use of
   getClass().getClassLoader().getResourceAsStream(""/xxx"")
with a leading '/' does not work in osgi.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57390,,,Thu Sep 24 13:26:37 UTC 2009,,,,,,0|i0vtpr:,183787,,,,,,,,"24/Sep/09 13:26;gnt;Sending        karaf/shell/console/src/main/java/org/apache/felix/karaf/shell/console/jline/Console.java
Transmitting file data .
Committed revision 818476.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Script for running the created Karaf instances with a console,FELIX-1620,12436089,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,18/Sep/09 19:32,25/Nov/09 12:20,13/Mar/19 22:56,16/Oct/09 16:08,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"When I create a Karaf instance using the admin commands it creates start and stop scripts to run this instance in the background.

I think this is really good for certain use-cases. But for other use-cases it would be important to simply launch that karaf instance with a console. In that case its important that the lifecycle of the instance is linked to the lifecycle of the console (so if someone exits the console, the instance dies). ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-16 16:08:08.842,,,no_permission,,,,,,,,,,,,57408,,,Fri Oct 16 16:08:08 UTC 2009,,,,,,0|i0vs2n:,183521,,,,,,,,"16/Oct/09 16:08;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	C	karaf/shell/admin/src/main/resources/org/apache/felix/karaf/shell/admin/bin/stop => karaf/shell/admin/src/main/resources/org/apache/felix/karaf/shell/admin/bin/karaf
	M	karaf/assembly/src/main/distribution/unix-shell/bin/karaf
	M	karaf/assembly/src/main/distribution/windows-text/bin/karaf.bat
	M	karaf/assembly/src/main/filtered-resources/bin/admin
	M	karaf/assembly/src/main/filtered-resources/bin/admin.bat
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
	M	karaf/shell/admin/src/main/java/org/apache/felix/karaf/shell/admin/internal/AdminServiceImpl.java
	A	karaf/shell/admin/src/main/resources/org/apache/felix/karaf/shell/admin/bin/karaf.bat
	M	karaf/shell/admin/src/main/resources/org/apache/felix/karaf/shell/admin/bin/start
	M	karaf/shell/admin/src/main/resources/org/apache/felix/karaf/shell/admin/bin/stop
Committed r825975

Seems to work as desired.  Reopen the bug if you find any issues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When displaying help for commands, arguments are not ordered correctly",FELIX-1730,12437726,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,09/Oct/09 16:21,25/Nov/09 12:20,13/Mar/19 22:56,09/Oct/09 16:25,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57300,,,Fri Oct 09 16:25:54 UTC 2009,,,,,,0|i0vtsv:,183801,,,,,,,,"09/Oct/09 16:25;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/shell/commands/pom.xml
	A	karaf/shell/commands/src/main/java/org/apache/felix/karaf/shell/commands/EachAction.java
	A	karaf/shell/commands/src/main/java/org/apache/felix/karaf/shell/commands/IfAction.java
	M	karaf/shell/commands/src/main/resources/OSGI-INF/blueprint/shell-commands.xml
	M	karaf/shell/console/src/main/java/org/apache/felix/karaf/shell/console/commands/BlueprintCommand.java
Committed r823609
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Feature deployer is broken on windows,FELIX-1771,12438438,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,19/Oct/09 11:06,25/Nov/09 12:20,13/Mar/19 22:56,19/Oct/09 12:03,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57263,,,Mon Oct 19 12:03:26 UTC 2009,,,,,,0|i0vs13:,183514,,,,,,,,"19/Oct/09 12:03;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/deployer/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint-deployer.xml
	M	karaf/deployer/features/src/main/java/org/apache/felix/karaf/deployer/features/FeatureDeploymentListener.java
	A	karaf/deployer/features/src/main/java/org/apache/felix/karaf/deployer/features/FeatureTransformer.java
	A	karaf/deployer/features/src/main/java/org/apache/felix/karaf/deployer/features/FeatureURLHandler.java
	M	karaf/deployer/features/src/main/resources/OSGI-INF/blueprint/features-deployer.xml
	M	karaf/deployer/spring/src/main/resources/OSGI-INF/blueprint/spring-deployer.xml
Committed r826649
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf itest fail on IBM JDK due to Pax Exam annotations not found,FELIX-1728,12437694,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,09/Oct/09 10:38,25/Nov/09 12:20,13/Mar/19 22:56,09/Oct/09 10:41,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"Due to a difference in the way the IBM JDK handles annotations (it fails on annotations not on the classpath instead of ignoring them), the following tests fail:
org.apache.felix.karaf.shell.itests.FeaturesTest.testFeatures [equinox]
org.apache.felix.karaf.shell.itests.CoreTest.testHelp [equinox]
org.apache.felix.karaf.shell.itests.CoreTest.testInstallCommand [equinox]

Cfr. http://lists.ops4j.org/pipermail/general/2009q4/003296.html for background information

the error looks like this:

java.lang.TypeNotPresentException: Type org.ops4j.pax.exam.junit.Configuration not present
at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:38)
at com.ibm.oti.reflect.AnnotationHelper.getDeclaredAnnotations(AnnotationHelper.java:50)
at com.ibm.oti.reflect.Method.getDeclaredAnnotations(Method.java:31)
at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:722)
at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:191)
at com.ibm.oti.reflect.Method.getAnnotation(Method.java:20)
at java.lang.reflect.Method.getAnnotation(Method.java:711)
at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.getAnnotatedMethods(CallableTestMethodImpl.java:295)
at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.runBefores(CallableTestMethodImpl.java:162)
at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.injectContextAndInvoke(CallableTestMethodImpl.java:124)
at org.ops4j.pax.exam.junit.extender.impl.internal.CallableTestMethodImpl.call(CallableTestMethodImpl.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:618)
at org.ops4j.pax.exam.rbc.internal.RemoteBundleContextImpl.remoteCall(RemoteBundleContextImpl.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:618)
at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:309)
at sun.rmi.transport.Transport$1.run(Transport.java:168)
at java.security.AccessController.doPrivileged(AccessController.java:279)
at sun.rmi.transport.Transport.serviceCall(Transport.java:164)
at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:506)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.handleRequest(TCPTransport.java:838)
at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:912)
at java.lang.Thread.run(Thread.java:810)
Caused by: java.lang.ClassNotFoundException: org.ops4j.pax.exam.junit.Configuration
at java.lang.Class.forName(Class.java:163)
at com.ibm.oti.reflect.AnnotationHelper.getAnnotation(AnnotationHelper.java:33)
... 27 more

The test launches okay, but the pax Configuration annotation class cannot be found. Adding the jar that contains the class, pax-exam-junit as a bundle in the test when we detect that we are using the ibm jdk allows the test to pass.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-09 10:43:32.745,,,no_permission,,,,,,,,,,,,57302,,,Fri Oct 09 10:43:32 UTC 2009,,,,,,0|i0vtmf:,183772,,,,,,,,09/Oct/09 10:41;gertvanthienen;http://svn.apache.org/viewvc?view=rev&revision=823510 adds the necessary jars to the classpath when running the tests on an IBM JDK,09/Oct/09 10:43;tonit;We just added this http://paxexam.ops4j.org/space/FAQ cause it's a bug in IBM JDK.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compile problems in framework.security,FELIX-1577,12435359,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,dims,dims,10/Sep/09 20:56,24/Nov/09 23:38,13/Mar/19 22:56,24/Nov/09 23:38,,,,,,,Framework,,,0,,,,,,"framework.security does not compile. Please see the following thread

http://markmail.org/thread/md7fkkrmkn6pbci5

thanks,
dims",,,,,,,,,,,,,,,,,,,,,05/Oct/09 03:55;dims;FELIX-1577.diff;https://issues.apache.org/jira/secure/attachment/12421250/FELIX-1577.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-10 21:13:17.003,,,no_permission,,,,,,,,,,,,57450,,,Tue Nov 24 23:38:57 UTC 2009,,,,,,0|i0vugf:,183907,,,,,,,,"10/Sep/09 21:13;karlpauls;Yes, the security provider isn't ported to felix 1.8.x nor 2.0.0 as of now. I will have a look at that soon. Thanks for reporting.","05/Oct/09 03:54;dims;Karl, 

i'll upload a diff that at least fixes the compile errors. there are at least 4 new methods marked with ""// TODO : FIXME"" that need to be implemented. Hope this will help jump start the move to the latest code.

thanks,
dims",24/Nov/09 23:38;karlpauls;I did migrate the security provider to felix 2.0.2 as of revision 883923.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The karaf client hangs if the authentication fails,FELIX-1888,12441469,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,23/Nov/09 15:11,23/Nov/09 17:19,13/Mar/19 22:56,23/Nov/09 17:19,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57156,,,Mon Nov 23 17:19:04 UTC 2009,,,,,,0|i0vtt3:,183802,,,,,,,,"23/Nov/09 17:19;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/client/src/main/java/org/apache/felix/karaf/client/Main.java
Committed r883422
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The stop script can't be used if the user or password has been changed,FELIX-1887,12441468,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,23/Nov/09 15:09,23/Nov/09 16:47,13/Mar/19 22:56,23/Nov/09 16:47,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57157,,,Mon Nov 23 16:47:11 UTC 2009,,,,,,0|i0vts7:,183798,,,,,,,,"23/Nov/09 16:47;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/assembly/src/main/distribution/unix-shell/bin/stop
	M	karaf/assembly/src/main/distribution/windows-text/bin/stop.bat
Committed r883406
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need better UI feedback when features commands fail,FELIX-1869,12440760,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,ccustine,ccustine,16/Nov/09 01:06,16/Nov/09 07:33,13/Mar/19 22:56,16/Nov/09 07:33,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"When some of the features commands fail, we don't provide very good feedback when invoked from the command line.  In some cases such as addUrl we don't provide any feedback that the URI was invalid or not found.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57174,,,2009-11-16 01:06:50.0,,,,,,0|i0vu4f:,183853,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.io.IOException: No framework context found when embedding felix frameworks as bundles,FELIX-1834,12439556,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,30/Oct/09 17:24,11/Nov/09 18:09,13/Mar/19 22:56,30/Oct/09 17:29,framework-2.0.1,,,,framework-2.0.2,,Framework,,,0,,,,,,"java.io.IOException: No framework context found 
	at org.apache.felix.framework.URLHandlersBundleStreamHandler.openConnection(URLHandlersBundleStreamHandler.java:74)
	at java.net.URL.openConnection(URL.java:945)

This happens when a version of felix (doesn't matter whether it is 2.0.1 or older) is embedded inside a bundle which gets installed and started inside Felix 2.0.1 (and probably older versions as well). The reason is that we mess up the framework form context lookup inside the urlhandlers which breaks bundle: urls and other stuff. This is only an issue if bundle: urls are created from string and not from the framework (like e.g., spring does). ",,,,,,,,,,,,,,FELIX-1573,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57206,,,Fri Oct 30 17:29:42 UTC 2009,,,,,,0|i0vt7b:,183704,,,,,,,,"30/Oct/09 17:29;karlpauls;Fixed in trunk as of r831398. 

We now make sure we can embed felix inside felix as a bundle without breaking framework from context lookup of URLHandlers. Furthermore, that if we embed an earlier version of felix inside the current felix this works as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iPOJO Create Eclipse Sample Project MyiPOJOBundle.zip with iPOJO 1.4.0,FELIX-1840,12439739,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,toedter_k,toedter_k,03/Nov/09 08:53,03/Nov/09 20:09,13/Mar/19 22:56,03/Nov/09 20:09,iPOJO-1.4.0,,,,,,,,,0,,,,,,"At http://felix.apache.org/site/apache-felix-ipojo-eclipse-integration.html you can download http://felix.apache.org/site/apache-felix-ipojo-eclipse-integration.data/MyiPOJOBundle.zip. This sample is still based on iPOJO 1.2.0. Please update to 1.4.0 and integrate the new Eclipse feature: ""The 1.4.0+ iPOJO manipulator allows manipulating classes from a directory (FELIX-943). This feature is very convenient for the Eclipse integration because it avoids creating the Jar and unzipping it inside the Eclipse build directory. Moreover, it allows reusing the Java Eclipse builder (compiling classes).""",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-03 19:02:53.724,,,no_permission,,,,,,,,,,,,57201,,,Tue Nov 03 20:08:59 UTC 2009,,,,,,0|i0vtb3:,183721,,,,,,,,"03/Nov/09 19:02;pierre.bourret;Fixed. The new ""MyiPOJOBundle.zip"" now uses iPOJO 1.4 (core, api, annotations, composites) and the iPOJO Ant plugin 1.4.2.
This file should be available tomorrow...","03/Nov/09 20:08;clement.escoffier;I updated the file. 
I should be available after the next synchronization of the wiki.

Thanks for reporting,

Regards,

Clement",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Errors during start-up on gnu/classpath based VMs (jamvm, kaffe, cacao) and mika",FELIX-1782,12438624,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,20/Oct/09 21:25,01/Nov/09 16:13,13/Mar/19 22:56,20/Oct/09 21:28,framework-2.0.0,framework-2.0.1,,,framework-2.0.2,,Framework,,,0,,,,,,"We have various exceptions and errors during start-up on gnu/classpath based VMs and on mika. Subsequently, we either crash or hang or can't resolve urls. The issue is a combination of the extension bundle support, the urlhandlers, and the dalvik support. I will commit a fix which gets us up and running again.","jamvm, kaffe, cacoa, mika",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57254,,,Tue Oct 20 21:28:50 UTC 2009,,,,,,0|i0vu47:,183852,,,,,,,,20/Oct/09 21:28;karlpauls;The fix is in trunk as of revision: 827806.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to edit or backspace on multiline commands,FELIX-1803,12439049,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,ccustine,ccustine,26/Oct/09 06:17,26/Oct/09 09:06,13/Mar/19 22:56,26/Oct/09 08:49,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"Multiline commands are screwed up in general.  Unable to edit/backspace beyond first char of last line, and multiple line commands screw up display of history using up/down arrows.  This is mostly a jline issue, but since we have our own fork and have specific terminal types we use, I am creating an issue here to track the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-26 06:43:44.176,,,no_permission,,,,,,,,,,,,57234,,,Mon Oct 26 09:06:52 UTC 2009,,,,,,0|i0vujr:,183922,,,,,,,,"26/Oct/09 06:43;gnt;One jline guy has created its own fork and fixed that:
  http://github.com/mikiobraun/jline-fork
Another fork:
  https://github.com/jdillon/jline2

We might want to merge those changes.","26/Oct/09 08:49;ccustine;Merged various forks and added some ansi control character handling to allows multiline command editing and backspace across multiple lines.  Also fixes problems with redisplaying multiline commands while scrolling command history.

The hack to AnsiWindowsTerminal might be better off as a static method call to jansi AnsiConsole, but this will keep us from doing a new release of jansi just for this fix.  Some of this will also be better if integrated directly into jline as Jason Dillon is apparently doing in his jline 2.0 branch.","26/Oct/09 09:06;ccustine;Hi Guillaume,
I had already started fixes very similar to the ones at http://github.com/hns/jline so I merged some of his fixes with my own.  Jason is doing a fairly major refactoring so we will definitely want to review what he has done in the near future.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fileinstal tmp dir needs to be different for each watched directory,FELIX-1790,12438715,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,21/Oct/09 15:19,21/Oct/09 20:46,13/Mar/19 22:56,21/Oct/09 20:46,,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57247,,,Wed Oct 21 20:46:04 UTC 2009,,,,,,0|i0vu7j:,183867,,,,,,,,"21/Oct/09 20:46;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/DirectoryWatcherTest.java
Committed r828204
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set felix.fileinstall.tmpdir to ${java.io.tmpdir} by default,FELIX-1788,12438702,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,21/Oct/09 13:24,21/Oct/09 15:19,13/Mar/19 22:56,21/Oct/09 13:57,http-2.0.4,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,Currently FileInstall default felix.fileinstall.tmpdir to ./tmp. Please change the default value to ${java.io.tmpdir} or a directory under that.,generic,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-21 13:57:57.309,,,no_permission,,,,,,,,,,,,57249,,,Wed Oct 21 15:19:18 UTC 2009,,,,,,0|i0vu6f:,183862,,,,,,,,"21/Oct/09 13:57;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/DirectoryWatcherTest.java
Committed r828016
",21/Oct/09 14:31;sahoo;What happens if more than one fileinstall use the same tmpdir? Should it be set to a unique dir per fileinstall thread?,"21/Oct/09 15:19;gnt;This would surely be a problem.  I think this might require a different jira issue to track this one, so I've created FELIX-1790 for that.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REGRESSION: FileInstall relies on location to be a valid URL for update to be successful,FELIX-1787,12438700,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,sahoo,sahoo,21/Oct/09 13:17,21/Oct/09 13:47,13/Mar/19 22:56,21/Oct/09 13:47,,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,"I am currently using FileInstall 1.2.0. While trying to test the staged 2.0.2 binaries, I observed this regression. New fileinstall is calling bundle.update() which relied on the bundle location to be a valid URL. Since old fileinstall was installing bundles with a location same as absolute path (i.e., it was not a valid URL), when I upgraded to newer version of fileinstall, my OSGi cache still had bundles with location which is not a valid URL. When I updated one such bundle, I got the following exception:

21 Oct, 2009 6:30:41 PM  
INFO: Failed to update artifact /space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/modules/autostart/org.apache.felix.scr.jar: org.osgi.framework.BundleException: Update of bundle org.apache.felix.scr [210] failed.
21 Oct, 2009 6:30:41 PM  
INFO: org.osgi.framework.BundleException: Update of bundle org.apache.felix.scr [210] failed.
	at org.apache.felix.framework.Felix.updateBundle(Felix.java:1966)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:908)
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:895)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.update(DirectoryWatcher.java:913)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.update(DirectoryWatcher.java:721)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.process(DirectoryWatcher.java:374)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:200)
Caused by: java.net.MalformedURLException: no protocol: /space/ss141213/WS/gf/v3/publish/glassfishv3/glassfish/modules/autostart/org.apache.felix.scr.jar
	at java.net.URL.<init>(URL.java:567)
	at java.net.URL.<init>(URL.java:464)
	at java.net.URL.<init>(URL.java:413)
	at org.apache.felix.framework.cache.JarRevision.initialize(JarRevision.java:150)
	at org.apache.felix.framework.cache.JarRevision.<init>(JarRevision.java:79)
	at org.apache.felix.framework.cache.JarRevision.<init>(JarRevision.java:57)
	at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(BundleArchive.java:1004)
	at org.apache.felix.framework.cache.BundleArchive.revise(BundleArchive.java:629)
	at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:1043)
	at org.apache.felix.framework.Felix.updateBundle(Felix.java:1835)
	... 6 more

Earlier versions of fileinstall used to use bundle.update(InputStream). Not sure why this has been changed in recent versions.",Linux,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-21 13:47:52.833,,,no_permission,,,,,,,,,,,,57250,,,Wed Oct 21 13:47:52 UTC 2009,,,,,,0|i0vu6v:,183864,,,,,,,,"21/Oct/09 13:47;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r828014

Please reopen if this fix does not work for you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some Karaf instances never reach the 'started' state,FELIX-1574,12435196,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,bosschaert,bosschaert,09/Sep/09 10:25,20/Oct/09 10:39,13/Mar/19 22:56,20/Oct/09 10:39,karaf-1.0.0,,,,,,Karaf,,,0,,,,,,"Instances crested from the default karaf instance shell never show up as started
Here's how it's reproduced:
1. create an instance from command line
2. start that instance from the command lie
3. start default karaf instance
(this throws up an JMX/RMI exception)
4. create & start another instance form within the default karaf one

now the admin list shows the other new one as 'starting'
both in karaf as well as from the command line

An interesting observation is that these instances get created in <root>/bin/instances instead of <root>/instances
BTW: The CWD when I started karaf was <root>/bin",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-09 10:53:41.628,,,no_permission,,,,,,,,,,,,57453,,,Tue Oct 20 10:39:26 UTC 2009,,,,,,0|i0vr1j:,183354,,,,,,,,"09/Sep/09 10:53;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/assembly/src/main/filtered-resources/bin/admin
	M	karaf/assembly/src/main/filtered-resources/bin/admin.bat
	M	karaf/gshell/gshell-admin/src/main/java/org/apache/felix/karaf/gshell/admin/internal/AdminServiceImpl.java
	M	karaf/gshell/gshell-admin/src/main/java/org/apache/felix/karaf/gshell/admin/main/Execute.java
	M	karaf/gshell/gshell-admin/src/main/resources/OSGI-INF/blueprint/gshell-admin.xml
Committed r812879

The above commit fix the fact that instances are not always created in <root>/instances.
Not sure if this is the real cause of your problem but I haven't been able to reproduce it with the above fix on Max OsX.

For the JMX/RMI exception, i'll raise a separate issue.","09/Sep/09 11:20;bosschaert;I can confirm that the instances are now all created in the right location.
However the problem of the second one never reaching the started state is still there.
I'm doing this on Windows XP with Java 1.6.0_13","20/Oct/09 06:35;gnt;AFAIK, this issue has been fixed some time ago.  Could you double check and close this issue if it's ok ?","20/Oct/09 10:39;bosschaert;Yes, just tried this on trunk and its definitely fixed. Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf binary tarball is corrupt,FELIX-1769,12438365,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,njbartlett,njbartlett,17/Oct/09 09:41,18/Oct/09 08:04,13/Mar/19 22:56,18/Oct/09 08:04,karaf-1.0.0,,,,,,Karaf,,,0,,,,,,"The binary .tar.gz download for Karaf on http://felix.apache.org/site/downloads.cgi is corrupt.

The zip distribution is okay, but it does not contain the launcher shell script for UNIX, only a Windows batch file.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-17 13:43:42.467,,,no_permission,,,,,,,,,,,,57264,,,Sun Oct 18 08:04:19 UTC 2009,,,,,,0|i0vu0n:,183836,,,,,,,,"17/Oct/09 13:43;gnt;It seems to work for me.
You can also find it in the maven repository at:
  http://repo1.maven.org/maven2/org/apache/felix/karaf/apache-felix-karaf/1.0.0/
",18/Oct/09 06:39;ccustine;Maybe the confusion is over the fact that the .zip only has Windows .bat files and the tar.gz has shell scripts for Linux or Mac OSX?,"18/Oct/09 08:04;njbartlett;Hmm I apologise... I tried to download the tarball three times from three different mirrors and it was corrupt, i.e. the standard UNIX ""tar ztvf"" command could not open it. Now I cannot reproduce the problem. I was using a 3G USB modem at the time, perhaps the file was corrupted during transfer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updating fileinstall bundle in watched directory causes IllegalsStateException,FELIX-1386,12430906,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fdiotalevi,sahoo,sahoo,20/Jul/09 06:25,15/Oct/09 11:36,13/Mar/19 22:56,15/Oct/09 09:49,fileinstall-1.2.0,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,"In my environment, fileinstall is installed via autostart properties, but it is located in a directory watched by fileinstall. When I updated fileinstall bundle, I get the following exception:

Jul 20, 2009 11:52:04 AM  
SEVERE: Exception in thread ""{felix.fileinstall.poll=5000, felix.fileinstall.bundles.new.start=false, felix.fileinstall.dir=/space/ss141213/WS/gf/v3.trunk.new/publish/glassfishv3/glassfish/modules/, felix.fileinstall.debug=1}"" 
Jul 20, 2009 11:52:20 AM  
SEVERE: java.lang.IllegalStateException: Invalid BundleContext.
Jul 20, 2009 11:52:20 AM  
SEVERE:         at org.apache.felix.framework.BundleContextImpl.checkValidity(BundleContextImpl.java:393)
Jul 20, 2009 11:52:20 AM  
SEVERE:         at org.apache.felix.framework.BundleContextImpl.getServiceReference(BundleContextImpl.java:257)
Jul 20, 2009 11:52:20 AM  
SEVERE:         at org.apache.felix.fileinstall.DirectoryWatcher.getLogService(DirectoryWatcher.java:449)
Jul 20, 2009 11:52:20 AM  
SEVERE:         at org.apache.felix.fileinstall.DirectoryWatcher.log(DirectoryWatcher.java:416)
Jul 20, 2009 11:52:20 AM  
SEVERE:         at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:133)
Jul 20, 2009 11:52:04 AM  
",generic,,,,,,,,,,,,,,,,,,,,14/Aug/09 10:37;fdiotalevi;FELIX-1386.txt;https://issues.apache.org/jira/secure/attachment/12416551/FELIX-1386.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-21 15:50:55.375,,,no_permission,,,,,,,,,,,,57638,,,Thu Oct 15 09:49:10 UTC 2009,,,,,,0|i0vsvj:,183651,,,,,,,,"21/Jul/09 15:50;fdiotalevi;What's your setup exactly?

Mine:
felix.auto.start.1= \
 file:bundle/org.apache.felix.shell-1.2.0.jar \
 file:bundle/org.apache.felix.shell.tui-1.2.0.jar \
 file:load/org.apache.felix.fileinstall-1.3.0-SNAPSHOT.jar \

and fileinstall watches the ./load folder

When I start, I see the exception:
{felix.fileinstall.poll (ms) = 2000, felix.fileinstall.dir = /opt/myprojects/felix-1.8.0/./load, felix.fileinstall.debug = -1, felix.fileinstall.bundles.new.start = true}
org.osgi.framework.BundleException: Bundle symbolic name and version are not unique: org.apache.felix.fileinstall:1.3.0.SNAPSHOT
	at org.apache.felix.framework.BundleImpl.createModule(BundleImpl.java:1000)
	at org.apache.felix.framework.BundleImpl.<init>(BundleImpl.java:79)
	at org.apache.felix.framework.Felix.installBundle(Felix.java:2123)
	at org.apache.felix.framework.Felix.installBundle(Felix.java:2026)
	at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:130)
	at org.apache.felix.fileinstall.DirectoryWatcher.install(DirectoryWatcher.java:719)
	at org.apache.felix.fileinstall.DirectoryWatcher.install(DirectoryWatcher.java:625)
	at org.apache.felix.fileinstall.DirectoryWatcher.doInstalled(DirectoryWatcher.java:381)
	at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:123)
Failed to install bundle: /opt/myprojects/felix-1.8.0/load/org.apache.felix.fileinstall-1.3.0-SNAPSHOT.jar: org.osgi.framework.BundleException: Bundle symbolic name and version are not unique: org.apache.felix.fileinstall:1.3.0.SNAPSHOT

I see the same exception when I try to update the same bundle.","21/Jul/09 16:10;sahoo;My setup is slightly different, but you can try either of the following two things to see the reported issue:
1. update fileinstall by using Felix shell.
2.  use a hierarchical URI (something like file:/tmp/load/org.apache.felix.fileinstall-1.3.0-SNAPSHOT.jar) in the autostart property.

Let me know if this does not help.","12/Aug/09 11:58;fdiotalevi;Sahoo, I still cannot reproduce.

Here are my experiments:

---------------use hierarchical uri------------

felix.auto.start.1= \
 file:bundle/org.apache.felix.shell-1.2.0.jar \
 file:bundle/org.apache.felix.shell.tui-1.2.0.jar \
 file:///opt/myprojects/felix-1.8.0/load/org.apache.felix.fileinstall-1.3.0-SNAPSHOT.jar

$ java -jar bin/felix.jar 

Welcome to Felix.
=================

DEBUG: WIRE: 1.0 -> org.osgi.service.startlevel -> 0
DEBUG: WIRE: 1.0 -> org.osgi.framework -> 0
DEBUG: WIRE: 1.0 -> org.osgi.service.packageadmin -> 0
DEBUG: WIRE: 2.0 -> org.apache.felix.shell -> 1.0
DEBUG: WIRE: 2.0 -> org.osgi.framework -> 0
-> DEBUG: WIRE: 3.0 -> org.osgi.util.tracker -> 0
DEBUG: WIRE: 3.0 -> org.osgi.framework -> 0
DEBUG: WIRE: 3.0 -> org.osgi.service.packageadmin -> 0
{felix.fileinstall.poll (ms) = 2000, felix.fileinstall.dir = /opt/myprojects/felix-1.8.0/./load, felix.fileinstall.debug = -1, felix.fileinstall.bundles.new.start = true}

... no exceptions.....

---------------after that I update it from the shell------------

-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (1.8.0)
[   1] [Active     ] [    1] Apache Felix Shell Service (1.2.0)
[   2] [Active     ] [    1] Apache Felix Shell TUI (1.2.0)
[   3] [Active     ] [    1] Apache Felix File Install (1.3.0.SNAPSHOT)
-> update 3
DEBUG: WIRE: 3.0 -> org.osgi.util.tracker -> 0
DEBUG: WIRE: 3.0 -> org.osgi.framework -> 0
DEBUG: WIRE: 3.0 -> org.osgi.service.packageadmin -> 0
-> {felix.fileinstall.poll (ms) = 2000, felix.fileinstall.dir = /opt/myprojects/felix-1.8.0/./load, felix.fileinstall.debug = -1, felix.fileinstall.bundles.new.start = true}

-> update 3 file:///opt/myprojects/felix-1.8.0/load/org.apache.felix.fileinstall-1.3.0-SNAPSHOT.jar
DEBUG: WIRE: 3.0 -> org.osgi.util.tracker -> 0
DEBUG: WIRE: 3.0 -> org.osgi.framework -> 0
DEBUG: WIRE: 3.0 -> org.osgi.service.packageadmin -> 0
{felix.fileinstall.poll (ms) = 2000, felix.fileinstall.dir = /opt/myprojects/felix-1.8.0/./load, felix.fileinstall.debug = -1, felix.fileinstall.bundles.new.start = true}





","12/Aug/09 12:43;fdiotalevi;Actually your exception rang a bell; I remember having seeing it a while ago in this situation
1) the fileinstall bundle was in the watched folder
2) the fileinstall bundle had a future system date (it was built in a machine with wrong system date)

Having a look again into the code, I find now the situation quite clear. 

What happens is simply that FileInstall bundle decides to update itself (because the file found in the watched directory is apparently new). Nothing wrong in that.

The update works correctly, but just after the update you have a call to the logger (DirectoryWatcher#791). In turn, it calls
context.getServiceReference(LogService.class.getName());  //DirectoryWatcher#449
In the particular moment when this call happen, the bundle is not yet ready to work (IllegalStateException: Invalid BundleContext). I remember finding a similar problem, in the Web Console, in FELIX-1003.

I don't know if that's the problem you are experiencing, but your stacktrace confirm it's really the log() operation
SEVERE: at org.apache.felix.fileinstall.DirectoryWatcher.getLogService(DirectoryWatcher.java:449) 
SEVERE: at org.apache.felix.fileinstall.DirectoryWatcher.log(DirectoryWatcher.java:416) 
SEVERE: at org.apache.felix.fileinstall.DirectoryWatcher.run(DirectoryWatcher.java:133) 

Possible workarounds:
- delete the log statement at DirectoryWatcher#791
- Thread.sleep(something) before logging!

wdyt?


","12/Aug/09 15:16;rickhall;If I am understanding, when you update yourself, then you cannot use services at all after that. You pretty much have to stop doing anything afterward, since update will stop your bundle, which invalidates its bundle context. Check out:

http://www.osgi.org/blog/2007/07/best-practice-with-depressed-bundles.html","14/Aug/09 10:13;fdiotalevi;Just wanted to give you an update (and maybe have some suggestions)

It turned out it is not trivial to fix this issue. As Richard commented, after a bundle updates itself, it's almost impossible to do anything else. Pretty much every call tho the BundleContext will raise an IllegalStateException. Even trying to get the Bundle state (I was hoping to be able to see it STOPPING) will raise the exception.

What it means is that it is very easy to fix the particular issue (avoid retrieving the log service after the update), but after that, there are a lot of other operations that FileInstall tries to do (install other bundles, refreshPackages just to name the first two).

At this point I think the simplest solution is to raise a specific exception after FileInstall updates itself, to be sure we are blocking the flow. We can then catch the exception, and terminate the FI gracefully. Not really a nice solution, but it wouldn't involve a massive refactory.

Thoughts?","14/Aug/09 10:37;fdiotalevi;Attached a patch trying to address the issue with the ""AutoUpdateException"" approach.

Can you please review it?",14/Aug/09 15:24;sahoo;I have not looked at the patch yet. I just think a better approach would be for fileinstall not to update itself. ,"15/Oct/09 09:49;gnt;URL: http://svn.apache.org/viewvc?rev=825454&view=rev
Log:
FELIX-1756: allow fileinstall to override (i.e. update) bundles that have not been deployed by fileinstall initially
Also fixes FELIX-1386: updating fileinstall bundle in watched directory causes IllegalStateException

Modified:
   felix/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
   felix/trunk/fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Util.java


Fileinstall can now update itself without any problems.",,,,,,,,,,,,,,,,,,,,,,,
Fileinstall does not recognize changes in lastmodification date of an uninstalled bundle inside deploy folder,FELIX-1716,12437463,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,lhein,lhein,07/Oct/09 07:20,14/Oct/09 17:42,13/Mar/19 22:56,14/Oct/09 15:19,karaf-1.0.0,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,"I did osgi:uninstall on a bundle. The bundle file still stays in the deploy folder.
Now I did a touch on that file but it was not installed again automatically. I had to move it out of the folder and back in again
and then it got installed. Looks like a bug to me.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-14 13:54:20.92,,,no_permission,,,,,,,,,,,,57313,,,Wed Oct 14 17:42:03 UTC 2009,,,,,,0|i0vtwf:,183817,,,,,,,,"14/Oct/09 13:54;gnt;Would you expect fileinstall to delete the artifact from the deploy folder if the user manually uninstalled the bundle ?
That could make sense, because if we don't do that, when the framework is restarted, fileinstall will automatically re-install the artifact i think.","14/Oct/09 14:14;gnt;I'm not very keen on having fileinstall performing file deletion in the watched folders.  it might be very confusing to the user.
I think fileinstall should just forget about the artifact, and any new modification would reinstall it.","14/Oct/09 15:19;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/DirectoryWatcherTest.java
Committed r825165

Fileinstall now listens for uninstalled bundles and just forget about those so that any new change on the artifact or restarting the fileinstall bundle would lead to the artifact being reinstalled.","14/Oct/09 17:42;lhein;Sorry for the late comment. Yes. You did it exactly as I would expect it. If the timestamp changes the artifact should be installed again.

Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Got an exception when restarting FileInstall bundle,FELIX-1593,12435674,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,agemocui,agemocui,15/Sep/09 02:34,14/Oct/09 14:06,13/Mar/19 22:56,14/Oct/09 14:06,fileinstall-2.0.0,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,"Stopping and then starting FileInstall bundle again when it is active. The following exception will be got.

Exception in thread ""{}"" java.lang.IllegalStateException: BundleContext is
 no longer valid
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.checkValid
(BundleContextImpl.java:1000)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.getService
Reference(BundleContextImpl.java:601)
        at org.apache.felix.fileinstall.internal.Util$OsgiLogger.getLogService(U
til.java:262)
        at org.apache.felix.fileinstall.internal.Util$OsgiLogger.log(Util.java:2
38)
        at org.apache.felix.fileinstall.internal.Util.log(Util.java:178)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.log(DirectoryW
atcher.java:409)
        at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryW
atcher.java:139)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-29 00:09:15.48,,,no_permission,,,,,,,,,,,,57435,,,Wed Oct 14 14:06:52 UTC 2009,,,,,,0|i0vtm7:,183771,,,,,,,,"29/Sep/09 00:09;fdiotalevi;I tracked down the problem being in the Logger static field of the Util class. 

This field is initialized when the bundle is first installed with a Logger implementation containing the current BundleContext; when the bundle is stopped and then restarted, this BundleContext is not valid anymore and therefore the Logger raise an exception every time it tries to use it.

Possible solutions:
- reset the Logger field in the Activator.stop() method
- remove the static field and create a Logger instance every time it is requested

wdyt?","14/Oct/09 14:06;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Util.java
Committed r825141
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FIleInstall should have an optional / dynamic import on org.osgi.service.cm instead of exporting it,FELIX-1591,12435605,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,14/Sep/09 14:42,14/Oct/09 13:01,13/Mar/19 22:56,14/Oct/09 13:01,,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57437,,,Wed Oct 14 13:01:20 UTC 2009,,,,,,0|i0vtxj:,183822,,,,,,,,"14/Oct/09 13:01;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/pom.xml
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/ConfigInstaller.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
	M	fileinstall/src/test/java/org/apache/felix/fileinstall/internal/ConfigInstallerTest.java
Committed r825122
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fileinstall does not work on jdk 1.4,FELIX-1750,12437987,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,13/Oct/09 16:13,13/Oct/09 16:15,13/Mar/19 22:56,13/Oct/09 16:15,fileinstall-2.0.0,,,,fileinstall-2.0.4,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57281,,,Tue Oct 13 16:15:16 UTC 2009,,,,,,0|i0vumf:,183934,,,,,,,,"13/Oct/09 16:15;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Scanner.java
Committed r824828
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
-defaults assumes path is relative,FELIX-1738,12437853,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,db82407,db82407,db82407,12/Oct/09 11:39,12/Oct/09 11:41,13/Mar/19 22:56,12/Oct/09 11:41,,,,,,,Sigil,,,0,,,,,,"the -defaults option in sigil.properties assumes the path given is relative.

It fails if an absolute path is given.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57292,,,2009-10-12 11:39:20.0,,,,,,0|i0vuhb:,183911,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fileinstall should load configurations as soon as config admin is available,FELIX-1628,12436272,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,22/Sep/09 06:24,12/Oct/09 09:19,13/Mar/19 22:56,12/Oct/09 09:19,,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,,,,,,,,,,,,,,,,FELIX-1626,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-02 23:34:01.233,,,no_permission,,,,,,,,,,,,57400,,,Mon Oct 12 09:19:14 UTC 2009,,,,,,0|i0vuin:,183917,,,,,,,,"02/Oct/09 23:34;ccustine;Isn't this already fixed in this changeset? http://fisheye6.atlassian.com/changelog/felix/?cs=809470

I have bumped up fileinstall to an earlier startlevel and this change handles the earlier startup perfectly.  When configadmin is started, fileinstall reprocesses the config files and all related issues such as FELIX-1626 seem to go away.","05/Oct/09 16:03;gnt;I don't think so.
The problem is that fileinstall now needs two cycles before installing an artifact (to make sure that the artifact is not still being copied).  So if you have a period of 1000 ms, it takes up to 2 seconds before all the configuration files are started.
FELIX-1626 has a temporary work around, but I think fileinstall should have a new configuration property that would allow to not wait those two cycles at startup.","12/Oct/09 09:19;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Scanner.java
Committed r824270

I've also fixed some possible synchronization problems in FileInstall.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After a restart, fileinstall does not always properly uninstall bundles",FELIX-1736,12437833,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,12/Oct/09 07:30,12/Oct/09 07:33,13/Mar/19 22:56,12/Oct/09 07:33,fileinstall-2.0.0,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57294,,,Mon Oct 12 07:33:42 UTC 2009,,,,,,0|i0vui7:,183915,,,,,,,,"12/Oct/09 07:33;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
Committed r824250
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
typo in framework discovery in URLHandlersBundleURLConnection,FELIX-1698,12437211,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,djencks,djencks,04/Oct/09 01:23,04/Oct/09 19:07,13/Mar/19 22:56,04/Oct/09 19:07,framework-2.0.0,,,,framework-2.0.1,,Framework,,,0,,,,,,"look at the patch, I think you'll see what I mean.",,,,,,,,,,,,,,,,,,,,,04/Oct/09 04:19;djencks;FELIX-1698.diff;https://issues.apache.org/jira/secure/attachment/12421220/FELIX-1698.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-04 19:07:18.234,,,no_permission,,,,,,,,,,,,57330,,,Sun Oct 04 19:07:18 UTC 2009,,,,,,0|i0vtcf:,183727,,,,,,,,04/Oct/09 19:07;karlpauls;Thanks. Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
find returns invalid level for bundles and find all returns strange listing,FELIX-1662,12436907,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,azeckoski,azeckoski,30/Sep/09 10:33,30/Sep/09 15:07,13/Mar/19 22:56,30/Sep/09 15:07,shell-1.4.0,,,,shell-1.4.1,,Shell,,,0,,,,,,"find returns level 1 for bundles always which is incorrect

-> ps
....
[  66] [Active     ] [    5] opencast-search-service-api (0.1.0.SNAPSHOT)
[  67] [Active     ] [    5] opencast-ingest-service-api (0.1.0.SNAPSHOT)
[  68] [Active     ] [    5] opencast-workflow-service-impl (0.1.0.SNAPSHOT)
[  69] [Active     ] [    5] opencast-http (0.1.0.SNAPSHOT)
[  70] [Active     ] [    5] opencast-inspection-service-api (0.1.0.SNAPSHOT)
[  71] [Active     ] [    5] opencast-engage-service-impl (0.1.0.SNAPSHOT)
[  72] [Active     ] [    5] opencast-search-service-impl (0.1.0.SNAPSHOT)
[  73] [Active     ] [    5] opencast-inspection-service-impl (0.1.0.SNAPSHOT)
[  74] [Active     ] [    5] opencast-delivery-service-impl (0.1.0.SNAPSHOT)
[  75] [Active     ] [    5] opencast-util (0.1.0.SNAPSHOT)
[  76] [Active     ] [    5] opencast-workspace-api (0.1.0.SNAPSHOT)
[  77] [Active     ] [    5] opencast-media (0.1.0.SNAPSHOT)
[  78] [Active     ] [    5] opencast-workspace-impl (0.1.0.SNAPSHOT)
[  79] [Active     ] [    5] opencast-ingest-service-impl (0.1.0.SNAPSHOT)
[  80] [Active     ] [    5] opencast-notification-service-api (0.1.0.SNAPSHOT)
[  81] [Active     ] [    5] opencast-runtime-info-ui (0.1.0.SNAPSHOT)
[  82] [Active     ] [    5] opencast-delivery-service-api (0.1.0.SNAPSHOT)
[  83] [Active     ] [    5] opencast-distribution-service-api (0.1.0.SNAPSHOT)
[  84] [Active     ] [    5] opencast-workflow-service-api (0.1.0.SNAPSHOT)
[  85] [Active     ] [    5] opencast-composer-service-impl (0.1.0.SNAPSHOT)
[  86] [Active     ] [    5] opencast-distribution-service-local-impl (0.1.0.SNAPSHOT)
[  87] [Active     ] [    5] opencast-working-file-repository-service-impl (0.1.0.SNAPSHOT)
[  88] [Active     ] [    5] opencast-engage-service-api (0.1.0.SNAPSHOT)
[  89] [Active     ] [    5] opencast-working-file-repository-service-api (0.1.0.SNAPSHOT)
[  90] [Active     ] [    5] /opt/matterhorn/felix/load/opencast-runtime-tools-0.1-SNAPSHOT.jar
[  91] [Active     ] [    5] opencast-conductor (0.1.0.SNAPSHOT)
[  92] [Active     ] [    5] opencast-composer-service-api (0.1.0.SNAPSHOT)
-> find opencast
   ID   State        Name
[  65] [Active     ] [    1] opencast-authentication-api (0.1.0.SNAPSHOT)
[  66] [Active     ] [    1] opencast-search-service-api (0.1.0.SNAPSHOT)
[  67] [Active     ] [    1] opencast-ingest-service-api (0.1.0.SNAPSHOT)
[  68] [Active     ] [    1] opencast-workflow-service-impl (0.1.0.SNAPSHOT)
[  69] [Active     ] [    1] opencast-http (0.1.0.SNAPSHOT)
[  70] [Active     ] [    1] opencast-inspection-service-api (0.1.0.SNAPSHOT)
[  71] [Active     ] [    1] opencast-engage-service-impl (0.1.0.SNAPSHOT)
[  72] [Active     ] [    1] opencast-search-service-impl (0.1.0.SNAPSHOT)
[  73] [Active     ] [    1] opencast-inspection-service-impl (0.1.0.SNAPSHOT)
[  74] [Active     ] [    1] opencast-delivery-service-impl (0.1.0.SNAPSHOT)
[  75] [Active     ] [    1] opencast-util (0.1.0.SNAPSHOT)
[  76] [Active     ] [    1] opencast-workspace-api (0.1.0.SNAPSHOT)
[  77] [Active     ] [    1] opencast-media (0.1.0.SNAPSHOT)
[  78] [Active     ] [    1] opencast-workspace-impl (0.1.0.SNAPSHOT)
[  79] [Active     ] [    1] opencast-ingest-service-impl (0.1.0.SNAPSHOT)
[  80] [Active     ] [    1] opencast-notification-service-api (0.1.0.SNAPSHOT)
[  81] [Active     ] [    1] opencast-runtime-info-ui (0.1.0.SNAPSHOT)
[  82] [Active     ] [    1] opencast-delivery-service-api (0.1.0.SNAPSHOT)
[  83] [Active     ] [    1] opencast-distribution-service-api (0.1.0.SNAPSHOT)
[  84] [Active     ] [    1] opencast-workflow-service-api (0.1.0.SNAPSHOT)
[  85] [Active     ] [    1] opencast-composer-service-impl (0.1.0.SNAPSHOT)
[  86] [Active     ] [    1] opencast-distribution-service-local-impl (0.1.0.SNAPSHOT)
[  87] [Active     ] [    1] opencast-working-file-repository-service-impl (0.1.0.SNAPSHOT)
[  88] [Active     ] [    1] opencast-engage-service-api (0.1.0.SNAPSHOT)
[  89] [Active     ] [    1] opencast-working-file-repository-service-api (0.1.0.SNAPSHOT)
[  91] [Active     ] [    1] opencast-conductor (0.1.0.SNAPSHOT)
[  92] [Active     ] [    1] opencast-composer-service-api (0.1.0.SNAPSHOT)


Doing a find . only returns some of the bundles and the levels are incorrect as well.
","felix 2.0.0
Java 1.6.0_15
OSX 10.5.5",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-30 10:52:05.703,,,no_permission,,,,,,,,,,,,57366,,,Wed Sep 30 15:07:06 UTC 2009,,,,,,0|i0vtan:,183719,,,,,,,,"30/Sep/09 10:35;azeckoski;Sample of doing a find .
-> find .
   ID   State        Name
[   0] [Active     ] [    1] System Bundle (2.0.0)
[   1] [Active     ] [    1] Apache Felix Bundle Repository (1.4.1)
[   2] [Active     ] [    1] Apache Felix Shell Service (1.4.0)
[   3] [Active     ] [    1] Apache Felix Shell TUI (1.4.0)
[   4] [Active     ] [    1] Apache MINA Core (2.0.0.M6)
[   5] [Active     ] [    1] OPS4J Pax Web - Service (0.6.0)
[   6] [Active     ] [    1] spring-osgi-io (1.2.0)
[   7] [Active     ] [    1] spring-osgi-core (1.2.0)
[   8] [Active     ] [    1] spring-osgi-extender (1.2.0)
[   9] [Active     ] [    1] Spring AOP (2.5.6.A)
[  10] [Active     ] [    1] Spring Core (2.5.6.A)
[  11] [Active     ] [    1] Spring Beans (2.5.6.A)
[  12] [Active     ] [    1] Spring Context (2.5.6.A)
[  13] [Active     ] [    1] AOP Alliance API (1.0.0)
[  14] [Active     ] [    1] Apache ServiceMix Bundles: jaxb-impl-2.1.6 (2.1.6.1)
[  15] [Active     ] [    1] Apache ServiceMix Bundles: wsdl4j-1.6.1 (1.6.1.1)
[  16] [Active     ] [    1] Apache ServiceMix Bundles: xmlsec-1.3.0 (1.3.0.1)
[  17] [Active     ] [    1] Apache ServiceMix Bundles: wss4j-1.5.4 (1.5.4.1)
[  18] [Active     ] [    1] Apache ServiceMix Bundles: xmlschema-1.4.3 (1.4.3.1)
[  19] [Active     ] [    1] Apache ServiceMix Bundles: asm-2.2.3 (2.2.3.1)
[  20] [Active     ] [    1] Apache ServiceMix Bundles: xmlresolver-1.2 (1.2.0.1)
[  21] [Active     ] [    1] Apache ServiceMix Bundles: neethi-2.0.4 (2.0.4.1)
[  22] [Active     ] [    1] Apache ServiceMix Bundles: woodstox-3.2.7 (3.2.7.1)
[  23] [Active     ] [    1] activemq-core (5.2.0)
[  24] [Active     ] [    1] activemq-ra (5.2.0)
[  25] [Active     ] [    1] activemq-pool (5.2.0)
[  26] [Active     ] [    1] activemq-console (5.2.0)
[  27] [Active     ] [    1] Apache CXF Bundle Jar (2.3.0.SNAPSHOT)
[  30] [Active     ] [    1] JDOM DOM Processor (1.0.0)
[  31] [Active     ] [    1] Apache Felix Web Management Console (1.2.10)
[  33] [Active     ] [    1] jettison (1.1)
[  34] [Active     ] [    1] Apache Commons IO Bundle (1.4)
[  35] [Active     ] [    1] Commons Lang (2.4)
[  36] [Active     ] [    1] Commons Codec (1.4)
[  37] [Active     ] [    1] Commons Pool (1.5.2)
[  38] [Active     ] [    1] Apache Commons FileUpload Bundle (1.2.1)
[  39] [Active     ] [    1] Commons Collections (3.2.1)
[  40] [Active     ] [    1] Apache ServiceMix Specs :: JAVAMAIL API 1.4 (1.3.0)
[  41] [Active     ] [    1] Apache ServiceMix Specs :: JAXB API 2.1 (1.3.0)
[  42] [Active     ] [    1] Apache ServiceMix Specs :: JAXWS API 2.1 (1.3.0)
[  43] [Active     ] [    1] Apache ServiceMix Specs :: SAAJ API 1.3 (1.3.0)
[  44] [Active     ] [    1] Apache ServiceMix Specs :: STAX API 1.0 (1.3.0)
[  45] [Active     ] [    1] Apache ServiceMix Specs :: JSR311 API 1.1 (1.4.0.SNAPSHOT)
[  46] [Active     ] [    1] geronimo-jms_1.1_spec (1.1.1)
[  47] [Active     ] [    1] geronimo-jta_1.1_spec (1.1.1)
[  48] [Active     ] [    1] geronimo-annotation_1.0_spec (1.1.1)
[  49] [Active     ] [    1] geronimo-activation_1.1_spec (1.0.2)
[  50] [Active     ] [    1] geronimo-j2ee-connector_1.5_spec (2.0.0)
[  51] [Active     ] [    1] geronimo-j2ee-management_1.1_spec (1.0.1)
[  52] [Active     ] [    1] geronimo-ws-metadata_2.0_spec (1.1.2)
[  55] [Active     ] [    1] OSGi R4 Compendium Bundle (4.1.0)
[  56] [Active     ] [    1] Apache Felix Declarative Services (1.0.8)
[  57] [Active     ] [    1] Apache Felix Configuration Admin Service (1.0.10)
[  58] [Active     ] [    1] Pax ConfMan - Properties Loader (0.2.1)
[  59] [Active     ] [    1] OPS4J Pax Logging - API (1.3.0)
[  60] [Active     ] [    1] OPS4J Pax Logging - Service (1.3.0)
[  61] [Active     ] [    1] Apache Felix EventAdmin (1.0.0)
[  62] [Active     ] [    1] Apache Felix File Install (1.2.0)
-> ps
START LEVEL 5
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (2.0.0)
[   1] [Active     ] [    5] Apache Felix Bundle Repository (1.4.1)
[   2] [Active     ] [    5] Apache Felix Shell Service (1.4.0)
[   3] [Active     ] [    5] Apache Felix Shell TUI (1.4.0)
[   4] [Active     ] [    4] Apache MINA Core (2.0.0.M6)
[   5] [Active     ] [    4] OPS4J Pax Web - Service (0.6.0)
[   6] [Active     ] [    4] spring-osgi-io (1.2.0)
[   7] [Active     ] [    4] spring-osgi-core (1.2.0)
[   8] [Active     ] [    4] spring-osgi-extender (1.2.0)
[   9] [Active     ] [    4] Spring AOP (2.5.6.A)
[  10] [Active     ] [    4] Spring Core (2.5.6.A)
[  11] [Active     ] [    4] Spring Beans (2.5.6.A)
[  12] [Active     ] [    4] Spring Context (2.5.6.A)
[  13] [Active     ] [    4] AOP Alliance API (1.0.0)
[  14] [Active     ] [    4] Apache ServiceMix Bundles: jaxb-impl-2.1.6 (2.1.6.1)
[  15] [Active     ] [    4] Apache ServiceMix Bundles: wsdl4j-1.6.1 (1.6.1.1)
[  16] [Active     ] [    4] Apache ServiceMix Bundles: xmlsec-1.3.0 (1.3.0.1)
[  17] [Active     ] [    4] Apache ServiceMix Bundles: wss4j-1.5.4 (1.5.4.1)
[  18] [Active     ] [    4] Apache ServiceMix Bundles: xmlschema-1.4.3 (1.4.3.1)
[  19] [Active     ] [    4] Apache ServiceMix Bundles: asm-2.2.3 (2.2.3.1)
[  20] [Active     ] [    4] Apache ServiceMix Bundles: xmlresolver-1.2 (1.2.0.1)
[  21] [Active     ] [    4] Apache ServiceMix Bundles: neethi-2.0.4 (2.0.4.1)
[  22] [Active     ] [    4] Apache ServiceMix Bundles: woodstox-3.2.7 (3.2.7.1)
[  23] [Active     ] [    4] activemq-core (5.2.0)
[  24] [Active     ] [    4] activemq-ra (5.2.0)
[  25] [Active     ] [    4] activemq-pool (5.2.0)
[  26] [Active     ] [    4] activemq-console (5.2.0)
[  27] [Active     ] [    4] Apache CXF Bundle Jar (2.3.0.SNAPSHOT)
[  28] [Active     ] [    4] CXF Local Discovery Service Bundle (1.1.0.SNAPSHOT)
[  29] [Resolved   ] [    4] CXF Distributed Software Bundle (1.1.0.SNAPSHOT)
[  30] [Active     ] [    4] JDOM DOM Processor (1.0.0)
[  31] [Active     ] [    4] Apache Felix Web Management Console (1.2.10)
[  32] [Active     ] [    3] Joda-Time (1.6)
[  33] [Active     ] [    3] jettison (1.1)
[  34] [Active     ] [    3] Apache Commons IO Bundle (1.4)
[  35] [Active     ] [    3] Commons Lang (2.4)
[  36] [Active     ] [    3] Commons Codec (1.4)
[  37] [Active     ] [    3] Commons Pool (1.5.2)
[  38] [Active     ] [    3] Apache Commons FileUpload Bundle (1.2.1)
[  39] [Active     ] [    3] Commons Collections (3.2.1)
[  40] [Active     ] [    2] Apache ServiceMix Specs :: JAVAMAIL API 1.4 (1.3.0)
[  41] [Active     ] [    2] Apache ServiceMix Specs :: JAXB API 2.1 (1.3.0)
[  42] [Active     ] [    2] Apache ServiceMix Specs :: JAXWS API 2.1 (1.3.0)
[  43] [Active     ] [    2] Apache ServiceMix Specs :: SAAJ API 1.3 (1.3.0)
[  44] [Active     ] [    2] Apache ServiceMix Specs :: STAX API 1.0 (1.3.0)
[  45] [Active     ] [    2] Apache ServiceMix Specs :: JSR311 API 1.1 (1.4.0.SNAPSHOT)
[  46] [Active     ] [    2] geronimo-jms_1.1_spec (1.1.1)
[  47] [Active     ] [    2] geronimo-jta_1.1_spec (1.1.1)
[  48] [Active     ] [    2] geronimo-annotation_1.0_spec (1.1.1)
[  49] [Active     ] [    2] geronimo-activation_1.1_spec (1.0.2)
[  50] [Active     ] [    2] geronimo-j2ee-connector_1.5_spec (2.0.0)
[  51] [Active     ] [    2] geronimo-j2ee-management_1.1_spec (1.0.1)
[  52] [Active     ] [    2] geronimo-ws-metadata_2.0_spec (1.1.2)
[  55] [Active     ] [    1] OSGi R4 Compendium Bundle (4.1.0)
[  56] [Active     ] [    1] Apache Felix Declarative Services (1.0.8)
[  57] [Active     ] [    1] Apache Felix Configuration Admin Service (1.0.10)
[  58] [Active     ] [    1] Pax ConfMan - Properties Loader (0.2.1)
[  59] [Active     ] [    1] OPS4J Pax Logging - API (1.3.0)
[  60] [Active     ] [    1] OPS4J Pax Logging - Service (1.3.0)
[  61] [Active     ] [    1] Apache Felix EventAdmin (1.0.0)
[  62] [Active     ] [    1] Apache Felix File Install (1.2.0)
[  65] [Active     ] [    5] opencast-authentication-api (0.1.0.SNAPSHOT)
[  66] [Active     ] [    5] opencast-search-service-api (0.1.0.SNAPSHOT)
[  67] [Active     ] [    5] opencast-ingest-service-api (0.1.0.SNAPSHOT)
[  68] [Active     ] [    5] opencast-workflow-service-impl (0.1.0.SNAPSHOT)
[  69] [Active     ] [    5] opencast-http (0.1.0.SNAPSHOT)
[  70] [Active     ] [    5] opencast-inspection-service-api (0.1.0.SNAPSHOT)
[  71] [Active     ] [    5] opencast-engage-service-impl (0.1.0.SNAPSHOT)
[  72] [Active     ] [    5] opencast-search-service-impl (0.1.0.SNAPSHOT)
[  73] [Active     ] [    5] opencast-inspection-service-impl (0.1.0.SNAPSHOT)
[  74] [Active     ] [    5] opencast-delivery-service-impl (0.1.0.SNAPSHOT)
[  75] [Active     ] [    5] opencast-util (0.1.0.SNAPSHOT)
[  76] [Active     ] [    5] opencast-workspace-api (0.1.0.SNAPSHOT)
[  77] [Active     ] [    5] opencast-media (0.1.0.SNAPSHOT)
[  78] [Active     ] [    5] opencast-workspace-impl (0.1.0.SNAPSHOT)
[  79] [Active     ] [    5] opencast-ingest-service-impl (0.1.0.SNAPSHOT)
[  80] [Active     ] [    5] opencast-notification-service-api (0.1.0.SNAPSHOT)
[  81] [Active     ] [    5] opencast-runtime-info-ui (0.1.0.SNAPSHOT)
[  82] [Active     ] [    5] opencast-delivery-service-api (0.1.0.SNAPSHOT)
[  83] [Active     ] [    5] opencast-distribution-service-api (0.1.0.SNAPSHOT)
[  84] [Active     ] [    5] opencast-workflow-service-api (0.1.0.SNAPSHOT)
[  85] [Active     ] [    5] opencast-composer-service-impl (0.1.0.SNAPSHOT)
[  86] [Active     ] [    5] opencast-distribution-service-local-impl (0.1.0.SNAPSHOT)
[  87] [Active     ] [    5] opencast-working-file-repository-service-impl (0.1.0.SNAPSHOT)
[  88] [Active     ] [    5] opencast-engage-service-api (0.1.0.SNAPSHOT)
[  89] [Active     ] [    5] opencast-working-file-repository-service-api (0.1.0.SNAPSHOT)
[  90] [Active     ] [    5] /opt/matterhorn/felix/load/opencast-runtime-tools-0.1-SNAPSHOT.jar
[  91] [Active     ] [    5] opencast-conductor (0.1.0.SNAPSHOT)
[  92] [Active     ] [    5] opencast-composer-service-api (0.1.0.SNAPSHOT)

","30/Sep/09 10:52;rickhall;I see the issue here. The ""find"" command passes null to the method to print out the bundles, which causes it to print 1 for all start levels. I will fix this for the next release.","30/Sep/09 15:07;rickhall;I committed a fix for this and deployed a snapshot. If you could test and close this issue, it would be great. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The Local bundle Repository does not support singleton bundle,FELIX-1650,12436773,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,clement.escoffier,clement.escoffier,clement.escoffier,28/Sep/09 19:00,28/Sep/09 19:04,13/Mar/19 22:56,28/Sep/09 19:04,,,,,,,Bundle Repository (OBR),,,0,,,,,,"The OBR builds a local bundle repository containing deployed bundle. It computes the symbolic name of deployed bundles by just getting the symbolic name from the manifest. So, for singleton bundles, it results in $name;singleton:=true. This leads into issues when deploying the same bundle.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57378,,,Mon Sep 28 19:04:44 UTC 2009,,,,,,0|i0vs1r:,183517,,,,,,,,"28/Sep/09 19:04;clement.escoffier;Fixed at r819671.
Just remove ;singleton:=true from retrieved symbolic names. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to connect to Karaf with ssh on Windows,FELIX-1641,12436546,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,24/Sep/09 22:55,24/Sep/09 23:00,13/Mar/19 22:56,24/Sep/09 23:00,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"When running Karaf on Windows, you can not connect to it with ssh.  The connection is established, but authentication fails even with the default username and password right after installation.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57387,,,Thu Sep 24 23:00:51 UTC 2009,,,,,,0|i0vtsn:,183800,,,,,,,,"24/Sep/09 23:00;gertvanthienen;The default blueprint converter for String -> Properties uses the Properties.load() method which strips the \ from the Windows path names.

Fixed in https://svn.apache.org/viewvc?view=rev&revision=818650 by adding a custom converter to handle this particular use case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"in spring-dm feature, optional imports in spring-context won't get resolved",FELIX-1618,12436064,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,hans.couder@gmail.com,hans.couder@gmail.com,18/Sep/09 13:38,18/Sep/09 13:47,13/Mar/19 22:56,18/Sep/09 13:47,karaf-1.0.0,,,,karaf-1.0.0,,,,,0,,,,,,"In the spring-dm feature, the spring-context bundle precedes spring-aop.

This causes optional imports in the spring-context bundle won't get resolved resulting in: 

Application context refresh failed (OsgiBundleXmlApplicationContext(bundle=org.apache.camel.camel-example-osgi, config=osgibundle:/META-INF/spring/*.xml))
java.lang.NoClassDefFoundError: org/springframework/aop/support/AopUtils
	at org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler.checkManagedBean(MetadataMBeanInfoAssembler.java:106)
	at org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler.getMBeanInfo(AbstractMBeanInfoAssembler.java:63)
	at org.apache.camel.management.DefaultManagementAgent.register(DefaultManagementAgent.java:202)
	at org.apache.camel.management.DefaultManagementAgent.register(DefaultManagementAgent.java:193)
	at org.apache.camel.management.ManagedManagementStrategy.manageNamedObject(ManagedManagementStrategy.java:68)
	at org.apache.camel.management.ManagedManagementStrategy.manageObject(ManagedManagementStrategy.java:61)
	at org.apache.camel.management.DefaultManagementLifecycleStrategy.onContextStart(DefaultManagementLifecycleStrategy.java:99)
	at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:918)
	at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:869)
	at org.apache.camel.spring.SpringCamelContext.maybeDoStart(SpringCamelContext.java:165)
	at org.apache.camel.spring.SpringCamelContext.doStart(SpringCamelContext.java:160)
	at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:52)
	at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:832)
	at org.apache.camel.spring.SpringCamelContext.maybeStart(SpringCamelContext.java:99)
	at org.apache.camel.spring.SpringCamelContext.onApplicationEvent(SpringCamelContext.java:119)
	at org.apache.camel.spring.CamelContextFactoryBean.onApplicationEvent(CamelContextFactoryBean.java:516)
	at org.springframework.context.event.SimpleApplicationEventMulticaster$1.run(SimpleApplicationEventMulticaster.java:78)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:49)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:76)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:274)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:736)
	at org.springframework.osgi.context.support.AbstractOsgiBundleApplicationContext.finishRefresh(AbstractOsgiBundleApplicationContext.java:235)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$4.run(AbstractDelegatedExecutionApplicationContext.java:358)
	at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.completeRefresh(AbstractDelegatedExecutionApplicationContext.java:320)
	at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor$CompleteRefreshTask.run(DependencyWaiterApplicationContextExecutor.java:136)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.ClassNotFoundException: *** Class 'org.springframework.aop.support.AopUtils' was not found because bundle 38 does not import 'org.springframework.aop.support' even though bundle 39 does export it. To resolve this issue, add an import for 'org.springframework.aop.support' to bundle 38. ***
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1645)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
	... 27 more
Caused by: java.lang.ClassNotFoundException: org.springframework.aop.support.AopUtils
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:726)
	at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:60)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1631)
	... 29 more",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-18 13:47:28.663,,,no_permission,,,,,,,,,,,,57410,,,Fri Sep 18 13:47:28 UTC 2009,,,,,,0|i0vtzb:,183830,,,,,,,,"18/Sep/09 13:47;gertvanthienen;Reordering the bundles in the features descriptor should fix this, cfr. http://svn.apache.org/viewvc?view=rev&revision=816629
@Hans: Can you close this issue if this fixes your problem?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to configure boot features on admin:create-d instance,FELIX-1602,12435711,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,15/Sep/09 13:44,15/Sep/09 14:06,13/Mar/19 22:56,15/Sep/09 14:06,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"When using admin:create to create a new Felix Karaf instance, you can not configure the boot features by just editing the etc/org.apache.felix.karaf.features.cfg file for that instance.

To reproduce:
- start karaf
- from the console, create a new instance with admin:create myinstance
- edit the <karaf_home>/instances/myinstance/etc/org.apache.felix.karaf.features.cfg file
- start the instance from the console with admin:start myinstance

You'll notice that the instance starts fine but the boot features have not been installed",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57426,,,Tue Sep 15 14:06:37 UTC 2009,,,,,,0|i0vtyv:,183828,,,,,,,,"15/Sep/09 14:06;gertvanthienen;Fixed in http://svn.apache.org/viewvc?view=rev&revision=815332
Thanks to Guillaume for the pointer!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock UrlHandlers,FELIX-1565,12435058,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,mrdon,mrdon,08/Sep/09 04:18,14/Sep/09 06:29,13/Mar/19 22:56,09/Sep/09 12:17,framework-1.8.1,framework-2.0.0,,,framework-2.0.1,,Framework,,,0,,,,,,"I'm getting a deadlock quite frequently in the URLHandlers class during our unit tests:

build	07-Sep-2009 23:13:49	Java stack information for the threads listed above:
build	07-Sep-2009 23:13:49	===================================================
build	07-Sep-2009 23:13:49	""FelixShutdown"":
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.URLHandlers.unregisterFrameworkListsForContextSearch(URLHandlers.java:265)
build	07-Sep-2009 23:13:49		- waiting to lock <0xb41335e0> (a java.util.HashMap)
build	07-Sep-2009 23:13:49		- locked <0xb00fd0e8> (a java.lang.Class for java.net.URL)
build	07-Sep-2009 23:13:49		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
build	07-Sep-2009 23:13:49		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
build	07-Sep-2009 23:13:49		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
build	07-Sep-2009 23:13:49		at java.lang.reflect.Method.invoke(Method.java:597)
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.util.SecureAction.invoke(SecureAction.java:763)
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.URLHandlers.unregisterFrameworkInstance(URLHandlers.java:533)
build	07-Sep-2009 23:13:49		- locked <0xb4133590> (a java.util.ArrayList)
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.URLHandlersActivator.stop(URLHandlersActivator.java:63)
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:611)
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.Felix$SystemBundleActivator.run(Felix.java:4041)
build	07-Sep-2009 23:13:49		at java.lang.Thread.run(Thread.java:619)
build	07-Sep-2009 23:13:49	""main"":
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.URLHandlers.getFrameworkFromContext(URLHandlers.java:571)
build	07-Sep-2009 23:13:49		- waiting to lock <0xb4133590> (a java.util.ArrayList)
build	07-Sep-2009 23:13:49		- locked <0xb41335e0> (a java.util.HashMap)
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.URLHandlersStreamHandlerProxy.getStreamHandlerService(URLHandlersStreamHandlerProxy.java:465)
build	07-Sep-2009 23:13:49		at org.apache.felix.framework.URLHandlersStreamHandlerProxy.hashCode(URLHandlersStreamHandlerProxy.java:225)
build	07-Sep-2009 23:13:49		at java.net.URL.hashCode(URL.java:857)
build	07-Sep-2009 23:13:49		- locked <0xefb8c0a8> (a java.net.URL)
build	07-Sep-2009 23:13:49		at java.util.HashMap.get(HashMap.java:300)
build	07-Sep-2009 23:13:49		at sun.net.www.protocol.jar.JarFileFactory.getCachedJarFile(JarFileFactory.java:90)
build	07-Sep-2009 23:13:49		at sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:50)
build	07-Sep-2009 23:13:49		- locked <0xb40027d8> (a sun.net.www.protocol.jar.JarFileFactory)
build	07-Sep-2009 23:13:49		at sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:104)
build	07-Sep-2009 23:13:49		at sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:132)
build	07-Sep-2009 23:13:49		at java.net.URL.openStream(URL.java:1009)
build	07-Sep-2009 23:13:49		at aQute.lib.osgi.Analyzer.getBndManifest(Analyzer.java:591)
build	07-Sep-2009 23:13:49		at aQute.lib.osgi.Analyzer.getVersion(Analyzer.java:554)
build	07-Sep-2009 23:13:49		at aQute.lib.osgi.Analyzer.calcManifest(Analyzer.java:303)
build	07-Sep-2009 23:13:49		at com.atlassian.plugin.osgi.container.felix.ExportsBuilder.determineExports(ExportsBuilder.java:84)
build	07-Sep-2009 23:13:49		at com.atlassian.plugin.osgi.container.felix.TestExportsBuilder.testDetermineExportsIncludeServiceInterfaces(TestExportsBuilder.java:68)
build	07-Sep-2009 23:13:49		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
build	07-Sep-2009 23:13:49		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
build	07-Sep-2009 23:13:49		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
build	07-Sep-2009 23:13:49		at java.lang.reflect.Method.invoke(Method.java:597)
build	07-Sep-2009 23:13:49		at junit.framework.TestCase.runTest(TestCase.java:154)
build	07-Sep-2009 23:13:49		at junit.framework.TestCase.runBare(TestCase.java:127)
build	07-Sep-2009 23:13:49		at junit.framework.TestResult$1.protect(TestResult.java:106)
build	07-Sep-2009 23:13:49		at junit.framework.TestResult.runProtected(TestResult.java:124)
build	07-Sep-2009 23:13:49		at junit.framework.TestResult.run(TestResult.java:109)
build	07-Sep-2009 23:13:49		at junit.framework.TestCase.run(TestCase.java:118)
build	07-Sep-2009 23:13:49		at junit.framework.TestSuite.runTest(TestSuite.java:208)
build	07-Sep-2009 23:13:49		at junit.framework.TestSuite.run(TestSuite.java:203)
build	07-Sep-2009 23:13:49		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
","java version ""1.6.0_14""
Java(TM) SE Runtime Environment (build 1.6.0_14-b08)
Java HotSpot(TM) Server VM (build 14.0-b16, mixed mode)

Linux",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-08 20:21:43.408,,,no_permission,,,,,,,,,,,,57462,,,Mon Sep 14 06:29:37 UTC 2009,,,,,,0|i0vt0f:,183673,,,,,,,,"08/Sep/09 05:56;mrdon;Looks like this is still an issue with trunk.  The simple fix is the change this:

         // This is a hack. The idea is to return the only registered framework
        synchronized (m_classloaderToFrameworkLists)
        {
            if (m_classloaderToFrameworkLists.isEmpty())
            {
                synchronized (m_frameworks)
                {
                    if ((m_counter == 1) && (m_frameworks.size() == 1))
                    {
                        return m_frameworks.get(0);
                    }
                }
            }
        }

to be this:

         // This is a hack. The idea is to return the only registered framework
        synchronized (m_frameworks) 
            synchronized (m_classloaderToFrameworkLists)
            {
                if (m_classloaderToFrameworkLists.isEmpty())
                {
                    if ((m_counter == 1) && (m_frameworks.size() == 1))
                    {
                        return m_frameworks.get(0);
                    }
                }
            }
        }

But that may or may not be a good idea, as I don't fully understand the context.","08/Sep/09 20:21;karlpauls;Yes, there is a possibility for deadlock if a Url is created/used while the framework is shutdown. While your simple fix would solve that it introduces another possibility for a different deadlock. 

However, I can see a fix for this - I will test it tomorrow and come back to this issue asap.",08/Sep/09 20:23;karlpauls;I can confirm that this affects 2.0.0 as well. Fix needs to go into the next release then.,09/Sep/09 12:17;karlpauls;I just commited a fix for this. Please retest and see whether it fixes the issue for you. Thanks for reporting.,14/Sep/09 06:29;mrdon;I reverted my fix and applied this one.  All builds green.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,
The features service should do a PackageAdmin.refresh() after uninstalling a feature,FELIX-1576,12435224,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,09/Sep/09 15:01,09/Sep/09 18:12,13/Mar/19 22:56,09/Sep/09 18:12,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57451,,,Wed Sep 09 18:12:36 UTC 2009,,,,,,0|i0vttb:,183803,,,,,,,,"09/Sep/09 18:12;gnt;URL: http://svn.apache.org/viewvc?rev=813062&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The JMX connector can not be registered because of a clash in the name in the RMI registry,FELIX-1575,12435200,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,09/Sep/09 11:22,09/Sep/09 11:42,13/Mar/19 22:56,09/Sep/09 11:42,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"As a simple work around, I'll try to use a single RMI instance on port 1099 but register the JMX connector under different names.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57452,,,Wed Sep 09 11:42:21 UTC 2009,,,,,,0|i0vtpb:,183785,,,,,,,,"09/Sep/09 11:42;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/assembly/src/main/distribution/text/etc/org.apache.felix.karaf.management.cfg
	M	karaf/management/src/main/resources/OSGI-INF/blueprint/karaf-management.xml
Committed r812896


A more generic mechanism need to be implemented for other ports (or even for this one).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cursor is blocked when the correct syntax is not displaed,FELIX-1253,12428240,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,cmoulliard,cmoulliard,18/Jun/09 10:38,08/Sep/09 13:51,13/Mar/19 22:56,08/Sep/09 13:51,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"When I try to update one of the bundle on Apache Karaf Snapshot (running on a windows 2000 machine) where level is beside 60, a question is displayed on the screen :

You are about to access system bundle 44.  Do you want to continue (yes/no):

If you enter 'yes' or 'no', the cursor moves to the next line otherwise no and no error is reported on the screen (see attachment). You cannot use 'enter key' and the server is waiting that you enter 'yes or no' instead of y or n by example",WINDOWS,,,,,,,,,,,,,,,,,,,,18/Jun/09 10:38;cmoulliard;update_screen_karaf.GIF;https://issues.apache.org/jira/secure/attachment/12411060/update_screen_karaf.GIF,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57766,,,2009-06-18 10:38:12.0,,,,,,0|i0vut3:,183964,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Authentication failed when using admin:connect to connect to a newly created instance,FELIX-1564,12434993,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,07/Sep/09 11:19,08/Sep/09 09:36,13/Mar/19 22:56,08/Sep/09 09:36,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57463,,,Tue Sep 08 09:36:11 UTC 2009,,,,,,0|i0vudj:,183894,,,,,,,,"08/Sep/09 09:36;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/gshell/gshell-admin/pom.xml
Committed r812412
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When dropping an empty xml file (i.e. just an empty file with an xml extension) in the deploy folder, errors are printed to the console",FELIX-1567,12435071,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,08/Sep/09 08:22,08/Sep/09 08:55,13/Mar/19 22:56,08/Sep/09 08:55,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"[Fatal Error] audit.xml:1:1: Premature end of file.
[Fatal Error] audit.xml:1:1: Premature end of file.
[Fatal Error] audit.xml:1:1: Premature end of file.
[Fatal Error] audit.xml:1:1: Premature end of file.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57460,,,Tue Sep 08 08:55:42 UTC 2009,,,,,,0|i0vtn3:,183775,,,,,,,,"08/Sep/09 08:55;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/deployer/blueprint/src/main/java/org/apache/felix/karaf/deployer/blueprint/BlueprintDeploymentListener.java
	M	karaf/deployer/features/src/main/java/org/apache/felix/karaf/deployer/features/FeatureDeploymentListener.java
	M	karaf/deployer/spring/src/main/java/org/apache/felix/karaf/deployer/spring/SpringDeploymentListener.java
Committed r812397
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible NPE when uninstalling a feature,FELIX-1566,12435068,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,08/Sep/09 07:46,08/Sep/09 08:34,13/Mar/19 22:56,08/Sep/09 08:34,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"karaf@root> features:uninstall nmr-audit 
java.lang.NullPointerException
	at org.apache.felix.karaf.features.internal.FeaturesServiceImpl.uninstallFeature(FeaturesServiceImpl.java:304)
	at org.apache.felix.karaf.features.internal.FeaturesServiceImpl.uninstallFeature(FeaturesServiceImpl.java:287)
	at org.apache.felix.karaf.features.command.UninstallFeatureCommand.doExecute(UninstallFeatureCommand.java:35)
	at org.apache.felix.karaf.features.command.FeaturesCommandSupport.doExecute(FeaturesCommandSupport.java:39)
	at org.apache.felix.karaf.gshell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:41)
	at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
	at org.apache.felix.gogo.runtime.shell.CommandProxy.execute(CommandProxy.java:45)
	at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:211)
	at org.apache.felix.gogo.runtime.shell.Closure.executeStatement(Closure.java:146)
	at org.apache.felix.gogo.runtime.shell.Pipe.run(Pipe.java:91)
	at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:75)
	at org.apache.felix.gogo.runtime.shell.CommandSessionImpl.execute(CommandSessionImpl.java:71)
	at org.apache.felix.karaf.gshell.console.jline.Console.run(Console.java:115)
	at java.lang.Thread.run(Thread.java:637)
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57461,,,Tue Sep 08 08:34:19 UTC 2009,,,,,,0|i0vtmv:,183774,,,,,,,,"08/Sep/09 08:34;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java
Committed r812386
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URL Handlers performance regression due to service lookups,FELIX-1138,12425050,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,rickhall,rickhall,10/May/09 21:13,01/Sep/09 20:06,13/Mar/19 22:56,01/Sep/09 20:06,framework-1.6.1,,,,framework-2.0.0,,Framework,,,0,,,,,,"URL stream/content handler lookup is now a bit slower since there were changes to no longer cache services using a tracker, but to look them up in the service registry each time one is needed. We should probably listen for service events so we can cache stream/contant handler service objects.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-01 20:06:56.602,,,no_permission,,,,,,,,,,,,57879,,,Tue Sep 01 20:06:56 UTC 2009,,,,,,0|i0vu8n:,183872,,,,,,,,01/Sep/09 20:06;karlpauls;Speed-up URL stream/content handler lookup by using a tracker again. The difference to the previous tracker is that we now create and maintain the trackers inside the framework so don't need to do classloads when using them.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Manually deleting an instance breaks admin:list,FELIX-1517,12433686,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,21/Aug/09 13:26,26/Aug/09 14:15,13/Mar/19 22:56,26/Aug/09 14:15,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"When I delete an instance manually, by simply deleting the subdirectory from the instances directory, it breaks the admin:list command.

When I run that command afterwards I get this:
karaf@root> admin:list
  Port   State       Pid  Name
pipe: java.io.FileNotFoundException: K:\assembly\target\apache-felix-karaf-1.2.0
-SNAPSHOT\instances\too\etc\org.apache.felix.karaf.shell.cfg (The system cannot
find the path specified)
java.io.FileNotFoundException: K:\assembly\target\apache-felix-karaf-1.2.0-SNAPS
HOT\instances\too\etc\org.apache.felix.karaf.shell.cfg (The system cannot find t
he path specified)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.<init>(FileInputStream.java:106)
        at org.apache.felix.karaf.gshell.admin.internal.InstanceImpl.getPort(InstanceImpl.java:76)
        at org.apache.felix.karaf.gshell.admin.internal.commands.ListCommand.doExecute(ListCommand.java:42)
        at org.apache.felix.karaf.gshell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:41)
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)
        at org.apache.felix.gogo.runtime.shell.CommandProxy.execute(CommandProxy.java:45)
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:208)
        at org.apache.felix.gogo.runtime.shell.Closure.executeStatement(Closure.java:147)
        at org.apache.felix.gogo.runtime.shell.Pipe.run(Pipe.java:91)
        at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:78)
        at org.apache.felix.gogo.runtime.shell.CommandSessionImpl.execute(CommandSessionImpl.java:71)
        at org.apache.felix.karaf.gshell.console.jline.Console.run(Console.java:115)
        at java.lang.Thread.run(Thread.java:595)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-26 14:15:44.975,,,no_permission,,,,,,,,,,,,57509,,,Wed Aug 26 14:15:44 UTC 2009,,,,,,0|i0vszj:,183669,,,,,,,,"26/Aug/09 14:15;gnt;URL: http://svn.apache.org/viewvc?rev=808019&view=rev
Log:
FELIX-1517 and FELIX-1528: use a defined location for the storage of the list of managed instances and avoid an exception if one instance has been deleted

Modified:
   felix/trunk/karaf/gshell/gshell-admin/src/main/java/org/apache/felix/karaf/gshell/admin/AdminServiceMBean.java
   felix/trunk/karaf/gshell/gshell-admin/src/main/java/org/apache/felix/karaf/gshell/admin/Instance.java
   felix/trunk/karaf/gshell/gshell-admin/src/main/java/org/apache/felix/karaf/gshell/admin/internal/AdminServiceImpl.java
   felix/trunk/karaf/gshell/gshell-admin/src/main/java/org/apache/felix/karaf/gshell/admin/internal/AdminServiceMBeanImpl.java
   felix/trunk/karaf/gshell/gshell-admin/src/main/java/org/apache/felix/karaf/gshell/admin/internal/InstanceImpl.java
   felix/trunk/karaf/gshell/gshell-admin/src/main/resources/OSGI-INF/blueprint/gshell-admin.xml
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Entering an illegal command has an unusual effect,FELIX-1515,12433679,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,21/Aug/09 12:48,25/Aug/09 06:44,13/Mar/19 22:56,25/Aug/09 06:44,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"When I enter a command that is not understood, Karaf simply echos this command. This is unusual for a command line interpreter. It would be better to display an error message.",Windows,,,,,,,,,,,,,,FELIX-1325,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-21 13:55:59.607,,,no_permission,,,,,,,,,,,,57511,,,Tue Aug 25 06:44:52 UTC 2009,,,,,,0|i0vtun:,183809,,,,,,,,21/Aug/09 13:55;gnt;This problem is capture as part of FELIX-1325,25/Aug/09 06:44;gnt;This is now fixed by using the latest gogo snapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf Failover does not work with PostgreSQL and Oracle,FELIX-1519,12433760,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ffang,njiang,njiang,22/Aug/09 03:31,25/Aug/09 03:25,13/Mar/19 22:56,25/Aug/09 03:25,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"if you configure FUSE ESB 4 to use a JDBC lock for failover (i.e. the following configuration) then ServiceMix will fail with the error:
Could not obtain lock: FATAL: database ""postgres;create=true"" does not exist
Configuration (in system.properties): 
[[
servicemix.lock=true
servicemix.lock.class=org.apache.servicemix.kernel.main.DefaultJDBCLock
servicemix.lock.level=50
servicemix.lock.delay=10

servicemix.lock.jdbc.url=jdbc:postgresql://localhost/postgres
servicemix.lock.jdbc.driver=org.postgresql.Driver
servicemix.lock.jdbc.user=postgres
servicemix.lock.jdbc.password=postgres

servicemix.lock.jdbc.table=SERVICEMIX_LOCK
servicemix.lock.jdbc.clustername=smx4
servicemix.lock.jdbc.timeout=30
]]

same with the ORACLE",,,,,,,,,,,,,,,,,,,,,22/Aug/09 03:32;njiang;FELIX-1519.patch;https://issues.apache.org/jira/secure/attachment/12417353/FELIX-1519.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-25 03:25:49.413,,,no_permission,,,,,,,,,,,,57507,,,Tue Aug 25 03:25:49 UTC 2009,,,,,,0|i0vszz:,183671,,,,,,,,"25/Aug/09 03:25;ffang;apply patch on behalf of Willem with thanks
http://svn.apache.org/viewvc?rev=807462&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Child instances use stuff from the /etc directory in the root,FELIX-1516,12433682,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,bosschaert,bosschaert,21/Aug/09 13:06,24/Aug/09 21:02,13/Mar/19 22:56,24/Aug/09 21:02,karaf-1.0.0,,,,,,Karaf,,,0,,,,,,"I create a new instance with admin:create.
Then, to make sure it only uses its own configuration, I temporary rename the etc directory in the parent.

Now I start up the child instance and get an exception:
K:\assembly\target\apache-felix-karaf-1.2.0-SNAPSHOT\instances\too>bin\karaf.bat

karaf.bat: Ignoring predefined value for KARAF_HOME
java.io.FileNotFoundException: K:\assembly\target\apache-felix-karaf-1.2.0-SNAPSHOT\etc\config.properties
        at org.apache.felix.karaf.main.Bootstrap.updateClassLoader(Bootstrap.java:57)
        at org.apache.felix.karaf.main.Bootstrap.main(Bootstrap.java:38)
",Windows,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-24 21:02:13.85,,,no_permission,,,,,,,,,,,,57510,,,Mon Aug 24 21:02:13 UTC 2009,,,,,,0|i0vtuv:,183810,,,,,,,,"24/Aug/09 21:02;gnt;URL: http://svn.apache.org/viewvc?rev=807374&view=rev
Log:
FELIX-1516: Child instances use stuff from the /etc directory in the root

Modified:
   felix/trunk/karaf/main/src/main/java/org/apache/felix/karaf/main/Bootstrap.java
   felix/trunk/karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
   felix/trunk/karaf/main/src/main/java/org/apache/felix/karaf/main/Utils.java
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrapper:install and admin:create prints old ansi output that need to be converted to real ansi ,FELIX-1468,12432705,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,10/Aug/09 17:01,17/Aug/09 15:11,13/Mar/19 22:56,17/Aug/09 15:11,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57556,,,Mon Aug 17 15:11:50 UTC 2009,,,,,,0|i0vu9b:,183875,,,,,,,,"11/Aug/09 07:27;gnt;URL: http://svn.apache.org/viewvc?rev=803011&view=rev
",13/Aug/09 07:20;gnt;The shell:info command has the same problem too.,"17/Aug/09 15:11;gnt;URL: http://svn.apache.org/viewvc?rev=805006&view=rev
Log:
FELIX-1468: The shell:info command use the old @|bold syntax for ansi

Modified:
   felix/trunk/karaf/gshell/gshell-commands/src/main/java/org/apache/felix/karaf/gshell/commands/InfoAction.java
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Better handling of configurations from the deployer and feature service,FELIX-1472,12432795,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,11/Aug/09 16:10,11/Aug/09 16:22,13/Mar/19 22:56,11/Aug/09 16:22,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57552,,,Tue Aug 11 16:22:12 UTC 2009,,,,,,0|i0vt7r:,183706,,,,,,,,"11/Aug/09 16:22;gnt;Related to https://issues.apache.org/jira/browse/FELIX-895 and https://issues.apache.org/jira/browse/FELIX-1036

URL: http://svn.apache.org/viewvc?rev=803185&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[features-maven-plugin:add-features-to-repo] Incorrect parsing of pax mvn url string,FELIX-1222,12427686,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,dsklyut,dsklyut,11/Jun/09 21:07,10/Aug/09 08:36,13/Mar/19 22:56,10/Aug/09 08:36,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"features-maven-plugin:add-features-to-repo incorrectly parses pax url mvn string. http://wiki.ops4j.org/display/paxurl/Mvn+Protocol

Currently plugin thinks: mvn-uri := 'mvn:' [ repository-url '!' ] group-id '/' artifact-id [ '/' [version] [ '/' [classifier] [ '/' type ] ] ] ]
Correct:                         mvn-uri := 'mvn:' [ repository-url '!' ] group-id '/' artifact-id [ '/' [version] [ '/' [type] [ '/' classifier ] ] ] ]

type and classifier are switched.
","JDK 1.6/15, OSX",1800,1800,,0%,1800,1800,,,,,,,,,,,,,,11/Jun/09 21:08;dsklyut;AddFeaturesToRepoMojo.txt;https://issues.apache.org/jira/secure/attachment/12410429/AddFeaturesToRepoMojo.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-08-10 08:36:42.732,,,no_permission,,,,,,,,,,,,57796,,,Mon Aug 10 08:36:42 UTC 2009,,,,,,0|i0kpin:,118951,,,,,,,,11/Jun/09 21:08;dsklyut;Attaching patch,"10/Aug/09 08:36;gnt;URL: http://svn.apache.org/viewvc?rev=802693&view=rev
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cat Command fails to display ?wsdl files ,FELIX-1100,12424151,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,edelln,edelln,29/Apr/09 11:07,07/Aug/09 10:30,13/Mar/19 22:56,07/Aug/09 10:30,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"If you have installed a webservice and you attempt to display the wsdl file using query parameters it fails

smx@root:/> cat http://localhost:8080/cxf/HelloWorld?wsdl
ERROR CommandLineExecutionFailed: org.apache.geronimo.gshell.command.CommandExce
ption: org.apache.commons.vfs.FileSystemException: Could not determine the type
of file ""http://localhost:8080/cxf/HelloWorld"".


The problem here is that the

Kernel uses the latest release of geronimo-gshell which was changed since the last release and this uses the apache commons vfs component for its file support but I am not sure that the vfs component supports query parameters as its from using the resolve in org.apache.commons.vfs code that it returns with the URL without the extension so it then can't determine the file type. 
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-07 10:30:07.295,,,no_permission,,,,,,,,,,,,57913,,,Fri Aug 07 10:30:07 UTC 2009,,,,,,0|i0vu2v:,183846,,,,,,,,07/Aug/09 10:30;gnt;I think this one is solved because we don't use commons-vfs anymore so http urls are handled correctly.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
'servicemix server' and servicemix client' not working properly on windows,FELIX-1458,12432498,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jbonofre,jbonofre,07/Aug/09 07:47,07/Aug/09 10:21,13/Mar/19 22:56,07/Aug/09 10:03,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"The karaf.bat script on windows is incorrectly quoting the karaf.startLocalConsole and karaf.startRemoteShell system properties when the 'client' or 'server' command line option is used. This results in errors such as:

 unsatisfied dependencies: none
org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'sshServerFactory' defined in URL [bundle://8.0:0/META-INF/spring/gshell-remote.xml]: Could not resolve placeholder 'karaf.startRemoteShell'
at org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.processProperties(PropertyPlaceholderConfigurer.java:268)
at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:75)
at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.invokeBeanFactoryPostProcessors(AbstractDelegatedExecutionApplicationContext.java:475)",Windows,,,,,,,,,,FELIX-1412,,,,,,,,,,07/Aug/09 07:49;jbonofre;FELIX-1458.patch;https://issues.apache.org/jira/secure/attachment/12415828/FELIX-1458.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57566,,,Fri Aug 07 07:49:06 UTC 2009,,,,,,0|i0vu8v:,183873,,,,,,,,07/Aug/09 07:49;jbonofre;Here is the patch to correct (just remove the quotes).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a web console plugin to have access to the gogo shell,FELIX-1431,12431792,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,30/Jul/09 11:59,07/Aug/09 10:19,13/Mar/19 22:56,07/Aug/09 10:19,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-31 06:45:15.528,,,no_permission,,,,,,,,,,,,57593,,,Fri Aug 07 10:19:51 UTC 2009,,,,,,0|i0komv:,118808,,,,,,,,"31/Jul/09 06:45;fmeschbe;Currently the web console has a ""legacy Felix Shell"" plugin. Would it be a possibility to merge the new gogo support into the existing plugin and decide on the fly which kind of shell to use ?","31/Jul/09 10:03;gnt;I'll have a look at that.
I have the implementation done, but i'll see how it can be integrated into the core web app.",07/Aug/09 10:19;gnt;I've committed my work in karaf so far because there are a few dependencies on other things (mostly around jline support).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf console is garbled on Windows,FELIX-1315,12429976,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,cmacnaug,cmacnaug,09/Jul/09 20:17,27/Jul/09 08:36,13/Mar/19 22:56,27/Jul/09 08:36,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"The karaf console is coming up garbled on Windows (because WindowsTerminal doesn't have ANSI support), it also doesn't accept input properly. It looks like:

←[36m       __ __                  ____  ←[0m
←[36m      / //_/____ __________ _/ __/  ←[0m
←[36m     / ,<  / __ `/ ___/ __ `/ /_    ←[0m
←[36m    / /| |/ /_/ / /  / /_/ / __/    ←[0m
←[36m   /_/ |_|\__,_/_/   \__,_/_/     ←[0m

←[1mApache Felix Karaf←[0m (1.2.0-SNAPSHOT)

Type '←[1mhelp←[0m' for more information.

←[1mkaraf←[0m@root:←[1m←[0m>


Looks related to changes for https://issues.apache.org/jira/browse/FELIX-1312.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-10 06:59:03.556,,,no_permission,,,,,,,,,,,,57707,,,Mon Jul 27 08:36:13 UTC 2009,,,,,,0|i0vtzr:,183832,,,,,,,,"10/Jul/09 06:59;gnt;URL: http://svn.apache.org/viewvc?rev=792818&view=rev

Could you svn up and try again ? It should work better, at least for the ANSI support.
",27/Jul/09 08:36;gnt;Please reopen if you still have issues.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with import/export version of the package : org.osgi.util.tracker in Apache Felix Karaf,FELIX-1361,12430506,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,cmoulliard,cmoulliard,15/Jul/09 15:24,27/Jul/09 08:35,13/Mar/19 22:56,27/Jul/09 08:35,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"Hi,

The last build of Apache Felix Karaf does not work properly.

{code}
karaf@root> karaf@root> headers 18

org.osgi.impl.bundle.jmx (18)
-----------------------------
Bnd-LastModified = 1247066364416
Bundle-Activator = org.osgi.impl.bundle.jmx.Activator
Bundle-Category = osgi
Bundle-Copyright = Copyright (c) OSGi Alliance (2000, 2009). All Rights Reserved.
Bundle-Description = OSGi JMX Command n' Control Reference Implementation by Oracle Corporation.
Bundle-ManifestVersion = 2
Bundle-Name = org.osgi.impl.bundle.jmx
Bundle-RequiredExecutionEnvironment = J2SE-1.5
Bundle-SymbolicName = org.osgi.impl.bundle.jmx
Bundle-Vendor = OSGi Alliance
Bundle-Version = 4.2.0.200907080519
Created-By = 1.6.0_13 (Apple Inc.)
Export-Package = org.osgi.jmx.framework;uses:=""javax.management.openmbean"";version=""1.0"",org.osgi.jmx.useradmin;uses:=""javax.management.openmbean"";ver
sion=""1.0"",org.osgi.jmx;version=""1.0"",org.osgi.jmx.codec;uses:=""javax.management.openmbean,org.osgi.jmx.framework,org.osgi.jmx.useradmin,org.osgi.serv
ice.useradmin,org.osgi.service.startlevel,org.osgi.framework,org.osgi.service.packageadmin"";version=""1.0"",org.osgi.jmx.provisioning;uses:=""javax.manag
ement.openmbean"";version=""1.0"",org.osgi.jmx.cm;uses:=""javax.management.openmbean"";version=""1.0"",org.osgi.jmx.permissionadmin;version=""1.0""
Import-Package = javax.management,javax.management.openmbean,org.osgi.framework;version=""[1.5,2)"",org.osgi.jmx;version=""[1.0,2)"",org.osgi.jmx.cm;versi
on=""[1.0,2)"",org.osgi.jmx.codec;version=""[1.0,2)"",org.osgi.jmx.framework;version=""[1.0,2)"",org.osgi.jmx.permissionadmin;version=""[1.0,2)"",org.osgi.jmx
.provisioning;version=""[1.0,2)"",org.osgi.jmx.useradmin;version=""[1.0,2)"",org.osgi.service.cm;resolution:=optional;version=""[1.2,2)"",org.osgi.service.p
ackageadmin;resolution:=optional;version=""[1.2,2)"",org.osgi.service.permissionadmin;resolution:=optional;version=""[1.2,2)"",org.osgi.service.provisioni
ng;resolution:=optional;version=""[1.2,2)"",org.osgi.service.startlevel;resolution:=optional;version=""[1.1,2)"",org.osgi.service.useradmin;resolution:=op
tional;version=""[1.1,2)"",org.osgi.util.tracker;version=""[1.4,2)""
Manifest-Version = 1.0
Private-Package = org.osgi.impl.bundle.jmx.permissionadmin,org.osgi.impl.bundle.jmx.provisioning,org.osgi.impl.bundle.jmx.useradmin,org.osgi.impl.bund
le.jmx,org.osgi.impl.bundle.jmx.cm,org.osgi.impl.bundle.jmx.framework
Tool = Bnd-0.0.338
karaf@root> karaf@root>
{code}

The bundle 18 requires the version between 1.4 and 2 of the following package org.osgi.util.tracker but Apache Felix used export only the version 1.3.3

{code}
System Bundle (0)
-----------------
Bundle-Description = This bundle is system specific; it implements various system services.
Bundle-ManifestVersion = 2
Bundle-Name = System Bundle
Bundle-SymbolicName = org.apache.felix.framework
Bundle-Version = 1.9.0.SNAPSHOT
Export-Package = org.osgi.framework; version=""1.5.0"", org.osgi.framework.launch; version=""1.0.0"", org.osgi.framework.hooks.service; version=""1.0.0"", o
rg.osgi.service.packageadmin; version=""1.2.0"", org.osgi.service.startlevel; version=""1.1.0"", org.osgi.service.url; version=""1.0.0"", org.osgi.util.trac
ker; version=""1.3.3""
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-27 08:35:39.814,,,no_permission,,,,,,,,,,,,57663,,,Mon Jul 27 08:35:39 UTC 2009,,,,,,0|i0vqzz:,183347,,,,,,,,"27/Jul/09 08:35;gnt;It's working now.
I've also reverted the default osgi framework for Karaf back to Felix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring deployer fails when bean class is from java.* packages,FELIX-1274,12428758,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,mproch,mproch,24/Jun/09 09:48,27/Jul/09 08:28,13/Mar/19 22:56,27/Jul/09 08:28,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"Spring deployer makes Import-Package declaration for all bean classes it finds it xml file. However, such declaration is prohibited for java.* packages, resulting in exception:

Failed to process: /home/mproch/stuff/smx4/apache-servicemix-kernel-1.1.0/data/generated-bundles/test-context.xml.jar. Reason: org.osgi.framework.BundleException: Could not create bundle object.
org.osgi.framework.BundleException: Could not create bundle object.
        at org.apache.felix.framework.Felix.installBundle(Felix.java:2158)
        at org.apache.felix.framework.Felix.installBundle(Felix.java:2005)
        at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:130)
        at org.apache.servicemix.kernel.filemonitor.FileMonitor.deployBundle(FileMonitor.java:383)
        at org.apache.servicemix.kernel.filemonitor.FileMonitor.onFilesChanged(FileMonitor.java:290)
        at org.apache.servicemix.kernel.filemonitor.FileMonitor$1.filesChanged(FileMonitor.java:151)
        at org.apache.servicemix.kernel.filemonitor.Scanner.reportBulkChanges(Scanner.java:431)
        at org.apache.servicemix.kernel.filemonitor.Scanner.reportDifferences(Scanner.java:327)
        at org.apache.servicemix.kernel.filemonitor.Scanner.scan(Scanner.java:261)
        at org.apache.servicemix.kernel.filemonitor.Scanner$1.run(Scanner.java:221)
        at java.util.TimerThread.mainLoop(Timer.java:512)
        at java.util.TimerThread.run(Timer.java:462)
Caused by: org.osgi.framework.BundleException: Importing java.* packages not allowed: java.lang
        at org.apache.felix.framework.util.manifestparser.ManifestParser.<init>(ManifestParser.java:192)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.<init>(ModuleImpl.java:153)
        at org.apache.felix.framework.BundleImpl.createModule(BundleImpl.java:954)
        at org.apache.felix.framework.BundleImpl.<init>(BundleImpl.java:85)
        at org.apache.felix.framework.Felix.installBundle(Felix.java:2102)
        ... 11 more
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-27 08:28:21.012,,,no_permission,,,,,,,,,,,,57745,,,Mon Jul 27 08:28:21 UTC 2009,,,,,,0|i0vtxr:,183823,,,,,,,,"27/Jul/09 08:28;gnt;It should be fixed now.

Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/deployer/blueprint/src/main/java/org/apache/felix/karaf/deployer/blueprint/BlueprintTransformer.java
	M	karaf/deployer/blueprint/src/test/java/org/apache/felix/karaf/deployer/blueprint/BlueprintDeploymentListenerTest.java
	M	karaf/deployer/spring/src/main/java/org/apache/felix/karaf/deployer/spring/SpringTransformer.java
	M	karaf/deployer/spring/src/test/resources/test.xml
Committed r798076
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Authentication failed connecting via ssh on Windows,FELIX-1320,12430190,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,jvazquez,jvazquez,13/Jul/09 09:22,27/Jul/09 08:21,13/Mar/19 22:56,27/Jul/09 08:21,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"As discussed in [1], an authentication error happens connecting to karaf via ssh on windows. This has been tested using both PuTTY and OpenSSH.

[1] http://markmail.org/thread/iordmruvniqfc3v4","Java version: 1.5.0_14
Default locale: es_ES, platform encoding: Cp1252
OS name: ""windows vista"" version: ""6.0"" arch: ""x86"" Family: ""windows"" ",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-27 08:21:43.12,,,no_permission,,,,,,,,,,,,57703,,,Mon Jul 27 08:21:43 UTC 2009,,,,,,0|i0vstr:,183643,,,,,,,,27/Jul/09 08:21;gnt;I think the problem has been fixed.  Please reopen if you have still problems.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Karaf] There's no 'help' command,FELIX-1375,12430713,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,fdiotalevi,fdiotalevi,16/Jul/09 21:49,27/Jul/09 08:19,13/Mar/19 22:56,27/Jul/09 08:19,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"When Karaf starts, it logs ""Type 'help' for more information"", but there's no such command.
As suggested in the mailing list, the simplest way to fix the problem is to log ""Hit <tab> for more information""


        __ __                  ____      
       / //_/____ __________ _/ __/      
      / ,<  / __ `/ ___/ __ `/ /_        
     / /| |/ /_/ / /  / /_/ / __/        
    /_/ |_|\__,_/_/   \__,_/_/         

  Apache Felix Karaf (1.2.0-SNAPSHOT)

Type 'help' for more information.

karaf@root> help
help
karaf@root> 
karaf@root> 



",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-27 08:19:37.255,,,no_permission,,,,,,,,,,,,57649,,,Mon Jul 27 08:19:37 UTC 2009,,,,,,0|i0vswn:,183656,,,,,,,,"27/Jul/09 08:19;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/gshell/gshell-console/src/main/filtered-resources/org/apache/felix/karaf/gshell/console/branding.properties
Committed r798073
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to create new ConfigAdmin PID through karaf console,FELIX-1391,12431034,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,21/Jul/09 15:27,21/Jul/09 15:30,13/Mar/19 22:56,21/Jul/09 15:30,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"When creating a new PID through the the Karaf console, you get ""No configuration is being edited. Run the edit command first"" when trying to set a property value.

karaf@root> config:edit my.new.pid
karaf@root> config:propset key value
No configuration is being edited. Run the edit command first

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57633,,,Tue Jul 21 15:30:59 UTC 2009,,,,,,0|i0vsv3:,183649,,,,,,,,21/Jul/09 15:30;gertvanthienen;Fixed in http://svn.apache.org/viewvc?view=rev&revision=796348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System bundle does still not correctly handle (export) package attributes,FELIX-1123,12424636,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,alexberger,alexberger,05/May/09 20:13,30/Jun/09 23:21,13/Mar/19 22:56,13/May/09 20:40,framework-1.6.0,,,,framework-2.0.0,,Framework,Specification compliance,,0,,,,,,"This issue is related to the follwing mailing list thread:
http://www.mail-archive.com/users@felix.apache.org/msg03403.html

Section 3.5.5 of the OSGi core specification (4.1) states:

  The Framework will automatically associate each package export definition
  with the following attributes:

    • bundle-symbolic-name - The bundle symbolic name of the exporting
      bundle. In the case of a Fragment bundle, this is the host bundle's symbolic
      name.
    • bundle-version - The bundle version of the exporting bundle. In the case
      of a Fragment bundle, this is the host bundle's version.
      
And section 3.6.5 specifies how these attributes must be applied when resolving
packages.

Using Apache Felix Version 1.4.1 I have encountered the following behaviour 
when using different approaches to import packages exported by the system bundle
(org.apache.felix.framework respectively system.bundle) when using attribute
matching:

For the following test cases the bundle manifest of the system bundle looks like
this:

  Bundle-Version = 1.4.1
  Bundle-Name = System Bundle
  Bundle-SymbolicName = org.apache.felix.framework
  Export-Package = my.package; provider=""xxx"", ...

Test Case 1:

   Import-Package: my.package;bundle-symbolic-name=""system.bundle""

 Result: Package my.package could not be resolved!
 
 
Test Case 2:

   Import-Package: my.package;bundle-symbolic-name=""org.apache.felix.framework""

 Result: Package my.package could not be resolved!
 
 
Test Case 3:

   Import-Package: my.package;provider=""xxx""

 Result: Package my.package was resolved successfully.
 
 
Test Case 4:

   DynamicImport-Package: *;bundle-symbolic-name=""system.bundle""

 Result: Package my.package could not be resolved (class not found at runtime)!
 
 
Test Case 2:

   DynamicImport-Package: *;bundle-symbolic-name=""org.apache.felix.framework""

 Result: Package my.package could not be resolved (class not found at runtime)!
 
 
Test Case 3:

   DynamicImport-Package: my.package;provider=""xxx""

 Result: Package my.package was resolved successfully (at runtime).

The same behaviour is also true for packages that are added to the list of 
exported packages of the system bundle by extension bundles (fragment bundles 
with extension:=framework). For such packages another problem arises as the 
matching attributes as defined in the Export-Package header of the extension 
bundle are not taken over by the system bundle. So for example if the extension
bundle has the following export:

   Export-Package my.package;provider=""xxx"";version=""1.0.0""

Then the system bundle seems to discard the attribute ""provider"" but respects the
version attribute:

   Export-Package my.package;version=""1.0.0""

So it looks as if the framework should be fixed to always add the automatic attributes to 
exported packages (as defined in 3.5.5). Furthermore it should also make sure that all
other (non automatic) attributes are respected especially for exorts that are added by
extension bundles.
","java version ""1.6.0_07""
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
Java HotSpot(TM) 64-Bit Server VM (build 10.0-b23, mixed mode)
SunOS castor 5.10 Generic_137111-08 sun4u sparc SUNW,Sun-Fire-V890",,,,,,,,,,FELIX-969,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-05 20:18:37.522,,,no_permission,,,,,,,,,,,,57894,,,Wed May 13 20:40:43 UTC 2009,,,,,,0|i0vt5r:,183697,,,,,,,,05/May/09 20:18;rickhall;Refer to FELIX-969 for a test case showing a failure.,13/May/09 20:40;rickhall;I just committed a patch to trunk that now correctly assigns BSN/BV to extension bundle exports when attached to the system bundle. My own tests verified it was working. Please confirm and close if satisfied. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to log into ServiceMix Kernel using Windows putty SSH client,FELIX-1087,12424066,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,28/Apr/09 17:59,18/Jun/09 21:22,13/Mar/19 22:56,18/Jun/09 21:22,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,See https://issues.apache.org/jira/browse/SSHD-15,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57920,,,2009-04-28 17:59:32.0,,,,,,0|i0vu1z:,183842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stange classloading issues when using compendium services,FELIX-1161,12425611,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,dsklyut,dsklyut,15/May/09 17:52,18/Jun/09 21:19,13/Mar/19 22:56,18/Jun/09 21:19,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"Problem is discussed here: http://www.nabble.com/-karaf--Equinox-integration-problem---and-possible-solution-to23559788.html

Looks like an issues comes up when using compendium services with springDM and equinox.
","karaf-1.2.0-SNAPSHOT, OSX, Java5",,,,,,,,,,,,,,,,,,,,15/May/09 18:30;dsklyut;karaf.issue.tgz;https://issues.apache.org/jira/secure/attachment/12408271/karaf.issue.tgz,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-18 21:19:01.858,,,no_permission,,,,,,,,,,,,57857,,,Thu Jun 18 21:19:01 UTC 2009,,,,,,0|i0vu8f:,183871,,,,,,,,"15/May/09 18:30;dsklyut;Attached is a maven project to reproduce a problem.
There are number of profiles in that project:
1. with-compendium - generates a bundle that uses springdm compendium extensions
2. without-compendium - opposite of #1
3. spring-new - pulls in extra springframework jars with new (org.springframework.*) artifact format.  see FELIX-1150 for patches.  By default it builds with old artifact name (i.e. spring-*).
5. karaf - profile to generate a zip file for deployment into $karaf_home/deploy

For testing:
1. Build karaf from trunk ( I haven't tried existing builds)
2. Build an attached karaf.issue maven project
   mvn clean install -Pkaraf,with-compendium
3. start karaf
4. unzip ${karaf.issue.home}/provision/target/deploy.zip to $karaf_home/deploy

Should see:
Exception in thread ""SpringOsgiExtenderThread-32"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in URL [bundleentry://75.fwk5663340/META-INF/spring/applicationContext.xml]: Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/hibernate/JDBCException

and Spring AppContext for Hibernate bundle (look for Hibernate (1.0.0-SNAPSHOT) in osgi/list) will not be started.

To test without compendium services:
1. Build karaf from trunk ( I haven't tried existing builds)
2. Build an attached karaf.issue maven project
   mvn clean install -Pkaraf,without-compendium
3. start karaf
4. unzip ${karaf.issue.home}/provision/target/deploy.zip to $karaf_home/deploy

Deploys fine and all springcontexts are started and services are published.

Note:  I have FELIX-1150 incorporated.  If that is true for you or you have to test with 2.5.6.SEC01 run above maven with spring-new profile.","18/Jun/09 21:19;gnt;The compendium jar has been removed from the karaf distribution, so I think it should solve the problems.
Please reopen if needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"KARAF: Locking error in DefaultJDBCLock, also contains an eventual OutOfMemory error on locked processes.",FELIX-1192,12426833,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,ccustine,jgoodyear,jgoodyear,01/Jun/09 16:49,18/Jun/09 00:32,13/Mar/19 22:56,18/Jun/09 00:32,karaf-1.0.0,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"If you configure servicemix to use the DefaultJDBCLock like so:


karaf.lock=true
karaf.lock.class=org.apache.felix.karaf.main.DefaultJDBCLock
karaf.lock.level=50
karaf.lock.delay=1000
karaf.lock.jdbc.url=jdbc:mysql://localhost:3306/somedatabase
karaf.lock.jdbc.driver=org.apache.derby.jdbc.ClientDriver
karaf.lock.jdbc.user=root
karaf.lock.jdbc.password=
karaf.lock.jdbc.table=KARAF_LOCK
karaf.lock.jdbc.clustername=mycluster
karaf.lock.jdbc.timeout=30


and simply run it you'll get an OutOfMemory error printed to the console within an hour or so. It appears that the offending code is here:


/**
     * isAlive - test if lock still exists.
     */
    public boolean isAlive() throws Exception {
        if (lockConnection == null) { return false; }
        PreparedStatement statement = null;
        try {
            lockConnection.setAutoCommit(false);
            statements.init(lockConnection);
            String sql = statements.testLockTableStatus();
            statement = lockConnection.prepareStatement(sql);
            statement.execute();
        } catch (Exception ex) {
            return false;
        } 
        return true;
    }


the try/catch statement needs a finally to ensure the PreparedStatement is cleaned up:


} finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException e) {
                         //log failure here...
                }
            }
        }


We should also put some unit testing in place for this class and ensure that it doesn't leak any other resources, JDBC or otherwise as this class is used to set up master/slave HA which is an important use case to support.

Also of note is that the container level locking mechanism seems to not be honored by slave processes. In the Main#lock method if the lock is enabled we should only start up to the configured lock level, otherwise start Karaf up to the default lock level.
",All,,,,,,,,,,,,,,,,,,,,01/Jun/09 16:54;jgoodyear;felix1192.patch;https://issues.apache.org/jira/secure/attachment/12409570/felix1192.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-18 00:32:18.314,,,no_permission,,,,,,,,,,,,57826,,,Thu Jun 18 00:32:18 UTC 2009,,,,,,0|i0vt3r:,183688,,,,,,,,"01/Jun/09 16:54;jgoodyear;File: felix1192.patch

Contains modifications to:

assembly/pom.xml
main/src/main/java/org/apache/felix/karaf/main/DefaultJDBCLock.java
main/src/main/java/org/apache/felix/karaf/main/Main.java
main/src/main/java/org/apache/felix/karaf/main/Statements.java, and
main/pom.xml

Please note that this patch incorporates modifications from FELIX-1080 for improved logging support.


","18/Jun/09 00:32;ccustine;Patch applied, with thanks to Jamie Goodyear.  I made a few small adjustments to the patch and removed the logging calls related to FELIX-1180 because we going to revisit that issue at a later date.  Some calls were removed and some were converted to System.err.println, etc.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix fails to start using J9 JVM,FELIX-893,12412872,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,naddaf,naddaf,20/Jan/09 22:39,16/Jun/09 20:58,13/Mar/19 22:56,16/Jun/09 20:58,framework-1.4.1,,,,framework-2.0.0,,Framework,,,0,,,,,,"I am using the following command line:

j9 -jcl:foun11 -jar bin/felix.jar 

and that throws the following exception:

Welcome to Felix.
=================

java.lang.reflect.InvocationTargetException
        at java.lang.reflect.AccessibleObject.invokeL(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Caused by: java.lang.NullPointerException
        at java.net.URLStreamHandler.toExternalForm(Unknown Source)
        ... 29 more
java.lang.IllegalStateException: Stream handler unavailable due to: null
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Auto-properties install: org.osgi.framework.BundleException: Unable to cache bundle: file:bundle/org.apache.felix.shell-1.0.2.jar
java.lang.reflect.InvocationTargetException
        at java.lang.reflect.AccessibleObject.invokeL(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Caused by: java.lang.NullPointerException
        at java.net.URLStreamHandler.toExternalForm(Unknown Source)
        ... 29 more
java.lang.IllegalStateException: Stream handler unavailable due to: null
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Auto-properties install: org.osgi.framework.BundleException: Unable to cache bundle: file:bundle/org.apache.felix.shell.tui-1.0.2.jar
java.lang.reflect.InvocationTargetException
        at java.lang.reflect.AccessibleObject.invokeL(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Caused by: java.lang.NullPointerException
        at java.net.URLStreamHandler.toExternalForm(Unknown Source)
        ... 29 more
java.lang.IllegalStateException: Stream handler unavailable due to: null
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Auto-properties install: org.osgi.framework.BundleException: Unable to cache bundle: file:bundle/org.apache.felix.bundlerepository-1.2.1.jar
java.lang.reflect.InvocationTargetException
        at java.lang.reflect.AccessibleObject.invokeL(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Caused by: java.lang.NullPointerException
        at java.net.URLStreamHandler.toExternalForm(Unknown Source)
        ... 29 more
java.lang.IllegalStateException: Stream handler unavailable due to: null
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Auto-properties start: org.osgi.framework.BundleException: Unable to cache bundle: file:bundle/org.apache.felix.shell-1.0.2.jar
java.lang.reflect.InvocationTargetException
        at java.lang.reflect.AccessibleObject.invokeL(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Caused by: java.lang.NullPointerException
        at java.net.URLStreamHandler.toExternalForm(Unknown Source)
        ... 29 more
java.lang.IllegalStateException: Stream handler unavailable due to: null
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Auto-properties start: org.osgi.framework.BundleException: Unable to cache bundle: file:bundle/org.apache.felix.shell.tui-1.0.2.jar
java.lang.reflect.InvocationTargetException
        at java.lang.reflect.AccessibleObject.invokeL(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Caused by: java.lang.NullPointerException
        at java.net.URLStreamHandler.toExternalForm(Unknown Source)
        ... 29 more
java.lang.IllegalStateException: Stream handler unavailable due to: null
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.toExternalForm(Unknown Source)
        at java.net.URL.toExternalForm(Unknown Source)
        at org.apache.felix.framework.URLHandlersStreamHandlerProxy.parseURL(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at java.net.URL.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.initialize(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.JarRevision.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.revise(Unknown Source)
        at org.apache.felix.framework.cache.BundleArchive.<init>(Unknown Source)
        at org.apache.felix.framework.cache.BundleCache.create(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.Felix.installBundle(Unknown Source)
        at org.apache.felix.framework.BundleContextImpl.installBundle(Unknown Source)
        at org.apache.felix.main.AutoActivator.processAutoProperties(Unknown Source)
        at org.apache.felix.main.AutoActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix$SystemBundleActivator.start(Unknown Source)
        at org.apache.felix.framework.util.SecureAction.startActivator(Unknown Source)
        at org.apache.felix.framework.Felix.init(Unknown Source)
        at org.apache.felix.framework.Felix.start(Unknown Source)
        at org.apache.felix.main.Main.main(Unknown Source)
        at java.lang.reflect.AccessibleObject.invokeV(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at com.ibm.oti.vm.JarRunner.main(Unknown Source)
Auto-properties start: org.osgi.framework.BundleException: Unable to cache bundle: file:bundle/org.apache.felix.bundlerepository-1.2.1.jar


Per Karl's suggestion, I tied starting the framework by setting ""felix.service.urlhandlers=false"" and that allowed me to bring up the framework without any issue.

Thanks.
","OS: Linux (Monta Vista) 32 bit
JVM: J9 2.3using foun11 profile (J2ME Foundation Specification v1.1)",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-16 20:58:05.821,,,no_permission,,,,,,,,,,,,58096,,,Tue Jun 16 20:58:05 UTC 2009,,,,,,0|i0vtz3:,183829,,,,,,,,"16/Jun/09 20:58;karlpauls;URLHandlers are broken on harmony and J9. The reason is that they don't expect somebody to call toExternalForm from inside a URLHandlers. That causes a NPE and subsequently, we don't start-up. The current trunk fixes the issue for harmony and hopefully for J9 as well. Please close this issue if it works for you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle Fragments not resolved correctly,FELIX-1197,12426941,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sergiomestre,sergiomestre,02/Jun/09 16:38,10/Jun/09 15:51,13/Mar/19 22:56,10/Jun/09 15:51,framework-1.8.0,,,,framework-2.0.0,,Framework,,,0,,,,,,"Hi all,

I have the following behaviour, if I try to attach more than one bundle fragment to the same bundle host.

java.lang.ClassCastException: org.apache.felix.framework.searchpolicy.ModuleImpl cannot be cast to [Ljava.lang.Object;
        at org.apache.felix.framework.FelixResolverState.checkForConflicts(FelixResolverState.java:220)
ERROR: Error starting file:bundle/org.apache.felix.shell.jar (org.osgi.framework.BundleException: Unresolved constraint in bundle 31: Unable to merge fragments)
        at org.apache.felix.framework.FelixResolverState.mergeFragments(FelixResolverState.java:139)
        at org.apache.felix.framework.Felix$FelixResolver.resolve(Felix.java:3708)
        at org.apache.felix.framework.Felix.resolveBundle(Felix.java:3091)
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1439)
        at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:984)
        at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:263)
        at java.lang.Thread.run(Thread.java:619)

The bundle fragments have been tested separately and they work as they should. 
( e.g. Frag A => Host A => O.K.
          Frag B => Host A => O.K.
)

If I try to resolve both bundle fragments than i get the exception above. I took a look at the source and it seems to me that there is a bug in the FelixResolverState class. Inside the method checkForConflicts(IModule host, List fragmentList) there is a map definition Map ipMerged = new HashMap(); where the key is a String and the Value a Object[] . 
Later on in a for loop the same map is used to store keys from type String and values from type ModuleImpl. This causes a the above classcast exception in the line 220. 

Do I have any mistakes in my bundle fragment headers or is this realy a bug ?

Best regards
Sergio
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-02 18:38:16.116,,,no_permission,,,,,,,,,,,,57821,,,Wed Jun 10 15:51:36 UTC 2009,,,,,,0|i0vusn:,183962,,,,,,,,"02/Jun/09 18:38;rickhall;Sounds like a bug. To make sure I understand the scenario, you just have two fragments wanting to attach to the same host, that's it. Right? If so, I will create such a test case and fix it. Thanks for reporting it.",03/Jun/09 07:33;sergiomestre;Yes that's right. I have two fragments importing nearly the same packages but exporting different packages. Both fragments should attach the same host.,"03/Jun/09 15:14;rickhall;You mention that your fragments import nearly the same packages, Be aware that Felix fragment import conflict detection currently requires overlapping imports of fragments to be identical (i.e., same package, version range, attributes, and directives). If not, then it will not allow it.",04/Jun/09 06:56;sergiomestre;Thanks for this advise.,"10/Jun/09 15:51;rickhall;Yes, this was just a bug in the use of a map with incorrect types for values. I guess generics would have helped in this case. :-)

It is fixed now. If you can test against the trunk, please do and then close this issue if satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible infinit loop when a remote ssh connection is closed,FELIX-1212,12427528,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,gnt,gnt,gnt,10/Jun/09 08:13,10/Jun/09 08:44,13/Mar/19 22:56,10/Jun/09 08:44,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57806,,,Wed Jun 10 08:44:37 UTC 2009,,,,,,0|i0vuen:,183899,,,,,,,,"10/Jun/09 08:44;gnt;Sending        gshell/gshell-core/src/main/java/org/apache/geronimo/gshell/commands/ssh/ShellFactoryImpl.java
Adding         gshell/gshell-core/src/main/java/org/apache/geronimo/gshell/console
Adding         gshell/gshell-core/src/main/java/org/apache/geronimo/gshell/console/Console.java
Transmitting file data ..
Committed revision 783254.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceMix -> Karaf in base directory notices,FELIX-1097,12424082,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,robertburrelldonkin,robertburrelldonkin,28/Apr/09 19:17,04/May/09 07:57,13/Mar/19 22:56,04/May/09 07:57,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,Small documentation fixes related to transition from ServiceMix to Karaf,,,,,,,,,,,,,,,,,,,,,28/Apr/09 19:18;robertburrelldonkin;servicemix-to-karaf.diff;https://issues.apache.org/jira/secure/attachment/12406683/servicemix-to-karaf.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-04 07:57:48.835,,,no_permission,,,,,,,,,,,,57916,,,Mon May 04 07:57:48 UTC 2009,,,,,,0|i0vu2n:,183845,,,,,,,,"28/Apr/09 19:18;robertburrelldonkin;Patches NOTICE.txt, README.txt, BUILDING.txt to replace ServiceMix with Karaf",04/May/09 07:57;gnt;Patch included as part of FELIX-1116 commits,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DynamicImport-Package matches more packages than desired,FELIX-1059,12423829,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,27/Apr/09 04:47,27/Apr/09 09:28,13/Mar/19 22:56,27/Apr/09 09:28,framework-1.6.0,,,,framework-1.8.0,,Framework,Specification compliance,,0,,,,,,"Using * in DynamicImport-Package results in more packages being imported than desired. I have a bundle which has the following manifest attributes:

Bundle 2
--------
DynamicImport-Package = javax.crypto.interfaces.*
Import-Package = org.osgi.framework
Bundle-SymbolicName = foo
Bundle-Activator = sahoo.Activator

Question is should javax.crypto.interfaces.* match javax.crypto.interfaces package or not? Felix 1.6.0 seems to match it as the following shell command output confirms:

-> imports 2
foo [2] imports:
----------------
org.osgi.framework; version=1.4.0 -> org.apache.felix.framework [0]
javax.crypto.interfaces; version=1.6.0 -> org.apache.felix.framework [0]

It seems like similar to bootdelegation bug: https://issues.apache.org/jira/browse/FELIX-1034.

The RI behaves differently.",generic,,,,,,,,,,,,,,,,,,,,27/Apr/09 04:49;sahoo;FELIX-1059.zip;https://issues.apache.org/jira/secure/attachment/12406489/FELIX-1059.zip,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-27 09:28:40.887,,,no_permission,,,,,,,,,,,,57931,,,Mon Apr 27 09:28:40 UTC 2009,,,,,,0|i0vt5b:,183695,,,,,,,,27/Apr/09 04:49;sahoo;Test case. Unzip and use the jar file. The source code is also there.,"27/Apr/09 09:28;rickhall;I have committed a fix for this, please close if you are satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bootdelegation property seems to be matching more packages than desired,FELIX-1034,12422549,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,sahoo,sahoo,10/Apr/09 08:39,27/Apr/09 09:18,13/Mar/19 22:56,27/Apr/09 09:18,framework-1.6.0,,,,framework-1.8.0,,Framework,Specification compliance,,0,,,,,,"While describing org.osgi.framework.bootdelegation property, r4 spec says the following:
The .* wildcard means deep matching. Packages that match this list must be loaded from the parent class loader.

I have a bundle that depends on org.xml.sax.SAXException.class, but the bundle does not import org.xml.sax package. However, if I set bootdelegation=org,xml.sax.*, Felix delegates loading of org.xml.sax.SAXException.class to parent classloader. On the other hand, implementations like Equinox requires a value of org.xml.sax. I think Felix behavior is incorrect.",generic,,,,,,,,,,,,,,FELIX-1059,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-13 08:30:13.961,,,no_permission,,,,,,,,,,,,57956,,,Mon Apr 27 09:18:30 UTC 2009,,,,,,0|i0vu7z:,183869,,,,,,,,"13/Apr/09 08:30;rickhall;It appears the consensus is org.foo.* should not match org.foo, so we will need to fix this in next release of Felix.","27/Apr/09 09:18;rickhall;I have committed a fix for this, please close if you are satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix 1.6.0 fails with ClassCircularityError,FELIX-1045,12423296,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,vivek.pandey@sun.com,vivek.pandey@sun.com,20/Apr/09 19:01,23/Apr/09 08:50,13/Mar/19 22:56,22/Apr/09 21:38,framework-1.6.0,,,,framework-1.6.1,,Framework,,,0,,,,,,"In Glassfish v3, JRuby runtime classes are loaded by a URLClassLoader form inside an OSGi bundle. This all worked fine till upgrade to Felix 1.6.0. With felix 1.6.0 it fails with ClassCircularityError. See [1] below. This issue seems to be related to FELIX-962. 

This is 
discussed on dev@glassfish at http://www.nabble.com/Re:-ClassCircularityError-reported-with-the-
latest-v3-trunk-td23118716.html. 

Here is the evaluation of this issue by Richard Hall, a patched version of felix.jar is tested and it works 
fine. 

----------
This code in Felix should only ever be executed when there is a CNFE that is going to be thrown. Do 
you know if you should correctly be getting a CNFE?

To be clear, the explicit issue we are talking about is this change in Felix:

    http://issues.apache.org/jira/browse/FELIX-962

We actually try to determine if a class is an inner class of a class loader when we are trying to guess 
whether or not we should delegate to the parent class loader. This is part of a hack which is a last ditch 
effort to avoid CNFE for bad JRE code that assumes it should be able to see everything on the class path 
from any class loader.

The change from FELIX-962 is actually implemented in two different ways, one for JDK < 1.5 and one 
for JDK >= 1.5. In the >= 1.5 version we use the method Class.getEnclosingClass(), which seems to 
cause the error for perhaps the reasons in the JDK bug you referenced. We implemented the two 
different approaches since we assumed performance would be better by just using getEnclosingClass() 
than trying to figure it out the enclosing class manually, which involves doing a class load.

We could potentially try always using the < 1.5 approach, which does not use that method. If I created 
a felix.jar that did that, could you test it to see if it resolved the issue? 
----------",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-21 07:25:40.564,,,no_permission,,,,,,,,,,,,57945,,,Wed Apr 22 21:38:13 UTC 2009,,,,,,0|i0vt4n:,183692,,,,,,,,"21/Apr/09 07:25;rickhall;It appears as if Felix is running into the following JDK bug:

    http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6508296

The JVM thinks there is a circularity error when there is not. The workaround for us seems to be avoid using Class.getEnclosingClass(). The only potential downside is the possible performance impact and/or accuracy of manually trying to determine the enclosing class, which may or may not be an issue.",22/Apr/09 21:38;rickhall;I have committed a patch for this issue. Please close if you are satisfied. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extensionmanager openConnection(URL) method should be public,FELIX-1004,12419578,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,26/Mar/09 22:26,26/Mar/09 22:50,13/Mar/19 22:56,26/Mar/09 22:50,framework-1.4.1,,,,framework-1.6.0,,Framework,,,0,,,,,,The openConnection(URL) method should be public because otherwise the URLStreamHandlerProxy is getting a no such method exception when it is trying to use it via reflection. This prevents extension bundles from working in case the extension url has been toStringed and is then recreated. ,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57986,,,2009-03-26 22:26:34.0,,,,,,0|i0vtw7:,183816,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
File Install treats configuration files with identical subnames as the same configuration,FELIX-895,12412967,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,pkriens,pneyens,pneyens,22/Jan/09 07:41,11/Mar/09 16:10,13/Mar/19 22:56,11/Mar/09 16:10,,,,,fileinstall-0.9.2,,File Install,,,0,,,,,,"Suppose you have two ManagedServiceFactory instances registered with pids 'com.acme.abc' and 'com.acme.xyz'

To configure a default instance for each of the factories I created two .cfg files to be handled by File Install: com.acme.xyz-default.cfg and com.acme.abc-default.cfg

What seems to happen is that File Install creates a first configuration (correctly) and then updates that configuration to the contents of the second configuration file. Apparently because the subname is the same. (filename ::= <pid> ( '-' <subname> )? '.cfg')

Possible fix: File Install (class DirectoryWatcher) uses property _alias_factory_pid to identify and retrieve the configurations it manages. The value for this property is currently set to <subname>. A possible fix could be to use <pid>-<subname> (or even <filename>) as identification value.",NA,,,,,,,,,,,,,,,,,,,,10/Mar/09 23:03;fdiotalevi;FELIX-895.patch;https://issues.apache.org/jira/secure/attachment/12401878/FELIX-895.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-10 22:43:16.246,,,no_permission,,,,,,,,,,,,58094,,,Wed Mar 11 16:10:58 UTC 2009,,,,,,0|i0vuan:,183881,,,,,,,,"10/Mar/09 22:43;fdiotalevi;I'm experiencing the same bug. It's definitely a major bug, configurations are not handled correctly inside FileInstall.
I'm working on a patch right now.","10/Mar/09 23:03;fdiotalevi;Patch attached.

Followed the approach explained at
http://felix.apache.org/site/apache-felix-configuration-admin-service.html

Configuration objects, once created, are stored inside the DirectoryWatcher, so they can be retrieved later (and updated) when the corresponding file is changed.

Can anybody else test it?","11/Mar/09 16:10;rickhall;Peter reviewed the patch and I just applied it. I made some formatting changes as well as fixed some discrepancies with the use of 'ConfigurationEntry' and 'ConfigurationKey' in the comments and variable names. I deployed a snapshot.

Paul, please verify if the snapshot resolves the issue for you. If so, please close this bug. Thanks.

Thanks to Filippo for the patch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remote shell bundle can prevent felix shutdown,FELIX-734,12405080,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,pforhan,pforhan,24/Sep/08 14:41,02/Feb/09 07:09,13/Mar/19 22:56,02/Feb/09 07:09,shell.remote-1.0.2,,,,shell.remote-1.0.4,,Remote Shell,,,0,,,,,,"
On one of our PCs, issuing a shutdown command to felix remote shell would hang indefinitely.  We could go to the console window and still type in commands to the local shell, and a 'ps' showed that bundle 0 and the remote-shell bundle were in ""stopping"" states.

The problem was in remote.shell's Listener.java.  The deactivate method seemed to be expecting the m_ServerSocket.close() call on line 70 to cause an exception in the waiting thread at line 104, the  m_ServerSocket.accept() call.

For most of our machines, this seems to work as expected.  But the one that did waited forever for the thread join to happen, and could never shutdown.

To address this, we set the serverSocket's SOTimeout field, so that it it will timeout, go through the do/while loop, and reevaluate the m_stop variable.  The timeout is configurable via the bundle context property ""osgi.shell.telnet.SocketTimeout"" and defaults to 0, the current behavior.

Patch will be attached shortly.","Sun JDK 1.6.0_02,
Windows XP Pro,
felix 1.2.1, shell-remote 1.0.2",,,,,,,,,,,,,,,,,,,,24/Sep/08 14:43;pforhan;RemoteShellListenerPatch.txt;https://issues.apache.org/jira/secure/attachment/12390840/RemoteShellListenerPatch.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-26 07:01:39.028,,,no_permission,,,,,,,,,,,,58255,,,Mon Feb 02 07:09:00 UTC 2009,,,,,,0|i0vumn:,183935,,,,,,,,"26/Sep/08 07:01;fmeschbe;Thanks for the supplied patch. I will look into applying it shortly.

Can you please tell me the Java runtime version and vendor as well as possibly the OS platform you used, where you encountered the issue. Thanks.","29/Sep/08 10:05;fmeschbe;I can only reproduce a similar behaviour when running inside Cygwin. What I see is, that it takes a long time for the ServerSocket constructor to return. Sometime it even does not return, thus the listener thread remains ""active"" in the constructor. It seems that the VM hangs loading some native library. When shutting down the framework in this situation, the thread cannot be stopped and the framework just seems to be hanging.

Interestingly, when removing the shell.tui bundle, this does not happen and everything works just fine ..

Maybe someone more knowledgeable in windows networking has some clue ??

Unfortunately, at least in my case, applying the patch won't help, because it is the ServerSocket constructor blocking the stuff ...","02/Feb/09 07:09;fmeschbe;I have applied your patch, since it makes sense, regardless of my ability to reproduce the original issue.

Note, though, that for consisency  I modified the property name to ""osgi.shell.telnet.socketTimeout"" (lower case
s in socketTimeout).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Services not unregistered on component deactivation,FELIX-862,12411203,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,,adreghiciu,adreghiciu,23/Dec/08 02:14,26/Dec/08 17:48,13/Mar/19 22:56,26/Dec/08 17:48,,,,,,,Declarative Services (SCR),,,0,,,,,,"Situation (is about Pax Shell using SCR):

Bundle 1:
<component name='org.ops4j.pax.shell.threadio.internal.ThreadIOImpl'>
  <implementation class='org.ops4j.pax.shell.threadio.internal.ThreadIOImpl'/>
  <service>
    <provide interface='org.osgi.service.threadio.ThreadIO'/>
  </service>
</component>

Bundle 2:
<component name='org.ops4j.pax.shell.runtime.internal.CommandProcessorImpl'>
  <implementation class='org.ops4j.pax.shell.runtime.internal.CommandProcessorImpl'/>
  <service>
    <provide interface='org.osgi.service.command.CommandProcessor'/>
  </service>
  <reference name='threadIO' interface='org.osgi.service.threadio.ThreadIO' bind='setThreadIO' unbind='unsetThreadIO'/>

If both bundles are started bundle 2 exports a CommandProcessor service. This is correct.
If I stop bundle 1, I expect that bundle 2 would unregister the CommandProcessor service. But this is not the case, as service is still exported
If after the bundle 1 was stopped I stop the bundle 2 and start bundle 2 again, the service CommandProcessor is indeed not exported (as bundle 1 is not started so there is no ThreadIO service).","Felix 1.4.0, SCR 1.0.6",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-23 10:33:00.776,,,no_permission,,,,,,,,,,,,58127,,,Fri Dec 26 17:48:14 UTC 2008,,,,,,0|i0vukn:,183926,,,,,,,,"23/Dec/08 02:16;adreghiciu;This may be related to the NPE from FELIX-861.
","23/Dec/08 10:33;fmeschbe;Yes, this may be related, since the component is probably not properly stopped due to the uncaught NullPointerException.

Could you try with the patch I posted to FELIX-861, whether it works ? Thanks.","23/Dec/08 22:00;adreghiciu;The problem is not solved by applying the patch that solved FELIX-861.
Even if the exception is gone the service does not get unregistered, so, the situation is as before.",26/Dec/08 17:48;adreghiciu;I retested and seems like the problem is gone.,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.net.MalformedURLException: unknown protocol: felix,FELIX-844,12410130,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,yongjames,yongjames,06/Dec/08 05:08,19/Dec/08 22:14,13/Mar/19 22:56,19/Dec/08 22:14,,,,,framework-1.4.1,,,,,0,,,,,,"My client program has the following exception when retrieving workitem from openwfe (server) via rmi. 
The client application embeds felix 1.2 while server program doesn't.
No problem if felix is not running.

java.rmi.ServerException: RemoteException occurred in server thread; nested exception is: 
        java.rmi.UnmarshalException: error unmarshalling arguments; nested exception is: 
        java.net.MalformedURLException: unknown protocol: felix 
        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:325) 
        at sun.rmi.transport.Transport$1.run(Transport.java:153) 
        at java.security.AccessController.doPrivileged(Native Method) 
        at sun.rmi.transport.Transport.serviceCall(Transport.java:149) 
        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:466) 
        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:707) 
        at java.lang.Thread.run(Thread.java:595) 
        at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(Unknown Source) 
        at sun.rmi.transport.StreamRemoteCall.executeCall(Unknown Source) 
        at sun.rmi.server.UnicastRef.invoke(Unknown Source) 
        at openwfe.org.worklist.impl.RmiWorkSession_Stub.get(Unknown Source) 
","Felix 1.4, Java 5, Windows Vista",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-06 12:38:38.467,,,no_permission,,,,,,,,,,,,58145,,,Fri Dec 19 22:14:39 UTC 2008,,,,,,0|i0vue7:,183897,,,,,,,,"06/Dec/08 12:38;karlpauls;The problem is that rmi seems to send the urls of the classloader that created felix to the server. Issue is, the handler of the url is not send to the server and that causes the new URL to throw an exception. I don't really know why rmi is doing this but we need to find a solution. I will make fixing this part of the overall refactoring of the URLHandlers which I will start soon. Thanks for creating the issue. ",19/Dec/08 22:14;karlpauls;Should be fixed in trunk. This will make it into the upcoming 1.4.1 release. Thanks again for reporting and please close this issue if it works for you. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
R4SearchPolicyCore.searchDynamicImports() always loads a class even if the object to load is a resource,FELIX-808,12407994,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,eyindanga,eyindanga,07/Nov/08 09:31,12/Nov/08 14:02,13/Mar/19 22:56,08/Nov/08 16:24,framework-1.4.0,,,,framework-1.4.1,,,,,0,,,,,,"The method R4SearchPolicyCore.searchDynamicImports( IModule module, String name, String pkgName, boolean isClass) always load a class by using the current thrad class loader even if  the object to laod is a resource.

This code may chek if the object is a class or a resource, and invoke the coresponding method on the classloader.

               // If there are no bundles providing exports for this
                // package and if the instigating class was not from a
                // bundle, then delegate to the parent class loader.
                // Otherwise, break out of loop and return null.
                boolean delegate = true;
                for (ClassLoader cl = classes[i].getClassLoader(); cl != null; cl = cl.getClass().getClassLoader())
                {
                    if (ContentClassLoader.class.isInstance(cl))
                    {
                        delegate = false;
                        break;
                    }
                }
                if (delegate)
                {
                    return this.getClass().getClassLoader().loadClass(name);
                }

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-11-08 16:24:48.377,,,no_permission,,,,,,,,,,,,58181,,,Wed Nov 12 14:02:18 UTC 2008,,,,,,0|i0vul3:,183928,,,,,,,,"08/Nov/08 16:24;rickhall;I committed a fix for this in the trunk. If you can build the trunk and test it, that would be great, then you could close this issue for us. I wonder how you found this bug, since it is definitely not something you should run into too much...it is completely non-spec behavior. :-)","12/Nov/08 14:02;sauthieg;:)

In fact, we found that issue when Felix is run on Windows.
JacORB tries to load a configuration file using different strategies:
1. use the TCCL.getResource()
2. if not found, tries the absolute filename

The problem is that the resource it tries to load from the TCCL is already the absolute file name (ie, under windows something like 'd:\path\to\my\resource').
So the call looks like this :
Thread.currentThread().getContextClassLoader().getResource(""d:\path\to\my\resource"");
The TCCL is a bundle ClassLoader of Felix with a 'DynamicImport-Packages *'.

This is where we fallback on the system classloader (not 100% sure) and we try to load d:\...\resource as a class (changing all . to / and adding a .class suffix :) ).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in FilterImpl.toString(),FELIX-721,12404217,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,mrdon,mrdon,12/Sep/08 03:03,14/Oct/08 05:34,13/Mar/19 22:56,12/Sep/08 15:31,framework-1.0.4,,,,,,Framework,,,0,,,,,,"We see this NPE occasionally, probably 10% of the time on application startup:
     [java] java.lang.NullPointerException
     [java]     at org.apache.felix.framework.util.ldap.Parser$AndOperator.toStringInfix(Parser.java:601)
     [java]     at org.apache.felix.framework.util.ldap.Evaluator.toStringInfix(Evaluator.java:184)
     [java]     at org.apache.felix.framework.FilterImpl.toString(FilterImpl.java:242)
     [java]     at java.lang.String.valueOf(String.java:2615)
     [java]     at java.lang.StringBuffer.append(StringBuffer.java:220)
     [java]     at org.springframework.osgi.service.importer.DefaultOsgiServiceDependency.<init>(DefaultOsgiServiceDependency.java:52)
     [java]     at org.springframework.osgi.extender.internal.dependencies.startup.MandatoryImporterDependencyFactory.getServiceDependencies(MandatoryImporterDependencyFactory.java:69)
     [java]     at org.springframework.osgi.extender.internal.dependencies.startup.DependencyServiceManager.findServiceDependencies(DependencyServiceManager.java:233)
     [java]     at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.stageOne(DependencyWaiterApplicationContextExecutor.java:248)
     [java]     at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.refresh(DependencyWaiterApplicationContextExecutor.java:172)
     [java]     at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.refresh(AbstractDelegatedExecutionApplicationContext.java:136)
     [java]     at org.springframework.osgi.extender.internal.activator.ContextLoaderListener$2.run(ContextLoaderListener.java:746)
     [java]     at java.lang.Thread.run(Thread.java:613)

My first guess would be we are constructing a filter improperly in our Spring config, but the fact that it only happens some of the time is strange.  If nothing else, it would be nice if this bit of code was a bit more defensive.",,,,,,,,,,,,,,,,,,,,,12/Sep/08 08:47;karlpauls;ldap.patch;https://issues.apache.org/jira/secure/attachment/12389995/ldap.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-12 07:16:26.032,,,no_permission,,,,,,,,,,,,58268,,,Tue Oct 14 05:34:25 UTC 2008,,,,,,0|i0vukv:,183927,,,,,,,,12/Sep/08 07:16;karlpauls;Do you think it is possible to get me the filter that fails?,"12/Sep/08 07:23;mcculls;Another option (if it is truly random) would be to locally build the FilterImpl with additional instrumentation to capture the original string used to build the filter - then when it failed with the NPE you could dump the string along with various other fields from the filter object...
","12/Sep/08 07:43;mcculls;Actually I think I've figured out the bug...

org.apache.felix.framework.util.ldap.Operator has a public member field:

    // Place to store the reconstructed parsetree
    // Vector -> ArrayList is using jdk1.2 or later
    public Operator[] children = null;

and this member field gets re-assigned when the parsetree is rebuilt
(see the buildTree method in various Operator sub-classes in Parser)

ok, now if you look at the toStringInfix method of the Evaluator class, it
goes through the operators in the current program and calls each one
to rebuild the complete parsetree.

the toStringInfix method is in turn called from FilterImpl's toString:

    public String toString()
    {
        if (m_toString == null)
        {
            m_toString = new Evaluator(m_program).toStringInfix();
        }
        return m_toString;
    }

where m_toString is a volatile field - the idea I think is to cache the
result. However, because there's no synchronization on this field
it's possible that two or more threads could be calling toStringInfix
at the same time.

now each thread has its own Evaluator - but they are sharing the
same program, which means that the ""children"" member that has
the reconstructed parsetree could get reset by one thread while
it's being used by another thread - hence the NPE (null element)

phew... hope that makes some sense","12/Sep/08 07:54;mcculls;simplest fix would be to make FilterImpl.toString() synchronized, but this would
affect performance in all cases, even when the result has already been cached.

otherwise the Operator.children field somehow needs to be made thread-local","12/Sep/08 08:02;karlpauls;Hi Stuart,

yes, this makes sense. It seems to be the children member. Would it be enough to make buildTree look like this:

public void buildTree(Stack operands)
        {
            Operator[] tmp = new Operator[operandCount];
            // need to preserve stack order
            for (int i = 0; i < operandCount; i++)
            {
                tmp[(operandCount - 1) - i] =
                    (Operator) operands.pop();
            }
            children = tmp;
            operands.push(this);
        }

this way we don't need sync and are optimistic (i.e., it might be that we do some work twice but we assume thats cheaper then to always sync). ","12/Sep/08 08:08;mcculls;yes, that should work (need to update all the Operator sub-classes)
and we should probably also mark the children member as volatile.","12/Sep/08 08:15;karlpauls;o.k., I can do this today. ","12/Sep/08 08:47;karlpauls;This patch should fix the issue by making the children member volatile and assign it optimistic. 

Let me know what you think. 

",12/Sep/08 13:19;rickhall;Seems reasonable to me.,"12/Sep/08 14:28;mcculls;+1, patch looks good to me.",12/Sep/08 15:31;karlpauls;Fixed in trunk as of revision 694713. Please close this issue if it works for you.,"17/Sep/08 05:47;mrdon;Thanks for fixing it so quickly.  Any chance this could be ported into the 1.0.x branch for a 1.0.5 release?  I'd like to avoid a private fork, if I can help it.",17/Sep/08 20:57;karlpauls;Could it be a 1.2.2 release as well? He have a couple of resolved issues since 1.2.1 already... I'd prefer to not do a 1.0.5 unless it is absolutely needed...,"18/Sep/08 01:20;mrdon;Well, I'll probably have to create an internal vendor branch anyway, as I need the fix for a release today.  Getting a 1.2.2 out in the next week or so would certainly be appreciated.","14/Oct/08 04:24;mrdon;I'm still getting this exception: 
java.lang.NullPointerException
	at org.apache.felix.framework.util.ldap.Parser$AndOperator.toStringInfix(Parser.java:601)
	at org.apache.felix.framework.util.ldap.Parser$AndOperator.toStringInfix(Parser.java:601)
	at org.apache.felix.framework.util.ldap.Evaluator.toStringInfix(Evaluator.java:184)
	at org.apache.felix.framework.FilterImpl.toString(FilterImpl.java:242)
	at java.lang.String.valueOf(String.java:2615)
	at java.lang.StringBuffer.append(StringBuffer.java:220)
	at org.springframework.osgi.service.importer.DefaultOsgiServiceDependency.<init>(DefaultOsgiServiceDependency.java:52)

Any ideas?","14/Oct/08 05:05;mcculls;Which version of Felix are you using - 1.2.1 or trunk?

That particular stack trace doesn't make sense if you're using trunk because line 601 is appending a string constant to the passed in buffer, which must be non-null according to the code path. I would have expected to see line 605 in trunk, as this line makes the recursive call to toStringInfix shown in the stack trace. But looking at the 1.2.1 sources, line 601 does make sense, so I guess you're using 1.2.1 - which also correlates because 1.2.1 doesn't contain the parser fix.

So in short, the problem is fixed in trunk but is not yet available in a release.","14/Oct/08 05:34;mrdon;Nevermind, the issue was on my side - I didn't realize the main jar included all the framework classes, and I had backported the fix to the framework jar.",,,,,,,,,,,,,,,
OBR referrals,FELIX-399,12380703,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,fmeschbe,rpunnoose,rpunnoose,18/Oct/07 18:25,27/Aug/08 19:30,13/Mar/19 22:56,26/Jun/08 07:32,,,,,bundlerepository-1.2.0,,Bundle Repository (OBR),,,1,,,,,,"I noticed that Felix does not have support right now for OBR referrals. So I added a patch, and I was hoping you guys could look at it and make sure it makes sense. The only issue is that my code does not take into account the attribute ""depth"", it will go through every referral and add all the resources. I couldn't figure out a good way to make use of the depth attribute to make it work in the framework. 
",,,,,,,,,,,,,,,,,,,,,25/Jun/08 21:03;fmeschbe;FELIX-399-fmeschbe-2.patch;https://issues.apache.org/jira/secure/attachment/12384704/FELIX-399-fmeschbe-2.patch,23/Jun/08 06:44;fmeschbe;FELIX-399-fmeschbe.patch;https://issues.apache.org/jira/secure/attachment/12384474/FELIX-399-fmeschbe.patch,20/Jun/08 19:15;rickhall;FELIX-399.patch;https://issues.apache.org/jira/secure/attachment/12384405/FELIX-399.patch,23/Oct/07 16:05;rpunnoose;felix-obr-referral-2.patch;https://issues.apache.org/jira/secure/attachment/12368224/felix-obr-referral-2.patch,18/Oct/07 18:25;rpunnoose;felix-obr-referral.patch;https://issues.apache.org/jira/secure/attachment/12367961/felix-obr-referral.patch,5.0,,,,,,,,,,,,,,,,,,,2008-05-27 19:19:18.803,,,no_permission,,,,,,,,,,,,58587,,,Thu Jun 26 07:32:15 UTC 2008,,,,,,0|i0vurj:,183957,,,,,,,,18/Oct/07 18:25;rpunnoose;Felix OBR referral path,"23/Oct/07 16:05;rpunnoose;In my last patch. I added resources from the referral directly to the repository that held the referral. I believe that the referral should use the RepositoryAdmin to add a repository from the referral url. That way if there is more than one referral in the future to the same url, the felix-bundle-repository can use they same url and not create duplicate resources.","27/May/08 19:19;fmeschbe;Thanks for this patch. I just implemented my own approach, but yours possibly reusing already loaded URLs might be better.

But your patch has the problem, that it also contains code reformatting. Could you please provide a patch, which does not include the reformatting ? Thanks alot.","27/May/08 19:20;fmeschbe;> The only issue is that my code does not take into account the attribute ""depth""

IMHO the depth attribute is an absolute requirement to prevent endless recursions etc. We can also not just stop following referrals on repositories, we already visited because the depth value on the referral has to be obeyed as declared.","20/Jun/08 14:29;tobias.wegner;This patch works well for me, when will it be included into the release?","20/Jun/08 16:34;rickhall;Can someone get the depth attribute working? I agree with Felix, it seems like this should be in place. However, I could probably be convinced to move forward without it.","20/Jun/08 19:17;rickhall;I have attached an updated version of the patch, which mostly corrects the formatting issues with an odd change here and there. Tobias, if you want to make sure that my new patch didn't break anything, that would be great. Then we just have to figure out how to add the hop count functionality.","23/Jun/08 06:44;fmeschbe;Another patch modification. Starting from Richard's patch, this adds/changes the following:

  * Adds unit tests
  * Modifies Referral to store depth as int (default 1) and URL as String
  * Only loads referrals after completing file parsing (not in addReferral)
  * Resolves referral URLs relative to repository URL
  * loading hop count is only used for resolving referrals","25/Jun/08 21:03;fmeschbe;Here is another patch which enhances my first one as follows:

  * Removes a TODO comment hinting hopCount is not implemented
  * Reformats by removing extra spaces around parentheses
  * Reintroduces functionliaty to extract repository.xml from ZIP files","26/Jun/08 07:32;fmeschbe;I have applied my last patch (after fixing issues with the test case based on an older implementation) in Rev. 671815.

Referrals are now followed and the hop count is respected. All referred repositories visited are added as if they would have been added through RepositoryAdmin.addRepository(URL).

I have tested this patch in my local environment and it seems to work. Please also test in your environment thanks.

If it works, please close this issue.",,,,,,,,,,,,,,,,,,,,,,
Possible NPE in BundleRepository RequirementImpl,FELIX-484,12388160,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,adreghiciu,adreghiciu,08/Feb/08 06:01,27/Aug/08 19:29,13/Mar/19 22:56,09/May/08 17:55,framework-1.0.0,,,,bundlerepository-1.2.0,,Bundle Repository (OBR),,,0,,,,,,"In case of setting an invalid syntax requirement filter in RequirementImpl internal Filter (m_filter) is set to null.
This results in NPE as soon as getFilter, isSatisfied, equals or hashcode gets called.

I think that an invalid syntax filter should re-throw org.osgi.framework.InvalidSyntaxException and calling code should handle this case by skipping the resource + a warning or more dramatically by failing the repository parsing.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-09 17:55:27.299,,,no_permission,,,,,,,,,,,,58503,,,Fri May 09 17:55:27 UTC 2008,,,,,,0|i0vucn:,183890,,,,,,,,"09/May/08 17:55;rickhall;I modified RequirementImpl.setFilter() to throw an exception. LocalRepositoryImpl will now ignore any resources that cause an exception (which should never happen) and RepositoryAdminImpl will ignore the entire repository file. Alin, please close this issue if you are satisfied.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
felix URLs do not return a proper value for lastModified(),FELIX-582,12397226,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,costin,costin,31/May/08 09:48,04/Aug/08 16:15,13/Mar/19 22:56,04/Aug/08 16:08,framework-1.0.4,,,,framework-1.2.0,,Framework,,,0,,,,,,"URLs loaded through Felix, pointing to resources inside OSGi space rely on the default lastModified() implementation which always returns 0. Since the platform knows about the originating bundle it can use the bundle lastmodified instead of 0.
Other URL/URLConnection methods can be potentially implemented instead of relying on the defaults (such as file type for example).",,,,,,,,,,,,,,,FELIX-659,,,,,,02/Aug/08 13:00;adreghiciu;FELIX-582.patch;https://issues.apache.org/jira/secure/attachment/12387398/FELIX-582.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-31 10:38:55.801,,,no_permission,,,,,,,,,,,,58406,,,Mon Aug 04 16:08:47 UTC 2008,,,,,,0|i0vug7:,183906,,,,,,,,"31/May/08 09:50;costin;The code below, always returns 0:

URLConnection con = getURL().openConnection();
con.setUseCaches(false);
return con.getLastModified();
","31/May/08 10:38;karlpauls;I agree that this would make sense and in fact we already override the method but we would need to change some things to get this to work. What lastmodified are you talking about, 

a) the one of the cached bundle file on disk 
b) the one of the actual JarEntry.getTime()
c) a combination of the two?


","01/Jun/08 01:35;rickhall;I assume he is talking about Bundle.getLastModified()...

Yes, it makes sense.","02/Aug/08 13:00;adreghiciu;I attached a simple patch to solve the issue.
It will return the Bundle.getLastModified() for bundle based urls.
In this condition that bundle last modified is always returned I'm wondering if getLastModified method should do the connect at all as the modified time is already set. But I suppose that is good as in case of a failure (url cannot be connected) the returned time is 0 (zero).

Still I do not know if is a valid time to be returned as the returned time will be the same = bundle last modified for all resources in a bundle and as the url refer a specific file I guess better will be to get the last modified of that specific file not the time when the bundle was installed/updated = bundle last modified.
In that case what Karl proposed JarEntry.getTime() sounds more appropriate and maybe just fallback to bundle las modified if somehow the returned time is zero or cannot be determined.","02/Aug/08 13:05;adreghiciu;I did a small check and just for info:
Equinox returns the last modified of that particular resource not the bundle last modified
Knopflerfish returns the bundle last modified (as the attached patch)","02/Aug/08 20:25;rickhall;Well, I am content with this behavior for the time being, since it is better than the current behavior. We can always keep the bug open or open a new one to deal with discussing the issue further.","04/Aug/08 14:14;costin;Interesting outcome. My interest was in the bundle.getLastModified() mainly but since any resource inside the bundle can be resolved as an url, this can be applied to all existing resources as Karl mentioned.
With jars there is always the question on whether the entry returns the archiving time or the raw (unpacked) modification time. For starters returning the bundle last modified time might be enough but in time, for correctness, the JarEntry.getTime() should be probably used.","04/Aug/08 16:08;rickhall;I have applied this patch to use Bundle.getLastModified(), so I think it can be resolved. Costin, please close this issue if you are satisfied.

I will start another issue to track whether we should use JarEntry.getTime() or not, since this is slightly more complicated, since we don't expose the JarEntry in any way.",,,,,,,,,,,,,,,,,,,,,,,,
Problems with the bundle url protocol,FELIX-577,12397145,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,30/May/08 08:10,04/Aug/08 15:59,13/Mar/19 22:56,04/Aug/08 15:59,framework-1.0.4,,,,framework-1.2.0,,Framework,,,0,,,,,,"The ""bundle:"" protocol URL handler is built in Felix framework, but
does not seem to work well for me at the moment.  The idea behing this
URL handler is to be able to access any resource inside a bundle.  The
syntax is as following:

  bundle://[bundleId].[bundleRev]:[classPathId]/[path]

where [bundleId] is the id of the bundle, [bundleRev] is the revision
of the bundle (when new versions are installed), [classPathId] is the
index in the list of jars that make the classpath (internal structure)
and [path] is the path of the resource in the bundle.

My problem is that [bundleRev] and [classPathId] refer to internal
structures and can't be accessed from outside the felix framework.
[classPathId] can be set to 0 to look inside the whole classpath
entries, but if not specified, the default value of the url port is -1
and an IndexOutOfBounds exception is thrown.

Another problem is that [bundleRev] can not be ommitted and (in
addition to the parsing having a bug) there is no default value.

I will raise a JIRA and attach a patch to do the following:
 * if the url port is ommitted (thus defaults to -1), use the same
behavior as if 0 was used (search in the whole classpath)
 * fix the revision bundle parsing, which returns the bundle id if
none is specified: it will return -1 if the bundle revision was not
set
 * fix the look up mechanism so that when no bundle revision is
specified, (revision == -1), all bundle revisions will be searched in
reverse order (the most recent revision first)

The last problem is really difficult to work around as there is no way
to find the bundle revision from a client bundle and there is no
default value, so the only way to make that work is to specify 0 and
expect the bundle to have not been updated (which ovbiously is not a
good idea).
",,,,,,,,,,,,,,,,,,,,,30/May/08 08:52;gnt;FELIX-577.patch;https://issues.apache.org/jira/secure/attachment/12383084/FELIX-577.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-30 08:26:32.228,,,no_permission,,,,,,,,,,,,58411,,,Mon Aug 04 15:59:54 UTC 2008,,,,,,0|i0vsnb:,183614,,,,,,,,"30/May/08 08:26;rickhall;As mentioned on the mailing list, I think it should only search the most recent revision if no revision is specified to avoid situations where resource lookups might be split across revisions. Otherwise, it sounds like a good approach.","02/Jun/08 14:28;gnt;The patch already does that afaik.
See the following patch fragment:

{code}
+        // If the revision is not specified, check the latest
+        if (revision < 0)
+        {
+            revision = modules.length - 1;
+        }
{code}

I may have missed something in the way revisions work though...","04/Aug/08 15:59;rickhall;I have applied this patch. Guillaume, please close this issue if you are satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NPE when Ctrl-C at the ""Enter profile name:"" prompt",FELIX-525,12392571,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,jlaskowski,jlaskowski,28/Mar/08 17:21,08/May/08 20:44,13/Mar/19 22:56,08/May/08 20:44,,,,,,,Framework,,,0,,,,,,"jlaskowski@dev /cygdrive/c/apps/felix
$ java -jar bin/felix.jar

Welcome to Felix.
=================

Enter profile name: (press Ctrl-C here)
Exception in thread ""main"" java.lang.NullPointerException
        at org.apache.felix.main.Main.main(Main.java:205)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-31 18:28:53.749,,,no_permission,,,,,,,,,,,,58463,,,Thu May 08 20:44:42 UTC 2008,,,,,,0|i0vs47:,183528,,,,,,,,"31/Mar/08 18:28;rickhall;Hmmm. I tried under JDK 1.4 and 1.6:

Welcome to Felix.
=================

Enter profile name:

heavy:felix-trunk/main$ java -jar bin/felix.jar

Welcome to Felix.
=================

Enter profile name: heavy:felix-trunk/main$ 

Worked ok in both cases. Which platform are you using? I am testing on Fedora.","01/Apr/08 03:32;mcculls;Looking at the code, Main.java:205 is the following check:

            if (profileName.length() != 0)

where profileName was read from a BufferedReader - so it looks
as though the Ctrl-C has interrupted the readLine method but not
caused an IOException...

if we wanted to be really paranoid then we could change the catch
to be Exception instead of IOException, and also add a null check
for the profileName test on line 205

but it would be better if we could recreate this and work out exactly
what's going on (Jacek - if you can easily reproduce this then you
might want to try compiling Felix from the latest sources and add
some println's to find out if it's throwing a different exception from
the readLine method...)
","08/May/08 20:44;rickhall;Clement was able to reproduce this issue on his Vista machine. We could see no real way to detect the error, so I just check for profileName to be null and then process it as an empty string; although it might also be reasonable to treat this situation as an error that causes an abort. Seems weird though that this can happen...I think it sounds like a Java bug. Regardless, Jacek please close this issue if everything is good.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update command should accept other file extensions than jar only,FELIX-544,12395284,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,jlaskowski,jlaskowski,04/May/08 20:17,08/May/08 19:31,13/Mar/19 22:56,08/May/08 19:31,framework-1.0.4,,,,,,,,,0,,,,,,"It looks that Felix 1.0.4 accepts jar file extensions only upon executing update command although install accepts a wider range.

-> update 10 file:/C:/projs/osgi/spring-osgi-webapp/target/spring-osgi-webapp.war
Unable to open input stream: java.io.FileNotFoundException: C:\projs\osgi\spring-osgi-webapp\target\spring-osgi-webapp.war.jar (The system cannot find the file specified)
-> uninstall 10
-> install file:/C:/projs/osgi/spring-osgi-webapp/target/spring-osgi-webapp.war
Bundle ID: 11
-> start 11
-> ps
START LEVEL 1
   ID   State         Level  Name
[   0] [Active     ] [    0] System Bundle (1.0.4)
[   1] [Active     ] [    1] Apache Felix Shell Service (1.0.1)
[   2] [Active     ] [    1] Apache Felix Shell TUI (1.0.1)
[   3] [Active     ] [    1] Apache Felix Bundle Repository (1.0.3)
[   4] [Active     ] [    1] spring-osgi-web (1.1.0.m2)
[   5] [Active     ] [    1] servlet-api.osgi (2.5.0.SNAPSHOT)
[   6] [Active     ] [    1] slf4j-log4j12 (1.4.3)
[   7] [Active     ] [    1] jcl104-over-slf4j (1.4.3)
[   8] [Active     ] [    1] slf4j-api (1.4.3)
[   9] [Active     ] [    1] log4j.osgi (1.2.15.SNAPSHOT)
[  11] [Active     ] [    1] pl.jaceklaskowski.osgi.spring-osgi-webapp
-> headers 11

Bundle 11
---------
Built-By = jlaskowski
Archiver-Version = Plexus Archiver
Created-By = Apache Maven
Build-Jdk = 1.5.0_14
Manifest-Version = 1.0
Bundle-SymbolicName = pl.jaceklaskowski.osgi.spring-osgi-webapp
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-04 20:29:32.157,,,no_permission,,,,,,,,,,,,58444,,,Thu May 08 19:31:57 UTC 2008,,,,,,0|i0vs3b:,183524,,,,,,,,04/May/08 20:29;karlpauls;The update command adds a .jar extension to the given url if it doesn't end with .jar already. I'd say this is a bug ...,"08/May/08 19:31;rickhall;I committed a patch to stop appending "".jar"" to the URL when performing an update. Jacek, please close this issue if you are satisfied. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bundle-Classpath is not working with directories as expected.,FELIX-426,12383579,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,lgalfaso,lgalfaso,30/Nov/07 01:39,04/Jan/08 16:28,13/Mar/19 22:56,04/Jan/08 16:28,framework-1.0.0,,,,,,Framework,,,0,,,,,,The manifest entry Bundle-Classpath is not working as expected when directories are specified.,Windows XP / Ubuntu Linux,,,,,,,,,,,,,,,,,,,,03/Jan/08 19:37;lgalfaso;FELIX-426.v2.patch;https://issues.apache.org/jira/secure/attachment/12372460/FELIX-426.v2.patch,03/Jan/08 20:39;rickhall;FELIX-426.v3.patch;https://issues.apache.org/jira/secure/attachment/12372464/FELIX-426.v3.patch,04/Jan/08 15:32;rickhall;FELIX-426.v4.patch;https://issues.apache.org/jira/secure/attachment/12372509/FELIX-426.v4.patch,,,3.0,,,,,,,,,,,,,,,,,,,2008-01-03 17:31:56.185,,,no_permission,,,,,,,,,,,,58560,,,Fri Jan 04 16:28:14 UTC 2008,,,,,,0|i0vuef:,183898,,,,,,,,30/Nov/07 01:42;lgalfaso;Attaching patch for this issue. This patch should make the class ContentDirectoryContent unnecesary (unless it is used outside the framework.),30/Nov/07 02:25;lgalfaso;Better patch.,"03/Jan/08 17:31;rickhall;Lucas, could you be more precise about the issue you were seeing?

I am not sure your patch will work in general since it modifies JarContent directly, which will likely mean that it will only work for bundles that are packaged as a JAR file. Felix also supports bundles as exploded directories (i.e., DirectoryContent), which is why we have ContentDirectoryContent (dumb name, I know) in the first place, which is used so that content can be provided from the directory of another content.

So, I think we need to fix ContentDirectoryContent if there is a bug in it, not eliminate it.","03/Jan/08 19:18;rickhall;I created a simple bundle with the following structure:

   META-INF/MANIFEST.MF
   org/apache/felix/test/classloading/Activator.class
   classpath/org/apache/felix/test/classloading/directory/Hello.class

And with:

   Bundle-ClassPath: .,classpath

My activator was able to create an instance of Hello, so the simple case appears to be working. I definitely need more help to reproduce any issues.","03/Jan/08 19:32;lgalfaso;Hi Richard,
  If you set

Bundle-Classpath: .,/classpath

then it fails. Also ContentDirectoryContent::EntriesEnumeration is really broken as it returns a lot of false positives. I am attaching a patch for both issues in five minutes.","03/Jan/08 20:35;rickhall;Lucas, I agree it looks like it would return false positives, but were you actually running into this issue? I am trying to think of the case when someone would actually see the error, since I don't think it is used by Felix...or did you just happen to notice that it was in error?","03/Jan/08 20:41;rickhall;Lucas, I attached a modified version of your patch. Let me know if it sufficiently resolves the issues you discovered. If so, I will commit it. Thanks.","03/Jan/08 20:48;lgalfaso;I am not running into the ContentDirectoryContent::EntriesEnumeration issue (I was running into the other issue) it just happened that I notice the bug while checking ContentDirectoryContent. Anyhow, I think I can force the issue, but I am not sure.

The patch to ContentDirectoryContent::EntriesEnumeration does not look right as
public boolean hasMoreElements()
might return true when there are no elements left.","03/Jan/08 20:49;lgalfaso;The patch does solve the other issue, thanks","04/Jan/08 08:36;fmeschbe;Sorry, to jump in here, but:

> The patch to ContentDirectoryContent::EntriesEnumeration does not look right as
> public boolean hasMoreElements()
> might return true when there are no elements left.

According to the JavaDoc of Enumeration.hasMoreElements(), which is AFAIK normative: 

    /**
     * Tests if this enumeration contains more elements.
     *
     * @return  <code>true</code> if and only if this enumeration object
     *           contains at least one more element to provide;
     *          <code>false</code> otherwise.
     */
    boolean hasMoreElements();

this method only returns true, if there is at least one more element to be retreived by Enumeration.nextElement(). If this would not be the case, the respective implementation would be wrong .... (and not the use of it)","04/Jan/08 15:34;rickhall;Yes, Lucas, you are definitely correct, my patch didn't fix that from the original. I have attached a modified patch, which I believe is correct with respect to hasMoreElements() and will correctly throw an exception in nextElement() when there are no more elements.","04/Jan/08 16:28;rickhall;I have committed the v4 patch for this. Lucas, please close it if you are satisfied with the solution. Thanks for the help.",,,,,,,,,,,,,,,,,,,,
Bundle#loadClass logs a FrameworkEvent.ERROR each time a class can not be found,FELIX-441,12385032,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,20/Dec/07 16:28,20/Dec/07 19:15,13/Mar/19 22:56,20/Dec/07 19:15,framework-1.0.0,,,,,,Framework,,,0,,,,,,"The specs defines the behavior:

If this bundle's state is INSTALLED, this method must attempt to resolve 
this bundle before attempting to load the class. 
If this bundle cannot be resolved, a Framework event of type Frame- 
workEvent.ERROR is fired containing a BundleException with details of the 
reason this bundle could not be resolved. This method must then throw a 
ClassNotFoundException. 

but this behavior is not the one that is implemented.",,,,,,,,,,,,,,,,,,,,,20/Dec/07 16:29;gnt;FELIX-441.patch;https://issues.apache.org/jira/secure/attachment/12372031/FELIX-441.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-20 19:15:33.397,,,no_permission,,,,,,,,,,,,58545,,,Thu Dec 20 19:15:33 UTC 2007,,,,,,0|i0vudz:,183896,,,,,,,,20/Dec/07 16:29;gnt;Patch fixing the issue and enhancing spec conformance.,"20/Dec/07 19:15;rickhall;There was a bug in the patch (it would throw an exception IF the bundle could be resolved), so I fixed that and committed it. Please close this issue if everything is ok.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve native code loading,FELIX-439,12384906,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,18/Dec/07 22:29,18/Dec/07 23:06,13/Mar/19 22:56,18/Dec/07 22:42,,,,,,,Framework,,,0,,,,,,"We need to improve native code loading in three areas:

1) bundle installation should fail in case a native library is not in the jar but in the header clause that is selected for the current platform.
2) we should only use the first library we find of a given name.
3) on MacOSX there are two extensions accepted by java namely, .jnilib and .dylib but System.mapLibrary() returns only the .jnilib extension.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-18 23:06:06.388,,,no_permission,,,,,,,,,,,,58547,,,Tue Dec 18 23:06:06 UTC 2007,,,,,,0|i0vtrr:,183796,,,,,,,,"18/Dec/07 22:42;karlpauls;Bundle installation will now fail in case a native library is not in the jar and we only use the first library of a given name. Furthermore, we now support .dylib extensions on the mac as well as others (should make it possible to use .netmodules as well). Additionally, the name checking is more strict avoiding an issue that could result in loading the wrong library in certain cases.","18/Dec/07 23:06;marrs;about 3)

If you look at the implementation for ClassLoader.loadLibrary() on the Mac, you see it first asks the classloader of the class that loads the library, and then tries to use the system and user library paths, iterating over them in turn. The interesting thing is that it first uses System.mapLibrary() as Karl explains to create the mapping from logical to physical name (ie: foo -> libfoo.jnilib) and then ""hardcoded"" assumes the extension is .jnilib and if that file cannot be found, replaces the extension with .dylib (using replaceFirst() which does not really work well if there are multiple substrings called .jnilib, but that's another matter). At least we can improve by emulating this behaviour in its intended way.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError in URLHandlers.createStreamHandler() when creating URL on jamvm and Mika ,FELIX-435,12384611,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,13/Dec/07 22:39,13/Dec/07 22:46,13/Mar/19 22:56,13/Dec/07 22:46,,,,,,,Framework,,,0,,,,,,"It looks like we have an unfortunate interaction between our ExtensionManager and the URLHandlers on jamvm and Mika . 

Basically, when a URL is created inside a bundle the URLHandlers are asked to find a stream handler. One step of this process is to do a Class.forName() which will use the framework classloader. Now, in case this happens to be a URLClassLoader we have added a URL with our ExtensionManager as a handler. This is not a problem unless the URL is toString()-ed and then recreated which seems to be the case for jamvm/classpath and Mika. 

Subsequently, the attempt to find a handler for the protocol of the ExtensionManager URL will call URLHandlers.createStreamHandler() again and we have a loop until StackOverflowError. ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,58551,,,Thu Dec 13 22:46:15 UTC 2007,,,,,,0|i0vtmn:,183773,,,,,,,,"13/Dec/07 22:46;karlpauls;The URLHandlers are now aware of the extension protocol. We will directly return the extension manager in case this protocol is used - pretty much like we already do for the bundle protocol. Seems to work on both, jamvm and Mika. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Detect J9 bug and avoid using Collections.unmodifiable if the bug is present,FELIX-416,12381498,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,karlpauls,karlpauls,30/Oct/07 22:36,06/Nov/07 21:13,13/Mar/19 22:56,06/Nov/07 21:13,,,,,,,,,,0,,,,,,"I have a case where a specific version of J9 does throw a NCDF exception if Collections.unmodifiable* is used. Since the use of this is somewhat optional in our case I plan to add a check to detect whether this bug is present and if so, don't wrap the collection.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,58570,,,Tue Nov 06 21:13:50 UTC 2007,,,,,,0|i0vs0v:,183513,,,,,,,,06/Nov/07 21:13;karlpauls;We detect the bug dynamically and use a modifiable map in case it is present.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible problem with Manifest parser if Native libs for running platform not declared,FELIX-412,12381259,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,walkerr,walkerr,26/Oct/07 16:45,26/Oct/07 20:21,13/Mar/19 22:56,26/Oct/07 20:21,,,,,,,Framework,,,0,,,,,,"We have a bundle that includes native code. The native code is only needed/used on some platforms, and hence the manifest doesn't list every platform used e.g.

   Bundle-NativeCode: /platlib.dll; osname=Windows NT; osname=Windows
   2000; osname=Windows 2003; osname=Windows XP; processor=x86,
   /libplatlib.so; osname=Linux; processor=x86; osname=NONSTOP_KERNEL;
   processor=IA64N

Previous versions of Felix/Oscar were fine with this - you only got an error thrown when you tried to actually use native classes on a platform that was not declared in the Manifest.

It seems now that this breaks during Manifest parsing, meaning our app won't load on say Solaris, even though we don't actually need the native libs on that platform:

org.osgi.framework.BundleException: Unable to select a native library clause.
       at org.apache.felix.framework.util.manifestparser.ManifestParser.getSelectedLibraryClause(ManifestParser.java:349)
       at org.apache.felix.framework.util.manifestparser.ManifestParser.getLibraries(ManifestParser.java:306)
       at org.apache.felix.framework.Felix.createModule(Felix.java:3337)
       at org.apache.felix.framework.Felix.createBundleInfo(Felix.java:3263)
       at org.apache.felix.framework.Felix.installBundle(Felix.java:2224)
       at org.apache.felix.framework.Felix.installBundle(Felix.java:2138)
       at org.apache.felix.framework.Felix.processAutoProperties(Felix.java:3606)
       at org.apache.felix.framework.Felix.start(Felix.java:803)
       at com.ascert.vt.launch.VtLauncher.a(VtLauncher.java:142)
       at com.ascert.vt.launch.VtLauncher.a(VtLauncher.java:102)
       at com.ascert.vt.launch.VtLauncher.a(VtLauncher.java:224)
       at com.ascert.vt.launch.VtLauncher.main(VtLauncher.java:210)



It doesn't seem right that Manifest parser should object to this and throw a fatal error - just because a native lib is not provided for the current platform does not mean it will be actually needed, and surely the parser's job isn't to make such decisions. At the point a missing native lib is needed and missing would seem to be the more valid place to throw an error, which I think is how it used to work.

One workaround would be to split out Winx86 libs into separate bundles, but that sort of defeats the elegant way OSGi handles platform dependencies. ",Solaris / Sunos execution of Felx app version lifted from Windows,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-26 20:21:16.278,,,no_permission,,,,,,,,,,,,58574,,,Fri Oct 26 20:21:16 UTC 2007,,,,,,0|i0vs0n:,183512,,,,,,,,"26/Oct/07 20:21;rickhall;Actually, Rob I think this is an area of difference between Oscar and the R4 spec. Either there was a grey area in the spec before or Oscar just implemented this incorrectly, but now you need to add a ""*"" to the end of your native library clause to indicate that there is a default match or optional match if none of the other clauses matched. Check out page 59 of the R4.1 spec and see if this will solve your issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix properties file is missing several packages,FELIX-371,12378700,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,karlpauls,gnt,gnt,19/Sep/07 22:21,20/Sep/07 07:35,13/Mar/19 22:56,20/Sep/07 07:35,,,,,,,,,,0,,,,,,"See http://opensource.atlassian.com/projects/spring/browse/OSGI-194 and provided patch.
I'm not sure about the JRE 6 because I don't have any right now.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-20 07:14:59.181,,,no_permission,,,,,,,,,,,,58614,,,Thu Sep 20 07:35:14 UTC 2007,,,,,,0|i0vucv:,183891,,,,,,,,20/Sep/07 07:14;karlpauls;I'll look into it. Thanks for reporting the issue. ,20/Sep/07 07:35;karlpauls;The patch doesn't apply anymore. There are however a few packages missing/wrong. Fixed in trunk as of revision 577601.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Forceable termination of Felix instance leaves global EventDispatcher in non-restartable state,FELIX-363,12377962,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,walkerr,walkerr,walkerr,11/Sep/07 10:30,11/Sep/07 16:30,13/Mar/19 22:56,11/Sep/07 10:39,,,,,,,Framework,,,0,,,,,,"FELIX-314 fixed an issue where internal shutdown of the global EventDispatcher thread left Felx in a state where new instances could not be started within the same VM at a later time.

It seems in an Applet VM environment using JRE 1.6 and IE7 there is a variation on this case where the Applet VM is forcibly killing VM threads not cleanly terminated by the application itself e.g. a sloppily written Applet  (like ours!) which launched a Felix instance in the start() but didn't shut it down in the stop().

Such a forceable termination is not tracked or detected, and hence leads to a similar inability to start additional Felix instances as was being seen in FELIX-314

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-11 15:29:41.663,,,no_permission,,,,,,,,,,,,58622,,,Tue Sep 11 16:30:05 UTC 2007,,,,,,0|i0vtp3:,183784,,,,,,,,"11/Sep/07 10:39;walkerr;Committed a fix which should ensure:

- m_thread is nulled out whenever run() exits regardless of reason

- also checks whether m_thread.isAlive() to handle cases where thread is killed but not detected internally, and m_thread doesn't get nulled out.","11/Sep/07 15:29;rickhall;The patch makes it so that the calling thread of EventDispatcher.shutdown() no longer waits for the dispatcher thread to shutdown. This changes the behavior a little bit, but I am not sure if anyone cares about this.

I could imagine, given the situation of the dispatcher thread being killed, that you could get into some condition where the calling thread is waiting for the dispatcher thread forever since there is likely a race condition between the caller waiting and the dispatcher getting killed.","11/Sep/07 16:30;walkerr;Good spot - thanks for commenting Richard

We had a minor issue with this seeming like a lock-up case, although it's very boundary. So not an issue to put the ""wait on shutdown"" code back in if others need it / prefer it.

Could also make waiting it an optional/default case selectable by property if it's something that only a few use-cases need.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The installer does not include the bundles and does not start correctly,FELIX-293,12370008,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Major,Fixed,rickhall,gnt,gnt,22/May/07 23:23,01/Jun/07 15:40,13/Mar/19 22:56,01/Jun/07 15:40,framework-0.8.0,,,,framework-1.0.0,,Installer,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,22/May/07 23:23;gnt;FELIX-293.patch;https://issues.apache.org/jira/secure/attachment/12357931/FELIX-293.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-01 15:40:23.729,,,no_permission,,,,,,,,,,,,58691,,,Fri Jun 01 15:40:23 UTC 2007,,,,,,0|i0vtnb:,183776,,,,,,,,"01/Jun/07 15:40;rickhall;I applied this patch. I modified it slightly to try to make the config.properties more similar to the config.properties file in ""main/"". I notice that some of the packages being exported by the system bundle are different in some JRE platform property definitions (e.g., Apache Xalan, etc.). I am not sure if these should be included in the original config.properties file or not.

Guillaume, if everything looks good, maybe you can close this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gogo shell interrupts wrong thread on Activator stop ,FELIX-6046,13213411,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,tjwatson,sbratton,sbratton,01/Feb/19 21:19,07/Feb/19 19:31,13/Mar/19 22:56,05/Feb/19 16:41,gogo.shell-1.1.2,,,,gogo.shell-1.1.4,,Gogo Shell,,,0,,,,,,gogo shell interrupts the thread calling stop rather than the shell thread itself.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2019-02-01 21:43:10.738,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Feb 07 19:31:34 UTC 2019,,,,,,0|yi0l20:,9223372036854775807,,,,,,,,"01/Feb/19 21:43;githubbot;GitHub user sebratton opened a pull request:

    https://github.com/apache/felix/pull/181

    FELIX-6046 - fix gogo shell thread interrupt.

    proposed fix for FELIX-6046

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sebratton/felix gogo-shell-6046

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/181.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #181
    
----
commit ff104db634f48d9009eb51f156400586272c3a29
Author: Samuel E Bratton <sebratton@...>
Date:   2019-02-01T21:27:58Z

    FELIX-6046 - fix gogo shell thread interrupt.

----
","07/Feb/19 19:31;githubbot;Github user sebratton closed the pull request at:

    https://github.com/apache/felix/pull/181
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Posix 'ls' command ignores .. unless -a is specified,FELIX-5968,13192283,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,jbonofre,paulmcculloch,paulmcculloch,17/Oct/18 15:23,22/Jan/19 14:42,13/Mar/19 22:56,22/Jan/19 14:42,,,,,gogo.jline-1.1.4,, Console,Gogo JLine,,0,,,,,,"The ls command in org.apache.felix.gogo.jline.Posix applies a filter to all paths beginning with a period. .. (parent) begins with a period, but isn't a hidden directory. .(current) should also be listed without -a.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-10-17 15:36:41.047,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Jan 22 14:41:53 UTC 2019,,,,,,0|i3zbev:,9223372036854775807,,,,,,,,"17/Oct/18 15:36;githubbot;GitHub user paul-mcculloch opened a pull request:

    https://github.com/apache/felix/pull/158

    FELIX-5968 Posix 'ls' command ignores .. unless -a is specified

    FELIX-5968
    Posix 'ls' command ignores .. unless -a is specified

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/paul-mcculloch/felix trunk

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/felix/pull/158.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #158
    
----
commit 0232e90938528333cf1e4a74adf8d372778d8ed5
Author: Paul McCulloch <paul.mcculloch@...>
Date:   2018-10-17T15:34:26Z

    FELIX-5968 Posix 'ls' command ignores .. unless -a is specified
    
    FELIX-5968
    Posix 'ls' command ignores .. unless -a is specified

----
","22/Jan/19 14:41;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/felix/pull/158
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gogo command exports org.osgi.service.log,FELIX-5958,13190399,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,tjwatson,tjwatson,tjwatson,09/Oct/18 15:34,03/Jan/19 17:56,13/Mar/19 22:56,10/Oct/18 16:24,,,,,gogo.command-1.1.0,,Gogo Command,,,0,,,,,,The command bundle uses the org.osgi.service.log package to get the LogService in order to implement the `log` command.  I think it would be better to optionally import (and/or dynamically import) the package instead.,,,,,,,,,,,,,,,,,,,FELIX-5143,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-10-09 21:18:21.731,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Oct 15 15:08:26 UTC 2018,,,,,,0|i3yzuf:,9223372036854775807,,,,,,,,09/Oct/18 21:18;rotty3000;[~tjwatson] how would you feel about adding the log commands directly to the log service impls? It's almost trivial code and there's no upstream dependency on gogo.,10/Oct/18 12:41;tjwatson;That could be fine except we have the log service impl in the Equinox framework.  IIRC it is not so nice to provide the nice `@Descriptor` information about the command and params without binding to the runtime package `org.apache.felix.service.command`,"10/Oct/18 16:24;tjwatson;I went ahead and released an update to make the log service package a dynamic import and change it to no longer be exported by the gogo.command bundle.

In another issue we can consider moving the log command implementation to the log services impls.","15/Oct/18 09:26;rinswind;[~rotty3000] I second that.
The basic gogo commands should be tied to the core only. They are fundamental and I would always want to have them and therefore they should not force on me any additional ways to work with other services.",15/Oct/18 15:08;tjwatson;[~rinswind] I agree that moving the log command to the impl is the best approach.  We can consider doing that in another issue.  But for now I just made the dependency on the log service package a dynamic import.,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add media type application/json to the reporter and ootb servlets,FELIX-5907,13178830,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,andrei.dulvac,andrei.dulvac,andrei.dulvac,14/Aug/18 11:41,14/Aug/18 12:36,13/Mar/19 22:56,14/Aug/18 12:36,systemready-0.2.0,,,,systemready-0.4.0,,,,,0,,,,,,"The ootb servlets respond with a json, but the media type is not set to application/json",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,2018-08-14 11:41:08.0,,,,,,0|i3x0z3:,9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Whong default for outputDirectory property,FELIX-5728,13111704,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,reizy,reizy,24/Oct/17 13:45,08/Nov/17 15:21,13/Mar/19 22:56,08/Nov/17 15:21,maven-scr-plugin 1.15.0,maven-scr-plugin-1.25.0,,,,,SCR Tooling,,,0,,,,,,"Documentation at http://felix.apache.org/documentation/subprojects/apache-felix-maven-scr-plugin/apache-felix-maven-scr-plugin-use.html declare 
Default for outputDirectory property: *${project.build.directory}/scr-plugin-generated*.
Looks like it should be changed to *${project.build.outputDirectory}* according with FELIX-4241",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-11-08 15:21:58.076,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Nov 08 15:21:58 UTC 2017,,,,,,0|i3ln3j:,9223372036854775807,,,,,,,,08/Nov/17 15:21;cziegeler;Fixed the website documentation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[gogo][jline] The ""cd"" command should not attempt to complete multiple directories",FELIX-5635,13070107,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,gnt,gnt,08/May/17 18:26,02/Oct/17 09:34,13/Mar/19 22:56,02/Oct/17 09:34,gogo.jline-1.0.6,,,,gogo.jline-1.0.10,,,,,0,,,,,,,,,,,,,,,,,,,,,KARAF-5398,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Oct 02 09:34:40 UTC 2017,,,,,,0|i3enkn:,9223372036854775807,,,,,,,,"02/Oct/17 09:34;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	gogo/jline/src/main/resources/gosh_profile
Committed r1810323
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Inject annotation ignored when applied on ServiceRegistration,FELIX-5517,13040597,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,06/Feb/17 10:59,06/Feb/17 14:58,13/Mar/19 22:56,06/Feb/17 14:58,dependencymanager.annotations-3.2.0,dependencymanager.runtime-3.2.0,,,org.apache.felix.dependencymanager-r9,,Dependency Manager Annotations,Dependency Manager Runtime,,0,,,,,,"When you annotate a ServiceRegistration with @Inject, the annotation is actually ignored and your service registration is not injected in the annotated field.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 14:58:26 UTC 2017,,,,,,0|i39nof:,9223372036854775807,,,,,,,,"06/Feb/17 14:58;pderop;fixed in revision 1651957
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceReference#getUsingBundles() returns usages with 0 count,FELIX-5485,13033278,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,rsabitov,rsabitov,10/Jan/17 06:07,16/Jan/17 08:16,13/Mar/19 22:56,16/Jan/17 08:16,framework-5.6.0,,,,framework-5.6.2,,Framework,,,0,,,,,,"Javadoc for ServiceReference#getUsingBundles() states 

{quote}
Specifically, this method returns the bundles whose usage count for that service is greater than zero.
{quote}

However, the implementation uses ServiceRegistry#getUsingBundles(ServiceReference<?> ref), which returns usages even if usage count is 0. 

The usage count is 0, because ServiceRegistry#ungetService doesn't call ServiceRegistry#flushUsageCount for non-prototype services:

{quote}
                // If the registration is invalid or the usage count for a prototype
                // reached zero, then flush it. Non-prototype services are not flushed
                // on ungetService() when they reach 0 as this introduces a race
                // condition of concurrently the same service is obtained via getService()
{quote}

Expected: 

ServiceReference#getUsingBundles() doesn't return usages with 0 count",,,,,,,,,,,,,,,,,,,,,11/Jan/17 06:13;rsabitov;FELIX-5485.diff;https://issues.apache.org/jira/secure/attachment/12846758/FELIX-5485.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2017-01-16 08:16:21.832,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Jan 16 08:16:21 UTC 2017,,,,,,0|i38ha7:,9223372036854775807,,,,,,,,"11/Jan/17 05:53;rsabitov;Please consider this patch to fix the bug.

I grant Apache the rights to use it. 

The real fix is to return usages with counts more than 0, and it's a one-line fix in {{getUsingBundles}} method.

However, service unregistration has been relying on {{getUsingBundles}} returning all bundles that have entries in {{m_inUseMap}}. To fix that, I added a flush of all usages in all bundles for a particular reference in {{unregisterService}}. ",11/Jan/17 06:33;rsabitov;[~bosschaert] Could you please take a look at the patch?,"16/Jan/17 08:16;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
	M	framework/src/test/java/org/apache/felix/framework/ServiceRegistryTest.java
Committed r1778984


Thx for the patch !",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log message 'callback not found on component instances' incorrectly shown if exception occurs during calling of callback method,FELIX-5436,13024728,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,JeroenDaanen,JeroenDaanen,01/Dec/16 10:07,04/Dec/16 23:31,13/Mar/19 22:56,04/Dec/16 23:31,org.apache.felix.dependencymanager-r8,,,,,,Dependency Manager,,,0,,,,,,"In the method ComponentImpl.invokeCallbackMethod(Object[], String, Class<?>[][], Object[][], boolean) a message is logged when an exception occurs during call of the callback method, because in that case the 'callbackFound' variable is not set.
This is confusing when reading error log.

Suggestion for code change:

{code}
    public void invokeCallbackMethod(Object[] instances, String methodName, Class<?>[][] signatures,
        Object[][] parameters, boolean logIfNotFound) {
        boolean callbackFound = false;
        boolean exceptionOccurredInCallback = false;
        for (int i = 0; i < instances.length; i++) {
            try {
                InvocationUtil.invokeCallbackMethod(instances[i], methodName, signatures, parameters);
                callbackFound |= true;
            }
            catch (NoSuchMethodException e) {
                // if the method does not exist, ignore it
            }
            catch (InvocationTargetException e) {
                // the method itself threw an exception, log that
                m_logger.log(Logger.LOG_ERROR, ""Invocation of '"" + methodName + ""' failed."", e.getCause());
                exceptionOccurredInCallback = true;
            }
            catch (Throwable e) {
                m_logger.log(Logger.LOG_ERROR, ""Could not invoke '"" + methodName + ""'."", e);
                exceptionOccurredInCallback = true;
            }
        }
        
        // If the callback is not found, we don't log if the method is on an AbstractDecorator.
        // (Aspect or Adapter are not interested in user dependency callbacks)        
        if (logIfNotFound && ! exceptionOccurredInCallback && ! callbackFound && ! (getInstance() instanceof AbstractDecorator)) {
            if (m_logger == null) {
                System.out.println(""\"""" + methodName + ""\"" callback not found on component instances ""
                    + Arrays.toString(instances));
            } else {
                m_logger.log(LogService.LOG_ERROR, ""\"""" + methodName + ""\"" callback not found on component instances ""
                    + Arrays.toString(instances));
            }

        }
    }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-12-04 23:31:36.755,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Dec 04 23:31:36 UTC 2016,,,,,,0|i370jj:,9223372036854775807,,,,,,,,"04/Dec/16 23:31;pderop;Hi Jeroen;

I committed the patch in revision 1772584. and slightly modified it in order to reuse the ""callbackFound"" variable, which I have reset to true in case an invocation target occurs. Also, I think the other exceptions (IllegalArgumentException , or IllegalAccessException) can be considered as a  callback not found.

thank you",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aspect swap callback sometimes not called on optional dependencies,FELIX-5429,13023521,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,26/Nov/16 17:34,26/Nov/16 17:50,13/Mar/19 22:56,26/Nov/16 17:50,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"This issue concerns the following corner case scenario:

You have a component A with a required dependency on ""Required"" service, and an optional dependency on a ""B"" service.

You have also an aspect for the ""B"" service.

So, when A starts, it will be called in 

- A.add(Required)
- A.add(originalBService)
- A.swap(originalBService, aspectForBService) // assuming the aspect is started after B service and after A

Now, there is a a ComponentStateListener on A which removes the B aspect when the ""A"" component is stopping.

So, the bug is the following: when you remove the ""Required"" Service, A is called in :

- A.remove(originalBService)
- A.stop()

so, here the A component should have been called like this 

- A.swap(aspectForBService, originalBService)
- A.remove(originalB)
- A.stop()

Here, the swap callback should be called because the state listening is removing the aspect while A is stopping.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sat Nov 26 17:50:11 UTC 2016,,,,,,0|i36t3b:,9223372036854775807,,,,,,,,"26/Nov/16 17:50;pderop;Fixed in revision 1771506.

added FELIX5429_AspectSwapCallbackNotCalledForOptionalDepenency.java test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Factory configuration adapter ignores factory method,FELIX-5402,13019373,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,08/Nov/16 21:28,08/Nov/16 21:42,13/Mar/19 22:56,08/Nov/16 21:42,dependencymanager-3.1.0,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"when you declare a factory configuration adapter service using dependency manager, you can't specify a factory method parameter.

For example, you can't declare this: (the factory method is ignored):

{code}
     Component adapter = 
        dm.createFactoryConfigurationAdapterService(""my.pid"", ""update"", true)
             .setInterface(AdapterService.class.getName(), null)
             .setFactory(new Factory(), ""create"");
{code}

then the ""setFactory(...)"" parameters are ignored by the adapter.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Nov 08 21:42:10 UTC 2016,,,,,,0|i363hr:,9223372036854775807,,,,,,,,08/Nov/16 21:42;pderop;committed fix in revision 1768787.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't override default configuration type map value using an empty map,FELIX-5401,13018706,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,06/Nov/16 23:04,06/Nov/16 23:08,13/Mar/19 22:56,06/Nov/16 23:08,org.apache.felix.dependencymanager-r8,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"Assume you are using the following configuration type:

{code}
    public interface MyConfig {
        public default SortedMap<String, String> getMap() { 
        	SortedMap<String, String> defaultMap = new TreeMap<>();
        	defaultMap.put(""key1"", ""default1"");
        	defaultMap.put(""key2"", ""default2"");
        	return defaultMap;
        }        
    }
{code}

So, you can then declare the following values in the actual configuration dictionary for the ""map"" key:

{code}
map.key1=value1
map.key2=value2
...

or

map={key1.value1, key2.value2}
{code}

But assuming that you now want to register in config admin a configuration dictionary with an empty map for the ""map"" key: it is not currently possible, because if you don't declare any values for the ""map"" key, then the default value of the configuration type will be returned (see FELIX-5399).

And if you declare the following value for the ""map"" key:

map={}

then it does not work too because the ""toMap"" method in the Configurable.java class does not check empty ""{}"" declaration.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Nov 06 23:08:08 UTC 2016,,,,,,0|i35zdb:,9223372036854775807,,,,,,,,"06/Nov/16 23:06;pderop;Added test in revision 1768402.

org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/FELIX5401_OverrideDefaultListConfigTypeWithEmptyMap.java",06/Nov/16 23:07;pderop;committed candidate fix in revision 1768403.,06/Nov/16 23:08;pderop;I think it's ok now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't override default configuration type list value using an empty list,FELIX-5400,13018704,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,06/Nov/16 22:45,06/Nov/16 22:59,13/Mar/19 22:56,06/Nov/16 22:59,org.apache.felix.dependencymanager-r8,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"Assume you are using the following configuration type:

{code}
    public interface MyConfig {
        public default List<String> getList() { 
        	return Arrays.asList(""a"", ""b"");
        }        
    }
{code}

So, you can then declare the following values in the actual configuration dictionary for the ""list"" key:

{code}
list=[a,b]

or

list.0=a
list.1=b
{code}

But assuming that you now want to register in config admin a configuration dictionary with an empty list (you really want an empty list []): then it is not currently possible, because if you don't declare any values for the ""list"" key, then the default value of the configuration type will be returned (see FELIX5399).

And if you declare the following value for the ""list"" key:

list=[]

then it does not work too  (an empty list won't be returned) because the ""toCollection"" method in the Configurable.java class calls: 

{code}
Arrays.asList(str.split(""\\s*,\\s*""))
{code}

which then returns an array of size=1, instead of returning an array of zero size.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Nov 06 22:59:25 UTC 2016,,,,,,0|i35zcv:,9223372036854775807,,,,,,,,"06/Nov/16 22:53;pderop;Added test cases in revision 1768398:

org.apache.felix.dependencymanager.itest/src/org/apache/felix/dm/itest/api/FELIX5400_OverrideDefaultMapConfigTypeWithEmptyList.java",06/Nov/16 22:59;pderop;Committed a candidate fix in revision 1768399.,06/Nov/16 22:59;pderop;I think it is resolved.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to define default map or list config types,FELIX-5399,13018703,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,06/Nov/16 22:25,06/Nov/16 22:33,13/Mar/19 22:56,06/Nov/16 22:33,org.apache.felix.dependencymanager-r8,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"Assume you have a key in a given configuration dictionary which corresponds to a map or a list.
For example:

{code}
map={key1=value1, key2=value2}
list=[a,b,c}
{code}

Now assume we have the corresponding configuration type, which defines default values for the ""map"" or ""list"" keys:

{code}
    public interface ConfigType {
        public default List<String> getList() { 
        	return Arrays.asList(""default1"", ""default2"");
        }

        public default SortedMap<String, String> getMap() { 
        	SortedMap<String, String> defaultMap = new TreeMap<>();
        	defaultMap.put(""key1"", ""default1"");
        	defaultMap.put(""key2"", ""default2"");
        	return defaultMap;
        }        
    }
{code}

Now, assume also that:

- you use an optional configurationdependency and the configuration is currently unavailable
- or the configuration is currently available (whatever the configuration dependency is optional or required), but there is currently no values for ""map"" or ""list"" keys

Then the problem is that the default map or list values declared in the ConfigType interface are not used as default values, but instead when you access to the ""map"" or ""list"" configuration keys, then you get an implicit empty map or an empty list (instead of the defaults values defined in the configuration type)

See org.apache.felix.dm.itest.api.DefaultListConfigType.java and org.apache.felix.dm.itest.api.DefaultMapConfigType, which reproduce the issue.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Sun Nov 06 22:33:26 UTC 2016,,,,,,0|i35zcn:,9223372036854775807,,,,,,,,"06/Nov/16 22:32;pderop;Committed the test cases, as well as a candidate fix in revision in revision 1768397.",06/Nov/16 22:33;pderop;I think the issue is resolved. will reopen later in case I find some uncovered use cases.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Metatype Service Inventory Printer json export fails on duplicate keys,FELIX-5369,13010188,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,stillalex,stillalex,06/Oct/16 15:21,06/Oct/16 15:29,13/Mar/19 22:56,06/Oct/16 15:29,,,,,webconsole-metatype-plugin-1.0.0,,Web Console,,,0,,,,,,"The JSON export can fail if there are 2 factories available for a specific bundle.
{noformat}
Caused by: org.json.JSONException: Duplicate key ""org.apache.sling.featureflags.impl.ConfiguredFeature$Config""
	at org.json.JSONObject.putOnce(JSONObject.java:1121)
	at org.json.JSONWriter.key(JSONWriter.java:207)
	at org.apache.felix.webconsole.plugins.metatype.internal.MetatypeInventoryPrinter$JsonPrinter.group(MetatypeInventoryPrinter.java:377)
	... 52 common frames omitted
{noformat}
",,,,,,,,,,,,,,,,,,,,,06/Oct/16 15:24;stillalex;FELIX-5369.patch;https://issues.apache.org/jira/secure/attachment/12831976/FELIX-5369.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-10-06 15:29:53.954,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Oct 06 15:29:53 UTC 2016,,,,,,0|i34iyv:,9223372036854775807,,,,,,,,"06/Oct/16 15:24;stillalex;with [~cziegeler]'s kind help, patch for the above.","06/Oct/16 15:29;cziegeler;Thanks for the patch, [~alexparvulescu]. It's applied with rev 1763610",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix Site: Fix external links to bndtools website,FELIX-5361,13007181,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,sseifert@pro-vision.de,sseifert@pro-vision.de,23/Sep/16 15:42,26/Sep/16 09:54,13/Mar/19 22:56,26/Sep/16 09:54,,,,,,,Documentation,,,0,,,,,,"http://felix.apache.org/ contains a lot of links to bnd documentation, which are all broken currently - e.g. http://www.aqute.biz/Bnd/Bnd

attached is a patch that changes the links to their new locations.",,,,,,,,,,,,,,,,,,,,,23/Sep/16 15:43;sseifert@pro-vision.de;FELIX-5361-bnd-links.patch;https://issues.apache.org/jira/secure/attachment/12830074/FELIX-5361-bnd-links.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2016-09-26 09:54:41.982,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Sep 26 09:54:41 UTC 2016,,,,,,0|i340fb:,9223372036854775807,,,,,,,,"26/Sep/16 09:54;cziegeler;Thanks for your patch Stefan, it's applied in 1762306",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UPnP plugin should use Inventory instead of deprecated ConfigurationPrinter,FELIX-4997,12852923,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,v_valchev,v_valchev,v_valchev,07/Aug/15 09:52,07/Aug/15 13:03,13/Mar/19 22:56,07/Aug/15 13:03,webconsole-upnp-plugin-1.0.6,,,,webconsole-upnp-plugin-1.0.8,,Web Console,,,0,,,,,,"Now it uses the ConfigurationPrinter but still I'm unable to see the UPnP status for some reason.

The updated printer should also support both - text and json format of the data.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Aug 07 13:03:23 UTC 2015,,,,,,0|i2igo7:,9223372036854775807,,,,,,,,07/Aug/15 13:03;v_valchev;fixed in svn commit: r1694640,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Felix-SCR Source Tarball Downloads Are Not Available,FELIX-4900,12831729,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,jkang,jkang,21/May/15 13:06,08/Jul/15 14:04,13/Mar/19 22:56,08/Jul/15 14:04,,,,,,,,,,0,available,broken,download,link,not,"The source tarball for Felix' latest SCR (org.apache.felix.scr-1.8.2.tar.gz) is not available on a few (if not all) mirrors from http://felix.apache.org/downloads.cgi. Attempting to download results in messages similar to: ""The requested URL /apache//felix/org.apache.felix.scr-1.8.2-source-release.tar.gz was not found on this server."" The mirrors I have tried all have the source tarball for version 1.8.0.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Jul 08 14:04:56 UTC 2015,,,,,,0|i2f1q7:,9223372036854775807,,,,,,,,08/Jul/15 14:04;jkang;The mirrors now have the updated versions.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Impossible to set the felix.fileinstall.optionalImportRefreshScope property from startup,FELIX-4501,12711286,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,bosschaert,rotty3000,rotty3000,29/Apr/14 19:07,27/Mar/15 08:50,13/Mar/19 22:56,27/Mar/15 08:50,fileinstall-3.4.0,,,,,,File Install,,,1,,,,,,"I'm seeing a deadlock where on first start the fileinstall bundle is getting stuck with itself

as per the following two stack traces:

{code}
""Refresh Packages"" daemon prio=10 tid=0x00007fc29c0f6800 nid=0x94c waiting on condition [0x00007fc2b9c15000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000c095f950> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)
	at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:945)
	at org.apache.felix.fileinstall.internal.FileInstall.stop(FileInstall.java:171)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$2.run(BundleContextImpl.java:771)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(BundleContextImpl.java:764)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:510)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.suspend(AbstractBundle.java:566)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1207)
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.suspendBundle(PackageAdminImpl.java:326)
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.processDelta(PackageAdminImpl.java:467)
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl.doResolveBundles(PackageAdminImpl.java:251)
	- locked <0x00000000c0cbc1f8> (a org.eclipse.osgi.framework.internal.core.PackageAdminImpl)
	at org.eclipse.osgi.framework.internal.core.PackageAdminImpl$1.run(PackageAdminImpl.java:174)
	at java.lang.Thread.run(Thread.java:744)
   Locked ownable synchronizers:
	- None
{code}

{code}
""fileinstall-/home/rotty/AS/liferay-portal/osgi/portal"" daemon prio=10 tid=0x00007fc2ac01a000 nid=0x920 waiting on condition [0x00007fc2ba721000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000c51bd048> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:994)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1303)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:236)
	at org.apache.felix.fileinstall.internal.FileInstall.refresh(FileInstall.java:319)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.refresh(DirectoryWatcher.java:674)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.doProcess(DirectoryWatcher.java:495)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.process(DirectoryWatcher.java:358)
	at org.apache.felix.fileinstall.internal.DirectoryWatcher.run(DirectoryWatcher.java:310)
   Locked ownable synchronizers:
	- None
{code}

You can see that the refresh event will never return (to tear down  the latch) as long as the {{FileInstall.stop}} operation can't get the lock in to directory which it's currently holding during the refresh operation!

What seems strange is that fileinstall is adding itself to the list of bundles to refresh during the 

{code}
findBundlesWithOptionalPackagesToRefresh(toRefresh);
{code}

call.

It would seem that this could be solved if it were possible to pass the property:

{{felix.fileinstall.optionalImportRefreshScope=managed}}

provided that file install isn't part of the managed set.

However this property cannot be passed (via system property, bundle context, framework properties) except during a service update lifecycle on a managed service, so you can't bootstrap the system from scratch.

Guillaume Nodet suggested that a good work around would be to simply allow all properties to be retrievable from the bundle context (framework properties).",confirmed on equinox 3.8.0.v20120529-1548,,,,,,,,,,,,,,,,,,,,26/Mar/15 19:51;rotty3000;FELIX-4501.patch;https://issues.apache.org/jira/secure/attachment/12707576/FELIX-4501.patch,26/Mar/15 18:16;rotty3000;FELIX-4501.patch;https://issues.apache.org/jira/secure/attachment/12707550/FELIX-4501.patch,,,,2.0,,,,,,,,,,,,,,,,,,,2015-03-26 14:58:47.87,,,no_permission,,,,,,,,,,,,389607,,,Fri Mar 27 08:50:52 UTC 2015,,,,,,0|i1v3yn:,389849,,,,,,,,26/Mar/15 14:58;bosschaert;[~rotty3000] would you maybe have a patch that implements a potential solution to this?,"26/Mar/15 15:09;rotty3000;I would be willing to do that! Sadly, I can't build fileinstall on master.

{code}
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4.287 s
[INFO] Finished at: 2015-03-26T11:07:34-04:00
[INFO] Final Memory: 27M/430M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.codehaus.mojo:animal-sniffer-maven-plugin:1.7:check (default) on project org.apache.felix.fileinstall: Signature errors found. Verify them and put @IgnoreJRERequirement on them. -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
{code}","26/Mar/15 15:17;bosschaert;Hmmm, {{mvn clean install}} works fine for me with Java 7 and Java 8 (and Maven 3.0.5). What are the actual signatures it complains about?","26/Mar/15 16:59;rotty3000;I'm sorry, I'm not sure what I'm doing wrong :(

I am synced to trunk with no local changes.

Here is the complete log:
{code}
[rotty@rotty-XPS-15-9530 (trunk $=) fileinstall]$ git remote -v
origin	git@github.com:rotty3000/felix.git (fetch)
origin	git@github.com:rotty3000/felix.git (push)
upstream	git://github.com/apache/felix.git (fetch)
upstream	git://github.com/apache/felix.git (push)
[rotty@rotty-XPS-15-9530 (trunk $=) fileinstall]$ git status
On branch trunk
Your branch is up-to-date with 'origin/trunk'.
nothing to commit, working directory clean
[rotty@rotty-XPS-15-9530 (trunk $=) fileinstall]$ mvn clean install
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for org.apache.felix:org.apache.felix.fileinstall:jar:3.5.1-SNAPSHOT
[WARNING] 'build.plugins.plugin.version' for org.codehaus.mojo:rat-maven-plugin is missing. @ line 182, column 15
[WARNING] The expression ${pom.artifactId} is deprecated. Please use ${project.artifactId} instead.
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Apache Felix File Install 3.5.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ org.apache.felix.fileinstall ---
[INFO] Deleting /home/rotty/workspace/felix/fileinstall/target
[INFO] 
[INFO] --- maven-remote-resources-plugin:1.4:process (default) @ org.apache.felix.fileinstall ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ org.apache.felix.fileinstall ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 0 resource to META-INF
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.5.1:compile (default-compile) @ org.apache.felix.fileinstall ---
[INFO] Compiling 14 source files to /home/rotty/workspace/felix/fileinstall/target/classes
[INFO] 
[INFO] --- maven-bundle-plugin:2.1.0:manifest (bundle-manifest) @ org.apache.felix.fileinstall ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ org.apache.felix.fileinstall ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ org.apache.felix.fileinstall ---
[INFO] Compiling 3 source files to /home/rotty/workspace/felix/fileinstall/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ org.apache.felix.fileinstall ---
[INFO] Surefire report directory: /home/rotty/workspace/felix/fileinstall/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.felix.fileinstall.internal.ConfigInstallerTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.117 sec
Running org.apache.felix.fileinstall.internal.DirectoryWatcherTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.079 sec
Running org.apache.felix.fileinstall.internal.BundleTransformerTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Exception in thread ""fileinstall-/home/rotty/workspace/felix/fileinstall/src/test/resources/watched"" 
Results :

Tests run: 24, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] --- animal-sniffer-maven-plugin:1.7:check (default) @ org.apache.felix.fileinstall ---
[INFO] Checking unresolved references to org.codehaus.mojo.signature:java13-sun:1.0
[ERROR] Undefined reference: java/util/Properties.loadFromXML(Ljava/io/InputStream;)V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/lang/StringBuilder in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/lang/StringBuilder.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/lang/StringBuilder.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/io/File.toURI()Ljava/net/URI; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/net/URI.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/net/URI.create(Ljava/lang/String;)Ljava/net/URI; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/io/File.<init>(Ljava/net/URI;)V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/lang/String.replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/ConfigInstaller.class
[ERROR] Undefined reference: java/util/concurrent/CountDownLatch.countDown()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall$1.class
[ERROR] Undefined reference: java/nio/file/FileSystems.getDefault()Ljava/nio/file/FileSystem; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner.class
[ERROR] Undefined reference: java/lang/StringBuilder in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner.class
[ERROR] Undefined reference: java/lang/StringBuilder.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner.class
[ERROR] Undefined reference: java/lang/StringBuilder.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner.class
[ERROR] Undefined reference: java/nio/file/FileSystem.getPathMatcher(Ljava/lang/String;)Ljava/nio/file/PathMatcher; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner.class
[ERROR] Undefined reference: java/lang/Long.valueOf(J)Ljava/lang/Long; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner.class
[ERROR] Undefined reference: java/util/regex/Pattern.compile(Ljava/lang/String;)Ljava/util/regex/Pattern; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Scanner$1.class
[ERROR] Undefined reference: java/util/regex/Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Scanner$1.class
[ERROR] Undefined reference: java/util/regex/Matcher.matches()Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Scanner$1.class
[ERROR] Undefined reference: java/util/concurrent/locks/ReentrantReadWriteLock in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/util/concurrent/locks/ReentrantReadWriteLock.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/util/concurrent/locks/ReadWriteLock.writeLock()Ljava/util/concurrent/locks/Lock; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/util/concurrent/locks/Lock.lock()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/lang/StringBuilder in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/lang/StringBuilder.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/lang/StringBuilder.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/util/concurrent/locks/Lock.unlock()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/util/concurrent/CountDownLatch in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/util/concurrent/CountDownLatch.<init>(I)V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/util/concurrent/CountDownLatch.await()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall.class
[ERROR] Undefined reference: java/nio/file/Path.relativize(Ljava/nio/file/Path;)Ljava/nio/file/Path; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher$FilteringFileVisitor.class
[ERROR] Undefined reference: java/nio/file/Path.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher$FilteringFileVisitor.class
[ERROR] Undefined reference: java/nio/file/PathMatcher.matches(Ljava/nio/file/Path;)Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher$FilteringFileVisitor.class
[ERROR] Undefined reference: java/nio/file/FileVisitResult.SKIP_SUBTREE#Ljava/nio/file/FileVisitResult; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher$FilteringFileVisitor.class
[ERROR] Undefined reference: java/nio/file/FileVisitResult.CONTINUE#Ljava/nio/file/FileVisitResult; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher$FilteringFileVisitor.class
[ERROR] Undefined reference: java/nio/file/Path in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher$FilteringFileVisitor.class
[ERROR] Undefined reference: java/util/concurrent/locks/ReadWriteLock.writeLock()Ljava/util/concurrent/locks/Lock; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall$ConfigAdminSupport$Tracker.class
[ERROR] Undefined reference: java/util/concurrent/locks/Lock.lock()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall$ConfigAdminSupport$Tracker.class
[ERROR] Undefined reference: java/util/concurrent/locks/Lock.unlock()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall$ConfigAdminSupport$Tracker.class
[ERROR] Undefined reference: java/lang/Long.valueOf(J)Ljava/lang/Long; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/FileInstall$ConfigAdminSupport$Tracker.class
[ERROR] Undefined reference: java/util/logging/Level.SEVERE#Ljava/util/logging/Level; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/util/logging/Level.WARNING#Ljava/util/logging/Level; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/util/logging/Level.INFO#Ljava/util/logging/Level; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/util/logging/Level.FINE#Ljava/util/logging/Level; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/util/logging/Level.FINEST#Ljava/util/logging/Level; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/util/logging/Logger.getLogger(Ljava/lang/String;)Ljava/util/logging/Logger; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/util/logging/Logger.log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/lang/StringBuilder in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/lang/StringBuilder.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/lang/StringBuilder.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util$DefaultLogger.class
[ERROR] Undefined reference: java/io/IOException.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/JarDirUrlHandler$Connection.class
[ERROR] Undefined reference: java/lang/AssertionError in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util.class
[ERROR] Undefined reference: java/lang/AssertionError.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util.class
[ERROR] Undefined reference: java/lang/StringBuilder in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util.class
[ERROR] Undefined reference: java/lang/StringBuilder.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util.class
[ERROR] Undefined reference: java/lang/StringBuilder.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util.class
[ERROR] Undefined reference: java/lang/Class.desiredAssertionStatus()Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Util.class
[ERROR] Undefined reference: java/util/concurrent/ConcurrentHashMap in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/util/concurrent/ConcurrentHashMap.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/FileSystem.getRootDirectories()Ljava/lang/Iterable; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/lang/Iterable.iterator()Ljava/util/Iterator; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Path in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/LinkOption in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Files.exists(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/lang/StringBuilder in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Files.isDirectory(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/FileSystem.newWatchService()Ljava/nio/file/WatchService; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchService.close()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/io/File.toPath()Ljava/nio/file/Path; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchKey in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchKey.cancel()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Files.walkFileTree(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchService.poll()Ljava/nio/file/WatchKey; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchKey.pollEvents()Ljava/util/List; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchEvent in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchEvent.kind()Ljava/nio/file/WatchEvent$Kind; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchEvent.context()Ljava/lang/Object; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Path.resolve(Ljava/nio/file/Path;)Ljava/nio/file/Path; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/StandardWatchEventKinds.OVERFLOW#Ljava/nio/file/WatchEvent$Kind; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/StandardWatchEventKinds.ENTRY_CREATE#Ljava/nio/file/WatchEvent$Kind; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/LinkOption.NOFOLLOW_LINKS#Ljava/nio/file/LinkOption; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Files.isRegularFile(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/StandardWatchEventKinds.ENTRY_MODIFY#Ljava/nio/file/WatchEvent$Kind; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/StandardWatchEventKinds.ENTRY_DELETE#Ljava/nio/file/WatchEvent$Kind; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchKey.reset()Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Path.relativize(Ljava/nio/file/Path;)Ljava/nio/file/Path; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/PathMatcher.matches(Ljava/nio/file/Path;)Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/WatchEvent$Kind in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/Path.register(Ljava/nio/file/WatchService;[Ljava/nio/file/WatchEvent$Kind;)Ljava/nio/file/WatchKey; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/nio/file/FileSystems.getDefault()Ljava/nio/file/FileSystem; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Watcher.class
[ERROR] Undefined reference: java/lang/StringBuilder in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/util/concurrent/atomic/AtomicBoolean in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/util/concurrent/atomic/AtomicBoolean.<init>()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/RuntimeException.<init>(Ljava/lang/Throwable;)V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/util/concurrent/locks/ReadWriteLock.readLock()Ljava/util/concurrent/locks/Lock; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/util/concurrent/locks/Lock.lockInterruptibly()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(J)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/StringBuilder.append(Z)Ljava/lang/StringBuilder; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/util/concurrent/locks/Lock.unlock()V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/io/File.toURI()Ljava/net/URI; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI.toURL()Ljava/net/URL; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI.normalize()Ljava/net/URI; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI.getPath()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI.<init>(Ljava/lang/String;)V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI.isOpaque()Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI.getSchemeSpecificPart()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/lang/Long.valueOf(J)Ljava/lang/Long; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/net/URI.toString()Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/util/concurrent/atomic/AtomicBoolean.get()Z in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/util/concurrent/atomic/AtomicBoolean.set(Z)V in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/DirectoryWatcher.class
[ERROR] Undefined reference: java/nio/file/Path.toFile()Ljava/io/File; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner$ScannerWatcher.class
[ERROR] Undefined reference: java/lang/String.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/WatcherScanner$ScannerWatcher.class
[ERROR] Undefined reference: java/lang/Long.valueOf(J)Ljava/lang/Long; in /home/rotty/workspace/felix/fileinstall/target/classes/org/apache/felix/fileinstall/internal/Scanner.class
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4.267 s
[INFO] Finished at: 2015-03-26T12:50:59-04:00
[INFO] Final Memory: 23M/430M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.codehaus.mojo:animal-sniffer-maven-plugin:1.7:check (default) on project org.apache.felix.fileinstall: Signature errors found. Verify them and put @IgnoreJRERequirement on them. -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
{code}","26/Mar/15 17:16;rotty3000;{code}
[rotty@rotty-XPS-15-9530 (trunk $>) fileinstall]$ mvn -version
Apache Maven 3.3.1 (cab6659f9874fa96462afef40fcf6bc033d58c1c; 2015-03-13T16:10:27-04:00)
Maven home: /home/rotty/MY-SHARE/LOBS/TAR-BIN/apache-maven-3.3.1
Java version: 1.7.0_75, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-7-openjdk-amd64/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""3.16.0-31-generic"", arch: ""amd64"", family: ""unix""
{code}","26/Mar/15 17:52;rotty3000;I ended up having to add the following to the pom to make it work:

{code}
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.9</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java17</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
      </plugin>
{code}","26/Mar/15 18:16;rotty3000;With the attached change, all our fileinstall issues on equinox go away when setting the (framework|system) property {{-Dfelix.fileinstall.optionalImportRefreshScope=managed}}",26/Mar/15 19:51;rotty3000;Updated patch just improving the commit message,27/Mar/15 08:50;bosschaert;Thanks [~rotty3000]! I've committed your fix in http://svn.apache.org/viewvc?view=revision&revision=1669527,,,,,,,,,,,,,,,,,,,,,,,
artefact org.apache.felix.ipojo.handler.transaction no longer available,FELIX-4685,12753482,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,clement.escoffier,fritz.pro@gmx.de,fritz.pro@gmx.de,06/Nov/14 19:30,14/Nov/14 07:32,13/Mar/19 22:56,14/Nov/14 07:32,,,,,,,iPOJO,,,0,,,,,,"How could I get the  	
<artifactId>org.apache.felix.ipojo.handler.transaction
with the (external ) TransactionHandler.
It is  available in the Source repository (http://svn.apache.org/viewvc/felix/trunk/ipojo/handler/transaction/transaction-handler/pom.xml?view=markup 
) but it it is not available in any Repository.
Is it outdated or no longer supported?

Can you help.

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-11-14 07:32:41.973,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Fri Nov 14 07:32:41 UTC 2014,,,,,,0|i222lz:,9223372036854775807,,,,,,,,"14/Nov/14 07:32;clement.escoffier;I've re-deployed the handler on https://repository.apache.org/content/repositories/snapshots/org/apache/felix/org.apache.felix.ipojo.handler.transaction-handler-project/1.5.0-SNAPSHOT/

We should cut a release because the handler is working (and I use it). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"addRole does not return the created user, but always null in MongoDB Useradmin",FELIX-4400,12690322,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,jajans,adezeghe,adezeghe,22/Jan/14 17:23,23/Jan/14 09:26,13/Mar/19 22:56,23/Jan/14 09:26,,,,,,,User Admin,,,0,,,,,,"According to the OSGI specifications, the created Role should be returned when calling addRole(). The file based UserAdmin does this correcty, but the mongoDB implementation always returns null.

This can be very easly be solved by changing the return statement of the ""AddRole"" method in MongoDBStore.java  
from: 
return role;

to:
return getRole(roleName);",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2014-01-23 09:26:01.707,,,no_permission,,,,,,,,,,,,369275,,,Thu Jan 23 09:26:01 UTC 2014,,,,,,0|i1rnbj:,369580,,,,,,,,23/Jan/14 09:26;jajans;Committed fix in rev #1560612. Added a MongoDB integration test to cover this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@Option documented instead of @PropertyOption,FELIX-4295,12676039,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,cziegeler,jsedding,jsedding,27/Oct/13 20:50,10/Dec/13 08:00,13/Mar/19 22:56,10/Dec/13 07:41,,,,,,,Documentation,,,0,,,,,,"The documentation at http://felix.apache.org/documentation/subprojects/apache-felix-maven-scr-plugin/scr-annotations.html refers to an @Option annotation, which is really called @PropertyOption.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-12-10 07:41:34.042,,,no_permission,,,,,,,,,,,,355536,,,Tue Dec 10 08:00:26 UTC 2013,,,,,,0|i1pakn:,355824,,,,,,,,10/Dec/13 07:41;cziegeler;Thanks - it's fixed now,10/Dec/13 08:00;jsedding;Thanks Carsten!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on refrsh Import and refresh,FELIX-2437,12467586,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,chrisk,chrisk,22/Jun/10 16:18,25/Sep/13 14:03,13/Mar/19 22:56,13/Aug/10 14:02,framework-2.0.4,webconsole-3.0.0,,,framework-3.0.2,,Framework,,,0,,,,,,"I encountred a Deadlock using Webconsole (s. stacktrace below)

Stepps to reproduce:

1) in webconsole navigate to ""bundles""
2) select and open the detail view of a bundle that has a lot dependencies (I used sling and as bundle the sling api bundle)
3) click ""refresh package import""
4) click ""refresh""

It the request from 4) is processed while he one from 3) is still running, you get a deadlock. 




Found one Java-level deadlock:
=============================
""0:0:0:0:0:0:0:1 [1277221470284] GET /system/console/bundles/105 HTTP/1.1"":
  waiting to lock monitor 0x0039de94 (object 0x06448fd0, a org.apache.felix.framework.BundleImpl),
  which is held by ""FelixPackageAdmin""
""FelixPackageAdmin"":
  waiting to lock monitor 0x0039deb4 (object 0x06235658, a [Ljava.lang.Object;),
  which is held by ""0:0:0:0:0:0:0:1 [1277221470284] GET /system/console/bundles/105 HTTP/1.1""

Java stack information for the threads listed above:
===================================================
""0:0:0:0:0:0:0:1 [1277221470284] GET /system/console/bundles/105 HTTP/1.1"":
        at org.apache.felix.framework.BundleImpl.getModules(BundleImpl.java:1001)
        - waiting to lock <0x06448fd0> (a org.apache.felix.framework.BundleImpl)
        at org.apache.felix.framework.Felix.getExportedPackages(Felix.java:3114)
        at org.apache.felix.framework.Felix.getExportedPackages(Felix.java:3093)
        - locked <0x06235658> (a [Ljava.lang.Object;)
        at org.apache.felix.framework.PackageAdminImpl.getExportedPackages(PackageAdminImpl.java:184)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.listImportExport(BundlesServlet.java:834)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.bundleDetails(BundlesServlet.java:752)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.bundleInfo(BundlesServlet.java:675)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.writeJSON(BundlesServlet.java:570)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.writeJSON(BundlesServlet.java:511)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.renderContent(BundlesServlet.java:485)
        at org.apache.felix.webconsole.AbstractWebConsolePlugin.doGet(AbstractWebConsolePlugin.java:148)
        at org.apache.felix.webconsole.internal.core.BundlesServlet.doGet(BundlesServlet.java:274)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.felix.webconsole.internal.servlet.OsgiManager.service(OsgiManager.java:367)
        at org.apache.felix.http.base.internal.handler.ServletHandler.doHandle(ServletHandler.java:93)
        at org.apache.felix.http.base.internal.handler.ServletHandler.handle(ServletHandler.java:79)
        at org.apache.felix.http.base.internal.dispatch.ServletPipeline.handle(ServletPipeline.java:42)
        at org.apache.felix.http.base.internal.dispatch.InvocationFilterChain.doFilter(InvocationFilterChain.java:49)
        at org.apache.felix.http.base.internal.dispatch.HttpFilterChain.doFilter(HttpFilterChain.java:33)
        at org.apache.felix.http.base.internal.dispatch.FilterPipeline.dispatch(FilterPipeline.java:48)
        at org.apache.felix.http.base.internal.dispatch.Dispatcher.dispatch(Dispatcher.java:39)
        at org.apache.felix.http.base.internal.DispatcherServlet.service(DispatcherServlet.java:67)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.felix.http.proxy.ProxyServlet.service(ProxyServlet.java:60)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.sling.launchpad.base.webapp.SlingServletDelegate.service(SlingServletDelegate.java:275)
        at org.apache.sling.launchpad.webapp.SlingServlet.service(SlingServlet.java:130)
        at com.day.j2ee.servletengine.ServletRuntimeEnvironment.service(ServletRuntimeEnvironment.java:228)
        at com.day.j2ee.servletengine.RequestDispatcherImpl.doFilter(RequestDispatcherImpl.java:315)
        at com.day.j2ee.servletengine.FilterChainImpl.doFilter(FilterChainImpl.java:74)
        at com.day.crx.launchpad.filters.CRXLaunchpadLicenseFilter.doFilter(CRXLaunchpadLicenseFilter.java:96)
        at com.day.j2ee.servletengine.FilterChainImpl.doFilter(FilterChainImpl.java:72)
        at com.day.j2ee.servletengine.RequestDispatcherImpl.service(RequestDispatcherImpl.java:334)
        at com.day.j2ee.servletengine.RequestDispatcherImpl.service(RequestDispatcherImpl.java:378)
        at com.day.j2ee.servletengine.ServletHandlerImpl.execute(ServletHandlerImpl.java:313)
        at com.day.j2ee.servletengine.DefaultThreadPool$DequeueThread.run(DefaultThreadPool.java:134)
        at java.lang.Thread.run(Thread.java:595)
""FelixPackageAdmin"":
        at org.apache.felix.framework.Felix.getBundles(Felix.java:2594)
        - waiting to lock <0x06235658> (a [Ljava.lang.Object;)
        at org.apache.felix.framework.BundleImpl.createModule(BundleImpl.java:1140)
        at org.apache.felix.framework.BundleImpl.refresh(BundleImpl.java:170)
        - locked <0x06448fd0> (a org.apache.felix.framework.BundleImpl)
        at org.apache.felix.framework.Felix.refreshBundle(Felix.java:3574)
        at org.apache.felix.framework.Felix.access$900(Felix.java:39)
        at org.apache.felix.framework.Felix$RefreshHelper.refreshOrRemove(Felix.java:4257)
        at org.apache.felix.framework.Felix.refreshPackages(Felix.java:3438)
        at org.apache.felix.framework.PackageAdminImpl.run(PackageAdminImpl.java:331)
        at java.lang.Thread.run(Thread.java:595)

Found 1 deadlock.","Felix framework 2.0.4
Felix webconsole 3.0.0
Sling ",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-06-23 20:17:01.243,,,no_permission,,,,,,,,,,,,56337,,,Fri Aug 13 14:02:46 UTC 2010,,,,,,0|i0vv27:,184005,,,,,,,,23/Jun/10 20:17;rickhall;I have reproduced this issue and will look into a fix.,29/Jun/10 15:43;rickhall;Just a note to myself: I think we need to make sure that any invocation paths that touch the install locks and the global lock always grab the global lock first to avoid such locking cycles.,"13/Aug/10 14:02;rickhall;I've attempted to resolve this issue. It did avoid the deadlock in my scenario. I modified concurrency handling of the installed bundle data structures. Now they are guarded by the global lock for writes instead of the fine-grained install locks to avoid locking cycles, but with a copy-on-write approach so reads do not need to acquire a lock. I ran through CT and various tests and everything appeared to work.

I will post snapshots of everything, including a framework distro, so if you could check in your own scenario, that would be great. Please close this issue if satisfied, thanks.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
invalid link to ZipAttachmentProvider.html,FELIX-4222,12667926,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,hsaginor@gmail.com,hsaginor@gmail.com,10/Sep/13 21:08,12/Sep/13 11:37,13/Mar/19 22:56,12/Sep/13 11:37,,,,,,,Documentation,,,0,,,,,,"I was looking for information for including file in configuration zip. I found that the filling page does not exist - http://felix.apache.org/apidocs/inventory/current/org/apache/felix/inventory/ZipAttachmentProvider.html

The above page is linked on http://felix.apache.org/documentation/subprojects/apache-felix-inventory.html ",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-09-12 11:37:49.662,,,no_permission,,,,,,,,,,,,347862,,,Thu Sep 12 11:37:49 UTC 2013,,,,,,0|i1nzef:,348158,,,,,,,,"12/Sep/13 11:37;fmeschbe;Thanks for reporting.

I have fixed the links in Rev. 1522535 for staging and Rev. 878142 for publish.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error events can be thrown when refreshing fragment bundles,FELIX-3957,12635800,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,gnt,gnt,07/Mar/13 14:43,07/Mar/13 16:38,13/Mar/19 22:56,07/Mar/13 16:38,framework-4.2.0,,,,framework-4.2.1,,,,,0,,,,,,"The event is harmless but we should avoid it ...

See the following exception
{code}
org.osgi.framework.BundleException: Fragment bundles can not be stopped: com.google.inject.assistedinject [131]
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2663)[org.apache.felix.framework-4.0.3.redhat-60012.jar:]
	at org.apache.felix.framework.Felix$RefreshHelper.stop(Felix.java:5045)[org.apache.felix.framework-4.0.3.redhat-60012.jar:]
	at org.apache.felix.framework.Felix.refreshPackages(Felix.java:4285)[org.apache.felix.framework-4.0.3.redhat-60012.jar:]
	at org.apache.felix.framework.FrameworkWiringImpl.run(FrameworkWiringImpl.java:178)[org.apache.felix.framework-4.0.3.redhat-60012.jar:]
	at java.lang.Thread.run(Thread.java:722)[:1.7.0_12-ea]
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,316292,,,Thu Mar 07 16:38:42 UTC 2013,,,,,,0|i1iktz:,316635,,,,,,,,"07/Mar/13 16:38;gnt;URL: http://svn.apache.org/r1453949
Log:
[FELIX-3957] Error events can be thrown when refreshing fragment bundles
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible InvalidStateException thrown while unregistering bundle services,FELIX-3824,12623999,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,gnt,gnt,14/Dec/12 15:47,14/Dec/12 16:43,13/Mar/19 22:56,14/Dec/12 16:43,,,,,framework-4.2.0,,Framework,,,0,,,,,,"I think there's a small possibility that an InvalidStateException is thrown when unregistering services after the bundle is stopped.  It can only happen if the registration is held by someone and unregistered concurrently with the bundle being stopped.
I think it does not hurt to catch and ignore it as I had it once.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-12-14 16:20:51.958,,,no_permission,,,,,,,,,,,,297899,,,Fri Dec 14 16:43:53 UTC 2012,,,,,,0|i14vxb:,236637,,,,,,,,"14/Dec/12 15:48;gnt;Proposed patch for the ServiceRegistry#unregisterServices method:
{code}
diff --git a/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java b/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
index f8dea41..f280b4e 100644
--- a/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
+++ b/framework/src/main/java/org/apache/felix/framework/ServiceRegistry.java
@@ -202,7 +202,14 @@ public class ServiceRegistry
         {
             if (((ServiceRegistrationImpl) regs[i]).isValid())
             {
-                regs[i].unregister();
+                try
+                {
+                    regs[i].unregister();
+                }
+                catch (IllegalStateException e)
+                {
+                    // Ignore exception if the service has already been unregistered
+                }
             }
         }
 {code}","14/Dec/12 16:20;rickhall;Seems harmless, so I'm fine if you want to commit it.",14/Dec/12 16:43;gnt;Fixed in  http://svn.apache.org/viewvc?rev=1421969&view=rev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing the role doens't remove it as a member of a group,FELIX-3755,12616034,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,jajans,trantje,trantje,14/Nov/12 08:48,14/Nov/12 08:56,13/Mar/19 22:56,14/Nov/12 08:56,,,,,,,User Admin,,,0,,,,,,"When removing a role like a user. The Useradmin doesn't remove it of the groups.
Which should happen according the osgi spec:
http://www.osgi.org/javadoc/r4v42/org/osgi/service/useradmin/UserAdmin.html",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-14 08:56:34.427,,,no_permission,,,,,,,,,,,,257648,,,Wed Nov 14 08:56:34 UTC 2012,,,,,,0|i0k3sf:,115431,,,,,,,,14/Nov/12 08:56;jajans;Comitted a fix in rev 1409119.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gogo shell startup failure in busy system,FELIX-3706,12611190,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,10/Oct/12 14:56,10/Oct/12 15:16,13/Mar/19 22:56,10/Oct/12 15:16,gogo.shell-0.10.0,,,,gogo.shell-0.12.0,,Gogo Shell,,,0,,,,,,"launching felix from within Eclipse using bndtools, occasionally fails:

gogo: CommandNotFoundException: Command not found: gosh
org.apache.felix.gogo.runtime.CommandNotFoundException: Command not found: gosh
	at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:474)
	at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)
	at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
	at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
	at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
	at org.apache.felix.gogo.shell.Activator.run(Activator.java:75)
	at java.lang.Thread.run(Thread.java:680)

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,247000,,,Wed Oct 10 15:16:16 UTC 2012,,,,,,0|i07xrb:,44236,,,,,,,,10/Oct/12 15:16;db82407;changed fixed sleep of 100ms to loop that explicitly tests for gogo:gosh command becoming available.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unregistered Drivers are held on to,FELIX-3660,12606601,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,marrs,dennisg,dennisg,07/Sep/12 14:49,27/Sep/12 21:32,13/Mar/19 22:56,27/Sep/12 21:32,,,,,,,Device Access,,,1,,,,,,"When a driverbundle is being uninstalled, its ServiceReference is kept internally in the DeviceManager
I will attach a patch for it when the issue hase been created.

This patch also some some extra error checking",,,,,,,,,,,,,,,,,,,,,07/Sep/12 14:49;dennisg;deviceaccess.diff;https://issues.apache.org/jira/secure/attachment/12544223/deviceaccess.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-09-07 15:07:09.078,,,no_permission,,,,,,,,,,,,294016,,,Thu Sep 27 21:32:03 UTC 2012,,,,,,0|i0vv1b:,184001,,,,,,,,"07/Sep/12 14:52;dennisg;there used to be a checkbox, officially donating the code to ASF. Isn't that required anymore ?","07/Sep/12 15:07;marrs;Correct, if I remember the discussion correctly, that is now automatically implied.","27/Sep/12 15:10;afomenko;Upon testing I confirm that drivers are getting offloaded by the patched version.
Thank you, Dennis!",27/Sep/12 21:32;marrs;Applied the patch. Thanks for contributing it!,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.felix.log.Log instates the thread without meaningful thread name,FELIX-3581,12596660,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,dlmiles,dlmiles,02/Jul/12 14:25,03/Jul/12 09:18,13/Mar/19 22:56,03/Jul/12 09:18,log-1.0.1,,,,log-1.2.0,,Log Service,,,0,,,,,,"When org.apache.felix.log.Log instates the thread in addListener(LogListener) it doesn't put any meaningful thread name on it to help identify what it is.

Suggestions... 

listenerThread.setName(listenerThread.getClass().getName());  // or ""FelixLogListener""",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-03 09:18:55.055,,,no_permission,,,,,,,,,,,,246026,,,Tue Jul 03 09:18:55 UTC 2012,,,,,,0|i07g93:,41399,,,,,,,,03/Jul/12 09:18;fmeschbe;Thanks for reporting. I have named the thread as suggested in Rev. 1356634,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extension bundle implementation relies on urlhandlers  service to start extension bundles,FELIX-2780,12495558,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,samba,samba,13/Jan/11 23:37,03/May/12 20:45,13/Mar/19 22:56,03/May/12 20:45,framework-3.0.7,,,,framework-4.2.0,,Framework,,,1,,,,,,"I am trying to start the felix security framework extension bundle with the urlhandler service  disabled in the Felix framework.

COMMAND:
======
/usr/local/jamvm/bin/jamvm -Xmx256M -Dfelix.service.urlhandlers=false -Dorg.osgi.framework.security=""osgi"" -Dpolicy.provider=gnu.java.security.PolicyFile -Djava.security.policy=file:///home/samba/wurk/downloads/osgi/felix-framework-3.0.7/conf/java.policy   -jar bin/felix.jar


Policy file:
========
grant {
 permission java.security.AllPermission;
}

grant codeBase ""http://felix.extensions:9/"" {
 permission java.security.AllPermission;
};

I get the following error and the security framework does not start
WARNING: Unable to start Felix Extension Activator (java.nio.channels.UnresolvedAddressException)

Stack trace where the exception occurs

  at java.lang.Thread.dumpStack(Thread.java:522)
   at java.nio.channels.UnresolvedAddressException.<init>(UnresolvedAddressException.java:55)
   at gnu.java.nio.SocketChannelImpl.connect(SocketChannelImpl.java:160)
   at gnu.java.net.PlainSocketImpl.connect(PlainSocketImpl.java:281)
   at java.net.Socket.connect(Socket.java:454)
   at java.net.Socket.connect(Socket.java:414)
   at gnu.java.net.protocol.http.HTTPConnection.getSocket(HTTPConnection.java:721)
   at gnu.java.net.protocol.http.HTTPConnection.getOutputStream(HTTPConnection.java:802)
   at gnu.java.net.protocol.http.Request.dispatch(Request.java:292)
   at gnu.java.net.protocol.http.HTTPURLConnection.connect(HTTPURLConnection.java:219)
   at gnu.java.net.protocol.http.HTTPURLConnection.getHeaderField(HTTPURLConnection.java:582)
   at java.net.URLConnection.getHeaderFieldInt(URLConnection.java:426)
   at java.net.URLConnection.getContentLength(URLConnection.java:302)
   at gnu.java.net.loader.RemoteURLLoader.getResource(RemoteURLLoader.java:79)
   at java.net.URLClassLoader.findClass(URLClassLoader.java:528)
   at java.lang.ClassLoader.loadClass(ClassLoader.java:341)
   at java.lang.ClassLoader$1.loadClass(ClassLoader.java:1112)
   at java.lang.ClassLoader.loadClass(ClassLoader.java:293)
   at org.apache.felix.framework.ExtensionManager.startExtensionBundle(ExtensionManager.java:381)
   at org.apache.felix.framework.Felix.installBundle(Felix.java:2610)
   at org.apache.felix.framework.Felix.installBundle(Felix.java:2429)
   at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:121)
   at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:107)
   at org.apache.felix.main.AutoProcessor.processAutoDeploy(AutoProcessor.java:173)
   at org.apache.felix.main.AutoProcessor.process(AutoProcessor.java:78)
   at org.apache.felix.main.Main.main(Main.java:291)

   at java.lang.reflect.VMMethod.invoke(Native Method)
   at java.lang.reflect.Method.invoke(Method.java:327)
   at jamvm.java.lang.JarLauncher.main(JarLauncher.java:50)

","Host: Ubuntu Linux

JVM:  JAMVM-1.5.4 (patched - see attached patches in Bug 2775)
Library: GNU Classpath 0.98 (patched - see attached patches in Bug 2775)
felix framework - 3.0.7 or 3.1.0-SNAPSHOT 
framework.security -  1.4.1 or 1.5.0-SNAPSHOT

Other bundles that are being auto-deployed deployed:
-rw-r--r-- 1 root  root  150520 2010-12-26 13:33 org.apache.felix.bundlerepository-1.6.2.jar
-rw-r--r-- 1 root  root   90013 2011-01-10 20:06 org.apache.felix.framework.security-1.5.0-SNAPSHOT.jar
-rw-r--r-- 1 samba samba  62727 2011-01-13 12:34 org.apache.felix.shell-1.4.2.jar
-rw-r--r-- 1 samba samba  12748 2011-01-13 12:34 org.apache.felix.shell.tui-1.4.1.jar
",,,,,,,,,,,,,,,,,,,,08/Mar/11 17:24;sribeyron;patch.diff;https://issues.apache.org/jira/secure/attachment/12473010/patch.diff,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-21 09:38:51.413,,,no_permission,,,,,,,,,,,,56151,,,Thu May 03 20:45:12 UTC 2012,,,,,,0|i0vv6n:,184025,,,,,,,,"21/Feb/11 09:38;jvanoosterom;This just became much more importent
Seams felix is now no longer usable in java 6 update 24 / webstart
http://forums.oracle.com/forums/thread.jspa?threadID=2179127",21/Feb/11 09:49;karlpauls;Interesting. I need to look into what is going on there. I doubt that it is related. Looks more like a new issue.,"01/Mar/11 23:40;psiquetp@gmail.com;Hi Guys, any news on this?

I have not being able to work around this problem, this exception is what I
got due to update 24.

This happens in static code inside javax.imageio.ImageIO when its trying to
load the image handlers.

Caused by: java.lang.SecurityException: Permission denied:
http://felix.extensions:9/META-INF/services/javax.imageio.spi.ImageInputStreamSpi
    at
com.sun.deploy.security.DeployURLClassPath$UrlLoader.findResource(Unknown
Source)
    at com.sun.deploy.security.DeployURLClassPath$1.next(Unknown Source)
    at com.sun.deploy.security.DeployURLClassPath$1.hasMoreElements(Unknown
Source)
    at java.net.URLClassLoader$3$1.run(Unknown Source)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader$3.next(Unknown Source)
    at java.net.URLClassLoader$3.hasMoreElements(Unknown Source)
    at sun.misc.CompoundEnumeration.next(Unknown Source)
    at sun.misc.CompoundEnumeration.hasMoreElements(Unknown Source)
    at sun.misc.CompoundEnumeration.next(Unknown Source)
    at sun.misc.CompoundEnumeration.hasMoreElements(Unknown Source)
    at sun.misc.Service$LazyIterator.hasNext(Unknown Source)
    at
javax.imageio.spi.IIORegistry.registerApplicationClasspathSpis(Unknown
Source)
    at javax.imageio.spi.IIORegistry.<init>(Unknown Source)
    at javax.imageio.spi.IIORegistry.getDefaultInstance(Unknown Source)
    at javax.imageio.ImageIO.<clinit>(Unknown Source)

Let me know if I can help in any way.

Thank you for your efforts.
","02/Mar/11 08:19;jvanoosterom;this snippet of code seem so be the source of the problem
why is this an illegal URL?

class ExtensionManager extends URLStreamHandler implements Content
{
    // The private instance that is added to Felix.class.getClassLoader() -
    // will be null if extension bundles are not supported (i.e., we are not
    // loaded by an instance of URLClassLoader)
    static final ExtensionManager m_extensionManager;

    static
    {
        // pre-init the url sub-system as otherwise we don't work on gnu/classpath
        ExtensionManager extensionManager = new ExtensionManager();
        try
        {
            (new URL(""http://felix.extensions:9/"")).openConnection();
        }
        catch (Throwable t)

<edit, fix typo>","03/Mar/11 08:05;ibauersachs;I use Felix in a WebStart application and got the same error as Psique. The change introduced by Java 6u24 is that com.sun.deploy.security.DeployURLClassPath$UrlLoader.findResource calls URLUtil.checkTargetUrl with http://felix.extensions:9 as a parameter.

As a ""workaround"" I managed to get the application running by patching Felix and replacing the http://felix.extensions:9 URL by file:///felix.extensions/9 (org.apache.felix.framework.ExtensionManager#static initializer)
I have no idea what other consequences this might have (especially on issue FELIX-844), but at least I got my application running.

Regards,
Ingo","04/Mar/11 10:16;benett31;I confirm that replacing the ""http"" url by a local ""file"" one seems to work. I modified org.apache.felix.framework.ExtensionManager.java, line 94 (which seems to be used only in URLHandlersStreamHandler.java, line 27 ?).

I also use Felix as a jar deployed by webstart and using it in ""embedded"" mode. Please note that I only use ""Felix framework"".

Please, has anyone an idea about when Felix could fix it ? (3.0.10..?)","07/Mar/11 20:07;psiquetp@gmail.com;Thank you Ingo,

I changed the http for file in my Felix jar and my 25 bundles are now working :D Maybe there are some consequences but I don't think they are in this context. 

http://www.psiqueware.com/girasolEditor/launch.jnlp
","08/Mar/11 17:22;sribeyron;Hi all.

I've had the same issue running Felix on Web Start.

I've resolved the issue by patching the ExtensionManager.java.

At line 510, replace the line:

throw new IOException(""Resource not provided by any extension!"");

By the following code:

        // JDK6u24 issue
        return new URLConnection(url) {
			@Override
			public void connect() throws IOException {
		        throw new IOException(""Resource not provided by any extension!"");
			}
		};
        // End JDK6u24 issue

The issue occurs when looking up classes, because IOException is thrown on URL.openConnection when classes (or resources) are not found. The IOException should not be thrown on the openConnection method, but later on the connect method on URLConnection (this streamHandler should work as any other http handler: when a file does not exist, the http server sends a 404 response. This response can only occur when URLconnection is established, not when URLConnection is initialized).

This patch work fine for me.
","08/Mar/11 17:24;sribeyron;Here is the patch that work for me (see attached file patch.diff). It throws the IOException only on the URLConnection.connect method, not on the URL.openConnection method.
","08/Mar/11 18:55;karlpauls;Grrr, another one. I don't think i see why the exception should not be thrown on the openConnection method to being with. Really, its still a bug in the jdk imo. This is somewhat annoying as i remember that there where problems with throwing it to late in the game as other implementations didn't expect that but oh well, that will be there problem as the jdk wins that one :-)

Great find! We'll include the fix - thanks a lot.",10/Mar/11 10:56;karlpauls;i added your changes but against a new issue: FELIX-2877. Thanks again.,"10/Mar/11 11:05;sribeyron;Thank you too !
",03/May/12 20:45;karlpauls;I think this one has been fixed. ,,,,,,,,,,,,,,,,,,,
HTTP Service allows registration of servlets and resources with invalid resources.,FELIX-3275,12535313,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,kgilmer,kgilmer,kgilmer,15/Dec/11 14:06,15/Dec/11 14:07,13/Mar/19 22:56,15/Dec/11 14:07,,,,,,,,,,0,,,,,,"OSGi R4 Compendium 102.4 

Alias must begin with '/' character.  Captured in test /org.apache.felix.httplite/src/test/java/org/apache/felix/httplite/osgi/test/cases/TestOSGiService.java testCannotRegisterInvalidAlias()",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,220997,,,Thu Dec 15 14:07:48 UTC 2011,,,,,,0|i0vv5z:,184022,,,,,,,,15/Dec/11 14:07;kgilmer;Fixed in revision 1214765.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails to resolve urls with multiple successive path seperators,FELIX-3253,12533812,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,kgilmer,kgilmer,kgilmer,04/Dec/11 21:07,15/Dec/11 13:14,13/Mar/19 22:56,15/Dec/11 13:14,,,,,,,Lightweight HTTP Service,,,0,,,,,," it doesn't like requests with double-slashes while testing it
with the Felix webconsole:

   java.io.IOException: Unable to find resource: /res//imgs/logo.png
at
org.apache.felix.httplite.server.ResourceHandler.handle(ResourceHandler.java:89)
at org.apache.felix.httplite.server.Connection.process(Connection.java:240)
at
org.apache.felix.httplite.server.ThreadPool.processConnections(ThreadPool.java:298)
at
org.apache.felix.httplite.server.ThreadPool.access$000(ThreadPool.java:35)
at org.apache.felix.httplite.server.ThreadPool$1.run(ThreadPool.java:193)
at java.lang.Thread.run(Thread.java:680)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,219538,,,Thu Dec 15 13:14:58 UTC 2011,,,,,,0|i0vv5j:,184020,,,,,,,,15/Dec/11 13:14;kgilmer;Fixed in commit 1214740.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
felix.security does not work with exploded jars ,FELIX-3004,12510670,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,andrei.pozolotin,andrei.pozolotin,17/Jun/11 15:22,10/Oct/11 21:38,13/Mar/19 22:56,12/Sep/11 10:16,framework.security-1.4.1,,,,framework.security-2.0.0,,Framework Security,,,0,,,,,,"original thread:

https://issues.apache.org/jira/browse/FELIX-2993?focusedCommentId=13050774&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13050774",,,,,,,,,,FELIX-2993,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-20 14:21:53.894,,,no_permission,,,,,,,,,,,,55988,,,Mon Oct 10 21:38:46 UTC 2011,,,,,,0|i0vv13:,184000,,,,,,,,"20/Jun/11 14:10;andrei.pozolotin;my current workaround: use jar

   install : reference:file:../barchart-plugin-core/target/barchart-plugin-core-1.0.1-SNAPSHOT.jar

instead of exploded jar:

   install : reference:file:../barchart-plugin-core/target/classes

","20/Jun/11 14:12;andrei.pozolotin;which brinds a quiestion: 
after this bug is fixed, will felix.security support ""exploded signed jar""?
is there a maven plugin which can be used in eclipse to produce such ""exploded signed jar"" incrementally?
","20/Jun/11 14:21;karlpauls;This seems to be related to a recent changes in how the framework reports bundle entries. In a nutshell, we now give back directory entries as well as file entries. This has not been adapted in the security provider. Good catch.",12/Sep/11 10:16;karlpauls;I commited a fix for this which hopefully works. If you want to test it you need to work with the current framework and framework.security trunk. Please close this issue if it works for you.,"10/Oct/11 15:50;andrei.pozolotin;Karl:

is this fix in the release:
http://search.maven.org/#artifactdetails%7Corg.apache.felix%7Corg.apache.felix.framework.security%7C2.0.0%7Cbundle

?

thanks

Andrei.","10/Oct/11 16:09;rickhall;It would look like it, since 2.0.0 is listed as the fix version on this issue.","10/Oct/11 18:40;karlpauls;yes, it is. Please let us know whether it works for you.",10/Oct/11 21:38;andrei.pozolotin;great; will do and report back.,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException when specifying no name,FELIX-2922,12504636,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,slimmy,slimmy,19/Apr/11 08:42,12/Sep/11 10:13,13/Mar/19 22:56,12/Sep/11 10:13,framework.security-1.4.1,,,,framework.security-2.0.0,,Conditional Permission Admin,,,0,,,,,,"When parsing a encoded string without a name in the constructor of ConditionalPermissionInfoImpl you get a ArrayIndexOutOfBoundsException. If I'm correct the syntax in the specification is:

policy ::= access '{' conditions permissions'}' name?
access ::= 'ALLOW' | 'DENY' // case insensitive
name ::= quoted-string

doesn't that make the name optional?",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-19 13:34:12.037,,,no_permission,,,,,,,,,,,,56060,,,Mon Sep 12 10:13:40 UTC 2011,,,,,,0|i0vv4n:,184016,,,,,,,,"19/Apr/11 13:34;karlpauls;Yeah, i guess you're right. Looks like a bug. I'll try to get to it soon. Thanks for reporting. Workaround for now is to just always give a name right?",29/Apr/11 14:25;slimmy;Also it says here that it is case insensitive but the parser obviously only parses uppercase ALLOW or DENY statements. ,"12/Sep/11 10:13;karlpauls;I commited a fix for this. If you want to test it, you'd need to work with framework and framework.security trunk for now. Please close this issue if it work for you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UPnP Web Console plug-in expects that action arguments have a constructor with a string argument,FELIX-2783,12495785,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,v_valchev,evgeni,evgeni,17/Jan/11 13:31,07/Sep/11 12:14,13/Mar/19 22:56,07/Sep/11 12:14,webconsole-upnp-plugin-1.0.0  ,,,,webconsole-upnp-plugin-1.0.2,,Web Console,,,0,,,,,,"That expectation works on types like Integer, Long, Boolean etc. but it is problematic in case of byte[]. For example, when try to call an action with bin.base64 parameter:
{code|title ControlServlet.invoke(UPnPAction, String[], String[])}
java.lang.NoSuchMethodException: [B.<init>(java.lang.String)
        at java.lang.Class.getConstructor0(Unknown Source)
        at java.lang.Class.getConstructor(Unknown Source)
        at org.apache.felix.webconsole.plugins.upnp.internal.ControlServlet.invoke(ControlServlet.java:347)
        at org.apache.felix.webconsole.plugins.upnp.internal.ControlServlet.doPost(ControlServlet.java:157)
        at org.apache.felix.webconsole.plugins.upnp.internal.WebConsolePlugin.doPost(WebConsolePlugin.java:102)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:815)
...
{code}
The supported data types should be reviewed to be compatible with the OSGi UPnP specification.
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-07 12:14:58.346,,,no_permission,,,,,,,,,,,,56149,,,Wed Sep 07 12:14:58 UTC 2011,,,,,,0|i0vvg7:,184068,,,,,,,,07/Sep/11 12:14;v_valchev;Fixed in rev.1166146,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Framework does not offer J2SE-1.2 Execution Environment,FELIX-3038,12513965,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,njbartlett,njbartlett,13/Jul/11 18:29,11/Aug/11 20:20,13/Mar/19 22:56,11/Aug/11 20:20,framework-3.2.2,,,,framework-4.0.0,,Framework,,,0,,,,,,"The framework does not offer the J2SE-1.2 execution environment. The list of EEs offered by the framework when running on java 1.6 is as follows:

    JavaSE-1.6,J2SE-1.5,J2SE-1.4,J2SE-1.3,OSGi/Minimum-1.2,OSGi/Minimum-1.1,OSGi/Minimum-1.0

I don't see any reason why that list excludes J2SE-1.2, JRE-1.1 and JRE-1.0.",Java 1.6.0_24-b07-334 on Mac OS 10.6.7,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-08-11 20:20:21.884,,,no_permission,,,,,,,,,,,,55954,,,Thu Aug 11 20:20:21 UTC 2011,,,,,,0|i0vvnr:,184102,,,,,,,,11/Aug/11 20:20;rickhall;Done. Please close if satisfied. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on startup ,FELIX-3013,12511667,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,pascalrapicault,pascalrapicault,27/Jun/11 17:16,28/Jun/11 01:58,13/Mar/19 22:56,27/Jun/11 20:47,,,,,,,Framework,,,0,,,,,,"Build 3.3.0 - build from June 15.

When I add a bundle to the bundle folder I get the NPE shown below.
Steps to reproduce:
- Download the felix distribution
- Add the attached bundle to the bundle folder
- Start felix java -jar bin/felix.jar


Auto-deploy install: org.osgi.framework.BundleException: Bundle symbolic name and version are not unique: org.apache.felix.framework:3.3.0.SNAPSHOT
Could not create framework: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.felix.framework.BundleImpl.createLocalizationRevisionList(BundleImpl.java:509)
	at org.apache.felix.framework.BundleImpl.getCurrentLocalizedHeader(BundleImpl.java:402)
	at org.apache.felix.framework.Felix.getBundleHeaders(Felix.java:1518)
	at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:323)
	at org.apache.felix.framework.BundleImpl.getHeaders(BundleImpl.java:305)
	at org.apache.felix.main.AutoProcessor.isFragment(AutoProcessor.java:395)
	at org.apache.felix.main.AutoProcessor.processAutoDeploy(AutoProcessor.java:186)
	at org.apache.felix.main.AutoProcessor.process(AutoProcessor.java:78)
	at org.apache.felix.main.Main.main(Main.java:291)",,,,,,,,,,,,,,,,,,,,,27/Jun/11 17:17;pascalrapicault;org.eclipse.core.jobs_3.5.100.v20110404.jar;https://issues.apache.org/jira/secure/attachment/12483976/org.eclipse.core.jobs_3.5.100.v20110404.jar,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-27 20:47:08.45,,,no_permission,,,,,,,,,,,,55979,,,Tue Jun 28 01:58:00 UTC 2011,,,,,,0|i0vvn3:,184099,,,,,,,,27/Jun/11 20:47;rickhall;This was a simple bug introduced in the trunk refactoring for OSGi R4.3...there is a new way to check if a bundle revision is resolved and we weren't checking for null. Please close this bug if satisfied. Thanks for reporting the issue.,28/Jun/11 01:58;pascalrapicault;It now works. Thx for the quick turnaround.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DM/ NPE on some dependency manager adapters, when ""auto-configuration"" mode is disabled.",FELIX-2964,12507983,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,pderop,pderop,pderop,21/May/11 21:28,21/May/11 21:31,13/Mar/19 22:56,21/May/11 21:31,,,,,,,Dependency Manager,,,0,,,,,,"Components are by default in ""auto-config"" mode. That is: some special objects (like DependencyManager, BundleContext, etc ..) are auto-injected in Components.
But when auto-configuration is disabled on some Dependency Manager adapters component, then we get some Null Pointers in the adapters implementations.

For example:

        Component adapter = m.createAdapterService(OriginalService.class, null)
            .setInterface(AdaptedService.class.getName(), null)
            .setImplementation(ServiceAdapter.class)
	    .setAutoConfig(DependencyManager.class, Boolean.FALSE);

is getting the following exception:

WARN Invocation of 'added' failed. - java.lang.NullPointerException
        at org.apache.felix.dm.impl.AdapterServiceImpl$AdapterImpl.createService(AdapterServiceImpl.java:97)
        at org.apache.felix.dm.impl.AbstractDecorator.added(AbstractDecorator.java:199)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
       ...

The following problems have been identified:

- in AbstractDecorator -> the ""m_manager"" field is supposed to be auto-injected, but it is not the case when
the component ""auto-configuration"" mode is disabled for the ""DependencyManager"" type.

- in FactoryConfigurationAdapterServiceImpl, we have the same problem as in the AbstractDecorator: the ""m_dm"" field is supposed 
to be auto-injected with the ""DependencyManager"" object, but it is not case if auto-config mode is disabled for ""DependencyManager"" type.

- in BundleAdapterServiceImpl.java -> the BundleAdapterImpl.createService() method does not invoke the
""configureAutoConfigState"" method.

- in ResourceAdapterServiceImpl.java, we have the same problem as in the FactoryConfigurationAdapterServiceImpl class.

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56021,,,Sat May 21 21:31:02 UTC 2011,,,,,,0|i0vv4v:,184017,,,,,,,,"21/May/11 21:31;pderop;Committed a proposed patch in revision 1125823.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] System bundle module's state not reset when framework restarted leading to NPE,FELIX-2822,12497616,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,03/Feb/11 20:40,21/Feb/11 09:34,13/Mar/19 22:56,21/Feb/11 09:34,framework-3.0.8,,,,framework-3.0.9,,Framework,,,0,,,,,,"Normally when a bundle is refreshed, we throw away its module and then recreate it, so we are always starting with a fresh module. For the system bundle, when we stop and restart the framework, the system bundle module is reused. When the framework is restarted, the system bundle module state is still resolved, so when we re-resolve it in Framework.init(), it doesn't get empty wires injected into it since the resolver thinks it's resolved. This leads to subsequent NPEs when the resolver tries to wire later modules to the system bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,40399,,,Wed Feb 09 22:49:01 UTC 2011,,,,,,0|i0aq33:,60499,,,,,,,,"09/Feb/11 22:49;rickhall;After thinking about it, I realize that the system bundle should be handled differently than other bundles when the framework is stopped. Normal bundles are unresolved and effectively discarded. The system bundle was being treated the same way, but this was causing a problem since the framework instance can be reused.

To avoid this situation, since Felix extends BundleImpl, I just overrode BundleImpl.close() to do nothing. Thus, when the framework stops, all bundles except the system bundle are thrown away. This means that once the framework is started, the system bundle continues to exist and stays in the RESOLVED state forever, even after the framework stops.

This makes sense, because if you reuse the framework instance then the system bundle doesn't need to be resolved again since its configuration cannot change from one session to the next.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Framework] Uninstalling an uninstalled bundle throws NoSuchElementException,FELIX-2840,12498655,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,15/Feb/11 15:38,21/Feb/11 09:33,13/Mar/19 22:56,21/Feb/11 09:33,framework-3.0.8,,,,framework-3.0.9,,Framework,Specification compliance,,0,,,,,,"If you uninstall an uninstalled bundle, you get a NoSuchElementException because we clear the localized headers each time Bundle.uninstall() is called. We only need to do this on the first call to uninstall.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,40405,,,Tue Feb 15 16:01:25 UTC 2011,,,,,,0|i0aq47:,60504,,,,,,,,15/Feb/11 16:01;rickhall;I have committed a fix for this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[Framework] It should not be possible to open an URLConnection to ""/"" for a bundle URL",FELIX-2832,12498041,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,rickhall,rickhall,08/Feb/11 23:12,21/Feb/11 09:32,13/Mar/19 22:56,21/Feb/11 09:32,framework-3.0.8,,,,framework-3.0.9,,Framework,,,0,,,,,,"The call Bundle.getResource(""/"") returns a valid URL, but the only purpose of this URL is to be used as context for building URLs to other entries in the bundle. The ""/"" URL doesn't actually exist, so any attempt to open it should fail. Unfortunately, this isn't always the case.

For a little background, bundle resource URLs can have multiple roots for each entry on the bundle class path, so just construction a bundle resource URL from another one may not give you what you want since it may not be using the correct index into the bundle class path (since bundle resource URLs are opaque, the user can't be expected to understand this). So, we try to be nice in the URLHandlersBundleURLConnection constructor and detect this case and automatically fix the class path index.

When this ""nice"" hack is combined with someone opening the ""/"" resource URL, we can run into an issue. Since ""/"" never exists, the ""nice"" hack in URLHandlersBundleURLConnection kicks in and searches for it in other bundle class path entries. If one of these bundle class path entries is an embedded directory, then the ""/"" effectively gets converted to the embedded directory entry, since ContentDirectoryContent prepends the embedded directory when searching. Since the embedded directory does exist, it then becomes possible to create an input stream to it, which to the user will appear as if is created an input stream to ""/"". This is not correct for a variety of reasons.

To avoid this, we should modify the URLHandlersBundleURLConnection constructor to explicitly check for the ""/"" URL and always throw an exception in this case immediately, to ensure that no one can ever open a connection to it. This also avoids the possibility that we will try find it another way with our ""nice"" hack.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,40404,,,Wed Feb 09 15:00:22 UTC 2011,,,,,,0|i0aqrr:,60610,,,,,,,,09/Feb/11 15:00;rickhall;Committed a patch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"felix.auto.deploy.action throws NPE with only ""update"" action",FELIX-2796,12496433,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,zzhou,zzhou,23/Jan/11 12:49,21/Feb/11 09:30,13/Mar/19 22:56,10/Feb/11 17:35,framework-3.0.5,,,,framework-3.0.9,,Main,,,0,,,,,,"I used: 

felix.auto.deploy.action=install,update,start

and expected it to update a bundle when I overwrite the jar file in the deploy dir and restart the framework.
Felix simply ignores and no update is done to the bundle regardless the jar file has been updated.

if I used:

felix.auto.deploy.actioin=update

Felix would not be able to start. it would fail with NullPointerException.

Generally, my goal was to auto update bundles with their jar files updated in the folder whenever felix is restarted.

","JDK6, Win7",,,,,,,,,,,,,,,,,,,,30/Jan/11 02:55;zzhou;FELIX-2796.zip;https://issues.apache.org/jira/secure/attachment/12469762/FELIX-2796.zip,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-23 16:09:39.573,,,no_permission,,,,,,,,,,,,18571,,,Thu Feb 10 17:35:24 UTC 2011,,,,,,0|i0aqi7:,60567,,,,,,,,"23/Jan/11 16:09;rickhall;The intent is as you describe, to automatically update the bundles in the auto-deploy directory each time the framework is started. I just did a test and it worked for me. I even tried it with only update and I didn't see an NPE. Note that if you only have update, update will cause any bundles to be installed, only updated if they are already installed.

Perhaps you could create a working framework install directory where this is failing and archive it up and attach it to this issue.","30/Jan/11 02:53;zzhou;Now I seem unable to reproduce my first issue, i.e. restart felix with no update done for the new jar. Probably that had to do with my messing around the other day on the configuration and mixing different deploy methods.

The NPE issue can be reproduced with my attached setup. You can simply unzip the file, browse to the bin folder, and run ""run.bat"". I can imagine that could be caused by an attempt to update a not yet existent bundle. This is however not a big issue since I can just use action=install,update,start instead.

As far as I can see, auto deploy cannot play with felix.auto.start.x options. My attempt was to enforce a start level on bundles installed/updated by the auto deploy method. but now it proves to be a wrong idea. Fortunately, I've managed to achieve all my deploy goals with the latest fileinstall. So I wont need to rely on either auto deploy or auto start options.
","10/Feb/11 17:31;rickhall;I am definitely able to reproduce your NPE with the attached archive, thanks for providing it. We need to check if the bundle is actually installed before calling update on it.","10/Feb/11 17:35;rickhall;Regarding your original attempt to use auto-deploy and auto-start mechanisms together, in theory, this should work, but it wasn't exactly intended to be used that way. To make it work, you'd have to make sure to use the absolute URL on the auto-start property, because bundles installed via the auto-deploy directory end up using their absolute path as their location URL.","10/Feb/11 17:35;rickhall;Committed a fix for this. Please close if you are satisfied, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,
Boolean.parseBoolean() newly defined in Java5 should not be used.,FELIX-2749,12494155,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,iyamasaki,iyamasaki,28/Dec/10 03:46,26/Jan/11 00:04,13/Mar/19 22:56,28/Dec/10 17:20,framework-3.0.7,,,,framework-3.0.8,,Framework,,,0,,,,,,"For 3.0.7 release, the framework cannot run on J2SE 1.4 or CDC FP1.1 because Boolean.parseBoolean() is used.
---
Exception in thread ""main"" java.lang.NoSuchMethodError: java.lang.Boolean.parseBoolean(Ljava/lang/String;)Z
        at org.apache.felix.framework.cache.BundleCache.<init>(BundleCache.java:113)
        at org.apache.felix.framework.Felix.init(Felix.java:593)
        at org.apache.felix.main.Main.main(Main.java:288)
---
Those methods newly defined in Java 5 should not be used.","J2SE 1.4 with upcoming 3.0.7 release.
",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-28 17:20:31.113,,,no_permission,,,,,,,,,,,,40412,,,Mon Jan 24 16:37:35 UTC 2011,,,,,,0|i0aqaf:,60532,,,,,,,,28/Dec/10 17:20;rickhall;I have committed a patch that should fix this issue. Please review it by checking the SVN commit against this issue. Close this issue if satisfied. Thanks.,"28/Dec/10 17:28;lukewpatterson;no use of animal-sniffer http://mojo.codehaus.org/animal-sniffer-maven-plugin ?

would be easier to catch these type of issues","28/Dec/10 18:28;rickhall;Actually, we always wanted to just compile against the OSGi foundation profile API bundle, which would easily solve the issue too. However, the framework is a little more complicated than that, since we have to have access to some > Java 5 methods so we can deal with some issues that arise on newer platforms. So, the codebase is a mix, but we try to keep them in separate execution paths so we can avoid them when running on older JVMs. So, for us to actually use the OSGi foundation profile API bundle as our boot class path for compiling, we'd need to divide the framework into at least two modules, one only accessing < Java 5 and one accessing >= Java 5. This might be possible, but it might not be. We'd have to investigate.

Maybe the mentioned plugin can deal with such issues?","28/Dec/10 19:07;lukewpatterson;Hmm, I see now how things are a little more complicated.

My guess is that you could still get some use out of the plugin.  (just a guess though, I'm just a casual observer)

If you found/created/used a signature file for ""OSGi foundation profile API"", and then explicitly marked the straying code with @IgnoreJRERequirement https://animal-sniffer.dev.java.net/signature-checker.html
that might be a step forward.  Not ideal, but a step forward.

""we try to keep them in separate execution paths so we can avoid them when running on older JVMs""

Hopefully you're not using the ""LinkageError pattern"" as described https://animal-sniffer.dev.java.net/signature-checker.html
, cause I've been burned by that when the JVM exercises it full rights to eager resolution.  I had to ""opto-isolate"" with a layer of pure reflection.  Just a thought, I haven't looked at the code to see how graceful fallback is handled.","14/Jan/11 02:40;iyamasaki;The patch seems fine for me.
Could you tell me why the expected release is 3.2.0 (not 3.1.0) and when it will be released ?","23/Jan/11 16:02;rickhall;There is no 3.1.0 release, since 3.1.0 is the development branch. If we do another 3.0.x release, then this will likely go into that. If not, then it goes into the next ""big"" release, which is 3.2.0.","23/Jan/11 23:00;iyamasaki;Richard, thank you for the information.
It would be very appreciated you could tell me when the next  release (3.0.x or 3.2.0) will be done.","24/Jan/11 16:37;rickhall;We don't have set release dates, but I think I'll have to do a micro release for a performance issue for GlassFish before long, so I'll try to slip this fix into it.",,,,,,,,,,,,,,,,,,,,,,,,
"[Framework] For exploded bundles Bundle.getEntry(""a/b.jar/"")==Bundle.getEntry(""a/b.jar"")",FELIX-2710,12480844,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,sahoo,sahoo,24/Nov/10 18:26,22/Dec/10 20:52,13/Mar/19 22:56,22/Dec/10 16:35,framework-3.0.6,,,,framework-3.0.7,,Framework,,,0,,,,,,"I find it a bit surprising that Bundle.getEntry(""a/b.jar/"")==Bundle.getEntry(""a/b.jar"") even when b.jar is not a directory. Shouldn't getEntry(""a/b.jar/"") return null if b.jar is not directory? After all, getEntryPaths(""a/"") returns a/b.jar. ",,,,,,,,,,,,,,,,,,,,,24/Nov/10 18:27;sahoo;patch.txt;https://issues.apache.org/jira/secure/attachment/12460386/patch.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-24 19:04:58.085,,,no_permission,,,,,,,,,,,,40455,,,Wed Dec 22 16:35:46 UTC 2010,,,,,,0|i0aq7j:,60519,,,,,,,,24/Nov/10 18:27;sahoo;A simple patch that addresses the issue.,"24/Nov/10 19:04;rickhall;This is only an issue when installing a bundle as an exploded directory, which is a non-spec behavior. Otherwise, yeah, it looks like a bug. Thanks.","22/Dec/10 16:35;rickhall;Sahoo, I have applied your patch, but modified it to take into account security. Please close if you are satisfied, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] shell procedural commands don't inherit closure arguments,FELIX-2477,12469237,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,14/Jul/10 08:28,21/Sep/10 19:06,13/Mar/19 22:56,14/Jul/10 08:29,gogo-0.6.0,,,,gogo-0.6.1,,Gogo Shell,,,0,,,,,,"
f = {
    echo arg $1
    if { echo arg $1 } {  }
}

in the closure above, you would expect $1 to expand the same in both cases, but it doesn't always as the procedural commands unnecessarily try to pass $args to their Function arguments; this is now handled by the runtime, so the procedural commands should pass null args.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56305,,,2010-07-14 08:28:16.0,,,,,,0|i0vv8v:,184035,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] runtime should close all open sessions when it is stopped,FELIX-2545,12471811,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,17/Aug/10 14:20,21/Sep/10 19:06,13/Mar/19 22:56,17/Aug/10 14:26,gogo-0.2.0,gogo-0.2.2,gogo-0.4.0,gogo-0.6.0,gogo-0.6.1,,Gogo Runtime,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56238,,,Tue Aug 17 14:26:03 UTC 2010,,,,,,0|i0vv8n:,184034,,,,,,,,"17/Aug/10 14:26;db82407;fixed:

$ java -jar bin/felix.jar 
____________________________
Welcome to Apache Felix Gogo

g! lb
START LEVEL 1
   ID|State      |Level|Name
    0|Active     |    0|System Bundle (3.0.1)
    1|Active     |    1|Apache Felix Bundle Repository (1.6.2)
    2|Active     |    1|Apache Felix Gogo Command (0.7.0.SNAPSHOT)
    3|Active     |    1|Apache Felix Gogo Runtime (0.7.0.SNAPSHOT)
    4|Active     |    1|Apache Felix Gogo Shell (0.7.0.SNAPSHOT)
g! stop 3
g! lb
gosh: java.lang.IllegalStateException: session is closed
gosh: stopping framework",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in background task when sigil project is deleted from workspace,FELIX-2574,12473221,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,davemssavage,davemssavage,03/Sep/10 08:51,10/Sep/10 17:56,13/Mar/19 22:56,03/Sep/10 10:30,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"java.lang.NullPointerException
   at org.apache.felix.sigil.eclipse.internal.model.project.SigilProject.getBundle(SigilProject.java:369)
   at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.isDependent(ResolveProjectsJob.java:105)
   at org.apache.felix.sigil.eclipse.job.ResolveProjectsJob.runInWorkspace(ResolveProjectsJob.java:81)
   at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38)
   at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56218,,,2010-09-03 08:51:18.0,,,,,,0|i0vv8f:,184033,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
new project wizard creates duplicate src entries and empty headers,FELIX-2575,12473222,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,03/Sep/10 08:52,03/Sep/10 10:32,13/Mar/19 22:56,03/Sep/10 10:32,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56217,,,2010-09-03 08:52:32.0,,,,,,0|i0vv87:,184032,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Usage of ZipFile.close is a documented memory leak due to JVM bug in java 5/6,FELIX-2527,12470978,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,davemssavage,davemssavage,06/Aug/10 14:12,06/Aug/10 14:15,13/Mar/19 22:56,06/Aug/10 14:15,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"This also effects usage of JarFile.getManifest which opens a stream but does not explicitly close it

bug url:

http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6735255",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56255,,,2010-08-06 14:12:47.0,,,,,,0|i0vv2n:,184007,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OBR repository update check is hard-coded at 7 days,FELIX-1610,12435945,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,db82407,db82407,17/Sep/09 13:51,29/Jul/10 08:50,13/Mar/19 22:56,29/Jul/10 08:50,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"OBR repository provided hard codes update check as 7 days.

It makes no account of file: URLs, so once it has copied a file: URL to its cache, it won't update it for 7 days.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-17 13:59:56.312,,,no_permission,,,,,,,,,,,,57418,,,Thu Jul 29 08:50:01 UTC 2010,,,,,,0|i0vvfb:,184064,,,,,,,,"17/Sep/09 13:59;davemssavage;Note the obr repository has been updated so that it now doesn't cache file urls - it just reuses the existing artifact. Should still remove the hardcoded timeout though.

We should be able to use the obr <repository lastmodified='20090914041009.068' tag to test if the repo is up to date - however might need to do some work with buffered streams, as current parser is implemented as SAX..., or of course could change parsing logic to STaX to allow for early break out if repo is up to date?","18/Sep/09 07:15;db82407;main problem is already resolved, by previous refactoring of repo cache.
this issue is now just reminder to remove hard-coded 7-day expiry.",03/Oct/09 14:36;davemssavage;mark fix versions to allow tracking of project progress,29/Jul/10 08:50;davemssavage;partial fix added - updatePeriod is now at least configurable will raise new issue for improvement to lastmodified/url connection timestamp,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] lock contention in piped writer when reader doesn't read all input,FELIX-2380,12465872,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,01/Jun/10 14:50,01/Jun/10 15:45,13/Mar/19 22:56,01/Jun/10 15:45,,,,,gogo-0.6.0,,Gogo Runtime,,,0,,,,,,"The following completes almost immediately:

g! cat conf/config.properties | grep Apache
# Licensed to the Apache Software Foundation (ASF) under one
# to you under the Apache License, Version 2.0 (the
true

but adding the --quiet flag to grep makes it take 1000mS longer:

g! cat conf/config.properties | grep --quiet Apache 
true

This is because grep stops reading its input as soon as it has seen the first match when --quiet is given.
The same delay also occurs if you pipe into a command that doesn't read its input:

g! cat conf/config.properties | echo

The contention occurs because the writer (cat) is blocked  on wait(1024) in PipedInputStream when the 1024 byte buffer is full. It is only unblocked when the reader (grep) reads more input. It is NOT unblocked when the reader closes the piped input.





",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56374,,,Tue Jun 01 15:45:10 UTC 2010,,,,,,0|i0vvbb:,184046,,,,,,,,"01/Jun/10 15:45;db82407;resolved by reflectively calling PipedInputStream.receivedLast(), which notifies the writer and stops it waiting.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[gogo] when supplied args can't be coerced, the error message prints the arg values, rather than their types",FELIX-2375,12465809,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,31/May/10 21:39,01/Jun/10 15:21,13/Mar/19 22:56,01/Jun/10 15:21,,,,,gogo-0.6.0,,Gogo Runtime,,,0,,,,,,"e.g.

g! headers (bundles)
gogo: IllegalArgumentException: Cannot coerce headers[[org.apache.felix.framework [0], org.apache.felix.bundlerepository [1], org.apache.felix.gogo.command [2], org.apache.felix.gogo.runtime [3], org.apache.felix.gogo.shell [4]]] to any of [(Bundle[])]


This message would be better as:

gogo: IllegalArgumentException: Cannot coerce headers(ArrayList) to any of [(Bundle[])]

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56378,,,Tue Jun 01 15:21:09 UTC 2010,,,,,,0|i0vvbj:,184047,,,,,,,,"01/Jun/10 15:21;db82407;fixed as described, e.g.

g! headers x
gogo: IllegalArgumentException: Cannot coerce headers(String) to any of [(Bundle[])]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] no way to access array[] elements produced by assignment,FELIX-2337,12464397,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,12/May/10 22:00,28/May/10 14:33,13/Mar/19 22:56,28/May/10 14:33,,,,,gogo-0.6.0,,Gogo Runtime,,,0,,,,,,"the following two alternative assignments, should be equivalent:

x = command args ...

x = (command args ..)

but they are not, if the result is an array:

% x = [a b c] toarray
% $x get 0
IllegalArgumentException: Cannot coerce get[0] to any of []
% x = ([a b c] toarray)
% $x get 0

This is because gogo normally converts any array result into a list (Closure.java:228):

        if (last.result instanceof Object[])
        {
            return Arrays.asList((Object[]) last.result);
        }

but the assignment without () bypasses this conversion, and results in a real array.

I can obviously fix this so that the conversion to a List occurs in all cases, but I was wondering whether gogo should be performing this conversion in the first place? If the conversion is not performed, then we'll need to support ($array $index) to access arrays.




",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56404,,,Fri May 28 14:33:08 UTC 2010,,,,,,0|i0vv1z:,184004,,,,,,,,"28/May/10 14:33;db82407;This has been fixed by not automatically converting return values that are Array[] into ArrayList.

If you want to explicitly convert an Array[] into an List, then use:

g! b = (bundles)

g! lb = [ $b ]

g! set lb
ArrayList       lb              [org.apache.felix.framework [0], org.apache.f...

g! set b
Bundle[]        b               [Lorg.osgi.framework.Bundle;@538f1d7e
g! 

To access elements of an array or list, use:

g! $b 1
Location             file:/Users/derek/Downloads/felix-framework-2.0.4/bundle/org.apache.felix.gogo.command-0.5.0-SNAPSHOT.jar

...
or

g! $lb get 1
Location             file:/Users/derek/Downloads/felix-framework-2.0.4/bundle/org.apache.felix.gogo.command-0.5.0-SNAPSHOT.jar
...
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException thrown from PropertiesLoginModule if a user doesn't exist in the properties file,FELIX-2326,12463882,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,slewis,slewis,06/May/10 13:55,17/May/10 11:20,13/Mar/19 22:56,17/May/10 11:20,karaf-1.4.0,,,,karaf 1.6.0,,Karaf,,,0,jaas,karaf,loginmodule,,,Working on using Karaf's PropertiesLoginModule and noticed that if the username isn't found in the properties file the module just throws a NullPointerException.  This patch improves that behavior and also improves some of the related logging.,,,,,,,,,,,,,,,,,,,,,06/May/10 13:56;slewis;patch.txt;https://issues.apache.org/jira/secure/attachment/12443860/patch.txt,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-17 11:20:57.948,,,no_permission,,,,,,,,,,,,56415,,,Mon May 17 11:20:57 UTC 2010,,,,,,0|i0vvcf:,184051,,,,,,,,"17/May/10 11:20;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/jaas/modules/src/main/java/org/apache/felix/karaf/jaas/modules/properties/PropertiesLoginModule.java
Committed r945085
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Features maven plugin does not honor local and remote repository overrides,FELIX-2343,12464609,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,ccustine,ccustine,16/May/10 05:29,16/May/10 07:26,13/Mar/19 22:56,16/May/10 07:26,karaf-1.4.0,,,,karaf 1.6.0,,Karaf,,,0,,,,,,New functionality in the features maven plugin allows it to download from remote repositories if the artifacts are not available locally.  The changes do not honor a non-default local repository location or remote repository mirrors from settings.xml.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56399,,,2010-05-16 05:29:15.0,,,,,,0|i0vvcn:,184052,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[gogo] result of commands is implicitly written to pipe,FELIX-1474,12432851,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,12/Aug/09 08:05,06/May/10 00:49,13/Mar/19 22:56,06/May/10 00:28,,,,,gogo-0.6.0,,Gogo Runtime,,,0,,,,,,"RFC132 commands are designed to be easy to create, allowing direct use of System.out

void echo1(String[] args) {
    StrinbgBuilder buf = new StringBuilder();
    for (String arg : args) {
        if (buf.length() > 0)
            buf.append(' ');
        buf.append(arg)
    }
    System.out.println(buf.toString());
}

but it also allows commands that return values:

String echo2(String[] args) {
    StrinbgBuilder buf = new StringBuilder();
    for (String arg : args) {
        if (buf.length() > 0)
            buf.append(' ');
        buf.append(arg)
    }
    return(buf.toString());
}

Both these command cause grep to match 'hello':

% echo1 hello | grep hello
% echo2 hello | grep hello

This is expected with echo1, as it writes to System.out.
It is more surprising that echo2 also works, as it doesn't write to System.out.

In this case, the runtime is implicitly writing the result of 'echo2 hello' into the pipe.

This is convenient, as it lets commands that don't write to System.out be used in pipelines.

However, it can also get in the way.

I have a grep command that writes to System.out and returns a boolean, depending on whether it matched:

% bundles | grep felix | wc

but in this case, the wc command gets the output from grep and also the result of grep (true)  which not wanted,
so I would like some way of disabling this behaviour.

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-01 02:34:45.511,,,no_permission,,,,,,,,,,,,57550,,,Thu May 06 00:28:05 UTC 2010,,,,,,0|i0vv0v:,183999,,,,,,,,"01/Sep/09 02:34;chirino;how about coupling the | syntax with an array like syntax to to setup the pipelines for each output type.  For example:

% bundles | grep felix |[ result: echo , out:err: wc ] 

basically that would allow you process the std out, std err, and result values of a command using 3 different commands or perhaps just 1.




 



","01/Sep/09 10:14;db82407;I was thinking of a simpler approach, that doesn't introduce new syntax:

Currently, Pipe.run() does this:

            for (List<CharSequence> statement : statements)
            {
                result = closure.executeStatement(statement);
                if (result != null && pout != null)
                {
                    out.println(closure.session.format(result, Converter.INSPECT));
                }
            }

I was thinking of adding a session variable to control this behaviour, e.g.

pipeformat = inspect

if the variable is not set, then default to the current behaviour.
if the value of pipeformat is a valid Converter format (i.e. inspect | line | part), then print the result to the pipe using this format;
otherwise don't print the result to the pipe.

So, setting pipeformat=none would stop results being automatically written to the pipe.



",06/May/10 00:28;db82407;This behaviour can now be disabled by setting the session variable .FormatPipe=false,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Shell.TUI causes ""new java.io.ServerSocket()"" to hang",FELIX-619,12399450,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,lcphillips,lcphillips,02/Jul/08 13:59,12/Apr/10 14:48,13/Mar/19 22:56,06/Sep/09 19:11,framework-1.0.4,,,,shell.tui-1.4.0,,Shell TUI,,,0,,,,,,"To save me from typing it in again, here's the dev mailing list excerpt:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
I uncovered an issue in which the Shell.TUI will cause ""new java.io.ServerSocket()"" to hang;

Through process of elimination / gutting, pretty much to the point of a small bundle with an activate() method (I'm using SCR) and a ""new ServerSocket(1234, 1)"", with a couple log events pre and post, I determined that the construction of the ServerSocket will not return (nor timeout, IIRC), if the Shell.TUI bundle is started first;

In other forms of the telnet shell, which do not use SCR/DeclarativeServices, I remember I had to put install and start those bundles prior to the Shell.TUI... However, because I changed the ordering a la SCR (my bundle is installed and started, but SCR does not start my ""service"" and activation thereof until my dependencies are satisfied, in this case to shell service and log service), my bundle activation falls behind the shell.TUI activation...

So, the Shell.TUI must be causing some sort of conflict with ServerSocket ... I did not dig deeper than that... Not sure if someone would ask me to file a bug or not... I'm just putting this out there... maybe others have come across this, but I don't know...

I solved my immediate problem by simple removing Shell.TUI from the auto.start list;
------------------------------------------------------------------------------------------------------------------------------------------------------------------

autotart:
felix.auto.start.1= \
 file:bundle/org.craig.shell.play01.jar \
 file:bundle/org.osgi.compendium-1.0.1.jar \
 file:bundle/org.apache.felix.shell-1.0.1.jar \
file:bundle/org.apache.felix.shell.tui-1.0.1.ja
 file:bundle/org.apache.felix.configadmin-1.0.1.jar \
 file:bundle/org.apache.felix.bundlerepository-1.0.3.jar \
 file:bundle/org.apache.felix.scr-1.0.0.jar \
 file:bundle/pax-logging-api-1.0.0.jar \
 file:bundle/pax-logging-service-1.0.0.jar \
 file:bundle/pax-confman-propsloader-0.2.1.jar

Play01.java:
package org.craig.shell;

import org.osgi.service.component.ComponentContext;
import org.osgi.service.log.LogService;
import org.apache.felix.shell.ShellService;
import java.io.*;

public class Play01
{
   protected ShellService shell = null;
   protected LogService log = null;

   protected void activate(ComponentContext context) throws Exception
   {
      ServerSocket myListener = new ServerSocket(1234, 1); // Note from Craig - this will hang if TUI is started (presumably first)
   }

   protected void deactivate(ComponentContext context) throws Exception
   {
   }

   protected void setLog(LogService log)
   {
      this.log = log;
   }

   protected void unsetLog(LogService log)
   {
      this.log = null;
   }

   protected void setShell(ShellService shell)
   {
      this.shell = shell;
   }

   protected void unsetShell(ShellService shell)
   {
      this.shell = null;
   }

This is the dot.bnd file, which uses the BND tool (as an ANT task), and creates the manifest and OSGI-INF metadata thereof:

Bundle-SymbolicName: org.craig.shell.play01
Bundle-Name: org.craig.shell.play01 - shell play01
Bundle-Description: shell play01
Bundle-Version: 1.0.0
Export-Package: org.craig.shell
Import-Package: org.osgi.framework,org.osgi.service.component,org.apache.felix.shell,org.osgi.service.log
Service-Component=org.craig.shell.Play01; \
   log=org.osgi.service.log.LogService; \
   shell=org.apache.felix.shell.ShellService;
","Windows; Best to run in a sandbox, fork java if necessary (for full effect)... By sandbox, I mean a directory structure / project area that's sterile, shall we say",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-08 06:35:31.235,,,no_permission,,,,,,,,,,,,58369,,,Mon Apr 12 14:48:15 UTC 2010,,,,,,0|i0vvpj:,184110,,,,,,,,"08/Aug/08 06:35;fmeschbe;This is interesting.

 * Have you tried this with the latest release of the felix scr bundle ?
 * This only happens on the first startup ?
 * Or does it happen on each startup ?
 * Does it also happen if you install the bundles ""manually"", e.g. through the shell ?
","15/May/09 17:33;rickhall;This is related to a JDK bug:

http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4809647
","18/May/09 15:27;rickhall;Committed a patch to try to work around this issue. Basically, we try to determine if there are bytes available before reading from stdin. The current approach might not eliminate the issue completely, since it uses readLine() if there is any input available at all. It might still be possible for the deadlock situation to occur if there isn't a complete line to read. It might be better to implement or our own readLine() that uses available() to only read the available number of bytes until it gets a line feed. However, this is just a hunch.

I have deployed a snapshot.","20/May/09 15:36;pforhan;While the fix works when running under Eclipse (another way to make things seem to hang), my text does not get echoed to the console window when running this from the command line. ",20/May/09 15:49;rickhall;Thanks for the feedback. Now I remember something about this from the last time we tried to find a fix for this issue. We will look into it.,"20/May/09 15:59;pforhan;I need to amend this a bit... for a simple 10-bundle set-up, I see the problem.  For a more complex application (nearly 100 bundles) I do not see the issue.","20/May/09 16:27;rickhall;I talked to Tom Watson about how they solved this issue in Equinox and apparently there isn't a solution. They simply made this a configuration property. By default, they do not use the ""available()"" workaround, but when run within Eclipse they do. So, unless we can find another solution, I think we will have to follow a similar route and make this a configuration property for Shell TUI.","06/Sep/09 19:11;rickhall;I added a configuration property to enable the workaround: shell.tui.checkinput

It is false by default. This probably won't solve all of our issues, but it is something. We can always re-address this issue if necessary in a future release.","12/Apr/10 14:48;rickhall;For future reference, this is related to this JRE bug:

http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4809647

The related Equinox bug is:

https://bugs.eclipse.org/bugs/show_bug.cgi?id=40066",,,,,,,,,,,,,,,,,,,,,,,
Possible charset problem with parsing of repository.xml,FELIX-1954,12443840,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,,hampelratte,hampelratte,19/Dec/09 17:29,08/Mar/10 15:46,13/Mar/19 22:56,08/Mar/10 15:46,bundlerepository-1.4.2,,,,,,Bundle Repository (OBR),,,0,,,,,,"I have noticed that the obr bundle doesn't respect the charset of the repository.xml file:

RepositoryImpl.java line 253 ff.
                br = new BufferedReader(new InputStreamReader(is));
                KXml2SAXParser parser;
                parser = new KXml2SAXParser(br);
                parser.parseXML(handler);

In my repository.xml, I have german Umlaute and since my system runs with UTF-8 and the repository.xml is latin1, I get decoding errors.
In my opinion the repository.xml should be encoded in UTF-8 and the obr plugin should be able to respect the file's charset.","Gentoo Linux with system wide UTF-8 encoding. I think this means, that the JVM uses UTF-8 as standard encoding.",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-25 09:17:06.498,,,no_permission,,,,,,,,,,,,57095,,,Mon Mar 08 15:46:16 UTC 2010,,,,,,0|i0vvdr:,184057,,,,,,,,"19/Dec/09 17:41;hampelratte;Here are my ""System.getProperties() | grep encoding""

file.encoding.pkg = sun.io
file.encoding = UTF-8
sun.io.unicode.encoding = UnicodeLittle
sun.jnu.encoding = UTF-8
","25/Feb/10 09:17;gnt;My bet is that kxml parser does not support encodings.
The new stax based parser should provide much better support for that, so you could try with a recent  1.5.0-SNAPSHOT maybe.","08/Mar/10 15:46;hampelratte;Guillaume,

you are right. It works with the 1.5.0-SNAPSHOT. I'm going to close this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
recreating a deleted project with the same name fails,FELIX-2168,12458107,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,davemssavage,gustavomzw,gustavomzw,04/Mar/10 10:50,04/Mar/10 14:41,13/Mar/19 22:56,04/Mar/10 14:41,,,,,sigil-1.0.0,,Sigil,,,0,,,,,,"Create a new Sigil project named dummyproject, then delete with delete on disk set. Recreate the project with the same name, when I click finish the dialog box doesn't close.","windows xp sp3
sun jre 1.6.0_18",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-04 14:16:34.629,,,no_permission,,,,,,,,,,,,56569,,,Thu Mar 04 14:41:28 UTC 2010,,,,,,0|i0vvdz:,184058,,,,,,,,"04/Mar/10 14:16;davemssavage;This looks to be related to changes I've made recently for FELIX-2153 to ensure project is a singleton within the IDE - looks like internal state is not being tidied up on delete.

I'll take a look and see what's going on...","04/Mar/10 14:41;davemssavage;Ok found the issue, simply failing to clear up the cache. Would be nice if there were some way to unit test these sorts of problems as part of the build...will send a mail to the list to see if anyone knows of any swt testing frameworks that can be used with apache licensed projects...

I've run the daily build early so you should be able to update and get the patches. Please close this issue if it works for you...(or obviously reopen if still appears broken)

Many thanks...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When launching Karaf with equinox, the osgi framework state is not written until 30s after the boot",FELIX-2043,12455288,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,gnt,gnt,04/Feb/10 09:24,04/Feb/10 09:43,13/Mar/19 22:56,04/Feb/10 09:43,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"If the process is killed abruptely, the state is lost.  This is usually not a problem, but it can be if some other bundles depend on this state.
For example the features service stores the fact that features have been installed at boot time, thus if the state is lost, the next start wil start from scratch but features won't be re-installed.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56686,,,Thu Feb 04 09:43:07 UTC 2010,,,,,,0|i0vvcv:,184053,,,,,,,,"04/Feb/10 09:43;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/assembly/src/main/filtered-resources/etc/config.properties
Committed r906419
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
grep -v doesn't filter linefeed on Windows,FELIX-2025,12447104,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,ccustine,ccustine,31/Jan/10 03:38,31/Jan/10 03:47,13/Mar/19 22:56,31/Jan/10 03:47,karaf-1.2.0,,,,karaf-1.4.0,,Karaf,,,0,,,,,,"On Windows, the inputstream piped from one action to the net contains \r\n line endings.  Grep iterates lines for matching and inputstream doesn't filter those so an inverted match with -v shows extra lines (the single \n).",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,56704,,,2010-01-31 03:38:03.0,,,,,,0|i0vvbz:,184049,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fileinstall release archives contains an empty ""load"" folder which should be removed",FELIX-1775,12438526,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,gnt,gnt,20/Oct/09 06:28,22/Dec/09 20:45,13/Mar/19 22:56,16/Dec/09 09:36,,,,,fileinstall-2.0.8,,File Install,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57260,,,Wed Dec 16 09:36:18 UTC 2009,,,,,,0|i0vvjr:,184084,,,,,,,,"16/Dec/09 09:36;gnt;Sending        fileinstall/src/test/java/org/apache/felix/fileinstall/internal/DirectoryWatcherTest.java
Transmitting file data .
Committed revision 891167.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"getStartLevel() always reports requested start level, not active start level",FELIX-1929,12442751,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,ccustine,ccustine,08/Dec/09 17:10,09/Dec/09 17:37,13/Mar/19 22:56,09/Dec/09 17:37,framework-2.0.2,,,,framework-2.0.3,,Framework,Specification compliance,,0,,,,,,"Start Level spec for getStartLevel() states: ""If the Framework is in the process of changing the start level this method must return the active start level if this differs from the requested start level.""",,,,,,,,,,,,,,,,,,,,,09/Dec/09 04:22;ccustine;ASF.LICENSE.NOT.GRANTED--FELIX-1929.patch;https://issues.apache.org/jira/secure/attachment/12427423/ASF.LICENSE.NOT.GRANTED--FELIX-1929.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-09 16:26:31.354,,,no_permission,,,,,,,,,,,,57116,,,Wed Dec 09 17:37:49 UTC 2009,,,,,,0|i0vvb3:,184045,,,,,,,,"08/Dec/09 17:22;ccustine;Fix seems easy enough, I'll attach a patch here for review first.","09/Dec/09 04:22;ccustine;This patch seems to do the the trick perfectly for me and both increments and decrements the active start level as it changes.  I didn't see any point in incrementing by +1 when there are no bundles in that startlevel so I just inserted the increment/decrement inside the start/stop blocks.  Those are already executed in proper order and have the only reference to what the current start level is (ie, start level of the current bundle).

Could one of the framework guys review this and let me know if this looks ok to commit?","09/Dec/09 16:26;rickhall;The patch looks ok...I will look into whether that is the correct interpretation of the spec.

You did not grant your patch for contribution, is that what you intended?

Thanks.","09/Dec/09 16:31;rickhall;Ok, interpretation appears to be good. Feel free to commit, but please reformat to match the existing coding style (i.e., bracket placement on separate lines).",09/Dec/09 17:37;ccustine;Thanks for reviewing the patch Richard.  I fixed the code formatting and committed.  I attached the original patch from a plugin in my IDE and it didn't show the ASF Grant custom field so I'll have to remember that next time.,,,,,,,,,,,,,,,,,,,,,,,,,,,
Karaf itest (CoreTest) fails on slower CI machines ,FELIX-1899,12441769,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gertvanthienen,gertvanthienen,gertvanthienen,26/Nov/09 11:48,26/Nov/09 11:53,13/Mar/19 22:56,26/Nov/09 11:53,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"When running the Karaf build on a slower (CI) build machine, the CoreTest in the itests fails because the commands have not been set up when the assertions are being executed:

{noformat}
org.apache.felix.karaf.shell.itests.CoreTest.testInstallCommand [equinox] View test details
java.lang.IllegalArgumentException: Command not found: log:display
at org.apache.felix.gogo.runtime.shell.Closure.execute(Closure.java:208)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57145,,,Thu Nov 26 11:53:08 UTC 2009,,,,,,0|i0vvmn:,184097,,,,,,,,26/Nov/09 11:53;gertvanthienen;Fixed in http://svn.apache.org/viewvc?view=revision&revision=884537,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
karaf.main.BootstrapLogManager possible resource leak and ignored exception in open method.,FELIX-1877,12441073,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,jgoodyear,jgoodyear,18/Nov/09 17:36,26/Nov/09 09:45,13/Mar/19 22:56,26/Nov/09 09:45,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"May fail to close stream:
o.a.f.k.main.bootstrapLogManager.getDefaultHandler() line 54
Need to close java.io.inputStream.


Method ignores excetional return value:
o.a.f.k.main.BootstrapLogManager$SimpleFileHandler.open(File, boolean) line 90
Called method java.io.File.mkdirs().
Capture possible exception.

Issues detected during run of static analysis tool.",,,,,,,,,,,,,,,,,,,,,18/Nov/09 17:45;jgoodyear;felix-1877.patch;https://issues.apache.org/jira/secure/attachment/12425353/felix-1877.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-26 09:45:47.232,,,no_permission,,,,,,,,,,,,57166,,,Thu Nov 26 09:45:47 UTC 2009,,,,,,0|i0vven:,184061,,,,,,,,"18/Nov/09 17:45;jgoodyear;File: felix-1877.patch

Contains two small fixes:

1) Includes finally block to ensure the opened input stream is closed after use.

2) Captures possible security exception during mkdirs call and wraps as IOException.

","26/Nov/09 09:45;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/BootstrapLogManager.java
Committed r884480
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
karaf.main.Main possible resource leaks and ignored exceptions from mkdirs().,FELIX-1878,12441091,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,jgoodyear,jgoodyear,18/Nov/09 20:12,25/Nov/09 12:20,13/Mar/19 22:56,20/Nov/09 14:52,,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"karaf.main.Main possible resource leaks and ignored exceptions from mkdirs().

Resource leaks:
org.apache.felix.karaf.main.Main line 361
org.apache.felix.karaf.main.Main line 383
org.apache.felix.karaf.main.Main line 367

Ignored exceptions:
org.apache.felix.karaf.main.Main line 187
org.apache.felix.karaf.main.Main line 376

Issues detected during run of static analysis tool.",,,,,,,,,,,,,,,,,,,,,18/Nov/09 20:27;jgoodyear;felix-1778.patch;https://issues.apache.org/jira/secure/attachment/12425378/felix-1778.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-20 14:52:32.779,,,no_permission,,,,,,,,,,,,57165,,,Fri Nov 20 14:52:32 UTC 2009,,,,,,0|i0vva7:,184041,,,,,,,,"18/Nov/09 20:27;jgoodyear;File: felix-1778.patch

Contains fixes for resource leaks and ignored exceptions.

The potential resource leaks are now closed in each path.

The possible SecurityExceptions are now caught and  wrapped as regular exceptions - this is in keeping with the current design (we can possibly come back and add additional handling around security exceptions, but for now this patch will consume their occurrence and continue operating as per normal).","20/Nov/09 14:52;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	karaf/main/src/main/java/org/apache/felix/karaf/main/Main.java
Committed r882590
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exec command eats first keystroke of subsequent commands,FELIX-1855,12440126,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,ccustine,ccustine,08/Nov/09 06:59,25/Nov/09 12:20,13/Mar/19 22:56,08/Nov/09 07:03,karaf-1.2.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,"When you run an external exec command, the first keystroke afterwards is being eaten somewhere.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57187,,,Sun Nov 08 07:03:12 UTC 2009,,,,,,0|i0vvaf:,184042,,,,,,,,"08/Nov/09 07:03;ccustine;Messy hack, but I can't really see any other way to avoid this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade equinox to 3.5.1,FELIX-1805,12439055,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,ccustine,ccustine,26/Oct/09 08:43,26/Oct/09 08:55,13/Mar/19 22:56,26/Oct/09 08:55,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57232,,,Mon Oct 26 08:55:48 UTC 2009,,,,,,0|i0vvlz:,184094,,,,,,,,26/Oct/09 08:55;ccustine;Updated in karaf pom and uploaded new version to private m2-repo.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Grep command line prefix (-n) not working properly,FELIX-1802,12439019,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,ccustine,ccustine,24/Oct/09 22:44,24/Oct/09 22:46,13/Mar/19 22:56,24/Oct/09 22:46,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,Recent changes look like they have borked line number match prefixing.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57235,,,2009-10-24 22:44:03.0,,,,,,0|i0vvjz:,184085,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Case insensitive grep outputs all uppercase in match results,FELIX-1801,12439018,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,ccustine,ccustine,24/Oct/09 21:29,24/Oct/09 22:26,13/Mar/19 22:56,24/Oct/09 22:26,karaf-1.0.0,,,,karaf-1.2.0,,Karaf,,,0,,,,,,Case insensitive grep outputs all upper case when a match is displayed.  I think this was introduced when I added colorized match results.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57236,,,2009-10-24 21:29:49.0,,,,,,0|i0vvkf:,184087,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"File Install running in an infinite loop while watching multiple directories, once of which is itself",FELIX-1572,12435155,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,ajaykumar,ajaykumar,08/Sep/09 21:06,15/Oct/09 10:16,13/Mar/19 22:56,15/Oct/09 10:16, fileinstall-1.0.0,fileinstall-1.2.0,fileinstall-2.0.0,,fileinstall-2.0.4,,File Install,,,0,,,,,,"Felix File install runs in an infinite loop, if you put a configuration file to watch itself

Steps to reproduce
1. Configure file install to watch /foo/bar directory
2. Put a new configuration file e.g org.apache.felix.fileinstall-<pid>.cfg in /foo/bar directory in order to watch multiple directories. If the value of felix.fileinstall.dir inside the configuration file  is anything but /foo/bar, it works great. 
However if you modify the value of felix.fileinstall.dir  to /foo/bar (meaning the same directory which file install is watching), it runs in an infinite loop
",generic,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-09 12:06:14.702,,,no_permission,,,,,,,,,,,,57455,,,Thu Oct 15 10:16:40 UTC 2009,,,,,,0|i0vvgn:,184070,,,,,,,,"09/Sep/09 12:06;gnt;I think I've reproduced the problem, but it's not a loop that really consumes much cpu.
What happens is that fileinstall is watching the /foo/bar directory, sees a configuration file and give it to the config admin.  The config admin then tell fileinstall that its configuration has changed, and fileinstall update the DirectoryWatcher accordingly.
This means that at each poll interval, the directory watcher will be recreated.

Not sure what we can do for that.","09/Sep/09 12:06;gnt;Lowering the priority as this is an undesirable behavior, but not reall harmful afaik.","15/Oct/09 10:16;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/FileInstall.java
Committed r825455

Please give it a try and reopen if needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall issue when updating already installed bundles at startup time,FELIX-1578,12435365,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,pderop,pderop,10/Sep/09 22:25,13/Oct/09 19:56,13/Mar/19 22:56,13/Oct/09 19:56,,,,,fileinstall-2.0.4,,File Install,,,0,,,,,,"I just got caught by a subtle issue regarding the way FileInstall updates already installed
bundles at startup time. (I don't cleanup the cache when starting Felix).

(the pb only occurs at startup time).

When the fwk is started, FileInstall does a lookup on all already deployed bundles (see
initializeCurrentManagedBundles method). This method relies on the Bundle.getLastModified() method
in order to store in the Artifact the lastModified date of the bundle. 

-> The issue is that the Bundle.getLastModified() method returns the last time the bundle was
   installed, not the time of the bundle's location file when the bundle was installed.

In our application server, we deploy our bundles using unix RPMs..
But unfortunately, when RPMs are installed, the date of the bundles are not updated and are left to
RPM build time. 

Let's consider a simple scenario:

1) Assuming that I have two rpms:

   MyBundle-jar-1.0 (build time: Sep 01)
   MyBundle-jar-1.1 (build time: Sep 05)

2) Now (Sep 10), I install MyBundle-jar-1.0 rpm (which build date is Sep 01)

3) Now, I startup my fwk and FileInstall loads the MyBundle.jar bundle.
    When installed, the Bundle.getLastModified() method returns Sep 10 (and not Sep 01 ...)

4) I stop my fwk.

4) Later on, at Sep 20, I decide to install the latest rpm (MyBundle-jar-1.1).
   So, in the load directory, I have now the MyBundle.jar, but with the rpm build
   date: Sep 05 ...

5) Now, I restart my fwk and here is the problem: FileInstall compares Bundle.lastModified() with
   the bundle file, which is older than the time when we previously installed the bundle:
   
     MyBundle.jar -> Sep 05
     Bundle.getLastModified() -> Sep 10
    
   and the bundle is not updated at startup. Notice that if I don't stop the fwk, then it
   works fine, and the bundle is updated. However, in development phase (while debugging),
   sometimes, we have to restart the fwk ...
   

As a suggestion, attached to this issue a patch which seems to resolve the problem:
Could you please take a look at it (it's attached to this issue).
This patch is only a suggestion, and may be there are other simpler ways to solve the problem ... ?

Here is what I have done in the patch: 
->

When installing/updating bundles, I store the date of the actual bundle into a file,  in the 
FileInstall's BundleContext (using BundleContext.getDataFile()).

in Util.java, I've added two new methods:
------------

    /**
     * Stores a lastModified date into a bundle context data file.
     * @param b The bundle whose lastModifed location file must be stored
     * @param date the lastModified date to be stored in bc
     * @param bc the FileInstall's bundle context where to store the lastModified date.
     */
    public static void setLastModified( Bundle b, long date, BundleContext bc )


    /**
     * Returns the lastModified date of a bundle.
     * @param b the bundle whose lastModifed location file must be returned
     * @param bc the FileInstall's bundle context.
     * @return the lastModified date of the bundle b
     */
    public static long getLastModified( Bundle b, BundleContext bc )


in DirectoryWatcher.java:
------------------------

1) in the initializeCurrentManagedBundles() method, instead of storing Bundle.getLastModified() in the artifact,
I load the bundle's lastModified date from the FileInstall's bundle context:

svn diff ->
-            artifact.setLastModified(bundles[i].getLastModified());
+            artifact.setLastModified(Util.getLastModified(bundles[i], this.context));




2) when a new bundle is first installed, I store its lastModifed date into the FileInstall's bundle context file:

svn diff ->
              bundle = context.installBundle(location, in);
+             Util.setLastModified( bundle, Util.getLastModified( path ), this.context );

3) when the bundle is updated, I also store its lastModifed date in the FileInstall's bundle context:

svn diff ->
              bundle.update(in);
+             Util.setLastModified(bundle, Util.getLastModified( path ), this.context);

4) Finally, I also fixed the test which compares lastModifed dates without equality:


-                            if (artifact.getLastModified() > Util.getLastModified(file))
+                            if (artifact.getLastModified() >= Util.getLastModified(file))

This last fix avoid updating the bundle each time the fwk is restarted ...

WDYT ?


",,,,,,,,,,,,,,,,,,,,,10/Sep/09 22:25;pderop;FileInstall.patch.tgz;https://issues.apache.org/jira/secure/attachment/12419228/FileInstall.patch.tgz,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-13 19:56:59.376,,,no_permission,,,,,,,,,,,,57449,,,Tue Oct 13 19:56:59 UTC 2009,,,,,,0|i0vvlb:,184091,,,,,,,,10/Sep/09 22:25;pderop;attached patch.,"13/Oct/09 19:56;gnt;Committing to https://svn.apache.org/repos/asf/felix/trunk ...
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Artifact.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/DirectoryWatcher.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Scanner.java
	M	fileinstall/src/main/java/org/apache/felix/fileinstall/internal/Util.java
Committed r824895

I've reused your idea but instead of storing the last modified date, fileinstall now store the checksum which leads to more accurate results wrt to updates.
Please reopen if needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Shell] The new sysprop command does not allow to delete a system property,FELIX-1653,12436791,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fdiotalevi,fdiotalevi,fdiotalevi,29/Sep/09 00:53,30/Sep/09 11:24,13/Mar/19 22:56,29/Sep/09 01:14,shell-1.4.0,,,,shell-1.4.1,,,,,0,,,,,,"The sysprop command currently in the trunk allows to display, set and modify system properties, but not to delete them.

The proposal is to add an additional flag   -r   to specify that a property must be deleted. The new usage would be:

sysprop                 -> displays all the system properties
sysprop [key]           -> displays the [key] property 
sysprop -r [key]           -> remove the [key] property 
sysprop [key] [value]   -> set the property [key] to [value]",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57375,,,Tue Sep 29 01:14:30 UTC 2009,,,,,,0|i0vv3j:,184011,,,,,,,,"29/Sep/09 01:14;fdiotalevi;Sending        shell/src/main/java/org/apache/felix/shell/impl/SystemPropertiesCommandImpl.java
Adding         shell/src/test/java/org/apache/felix/shell/impl/SystemPropertiesTest.java
Transmitting file data ..
Committed revision 819790.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
-resource: @path-to-jar should only resolve path-to-jar if it exists,FELIX-1611,12435946,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,17/Sep/09 13:52,18/Sep/09 07:07,13/Mar/19 22:56,18/Sep/09 07:07,,,,,,,Sigil,,,0,,,,,,"-resource: @path-to-jar

falls through to BND with embeds the content of the jar.

Sigil resolves the specified path against the location of sigil.properties, so BND can still find the jar when invoked from higher-level builds.

However, this stops the BND feature of searching the classpath for a jar of the specified name.

So if the resolved path that sigil creates does not exist, then the original path should be passed to BND.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57417,,,Fri Sep 18 07:07:05 UTC 2009,,,,,,0|i0vv3r:,184012,,,,,,,,"18/Sep/09 07:07;db82407;in-line jar path is now only resolved if it exists, allowing BND to search classpath for jar.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
project defaults not inherited properly,FELIX-1609,12435944,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,17/Sep/09 13:49,17/Sep/09 17:34,13/Mar/19 22:56,17/Sep/09 17:34,,,,,,,Sigil,,,0,,,,,,"property defaults are not correctly inherited via 3 levels of defaults

the original file read creates a BldConfig object and _all_ the defaults read create a default BldConfig object

a 3rd level default property, e.g.

project:provider: x
project;pattern: y

will completely replace the previous value, rather than merging with the existing value.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57419,,,Thu Sep 17 17:34:45 UTC 2009,,,,,,0|i0vvhz:,184076,,,,,,,,17/Sep/09 17:34;db82407;resolved - 3rd level defaults now work as expected.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
non-existent OBR repository is fatal,FELIX-1608,12435942,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,db82407,db82407,db82407,17/Sep/09 13:48,17/Sep/09 15:43,13/Mar/19 22:56,17/Sep/09 15:43,,,,,,,Sigil,,,0,,,,,,"If sigil-repos.properties references an non-existent repository, the build fails.

It would be better if this behaviour could be controlled by adding an extra key to each repository definition,
e.g. optional = true, would treat a non-existent repository as optiona",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57420,,,Thu Sep 17 15:43:47 UTC 2009,,,,,,0|i0vvhr:,184075,,,,,,,,"17/Sep/09 15:43;db82407;added 'optional' attribute to OBR repos, to avoid fatal error if they don't exist.


bld-shared;provider:    obr
bld-shared;level:       2
bld-shared;auth:        ${.}/sigil-auth.propetries
bld-shared;url:           file:${..}/build/repo-shared/repository.obr
bld-shared;optional:    true
bld-shared;index:       ${..}/build/bld-shared.obr",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bin/karaf may fail to start when CDPATH is set (on POSIX shells),FELIX-1459,12432504,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,gnt,jbonofre,jbonofre,07/Aug/09 08:51,07/Aug/09 10:02,13/Mar/19 22:56,07/Aug/09 10:02,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"On POSIX compliant shells, 'cd' may print to stdout when a nonempty directory name from the CDPATH environment variable is used successfully. The karaf startup script uses 'cd' output to set KARAF_HOME and the extra output causes an error. This can happen when the CDPATH contains '.' and a relative path is used, for example:

bash$ cd /opt/karaf
bash$ echo $CDPATH
.:..:/foo/bar
bash$ bin/karaf
KARAF_HOME is not valid: /opt/karaf
/opt/karaf","Linux Debian
Bash shell",,,,,,,,,,,,,,,,,,,,07/Aug/09 08:52;jbonofre;FELIX-1459.patch;https://issues.apache.org/jira/secure/attachment/12415830/FELIX-1459.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57565,,,Fri Aug 07 08:52:44 UTC 2009,,,,,,0|i0vvin:,184079,,,,,,,,07/Aug/09 08:52;jbonofre;Karaf patch to avoid CDPATH side effect.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
karaf fails to start in cygwin bash,FELIX-1423,12431761,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,ccustine,glucas,glucas,30/Jul/09 03:54,30/Jul/09 06:18,13/Mar/19 22:56,30/Jul/09 06:18,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"The karaf shell script does not set the classpath properly when running under cygwin bash on windows, causing:

 Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/servicemix/kernel/main/Main

Found with smx4, https://issues.apache.org/activemq/browse/SMX4-328
",cygwin bash shell on windows,,,,,,,,,,,,,,,,,,,,30/Jul/09 03:55;glucas;FELIX-1423.patch;https://issues.apache.org/jira/secure/attachment/12414978/FELIX-1423.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-30 06:18:22.227,,,no_permission,,,,,,,,,,,,57601,,,Thu Jul 30 06:18:22 UTC 2009,,,,,,0|i0vvh3:,184072,,,,,,,,30/Jul/09 03:55;glucas;Patch for unix-shell/bin/karaf.,"30/Jul/09 06:18;ccustine;Patch applied, thanks Greg!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileInstall bundle does not print stack trace of exceptions when log service is not used,FELIX-1174,12426245,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,sahoo,sahoo,24/May/09 14:12,26/May/09 14:03,13/Mar/19 22:56,26/May/09 14:03, fileinstall-1.0.0,,,,fileinstall-1.2.0,,File Install,,,0,,,,,,FileInstall bundle only prints exception description when log service is not used irrespective of log level.,generic,,,,,,,,,,,,,,,,,,,,24/May/09 14:17;sahoo;Felix-1174.patch;https://issues.apache.org/jira/secure/attachment/12408907/Felix-1174.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-26 14:03:18.52,,,no_permission,,,,,,,,,,,,57844,,,Tue May 26 14:03:18 UTC 2009,,,,,,0|i0vv9j:,184038,,,,,,,,24/May/09 14:17;sahoo;Patch that addresses the issue. ,26/May/09 14:03;rickhall;I applied this patch. Please close if satisfied. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceReferenceImpl improper implementation of equals and hashcode,FELIX-892,12412866,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,karlpauls,karlpauls,karlpauls,20/Jan/09 21:55,25/May/09 13:16,13/Mar/19 22:56,20/Jan/09 22:02,framework-1.4.1,,,,framework-1.6.0,,Framework,,,0,,,,,,We need to refactor the ServiceReferenceImpl to fix an IllegalStateException that can happen if the registration is not longer valid. These methods should not throw an exception. ,,,,,,,,,,,,,,,FELIX-1175,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,58097,,,Tue Jan 20 22:02:11 UTC 2009,,,,,,0|i0vvfz:,184067,,,,,,,,20/Jan/09 22:02;karlpauls;Refactor ServiceReferenceImpl to be an inner class of ServiceRegistrationImpl. This makes it easier to call the registration directly where needed and fixes the IllegalStateException.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OBR should handle R3 bundles without symbolic name better,FELIX-108,12347597,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,fmeschbe,rickhall,rickhall,09/Aug/06 12:48,28/Aug/08 14:04,13/Mar/19 22:56,28/Aug/08 14:04,,,,,bundlerepository-1.2.0,,Bundle Repository (OBR),,,1,,,,,,"Currently, OBR assumes that all bundles have symbolic names, but R3 bundles do not, which can lead to null pointer exceptions. Modify OBR so that it handles bundles without symbolic names more cleanly.",,,,,,,,,,,,,,,,,,,,,27/Aug/08 18:39;fmeschbe;FELIX-108.patch;https://issues.apache.org/jira/secure/attachment/12389027/FELIX-108.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-27 23:34:03.945,,,no_permission,,,,,,,,,,,,58875,,,Thu Aug 28 14:04:38 UTC 2008,,,,,,0|i0vvon:,184106,,,,,,,,"27/Aug/07 23:34;stefano.lenzi;Do you think that using the following code:

if(getSymbolicName() == null)
return getVersion().hashCode();

return getSymbolicName().hashCode() ^ getVersion().hashCode();

instead of

return getSymbolicName().hashCode() ^ getVersion().hashCode();

is not enough?","28/Aug/07 13:09;rickhall;I don't think this could work because OBR uses the symbolic name + version to uniquely identify bundles. If it doesn't have a symbolic name, there is no way to know what it is. Why not just add a symbolic name to the R3 bundle?","18/Sep/07 17:40;stefano.lenzi;OK! You're right, bad idea especially when you use the ResourceImpl.equals() methods.

BTW, we can use a fall back checking which check every entry in the Properties of the ResourceImpl during the equals() method and return the Properties.hashCode() when the SymbolicName is missing.

Finally, if we decide to be not compatible with OSGi version earlier than R4 we can close the issue and report the problem in the documentation of OBR and the main FAQ.","18/Sep/07 18:07;rickhall;Again, an R3 bundle is allowed to have a symbolic name header, so it is possible to work with bundles that target R3 as long as their manifest includes this header. But, yes, we should make this painfully clear in the documentation.","27/Aug/08 18:39;fmeschbe;I think a very simple solution to this case would be to simply test a resource without a symbolic name or version equal to itself and nothing else and to return the platform hashcode if the symbolic name or version is missing.

See attached patch.

WDYT ?","28/Aug/08 00:49;rickhall;This might work, but to be clear, such a bundle would be unmanageable by OBR. OBR tries to be smart and upgrade existing bundles to newer versions when possible to minimize the number of installed bundles (and potential class spaces), in this case it would never be able to do anything with this bundle. And the issue remains that OBR cannot deploy bundles without a symbolic name (i.e., to be in a repository), it only allows bundles without a symbolic name to be installed locally and their contents to be used to resolve dependencies. The only other option is to ignore them completely, but that is probably not the best solution.

In the end, I am not against this, but it seems the best approach is to just add these headers to your bundles...of course this is not always possible.","28/Aug/08 05:14;fmeschbe;Agreed. OTOH the Resolver.resolve should not be terminated with an NPE just because such a bundle is installed in the framework.


How about this: ""Felix OBR can use R3 bundles without symbolic name for dependency resolution but cannot update them"" ?","28/Aug/08 13:30;rickhall;Yes, the NPE has to be fixed regardless of the approach we use to fix it. I think it makes sense to use them for resolving, but otherwise ignore them.","28/Aug/08 14:02;fmeschbe;So I will apply my patch to prevent the NPE.

In addition I have updated the Bundle Repository page [1] with a note on how R3 Bundles without Bundle-SymbolicName headers are handled.

[1] http://cwiki.apache.org/FELIX/apache-felix-osgi-bundle-repository-obr.html","28/Aug/08 14:04;fmeschbe;I have applied my patch. I think we can close this issue then, WDYT ?",,,,,,,,,,,,,,,,,,,,,,
NPE on discoverResources with invalid syntax filter,FELIX-480,12388155,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Minor,Fixed,rickhall,adreghiciu,adreghiciu,08/Feb/08 04:37,27/Aug/08 19:30,13/Mar/19 22:56,09/May/08 18:14,framework-1.0.0,,,,bundlerepository-1.2.0,,Bundle Repository (OBR),,,0,,,,,,When using the RepositoryAdmin.discoverResources with an invalid syntax filter string it will result into a NPE as the osgi filter creation syntax exception is just sent to System.err but the method flow continues.,,,,,,,,,,,,,,,,,,,,,08/Feb/08 04:40;adreghiciu;FELIX-480.patch;https://issues.apache.org/jira/secure/attachment/12375035/FELIX-480.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-09 18:14:48.457,,,no_permission,,,,,,,,,,,,58507,,,Fri May 09 18:14:48 UTC 2008,,,,,,0|i0vvjj:,184083,,,,,,,,"08/Feb/08 04:40;adreghiciu;Patch to return an empty resource array in case of a filter syntax exception.
Another alternative will be to throw a runtime exception something like IllegalArgumentException.","09/May/08 18:14;rickhall;I applied the patch as it; it seemed reasonable to me. Alin, please close this issue if you are satisfied with it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
'Default' is consistently misspelled on SCR doc. page,FELIX-5542,13042585,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,cziegeler,ehogeweg,ehogeweg,13/Feb/17 14:29,13/Feb/17 14:39,13/Mar/19 22:56,13/Feb/17 14:39,,,,,,,Declarative Services (SCR),,,0,,,,,,"https://felix.apache.org/documentation/subprojects/apache-felix-maven-scr-plugin/scr-annotations.html

ex.
ds 
Defaut: true 
SCR Descriptor: -- 
Metatype Descriptor: -- 

Resolution:
:1,$s/Defaut/Default/g
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2017-02-13 14:39:05.498,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Mon Feb 13 14:39:05 UTC 2017,,,,,,0|i39zxz:,9223372036854775807,,,,,,,,"13/Feb/17 14:39;cziegeler;Thanks for reporting, fixed in rev 1782781",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Methodcache system size property is not used,FELIX-5469,13031039,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,pderop,JeroenDaanen,JeroenDaanen,29/Dec/16 08:29,29/Dec/16 12:00,13/Mar/19 22:56,29/Dec/16 11:37,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"The code in InvocationUtil to set a custom size for the method cache has been commented out. See InvocationUtil.java.
The default is not large enough for me.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-12-29 10:29:52.147,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Thu Dec 29 12:00:01 UTC 2016,,,,,,0|i383hj:,9223372036854775807,,,,,,,,"29/Dec/16 10:29;pderop;Hello Jeroen,

Thanks for reporting, I have committed the patch in revision 1776396. 
it's a regression dating from dm4-r1. Also, in the patch, I increased the default value to 4096.

Let me know if it's ok now so I can turn this issue to resolved state.
thank you.

","29/Dec/16 10:47;pderop;by the way, I wonder what default value would be ok for you ? in my case, I observed in some applications a performance gain when using 4096, that's why I changed the default value to 4096 in the patch, which seems to be a reasonable default value).

thanks
","29/Dec/16 11:13;JeroenDaanen;Yes this is ok for me, the issue can be closed. Thanks!

Here we use a cache size of 10000. Indeed the caching improves the performance noticeably. I also checked if the method cache gets actually full and in our case it gets full sometimes when loading a large configuration, even with a cache size of 10000 (the number of services depends on what an end-user has configured).
What the best default value for every use of the dependency manager would be is a difficult question of course, I think 4096 is a good value and if someone needs more, they can just specify the VM argument.
","29/Dec/16 11:37;pderop;ok, thanks.

So, I see that you are in a point where you are doing some performance tests for your application. I wonder if you are using the concurrent mode of dependency manager ?
Mixing DM filter indices + DM concurrent mode may significantly reduce startup time, especially if you have thousands of components which have some time consuming start methods.

DM concurrent mode has a kind of actor model: each component remains ""single threaded"" (all osgi events are handled serially), but multiple distinct components can be started concurrently. In case you are interested, don't hesitate to ask on the users mailing list, I will provide support. you can check [1] for general description about DM concurrent mode, and [2] for a concrete example (in the example, I'm using a pattern which allows to specify whether or not a given component can be started in a given thread pool, or if it must be handled synchronously, as it is the case by default, but you can also have a model where all components are by default started concurrently).

[1] http://felix.staging.apache.org/documentation/subprojects/apache-felix-dependency-manager/reference/thread-model.html
[2] http://svn.apache.org/viewvc/felix/trunk/dependencymanager/org.apache.felix.dependencymanager.samples/src/org/apache/felix/dependencymanager/samples/tpool/

hope this helps;
/Pierre","29/Dec/16 12:00;JeroenDaanen;Indeed I did some performance testing after the upgrade from DM3 to DM4 which we (Dobias and I) did recently. Currently we're not using the concurrent mode yet, but that might be the next step. Hopefully I will have (and get) some time soon to work on that.
For now thanks for the directions and I will use the users mailing list in case of questions.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong log when a callback is not found from component instance(s),FELIX-5273,12974837,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,pderop,pderop,pderop,01/Jun/16 15:38,01/Jun/16 16:27,13/Mar/19 22:56,01/Jun/16 16:27,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"When a component dependency callback is not found from the component instance(s), then sometimes (when a specific callback instance is used), the log is wrong and does not display the actual component instance(s).

For example, assume you have the following Activator:

{code}
class CallbackInstance {
   void setLog(LogService log) {}
}

CallbackInstance cbInstance = new CallbackInstance();

dm.add(createComponent()
     .setImplementation(Hello.class)
 .add(createServiceDependency()
         .setService(LogService.class).setCallbacks(cbInstance, ""setLoggggg"",  null, null));
}
{code}

The the following error is logged:

{code}
ERROR: [main] ""setLoggggg"" callback not found on component instances [test.dm.Hello@7b69c6ba]
{code}

but the log is wrong, it should log the CallbackInstance class, like this:

{code}
ERROR: [main] ""setLoggggg"" callback not found on component instances [test.dm.CallbackInstance@7b69c6bd]
{code}


",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Jun 01 16:27:32 UTC 2016,,,,,,0|i2yu13:,9223372036854775807,,,,,,,,01/Jun/16 16:27;pderop;fixed in revision 1746480.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in error logged when a component callback is not found.,FELIX-5245,12963295,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,pderop,pderop,pderop,27/Apr/16 20:37,27/Apr/16 20:39,13/Mar/19 22:56,27/Apr/16 20:39,org.apache.felix.dependencymanager-r1,,,,org.apache.felix.dependencymanager-r9,,Dependency Manager,,,0,,,,,,"There is a typo in the error logged by the ComponentImpl class when a dependency callback is not found in a given component implementation class:

in ./src/org/apache/felix/dm/impl/ComponentImpl.java:      
          
{code}
m_logger.log(LogService.LOG_ERROR, ""\"""" + methodName + ""\"" callback not found on componnent instances ""
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Wed Apr 27 20:39:36 UTC 2016,,,,,,0|i2wvbb:,9223372036854775807,,,,,,,,27/Apr/16 20:39;pderop;Fixed in rv 1741333.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bulgarian i18n for Web Console is out of sync,FELIX-4767,12768624,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,v_valchev,v_valchev,v_valchev,20/Jan/15 08:24,20/Jan/15 08:26,13/Mar/19 22:56,20/Jan/15 08:26,,,,,,,Web Console,,,0,,,,,,The i18n bundle is out of sync. Some localization keys are missing and the pom file doesn't correctly translate the properties with native2ascii.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,9223372036854775807,,,Tue Jan 20 08:26:17 UTC 2015,,,,,,0|i24jxz:,9223372036854775807,,,,,,,,20/Jan/15 08:26;v_valchev;fixed in svn rev.1653209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing toString methods in DependencyManager compat bundle,FELIX-3617,12600651,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,pderop,pderop,pderop,30/Jul/12 12:49,30/Jul/12 12:57,13/Mar/19 22:56,30/Jul/12 12:57,dependencymanager-3.0.0,,,,,,Dependency Manager,,,0,,,,,,"The following classes from DependencyManager compatibilty bundle does not implement ""toString"" method, and these should be implemented in order to ease debugging:

dependencymanager/compat/src/main/java/org/apache/felix/dependencymanager/impl/ConfigurationDependencyImpl.java
dependencymanager/compat/src/main/java/org/apache/felix/dependencymanager/impl/ServiceImpl.java

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,246048,,,Mon Jul 30 12:57:36 UTC 2012,,,,,,0|i07gun:,41496,,,,,,,,30/Jul/12 12:57;pderop;added missing toString method.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
some failings test from SCR integration tests,FELIX-3556,12560805,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,pderop,pderop,pderop,15/Jun/12 17:27,15/Jun/12 17:29,13/Mar/19 22:56,15/Jun/12 17:29,,,,,,,Declarative Services (SCR),,,0,,,,,,"since FELIX-3536, the class ComponentFactoryImpl has been split and is now extended by the ConfigurationComponentFactoryImpl class.

The problem is that some tests are not passing anymore because they are trying to introspect the ""m_componentInstances"" field from the ConfigurationComponentFactoryImpl class.
However, such field is declared private in the super class ComponentFactoryImpl.

I have changed the ComponentTestBase.getField method like this and all the tests are now passing OK:

    protected static Field getField( Class<?> type, String fieldName ) throws NoSuchFieldException
    {
        Class<?> clazz = type;
        while (clazz != null)
        {
            Field[] fields = clazz.getDeclaredFields();
            for (int i = 0; i < fields.length; i++)
            {
                Field field = fields[i];
                if (field.getName().equals(fieldName))
                {
                    field.setAccessible( true );
                    return field;
                }
            }
            clazz = clazz.getSuperclass();
        }
        throw new NoSuchFieldException(fieldName);        
    }
","java version ""1.6.0_32""
linux",,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,294031,,,Fri Jun 15 17:29:16 UTC 2012,,,,,,0|i0vvtr:,184129,,,,,,,,15/Jun/12 17:29;pderop;applied the patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DependencyManager compatibility bundle - ServiceDependencyImpl does not override toString,FELIX-3475,12552141,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,pderop,pderop,pderop,23/Apr/12 14:41,23/Apr/12 14:45,13/Mar/19 22:56,23/Apr/12 14:45,dependencymanager-3.0.0,,,,,,Dependency Manager,,,0,,,,,,"In the DependencyManager ""compat"" bundle, the org.apache.felix.dependencymanager.impl.ServiceDependencyImpl class does not override the toString() method.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,246017,,,Mon Apr 23 14:45:41 UTC 2012,,,,,,0|i07fyn:,41352,,,,,,,,"23/Apr/12 14:45;pderop;added missing toString method in ServiceDependencyImpl class in DependendencyManager class, in ""compat"" bundle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Karaf: closing IO stream, removal of minor file descriptor leak.",FELIX-1199,12427166,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,ccustine,jgoodyear,jgoodyear,05/Jun/09 00:34,18/Jun/09 00:35,13/Mar/19 22:56,18/Jun/09 00:35,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,"Karaf: closing IO stream, removal of minor file descriptor leak.

Minor file descriptor leak found during static analysis. 


",All,,,,,,,,,,,,,,,,,,,,05/Jun/09 00:35;jgoodyear;felix1199.patch;https://issues.apache.org/jira/secure/attachment/12409918/felix1199.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-18 00:35:19.938,,,no_permission,,,,,,,,,,,,57819,,,Thu Jun 18 00:35:19 UTC 2009,,,,,,0|i0vvrz:,184121,,,,,,,,"05/Jun/09 00:35;jgoodyear;File: felix1199.patch

Contains update to org.apache.felix.karaf.main.Main.java to remove a minor file descriptor leak detected by static analysis.","18/Jun/09 00:35;ccustine;Patch applied, with thanks to Jamie Goodyear.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
change parent artifact id from kernel to karaf in some modules to make the build pass from clean local maven repo,FELIX-1153,12425420,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,ffang,ffang,ffang,14/May/09 06:10,14/May/09 06:17,13/Mar/19 22:56,14/May/09 06:17,,,,,karaf-1.0.0,,Karaf,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,57865,,,Thu May 14 06:17:29 UTC 2009,,,,,,0|i0vvsn:,184124,,,,,,,,"14/May/09 06:17;ffang;commit fix
http://svn.apache.org/viewvc?rev=774651&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
improve logging in FileInstall,FELIX-529,12393272,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,,tonit,tonit,06/Apr/08 18:13,25/Aug/08 13:07,13/Mar/19 22:56,25/Aug/08 13:07,,,,,,,File Install,,,0,,,,,,"Logging currently goes to System.err Stream and prints common null arguments - like Exception.
This leads to common messages like ""Installed pax-url-mvn-0.3.1-SNAPSHOT.jar: null"" on the error console.

Fix:
- Remove exception if null. 
- write messages to System.out (like they usually do in felix)

(i think there is no patchfile required, is it?)

",,,,,,,,,,,,,,,,,,,,,13/Apr/08 21:17;tonit;FELIX-529.patch;https://issues.apache.org/jira/secure/attachment/12380019/FELIX-529.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-06-02 08:57:59.41,,,no_permission,,,,,,,,,,,,58459,,,Mon Aug 25 13:07:40 UTC 2008,,,,,,0|i0vvsv:,184125,,,,,,,,"13/Apr/08 21:17;tonit;LogService Support, Minore integration improvements for FileInstall 

- use LogService as primary log target. Fallback to sysout/err
- tighten visibility of member vars to private instead of packagelevel.
- contains feature FELIX-524 and FELIX-528
- replaced static references with explicit parameters
- cancelation flag should be (at least) volatile to ensure visibility
- renamed non obvious field names (like jarfile)",02/Jun/08 08:57;pkriens;I have fixed this but I made some other changes so need some more testing and I have ran out of time now :-( WIll get back after the Community Event,25/Aug/08 13:07;pkriens;This would now be ready for a release,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
upnp tester pom.xml depends on upnp base driver version 0.3.0 when it should be 0.9.0 ,FELIX-616,12399235,Bug,Resolved,FELIX,Felix,software,karlpauls,"OSGi container, services, and related tools",http://felix.apache.org,Trivial,Fixed,stefano.lenzi,jstalker,jstalker,29/Jun/08 13:00,08/Jul/08 17:05,13/Mar/19 22:56,08/Jul/08 17:05,,,,,,,UPnP Subproject,,,0,,,,,,"Checked out the felix tree (svn revision 672620) for the very first time (thus, no installed artifacts in ~/.m2/repository)
Followed the build instructions.  Got the following for the upnp tester build:

[INFO] ------------------------------------------------------------------------
[INFO] Building Apache Felix UPnP Tester
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] snapshot org.apache.felix:org.apache.felix.upnp.basedriver:0.3.0-SNAPSHOT: checking for updates from apache.snapshots
Downloading: http://people.apache.org/repo/m2-snapshot-repository/org/apache/felix/org.apache.felix.upnp.basedriver/0.3.0-SNAPSHOT/org.apache.felix.upnp.basedriver-0.3.0-SNAPSHOT.pom
Downloading: http://people.apache.org/repo/m2-snapshot-repository/org/apache/felix/org.apache.felix.upnp.basedriver/0.3.0-SNAPSHOT/org.apache.felix.upnp.basedriver-0.3.0-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.apache.felix:org.apache.felix.upnp.basedriver:jar:0.3.0-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.felix -DartifactId=org.apache.felix.upnp.basedriver -Dversion=0.3.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.felix -DartifactId=org.apache.felix.upnp.basedriver -Dversion=0.3.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
  	1) org.apache.felix:org.apache.felix.upnp.tester:bundle:0.2.0-SNAPSHOT
  	2) org.apache.felix:org.apache.felix.upnp.basedriver:jar:0.3.0-SNAPSHOT

----------
1 required artifact is missing.

for artifact: 
  org.apache.felix:org.apache.felix.upnp.tester:bundle:0.2.0-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  apache.snapshots (http://people.apache.org/repo/m2-snapshot-repository)


Changed the pom.xml so that it points at 0.9.0-SNAPSHOT (instead of 0.3.0-SNAPSHOT) and it builds fine.","OSX 10.5.3, java 1.5.0_13, mvn 2.0.9",300,300,,0%,300,300,,,,,,,,,,,,,,29/Jun/08 13:02;jstalker;upnp_dep.patch;https://issues.apache.org/jira/secure/attachment/12384909/upnp_dep.patch,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-08 17:05:17.331,,,no_permission,,,,,,,,,,,,58372,,,Tue Jul 08 17:05:17 UTC 2008,,,,,,0|i0vvrj:,184119,,,,,,,,29/Jun/08 13:02;jstalker;patch file for upnp/tester/pom.xml,08/Jul/08 17:05;stefano.lenzi;Fixed. It depends to version 0.8.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
