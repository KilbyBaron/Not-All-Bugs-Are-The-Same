Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Cloners),Outward issue link (Container),Outward issue link (Duplicate),Outward issue link (Incorporates),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Outward issue link (Regression),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Existing GitBox Approval),Custom field (External issue URL),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Null BroadCaster in EventBus,WICKET-4651,12598242,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,papegaaij,pausb,pausb,10/Jul/12 18:35,12/Jul/12 10:17,13/Mar/19 23:16,12/Jul/12 06:00,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"Line 85 of EventBus.java tries to fetch broadcaster for mapping ""/*"", however it returns null if you have configured atmosphere using ""org.atmosphere.mapping"" to another mapping rather than ""/*"".

Having a null broadcaster simply breaks the post method and as a result the whole module.",,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-11 06:46:09.131,,,no_permission,,,,,,,,,,,257731,,,Thu Jul 12 10:17:58 UTC 2012,,,,,,0|i0k8dr:,116175,,,,,,,,11/Jul/12 06:46;papegaaij;I agree that the current approach is not very flexible. What do you suggest to change this to? Should I use BroadcasterFactory.lookupAll and simply take the first or should I make the id (mapping) configurable? Do you think it makes sense to allow multiple broadcasters?,"11/Jul/12 22:12;pausb;It really depends how Atmosphere is initialized. If I got the code right these are following main alternatives:

1) MeteorServlet: in this case the value of <MAPPING = ""org.atmosphere.mapping"";> (check ApplicationConfig.java) defined in web.xml is used as AtmospherHanlder's mapping (and also the corresponding broadcaster message)

2) AtmosphereServlet:
In this case you can define various AtmosphereHandler(s) using atmosphere.xml e.g.
<atmosphere-handlers>
  <atmosphere-handler context-root=""/twitter"" class-name=""org.atmosphere.samples.twitter.TwitterAtmosphereHandler""/>
    <property name=”” value=””/>
  <atmosphere-handler .../>
</atmosphere-handlers>
(the context-root is the mapping)

there are also other alternatives but I am really no profi in that matter :) I must also confess that I don't have a very deep understanding of Atmosphere, but If I got it right, each time an AtmosphereHandlerWrapper is created a broadcaster with the mapping of AtmosphereHandler is created and is stored in the wrapper. So I would suggest is to try looking up the root broadcaster (/*) and if not found try to get all broadcasters and find a suitable one.

About the multiple boradcasters: I am also not sure if that would make sense in the context of Wicket (at least not with this implementation), since you have a very robust subscription (with @Subscribe) and filtering mechanism which makes different broadcasters for different AtmosphereResources unnecessary. Event multiple AtmosphereHandlers for different mappings would be superfluous.

A very simple workaround would be to use ""public Broadcaster lookup(Class<? extends Broadcaster> c, Object id, boolean createIfNull);"" method of default broadcaster factory and set ""createIfNull"" to true. This way you would make sure that you'd get always a root broadcaster.
","12/Jul/12 06:00;papegaaij;I've changed EventBus to use the first broadcaster returned by BroadcasterFactory by default, but you can also specify your own broadcaster.",12/Jul/12 09:52;pausb;Did you add the changes to SNAPSHOT?,12/Jul/12 10:17;papegaaij;SNAPSHOTs are built automatically. It could take a day before caching repositories get updated though.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
form parameters which should be submitted using POST are added to url after first display of feedback messages ,WICKET-4400,12541884,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,ivaynberg,pete,pete,08/Feb/12 22:04,10/Feb/12 01:34,13/Mar/19 23:17,10/Feb/12 01:34,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,feedback,get,message,parameters,post,url,"this bug is _really_ weird...

quickest way to reproduce is do the following:

$> cd /wicket/wicket-examples
$> mvn jetty:run

- click the 'forminput - Basic form processing.' example

- click 'save'

(notice that there will be a feedback message displayed below)

- click 'save' again

the url will look like this:
http://localhost:8080/forminput/?4&doubleProperty=20.5&idc_hf_0&integerProperty=100&saveButton=save&stringProperty=test&localeSelect=0&multiply:right=0&lines:1:lineEdit=line+two&multiply:left=0&lines:2:lineEdit=line+three&numberRadioChoice=0&lines:0:lineEdit=line+one&urlProperty=http://wicket.apache.org&integerInRangeProperty=50&phoneNumberUS=%28123%29+456-1234

Obviously the result from getting the POST parameters being added to the url

I also did a small quickstart example with a similar result...

My current summary is:

Once a feedback message is displayed the url will look get spoiled on the subsequent request.

I consider this a blocker as this should actually crash all apps urls that use a form and feedback messages and there's no obvious workaround...","6.0 trunk, OS X, Chrome",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-02-09 08:36:11.724,,,no_permission,,,,,,,,,,,227171,,,Thu Feb 09 19:05:46 UTC 2012,,,,,,0|i0k8t3:,116244,,,,,,,,"09/Feb/12 08:36;papegaaij;The commit that broke this is:
76e1663d0b73f605dc55f519a92b474eab237538 WICKET-499 WICKET-2705 feedback storage refactoring.

The problem seems to be even worse. In our app, we always display a feedback message on our login page, and this is causing the login page to not work at all. I can't login anymore and the username and password are shown in the url after pressing 'login'.","09/Feb/12 13:41;mgrigorov;I'm not sure why git bisect says that FeedbackMessages change is the cause.
The real cause is WICKET-4338 which reads POST params and puts them in Page's PageParameters. Later when WebPageRenderer creates the targetUrl it uses them and puts them in the created URL.
Maybe PageParameters should be extended to keep a separate structure for POST params which should be ignored for Url generation.","09/Feb/12 19:05;papegaaij;I've found the real cause of the problem: the cleanup of the feedbackmessages (called during detach) increments the page version. This causes the page to be stored under a version that does not correspond to the versions in the urls rendered on the page. Any url clicked or behavior triggered will cause a page expiry, after which the page is reconstructed and the form parameters are added as page parameters.

Commenting out addStateChange() in Component.detachFeedback() (line 1204) fixes the problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringIndexOutOfBoundsException when forwarding requests,WICKET-4387,12541245,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,mgrigorov,yossis,yossis,05/Feb/12 11:48,24/May/13 14:55,13/Mar/19 23:17,18/May/12 07:54,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,1.5.7,6.0.0-beta1,wicket,,,,,,,0,,,,,,,"We're getting StringIndexOutOfBoundsException from wicket when forwarding a request from our servlet filter (using request dispatcher) to wicket.
The problem occurs whenever the original URI is shorter than the wicket filter mapping.
I created an example webapp (based on the quickstart) in which a ForwardFilter is mapped to /f/* and it forwards all the requests to /wicket/ (see web.xml snippet below).
With this webapp a request to ""http://localhost:8081/wicket/f/"" results in the following exception:

{code}
ERROR - RequestCycle               - Error during processing error message
java.lang.StringIndexOutOfBoundsException: String index out of range: -5
        at java.lang.String.substring(String.java:1958)
        at java.lang.String.substring(String.java:1925)
        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getContextRelativeUrl(ServletWebRequest.java:180)
        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getClientUrl(ServletWebRequest.java:140)
        at org.apache.wicket.request.UrlRenderer.<init>(UrlRenderer.java:59)
        at org.apache.wicket.request.cycle.RequestCycle.newUrlRenderer(RequestCycle.java:148)
        at org.apache.wicket.request.cycle.RequestCycle.getUrlRenderer(RequestCycle.java:172)
        at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:145)
        at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:167)
        at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:781)
        at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:304)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:227)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:684)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:471)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:402)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:329)
        at org.jfrog.ForwardFilter.doFilter(ForwardFilter.java:22)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:164)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:498)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:562)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:394)
        at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:284)
        at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:322)
        at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:1714)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
{code}

{code:title=web.xml snippet}
	<filter>
		<filter-name>forward</filter-name>
		<filter-class>org.jfrog.ForwardFilter</filter-class>
	</filter>

	<filter>
		<filter-name>wicket.wicket</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
		<init-param>
			<param-name>applicationClassName</param-name>
			<param-value>org.jfrog.WicketApplication</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>forward</filter-name>
		<url-pattern>/f/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>wicket.wicket</filter-name>
		<url-pattern>/wicket/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
	</filter-mapping>
{code}

This bug is opened here following a [bug we found|https://issues.jfrog.org/jira/browse/RTFACT-4767] in Artifactory after upgrading to Wicket 1.5",,,,,,,,,,,,,,,,,,,WICKET-5203,,,20/Jun/12 17:16;dlmiles;TEST-org.apache.wicket.markup.html.border.ComponentBorderTest.xml;https://issues.apache.org/jira/secure/attachment/12532724/TEST-org.apache.wicket.markup.html.border.ComponentBorderTest.xml,05/Feb/12 11:51;yossis;wicket.zip;https://issues.apache.org/jira/secure/attachment/12513304/wicket.zip,16/May/12 15:03;maarten@apache.org;wicket4387.zip;https://issues.apache.org/jira/secure/attachment/12527631/wicket4387.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2012-02-09 08:27:31.676,,,no_permission,,,,,,,,,,,226597,,,Wed Jun 20 18:08:33 UTC 2012,,,,,,0|i00vwf:,3100,,,,,,,,05/Feb/12 11:51;yossis;Attaching a quickstart that reproduce this error. Tested on Tomcat.,05/Feb/12 11:54;yossis;The relative URLs (when not getting out of bound exception) is not correct.,"09/Feb/12 08:27;qxo;fix patch in org.apache.wicket.protocol.http.servlet.ServletWebRequest:
{code}
	private Url getContextRelativeUrl(String uri, String filterPrefix)
	{
		if (filterPrefix.length() > 0 && !filterPrefix.endsWith(""/""))
		{
			filterPrefix += ""/"";
		}
		StringBuilder url = new StringBuilder();
		uri = Strings.stripJSessionId(uri);
		final int start = httpServletRequest.getContextPath().length() + filterPrefix.length() + 1;
		url.append(uri.length()<start ? uri: uri.substring(start)); //for WICKET-4387

		if (errorAttributes == null)
		{
			String query = httpServletRequest.getQueryString();
			if (!Strings.isEmpty(query))
			{
				url.append('?');
				url.append(query);
			}
		}

		return setParameters(Url.parse(url.toString(), getCharset()));
	}
{code}","17/Feb/12 20:14;almacro;Here's the patch I applied to 1.5.3. Functionally equivalent to qxo's but perhaps slightly more readable:

180c181,186
< 		url.append(uri.substring(start));
---
> 		if(start > uri.length()) {
> 		    url.append(uri);
> 		} else {
> 		    url.append(uri.substring(start));
> 		}


","21/Feb/12 21:44;almacro;Slight line numbering fixup:

org/apache/wicket/protocol/http/servlet/ServletWebRequest.java
180c181,185
< 		url.append(uri.substring(start));
---
> 		if(start > uri.length()) {
> 		    url.append(uri);
> 		} else {
> 		    url.append(uri.substring(start));
> 		}

",22/Feb/12 09:53;mgrigorov;Please test with latest -SNAPSHOT the applied fix. Thanks!,"02/Apr/12 07:12;mgrigorov;Hi,

Can you confirm that the fix in 1.5.5 solves the problem for you?","16/May/12 15:03;maarten@apache.org;We were bitten by this bug as well.
We are using wicket 1.5.5
I was able to reproduce the issue in 1.5.5, 1.5.6 and 6.0-SNAPSHOT with the attached quickstart.

Only changes to a stock quickstart:
* add ERROR and REQUEST dispatchers in web.xml
* add an <error-page> tag in web.xml
* mount a notfoundpage
* do not use / as context path in Start.java
","20/Jun/12 14:50;dlmiles;I think the bug is that +1 is added to the data.

// The inputs I am able to observe from browser URL  http://127.0.0.1:8080/myapp/foobar/
String contextPath=""/myapp""
String filterPrefix=""/foobar/""
String uri=""/myapp/foobar/""

// From Wicket 1.5.6 source ServletWebRequest:201
final int start = contextPath.length() + filterPrefix.length() + 1;  // 6 + 8 + 1 = 15
url.append(uri.substring(start));  // StringIndexOutOfBoundsException(""String index out of range: -1"")

Looking at the code I can not see how adding +1 (in the computation of 'start') is useful since it would remove some extra character (that may or may not be present).","20/Jun/12 17:15;dlmiles;I can confirm that with the inputs:

String contextPath=""/myapp""
String filterPrefix=""/foobar/""
String uri=""/myapp/foobar/abc""

The output URL becomes ""bc"" with Wicket 1.5.7 where the leading ""a"" was chopped off.

However in removing the ""+ 1"" addition a large number of unit tests start failing.

So I can only describe the matter as some kind of ""voodoo"" in that it is doing a non-obvious thing and at the point of the non-obvious action it is not documented in the source with comments.

Enclosed a file of the first unit test to fail wicket-core/target/surefire-reports/TEST-org.apache.wicket.markup.html.border.ComponentBorderTest.xml

","20/Jun/12 17:16;dlmiles;First failing unit test information


??? where did the file attachment go ???  This comment should have a file attachment if it does not show up anywhere for you please comment back.",20/Jun/12 18:08;ivaynberg;i can see it in the Attachments section above...,,,,,,,,,,,,,,,,,,,,,,,,,,,
URL rendering regression,WICKET-4789,12609377,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,svenmeier,cleiter,cleiter,27/Sep/12 10:13,03/Oct/12 10:30,13/Mar/19 23:17,03/Oct/12 08:53,6.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.1,6.2.0,wicket,,,,,,,1,,,,,,,"The way URLs are encoded was changed (WICKET-4645) and now the first request (with ;jsessionid in path) generates invalid internal links:
My page is mounted to ""/Home/"" and I get redirected to ""/Home/;jsessionid=1234?0"" (fine). There's a Link  on the page and the generated URL for it is ""../Home;jsessionid=1234?0-1.ILinkListener-link"". Note the missing ""/"". This results in a 404 and breaks basically all of my system tests.

I'll attach a simple quickstart which demonstrates the problem. It's important to delete the jsessionid cookie before accessing the page.",,,,,,,,,,,,,,,,,,,,,,27/Sep/12 10:15;cleiter;quickstart-4789.zip;https://issues.apache.org/jira/secure/attachment/12546838/quickstart-4789.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-02 16:40:18.021,,,no_permission,,,,,,,,,,,252554,,,Wed Oct 03 08:53:16 UTC 2012,,,,,,0|i0curb:,72927,,,,,,,,"02/Oct/12 16:40;svenmeier;Fixed by keeping an empty segment for separation of a non empty base from empty relative url.

I had to adjust a bogus test for WICKET-4518, but luckily the FormInput example still works.","03/Oct/12 08:53;mgrigorov;Christoph confirmed the fix in the mail discussion so I merged it to branch wicket-1.5.x too.
Thank you, Sven! ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiskDataStore returns the wrong page when the page disk space is full ,WICKET-4572,12558070,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,mgrigorov,mgrigorov,mgrigorov,25/May/12 09:44,28/May/12 09:50,13/Mar/19 23:17,28/May/12 09:50,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"If the configured file size for the session data is overflowed (see org.apache.wicket.settings.IStoreSettings#setMaxSizePerSession(Bytes)) then Wicket may return wrong page data (bytes) for a expired page.

The problem is in org.apache.wicket.pageStore.PageWindowManager#idToWindowIndex which may have several page ids (the keys) pointing to the same window index (values).",,,,,,,,,,,,,,,,,,,,,,25/May/12 10:20;mgrigorov;WICKET-4572.patch;https://issues.apache.org/jira/secure/attachment/12529701/WICKET-4572.patch,25/May/12 09:46;mgrigorov;pagecache.zip;https://issues.apache.org/jira/secure/attachment/12529695/pagecache.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257757,,,Fri May 25 10:20:24 UTC 2012,,,,,,0|i0k8jj:,116201,,,,,,,,"25/May/12 09:46;mgrigorov;A quickstart that reproduces the problem:

1. Open the home page. There you can find two links (""Page A"", ""Page B"")
2. Now you have to open ""Page B"" in a new tab, three times in a row
3. Switch to the Page B tab that you have opened first
4. Click on the ""update"" link on that page
5. You can now see that that an error occurred. ",25/May/12 10:20;mgrigorov;Here is a patch that uses an inversed index to remove the obsolete/expired keys when adding a new page id.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multi byte characters are not decoded in AutoCompleteTextField,WICKET-4405,12542287,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,svenmeier,tank,tank,12/Feb/12 12:47,13/Feb/12 15:20,13/Mar/19 23:17,13/Feb/12 15:20,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket-extensions,,,,,,,0,,,,,,,"Multi byte characters (like 'é') are not decoded in AutoCompleteTextField getChoices(String input).

Everything works fine with Wicket 1.5.4.",,,,,,,,,,,,,,,,,,,,,,12/Feb/12 12:51;tank;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12514268/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-02-13 15:20:03.608,,,no_permission,,,,,,,,,,,227574,,,Mon Feb 13 15:20:20 UTC 2012,,,,,,0|i00vu7:,3090,,,,,,,,13/Feb/12 15:20;svenmeier;removed double encoding,13/Feb/12 15:20;svenmeier;The query parameter was encoded twice. Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Localizer.getCacheKey() generating redundant keys for same values causing memory leak.,WICKET-4134,12527280,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,nepoez,nepoez,15/Oct/11 04:17,18/Oct/11 08:00,13/Mar/19 23:17,18/Oct/11 06:50,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,memory_leak,,,,,,"Note:  To reproduce this, just add a breakpoint or a logger in Localizer.addKeyToCache().  After running all pages/scenarios once that method should not be called again.  But if it does get called you know that there are redundant keys being produced for the same value.

After running a web app for about a day, I will get out of mem exception.  With a heap dump I will see most of the memory taken by Localizer, with keys such as:

androidapp-10:_wicket_link-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-28-4-4-4-4-4-4-28-52-4-4-76-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-27-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-28-4-4-4-4-4-4-4-30-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-41-4-4-4-4-26-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-41-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4...

Each of these types of keys are duplicated several thousand times.  Here is a snipplet if the report:

Found 60 occurrences of char[] with at least 10 instances having identical content. Total size is 401,451,248 bytes.

Top elements include:

6,454 x androidapp-10:_wicket_link-4-4-4-4-4-4-4-4-4-4-4-4... (15,722 bytes)
6,453 x facebook-10:_wicket_link-4-4-4-4-4-4-4-4-4-4-4-4-4... (15,720 bytes)
5,866 x home-9:_autolink_5-10:_wicket_link-4-4-4-4-4-4-4-4... (15,720 bytes)
5,183 x candidates-9:_autolink_7-10:_wicket_link-4-4-4-4-4... (15,614 bytes)
686 x candidates-9:_autolink_8-10:_wicket_link-4-4-4-4-4... (16,567 bytes)","Linux, Jboss/Jetty 4g Ram",,,,,,,,,,,,,,,,,,,,WICKET-4133,15/Oct/11 04:22;nepoez;Screen Shot 2011-10-14 at 9.20.26 PM.png;https://issues.apache.org/jira/secure/attachment/12499124/Screen+Shot+2011-10-14+at+9.20.26+PM.png,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-18 08:00:40.865,,,no_permission,,,,,,,,,,,85679,,,Tue Oct 18 08:00:40 UTC 2011,,,,,,0|i0k97r:,116310,,,,,,,,15/Oct/11 04:22;nepoez;Heap dump report screenshot attached.  thanks again!,"15/Oct/11 04:59;nepoez;OK.  tracking a single link I have on a page to see what key is used.

Going to the exact same URL, One time the getCacheKey generates this key:

home-2:_autolink_5-3:_wicket_link-4-27-4-4-4-27-27-4-4-4-4-4-4-4-25-4-4-4-4-38-4-4-4-1-en_US-desktop-null

The subsequent hit will generate this.  

home-2:_autolink_5-3:_wicket_link-4-27-4-4-4-27-27-4-4-4-4-4-4-4-25-4-4-4-4-38-4-4-4-4-1-en_US-desktop-null


Trying again a few mins later, 3 consecutive hits to same url:

home-2:_autolink_29-3:_wicket_link-4-27-4-4-4-27-27-4-4-4-4-4-4-4-25-4-4-4-4-38-4-4-4-4-28-1-en_US-desktop-null
home-2:_autolink_29-3:_wicket_link-4-27-4-4-4-27-27-4-4-4-4-4-4-4-25-4-4-4-4-38-4-4-4-4-28-28-1-en_US-desktop-null
home-2:_autolink_5-3:_wicket_link-4-27-4-4-4-27-27-4-4-4-4-4-4-4-25-4-4-4-4-38-4-4-4-4-28-28-4-1-en_US-desktop-null
","15/Oct/11 05:07;nepoez;As it appends the cursorId, I noticed this id keeps getting longer each page hit
[TransparentWebMarkupContainer [Component id = _wicket_link-4-27-4-4-4-27-27-4-4-4-4-4-4-4-25-4-4-4-4-38-4-4-4-4-28-28-4-4]]
","15/Oct/11 05:52;nepoez;As a work around for now I am changing getCacheKey so the following is happening, skipping the appedending of id for TransparentWebMarkupContainer.  It will probably break some applications but it's ok for mine.

final boolean skip = parent instanceof AbstractRepeater || cursor instanceof TransparentWebMarkupContainer;

							if (skip == false)
							{
								buffer.append(':').append(cursor.getId());
							}","15/Oct/11 20:37;nepoez;this component also generates a new id, on a form submit:
[AutolinkBookmarkablePageLink [Component id = _autolink_203]]

causing a new key to be cached every click to a submit post back.","15/Oct/11 20:51;nepoez;same problem with WebComponent for a button like this <input type=""submit"" wicket:message=""value:uploadPhoto""/>
[Component id = _message_attr_159] 

the message_attr_159 is a new id every post back",18/Oct/11 06:55;nepoez;Thanks for fixing!  Just curious what was the fix applied?,18/Oct/11 08:00;mgrigorov;http://svn.apache.org/viewvc/wicket/trunk/wicket-core/src/main/java/org/apache/wicket/Localizer.java/?rev=1185501&view=diff&r1=1185501&r2=1185500&p1=/wicket/trunk/wicket-core/src/main/java/org/apache/wicket/Localizer.java&p2=/wicket/trunk/wicket-core/src/main/java/org/apache/wicket/Localizer.java,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Theading issue in AsynchronousDataStore causes OutOfMemory exception,WICKET-4063,12523515,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,mgrigorov,robinshine,robinshine,19/Sep/11 05:51,20/Sep/11 07:32,13/Mar/19 23:17,20/Sep/11 07:32,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"Considering below time sequence:
1. ""entries.offer"" is called during ""storeData"". 
2. page saving thread comes in, and poll the entry. Then ""entryMap.remove"" is called. Nothing will be removed since entry has not been added to entryMap yet. 
3. ""entryMap.put"" is called during ""storeData"". 

The result is that entries in ""entryMap"" may never be removed, and the entryMap can increase infinitely. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-20 07:32:01.123,,,no_permission,,,,,,,,,,,60130,,,Tue Sep 20 07:32:01 UTC 2011,,,,,,0|i0k9ef:,116340,,,,,,,,"19/Sep/11 05:53;robinshine;Modifying ""storeData"" method like below seems to fix this issue:


		Entry entry = new Entry(sessionId, id, data);
		String key = getKey(entry);
		entryMap.put(key, entry);
		try
		{
			boolean added = entries.offer(entry, OFFER_WAIT, TimeUnit.MILLISECONDS);

			if (added == false)
			{
				log.debug(""Storing synchronously page with id '{}' in session '{}'"", id, sessionId);
				entryMap.remove(key);
				dataStore.storeData(sessionId, id, data);
			}
		}
		catch (InterruptedException e)
		{
			log.error(e.getMessage(), e);
			entryMap.remove(key);
			dataStore.storeData(sessionId, id, data);
		}
","20/Sep/11 07:32;mgrigorov;Fixed.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Links with multiple parameters are wrongly generated,WICKET-3333,12495584,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,mgrigorov,aldaris,aldaris,14/Jan/11 11:54,16/Jan/11 12:27,13/Mar/19 23:17,14/Jan/11 16:06,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"If you have a PageParameters, with multiple params, then the resulting link will be something like this /url?id=123&amp;sid=456, so for some reason the & sign is encoded to &amp; which will result in the following parameters on the receiving page:
id=[123], amp;sid=[456]
See the attached quickstart for example.",,,,,,,,,,,,,,,,,,,,,,14/Jan/11 11:55;aldaris;wicket-3333.tar.gz;https://issues.apache.org/jira/secure/attachment/12468362/wicket-3333.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-14 16:06:47.172,,,no_permission,,,,,,,,,,,59283,,,Fri Jan 14 16:06:47 UTC 2011,,,,,,0|i0kb93:,116640,,,,,,,,14/Jan/11 11:55;aldaris;Quickstart app demonstrating the problem.,"14/Jan/11 16:06;mgrigorov;With r1059051 this problem is fixed.
But there are some more candidates for the same problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
libxml2 splits large CData section.  This breaks the processEvaluate js,WICKET-3244,12492796,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,mgrigorov,damien.hollis,damien.hollis,09/Dec/10 02:51,11/Dec/10 10:24,13/Mar/19 23:17,11/Dec/10 09:55,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.15,1.5-RC1,,wicket,,,,,,,0,,,,,,,"This is exactly the same problem as WICKET-2759 but the processEvaluate code did not have the same fix applied.

I will attach a patch file.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,09/Dec/10 02:55;damien.hollis;wicket-ajax.js.patch;https://issues.apache.org/jira/secure/attachment/12465878/wicket-ajax.js.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-11 09:55:16.137,,,no_permission,,,,,,,,,,,59282,,,Sat Dec 11 10:24:44 UTC 2010,,,,,,0|i0fvtz:,90755,,,,,,,,"09/Dec/10 02:55;damien.hollis;Attached is a patch for wicket-ajax.js

I actually found 3 places that appeared to need the same fix.  

Note: I haven't bother to factor out the common code.",11/Dec/10 09:55;mgrigorov;Fixed with r1044616 (trunk) and r1044617 (1.4.x),"11/Dec/10 10:24;hudson;Integrated in Apache Wicket 1.4.x #319 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/319/])
    WICKET-3244 libxml2 splits large CData section. This breaks the processEvaluate js

Read text/cdata by iterating over all child nodes

Uses a ""static"" Wicket._readTextNode() because Wicket.Ajax.Call and Wicket.Head.Contributor don't have common parent.

merge r1044616 from 1.5
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dropped support for Servlet 2.5 inadvertently,WICKET-3148,12479189,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,drzewo,drzewo,05/Nov/10 11:12,06/Nov/10 10:50,13/Mar/19 23:17,05/Nov/10 17:02,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"Fixing 3146 in r1031086 resulted in introducing a dependency on javax.servlet.annotation.* thus rendering WicketFilter unusable in pre-3.0 servlet containers.
If pruning the large base of 2.5-compatible containers was intentional then I'd also suggest switching to java 6 (Although servlet 3.0 specs does not explicitly indicate java 6 as a requirement, all 3.0 compliant containers that I'm aware of - namely Jetty 8, Websphere 8, tomcat 7, glassfish 3 - require java 6). Not to mention that this should be spoken out loud (https://cwiki.apache.org/WICKET/migration-to-wicket-15.html does not mention anything about container compliance)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-05 14:17:00.247,,,no_permission,,,,,,,,,,,59285,,,Sat Nov 06 10:50:52 UTC 2010,,,,,,0|i0kbof:,116709,,,,,,,,05/Nov/10 14:17;ivaynberg;better with r1031572?,"06/Nov/10 10:50;hudson;Integrated in Apache Wicket 1.5.x #488 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/488/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security: Possible Redirection to foreign Page by using BrowserInfoPage's PageParameter ,WICKET-3106,12477335,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,aul,aul,14/Oct/10 09:34,14/Oct/10 19:25,13/Mar/19 23:17,14/Oct/10 18:52,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"By link manipulation as a BookmarkableLink it is possible to redirect a User to  foreign pages (probably without users notice).


Example:

http://wicketstuff.org/wicket14/compref/?wicket:bookmarkablePage=:org.apache.wicket.markup.html.pages.BrowserInfoPage&cto=http://www.google.de

Reason:
""Fallback""- Constructor in org.apache.wicket.markup.html.pages.BrowserInfoPage  accepts every ""cto"" -PageParameter unevaluated regarding protocol prefex.


",,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-14 19:11:45.235,,,no_permission,,,,,,,,,,,59277,,,Thu Oct 14 19:25:48 UTC 2010,,,,,,0|i0kbsn:,116728,,,,,,,,"14/Oct/10 19:11;hudson;Integrated in Apache Wicket 1.4.x #204 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/204/])
    Issue: WICKET-3106
","14/Oct/10 19:25;hudson;Integrated in Apache Wicket 1.5.x #402 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/402/])
    Issue: WICKET-3106
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Method getParameterMap in CryptedUrlWebRequestCodingStrategy.DecodedUrlRequest is broken,WICKET-3070,12474801,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,mgottschalk,mgottschalk,22/Sep/10 09:22,22/Sep/10 15:27,13/Mar/19 23:17,22/Sep/10 15:27,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,2,,,,,,,"The original Method in class org.apache.wicket.Request defines getParameterMap as

public abstract Map<String, String[]> getParameterMap()

In DecodedUrlRequest, the method just returns an untyped Map. This map, however, does not always conform to the specification:

In the constructor, the following code can be found:

// Add ALL of the params from the decoded 'x' param
ValueMap params = new ValueMap();
RequestUtils.decodeParameters(decodedParamReplacement, params);
parameterMap.putAll(params); 

The method decodeParameters adds Strings (not String Arrays!) to the ValueMap, which are then just copied to the parameterMap.
This is incorrect, it should add String Arrays instead.

The method getParameter apparently knows about the problem, since it is checked whether the parameter values are Strings or String Arrays (via instanceof).

External users of the method getParameterMap, however, cannot know about the problem and must expect that a correctly typed map is returned.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-22 15:27:12.99,,,no_permission,,,,,,,,,,,203900,,,Wed Sep 22 15:27:12 UTC 2010,,,,,,0|i0kbwn:,116746,,,,,,,,"22/Sep/10 09:23;mgottschalk;The issue WICKET-524 fixed the ClassCastException in getParameter, but did not fix getParameterMap","22/Sep/10 09:26;mgottschalk;With issue WICKET-291, getParameterMap now returns a copy of the original map, but the problem with the types are not fixed. ",22/Sep/10 15:27;ivaynberg;we cannot change this in 1.4.x because it would cascade down and change a lot of existing functionality. this should all be properly handled in the 1.5.x branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax form submit fails in Wicket 1.4.11/Firefox3.6,WICKET-3040,12473859,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,mgrigorov,mgrigorov,mgrigorov,10/Sep/10 20:44,17/Sep/10 14:48,13/Mar/19 23:17,11/Sep/10 17:16,1.4.11,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.12,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"The very first ajax form submit fails in the attached quickstart.
The cause is :
Revision 988809 - (view) (download) (as text) (annotate) - [select for diffs]
Modified Wed Aug 25 05:22:58 2010 UTC (2 weeks, 2 days ago) by ivaynberg
AjaxSubmitLink not calling the onsubmit event handler
Issue: WICKET-2807

commenting wicket-ajax.js, line 1096:
submitForm: function(form, submitButton) {
	    if (!Wicket.Event.fire(form, ""submit"")) return;  <<<<<< THIS
	    if (this.handleMultipart(form, submitButton)) {
fixes the problem","Wicket 1.4.11, Firefox 3.6.10pre",,,,,,,,,,,,,,WICKET-1448,,,,,,,10/Sep/10 20:46;mgrigorov;wicket-3040.tgz;https://issues.apache.org/jira/secure/attachment/12454330/wicket-3040.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-11 02:56:04.942,,,no_permission,,,,,,,,,,,203874,,,Sun Sep 12 00:24:32 UTC 2010,,,,,,0|i0kby7:,116753,,,,,,,,"10/Sep/10 20:46;mgrigorov;Attaching a quickstart.
Ignore the odd way java and html are placed.
The very first click on the link at: http://localhost:8080/pack/OtherPage doesn't work, all following click work.",11/Sep/10 02:56;ivaynberg;is this also failing in 1.5-m2? if so we should -1 the release.,11/Sep/10 10:44;mgrigorov;Nino's mail is about 1.5-m2. I'll check it later,"12/Sep/10 00:10;hudson;Integrated in Apache Wicket 1.4.x #158 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/158/])
    WICKET-3040 Ajax form submit fails in Wicket 1.4.11/Firefox3.6

Do not fire form.submit() because this makes normal (non-ajax) call and calls just Form.onSubmit().
Just call form.onsubmit() if there is such and do not do anything if it returns negative result
","12/Sep/10 00:24;hudson;Integrated in Apache Wicket 1.5.x #324 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/324/])
    WICKET-3040 Ajax form submit fails in Wicket 1.4.11/Firefox3.6

Do not fire form.submit() because this makes normal (non-ajax) call and calls just Form.onSubmit().
Just call form.onsubmit() if there is such and do not do anything if it returns negative result

merge r996157 from wicket 1.4.x
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using RedirectPolicy.NEVER_REDIRECT when redirecting to a page will break URLs,WICKET-3004,12472000,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,pete,pete,19/Aug/10 13:31,17/Sep/10 14:47,13/Mar/19 23:17,20/Aug/10 23:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"When using RedirectPolicy.NEVER_REDIRECT the WebPageRenderer uses the URL of the __target__ page instead of the current URL. This is wrong as the target page URL will never be visible in the address bar of the browser as no redirect will happen.

In consequence all references to the page (scripts, images, etc) are potentially broken, at least when the source and target url have different segment sizes. In this case the number of '../' for creating relative URL's will be wrong and the links are broken.

patch is attached.
",,,,,,,,,,,,,,,,,,,,,,19/Aug/10 13:31;pete;broken-url-when-never-redirecting.patch;https://issues.apache.org/jira/secure/attachment/12452518/broken-url-when-never-redirecting.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-20 21:55:03.594,,,no_permission,,,,,,,,,,,203840,,,Sat Aug 21 06:11:35 UTC 2010,,,,,,0|i0kc1j:,116768,,,,,,,,"20/Aug/10 21:55;ivaynberg;is this a cleaner patch?


Index: src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java
===================================================================
--- src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java	(revision 987645)
+++ src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java	(working copy)
@@ -197,7 +197,7 @@
 			// or the targetUrl matches current url and the page is not stateless
 			// or the targetUrl matches current url, page is stateless but it's redirect-to-render
 			// just render the page
-			BufferedWebResponse response = renderPage(targetUrl, requestCycle);
+			BufferedWebResponse response = renderPage(currentUrl, requestCycle);
 			if (response != null)
 			{
 				response.writeTo((WebResponse)requestCycle.getResponse());
","20/Aug/10 22:12;hudson;Integrated in Apache Wicket 1.5.x #250 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/250/])
    fixed handling of RedirectPolicy.NEVER_REDIRECT
Issue: WICKET-3004
","21/Aug/10 06:11;pete;Indeed, your patch is a lot cleaner. Sometimes you can't see the forest for the trees :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal Window dragging failes with iframe,WICKET-4423,12543447,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,21/Feb/12 09:23,14/Nov/18 10:39,13/Mar/19 23:17,15/Oct/18 21:48,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.2.0,,,wicket-extensions,,,,,,,0,,,,,,,Forwarding of mouse event from nested iframes seems to have stopped working. (see javascript Wicket.Iframe),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-10-15 21:34:49.193,,,no_permission,,,,,,,,,,,228693,,,Mon Oct 15 21:48:18 UTC 2018,,,,,,0|i0b61b:,63090,,,,,,,,"15/Oct/18 21:34;jira-bot;Commit c7be83b16f5ef016c8d981d4b5f74bf480097868 in wicket's branch refs/heads/wicket-8.x from [~svenmeier]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=c7be83b ]

WICKET-4423 allow dragging over iframe

with pointer-events=none","15/Oct/18 21:47;jira-bot;Commit c51cf875f59ce0438a5f339aae71eb92fa915a1c in wicket's branch refs/heads/master from [~svenmeier]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=c51cf87 ]

WICKET-4423 allow dragging over iframe

with pointer-events=none",15/Oct/18 21:48;svenmeier;New solution with pointer-events=none allows dragging over iframe.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[wicket-ioc] LazyInitProxyFactory CGLIB proxies naming strategy may cause java.lang.IllegalAccessError,WICKET-4324,12537220,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,smathez,smathez,04/Jan/12 18:06,02/Nov/18 12:40,13/Mar/19 23:17,19/Jun/17 20:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.8.0,8.0.0-M7,,wicket-spring,,,,,,,0,proxy,,,,,,"A CGLib proxy created by LazyInitProxyFactory may cause java.lang.IllegalAccessError when the target class has ""package-private"" method.

I think the root cause of this problem is the choosen strategy for naming proxies (see WICKET-1162) : after adding ""WICKET_"" before the package name of the target class, the proxy becomes a member of a new package. (This behaviour is different as which is used by CGLib DefaultNamingPolicy).

Why not adding ""_WICKET"" *after* the name of the target class ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-01-07 09:08:50.224,,,no_permission,,,,,,,,,,,222729,,,Mon Jun 19 20:03:15 UTC 2017,,,,,,0|i17fd3:,251458,,,,,,,,"07/Jan/12 09:08;mgrigorov;Can you provide a quickstart application ?

Why prefixing (or suffixing) the class name would change the package ?!","07/Jan/12 09:14;mgrigorov;I just added package private methods locally to
org.apache.wicket.proxy.util.InterfaceObject
and
org.apache.wicket.proxy.util.ConcreteObject

and this didn't break org.apache.wicket.proxy.LazyInitProxyFactoryTest.

Please modify this test so that it breaks and attach the patch here. We will reopen the ticket. ","08/Jun/17 10:40;frantam;[~mgrigorov] Modified test available at https://github.com/FrantaM/wicket/commit/0e4c9ba0a4d143ae1e081ff013f9e38b31ff4b69

Output:
{noformat}
testConcreteProxy(org.apache.wicket.proxy.LazyInitProxyFactoryTest)  Time elapsed: 0 s  <<< ERROR!
net.sf.cglib.core.CodeGenerationException: java.lang.reflect.InvocationTargetException-->null
	at org.apache.wicket.proxy.LazyInitProxyFactoryTest.testCGLibInterceptorReplacement(LazyInitProxyFactoryTest.java:186)
Caused by: java.lang.reflect.InvocationTargetException
	at org.apache.wicket.proxy.LazyInitProxyFactoryTest.testCGLibInterceptorReplacement(LazyInitProxyFactoryTest.java:186)
Caused by: java.lang.IllegalAccessError: class WICKET_org.apache.wicket.proxy.ConcreteObject$$EnhancerByCGLIB$$2e664c88 cannot access its superclass org.apache.wicket.proxy.ConcreteObject
	at org.apache.wicket.proxy.LazyInitProxyFactoryTest.testCGLibInterceptorReplacement(LazyInitProxyFactoryTest.java:186)
{noformat}

Note that the original description is _slightly_ wrong: the target class itself or its ctor has to be package private for this to happen.","19/Jun/17 20:00;jira-bot;Commit 27b9a67d9e986d8998888e9984125ce2a2248498 in wicket's branch refs/heads/wicket-7.x from [~mgrigorov]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=27b9a67 ]

WICKET-4324 [wicket-ioc] LazyInitProxyFactory CGLIB proxies naming strategy may cause java.lang.IllegalAccessError

Change the calculation of the 'prefix' in WicketNamingStrategy from 'WICKET_package.Class' to 'package.Wicket_Proxy_Class'
","19/Jun/17 20:00;jira-bot;Commit e306c73eca6c8d9960b94416e01a1d6aeefe68c4 in wicket's branch refs/heads/master from [~mgrigorov]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=e306c73 ]

WICKET-4324 [wicket-ioc] LazyInitProxyFactory CGLIB proxies naming strategy may cause java.lang.IllegalAccessError

Change the calculation of the 'prefix' in WicketNamingStrategy from 'WICKET_package.Class' to 'package.Wicket_Proxy_Class'

(cherry picked from commit 27b9a67d9e986d8998888e9984125ce2a2248498)
","19/Jun/17 20:03;mgrigorov;Thank you for the test case, [~frantam]!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rendered Url on root context with cookies disabled might result in double slash //,WICKET-4920,12623359,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,11/Dec/12 10:38,16/Jan/18 15:21,13/Mar/19 23:17,11/Dec/12 10:43,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket,,,,,,,0,,,,,,,"When a link is rendered on root context with cookies disabled (or on first access with container sending jsessionid), a rendered link url might be prepended with ""./"" thus resulting in a double slash, ("".//"").",,,,,,,,,,,,,,,,,,,WICKET-4935,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2018-01-16 14:52:14.169,,,no_permission,,,,,,,,,,,297056,,,Tue Jan 16 15:21:21 UTC 2018,,,,,,0|i14l2v:,234878,,,,,,,,"11/Dec/12 10:43;svenmeier;Url starting with ""/"" is now prepended with ""."" only","16/Jan/18 14:52;pedrosans;Hi [~svenmeier],

the test UrlRendererTest#test14 parsers the URL:

""http://localhost:8080/;jsessionid=1p87c5424zjuvd57kljcu2bwa?0-1.IBehaviorListener.1-component""

To an URL containing two segments. Is this expected? Don't this URL has only one segment?","16/Jan/18 15:21;svenmeier;The Url is rendered relative as

{{  ./;jsessionid=1p87c5424zjuvd57kljcu2bwa?0-1.IBehaviorListener.1-component}}

These are two segments ""."" and "";jsessionid=1p87c5424zjuvd57kljcu2bwa"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add possibility to force usage of (renderable) tag for own Components,WICKET-4978,12627630,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,pparson,pparson,15/Jan/13 11:28,18/Nov/16 22:39,13/Mar/19 23:17,18/Nov/16 22:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"Sometimes, Components don't work as expected when not used with a DOM element.
This generates bugs, which are often and especially only visible on ajax interaction.

Common scenario: updating a component via Ajax which is used with wicket:container or setRenderBodyOnly(true). Or updating those (non-existent) DOM element with HTML attributes.

To allow for fail-fast behavior, I suggest to add an overridable getter to indicate that the component must be rendered as DOM element, e.g. isDomElementMandatory(). 

",,,,,,,,,,,,,,,,,,,,,,18/Nov/16 08:55;tobiashaupt;wicketPanel_Tag_Rewriting.zip;https://issues.apache.org/jira/secure/attachment/12839528/wicketPanel_Tag_Rewriting.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-15 11:58:58.274,,,no_permission,,,,,,,,,,,304414,,,Fri Nov 18 22:39:38 UTC 2016,,,,,,0|i17mcv:,252591,,,,,,,,"15/Jan/13 11:58;mgrigorov;I don't fully understand the requirement here.
Where this new method should be added (o.a.w.Component ?!) and who will read it ?","24/Jan/13 13:01;pparson;Let me give you an example:

I create a component which does somethin glie this in onInitialize:

add(new AttributeAppender(""class"", ""myVerySpecialButCrucialCssClassWhichNeedsTobeChosenDynamically""));
// ... or simply...
setOutputMarkupId(true);

A colleague re-uses the component with a <wicket:container/> element.

Scenarios like these often introduce bugs which are not fail-fast. Thus I'd love to be able to put
@Override
public boolean isDomElementMandatory() {return true;}
into my code


Not knowing everything Wicket is doing under the hood, my proposal was to add the overridable method to Component. It should be called by whatever can realize that there actually is no HTML tag to which attributes can be added (I do not know where this happens), and if the method returns true and there's no such element an exception could be thrown.","27/May/13 10:16;mgrigorov;Thanks for the additional info!

When you use #setOutputMarkup(Id|PlaceholderTag)(true) on any <wicket:xyz> element you should see a WARNING log message in your logs:

		log.warn(String.format(
						""Markup id set on a component that is usually not rendered into markup. ""
							+ ""Markup id: %s, component id: %s, component tag: %s."", getMarkupId(),
						getId(), tag.getName()));


There is already org.apache.wicket.Component#needToRenderTag(ComponentTag) (a private method!) that does what you ask for but I'm not sure that it will help to make it protected. Because in this case you will have <wicket:container> elements in your final page markup. Ajax updates will be able to find and update these elements but they still won't be rendered by the browsers.

I don't see a clean solution which will not break existing apps at the moment.
","18/Nov/16 08:54;tobiashaupt;In my opinion the unerlying problem is the following: When using a component, you have to have some knowledge about its internals - the tag it requires to work correctly. On the one hand I would consider this a weakness of wicket regarding encapsulation of internals of components. It leads to redundant markup if the component is reused a lot. It also makes it hard to change the internal behavior. Think of making a component ajax updateable in a project there it has been used a lot with and without specifying a tag.
On the other hand it is also the very big plus of wicket that it allows to define chunks of markup that are big enough to fully describe more complex components in a single markup file. Like forms with all their fieldsets and input fields.
In my project I want to construct the component tree in a generic way so that the containers don't know how their children will render. More specific: they are not allowed to specify the concrete tag of the child. The child is defining the tag and whether it needs to be rendered at all.
To achieve this, I rewrite the markup of the panel to accept a ""tag"" attribute (and other attributes like ""class"") in the <wicket:panel> tag. Please see the attached java classes for clarification. This way I am required to include any of these panels with the <wicket:container> tag.
I personally would be glad to see somthing like this beeing directly supported in wicket.","18/Nov/16 22:32;mgrigorov;The original requirement is now covered by the implementation of WICKET-6229.

[~tobiashaupt] I'll move your comment to a new ticket.","18/Nov/16 22:39;mgrigorov;[~tobiashaupt] Now I've checked your attached classes and I think there is no need to create a new ticket.
Your requirement could be easily achieved by overriding #onComponentTag():
{code}
@Override protected void onComponentTag(ComponentTag tag) 
{
   tag.setName(""table"");
   tag.append(""class"", ""MyCSSClass"", "" "");
}
{code}

No need of all the rewriting of the markup.

Please use the mailing lists if you want to discuss more your idea. There are more people subscribed there so we could get more feedback how to make Wicket better!
Thank you!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
encodeURL broken on Tomcat 7.0.28,WICKET-4645,12598022,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mcbain4711,mcbain4711,09/Jul/12 12:00,15/Oct/16 18:56,13/Mar/19 23:17,28/Aug/12 15:19,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,,,,,,,,0,,,,,,,"During page transition wicket used to encode an '../../tisch' which results in an exception:

Caused by: java.lang.IllegalArgumentException
	at org.apache.catalina.connector.Response.normalize(Response.java:1799)

The transition (within an ajax call) :

http://localhost:8080/wicket/bookmarkable/de.test.pool.manage.ManagePool?11
http://localhost:8080/tisch

IMHO the double parent "".."" is correct

There exists already an bugzilla issue created but rejected as invalid https://issues.apache.org/bugzilla/show_bug.cgi?id=53469.

If the wicket code works as expected there must be an error in the tomcat. 
Maybe the wicket development team has closer access to the tomcat developers :-)

",,,,,,,,,,,,,,,WICKET-4882,,,,,,,02/Nov/12 18:17;zeratul;UrlRendererTest.java;https://issues.apache.org/jira/secure/attachment/12551898/UrlRendererTest.java,09/Jul/12 12:59;thyzz;test.zip;https://issues.apache.org/jira/secure/attachment/12535664/test.zip,26/Jul/12 23:53;pedrosans;wicket-4645.zip;https://issues.apache.org/jira/secure/attachment/12538095/wicket-4645.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2012-07-09 12:11:22.461,,,no_permission,,,,,,,,,,,252565,,,Mon Nov 05 15:24:29 UTC 2012,,,,,,0|i0cuu7:,72940,,,,,,,,"09/Jul/12 12:11;mgrigorov;Actually, I was the one who requested this normalization in Tomcat.
Let's see whether we can convince the Tomcat devs that the urls above are OK.","09/Jul/12 12:49;thyzz;Hi Martin,
I was the one who filed the issue at tomcat.
I'll try to create a small test case. And attach it to this and the bugzilla ticket. and here","09/Jul/12 12:54;mgrigorov;As Mark Thomas described in Tomcat's Bugzilla he added unit tests for this and they pass.
Please create a demo app that demonstrates the problem and attach it to their Bugzilla.

Additionally: the URLs you pasted in this ticket are generated by Wicket 1.4, not by Wicket 6.","09/Jul/12 12:59;thyzz;This is with wicket 1.4.20 as we are still using that version
install this on tomcat 7.0.28
hit it with http://localhost:8080/test-1, click the link and everything works
do the same with http://localhost:8080/test-1/testpage/param1/value1, then click the link and check you're tomcat log...","09/Jul/12 13:23;mcbain4711;Have'nt used the version 1.4.x for month.... 

org.apache.wicket.protocol.http.WebApplication [wicket] Started Wicket version 6.0.0-beta2 in DEVELOPMENT mode","09/Jul/12 13:37;mgrigorov;@Jens:
From the ticket in Tomcat:
""The URL that is being encoded is:
../../resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js?w:lm=1340711670""

1) 'resources' is a the special path for Wicket resources in 1.4. 
In 1.5+ it is wicket/resource/...

2) In Wicket 6 there is no wicket-event.js
There is wicket-event-jquery.js now.


@Both: You see this is an issue with Tomcat, not Wicket one.
As you see Mark Thomas is responsive. Just follow up with him in Tomcat's issue tracker.","09/Jul/12 17:45;thyzz;Ok so Mark points back to Wicket.
I know 1.4.x is probably eol as soon as Wicket 6 hits the floor (or maybe it even already is).
 But is there a chance you could have a look. Or point me to the location where I should start digging?","10/Jul/12 06:25;mgrigorov;1.4.x branch is closed. Only security related fixes go in.
Look in the URL coding strategy that is in use.

Or just use Tomcat 7.0.27 until you upgrade to Wicket 6.",26/Jul/12 23:53;pedrosans;quickstart simulating the issue with Wicket 6,"27/Aug/12 08:50;mgrigorov;REDIRECT_TO_BUFFER (the default strategy) is broken with the new checks in Tomcat if your application needs to encode jsessionid in the url instead of using a cookie.
Use REDIRECT_TO_RENDER until there is a solution.

MyApp#init() {
   ...
   getRequestCycleSettings().setRenderStrategy(IRequestCycleSettings.RenderStrategy.REDIRECT_TO_RENDER)
}",27/Aug/12 14:22;mgrigorov;Fixed by making the url absolute before passing it to the web container.,27/Aug/12 15:54;mgrigorov;Some more testing needs to be done here. UrlRenderer's baseUrl miss the contextPath and filterPath and this makes the resolved relative url invalid. ,"02/Nov/12 18:17;zeratul;Hello,

I've attached test file with added unit test that fails due to a change to UrlRenderer in commit dda3eea1911dab0b58846221ae22bf795a03fd12

Now resource URL get their context and filter paths stripped and replaced with ""./"" - this leads to URL's being out of sync with actual resource locations in portal (portlet container).","05/Nov/12 07:56;mgrigorov;The produced result looks correct to me:

base url: /my-portlets/my-app/configuration-page
input: /my-portlets/my-app/wicket/resource/com.foo.bar.portlets.Anchor/res/Style-ver-1352751065000.css
output: ./wicket/resource/com.foo.bar.portlets.Anchor/res/Style-ver-1352751065000.css
used method: renderer.renderRelativeUrl(input);

You ask for relative Url and Wicket produces a correct (I think) relative url.

Here is the code that would produce what you need:
String encodedFullUrlString = ""/my-portlets/my-app/wicket/resource/com.foo.bar.portlets.Anchor/res/Style-ver-1352751065000.css"";
        Url baseUrl = Url.parse(""/my-portlets/my-app/configuration-page"");
        Url encodedFullUrl = Url.parse(encodedFullUrlString);
	    UrlRenderer renderer = new UrlRenderer(new MockWebRequest(baseUrl));
        String mangledUrl = renderer.renderFullUrl(encodedFullUrl);
	    System.err.println(Url.parse(mangledUrl).toString(Url.StringMode.LOCAL));
","05/Nov/12 15:24;zeratul;Hello,

I agree that I get what I ask for with renderRelativeUrl, let me be more specific:

I create JavascriptReferenceHeaderItem. In it's render method it calls private getUrl(), which calls RequectCycle.get().urlFor(). In that method I get correct mappedUrl. Then it's passed to private renderUrl() which calls UrlRenderer's renderUrl() and as the condition shouldRenderAsFull() return false - it is rendered as relative.

shouldRenderAsFull() tests protocol, host and port. Neither of that is in my resource mappedUrl, it looks like ""/my-portlets/my-app/wicket/resource/com.foo.bar.portlets.Anchor/res/Style-ver-1352751065000.css"".

For now I override render method and provide custom URL but I think we should try to reintroduce this back to Wicket core. Possibly find a spot in UrlRenderer where the removed condition ... return isAbsolute() ? mappedUrl.toString() :... (e.g. UrlRenderer#137) can be reinserted to allow absolute URLs without schema/host/port.

Best regards",,,,,,,,,,,,,,,,,,,,,,,,
ISecuritySettings#getEnforceMounts(true) prevents access to *all* non-mounted bookmarkable pages,WICKET-5094,12636572,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,12/Mar/13 13:34,26/Aug/16 15:42,13/Mar/19 23:17,12/Mar/13 15:06,1.5.10,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket,,,,,,,0,,,,,,,"ISecuritySettings#setEnforceMounts(true) is meant to be used to prevent access to mounted-pages via BookmarkableMapper, e.g. when Page1.class is mounted:

   http://localhost:8080/niceurl/a/nice/path/to/the/first/page

... then the following url will not be accepted:

   http://localhost:8080/niceurl/wicket/bookmarkable/org.apache.wicket.examples.niceurl.Page1

But starting with Wicket 1.5.x access to *all* non-mounted pages via BookmarkableMapper is prevented, i.e. no url ""http://localhost:8080/niceurl/wicket/bookmarkable/*"" is matched.",,,,,,,,,,,,,,,WICKET-3849,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2016-08-26 15:42:34.808,,,no_permission,,,,,,,,,,,317064,,,Fri Aug 26 15:42:34 UTC 2016,,,,,,0|i1ipkv:,317405,,,,,,,,12/Mar/13 15:06;svenmeier;changed to enforce for mount pages only,"26/Aug/16 15:42;jira-bot;Commit 4216e09a4cf23179cf9de3a23b1ad989caf7da91 in wicket's branch refs/heads/master from [~mgrigorov]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=4216e09 ]

WICKET-6161 SecuritySettings.setEnforceMounts() should be applicable for all kind of pages

Revert 74e7767635b5f1f20c61c07be34c4141e1da2571 from WICKET-5094 and update javadocs
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redirect after sign in with SignInPanel does not always reach homepage,WICKET-4401,12542005,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,robrosko,robrosko,09/Feb/12 18:10,19/Aug/16 11:23,13/Mar/19 23:17,24/Feb/12 07:47,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Im using SingInPanel for login and lately I observed some weird behaviour which I initially couldn't reproduce. It seems that the redirect which is happening after the login sometimes fails and I finally managed to build a quickstart. The bug does only show up when using tomcat (6.0.29) and not in jetty. I guess it is because of the context path which is not used in jetty in the default configuration. The quickstart eclipse project is named ""login"" which results in the context path you see below.

Do the following to see the bug: 

- Clear all your cookies for localhost.
- Open http://localhost:8080/login/user/login
- Login in with whatever you like, it accepts everything. 
- You will be redirected to something like http://localhost:8080/login/user/..;jsessionid=6BA0D67319631289F84008F699B07341
which shows the text ""TestPage"" which is not the homepage but should be. The class TestPage showing this text is mapped to /user
- If you want to go further you can open http://localhost:8080/login/user/login again and login in again you will be redirected to http://localhost:8080/login/

I dug around the request cycle which didn't help too much. Another guess is that the MountedMapper might do something bad here.",,,,,,,,,,,,,,,WICKET-6230,,,,,,,22/Feb/12 17:07;mgrigorov;WICKET-4401.patch;https://issues.apache.org/jira/secure/attachment/12515613/WICKET-4401.patch,20/Feb/12 16:32;mgrigorov;WICKET-4401.patch;https://issues.apache.org/jira/secure/attachment/12515258/WICKET-4401.patch,09/Feb/12 18:10;robrosko;login.zip;https://issues.apache.org/jira/secure/attachment/12513980/login.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2012-02-20 16:32:12.682,,,no_permission,,,,,,,,,,,227292,,,Thu Feb 23 17:20:35 UTC 2012,,,,,,0|i00vuf:,3091,,,,,,,,09/Feb/12 18:10;robrosko;quickstart,"14/Feb/12 16:37;robrosko;Unmounting the login page (comment out mountPage(""/user/login"", LoginPage.class) in WicketApplication) seems to solve the issue as a workaround. Though, the nice mount is gone and you have to use: http://localhost:8080/login/wicket/bookmarkable/de.rob.login.LoginPage

This seems to back the theory of a broken MountedMapper (or related code).","20/Feb/12 16:32;mgrigorov;I think it is related to how Tomcat's handles urls which end with '..'.
This patch appends '/' if the url ends with '..' and seems to solve the problem.","20/Feb/12 17:21;robrosko;I tested the patch and can confirm that it works for me, too.",22/Feb/12 17:07;mgrigorov;Here is another patch which I believe is better.,23/Feb/12 17:20;bumer;I'm using Jetty 6.1.26 and had the same issue. Patch works for me also.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Changes in WicketObjects.sizeof(final Serializable object) clashes with <header-contribution> in AjaxResponse,WICKET-5014,12629896,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cwellekoetter,cwellekoetter,30/Jan/13 13:56,21/May/16 12:09,13/Mar/19 23:17,31/Jan/13 13:40,6.3.0,6.4.0,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.6.0,,wicket,wicket-devutils,,,,,,0,,,,,,,"I am currently developing on a RIA with wicket. Therefore 90 % of our request are Ajax-based. 

In my development process I start the application with the development configuration and I like to display the DebugBar in our page. I implemented an AjaxRequestTargetListener that adds the DebugBar to the AjaxRequestTarget each time an ajax call is done. This AjaxRequestTargetListener is added and initialized in the Application as follows:

getAjaxRequestTargetListeners().add(new AjaxUpdateRequestTargetListener())

This configuration worked fine for every wicket version until 6.3.0. Then I got problems with the XMLAjaxResponse. The ""header-contribution""-XML Element does not get rendered in the AjaxResponse anymore and the corresponding HeaderItems of the ajax-updated components do not get rendered into the page.

After some debugging I found out, that the problem is connected with the ""WicketObjects.sizeof"" method change in version 6.3.0:
The method is called in the PageSizeDebugBarPanel for the whole page. That is why the onDetach method is called on every component of the page. Also the onDetach method is called on the HtmlHeaderContainer where the HeaderResponse gets resetted to 'null'. So every HeaderItem added to the HeaderResponse so far gets lost and no ""header-contribution"" XML-Element is rendered to the AjaxResponse.

To understand this problem a little bit easier, I will add a quickstart example to this issue. 
",,,,,,,,,,,,,,,WICKET-6166,,,,,,,30/Jan/13 13:57;cwellekoetter;wicket-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12567139/wicket-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-31 13:40:26.725,,,no_permission,,,,,,,,,,,310392,,,Thu Jan 31 13:40:26 UTC 2013,,,,,,0|i1hkfz:,310737,,,,,,,,"30/Jan/13 14:09;cwellekoetter;I added the quickstart to the described issue.

If you take a closer look into the quickstart you will see a Label with an AjaxSelfUpdatingTimerBehavior. The Label itself is an anonymous implementation where I overwrote the ""renderHead(IHeaderResponse)"" method. In this method I added an OnDomReadyHeaderItem.forScript to change the background color of the Label. You can see that the background color is changed after the initial page load. After the ajax response the label gets replaced but the background color does not change because the ""header-contribution"" is missing in the AjaxResponse.","31/Jan/13 13:40;mgrigorov;The objects will be cloned before detaching them and measuring their size from now on, so the original component wont be detached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NumberTextField and RangeTextField should always render/parse its value with English locale,WICKET-3591,12503247,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,akiraly,akiraly,04/Apr/11 05:23,06/Apr/16 19:53,13/Mar/19 23:17,09/Apr/11 18:09,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"Wicket started adding some support for the new Html5 input types. Among these are NumberTextField for number type [1] and RangeTextField for range type [2]. The Html5 spec mandates that the ""value"", ""min"", ""max"" attributes for these inputs are floating point numbers. Html5 spec also describes the format of a float number [3]. Simply to say it is a number formatted with English locale (for example: decimal mark is a period).

Wicket currently renders min and max spec compliant but renders the value wrong because it uses the client locale for that. Which means for example for a Hungarian client it will generate ""3,14"" instead ""3.14"". This breaks the custom widgets used by browsers for these new inputs (Chrome and Opera have custom ui, FF and IE stil use plain text field) because they expect the value with a period decimal mark. This means that browsers will post the value formatted in English locale too so parsing is also broken for these on the wicket server side because the client locale is used there also.

Imho wicket should always use the English locale for rendering/parsing these values in case of these input types.

To reproduce you can use the form examples from ""wicket-html5-examples"" in the wicketstuff project (I found this bug there).

[1] Html5 input number type: http://dev.w3.org/html5/markup/input.number.html
[2] Html5 input range type: http://dev.w3.org/html5/markup/input.range.html
[3] Html5 float datatype: http://dev.w3.org/html5/markup/datatypes.html#common.data.float",client with a locale where the decimal mark is not a period (for example: Hungarian locale),,,,,,,,,,,,,,WICKET-6138,WICKET-4501,,,,,,09/Apr/11 13:44;akiraly;fix-WICKET-3591.patch;https://issues.apache.org/jira/secure/attachment/12475889/fix-WICKET-3591.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-09 18:09:20.773,,,no_permission,,,,,,,,,,,204360,,,Sat Apr 09 18:09:20 UTC 2011,,,,,,0|i0kakf:,116529,,,,,,,,09/Apr/11 13:44;akiraly;Attaching a patch that fixes this bug.,09/Apr/11 18:09;mgrigorov;Fixed with r1090641.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlRenderer renders invalid relative URLs if first segment contains colon,WICKET-4260,12532707,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,andi5,andi5,25/Nov/11 12:07,07/Mar/16 15:44,13/Mar/19 23:17,07/Apr/12 06:20,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"Seen on Wicket 1.5.3.

If a relative url of a link starts with a path segment containing a colon then the whole uri will be regarded as absolute uri, so typically browsers will complain that there is no handle for the protocol foo in foo:bar/dee/per.

See also the attached quickstart. The start page contains three links, one relative with colon, one absolute and one to a mounted page without colon for comparison.
The application also has a static switch to add an extended urlrenderer, prepending ""./"" if needed. This fix is merely a quick shot and there might be better alternatives.
",,,,,,,,,,,,,,,WICKET-6111,,,,WICKET-4920,,,08/Mar/12 07:27;svenmeier;WICKET-4260.diff;https://issues.apache.org/jira/secure/attachment/12517535/WICKET-4260.diff,28/Nov/11 21:15;pedrosans;WICKET-4260.path;https://issues.apache.org/jira/secure/attachment/12505395/WICKET-4260.path,04/Apr/12 12:15;chrisc;ieDotSlashBug.zip;https://issues.apache.org/jira/secure/attachment/12521305/ieDotSlashBug.zip,25/Nov/11 12:08;andi5;wicket-4260.tar.bz2;https://issues.apache.org/jira/secure/attachment/12505103/wicket-4260.tar.bz2,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-11-28 21:15:32.43,,,no_permission,,,,,,,,,,,218440,,,Wed Apr 11 13:59:55 UTC 2012,,,,,,0|i0k8wn:,116260,,,,,,,,25/Nov/11 12:08;andi5;Quickstart,"28/Nov/11 21:15;pedrosans;Hi Andreas, it's weird to have the URL renderer behavior differently because of the first segment content. IMO it would be better if we start to always render relative to the base URLs to have the dot slash prepended.
I'm sending your patch back (MyUrlRenderer) with this improvement.
I'm 1+ for this change, if the team agree we can already start to change tests expectations.","28/Nov/11 21:36;ivaynberg;be careful to make sure that it doesnt break anything, in the past it has caused us headaches..

things like

does ./foo resolve to /foo when on ""/"" and /bar/foo when on ""/bar"" in all browsers. etc.
","28/Nov/11 22:46;andi5;Yes, I would prefer not to break everything else :)  But feel free to patch as you like.
Still, this bug needs fixing, of course, as right now those links do not work at all.

BTW, should not ./foo resolve to /foo when on /bar?
","29/Nov/11 01:24;ivaynberg;yes, shouldve been /bar/baz :)
","29/Nov/11 13:54;pedrosans;Quoting the RFC 2396 at http://www.ietf.org/rfc/rfc2396.txt
""  Authors should be aware that a path segment which contains a colon
   character cannot be used as the first segment of a relative URI path
   (e.g., ""this:that""), because it would be mistaken for a scheme name.""

Sounds like it would make sense if we improve the UrlRenderer#shouldRenderAsFull method to return true if the first segment has a colon. Fix this ticket but may break some apps because users may have code expecting relative URLs.",08/Mar/12 07:27;svenmeier;Alternative patch.,08/Mar/12 07:37;mgrigorov;The patch looks quite simple. I'm +1 to commit it in 1.5.x/master once 1.5.5 is out so we can have enough time to test it in different browsers before 1.5.6 is out.,"14/Mar/12 06:51;svenmeier;All relative urls are now explicitely relative, i.e. start with a dot or dot-dot.

Tested with IE, Firefox and Chrome and everything worked as expected (e.g. ""./foo"" when on ""/"").","14/Mar/12 10:17;svenmeier;Just tested with Safari, works too.","04/Apr/12 12:15;chrisc;Quickstart that shows IE problem with extra ./ inserted before path when /landing page is redirected to /logon page if not authenticated.

Happens on IE 8 (and possibly other IE versions)
Does not happen on FireFox nor Chrome.

Does not happen when running on Jetty 

Happens on Tomcat BUT only when app is installed as a virtual host - it does not happen when the app is installed as a servlet in the root context/host.

Using the quickstart create a .war using mvn war:war

Create an entry in your hosts file:

127.0.0.1             thingy.com.au

Rename the .war to ROOT.war and place under:
<tomcat>/virtualhosts/thingy

Add new host element to server.xml:

<Host name=""thingy.com.au"" debug=""0"" appBase=""virtualhosts/thingy"" unpackWARs=""true"" autoDeploy=""true"" xmlValidation=""false"" 				xmlNamespaceAware=""false"">


	<Valve className=""org.apache.catalina.valves.FastCommonAccessLogValve""
			directory=""logs""  prefix=""thing_access_log."" suffix="".txt""
			pattern=""common"" resolveHosts=""false""/>

		<Context path=""/manager"" debug=""5"" docBase=""/servers/tomcat/webapps/manager"" privileged=""true""/>

</Host>
      
To reproduce:

Point your IE browser to:

http://thingy.com.au/landing

this will attempt a redirect to thingy.com.au/logon
which should display the error.

Hit refresh and the logon page will display. Click on Logon link and problem should display again. Hit refresh and landing page will now display properly.",04/Apr/12 12:23;svenmeier;need to invesigate IE8 issue,"04/Apr/12 12:30;mgrigorov;This change also exposed a bug in Jetty 7.6.2 and earlier: https://bugs.eclipse.org/bugs/show_bug.cgi?id=374475
Basically the redirect will fail if it contains non-ASCII chars.
The fix will be in Jetty 7.6.3.","04/Apr/12 14:56;chrisc;I'm not sure how many web apps have a colon in the paths but I know (unfortunately) that a lot of corporates are locked into IE and this fix breaks IE under the conditions I outlined above which means some of our significant corporate customers now have a broken app - they need to hit Refresh after logging in to get 'over' the error page.

Is is possible to make this *fix* a configurable one so that those sites that don't have colons in their path can disable the addition of the './' prefix? Or better still, make that the default and sites that want to use a colon in the paths need to explicitly turn it on.","04/Apr/12 15:00;svenmeier;I don't have an IE at hand at the moment, but I tested the ieDotSlashBug application on Tomcat with root context (Root.war).

A redirect to ""./logon"" was handled differently on Jetty and Tomcat:

- Jetty redirects to ""http://localhost:8080/logon"", as org.eclipse.jetty.server.Response#sendRedirect() uses a canonical path (i.e. all ""."" and "".."" factored out)

- Tomcat redirects to ""http://localhost:8080/./logon"", obviously leaving the dot in Wicket's relative url as is.

For reference an excerpt of HttpServletResponse#sendRedirect()'s javadoc:

""... This method can accept relative URLs; the servlet container must convert the relative URL to an absolute URL before sending the response to the client...""","04/Apr/12 15:04;svenmeier;>Is is possible to make this *fix* a configurable one

I'd rather not make this configurable.

I'll investigate whether this is a known issue for Tomcat. If there's no fix, we can remove a leading ""./"" from the url before passing it to HttpServletResponse#sendRedirect().","04/Apr/12 15:21;chrisc;Some observations:

Here's the requests that the server sees - both get redirects to the logon page which is correct because the user is not yet authenticated

IE browser requesting /landing

127.0.0.1 - - [05/Apr/2012:01:16:13 +1000] ""GET /landing HTTP/1.1"" 302 -
127.0.0.1 - - [05/Apr/2012:01:16:13 +1000] ""GET /./logon?3 HTTP/1.1"" 404 976

FireFox browser requesting /landing

127.0.0.1 - - [05/Apr/2012:01:18:12 +1000] ""GET /landing HTTP/1.1"" 302 -
127.0.0.1 - - [05/Apr/2012:01:18:12 +1000] ""GET /logon?2 HTTP/1.1"" 200 1619

This makes me believe that it may not be a Tomcat bug because it works correctly for FireFox and Chrome. It may be that these browsers can handle the ./ and automatically remove it possibly?","04/Apr/12 16:04;svenmeier;Could you test whether it works when you mount LandingPage on ""nested/landing""? 

It seems Tomcat happily redirects to ""http://localhost:8080/../logon"" - I'd be interested whether IE can handle that.
","04/Apr/12 20:08;chrisc;I've just tested it and found IE works fine with ""nested/landing""","05/Apr/12 21:09;chrisc;Seems weird that IE handles ""../"" but not ""./"" though it is IE afterall so 'weird' becomes the expectation ;)

Do you have any ideas on the best approach for fixing this? We have temporarily reverted to 1.5.5 to get our site working for IE customers again but obviously some day soon we'll need to be able to upgrade to 1.5.6 or a snapshot.","05/Apr/12 22:04;svenmeier;>IE handles ""../"" but not ""./"" ... Do you have any ideas on the best approach for fixing this?

Strange, yes.

I'd say we keep this ticket as it is now (i.e. all relative urls prefixed with ""./"" or ""../""). 
But we'll let ServletWebResponse remove a leading ""./"" before passing the url to HttpServletRequest#sendRedirect().
This does no harm and as you stated is essential as a workaround for the Tomcat/IE combination.",06/Apr/12 00:59;chrisc;Sounds like a good solution. If you add a patch to 1.5.x in the git repository I can pull it and test it on both my quickstart and the real app whenever you're ready.,"06/Apr/12 14:00;svenmeier;>I can pull it and test it 

Please do so, thanks.","07/Apr/12 02:30;chrisc;Yep, works fine now. Thanks!",07/Apr/12 06:20;svenmeier;Now working with sendRedirect() for Tomcat+IE too.,11/Apr/12 13:59;mgrigorov;Filed a bug at Tomcat issue tracker for this problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53062,,,,,,,,,,,,,
Form#getJsForInterfaceUrl(..) works not correct if cookies are disabled,WICKET-4409,12542548,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,junterstein,junterstein,14/Feb/12 15:04,23/Oct/15 11:03,13/Mar/19 23:17,20/Feb/12 14:28,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"When using a Checkbox with wantOnSelectionChangedNotifications() = true, the rendered onClick action is not correct because the "";"" of the ""..;jsessionid=.."" is rendered as ""%3Bjsessionid=..."" and therefore the onSelectionChanged(..) method is not called.

The reason for this missbehavior is that in the Form Class, Line 529 ""url = renderer.renderUrl(Url.parse(url.toString()));"" returns the %3B representation of the "";"". This leads to the behavior that the MountedMapper can not find the according page for this request because the application thinks that the mounted page path is  ""myPath%3Bjsessionid=..."" and not ""myPath"".


You can reproduce this behavior in the attached quickstart, start in jetty for non cookie behavior.",,,,,,,,,,,,,,,,,,,WICKET-6010,,,14/Feb/12 15:06;junterstein;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12514495/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,227834,,,2012-02-14 15:04:23.0,,,,,,0|i00vtr:,3088,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Devutils breaks applications if session size is not available for any reason,WICKET-3355,12496165,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,20/Jan/11 19:17,24/Aug/15 13:46,13/Mar/19 23:17,20/Jan/11 19:18,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"Trying to upload file the multiupload wicket example fails with:

Caused by: java.lang.IllegalArgumentException: 'bytes' cannot be negative.
	at org.apache.wicket.util.lang.Bytes.<init>(Bytes.java:111)
	at org.apache.wicket.util.lang.Bytes.bytes(Bytes.java:124)
	at org.apache.wicket.devutils.inspector.SessionSizeModel.load(SessionSizeModel.java:36)
	at org.apache.wicket.devutils.inspector.SessionSizeModel.load(SessionSizeModel.java:24)
	at org.apache.wicket.model.LoadableDetachableModel.getObject(LoadableDetachableModel.java:119)
	at org.apache.wicket.devutils.debugbar.SessionSizeDebugPanel$2.getObject(SessionSizeDebugPanel.java:75)
	at org.apache.wicket.devutils.debugbar.SessionSizeDebugPanel$2.getObject(SessionSizeDebugPanel.java:79)
	at org.apache.wicket.Component.getDefaultModelObject(Component.java:1675)
      .....

The problem is that WicketObjects.sizeOf() may return -1 if an exception happens during the calculation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2015-08-24 12:51:54.661,,,no_permission,,,,,,,,,,,204154,,,Mon Aug 24 13:46:35 UTC 2015,,,,,,0|i0kb7j:,116633,,,,,,,,20/Jan/11 19:18;mgrigorov;Fixed with r1061176,"24/Aug/15 12:51;patrick1701;Hi [~mgrigorov],
I have something similar in v6.19.0. Should I open a new bug?

kind regards
Patrick

{quote}
Root cause:

java.lang.IllegalArgumentException: 'bytes' cannot be negative.
     at org.apache.wicket.util.lang.Bytes.<init>(Bytes.java:111)
     at org.apache.wicket.util.lang.Bytes.bytes(Bytes.java:124)
     at org.apache.wicket.devutils.inspector.EnhancedPageView$8.populateItem(EnhancedPageView.java:242)
     at org.apache.wicket.extensions.markup.html.repeater.data.grid.AbstractDataGridView.populateItem(AbstractDataGridView.java:156)
     at org.apache.wicket.markup.repeater.RefreshingView$1.newItem(RefreshingView.java:114)
     at org.apache.wicket.markup.repeater.DefaultItemReuseStrategy$1.next(DefaultItemReuseStrategy.java:75)
     at org.apache.wicket.markup.repeater.DefaultItemReuseStrategy$1.next(DefaultItemReuseStrategy.java:56)
     at org.apache.wicket.markup.repeater.RefreshingView.addItems(RefreshingView.java:189)
     at org.apache.wicket.markup.repeater.RefreshingView.onPopulate(RefreshingView.java:97)
     at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:123)
     at org.apache.wicket.markup.repeater.AbstractPageableView.onBeforeRender(AbstractPageableView.java:115)
     at org.apache.wicket.Component.internalBeforeRender(Component.java:949)
     at org.apache.wicket.Component.beforeRender(Component.java:1017)
{quote}","24/Aug/15 13:46;mgrigorov;Yes, please.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax-generated link cause ComponentNotFoundException if opened in a new browser tab,WICKET-3676,12506413,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bitstorm,bitstorm,06/May/11 13:55,25/Jun/15 08:48,13/Mar/19 23:17,07/May/11 07:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"When user opens a link added via AJAX, we get a ComponentNotFoundException exception, just like if the link component wasn't in the page/panel",,,,,,,,,,,,,,,WICKET-5933,,,,,,,06/May/11 13:56;bitstorm;myproject.zip;https://issues.apache.org/jira/secure/attachment/12478417/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-06 14:46:27.725,,,no_permission,,,,,,,,,,,204433,,,Sat May 07 07:43:08 UTC 2011,,,,,,0|i0kabb:,116488,,,,,,,,06/May/11 13:58;bitstorm;Quick start attached. Just run it via jetty plugin and follow home page's instructions.,"06/May/11 14:00;bitstorm;The issue affects wicket snapshot, wicket 1.5 RC3 works fine","06/May/11 14:46;mgrigorov;The problem is introduced with WICKET-3667.
http://svn.apache.org/viewvc/wicket/trunk/wicket-core/src/main/java/org/apache/wicket/request/handler/PageProvider.java?p2=%2Fwicket%2Ftrunk%2Fwicket-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fwicket%2Frequest%2Fhandler%2FPageProvider.java&p1=%2Fwicket%2Ftrunk%2Fwicket-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fwicket%2Frequest%2Fhandler%2FPageProvider.java&r1=1099563&r2=1099562&view=diff&pathrev=1099563
",07/May/11 07:43;mgrigorov;Fixed by reverting the change in WICKET-3667,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mounted bookmarkable Page not recreated on Session Expiry,WICKET-4997,12628616,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,bht@actrix.gen.nz,bht@actrix.gen.nz,21/Jan/13 21:19,28/Jan/15 07:52,13/Mar/19 23:17,26/Nov/13 08:16,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.13.0,7.0.0-M1,,wicket,,,,,,,3,,,,,,,"With the default true of org.apache.wicket.settings.IPageSettings#getRecreateMountedPagesAfterExpiry() PageExpiryException is thrown when a Link on a page is clicked.

I find it very useful and in fact indispensible to rely on RecreateMountedPagesAfterExpiry especially on logout links.

But it doesn't seem to work for me in 6.4.0. I think this is because Link#getUrl() calls Component#utlFor() which requires a stateless page for this to work:

		if (page.isPageStateless())
		{
			handler = new BookmarkableListenerInterfaceRequestHandler(provider, listener);
		}
		else
		{
			handler = new ListenerInterfaceRequestHandler(provider, listener);
		}

With a stateless page a url is:

http://localhost:8080/wicket/HomePage?-1.ILinkListener-toolBar-signout

With a non stateless but bookmarkable page a url is:

http://localhost:8080/wicket/page?1-1.ILinkListener-toolBar-signout

So I guess that a stateful page cannot be recovered because after session expiry Wicket cannot find out what the page is. It is not coded in the URL.

Looking at the semantics of UrlFor(), I thought this might be a bug and I copied and changed the code in my Link subclass from

//		if (page.isPageStateless()) {
to:
        if (page.isBookmarkable()) {
		
It works as expected but I don't know whether it would break other things if implemented in Wicket.

I guess I am not the only one who needs recovery for bookmarkable pages in this way. Would it be possible to change Wicket to fix this so it becomes possible?","JDK 7, GlassFish 3.1.2.2",,,,,,,,,,,,,,WICKET-5084,,,,,,,24/Jan/13 03:48;bht@actrix.gen.nz;TestCase.zip;https://issues.apache.org/jira/secure/attachment/12566248/TestCase.zip,21/Aug/13 08:11;bht@actrix.gen.nz;WICKET-4997-bernard-sources.zip;https://issues.apache.org/jira/secure/attachment/12599140/WICKET-4997-bernard-sources.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2013-08-19 14:38:27.902,,,no_permission,,,,,,,,,,,307106,,,Wed Jan 28 07:52:40 UTC 2015,,,,,,0|i1a5bb:,267327,,,,,,,,24/Jan/13 03:48;bht@actrix.gen.nz;Test case,"11/Aug/13 05:16;bht@actrix.gen.nz;I changed Component#urlFor() in 6.9.2 with good success. This eliminates PageExpiredException for bookmarkable pages. 

There are many cosmetic test failures due to a different expectation of the target URL in the generated responses: Instead of ""wicket/page?0-1.IBehaviorListener.0-test"" we should expect a more specific value ""wicket/bookmarkable/org.apache.wicket.ajax.DomReadyOrderPage?0-1.IBehaviorListener.0-test"", or a mounted path.

I have made real pages in a quickstart out of some test cases - they work fine. Test cases that expect PageExpiredException should no longer do so because of the improvement.

We can expect a performance improvement because Page#isPageStateless(), called for every generated URL on the page is very expensive compared with Page#isBookmarkable().

","19/Aug/13 14:38;papegaaij;I've pushed a branch (wicket-4997) against 6.x with a proposed fix for this issue. A problem I'm facing is that urls for mounted pages with required page parameters are rendered as bookmarkable urls (wicket/bookmarkable) when recreateMountedPagesAfterExpiry is disabled. This can be prevented by overriding isBookmarkable on the page (see PageWithLink), but I'm not sure if that's a good thing or not.","19/Aug/13 17:47;bht@actrix.gen.nz;Thanks Emond.

Yes, I agree with your concerns. Have you tried Page#wasCreatedBookmarkable instead? I have just discoverd this on line 384 in AbstractBookmarkableMapper#mapHandler

			if (checkPageInstance(page) &&
				(!pageMustHaveBeenCreatedBookmarkable() || page.wasCreatedBookmarkable()))
			{

I was getting second thoughts about using Page#isBookmarkable() because it creates a bookmarkable URL for an unmounted page that was in fact created by a non-bookmarkable constructor i.e. with IModel parameter as provided with the test case. Sorry if I first suggested the wrong approach.","19/Aug/13 18:42;bht@actrix.gen.nz;On the other hand expiry in the non-bookmarkable constructor case can be handled nicely in the constructor with a customised response so Page#isBookmarkable() is more flexible and less disrupting to the user. We just don't want PageExpiredException. That weakens the point in my last comment.

In other words if the developer codes bookmarkable constructors then these constructors must be supported properly i.e. validated.

This is the kind of scenario that makes me I think that Wicket should call a no-args page constructor instead of creating bogus PageParameters, if no PageParameters are provided.

Also, regarding your concern, there is still an outstanding issue WICKET-5068. When we get the PageParameters back, then there is less motivation to prevent the page from being re-created.


BTW this fixes WICKET-5043 which is essentially a duplicate of this issue.","21/Aug/13 08:11;bht@actrix.gen.nz;Some source files in a zip archive for consideration.

I think that WebResponseExceptionsTest#expirePage must fail with a bookmarkable TestExpirePage because clicking the link should re-create the page. That is why I changed it to be non-bookmarkable.

We still need a trivial additional test that positively verifies that a bookmarkable page does NOT expire with PageExpiredException but with the same page re-created after session expiry.
",21/Aug/13 08:18;papegaaij;Please provide code changes in unified diff format and in this case against the wicket-4997 branch. The easiest way to create a diff is using git diff.,21/Aug/13 08:31;bht@actrix.gen.nz;I can see a lot of remote branches but can't see that 4997 remote branch in my git client. I don't have much experience with git. What else can I do?,21/Aug/13 08:41;papegaaij;The branch is there (you can also see it on the github mirror). Perhaps you need to fetch it.,21/Aug/13 08:51;bht@actrix.gen.nz;I have fetched the branch. What is the diff command please?,"23/Aug/13 22:18;bht@actrix.gen.nz;Please see the attached 6 files. I changed only 4  main source files in addition to the obvious Component. MountedMapper#mapHandler now additionally handles BookmarkableListenerInterfaceRequestHandler via a new interface IListenerInterfaceRequestHandler which is implemented by BookmarkableListenerInterfaceRequestHandler and ListenerInterfaceRequestHandler.

Wicket needs this to add the bookmarkable URL component to link URLs to avoid PageExpiredException for bookmarkable pages.","25/Aug/13 07:27;bht@actrix.gen.nz;Hi Emond,

Many thanks again. The results of your changes look good to me. The tests look fine, too. I may have overlooked a couple of things or looked at an older version.","26/Nov/13 08:16;papegaaij;We now use the following condition to render bookmarkable urls:
getApplication().getPageSettings().getRecreateMountedPagesAfterExpiry() && ((page.isBookmarkable() && page.wasCreatedBookmarkable()) || page.isPageStateless())

This results in bookmarkable urls for pages that are bookmarkable and were created bookmarkable. These pages can be recreated after session expiry.","26/Nov/13 19:02;bht@actrix.gen.nz;Emond, my big thanks for that!","28/Jan/15 07:46;imeleshkov;[~papegaaij] sorry for disturbing you, but, but I'd like to get your opinion on few things related with commit bf43914fd7f0ed5ff57a56a82420cda76d3cbaee
Thus, 
- once you amend
{code:title=Component.java}
if (page.isBookmarkable())
{
    handler = new BookmarkableListenerInterfaceRequestHandler(provider, listener);
}
else
{
   handler = new ListenerInterfaceRequestHandler(provider, listener);
}
{code},
does ""if conditon""
{code:title=MountedMapper.java}
//public Url mapHandler(IRequestHandler requestHandler)
if (url == null && requestHandler instanceof ListenerInterfaceRequestHandler &&
			getRecreateMountedPagesAfterExpiry())
{code}
can ever trigger?
- if I dealing with stateless bookmarkable pages and buld link for the next page, for example, I have now something like {{/url?pageIdx=0&pageIdx=1}}, does it meat that you expect me switch off {{recreateMountedPagesAfterExpiry}} option? But it will means that my statefull bookmarkable pages won't be able to restore state if session expired.

Thanks in advance.","28/Jan/15 07:52;mgrigorov;Please use users@wicket.apache.org for questions.
The description above is not very clear about your use case and the problem you face.",,,,,,,,,,,,,,,,,,,,,,,
"PageProvider should create a new Page instance if PageParameters are changed, even if a stored page exists.",WICKET-4441,12545305,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,t_yano,t_yano,06/Mar/12 10:02,26/Oct/14 18:32,13/Mar/19 23:17,16/Jan/14 10:57,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,2,,,,,,,"The 'getStoredPage(int)' method returns a stored page instance even if user changes parameter values encoded into URL, and the PageParameters object of the stored page instance is never changed. So same page is displayed always though user changes url on browser manually.

** HOW TO REPRODUCT **

1. unpack the attached sample project 'pagebug.tar.gz'.
2. mvn jetty:run
3. access to http://localhost:8080/user/user1

You will see a form filled with information about user 1. The user's name is 'user 1', age is 30 and country is 'Japan'.
The mount path of this page is '/user/${userId}'. so 'user1' in the accessed url is a parameter value.

after accessing to the url, the url will be changed to http://localhost:8080/user/user1?0 .  it contains the page id of the currently displayed page.

4. change some values and submit the form. page id will be changed on every submit.

5. change only parameter value in url to 'user2'. Never change page-id.

for example, if you now access to http://localhost:8080/user/user1?5, change the url to http://localhost:8080/user/user2?5 .

6. This program must display information about user2, because the parameter value of url is changed. But you will see the information of user 1. Wicket always display the page of page-id = 5 (even though user changed url manually).

In this sample program, I use LoadableDetachableModel for retrieving current parameter-value. But I don't get the new parameter-value because pageParameters object in a page instance is never changed after the construction. pageParameters is fixed in the constructor of Page class.

I think that there are no easy way to retrieve parameter-values encoded into mount-path. Request.getRequestParameters() does not contain parameters encoded into mount-path. So there are no work-around for this issue.


** HOW TO FIX THIS ISSUE **

We must return null from getStoredPage(int) method of PageProvider class, if current PageParameters is not same with the PageParameters of a stored page. In current code, getStoredPage(int) checks only if the class of both pages are same. We must check the PageParameters of both pages.


** PATCH **

I attached a pache for PageProvider class. try it.


",all platform.,,,,,,,,,,,,,,WICKET-4488,,,,,,,13/Apr/12 09:28;mgrigorov;WICKET-4441.patch;https://issues.apache.org/jira/secure/attachment/12522546/WICKET-4441.patch,06/Mar/12 10:49;t_yano;fix-WICKET-4441.patch;https://issues.apache.org/jira/secure/attachment/12517218/fix-WICKET-4441.patch,06/Mar/12 10:49;t_yano;pagebug.tar.gz;https://issues.apache.org/jira/secure/attachment/12517217/pagebug.tar.gz,07/Mar/12 15:21;t_yano;pagebug2.tar.gz;https://issues.apache.org/jira/secure/attachment/12517410/pagebug2.tar.gz,,,,,4.0,,,,,,,,,,,,,,,,,,,2012-03-07 12:29:09.597,,,no_permission,,,,,,,,,,,230491,,,Sun Oct 26 18:32:50 UTC 2014,,,,,,0|i00wi7:,3198,,,,,,,,"07/Mar/12 12:29;mgrigorov;I think this issue is Invalid.
Why: PageParameters is an object that contains the request GET parameters which were available when the page instance was created. After that the subsequent requests (like form submittion, link click, ...) may have their own parameters which should not override the page's parameters. To get to those parameters you should use getRequest().getRequestParameters().
To support your use case you need to re-read getRequest().getRequestParameters() in onBeforeRender(). Or use CORS Model's which read their values from getRequest().getRequestParameters() but write somewhere else.

I agree that this is not very clear. And even Wicket makes it more confusing by passing Attributes parameter to some callback methods which provide Request, Response and PageParameters as inner objects. These PageParameters instances are ""the current request parameters"", not the Page's parameters. But it is a bit late to change that... :-/",07/Mar/12 15:21;t_yano;A new sample project for reproduce this issue.,"07/Mar/12 15:22;t_yano;I know that the PageParameters object is that contains the GET parameters which ware available when the page was created, because it is described in Javadoc. Truly, THAT was a reason I post this issue as a BUG.

Before I post this issue, same as you wrote in previous post, I thought that I could get the new parameter-value from getRequest().getRequestParameters(). But I couldn't, because getRequest().getRequestParameters() doesn't contain the parameters which encoded into mount-path like '/mount-path/${parameter-name}', but it contains only current query-parameters and post-parameters. Because the encoded parameters are not query-parameters nor post-parameters.  Simplly a part of url.

I attach a new sample project where I log all parameter-keys and values of getRequest().getRequestParameter() in onBeforeRender().  That doesn't contain the parameters encoded into mount-path.

(Note: a attached project references wicket 1.5.4 statically for testing. But same with wicket-1.5-SNAPSHOT.)


Our problem is that we have no way to easily get parameter-values from mount-path. We can get parameter-values of query-parameters and post-parameters, because wicket provide the way through getRequestParameters(), getQueryParameters() or getPostParameters(). But there is no way to get the parameters encoded into url.

The only way to retrieve the values from url is that we do same thing which MountedMapper do. Is it the right way to do that in wicket? I can not believe it. 

summary:

1. PageParameters is the object which contains the parameters which the page is created (it is decribed in JavaDoc, so we can not change the behavior easily).

2. getRequest().getRequestParameters() contains only query-parameters and post-parameters, but doesn't contain parameters which encoded into url by mount-path (the function for encoding parameters into URL is introduced from wicket 1.5, so older versions don't have this issue, I think.).

3. There is no easy way to retrieve parameter-values from URL (I think the only way is doing same thing MountedMapper do).

4. So the only easily implementable and ligically acceptable way to provide ALL CURRENT parameters (including parameters encoded into url) for users is that we reconstruct a new page if a part of parameters is changed. Users can get all current parameters from PageParameters.

If URL is changed, the page object is newly created. Parameters encoded into URL are a part of URL, so it is acceptable for me.

If there are another easy ways already, this ticket is my mistake, but I could not find them. I think, if creating a new page instance for each parameter-change is not acceptable for you, (I hope) you should provide another way to retrieve ALL CURRENT PARAMETER VALUES easily for our users of Wicket. We can retrieve query-parameters and post-parameters easily, but not parameters encoded into url.

","07/Mar/12 15:42;mgrigorov;I see what you mean...
But I'm still not convinced that your suggested approach is the right one. So I'll reopen the ticket so other Wicket devs can say what they think about it.

Until then I think you can use PageParametersEncoder to create PageParameters out of the current Request in #onBeforeRender() and use them.",13/Apr/12 07:59;mgrigorov;The suggestion will be implemented because it solves a problem with bookmarkability: http://markmail.org/thread/q3ewso5dnf2wjsol,"13/Apr/12 09:28;mgrigorov;Here is a patch that almost solves the problem but unfortunately it causes a bigger one.

See test org.apache.wicket.markup.html.link.MountedPageLinkTest#testLinkOnPageWithRecreationDisabled. It demonstrates that this fix causes an even bigger problem: the user cannot click any link in the page because link's url looks like ""./wicket/page?0-1.ILinkListener-link"" and it doesn't have the initial page parameters. So Wicket finds the page with pageId=0 in the store, but the check for page parameters fail and PageExpiredException is being thrown.

The changes in mapper tests are needed just because their test infrastructure (TestMapperContext) does some cheats.","13/Apr/12 14:31;svenmeier;If PageProvider doesn't know any parameters, it doesn't care actually, does it?

PageProvider#isPageParametersSame():

	if (pageParameters == null)
	{
		return true;
	}

",23/Apr/12 12:32;mgrigorov;If current's request page parameters are empty then we don't make the check for equality with the parameters of the stored page (as Sven suggested in the previous comment).,"26/Apr/12 08:12;mgrigorov;This change should be reverted. it breaks Ajax links as I found earlier. Even the assumption that empty parameters are OK is not valid.
Autocompleter, AjaxEditableLabel, ... are broken due to this.","26/Apr/12 10:20;t_yano;Does my understanding of this issue right? My understanding is following.

If users access a page through a url like /wicket/page?0, PageInstanceMapper try to restore the page from pageStore with the pageId. In this time, the PageParameter passed to a PageProvider is empty, so checking equality of PageParameters fail and new instance of page is created always. In this case, some events which use url like '/wicket/page?0' do not act correctly because new Page instance is created always though events must be post-backed into the same page rendered before events.

So, I propose that PageProvider class should have a new constructor argument like 'isPageMountedToUrl'. MountedMapper and other same kind of Mappers should pass 'true' for the argument, because a page is mounted onto a URL defined by programmer. PageInstanceMapper should pass 'false', because the url which PageInstanceMapper handle is not user-defined mount-url.

For API-compatibility, PageProvider must have all old (original) constructors. These constructors should set 'true' to the value of 'isPageMountedToUrl'. Some special IRequestMappers (probably only PageInstanceMapper) should set 'false'.

By holding this argument into a field, we can determine to check equality of PageParameters or not.

It just an idea. not implemented yet. How do you think about this idea? If you give +1 to this idea, I will try to implement the idea.","15/May/12 14:16;junterstein;Hi there,

we have the same issue.

We have a Page which accepts search requests via QueryParameters, like "".../OurPage?15&search=Hello+there"" which delivers the page with the result for the search ""Hello there"". If the user manually changes the URL (and our users do not know about wicket pageIds and the meaning of the ?15) to "".../OurPage?15&search=Hello+world"" the result for the search ""Hello there"" is still displayed and the search is NOT updated to ""Hello world"".

I implemented a MountedMapper which compares the PageParameters from the cached page and the PageParameters from the request and redirects the user to a fresh bookmarkable page, if the parameters do not match.

See: https://github.com/unterstein/wicket-tales/blob/master/src/main/java/org/wickettales/request/mapper/PageParameterAwareMountedMapper.java

My Problem is that the mountPage method of the application uses by default the original MountedMapper and we have no utility method to configurate the default Mapper for this method.
Whats about configuring the MountedMapper to use either the current behavior or my implemented alternative?

Cheers,
Johannes
","03/Feb/13 19:10;bht@actrix.gen.nz;I also have issues with PageParameters where the page is not stateless: issues WICKET-4997, WICKET-5001, WICKET-5008. Perhaps useful as additional context for a wider change?","14/Jan/14 09:45;mgrigorov;In branch sandbox/WICKET-4441-create-new-page-hybrid-url-with-different-parameters (Wicket 7.x) I've added logic to create a new page instance only when the request has no listener interface information (like, IBehaviorListener, ILinkListener, etc.).

This way if a user is at page with url '/products/12?3"" and changes it (manually or not) to '/products/345?3"" Wicket will notice the different parameters and create a fresh instance with '345'.
With this I think we solve the main problem - bookmarkable links show completely different things for different users (see http://markmail.org/thread/q3ewso5dnf2wjsol).

We cannot do this for requests with listener interface because this will break any Ajax requests with dynamic extra parameters, i.e. parameters added dynamically with JavaScript.
If the application needs to create a list of links to different products (where the product id is encoded in the url path or query string) then it should use BookmarkablePageLink.

Any comments and use cases are welcome!
",15/Jan/14 09:02;svenmeier;+1 looks good,16/Jan/14 10:57;mgrigorov;The branch is merged to master.,04/Jun/14 08:58;jesselong;Please could we have this fix back-ported to Wicket 6.,"04/Jun/14 09:27;mgrigorov;It is a change in the behavior and that's why I applied it only in Wicket 7.x.
As you can see at https://git-wip-us.apache.org/repos/asf/wicket/repo?p=wicket.git;a=commitdiff;h=a53591f030b87b5d1552e567226705020dee2a62 many test expectations have changed due to this change.

Maybe we should poll at dev@ whether it is OK to backport to 6.x ?","26/Oct/14 14:00;jira-bot;Commit 71674df5c8905c425152038281379027de89cf9b in wicket's branch refs/heads/master from [~bitstorm]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=71674df ]

WICKET-5734 Problem with WICKET-4441 and
RestartResponseAtInterceptPageException","26/Oct/14 18:32;jira-bot;Commit 71674df5c8905c425152038281379027de89cf9b in wicket's branch refs/heads/improvingQueuing from [~bitstorm]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=71674df ]

WICKET-5734 Problem with WICKET-4441 and
RestartResponseAtInterceptPageException",,,,,,,,,,,,,,,,,,,,
Localizer.substitutePropertyExpressions() is called twice when Localizer.getString() is called,WICKET-3207,12491638,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mbauer,mbauer,30/Nov/10 12:54,17/Sep/14 12:05,13/Mar/19 23:17,10/Dec/10 21:28,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,,,,,,,,0,,,,,,,"When you call getString() on a component this component calls Localizer.getString(). This method then calls Localizer.getStringIgnoreSettings() which calls Localizer.substitutePropertyExpressions() for the first time. The return value of getStringIgnoreSettings() is then again passed to substitutePropertyExpressions().

Actually I'm not sure if this is a bug or if this is desired behaviour, but it can lead to problems if you throw an Exception when a resource cannot be found and the value that is put into a string is, for whatever reason, in the format ${foobar}.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-10 21:28:36.391,,,no_permission,,,,,,,,,,,204018,,,Fri Dec 10 21:28:36 UTC 2010,,,,,,0|i0kbjz:,116689,,,,,,,,10/Dec/10 21:28;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PageParameters missing from re-created Page,WICKET-5068,12634683,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bht@actrix.gen.nz,bht@actrix.gen.nz,28/Feb/13 21:09,11/Aug/14 11:19,13/Mar/19 23:17,16/Jan/14 10:56,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,1,,,,,,,"WICKET-4594 removes existing PageParameters when re-creating an expired page.

It does this under the assumption that the parameters are not needed for callback behavior that must not be executed after expiry.

However PageParameters are needed even without execution of callback behavior.

In trivial cases, a page cannot be re-constructed successfully without PageParameters e.g. a view page for a customer order needs the order ID from its PageParameters.

There is a bit of an irony about this. To improve the recovery behavior, i.e. to avoid the dreaded PageExpiryException, one needs to create some client state which is then lost on re-creation after expiry.
",All,,,,,,,,,,,,,,WICKET-5539,WICKET-5070,WICKET-5001,,,,,01/Mar/13 19:54;svenmeier;wicket-5068.patch;https://issues.apache.org/jira/secure/attachment/12571639/wicket-5068.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-03-01 19:54:39.464,,,no_permission,,,,,,,,,,,315176,,,Thu Jan 16 10:56:47 UTC 2014,,,,,,0|i1idyf:,315520,,,,,,,,01/Mar/13 19:54;svenmeier;keep original page parameters separate in encoded parameter,"01/Mar/13 19:56;svenmeier;We could keep the original parameter in a special parameter, so PageProvider is able to recreate an expired page with the same parameters, see attached rudimentary patch.","20/Aug/13 09:31;bht@actrix.gen.nz;I am proposing that the very useful concept of the setting org.apache.wicket.settings.IPageSettings#getRecreateMountedPagesAfterExpiry() is extended to a finer grained component level, covering PageParameters.

More specifically, the default on page level should be inherited from the global setting above to be effective. This should be overridable on component level. In the case of a boolean true value, this means that a stateful page, e.g. stateful because of some trivial AJAX behavior like an auto-complete field, can be recreated as required unless the page class overrides this default with false.

Then it gets more interesting:

Descending the component hierarchy below Page level the default for behavior invocation should be false, but each component should be able to choose whether to override this with true, whether it is stateless or not. Components below page level that are target of such parameters would by default not receive them unless they choose to do so.

I am proposing a method name

public boolean canBehaveAfterExpiry()

The return value is NOT propagated down the component hierarchy.

I think that this scheme simplifies things quite a bit. In the most trivial case, it would allow a logout link on a stateful page to execute its behavior. Which is currently prevented even for a stateless link in ListenerInterfaceRequestHandler#respond() because it makes a very expensive effort to search all components in the page to find stateful ones and if it does then it skips execution. This goes as far as invoking any of the page life cycle methods e.g. onBeforeRender() to detect stateful components added to the page late.

The new proposed scheme from my limited perspective seems to be logically clean because it works on component level. Its aim is to preserve both constructor parameters and event listener parameters because for successful execution of an event after expiry all parameters must be available, perhaps in the same way as for a stateless page.

I have had to code some messy page constructors that detect the expiry situation and do not add the AJAX components to the page at all just to get the link behaviors executed by fooling ListenerInterfaceRequestHandler#respond(). With this I want to say that sometimes Wicket tries to protect us from things that we know will never happen - in this case the page does not even need to be rendered.
","14/Jan/14 09:55;mgrigorov;In branch 'sandbox/preserve-page-parameters-and-execute-listener-interface-after-expiration' (Wicket 7) I've added logic to use the request parameters as PageParaemeters for the recreated page.
Additionally a new setting org.apache.wicket.settings.PageSettings#canCallListenerInterfaceAfterExpiry() is introduced to decide whether to call the listener interface methods (e.g. onClick, onSubmit, ...) on a recreated page.

My investigation has shown that the page parameters from the construction of the page are encoded in the links' href, forms' action, so they are available for the reconstruction.
Any extra parameters, for example parameters added dynamically with JavaScript for Ajax requests, will be also passed as page parameters for such reconstructed page. I see no way to filter them out without duplicating the initial page parameters in the url as Sven did in his patch. I also find them useful because the application can read them in Ajax callback methods (e.g. onEvent(AjaxRequestTarget) {allParameters = getRequest().getRequestParameters()}).

Any feedback and additional use cases are welcome!
I will close and link all other tickets that are related to this improvement and link them to this ticket.",15/Jan/14 05:33;bht@actrix.gen.nz;Many thanks. It is fantastic to get this addressed. I like that org.apache.wicket.Component#canCallListenerInterfaceAfterExpiry() overrides PageSettings#setCanCallListenerInterfaceAfterExpiry(),"15/Jan/14 07:33;mgrigorov;Please test all your tickets related to this functionality.
We need more use cases to be sure everything is covered.","15/Jan/14 09:04;svenmeier;#canCallListenerInterfaceAfterExpiry() should be #getCanCallListenerInterfaceAfterExpiry().

Or simpler use #setCallListenerInterfaceAfterExpiry() and #getCallListenerInterfaceAfterExpiry()?","15/Jan/14 09:08;mgrigorov;The other thing that bothers me is that this method is related to Component but I use PageSettings.
I see no better XysSettings class for this.","15/Jan/14 09:12;svenmeier;Well, it's related to the expiry of pages.","15/Jan/14 13:50;mgrigorov;#canCallListenerInterfaceAfterExpiry() is named so to be close to the already existing org.apache.wicket.Component#canCallListenerInterface(Method)
I don't mind to rename it to #getCallListenerInterfaceAfterExpiry(). I just like the current one better. It doesn't follow the Java bean naming conventions but sounds/reads better this way.","16/Jan/14 08:07;svenmeier;All(?) settings follow the JavaBeans naming convention, so this one should too IMHO.","16/Jan/14 10:56;mgrigorov;The setting is renamed as suggested.
The branch is merged to master.",,,,,,,,,,,,,,,,,,,,,,,,,,,
"AjaxFormComponentUpdatingBehavior(""onkeypress"") is triggered when Enter is used on autocomplete list",WICKET-4998,12628664,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,jamesyong,jamesyong,22/Jan/13 07:09,06/Jul/14 12:25,13/Mar/19 23:17,25/Jan/13 19:16,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket-extensions,,,,,,,0,autocomplete,onkeypress,,,,,"Given a text field that uses the following behaviors: 
A. AjaxFormComponentUpdatingBehavior(""onkeypress"")
B. AutoCompleteBehavior 

Say I enter an letter 'U' into the text field, and an auto-suggest list pops up.
When I select an item (e.g. USD) from the auto-suggest list using the Enter keypress, an onkeypress event is fired by behavior A. 

To rectify this problem which didn't happen in wicket 1.4x, I changed the following in wicket-autocomplete.js, 

Wicket.Event.add(obj,""keypress"",function(jqEvent){ 
        if(Wicket.Event.keyCode(jqEvent)===KEY_ENTER){ 
                if(selected>-1||hidingAutocomplete===1){ 
                        hidingAutocomplete=0; 
                        jqEvent.stopImmediatePropagation(); <------changed from jqEvent.stopPropagation(); ",,,,,,,,,,,,,,,WICKET-5609,WICKET-5055,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-25 19:16:46.76,,,no_permission,,,,,,,,,,,307189,,,Fri Jan 25 19:16:46 UTC 2013,,,,,,0|i1ahsv:,269350,,,,,,,,"25/Jan/13 19:16;svenmeier;Please test thoroughly, I had to change a few things to adapt for the new non-inline event handlers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UploadProgressBar does not show up if the form submitted by AjaxButton or AjaxLink,WICKET-4623,12595558,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,sfeher,sfeher,22/Jun/12 09:13,02/Jul/14 17:22,13/Mar/19 23:17,02/Nov/12 21:11,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.3.0,,wicket-extensions,,,,,,,0,Ajax,"UploadProgressBar,",,,,,"If I submit the form normal submit button then the progressbar shows up. If I do it with any ajax component (AjaxLink, AjaxButton ...) then it does not show.
I set up setOutputMarkupPlaceholderTag(true) for progressbar itself and it's parent component (the form) but it has not helped.
","Win 7 64bit, jetty, netbeans 7.1, jdk1.6.0_30",,,,,,,,,,,,,,,,,,,,,16/Oct/12 21:21;svenmeier;WICKET-4623-with-ajax-update.patch;https://issues.apache.org/jira/secure/attachment/12549386/WICKET-4623-with-ajax-update.patch,16/Oct/12 11:57;mgrigorov;WICKET-4623.patch;https://issues.apache.org/jira/secure/attachment/12549294/WICKET-4623.patch,25/Oct/12 20:27;sfeher;test.zip;https://issues.apache.org/jira/secure/attachment/12550854/test.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2012-06-22 17:02:54.049,,,no_permission,,,,,,,,,,,248970,,,Fri Nov 02 21:11:43 UTC 2012,,,,,,0|i0a2uf:,56734,,,,,,,,"22/Jun/12 17:02;svenmeier;I've added a progressBar to example's FileUploadPage (don't forget getApplicationSettings().setUploadProgressUpdatesEnabled(true)) and can confirm the issue.

Problem is that the request for the upload status (UploadStatusResource) is coming in earlier than the actual upload via ajax. Thus no UploadInfo is found in the session and the progressBar assumes the upload to have finished.

A the moment I don't have an idea how to fix this.
","16/Oct/12 11:57;mgrigorov;Here is a ""solution"" that keeps the UploadInfo in the HttpSession until it is read at least once.

The problem is that this way it may leak but it has just 3 'long' fields and one 'boolean'.","16/Oct/12 19:47;svenmeier;Note that MultipartServletWebRequestImpl uses #getUploadInfo() itself. So in rare cases it could mark the uploadInfo as readOnce and remove it from session already before the UploadStatusResource has accessed it. Wouldn't that make the progressbar running forever?

What about making ProgressBar smarter (i.e. let it extend FormComponentPanel) so that it updates itself on ajax form submit? No need then for the UploadStatusResource to signal the end of upload. It could just return ""0|"" when no info avaiable, as you've changed it.",16/Oct/12 21:21;svenmeier;Update progressBar on ART and just let UploadStatusResource running even if no UploadInfo available.,"23/Oct/12 13:15;svenmeier;I've checked in a small fix needed on master for the progressBar to hide again on Ajax upload.

@Sandor
Could you please check whether the problem still persists?
After much tinkering with Ajax upload I don't understand how the actual upload can be delayed to arrive after the first status update, which is fired at least 1 seconds later.
In my tests I was able to reproduces this only if I put a breakpoint in the upload processing, thus preventing storing of UploadInfo in the session before the status update request tried to look it up again.","24/Oct/12 07:25;sfeher;[~svenmeier]

Sure. Give me some time pls.","25/Oct/12 20:26;sfeher;Okay. I made a quickstart cut off my upload form's relevant part and tested it. (I use 1.5.x branch so I could not try it in my project). Now I'm a little bit confused. Progressbar shows up in both cases (even with AjaxLink or Button) but does not show the progress. Moreover if I try to upload a bigger file to see the progress the bar disappears after few seconds.
It might be something wrong with my quickstart I don't know. Attached it. Please check.
",25/Oct/12 20:27;sfeher;Quickstart project for testing WICKET-4623,"26/Oct/12 07:33;svenmeier;You've forgot getApplicationSettings().setUploadProgressUpdatesEnabled(true);
","26/Oct/12 18:08;sfeher;I thought so :(. But I tried it again. Both cases worked fine :). So I'm happy. I would more happy if you could backport this nice feature into 1.5.x branch :).

",02/Nov/12 21:11;svenmeier;I've added the upload progress to the examples in 1.5.x too. Works fine here now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal window does not center correctly when window is scrolled in safari,WICKET-4948,12625349,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,27/Dec/12 18:26,14/Jun/14 11:45,13/Mar/19 23:17,27/Dec/12 18:31,1.5.9,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.5.0,,wicket-extensions,,,,,,,0,,,,,,,in safari window.scrollTop is not taken into account when opening the window so when the window is scrolled the modal opens above the viewport and requires scrolling up to access,,,,,,,,,,,,,,,,,,,WICKET-5616,WICKET-5224,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,301891,,,2012-12-27 18:26:30.0,,,,,,0|i16x8v:,248518,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal panel mouse pointer in resize style for MSIE8 and MSIE9,WICKET-4827,12612830,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,erki,erki,20/Oct/12 12:29,04/Jun/14 08:11,13/Mar/19 23:17,20/Jun/13 10:09,6.0.0,6.1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.9.0,7.0.0-M1,,wicket-extensions,,,,,,,0,IE8,IE9,ModalWindow,mouse,pointer,,"In IE8 and IE9 the mouse pointer has the w-resize or e-resize style when hovering above a panel modal window. 

The wicket example does not have a doctype so Internet Explorer goes into quirks mode. Quirks mode is not an option for us.
http://www.wicket-library.com/wicket-examples-6.0.x/ajax/modal-window


I will attach a quickstart.",,,,,,,,,,,,,,,,,,,,,,12/Dec/12 13:00;bitstorm;WICKET-4827.patch;https://issues.apache.org/jira/secure/attachment/12560558/WICKET-4827.patch,20/Oct/12 12:31;erki;modalExample.zip;https://issues.apache.org/jira/secure/attachment/12550138/modalExample.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-12-12 13:00:19.333,,,no_permission,,,,,,,,,,,250102,,,Wed Jun 04 08:11:12 UTC 2014,,,,,,0|i0apan:,60371,,,,,,,,20/Oct/12 12:31;erki;Quickstart,"12/Dec/12 13:00;bitstorm;Attached a patch that adds ""cursor: default;"" to modal.css","20/Jun/13 10:09;mgrigorov;Thanks, Andrea!","03/Jun/14 14:37;vlastimil.dolejs;I think this fix introduced another bug: when you have link inside a modal window it does not have cursor: pointer on hover, but cursor: default (arrow).
That is not good behavior i think..","04/Jun/14 06:55;mgrigorov;At http://www.wicket-library.com/wicket-examples-6.0.x/ajax/modal-window, open a modal with the first link (Show modal dialog with a page). When I put the mouse over any of the links it becomes a pointer. Looks OK.
How to reproduce your issue ?",04/Jun/14 08:11;vlastimil.dolejs;Sorry - it was my mistake. Everything works correct.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MarkupNotFoundException for Fragment and TransparentWebMarkupContainer,WICKET-4545,12554471,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,forchel,forchel,09/May/12 11:35,27/May/14 07:47,13/Mar/19 23:17,27/May/14 07:47,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.16.0,7.0.0-M2,,wicket,,,,,,,3,,,,,,,"Create a base WebPage with a TransparentWebMarkupContainer to allow subclasses register CSS classes on the body tag. Add a Fragment to one of these subsclasses, the markup of the Fragment is not found. 
See also http://apache-wicket.1842946.n4.nabble.com/MarkupNotFoundException-for-Fragment-and-TransparentWebMarkupContainer-tp4619968.html

Exception thrown:

org.apache.wicket.markup.MarkupNotFoundException: No Markup found for Fragment testFragment in providing markup container [Page class = org.foo.HomePage, id = 0, render count = 1]
at org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy.getMarkup(FragmentMarkupSourcingStrategy.java:143)

",,,,,,,,,,,,,,,WICKET-5580,,,,,,,09/May/12 11:37;forchel;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12526145/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-05-09 15:24:04.4,,,no_permission,,,,,,,,,,,238713,,,Tue May 27 07:47:29 UTC 2014,,,,,,0|i00wqf:,3235,,,,,,,,09/May/12 11:37;forchel;Quickstart attached.,"09/May/12 15:24;mgrigorov;The problem is in org.apache.wicket.markup.Markup#find(String) method which skips the body of the ComponentTag assigned to TransparentWebMarkupContainer.
#find() method looks for the child's markup only at one level depth but it should look one more lever deeper for TWMC. But since Component#onComponentTag() works with a copy of the real ComponentTag I see no way how to mark the ComponentTag as auto or to set it some other flag/userData which to be used when deciding whether to skip the children or not.

Anyone have ideas ?  ","09/May/12 15:37;mgrigorov;Currently org.apache.wicket.Component#internalRenderComponent() gets a mutable ComponentTag from the MarkupStream's current tag and uses it for #onComponentTag(), #onComponentTagBody(), etc.
The problem can be solved if instead a mutable copy of the MarkupStream is created when a Page starts to render and this mutable MarkupStream is used for the rendering of all components in the page. This way TWMC can mark itself as auto component and Markup#find() will look into its children too.","12/Oct/12 11:46;bgooren;In the meantime, this can be fixed by using the TransparentWebMarkupContainer as the markupProvider constructor argument.

Cloning the markup stream or marking the TWMC as an auto component seems overkill or abusing the auto flag, no?
On the other end the wicket internals have become so much cleaner since 1.5 that an ""if (component instanceof IComponentResolver) look_deeper"" is out of the question?",12/Oct/12 12:15;mgrigorov;[~bgooren] Please attach a patch and we will evaluate it.,"09/Jan/13 16:20;mgrigorov;A workaround: 
Add 

protected Fragment createFragment(String id, String markupId) {
   return new Fragment(id, markupId, transparentContainer);
}

method to the base page. It should use the TransparentWebMarkupContainer as markupProvider. This way all children pages will not know that there is TWMC in the hierarchy and Wicket will be still able to lookup the markup for the Fragment.","21/Feb/13 20:43;sbotting;Hi 

I'm having exactly the same problem (MarkupNotFoundException: No Markup found for Fragment etc...) When I add a TransparentWebMarkupContainer at the top of the page heirarchy, 

I'm using Wicket 6.5 

Did anyone have a patch for this in the end?","22/Feb/13 07:39;mgrigorov;Hi Simon,

Please show us some code (preferably in the users@ mailing lists). The workaround that I posted in my comment at 09/Jan/13 18:20 should help you.",27/May/14 07:28;jesselong;I can confirm that the quickstart works in 6.16.0-SNAPSHOT with the patch from WICKET-5580 applied.,"27/May/14 07:34;mgrigorov;Thanks for confirming, Jesse!
I want to add a test case before closing it.
Or maybe your mighty test case from WICKET-5580 covers it ? I need to re-read the description/code here to be able to say.","27/May/14 07:42;jesselong;WICKET-5580 test definitely covers this situation. It does specifically check for the ability to find a fragment inside the subclass' <wicket:extend> when the subclass' <wicket:extend> is surrounded by a component tag.

I dont think we need another test.",27/May/14 07:47;mgrigorov;Fixed with WICKET-5580.,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page mount with an optional named parameter overtakes a mount with more specific path,WICKET-5056,12634090,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,26/Feb/13 09:56,25/Apr/14 07:33,13/Mar/19 23:17,14/Jun/13 13:57,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.9.0,7.0.0-M1,,wicket,,,,,,,0,,,,,,,"See the discussion in http://markmail.org/thread/sgpiku27ah2tmcim

Having:
  mountPage(""/all/sindex"",Page1.class);
  mountPage(""/all/#{exp}"", Page2.class);

Request to /all/sindex will be handled by Page2.

Compatibility score for optional parameters should be lower than mandatory parameters which should be lower than exact value.",,,,,,,,,,,,,,,WICKET-5565,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-06-03 19:00:29.805,,,no_permission,,,,,,,,,,,314583,,,Fri Jun 14 13:57:56 UTC 2013,,,,,,0|i1iaan:,314927,,,,,,,,"03/Jun/13 19:00;cedricgatay;I'm taking this one, which target version should it be built against ? Wicket 7.x or 6.x ?","03/Jun/13 19:50;cedricgatay;Simple implementation is available for code review at the following URL, not doing a Pull Request until someone reviewed this

https://github.com/CedricGatay/wicket/commit/6ac453529095380c4153edd462ff0d66a2cdb563

Thanks","10/Jun/13 07:48;mgrigorov;Thank you, Cedric!
I'll try to review and merge it this week.","14/Jun/13 13:57;mgrigorov;Thank you, Cedric!
You change is applied.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Do not use the parsed PageParameters when re-creating an expired page,WICKET-4594,12559688,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,07/Jun/12 13:04,20/Mar/14 22:31,13/Mar/19 23:17,25/Jul/12 11:36,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"WICKET-4014 and WICKET-4290 provided functionality to re-create an expired page if there is a mount path in the current request's url.
There is a minor problem with that because the page parameters are passed to the freshly created page. I.e. parameters for a callback behavior are now set as page construction parameters.
Since the execution of the behavior is ignored for the recreated page these parameters should be ignored too.",,,,,,,,,,,,,,,,,,,,,,18/Jul/12 00:04;shadowdz;WICKET-4594.patch.diff;https://issues.apache.org/jira/secure/attachment/12536923/WICKET-4594.patch.diff,24/Jul/12 17:09;wk;WICKET-4594_bug.zip;https://issues.apache.org/jira/secure/attachment/12537709/WICKET-4594_bug.zip,21/Jul/12 22:09;shadowdz;example.tar.gz;https://issues.apache.org/jira/secure/attachment/12537468/example.tar.gz,,,,,,3.0,,,,,,,,,,,,,,,,,,,2012-07-18 00:03:42.933,,,no_permission,,,,,,,,,,,257747,,,Wed Jul 25 11:36:19 UTC 2012,,,,,,0|i0k8hb:,116191,,,,,,,,"18/Jul/12 00:03;shadowdz;Hi,

this feature make it impossible to use AJAX calls on stateless pages if the AJAX call uses ExtraParameters for restoring the page state.

For example:

	protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {
		super.updateAjaxAttributes(attributes);
		attributes.getExtraParameters().put(""customerId, customer.getId());
	}

This will produce the correct PageParameters but they will be just ignored by your fix.


Perhaps I have just missed something? 

I have attached a fix which works for me.

Kindest regards,
Daniel",18/Jul/12 00:05;shadowdz;P.S.: The patch will just replace the PageParameters if the page is not stateless,21/Jul/12 08:14;vineetsemwal;@Daniel:you can  retrieve customerid from requestparameters on ajax request in your case,21/Jul/12 20:02;mgrigorov;@Daniel: can you please attach a quickstart that demonstrates the problem ? ,21/Jul/12 22:10;shadowdz;@Martin: I have attached a smale example. The refresh button on second page should work and refresh just the page. But it will miss and redirect to index. ,"22/Jul/12 09:24;vineetsemwal; currently callback url parameters are not passed to new page instance (even in case of stateless) in beta3 though i don't know how this (4594) change did it before it used to in beta2 ..
 however i believe pageparameters are ones which gets used up when page is constructed ,extraparameters or any callback url parameters which are added to callback url are different they are not meant to be passed as pageparameters(even in case of stateless),  they can be retrieved from request parameters on the request in onEvent so say in the quickstart provided,the value associated with key can be retrieved in onEvent by  requestcycle.getRequest().getRequestParameters().getParameterValue(""ye"") and then value can be used for label.
i know this is not the way people currently do with stateless ajax but this appears to me the most correct way.","23/Jul/12 17:54;shadowdz;Ok, I will try the onEvent version. But I have one question about stateless AjaxEventBehaviors. I don't understand why they send a pageId? They are stateless and shouldn't send a padeId? If the pageId is null the parsed PageParameters will reach the page constructer. ","23/Jul/12 22:23;vineetsemwal;i said do it in onEvent because i was working with some example and doing that in onevent :) ,you can retrieve it anywhere on request,it's just a request attribute/parameter..","24/Jul/12 13:02;mgrigorov;1) Wicket do not support stateless pages that use Ajax components/behaviors. If there is an Ajax behavior in the page then it is stateful.

2) Clicking on a link in an expired page will not execute the link's onClick() method, no matter whether the link is Ajax or normal. Wicket detects that the page is expired, creates a new one by using the mount path from the request url and renders a new page instance ignoring the action phase (i.e. wont execute onClick, onSubmit, onXYX(), ...) because Wicket cannot be sure that the component which callback method the user wanted to execute is even available/visible in the initial state of the page.

Please use the mailing lists for further discussions. ","24/Jul/12 17:09;wk;Added WICKET-4594_bug.zip

Example quickstart for my problem. Open with URL http://localhost:8080/?test=test

On a page with a stateless form this change causes an error. The unit test succeeds because MockPageManager does not store pages in the same way as RequestAdapter does (it only stores pages that are really stateful after being rendered, in commitRequest())

Open the quickstart and try submitting the form, the PageParameters will be gone even though they are in the URL submitted.","24/Jul/12 18:00;shadowdz;@Martin:

1) If this is true, why I am able to overwrite Behavior.getStatelessHint(final Component component)? This shouldn't be possible.

2) Clicking a link on a expired page will create a new empty PageParameter and will not create a new page if this page requieres path parameter. This is the problem i came along after updating to beta3!","25/Jul/12 11:36;mgrigorov;An improvement is added with WICKET-4672.
Now stateless pages do not render pageId in the urls and later PageProvider can recognize expired stateful page from stateless page.",,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketAjaxDebug.logError used in Wicket.Head.addJavascript - JS error when wicket-ajax-debug.js not loaded,WICKET-4592,12559515,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,tomdotcom,tomdotcom,06/Jun/12 11:08,12/Feb/14 11:18,13/Mar/19 23:17,15/Jun/12 08:22,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,,,,,,,,0,,,,,,,"Wicket.Head.addJavascript (defined in wicket-ajax.js) encapsulates javascript in this code:

content = 'try{'+content+'}catch(e){WicketAjaxDebug.logError(e);}'; 

However, WicketAjaxDebug can be undefined as it's declared in wicket-ajax-debug.js which might not be included. As a consequence, catch block will fail and obfuscate any error catched.

I believe this catch block should call Wicket.Log.error(e) instead.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-14 15:24:44.307,,,no_permission,,,,,,,,,,,257748,,,Wed Feb 12 11:18:55 UTC 2014,,,,,,0|i0k8hj:,116192,,,,,,,,14/Jun/12 15:24;thomas.goetz;See https://github.com/apache/wicket/pull/15,"15/Jun/12 08:22;mgrigorov;Thank you, Thomas!","12/Feb/14 11:18;githubbot;Github user tgoetz closed the pull request at:

    https://github.com/apache/wicket/pull/15
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using web.xml <error-page> to render error pages via Wicket yields undesired behavior in Wicket 1.5,WICKET-3551,12502211,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mbrictson,mbrictson,23/Mar/11 17:52,23/Jan/14 15:27,13/Mar/19 23:17,27/Mar/11 20:06,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"In my applications I prefer to use Wicket to render all error pages, including my 404 ""not found"" page. This allows me to reuse a shared page template afforded by Wicket to create my error pages (i.e. by extending a BasePage), rather than using copy and paste to maintain static error page HTML files.

I have been doing this as follows:

web.xml:

 <error-page>
   <error-code>404</error-code>
   <location>/error/404</location>
 </error-page>

Now, so long as I have an appropriate bookmarkable page mounted on the ""/error/404"" path, the servlet container will render my page whenever a 404 ""not found"" scenario is encountered.

This works great in Wicket 1.4.x.

However in Wicket 1.5 (RC2 and the latest SNAPSHOT as of this writing), two problems occur:

1. By default, Wicket 1.5 automatically performs a 302 redirect before rendering the error page. This changes the URL from the invalid one (i.e. the one that generated the 404) to the mounted path (/error/404 in this example). This is not the desired behavior for a 404 error page; the original URL requested by the user should be maintained.

2. If I attempt to work around the issue by overriding WebPageRenderer.enableRedirectForStatelessPage() to return false, the problem gets worse. Now the URL doesn't change, which is good. But Wicket gets confused about the depth of the request URL path: it seems to calculate relative URLs based on the mounted path rather than the URL that was requested. This causes all relative resources on the page (e.g. stylesheet references) to be miscalculated and break.

I will attach two quickstarts: one showing this configuration working in 1.4, and another showing the same setup failing as described above in 1.5-RC2.",,,,,,,,,,,,,,,WICKET-4168,,,,,,,23/Mar/11 17:54;mbrictson;WICKET-3551-wicket-1.4.tgz;https://issues.apache.org/jira/secure/attachment/12474421/WICKET-3551-wicket-1.4.tgz,23/Mar/11 17:54;mbrictson;WICKET-3551-wicket-1.5-RC2.tgz;https://issues.apache.org/jira/secure/attachment/12474422/WICKET-3551-wicket-1.5-RC2.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-03-23 20:50:56.503,,,no_permission,,,,,,,,,,,204323,,,Sun Mar 27 10:45:10 UTC 2011,,,,,,0|i0kanz:,116545,,,,,,,,"23/Mar/11 20:50;mgrigorov;With trunk if I request http://localhost:8080/aaaa I still stay on that url and I see as content:

    * Note how the URL has changed to http://localhost:8080/error/404 (via a 302 redirect). This behavior is not desired. A 404 error page should render without changing the URL that was originally requested, as can be seen in this example.
    * If the application is reconfigured by overriding WebPageRenderer.enableRedirectForStatelessPage() to return false, this solves redirect problem. However, it introduces a new, more serious issue: Wicket is now confused about the depth of the URL and miscalculates the relative paths of resources on the page. For example, the stylesheet reference is now incorrect and doesn't load.

I.e. I can't reproduce it here.","23/Mar/11 21:07;mgrigorov;I just tried the following optimization:


--- wicket-core/src/main/java/org/apache/wicket/request/handler/RenderPageRequestHandler.java	(revision 1084741)
+++ wicket-core/src/main/java/org/apache/wicket/request/handler/RenderPageRequestHandler.java	(working copy)
@@ -74,9 +74,22 @@
 	 */
 	public RenderPageRequestHandler(IPageProvider pageProvider)
 	{
-		this(pageProvider, RedirectPolicy.AUTO_REDIRECT);
+		this(pageProvider, computePolicy(pageProvider));
 	}
 
+	private static RedirectPolicy computePolicy(IPageProvider pageProvider2)
+	{
+		if (pageProvider2.isNewPageInstance() == false &&
+			pageProvider2.getPageInstance().isPageStateless())
+		{
+			return RedirectPolicy.NEVER_REDIRECT;
+		}
+		else
+		{
+			return RedirectPolicy.AUTO_REDIRECT;
+		}
+	}
+


but now org.apache.wicket.markup.html.internal.EnclosureTest.testRender10() fails. I have no time to debug what's wrong with it,",23/Mar/11 21:09;mgrigorov;I think I just realize - initially the page is stateless but during render it becomes stateful and bevause of NEVER_REDIRECT we render the wrong markup.,"24/Mar/11 18:38;mbrictson;Some further thoughts on this issue:

1. The automatic redirect policy in Wicket 1.5 in general is a good thing. But it is undesirable in this exceptional case. Is there an easy way to disable it for my error pages only, without writing a custom PageRenderer? Perhaps a flag I could override on the Page itself? (E.g. disable redirect if Page.isErrorPage()==true?)

2. I think there is a subtle bug in how Wicket calculates relative paths that has been uncovered in this exceptional case. My understanding is that when a request yields a 404 error, the servlet container forwards the original request to the path defined in the <error-page> declaration. This forwarded request is handled by Wicket, and the relative paths are calculated by Wicket based on the forwarded path. But the user's browser URL still shows the original path. Wicket needs to be aware that the request was forwarded and unwrap it to get the path of the original request in order to calculate the proper relative paths.

Perhaps serving <error-page> via Wicket is too problematic and should be discouraged? Do you think I going against the grain of the framework by attempting this?","26/Mar/11 07:06;ivaynberg;i believe the framework should support this. the redirect policy has to be smart enough to check if the request is an error request or not, and if it is switch over to never_redirect.

as far as relative paths being calculated correctly, in 1.4 there is a workaround for that that may need to be ported to 1.5. martin, if you have time search the 1.4 codebase for ""javax.servlet.error.request_uri"", i remember writing code that fixed relative paths for error urls there. ServletWebRequest i believe.",27/Mar/11 10:45;mgrigorov;The only problem here is that I cannot reproduce the problem with current trunk ...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autolinking not working as soon as component gets a wicket:id,WICKET-4697,12601506,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,tapter,tapter,05/Aug/12 18:45,16/Jan/14 14:32,13/Mar/19 23:17,16/Jan/14 14:32,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.14.0,7.0.0-M1,,wicket,,,,,,,0,,,,,,,"While migrating from 1.4.X, we encounter a lot of pages having an image with a relative URL set in the HTML, for example <img src=""img/logo.gif""/>.
Now on some pages, those images need to be references, mainly to alter the visibility logic or add an attribute modifier of some kind. Now as soon as we do
<img wicket:id=""logo"" src=""img/logo.gif""/>
and add it using  add(new WebMarkupContainer(""logo"")) , autolinking does not work anymore and the src is left as-is.
Moving all sources to the java files and use ContextImage etc is no real option as this would be a *lot* of work and wouldn't make the html readable anymore as it would become hard to find all references to the images and also isn't logical to have the URL in the java files even though it's static and doesn't change.",,,,,,,,,,,,,,,,,,,,,,13/Aug/12 05:51;tapter;WICKET-4697.zip;https://issues.apache.org/jira/secure/attachment/12540611/WICKET-4697.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-06 09:35:05.552,,,no_permission,,,,,,,,,,,240066,,,Thu Jan 16 14:32:35 UTC 2014,,,,,,0|i00wnz:,3224,,,,,,,,"06/Aug/12 09:35;mgrigorov;Did this work in 1.4.x ?
Autolinking works by creating an auto component. Using wicket:id makes it an explicit (non-auto) component and your component is responsible for managing the element attributes and body.

Can you please create a quickstart for 1.4.x that shows that it worked ?","06/Aug/12 09:45;cmenzel;I can't imagine this worked in 1.4. However, I think this would be a nice feature specifically for <img> tags. No generic autolinking, but the Image component could recognize the src tag and automatically use a PackageResourceReference if the file exists.","06/Aug/12 10:02;mgrigorov;Carl-Eric: the description says it is attached to a WebMarkupContainer, not to an Image.","06/Aug/12 10:07;cmenzel;Yes, but I don't think it would make sense for a WebMarkupContainer to start autolinking based on its attributes. Since you can't add any children to an <img> tag anyway I think it would make perfect sense to use Image instead of WMC here. And then Image could be improved to handle the src attribute.","06/Aug/12 10:33;tapter;Yes, this was working in 1.4 and from a user's point of view I don't see why it should stop working just because I need a reference to that component...
Will see if I find the time to create a quickstart for you in the next days.
Meanwhile, is there any other possibility other than using ContextImage with the URL being in the java code? Can I mark the WebmarkupContainer somehow as an auto-component? I really would prefer having the src in the HTML as for all other images too...","06/Aug/12 13:24;cmenzel;ContextImage won't help you a lot here since that expects the src attribute to be relative to the webapp root, so you'd have to change everything. What you need for now is new Image(""id"", new PackageResourceReference(YourPage.class, ""relative/path.gif"")).

My proposal was that we could possibly automate the creation of the PackageResourceReference.",06/Aug/12 13:29;mgrigorov;It is quite simple to create your own PackageImage that extends from image and uses getMarkupAttributes() to read the value of 'src' and set the resource.,"06/Aug/12 13:33;tapter;Nope, I dont use PackageResources, in fact I really need context-relative image URLs. All our images are placed in ""img/..."" in the context root, so it would be ContextImage then....","06/Aug/12 14:32;cmenzel;@Matthias: Autolinking always works relative to the component you are in. How did you get context-relative URLs like that?

@Martin: That's true. Simple enough, I think, that we could provide one. I may do that later.","06/Aug/12 15:04;tapter;Autolinking also works context-relative, at least this is what we're doing a hundred times by just using  <img src=""img/blah.jpg""/>  anywhere while wicket rewrites it (correctly) to context relative URLs like <img src=""../../img/blah.jpg""/>",06/Aug/12 19:11;mgrigorov;Please provide a quickstart. It seems we use different terminology and I'd like to avoid spending time on a different problem.,13/Aug/12 05:51;tapter;Here's an identical quickstart for both wicket 1.4 (where it works as expected) and for wicket 1.5 where it doesn't; illustrating my problem with resources relative to the *context root*,"29/Aug/12 18:15;bitstorm;I've tried the 2 quickstarts and I  didn't see any difference betwenn Wicket 1.4 and 1.5. They both leave unchanged the src attribute of the component. The problem seems to be related to the different URL generated by the two version of Wicket. Version 1.5 add a segment for the namespace (which is 'wicket' by default) while the URL of version 1.4 points directly to the application's root. 
I've tried to run the example for 1.4 mounting the test page on a path with more than two segment ('foo/bar') and the problem is same as with Wicket 1.5","16/Jan/14 14:03;mgrigorov;The commit that caused the change in the behavior is:

commit 90fdfd0dedf47d2b57c122e9587053e930382221
Author: Juegen Donnerstag <jdonnerstag@apache.org>
Date:   Wed Aug 8 12:41:50 2007 +0000

    Until now we identified internally created wicket id's by a leading ""_"", e.g. _header. Since this convention is a little bit dangerous, I have extended ComponentTag to maintain an 
    
    git-svn-id: https://svn.apache.org/repos/asf/wicket/trunk@563840 13f79535-47bb-0310-9956-ffa450edef68
","16/Jan/14 14:32;mgrigorov;Added a new constructor to ContextImage that has a single parameter - the component id.
The url for the 'src' attribute is read from the markup and relativized to the context root.
So instead of using WebMarkupContainer you should use ContextImage(""someId"").",,,,,,,,,,,,,,,,,,,,,,,,
MountMapper does not support correctly parameter placeholders,WICKET-4686,12600910,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bitstorm,bitstorm,31/Jul/12 21:05,10/Jan/14 12:51,13/Mar/19 23:17,10/Jan/14 12:51,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,,,,,,,,0,,,,,,,"Package mounting doesn't support parameter placeholders. The problem seems to be inside MountMapper which should wrap PackageMapper and take care of substituting placeholders with their actual value. 
More precisely this class doesn't read parameter values from PageParameters and it's not very clear to me how it tries to read these values.
Does anybody have some hints about this class?",,,,,,,,,,,,,,,,,,,,,,31/Jul/12 21:06;bitstorm;MountPagesIssue.zip;https://issues.apache.org/jira/secure/attachment/12538618/MountPagesIssue.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-07 11:15:20.42,,,no_permission,,,,,,,,,,,293352,,,Fri Jan 10 12:51:09 UTC 2014,,,,,,0|i0sxdb:,166883,,,,,,,,"04/Aug/12 17:40;bitstorm;At the moment MountMapper tries to ""unmount"" the URL leaving just the segment with the class name of a page, however its not trivial do identify which segment contains this value if mounted path is composed by optional placeholders.
Unfortunately I haven't find a solution so far.","07/Aug/12 11:15;mgrigorov;I've restructured the code that handles the placeholders from MountedMapper to AbstractBookmarkableMapper and now PackageMapper doesn't need MountMapper to handle your use case.

I don't like that now MountMapper is not used at all. It should be responsible for all of this but it will be too big change - MountedMapper will require to be wrapped in MountMapper.
Check https://git-wip-us.apache.org/repos/asf/wicket/repo?p=wicket.git;a=commitdiff;h=8b4d9de39eedeef10ff1ff0a383606b6b94785bb. It is in a separate branch - sandbox/WICKET-4686.","14/Aug/12 15:04;bitstorm;I've done some refactoring by myself and I ended up with a solution very similar to your. I also don't like to have MountMapper not used by anyone, but I don't have any better solution so far.","10/Jan/14 12:51;mgrigorov;Fixed by moving the parsing of mandatory and optional request parameters from MountedMapper to AbstractBookmarkableMapper.

Since MountMapper was not really finished since its introduction in 1.5.0 it is now removed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page not mounted with WebApplication#mountPackage,WICKET-5043,12632737,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bht@actrix.gen.nz,bht@actrix.gen.nz,17/Feb/13 05:15,09/Jan/14 09:50,13/Mar/19 23:17,09/Jan/14 09:50,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.14.0,7.0.0-M1,,wicket,,,,,,,0,,,,,,,"A bookmarkable page FormPage is mounted via WebApplication#mountPackage().

If this page is opened via IModel model; setResponsePage(new FormPage(IModel model)); then the URL is /wicket/page?0 which is not mounted.

If the page is mounted via WebApplication#mountPage() then the URL is mounted as expected.

If the page is not mounted then the users get PageExpiredException which in this case is unrecoverable.","java 1.7, glassfish-3.1.2.2",,,,,,,,,,,,,,,,,,,,,18/Feb/13 20:22;bht@actrix.gen.nz;AJAX_TestCase.zip;https://issues.apache.org/jira/secure/attachment/12569850/AJAX_TestCase.zip,17/Feb/13 05:16;bht@actrix.gen.nz;testcase.zip;https://issues.apache.org/jira/secure/attachment/12569707/testcase.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2013-06-23 15:59:30.533,,,no_permission,,,,,,,,,,,313233,,,Thu Jan 09 09:50:53 UTC 2014,,,,,,0|i1i1z3:,313579,,,,,,,,17/Feb/13 05:16;bht@actrix.gen.nz;quickstart,18/Feb/13 20:22;bht@actrix.gen.nz;Test case checks that page is recovered when the user clicks on an AjaxFallbackButton,23/Jun/13 15:59;cedricgatay;I'm having a look at this one,"23/Jun/13 16:58;cedricgatay;It seems to be related to org.apache.wicket.core.request.mapper.PackageMapper#pageMustHaveBeenCreatedBookmarkable, if I change the code returning false I got the same url when using PackageMapper or MountedMapper. Otherwise, org.apache.wicket.core.request.mapper.PackageMapperTest#encode5 now fails, and I don't understand its exact mean. Can someone with a correct background help me with this one ?","09/Jan/14 09:50;mgrigorov;Changed PackageMapper#pageMustHaveBeenCreatedBookmarkable() to return false.
The intention/javadoc of this method is not very clear but it says that mappers used explicitly by the application (as MountedMapper and PackageMapper are) should return false.
BookmarkableMapper is used internally by Wicket if there is no explicit mount and it returns true.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Validation and Code Quality Issues with ""Default Constructor"" on Re-creation after Page Expiry",WICKET-5069,12634694,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,bht@actrix.gen.nz,bht@actrix.gen.nz,28/Feb/13 21:49,19/Dec/13 12:03,13/Mar/19 23:17,19/Dec/13 11:58,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"The name ""Default Constructor"" in Java is reserved for the no-argument constructor.

However Wicket has a different idea of what a default constructor is.

Let us consider the folowing case:

No PageParameters exist for a page. Let this page have two constructors, one default constructor and one constructor with a PageParameters parameter.

The page is bookmarkable and mounted.

Let this page be re-created after session expiry so that no stored version of the page exists.

The expected result is that the page is created with its default constructor because no PageParameters exist.

The actual result is that PageProvider#resolvePageInstance() creates bogus PageParameters for the page and calls the constructor with PageParameters parameters.

The impact of this is as follows:

1) Validation issue. A page parameters validating page must assume that if PageParameters exist that these have to be validated. If any parameters that are required for the page to live are missing then the application has to assume that the URL is invalid e.g. tampered with.
2) DRY code quality issue. If Wicket has already established that no PageParameters exist then the application again needs to check for bogus parameters which it would not have to do in the default constructor.
",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-12-19 11:58:10.68,,,no_permission,,,,,,,,,,,315187,,,Thu Dec 19 11:58:10 UTC 2013,,,,,,0|i1ie0v:,315531,,,,,,,,"19/Dec/13 11:58;mgrigorov;It seems this has been fixed with :

commit b3982a4beff352cd5e61521490a397a926c13eed
Author: svenmeier <svenmeier@apache.org>
Date:   Tue Mar 5 09:53:17 2013 +0100

    WICKET-4594 moved pageParameters omission to AbstractBookmarkableMapper

Since this commit a 'null' is used as page parameters when creating the new page, i.e. DefaultPageFactory will use the default constructor if it is available and fallback to the one with PageParameters. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disable strong references in cache,WICKET-4322,12537040,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,splatch,splatch,03/Jan/12 12:22,19/Dec/13 08:44,13/Mar/19 23:17,18/Dec/13 11:39,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,osgi,,,,,,"During work on new Karaf WebConsole I figured multiple problems with resource caching in Wicket. The problem becames really painfull once I try to update some parts of application. After all I am forced to restart container to get updates working. First issue I meet is:

org.apache.wicket.WicketRuntimeException: Parameter clazz must be an instance of org.apache.karaf.webconsole.core.page.LoginPage, but is a org.apache.karaf.webconsole.core.BasePage
     at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:286)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.getBaseMarkup(InheritedMarkupMarkupLoader.java:122)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.checkForMarkupInheritance(InheritedMarkupMarkupLoader.java:94)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.loadMarkup(InheritedMarkupMarkupLoader.java:63)
     at org.apache.wicket.markup.loader.DefaultMarkupLoader.loadMarkup(DefaultMarkupLoader.java:55)
     at org.apache.wicket.markup.MarkupCache.loadMarkup(MarkupCache.java:465)
     at org.apache.wicket.markup.MarkupCache.loadMarkupAndWatchForChanges(MarkupCache.java:561)
     at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:325)
     at org.apache.wicket.markup.MarkupCache.getMarkupStream(MarkupCache.java:216)
     at org.apache.wicket.MarkupContainer.getAssociatedMarkupStream(MarkupContainer.java:371)
     at org.apache.wicket.Page.onRender(Page.java:1587)
     at org.apache.wicket.Component.render(Component.java:2524)
     at org.apache.wicket.Page.renderPage(Page.java:932)
     at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:261)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1260)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1331)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1438)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:546)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:486)
     at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:138)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
     at org.ops4j.pax.wicket.internal.FilterDelegator$Chain.doFilter(FilterDelegator.java:79)
     at org.ops4j.pax.wicket.internal.FilterDelegator.doFilter(FilterDelegator.java:61)
     at org.ops4j.pax.wicket.internal.ServletProxy$ServletInvocationHandler.invoke(ServletProxy.java:72)
     at $Proxy37.service(Unknown Source)
     at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:538)
     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:478)
     at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)
     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:480)
     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:937)
     at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:116)
     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)
     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:871)
     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
     at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:72)
     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
     at org.eclipse.jetty.server.Server.handle(Server.java:346)
     at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)
     at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)
     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601)
     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)
     at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411)
     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535)
     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)
     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)
     at java.lang.Thread.run(Thread.java:680)

Complete stack:

org.apache.wicket.markup.MarkupNotFoundException: Markup of type 'html' for component 'org.apache.karaf.webconsole.core.page.LoginPage' not found. Enable debug messages for org.apache.wicket.util.resource to get a list of all filenames tried:
[Page class = org.apache.karaf.webconsole.core.page.LoginPage, id = 0, version = 0]
     at org.apache.wicket.MarkupContainer.getAssociatedMarkupStream(MarkupContainer.java:390)
     at org.apache.wicket.Page.onRender(Page.java:1587)
     at org.apache.wicket.Component.render(Component.java:2524)
     at org.apache.wicket.Page.renderPage(Page.java:932)
     at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:261)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1260)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1331)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1438)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:546)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:486)


So I decided to clear markup cache after any update in environment to start with empty bag. Then I've got following error:
org.apache.wicket.markup.MarkupNotFoundException: Base markup of inherited markup not found. Component class: org.apache.karaf.webconsole.karaf.features.repository.RepositoriesPage. Enable debug messages for org.apache.wicket.util.resource.locator.ResourceStreamLocator to get a list of all filenames tried.
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.checkForMarkupInheritance(InheritedMarkupMarkupLoader.java:98)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.loadMarkup(InheritedMarkupMarkupLoader.java:63)
     at org.apache.wicket.markup.loader.DefaultMarkupLoader.loadMarkup(DefaultMarkupLoader.java:55)
     at org.apache.wicket.markup.MarkupCache.loadMarkup(MarkupCache.java:465)
     at org.apache.wicket.markup.MarkupCache.loadMarkupAndWatchForChanges(MarkupCache.java:561)
     at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:325)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.getBaseMarkup(InheritedMarkupMarkupLoader.java:122)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.checkForMarkupInheritance(InheritedMarkupMarkupLoader.java:94)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.loadMarkup(InheritedMarkupMarkupLoader.java:63)
     at org.apache.wicket.markup.loader.DefaultMarkupLoader.loadMarkup(DefaultMarkupLoader.java:55)
     at org.apache.wicket.markup.MarkupCache.loadMarkup(MarkupCache.java:465)
     at org.apache.wicket.markup.MarkupCache.loadMarkupAndWatchForChanges(MarkupCache.java:561)
     at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:325)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.getBaseMarkup(InheritedMarkupMarkupLoader.java:122)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.checkForMarkupInheritance(InheritedMarkupMarkupLoader.java:94)
     at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.loadMarkup(InheritedMarkupMarkupLoader.java:63)
     at org.apache.wicket.markup.loader.DefaultMarkupLoader.loadMarkup(DefaultMarkupLoader.java:55)
     at org.apache.wicket.markup.MarkupCache.loadMarkup(MarkupCache.java:465)
     at org.apache.wicket.markup.MarkupCache.loadMarkupAndWatchForChanges(MarkupCache.java:561)
     at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:325)
     at org.apache.wicket.markup.MarkupCache.getMarkupStream(MarkupCache.java:216)
     at org.apache.wicket.MarkupContainer.getAssociatedMarkupStream(MarkupContainer.java:371)
     at org.apache.wicket.Page.onRender(Page.java:1587)
     at org.apache.wicket.Component.render(Component.java:2524)
     at org.apache.wicket.Page.renderPage(Page.java:932)
     at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:261)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1260)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1331)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1438)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:546)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:486)
     at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:138)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
     at org.ops4j.pax.wicket.internal.FilterDelegator$Chain.doFilter(FilterDelegator.java:79)
     at org.ops4j.pax.wicket.internal.FilterDelegator.doFilter(FilterDelegator.java:61)
     at org.ops4j.pax.wicket.internal.ServletProxy$ServletInvocationHandler.invoke(ServletProxy.java:72)
     at $Proxy37.service(Unknown Source)
     at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:538)
     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:478)
     at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)
     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:480)
     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:937)
     at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:116)
     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)
     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:871)
     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
     at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:72)
     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
     at org.eclipse.jetty.server.Server.handle(Server.java:346)
     at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)
     at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)
     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601)
     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)
     at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411)
     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535)
     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)
     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)
     at java.lang.Thread.run(Thread.java:680)

Of course the markup is present in both cases. Works well after restart.","Felix 3.0.9, Karaf 2.2.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-01-07 21:29:50.736,,,no_permission,,,,,,,,,,,222550,,,Thu Dec 19 08:44:13 UTC 2013,,,,,,0|i00wen:,3182,,,,,,,,07/Jan/12 21:29;pete;Can you attach a quickstart please?,"09/Jan/12 13:45;mgrigorov;The problem happens in only OSGi environment (like Apache Karaf), so it is not easy to reproduce.
Karaf's WebConsole uses Wicket 1.4. A quick look at MarkupCache and DefaultMarkupCacheKeyProvider in 6.0 shows that class names (i.e. String) is used as a key, not classes, so either this area is improved (Juergen did some improvements here in 1.5) or the problem is something else (still ClassLoader involved imo).","18/Dec/13 11:39;mgrigorov;Closing as ""Fixed"" in 1.5.x.
If the problem still persist then please add a comment here with steps to reproduce.","19/Dec/13 08:44;splatch;I'll need to verify if pax-wicket have some work around for this. Anyway, webconsole was switch to Wicket 1.5 as well, but now its totally outdated (here I mean webconsole, not wicket). I'm fine with closing this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoComplete text field inside a modal window displays drop-down in the wrong location if the page is scrolled,WICKET-4084,12524595,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,bitstorm,alexgrant,alexgrant,26/Sep/11 03:49,18/Dec/13 19:04,13/Mar/19 23:17,18/Dec/13 19:02,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,"I have a page that contains a ModalWindow. That ModalWindow contains an AutoCompleteTextField.
If the main page has a lot of content, the AutoCompleteTextField only works correctly if the page is scrolled to the top.
You can see this easily by scrolling the page up and down while the ModalWindow is open and the AutoCompleteTextField is showing its dropdown.

I believe what is happening is that the dropdown has an absolute position relative to the Page, rather than relative to the ModalWindow. When you scroll the page down, the dropdown remains in the same position on the page (and hence scrolls off the top), while the ModalWindow stays in the same position on the screen.",,,,,,,,,,,,,,,,,,,,,,26/Sep/11 03:51;alexgrant;WICKET-4084-autocomplete.zip;https://issues.apache.org/jira/secure/attachment/12496435/WICKET-4084-autocomplete.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-24 23:14:19.073,,,no_permission,,,,,,,,,,,3382,,,Wed Dec 18 19:04:10 UTC 2013,,,,,,0|i0sxbj:,166875,,,,,,,,"26/Sep/11 03:51;alexgrant;Attached a quickstart, WICKET-4084-autocomplete.zip.","26/Sep/11 03:54;alexgrant;This does appear to be similar to WICKET-1355, which was closed as Can't Reproduce. But I can reproduce this one consistently (as per the quickstart).","24/Nov/11 23:14;cedricgatay;I can reproduce this too using the Quickstart, I corrected the Quickstart to use Wicket 1.4.19 instead of SNAPSHOT though. It seems wicket-autocomplete.js attach the autocomplete element at the wrong place, I think it should be appended next to the textfield it replaces instead.","18/Dec/13 13:29;mgrigorov;[~bitstorm] Could you please check this ticket too ?
Thanks!",18/Dec/13 19:04;bitstorm;Wow! How many of them :)!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
class cast exception,WICKET-3116,12477681,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dgh1,dgh1,18/Oct/10 23:10,17/Dec/13 19:17,13/Mar/19 23:17,20/Oct/10 06:50,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,,,,,,,,,,0,,,,,,,"Below is the exception I am getting when doing ""setResponse( myPage(some_value)"" in my code.

I downloaded the src and in WicketPortlet.java at line 676::


changed:   (RenderResponse)response).reset();

to:        response.reset();

rebuilt and tested again and this fixed the problem.


I believe this is related to running wicket in the jetspeed portal and conflicts with pluto 2.0 which uses the clean room jars of javax.

The casting is not necessary.


java.lang.ClassCastException: org.apache.pluto.container.impl.ResourceResponseImpl cannot be cast to javax.portlet.RenderResponse
        at org.apache.wicket.protocol.http.portlet.WicketPortlet.processMimeResponseRequest(WicketPortlet.java:676)
        at org.apache.wicket.protocol.http.portlet.WicketPortlet.processRequest(WicketPortlet.java:608)
        at org.apache.wicket.protocol.http.portlet.WicketPortlet.serveResource(WicketPortlet.java:536)
        at sun.reflect.GeneratedMethodAccessor197.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.jetspeed.portlet.PortletObjectProxy.invoke(PortletObjectProxy.java:181)
        at $Proxy91.serveResource(Unknown Source)
        at org.apache.jetspeed.factory.JetspeedPortletInstance.serveResource(JetspeedPortletInstance.java:139)
        at org.apache.jetspeed.container.services.JetspeedFilterChain.doFilter(JetspeedFilterChain.java:157)
        at org.apache.jetspeed.container.services.JetspeedFilterChain.processFilter(JetspeedFilterChain.java:78)
        at org.apache.jetspeed.container.services.JetspeedFilterManager.processFilter(JetspeedFilterManager.java:117)
        at org.apache.jetspeed.container.JetspeedContainerServlet.doGet(JetspeedContainerServlet.java:318)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:630)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)
        at org.apache.jetspeed.container.invoker.ServletPortletInvoker.invoke(ServletPortletInvoker.java:161)
        at org.apache.jetspeed.container.invoker.JetspeedPortletInvokerService.serveResource(JetspeedPortletInvokerService.java:136)
        at org.apache.pluto.container.impl.PortletContainerImpl.doServeResource(PortletContainerImpl.java:203)
        at org.apache.jetspeed.container.JetspeedPortletContainerWrapper.doServeResource(JetspeedPortletContainerWrapper.java:93)
        at org.apache.jetspeed.resource.ResourceValveImpl.invoke(ResourceValveImpl.java:69)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.pipeline.valve.impl.ActionValveImpl.invoke(ActionValveImpl.java:139)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.container.ContainerValve.invoke(ContainerValve.java:88)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.container.PageHistoryValve.invoke(PageHistoryValve.java:108)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.profiler.impl.RefreshUserHomepageValveImpl.invoke(RefreshUserHomepageValveImpl.java:114)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.pipeline.valve.impl.AbstractPageValveImpl.invoke(AbstractPageValveImpl.java:169)
        at org.apache.jetspeed.pipeline.valve.impl.PageProfilerValveImpl.invoke(PageProfilerValveImpl.java:59)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.security.impl.LoginValidationValveImpl.invoke(LoginValidationValveImpl.java:158)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.security.impl.PasswordCredentialValveImpl.invoke(PasswordCredentialValveImpl.java:174)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.localization.impl.LocalizationValveImpl.invoke(LocalizationValveImpl.java:170)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.security.impl.AbstractSecurityValve$1.run(AbstractSecurityValve.java:138)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAsPrivileged(Subject.java:454)
        at org.apache.jetspeed.security.JSSubject.doAsPrivileged(JSSubject.java:179)
        at org.apache.jetspeed.security.impl.AbstractSecurityValve.invoke(AbstractSecurityValve.java:132)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.container.url.impl.PortalURLValveImpl.invoke(PortalURLValveImpl.java:88)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.capabilities.impl.CapabilityValveImpl.invoke(CapabilityValveImpl.java:127)
        at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:242)
        at org.apache.jetspeed.pipeline.JetspeedPipeline.invoke(JetspeedPipeline.java:163)
        at org.apache.jetspeed.engine.JetspeedEngine.service(JetspeedEngine.java:225)
        at org.apache.jetspeed.engine.JetspeedServlet.invoke(JetspeedServlet.java:300)
        at org.apache.jetspeed.engine.JetspeedServlet.service(JetspeedServlet.java:318)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.jetspeed.engine.servlet.XXSUrlAttackFilter.doFilter(XXSUrlAttackFilter.java:52)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:433)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
        at java.lang.Thread.run(Thread.java:619) 
",running on windows,21600,21600,,0%,21600,21600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-21 00:20:35.122,,,no_permission,,,,,,,,,,,203939,,,Thu Oct 21 00:20:35 UTC 2010,,,,,,0|i0kbrj:,116723,,,,,,,,"21/Oct/10 00:20;hudson;Integrated in Apache Wicket 1.4.x #219 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/219/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassNotFoundException with Atmosphere on Bookmarkable pages,WICKET-5084,12635905,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,meo,meo,07/Mar/13 22:19,26/Nov/13 08:19,13/Mar/19 23:17,26/Nov/13 08:19,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.13.0,7.0.0-M1,,wicket,wicket-atmosphere,,,,,,1,,,,,,,"https://github.com/krasa/wicket-atmosphere-quickstart

run, go to second page, click on link.

from some reason, it makes requests to 

http://localhost:8080/wicket/bookmarkable/resource/org.apache.wicket.resource.JQueryResourceReference/jquery/jquery-ver-1362607904693.js  
instead of: http://localhost:8080/wicket/resource/org.apache.wicket.resource.JQueryResourceReference/jquery/jquery-ver-1362607904693.js   
 =>java.lang.ClassNotFoundException: page

I noticed few things:
1) Form cannot be updated, crashes on NPE
2) ugly crash when updated component has not setOutputMarkupId(true);
3) otherwise it seems to work",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-03-08 07:56:45.144,,,no_permission,,,,,,,,,,,316397,,,Tue Nov 26 08:19:32 UTC 2013,,,,,,0|i1ilhb:,316740,,,,,,,,"08/Mar/13 07:56;papegaaij;The problem is that components are rendered in the context of the websocket connection, which always is to a page instance (like wicket/page?5). This is because the AtmosphereBehavior is stateful. Now, if the page is at wicket/bookmarkable/my.Page, urls will be rendered relative to wicket/page?5, which obviously is wrong. Component.urlFor uses BookmarkableListenerInterfaceRequestHandler only if the page is stateless, which is never the case for Atmosphere. Unfortunately, I don't know if there's any way to fix this.

The NPE in form rendering is caused by Atmosphere returning null from encodeURL. I'll open a ticket for that, because that seems wrong to me.","08/Mar/13 08:38;papegaaij;I've opened a ticket in the Atmosphere bugtracker
https://github.com/Atmosphere/atmosphere/issues/949","08/Mar/13 16:59;0xabadea;I have just been hit by another manifestation of this: when a BookmarkablePageLink is rendered for a broadcast, the URL looks like ./bookmarkable/com.example.Page. The browser processes this in the context of the URL in the location bar, which is .../wicket/bookmarkable/com.example.Page, so clicking the link results in a CNFE.

The link uses Component.urlFor(Class<C>, PageParameters), which does not try to use BookmarkableListenerInterfaceRequestHandler.
","09/Mar/13 16:11;meo;Thanks, as a workaround I use older version, mounted the page to defined path and do not update Forms directly. ",11/Mar/13 14:42;0xabadea;Would it be a stupid idea for the broadcast rendering to set up an AtmosphereWebRequest whose clientUrl is the clientUrl of the page as it looked like when EventBus.register() was called?,"05/Apr/13 18:19;ceefour;atmosphere issue #1002 in github: https://issues.apache.org/jira/browse/WICKET-5084
since it occurs on atmosphere 1.0.10, 1.0.11, and 1.0.12","25/Sep/13 13:26;meo;proper link: https://github.com/Atmosphere/atmosphere/issues/1002

I am not sure about previous problems, but when I try to render bookmarkable link to some page which is not mounted, and I am on the same page(or maybe other bookmarkable not mounted page), then the link will point to /wicket/bookmarkable/bookmarkable/com.example.Page
- wicket-atmosphere-0.13","26/Nov/13 08:19;papegaaij;Both issues (Atmosphere 1002 and WICKET-4997) have been fixed. Therefore, I'm closing this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractNumberConverter issue when used with NumberFormat#getCurrencyInstance,WICKET-4988,12628104,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,sebfz1,sebfz1,17/Jan/13 20:17,07/Nov/13 12:28,13/Mar/19 23:17,07/Nov/13 12:28,1.5.9,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,0,,,,,,,"Summary of the discussion on users@:

There is an issue when using AbstractNumberConverter when #getNumberFormat returns NumberFormat#getCurrencyInstance()
I think the problem is due to AbstractNumberConverter#parse(Object, double, double, Locale):

if (value instanceof String)
{
        // Convert spaces to no-break space (U+00A0) to fix problems with
        // browser conversions.
        // Space is not valid thousands-separator, but no-br space is.
        value = ((String)value).replace(' ', '\u00A0');
}

Which replace spaces, so a string like ""1,5 €"" is invalid while being parsed.

public class CurrencyConverter extends AbstractNumberConverter<Double>
{
    private static final long serialVersionUID = 1L;

    public CurrencyConverter()
    {
    }

    @Override
    protected Class<Double> getTargetType()
    {
        return Double.class;
    }

    @Override
    public NumberFormat getNumberFormat(Locale locale)
    {
        return NumberFormat.getCurrencyInstance(locale);
    }

    @Override
    public Double convertToObject(String value, Locale locale)
    {
        locale = Locale.FRANCE;

        return this.parse(value, Double.MIN_VALUE, Double.MAX_VALUE, locale);

//        This does work:
//        final NumberFormat format = this.getNumberFormat(locale);
//        return this.parse(format, value, locale);
    }
}

As Sven indicates, there is (yet another) issue in Java currency formating (space as thousand separator)
http://matthiaswessendorf.wordpress.com/2007/12/03/javas-numberformat-bug/
http://bugs.sun.com/view_bug.do?bug_id=4510618

So will I let you decide whether or not you wish to fix it (the space before the currency symbol).

Thanks & best regards,
Sebastien.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-11-07 12:28:51.222,,,no_permission,,,,,,,,,,,304955,,,Thu Nov 07 12:28:51 UTC 2013,,,,,,0|i17x3r:,254333,,,,,,,,"07/Nov/13 12:28;svenmeier;replace space with non-breaking space between digits only
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxPagingNavigationLink and AjaxPagingNavigationIncrementLink output inline onclick attributes in addition to Wicket.Ajax.ajax event registration,WICKET-4862,12615586,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,barrettas,barrettas,10/Nov/12 04:34,01/Oct/13 11:47,13/Mar/19 23:17,01/Oct/13 11:47,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.12.0,7.0.0-M1,,wicket,,,,,,,1,ajax,inline,javascript,,,,The AjaxPagingNavigation links are outputting inline onclick attributes in addition to being registered via Wicket.Ajax.ajax calls when used with certain tags like span. These are Ajax components so therefore should no longer have inline onclick handlers.,Not env specific,,,,,,,,,,,,,,,,,,,,,29/Nov/12 14:56;mgrigorov;WICKET-4862.patch;https://issues.apache.org/jira/secure/attachment/12555354/WICKET-4862.patch,15/Nov/12 18:35;barrettas;awqs.zip;https://issues.apache.org/jira/secure/attachment/12553677/awqs.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-11-13 13:11:40.508,,,no_permission,,,,,,,,,,,256879,,,Tue Oct 01 11:47:52 UTC 2013,,,,,,0|i0iyd3:,108661,,,,,,,,13/Nov/12 13:11;mgrigorov;Please provide a quickstart demonstrating the problem.,"15/Nov/12 18:35;barrettas;Here is the quickstart. The key to reproducing is using tags other than anchor tags for the navigation links, in this case spans. Just view the source of the page and you'll see the nav links get AJAX behavior click registration in addition to inline onclick handlers. Clicking the paging nav fires 2 requests, one for the AJAX behavior and 1 for the inline onclick.",16/Nov/12 08:21;mgrigorov;Thanks for the quickstart!,"29/Nov/12 14:56;mgrigorov;@Wicket devs: is this solution too ugly for this problem ?

The *Ajax* navigation links extend from Link (instead from AjaxLink due to limitations in Java language) and this causes the logic in org.apache.wicket.markup.html.link.Link#onComponentTag() around line 403 to trigger.
With the suggested hack this is avoided.","01/Oct/13 11:05;dries.schulten;Seeing the same issue using Wicket 6.10.0, we use 'em' tags for our paging. Wicket renders an onclick attribute on the 'em' tag because the AjaxPagingNavigationLink extends from Link which in onComponentTag renders a onclick if the tag is not a 'a' tag. Because the Ajax paging links use a AjaxPagingNavigationBehavior that renders a JavaScript click event the original click is not needed (only for non ajax fallback?). Our current workaround is to remove the generated onclick handler in the onComponentTag of AjaxPagingNavigtionLink but I think it stops ajax fallback from working (our whole application is ajax based so no issue for us).

{code:java}
protected void onComponentTag(ComponentTag tag) {
	super.onComponentTag(tag);
	tag.remove(""onclick"");
}
{code}",01/Oct/13 11:47;mgrigorov;[~dries.schulten] Your approach looks good to me. Applied!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DateField and a DateTimeField in the onUpdate method for an AjaxFormComponentUpdatingBehavior , the model is never updated",WICKET-4496,12550804,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,dpmihai,dpmihai,13/Apr/12 09:07,17/Sep/13 09:38,13/Mar/19 23:17,17/Sep/13 09:38,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket-datetime,,,,,,,0,,,,,,,"For a DateField and a DateTimeField in the onUpdate method for an AjaxFormComponentUpdatingBehavior , the model is never updated, it rests with the initial date selection.",Windows Vista,,,,,,,,,,,,,,,,,,,,,13/Apr/12 09:08;dpmihai;datefield.zip;https://issues.apache.org/jira/secure/attachment/12522544/datefield.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-04-17 14:13:55.455,,,no_permission,,,,,,,,,,,235668,,,Tue Sep 17 09:38:51 UTC 2013,,,,,,0|i0sxc7:,166878,,,,,,,,13/Apr/12 09:08;dpmihai;A quick start which shows the issue,"17/Apr/12 14:13;mgrigorov;DateField is a complex/composite component that uses underneath few other components (for Data, for minutes, for hours, for am/pm).
You add the AjaxFormComponentUpdatingBehavior to subcomponent that is responsible for the 'Date' part and it updates properly its model.
Just replace with:

System.out.println(""*** date="" + getComponent().getDefaultModelObject());

and it will work as you expect. ","18/Apr/12 06:57;dpmihai;I added AjaxFormComponentUpdatingBehavior to subcomponents because if we add it to DateField directly the onUpdate method is never called.
DateField and especially DateTimeField need a way to update a date model. I do not know how to do it. If I can only take parts of date (like minutes , hours) then it seems I have to create my date object by myself anytime i modify a subcomponent. ",18/Apr/12 09:53;mgrigorov;Reopen to see how this can be improved.,"23/Apr/12 12:56;mgrigorov;Another solution is to call:

txtDate.processInput();

just before the System.out.println() call but since the Ajax behavior is instantiated in your code I don't see how Wicket can help by inserting this code snippet in the right place.",17/Sep/13 09:38;svenmeier;javadoc now explains how to use AjaxFormComponentUpdatingBehavior,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceStreamResource should use #getResourceStream() instead of directly using the 'stream' field,WICKET-4632,12596254,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,28/Jun/12 12:41,14/Sep/13 04:28,13/Mar/19 23:17,28/Jun/12 12:49,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket,,,,,,,0,,,,,,,org.apache.wicket.request.resource.ResourceStreamResource#newResourceResponse() resolves the IResourceStream by using #internalGetResourceStream() but later still uses the 'stream' member field.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257738,,,2012-06-28 12:41:35.0,,,,,,0|i0k8fb:,116182,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using CryptoMapper causes page to render twice,WICKET-4995,12628531,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,seco,seco,21/Jan/13 10:44,09/Aug/13 11:14,13/Mar/19 23:17,28/Feb/13 12:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,,,,,,,,0,,,,,,,"Using Wicket 1.5.9 and CryptoMapper causes our Wicket pages to be rendered twice. I was investigating a problem where a DAO query was executed two times when navigating to a single page.

In debug call stack I found out that first render is made at  WebPageRenderer.respond(RequestCycle) line: 246	
and second at WebPageRenderer.respond(RequestCycle) line: 263	

Removing CryptoMapper from our app configuration fixes the problem.

It is also possible we are doing something wrong so any help is appreciated.",,,,,,,,,,,,,,,,,,,WICKET-5309,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-24 18:35:56.1,,,no_permission,,,,,,,,,,,306615,,,Fri Aug 09 11:14:18 UTC 2013,,,,,,0|i19x07:,265981,,,,,,,,"24/Jan/13 18:35;svenmeier;The culprit lies in WebPageRenderer#257:

	if (targetUrl.getSegments().equals(targetUrl2.getSegments()) == false)
	{
		// the amount of segments is different - generated relative URLs will not work, we
		// need to rerender the page. This shouldn't happen, but in theory it can - with
		// RequestHandlerEncoders that produce different URLs with different amount of
		// segments for stateless and stateful pages
		response = renderPage(targetUrl2, requestCycle);
	}

With CryptoMapper the page id is included in the segments, the following urls:

wicket/bookmarkable/org.apache.wicket.examples.compref.LinkPage
wicket/bookmarkable/org.apache.wicket.examples.compref.LinkPage?0

... produce different encrypted segments:

/L7ExSNbPC4sb6TPJDblCAopL53TWmZP5y7BQEaJSJABliOBEOWyBWvlruzSupJSCrybkqQ-xa2Ib_nrhWXToPw/L7E59/JDb97/SJA39
/L7ExSNbPC4sb6TPJDblCAopL53TWmZP5y7BQEaJSJABliOBEOWyBWvlruzSupJSCrybkqQ-xa2J5M_AzHZAUgh-GKNtYnL4t/L7E59/TPJfd/YnLa6","24/Jan/13 20:07;svenmeier;Is there a reason why we render the page with the initial targetUrl first, just to initiate another render when targetUrl2 doesn't match after rendering?

Why not create the page first and then render with the final url right away?

diff --git a/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java b/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java
index 8c94d1f..7208f50 100644
--- a/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java
+++ b/wicket-core/src/main/java/org/apache/wicket/request/handler/render/WebPageRenderer.java
@@ -242,25 +242,17 @@
 						""matched. Details: "" + details);
 			}
 
+			// force creation of possible stateful page to get the final target url
+			getPage();
+
+			Url targetUrl2 = requestCycle.mapUrlFor(getRenderPageRequestHandler());
+
 			// redirect to buffer
-			BufferedWebResponse response = renderPage(targetUrl, requestCycle);
+			BufferedWebResponse response = renderPage(targetUrl2, requestCycle);
 
 			if (response == null)
 			{
 				return;
-			}
-
-			// check if the url hasn't changed after page has been rendered
-			// (i.e. the stateless flag might have changed which could result in different page url)
-			Url targetUrl2 = requestCycle.mapUrlFor(getRenderPageRequestHandler());
-
-			if (targetUrl.getSegments().equals(targetUrl2.getSegments()) == false)
-			{
-				// the amount of segments is different - generated relative URLs will not work, we
-				// need to rerender the page. This shouldn't happen, but in theory it can - with
-				// RequestHandlerEncoders that produce different URLs with different amount of
-				// segments for stateless and stateful pages
-				response = renderPage(targetUrl2, requestCycle);
 			}
 
 			if (currentUrl.equals(targetUrl2))


This would solve the double-rendering for CryptoMapper, but I'm not sure if this has any negative side effects.",22/Feb/13 09:12;mgrigorov;@Sven: please commit your suggestion so we can test it before 6.7.0 is released.,28/Feb/13 12:36;mgrigorov;The improvement is committed by Sven and so far there are no problems,"09/Aug/13 11:14;svenmeier;WICKET-5309 showed that the url of a page can indeed change after being rendered, when stateful components are added to an otherwise stateless page during rendering (e.g. by repeaters).

Since CryptoMapper changes a url's segments for stateful pages, the page will be re-rendered. To prevent this, call #setStatelessHint(false) on your page.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integer overflow in AbstractToolbar,WICKET-4859,12615182,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,count.negative,count.negative,07/Nov/12 16:19,06/Aug/13 09:58,13/Mar/19 23:17,08/Nov/12 08:50,1.5.9,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.3.0,,wicket-extensions,,,,,,,0,,,,,,,"private static int counter = 0;

This counter will overflow anytime... Please remove static.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-08 08:50:40.569,,,no_permission,,,,,,,,,,,255778,,,Thu Nov 08 13:47:38 UTC 2012,,,,,,0|i0futb:,90590,,,,,,,,"08/Nov/12 08:50;svenmeier;The counter has to be static since it is used to assure unique component ids among all AbstractToolbar instances. I've changed the static field to long, similar to RepeatingView.","08/Nov/12 10:12;count.negative;Sorry, I didn't get that. In RepeatingView the long childIdCounter isn't static. What about long running systems?","08/Nov/12 12:06;svenmeier;Well, for RepeatingView the ids have to be unique for all components inside the repeater only.
The toolbars needs globally unique ids because it's not sure in which dataTable the toolbar is going to be put in.

Regarding long running systems:
Actually you'd have to create a lot of toolbars *and* put them in a single dataTable to run into duplicate ids. Apart from that there's no problem if the counter overflows - you'll just get negative ids.","08/Nov/12 13:47;count.negative;ok, now I see. Thanks Sven!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
404 Error on Nested ModalWindows in IE7 and IE8,WICKET-5071,12634855,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jeredm@maplewoodsoftware.com,jeredm@maplewoodsoftware.com,01/Mar/13 17:05,12/Jul/13 11:08,13/Mar/19 23:17,17/Jun/13 08:42,1.5.8,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.9.0,7.0.0-M1,,wicket-extensions,,,,,,,0,,,,,,,"When opening a ModalWindow inside a ModalWindow, the inner ModalWindow generates a 404 error.  Both windows use a PageCreator for content.

To replicate, you must use an actual IE 7 or IE 8 browser, as this does not replicate using developer tools and setting the document and brower to IE 7.

The problem can be seen at http://www.wicket-library.com/wicket-examples/ajax/modal-window.  I will attach a Quickstart as well.","Internet Explorer 8.0.7601.17514
Internet Explorer 7.0.5730.13
Jetty 7 (multiple versions replicate the problem)
Tomcat 6",,,,,,,,,,,,,,,,,,WICKET-5272,SYNCOPE-370,,01/Mar/13 17:06;jeredm@maplewoodsoftware.com;NestedModals.zip;https://issues.apache.org/jira/secure/attachment/12571608/NestedModals.zip,11/Mar/13 23:08;dajre;fix-WICKET-5071.patch;https://issues.apache.org/jira/secure/attachment/12573205/fix-WICKET-5071.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2013-03-08 20:43:22.915,,,no_permission,,,,,,,,,,,315348,,,Tue Jul 02 09:34:32 UTC 2013,,,,,,0|i1if0n:,315692,,,,,,,,"01/Mar/13 17:34;jeredm@maplewoodsoftware.com;Below are some of my observations during testing.  I compared my Chrome browser which has no problem to the IE 7 and IE 8 browsers with problems.

*modal.js*
When the modal window opens it hits the load function in modal.js.  This function redirects to the content page at this line of code:

if(Wicket.Browser.isIELessThan9()){
    this.content.contentWindow.location.replace(this.settings.ie8_src);
}else{
    this.content.contentWindow.location.replace(this.settings.src);
} 


The value that is set in settings.ie8_src and settings.src is the same between my Chrome browser and my IE 7 and 8 browsers.  The outer modal is  ""./wicket/bookmarkable/com.qs.NestedModals.OuterModalContent"" and the inner modal is ""./com.qs.NestedModals.InnerModalContent"".  Once the request hits the Jetty server on Chrome for the inner modal the _serveletPath is ""/wicket/bookmarkable/com.qs.NestedModals.InnerModalContent"" in IE when I see the error it is ""/com.qs.NestedModals.InnerModalContent""....so window.loaction.replace(""./com.qs.NestedModals.InnerModalContent"") correctly changes to ""/wicket/bookmarkable/com.qs.NestedModals.InnerModalContent"" in Chrome, but not in IE.

*ModalWindow.java*
In org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow#getWindowOpenJavaScript(), there is code to set the ""settings.ie8_src"" attribute which modal.js uses.  The page is stateless, so the first path is followed.  Here is that code:

if (page.isPageStateless())
{
    pageUrl = requestCycle.urlFor(page.getClass(), page.getPageParameters());
    appendAssignment(buffer, ""settings.ie8_src"", pageUrl);
}
else
{
    IRequestHandler handler = new RenderPageRequestHandler(new PageProvider(page));

    pageUrl = requestCycle.urlFor(handler);
    String ie8_pageUrl = requestCycle.getUrlRenderer().renderRelativeUrl(requestCycle.mapUrlFor(handler));
    appendAssignment(buffer, ""settings.ie8_src"", ie8_pageUrl);
}

  appendAssignment(buffer, ""settings.src"", pageUrl);



I attempted to call setStateLessHint(false) in my content pages to see if the different URL in the bottom path would get around the problem, but that didn't resolve the problem.  Also, the bottom path had the same value for both pageUrl and ie8_pageUrl.

*Other*
The problem, in the end, is that there are no mappers that can find the page.  As an experiment, I setup the inner content page as a mounted page.  This solved my problem in the Quickstart, but didn't fix the problem I have in my main application (I was hopping to just mount the few pages I needed to nest as a work around).",04/Mar/13 16:39;jeredm@maplewoodsoftware.com;This bug is not replicating in Wicket 1.4.21,08/Mar/13 20:43;dajre;In IE7 and 8 when the inner modal url/src is hardcoded to /wicket/bookmarkable/com.qs.NestedModals.InnerModalContent instead of the generated ./com.qs.NestedModals.InnerModalContent as the value passed to this.content.contentWindow.location.replace() the problem is avoided.,08/Mar/13 21:01;mgrigorov;Usually the url for the page in the inner modal is calculated against the page in the outer modal because they are in iframes. But it seems IE7/8 calculates the relative url in the inner against the url of the tab/window.,09/Mar/13 00:11;dajre;I can test a patch for this in both IE7 and IE8 when one is attempted. I'm trying to look into it more to get more information or how the mappers work. Currently I am not sure how to patch this.,"11/Mar/13 21:27;dajre;It appears that the request cycle ends up rendering the url by the call to renderUrl(Url url, IRequestHandler handler).

This method has a line String renderedUrl = getUrlRenderer().renderUrl(url);

The UrlRenderers renderUrlMethod then calls renderRelativeUrl(url).

This method has a line List<String> baseUrlSegments = getBaseUrl().getSegments()

The returned values between the outer and inner modal are different. The outer modal returns nothing [] while the inner modal returns [wicket, bookmarkable, com.qs.NestedModals.OuterModalContent]. I think this is what Martin was saying when the inner modal is calculated against the outer modal page. The segments in baseUrlSegments then get removed from the calculated url which strips the leading wicket/bookmarkable.","11/Mar/13 22:17;dajre;When I made the following changes to ModalWindow the problem does not occur in ie_7 or ie_8. This seems pretty hackish to me but it seems to work. Basically I am just forcing the ie_8 url to be determined relative to the tab and not the outer modal.

protected final String getWindowOpenJavaScript()
{
.....
if (isCustomComponent() == false)
{
	Page page = createPage();
	if (page == null)
	{
		throw new WicketRuntimeException(""Error creating page for modal dialog."");
	}
	CharSequence pageUrl, ie8_pageUrl = null;
	RequestCycle requestCycle = RequestCycle.get();

	Url original = requestCycle.getUrlRenderer().getBaseUrl();

	if (page.isPageStateless())
	{
		pageUrl = requestCycle.urlFor(page.getClass(), page.getPageParameters());

		// For ie_7 and ie_8 we want to evaluate the url from the tab and not the page. So I'm setting the BaseUrl to a new Url to
		// force this to happen and reverting it back after the url has been generated for ie_7 and ie_8.
		requestCycle.getUrlRenderer().setBaseUrl(new Url());
		ie8_pageUrl = requestCycle.urlFor(page.getClass(), page.getPageParameters());
		requestCycle.getUrlRenderer().setBaseUrl(original);

		appendAssignment(buffer, ""settings.ie8_src"", ie8_pageUrl);
	}
	else
	{
		IRequestHandler handler = new RenderPageRequestHandler(new PageProvider(page));
		pageUrl = requestCycle.urlFor(handler);

		// For ie_7 and ie_8 we want to evaluate the url from the tab and not the page. So I'm setting the BaseUrl to a new Url to
		// force this to happen and reverting it back after the url has been generated for ie_7 and ie_8.
		requestCycle.getUrlRenderer().setBaseUrl(new Url());
		ie8_pageUrl = requestCycle.getUrlRenderer().renderRelativeUrl(requestCycle.mapUrlFor(handler));
		requestCycle.getUrlRenderer().setBaseUrl(original);

		appendAssignment(buffer, ""settings.ie8_src"", ie8_pageUrl);
	}

	appendAssignment(buffer, ""settings.src"", pageUrl);
}
}","11/Mar/13 22:35;mgrigorov;Please attach the change in diff/patch format to the ticket so it is easier to see where is the difference.
Thanks!",11/Mar/13 23:08;dajre;Attached the diff/patch file.,"17/Apr/13 07:51;shiva0212;Kindly let me know the wicket version, in which this issue has been fixed....Am using 6.6.0  its responding 404 error in ie7 and ie8","17/Apr/13 07:54;mgrigorov;Look the ticket status - Unresolved. 
Fix Version - None.

The ticket is still open.","17/Apr/13 07:56;mgrigorov;I just assigned ""Fix Version"" to 6.8.0 so we do not forget to review (and apply) the provided patch. ",17/Apr/13 09:02;shiva0212;as per your previous comments i've used my own custommodalwindow which extends panel and in that class i replaced the if condition in getWindowOpenJavaScript method with your 'if' condition code but still am not able to fix that issue...............any clues for fixing this issue temporarily.,"17/Apr/13 09:05;mgrigorov;Give us more details of your setup. 
With which browser(s) you experience this problem ?

I'd recommend you to checkout Wicket from its Git repo and apply the suggested patch and build Wicket locally.","17/Apr/13 09:12;shiva0212;am using wicket version 6.5.0,in chrome am not getting any issue only in ie7 and ie8 am getting this issue..i need to fix this because am using 2 or 3 nested modal windows in my project....in our pom we are adding wicket-extensions-6.5.0.jar we dont access to modalwindow.java to modify.....","17/Apr/13 10:10;shiva0212;I put a break point in CompoundRequestMapper at line 149 (the mapRequest 
function).  Here are the results of request.getURL.toString(): 
IE7: 
- wicket/page?8 (first ModalWindow) 
- page?9 (nested ModalWindow) 

Chrome, IE9 (browser IE7, document IE7): 
- wicket/page?8 (first ModalWindow) 
- wicket/page?9 (nested ModalWindow) 
",24/Apr/13 14:38;shiva0212;Am glad if u mention when wicket 6.8.0 is going to be released.I am highly depend on this new version which going to resolve  lot of bugs in my code.,"13/May/13 14:06;mgrigorov;I've pushed an improvement which I believe should solve this problem:
https://git-wip-us.apache.org/repos/asf/wicket/repo?p=wicket.git;a=commitdiff;h=a2f848f250401fdcb5a0687a72ff856bdd196df8

The idea is that the request mapper that cares about requests to 'wicket/page' to match when the request url is 'page?...' and the base url is 'wicket/page'.

Please try it and report back. I cannot reproduce the issue with my IE installation. Thanks!","13/May/13 18:04;jeredm@maplewoodsoftware.com;[~martin-g],
The fix did not pass testing in IE7 using the NestedModals Quickstart.  I still get a 404 error when opening the inner modal.  I used the 6.8.0-SNAPSHOT which appeared to have your changes.  The other patch submitted works.  I will work on getting more information.","13/May/13 18:21;jeredm@maplewoodsoftware.com;Here some of the logs from one browser that passes and one that fails.  Observe the first ServletHandler line.  The passing test has ""/wicket"" before ""/bookmarkable"".

Mozilla Firefox for Ubuntu 20.0: Passes testing
DEBUG - session                    - 
session=org.eclipse.jetty.server.session.HashedSession:seng756mxz3m6zc61wrzlxq@1486404598
DEBUG - ServletHandler             - servlet |/wicket/bookmarkable/com.qs.NestedModals.InnerModalContent|null -> default
DEBUG - ServletHandler             - chain=wicket.NestedModals->default
DEBUG - ServletHandler             - call filter wicket.NestedModals
DEBUG - WebAppClassLoader          - loaded class com.qs.NestedModals.InnerModalContent from sun.misc.Launcher$AppClassLoader@12360be0


IE 7: Failes testing
DEBUG - session                    - session=org.eclipse.jetty.server.session.HashedSession:uidhztsp9xah1dqkp6b7qm7h8@1320687469
DEBUG - ServletHandler             - servlet |/bookmarkable/com.qs.NestedModals.InnerModalContent|null -> default
DEBUG - ServletHandler             - chain=wicket.NestedModals->default
DEBUG - ServletHandler             - call filter wicket.NestedModals
DEBUG - ServletHandler             - call servlet default
DEBUG - DefaultServlet             - Resource /bookmarkable/com.qs.NestedModals.InnerModalContent.gz=null
DEBUG - DefaultServlet             - Resource /bookmarkable/com.qs.NestedModals.InnerModalContent=null
DEBUG - DefaultServlet             - uri=/bookmarkable/com.qs.NestedModals.InnerModalContent resource=null
DEBUG - Server                     - RESPONSE /bookmarkable/com.qs.NestedModals.InnerModalContent  404","13/May/13 19:59;mgrigorov;I was under impression that the urls were like 'wicket/page?...' so I improved PageInstanceMapper.
But now I see that it is 'wicket/bookmarkable/...' so BookmarkableMapper should be improved too.","14/May/13 08:53;mgrigorov;Hi Jered,

I've just added the same improvement to BookmarkableMapper: 
https://git-wip-us.apache.org/repos/asf/wicket/repo?p=wicket.git;a=commitdiff;h=6e794ad060af7512a6f0e9a0d445037047aad0e1

Can you try again ?","14/May/13 15:12;jeredm@maplewoodsoftware.com;Still fails.

Fails: IE 7
DEBUG - Server                     - REQUEST /bookmarkable/com.qs.NestedModals.InnerModalContent on BlockingHttpConnection@66fbf51d,g=HttpGenerator{s=0,h=-1,b=-1,c=-1},p=HttpParser{s=-5,l=35,c=0},r=10
DEBUG - ContextHandler             - scope null||/bookmarkable/com.qs.NestedModals.InnerModalContent @ o.e.j.w.WebAppContext{/,file:/home/jmyers/workspace_wicket/NestedModals/src/main/webapp/},src/main/webapp
DEBUG - ContextHandler             - context=||/bookmarkable/com.qs.NestedModals.InnerModalContent @ o.e.j.w.WebAppContext{/,file:/home/jmyers/workspace_wicket/NestedModals/src/main/webapp/},src/main/webapp
DEBUG - session                    - Got Session ID whd5bajr4j9azedyzt2nbr4r from cookie
DEBUG - session                    - sessionManager=org.eclipse.jetty.server.session.HashSessionManager@28ae4646
DEBUG - session                    - session=org.eclipse.jetty.server.session.HashedSession:whd5bajr4j9azedyzt2nbr4r@831577209
DEBUG - ServletHandler             - servlet |/bookmarkable/com.qs.NestedModals.InnerModalContent|null -> default
DEBUG - ServletHandler             - chain=wicket.NestedModals->default
DEBUG - ServletHandler             - call filter wicket.NestedModals
DEBUG - ServletHandler             - call servlet default
DEBUG - DefaultServlet             - Resource /bookmarkable/com.qs.NestedModals.InnerModalContent.gz=null
DEBUG - DefaultServlet             - Resource /bookmarkable/com.qs.NestedModals.InnerModalContent=null
DEBUG - DefaultServlet             - uri=/bookmarkable/com.qs.NestedModals.InnerModalContent resource=null
DEBUG - Server                     - RESPONSE /bookmarkable/com.qs.NestedModals.InnerModalContent  404


Passes: Chromium    25.0.1364.160 (Developer Build 25.0.1364.160-0ubuntu0.11.10.1) Ubuntu 11.10
DEBUG - Server                     - REQUEST /wicket/bookmarkable/com.qs.NestedModals.InnerModalContent on BlockingHttpConnection@4c9549af,g=HttpGenerator{s=0,h=-1,b=-1,c=-1},p=HttpParser{s=-5,l=89,c=0},r=6
DEBUG - ContextHandler             - scope null||/wicket/bookmarkable/com.qs.NestedModals.InnerModalContent @ o.e.j.w.WebAppContext{/,file:/home/jmyers/workspace_wicket/NestedModals/src/main/webapp/},src/main/webapp
DEBUG - ContextHandler             - context=||/wicket/bookmarkable/com.qs.NestedModals.InnerModalContent @ o.e.j.w.WebAppContext{/,file:/home/jmyers/workspace_wicket/NestedModals/src/main/webapp/},src/main/webapp
DEBUG - session                    - Got Session ID 1eds8fn3jvlm1db7fi9kcmh52 from cookie
DEBUG - session                    - sessionManager=org.eclipse.jetty.server.session.HashSessionManager@28ae4646
DEBUG - session                    - session=org.eclipse.jetty.server.session.HashedSession:1eds8fn3jvlm1db7fi9kcmh52@124596294
DEBUG - ServletHandler             - servlet |/wicket/bookmarkable/com.qs.NestedModals.InnerModalContent|null -> default
DEBUG - ServletHandler             - chain=wicket.NestedModals->default
DEBUG - ServletHandler             - call filter wicket.NestedModals
DEBUG - WebAppClassLoader          - loaded class com.qs.NestedModals.InnerModalContent from sun.misc.Launcher$AppClassLoader@5acac268
DEBUG - Server                     - RESPONSE /wicket/bookmarkable/com.qs.NestedModals.InnerModalContent  200","14/May/13 15:15;mgrigorov;Please set a breakpoint at org.apache.wicket.core.request.mapper.BookmarkableMapper#matches() and see what are the values of request.getUrl() and request.getClientUrl() with IE7.
Thanks!",14/May/13 15:17;jeredm@maplewoodsoftware.com;It looks like your changes are not in the snapshot.  I am looking at the latest snapshot and it has the suffix of the snapshot and it is showing 2130514.121521-41.  Is that before your commit?,14/May/13 15:24;mgrigorov;https://repository.apache.org/content/groups/snapshots/org/apache/wicket/wicket-core/6.8.0-SNAPSHOT/wicket-core-6.8.0-20130514.121521-43-sources.jar has the change.,"14/May/13 15:53;jeredm@maplewoodsoftware.com;I found my problem.  The last log I posted is accurate.

BookmarkableMapper#matches() breaks:

Outer Modal (getUrl then getClientUrl alternate):
?1-1.IBehaviorListener.0-modalLink&_=1368546463922
?1
?1-1.IBehaviorListener.0-modalLink&_=1368546463922
?1
wicket/page?3
wicket/page?3

Inner Modal (getUrl then getClientUrl alternate):
wicket/page?3-1.IBehaviorListener.0-modalLink&_=1368546654579
wicket/page?3
bookmarkable/com.qs.NestedModals.InnerModalContent
bookmarkable/com.qs.NestedModals.InnerModalContent
bookmarkable/com.qs.NestedModals.InnerModalContent
bookmarkable/com.qs.NestedModals.InnerModalContent",15/May/13 07:19;mgrigorov;It is not clear to me which url is request.getUrl() and which is #getClientUrl().,"15/May/13 14:34;jeredm@maplewoodsoftware.com;They alternate starting with getUrl...
getUrl:  wicket/page?3-1.IBehaviorListener.0-modalLink&_=1368546654579
getClientUrl: wicket/page?3
getUrl: bookmarkable/com.qs.NestedModals.InnerModalContent
getClientUrl: bookmarkable/com.qs.NestedModals.InnerModalContent","15/May/13 14:39;mgrigorov;Hmmm. 
I see why the improvement in BookmarkableMapper doesn't match - the second getClientUrl() has no 'wicket' (the namespace) in it. It seems the base url of the inned page is calculated against the baseUrl of the outer page. 
I'm not sure whether this is a bug in the calculation of the baseUrl or not.","15/May/13 15:00;jeredm@maplewoodsoftware.com;Here is the getUrl/getClientUrl values for a browser that is working.  My earlier comment concerning getUrl was the failing IE7.

BookmarkableMapper#matches() breaks:

OuterModel
getUrl: ?0-1.IBehaviorListener.0-modalLink&_=1368629344592
getClientUrl: ?0
getUrl: ?0-1.IBehaviorListener.0-modalLink&_=1368629344592
getClientUrl: ?0
getUrl: wicket/page?1
getClientUrl: wicket/page?1

InnerModal:
getUrl: wicket/page?1-1.IBehaviorListener.0-modalLink&_=1368629545878
getClientUrl: wicket/page?1
getUrl: wicket/bookmarkable/com.qs.NestedModals.InnerModalContent
getClientUrl: wicket/bookmarkable/com.qs.NestedModals.InnerModalContent
getUrl: wicket/bookmarkable/com.qs.NestedModals.InnerModalContent
getClientUrl: wicket/bookmarkable/com.qs.NestedModals.InnerModalContent

As mentioned in Martin's earlier comment the difference is the ""wicket/"" at the front of the inner modal urls.","07/Jun/13 06:13;ilgrosso;Any idea of which will be the ""fix-for-version"" of this issue? We are experiencing exactly this problem in SYNCOPE-370.
Thanks.",14/Jun/13 10:41;mgrigorov;I'm able to reproduce it now. Let me see...,"14/Jun/13 13:36;mgrigorov;An additional check in PageInstanceMapper that matches on baseUrl 'page?...' and request url 'page?...' fixed this problem.
There is no need of ie8_url in modal window code.","14/Jun/13 23:03;jeredm@maplewoodsoftware.com;This still does not seem to be working.  I used the branch remotes/origin/wicket-6.x to build.  I ran this test in IE 8. Here is what is in my console:

SSL access to the quickstart has been enabled on port 8443
You can access the application using SSL on https://localhost:8443

>>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP
INFO  - Server                     - jetty-7.6.3.v20120416
INFO  - tandardDescriptorProcessor - NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet
INFO  - ContextHandler             - started o.e.j.w.WebAppContext{/,file:/home/neville/workspace_wicket/NestedModals/src/main/webapp/},src/main/webapp
INFO  - WebXmlFile                 - web.xml: url mapping found for filter with name wicket.NestedModals: [/*]
INFO  - Application                - [wicket.NestedModals] init: Wicket core library initializer
INFO  - RequestListenerInterface   - registered listener interface [RequestListenerInterface name=IBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]
INFO  - RequestListenerInterface   - registered listener interface [RequestListenerInterface name=IFormSubmitListener, method=public abstract void org.apache.wicket.markup.html.form.IFormSubmitListener.onFormSubmitted()]
INFO  - RequestListenerInterface   - registered listener interface [RequestListenerInterface name=ILinkListener, method=public abstract void org.apache.wicket.markup.html.link.ILinkListener.onLinkClicked()]
INFO  - RequestListenerInterface   - registered listener interface [RequestListenerInterface name=IOnChangeListener, method=public abstract void org.apache.wicket.markup.html.form.IOnChangeListener.onSelectionChanged()]
INFO  - RequestListenerInterface   - registered listener interface [RequestListenerInterface name=IRedirectListener, method=public abstract void org.apache.wicket.IRedirectListener.onRedirect()]
INFO  - RequestListenerInterface   - registered listener interface [RequestListenerInterface name=IResourceListener, method=public abstract void org.apache.wicket.IResourceListener.onResourceRequested()]
INFO  - Application                - [wicket.NestedModals] init: Wicket extensions initializer
INFO  - WebApplication             - [wicket.NestedModals] Started Wicket version 6.9.0-SNAPSHOT in DEVELOPMENT mode
********************************************************************
*** WARNING: Wicket is running in DEVELOPMENT mode.              ***
***                               ^^^^^^^^^^^                    ***
*** Do NOT deploy to your live server(s) without changing this.  ***
*** See Application#getConfigurationType() for more information. ***
********************************************************************
INFO  - AbstractConnector          - Started SocketConnector@0.0.0.0:8080
INFO  - SslContextFactory          - Enabled Protocols [SSLv2Hello, SSLv3, TLSv1, TLSv1.1, TLSv1.2] of [SSLv2Hello, SSLv3, TLSv1, TLSv1.1, TLSv1.2]
INFO  - AbstractConnector          - Started SslSocketConnector@0.0.0.0:8443
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - CompoundRequestMapper      - No compatible mapper found for URL ''
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - DefaultPageFactory         - Found constructor for Page of type 'class com.qs.NestedModals.HomePage' and argument of type 'class org.apache.wicket.request.mapper.parameter.PageParameters'.
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '0'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 0
DEBUG - MarkupContainer            - Add content to [ModalWindow [Component id = outerModalWindow]]
DEBUG - MarkupContainer            - Replacing content in [ModalWindow [Component id = outerModalWindow]]
DEBUG - MarkupContainer            - Add outerModalWindow to [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 0]
DEBUG - MarkupContainer            - Add modalLink to [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 0]
DEBUG - Page                       - Page '[Page class = com.qs.NestedModals.HomePage, id = 0, render count = 0]' is not stateless because of component with path 'outerModalWindow'.
DEBUG - MarkupCache                - Load markup: cacheKey=com.qs.NestedModals.HomePage_en_US.html
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/HomePage_en_US.html' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/HomePage_en_US.html' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/HomePage_en_US.html' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/HomePage_en.html' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/HomePage_en.html' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/HomePage_en.html' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/HomePage.html' using finder'[classpath]'
DEBUG - MarkupCache                - Loading markup from file:/home/neville/workspace_wicket/NestedModals/target/classes/com/qs/NestedModals/HomePage.html
DEBUG - AbstractMarkupParser       - The markup file does not have a XML declaration prolog with 'encoding' attribute:file:/home/neville/workspace_wicket/NestedModals/target/classes/com/qs/NestedModals/HomePage.html. It is safer to use it. E.g. <?xml version=""1.0"" encoding=""UTF-8"" ?>
DEBUG - Component                  - Begin render [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1]
DEBUG - MarkupContainer            - Add _header_0 to [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1]
DEBUG - Component                  - Begin render [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - renderHead: [ModalWindow [Component id = outerModalWindow]]
DEBUG - MarkupCache                - Load markup: cacheKey=org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow_en_US.html
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow_en_US.html' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow_en_US.html' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow_en_US.html' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow_en.html' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow_en.html' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow_en.html' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow.html' using finder'[classpath]'
DEBUG - MarkupCache                - Loading markup from jar:file:/home/neville/.m2/repository/org/apache/wicket/wicket-extensions/6.9.0-SNAPSHOT/wicket-extensions-6.9.0-SNAPSHOT.jar!/org/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow.html
DEBUG - Component                  - renderHead: [AjaxLink [Component id = modalLink]]
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - Component                  - renderHead: [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - renderHead: [HomePage [Component id = 0]]
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/resource/jquery/jquery-1.10.1_en_US.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/resource/jquery/jquery-1.10.1_en_US.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/resource/jquery/jquery-1.10.1_en_US.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/resource/jquery/jquery-1.10.1_en.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/resource/jquery/jquery-1.10.1_en.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/resource/jquery/jquery-1.10.1_en.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/resource/jquery/jquery-1.10.1.js' using finder'[classpath]'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-event-jquery_en_US.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-event-jquery_en_US.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-event-jquery_en_US.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-event-jquery_en.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-event-jquery_en.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-event-jquery_en.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-event-jquery.js' using finder'[classpath]'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery_en_US.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery_en_US.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery_en_US.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery_en.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery_en.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery_en.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery.js' using finder'[classpath]'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery-debug_en_US.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery-debug_en_US.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery-debug_en_US.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery-debug_en.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery-debug_en.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery-debug_en.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/ajax/res/js/wicket-ajax-jquery-debug.js' using finder'[classpath]'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en_US.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en_US.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en_US.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en.js' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en.js' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en.js' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal.js' using finder'[classpath]'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en_US.css' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en_US.css' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en_US.css' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en.css' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en.css' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal_en.css' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/extensions/ajax/markup/html/modal/res/modal.css' using finder'[classpath]'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - Page                       - Rendered [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - End render [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - Begin render [AjaxLink [Component id = modalLink]]
DEBUG - Page                       - Rendered [AjaxLink [Component id = modalLink]]
DEBUG - Component                  - End render [AjaxLink [Component id = modalLink]]
DEBUG - Component                  - Begin render [ModalWindow [Component id = outerModalWindow]]
DEBUG - Page                       - Rendered [ModalWindow [Component id = outerModalWindow]]
DEBUG - Component                  - End render [ModalWindow [Component id = outerModalWindow]]
DEBUG - Page                       - Rendered [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1]
DEBUG - Component                  - End render [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1]
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '0'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 0
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@1e49f598
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@1e49f598
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' released lock to page with id '0'
DEBUG - taStore$PageSavingRunnable - Saving asynchronously: Entry [sessionId=1hzi2k42flzu0tvppe3g1jdj4, pageId=0]...
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' notifying blocked threads
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - DiskDataStore              - Storing data for page with id '0' in session with id '1hzi2k42flzu0tvppe3g1jdj4'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - CompoundRequestMapper      - One compatible mapper found for URL '?0' -> 'Mapper: org.apache.wicket.core.request.mapper.BufferedResponseMapper; Score: 2147483647'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/'
DEBUG - CompoundRequestMapper      - No compatible mapper found for URL '?0-1.IBehaviorListener.0-modalLink&_=1371250796095'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '0'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 0
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '1'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 1
DEBUG - MarkupContainer            - Add content to [ModalWindow [Component id = innerModalWindow]]
DEBUG - MarkupContainer            - Replacing content in [ModalWindow [Component id = innerModalWindow]]
DEBUG - MarkupContainer            - Add innerModalWindow to [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 0]
DEBUG - MarkupContainer            - Add modalLink to [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 0]
DEBUG - Page                       - Page '[Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 0]' is not stateless because of component with path 'innerModalWindow'.
DEBUG - MarkupContainer            - Add _header_ to [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1]
DEBUG - Component                  - renderHead: [WebMarkupContainer [Component id = content]]
DEBUG - Component                  - renderHead: [ModalWindow [Component id = outerModalWindow]]
DEBUG - Component                  - Begin render [ModalWindow [Component id = outerModalWindow]]
DEBUG - Component                  - Begin render [WebMarkupContainer [Component id = content]]
DEBUG - Page                       - Rendered [WebMarkupContainer [Component id = content]]
DEBUG - Component                  - End render [WebMarkupContainer [Component id = content]]
DEBUG - Page                       - Rendered [ModalWindow [Component id = outerModalWindow]]
DEBUG - Component                  - End render [ModalWindow [Component id = outerModalWindow]]
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@1de28170
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@1de28170
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.HomePage, id = 0, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@1de28170
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 0], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@1de28170
DEBUG - taStore$PageSavingRunnable - Saving asynchronously: Entry [sessionId=1hzi2k42flzu0tvppe3g1jdj4, pageId=0]...
DEBUG - DiskDataStore              - Storing data for page with id '0' in session with id '1hzi2k42flzu0tvppe3g1jdj4'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' released lock to page with id '0'
DEBUG - taStore$PageSavingRunnable - Saving asynchronously: Entry [sessionId=1hzi2k42flzu0tvppe3g1jdj4, pageId=1]...
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' notifying blocked threads
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' released lock to page with id '1'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' notifying blocked threads
DEBUG - DiskDataStore              - Storing data for page with id '1' in session with id '1hzi2k42flzu0tvppe3g1jdj4'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - CompoundRequestMapper      - One compatible mapper found for URL 'wicket/page?1' -> 'Mapper: org.apache.wicket.core.request.mapper.PageInstanceMapper; Score: 2147483647'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '1'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 1
DEBUG - MarkupCache                - Load markup: cacheKey=com.qs.NestedModals.OuterModalContent_en_US.html
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/OuterModalContent_en_US.html' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/OuterModalContent_en_US.html' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/OuterModalContent_en_US.html' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/OuterModalContent_en.html' using finder'[classpath]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/OuterModalContent_en.html' using finder'[webapppath: /]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/OuterModalContent_en.html' using finder'[classpath: META-INF/resources/]'
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'com/qs/NestedModals/OuterModalContent.html' using finder'[classpath]'
DEBUG - MarkupCache                - Loading markup from file:/home/neville/workspace_wicket/NestedModals/target/classes/com/qs/NestedModals/OuterModalContent.html
DEBUG - AbstractMarkupParser       - The markup file does not have a XML declaration prolog with 'encoding' attribute:file:/home/neville/workspace_wicket/NestedModals/target/classes/com/qs/NestedModals/OuterModalContent.html. It is safer to use it. E.g. <?xml version=""1.0"" encoding=""UTF-8"" ?>
DEBUG - Component                  - Begin render [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1]
DEBUG - MarkupContainer            - Add _header_0 to [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1]
DEBUG - Component                  - Begin render [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - renderHead: [ModalWindow [Component id = innerModalWindow]]
DEBUG - Component                  - renderHead: [AjaxLink [Component id = modalLink]]
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - Component                  - renderHead: [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - renderHead: [OuterModalContent [Component id = 1]]
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - Page                       - Rendered [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - End render [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - Begin render [AjaxLink [Component id = modalLink]]
DEBUG - Page                       - Rendered [AjaxLink [Component id = modalLink]]
DEBUG - Component                  - End render [AjaxLink [Component id = modalLink]]
DEBUG - Component                  - Begin render [ModalWindow [Component id = innerModalWindow]]
DEBUG - Page                       - Rendered [ModalWindow [Component id = innerModalWindow]]
DEBUG - Component                  - End render [ModalWindow [Component id = innerModalWindow]]
DEBUG - Page                       - Rendered [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1]
DEBUG - Component                  - End render [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1]
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '1'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 1
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@3826515f
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@3826515f
DEBUG - taStore$PageSavingRunnable - Saving asynchronously: Entry [sessionId=1hzi2k42flzu0tvppe3g1jdj4, pageId=1]...
DEBUG - DiskDataStore              - Storing data for page with id '1' in session with id '1hzi2k42flzu0tvppe3g1jdj4'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' released lock to page with id '1'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' notifying blocked threads
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/wicket/page'
DEBUG - CompoundRequestMapper      - One compatible mapper found for URL 'wicket/page?1-1.IBehaviorListener.0-modalLink&_=1371250797748' -> 'Mapper: org.apache.wicket.core.request.mapper.PageInstanceMapper; Score: 2147483647'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '1'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 1
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' attempting to acquire lock to page with id '2'
DEBUG - PageAccessSynchronizer     - qtp2128350680-16 acquired lock to page 2
DEBUG - MarkupContainer            - Add _header_ to [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1]
DEBUG - Component                  - renderHead: [WebMarkupContainer [Component id = content]]
DEBUG - Component                  - renderHead: [ModalWindow [Component id = innerModalWindow]]
DEBUG - Component                  - Begin render [ModalWindow [Component id = innerModalWindow]]
DEBUG - Component                  - Begin render [WebMarkupContainer [Component id = content]]
DEBUG - Page                       - Rendered [WebMarkupContainer [Component id = content]]
DEBUG - Component                  - End render [WebMarkupContainer [Component id = content]]
DEBUG - Page                       - Rendered [ModalWindow [Component id = innerModalWindow]]
DEBUG - Component                  - End render [ModalWindow [Component id = innerModalWindow]]
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@74f69620
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@74f69620
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.OuterModalContent, id = 1, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@74f69620
DEBUG - Page                       - ending request for page [Page class = com.qs.NestedModals.InnerModalContent, id = 2, render count = 0], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@74f69620
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' released lock to page with id '2'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' notifying blocked threads
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' released lock to page with id '1'
DEBUG - PageAccessSynchronizer     - 'qtp2128350680-16' notifying blocked threads
DEBUG - taStore$PageSavingRunnable - Saving asynchronously: Entry [sessionId=1hzi2k42flzu0tvppe3g1jdj4, pageId=1]...
DEBUG - DiskDataStore              - Storing data for page with id '1' in session with id '1hzi2k42flzu0tvppe3g1jdj4'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - CompoundRequestMapper      - No compatible mapper found for URL 'bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - ServletWebRequest          - Calculating context relative path from: context path '', filterPrefix '', uri '/bookmarkable/com.qs.NestedModals.InnerModalContent'
DEBUG - RequestCycle               - No suitable handler found for URL bookmarkable/com.qs.NestedModals.InnerModalContent, falling back to container to process this request","16/Jun/13 15:34;mgrigorov;I've used the ModalWindow demo in wicket-examples. The problem was reproducible before my fix and now is OK.
I'll try with your quickstart too.","17/Jun/13 08:42;mgrigorov;A similar improvement was added to BookmarkableMapper.
Now your quickstart works OK too!
Thanks for your help!",17/Jun/13 15:42;jeredm@maplewoodsoftware.com;Thanks Martin!  It seems to be working with what I have tested so far!,"02/Jul/13 09:34;hudson;Integrated in Syncope-1_1_X #74 (See [https://builds.apache.org/job/Syncope-1_1_X/74/])
    [SYNCOPE-370] Upgrade to Wicket 6.9.0 (that contains WICKET-5071) (Revision 1498805)

     Result = SUCCESS
ilgrosso : 
Files : 
* /syncope/branches/1_1_X/pom.xml
"
Header can not be set from IRequestCycleListener#onEndRequest(),WICKET-4927,12623928,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,14/Dec/12 10:20,09/Jul/13 14:22,13/Mar/19 23:17,14/Dec/12 15:30,1.5.9,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.5.0,,wicket,,,,,,,0,,,,,,,"Due to HeaderBufferingWebResponse a header can no longer be set from IRequestCycleListener#onEndRequest().

In 1.4.x this was possible because BufferedWebResponse just passed through all headers to HttpServletResponse.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-12-14 15:37:28.231,,,no_permission,,,,,,,,,,,297827,,,Tue Jul 09 14:22:22 UTC 2013,,,,,,0|i14vh3:,236564,,,,,,,,"14/Dec/12 15:30;svenmeier;headers are now allowed to be set even if meta data is no longer
buffered",14/Dec/12 15:37;dashorst;Martin-g was against a last second patch that hasn't been battle tested. I've moved the commit to 6.5.0,"14/Dec/12 15:50;mgrigorov;:-)
In IRC Martijn asked whether this commit should be part of 6.4.0 and I expressed my opinion that I prefer to not include it because it was checked in in the very last minute.
I've also added that we can always release 6.4.1 few days later if this breaks something major.","14/Dec/12 20:16;svenmeier;No prob, this isn't very urgent.","09/Jul/13 14:22;svenmeier;Note that headers set from #onEndRequest() will be ignored, if the container already flushed the response :(.

This is different than in Wicket 1.4.x where the complete response was buffered in a BufferedResponse and only WicketFilter flushed the response via #close().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester.assertErrorMessages passes even if the message isn't visible on the page,WICKET-4585,12559112,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,trejkaz,trejkaz,04/Jun/12 01:21,25/Jun/13 12:19,13/Mar/19 23:17,25/Jun/13 12:19,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,0,,,,,,,"If you forget to add a FeedbackPanel to the page, WicketTester.assertErrorMessages will still pass the check even though no error message was actually displayed to the user. This makes it essentially unusable as a meaningful test (I am using assertContains for the time being.)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-04 07:42:44.73,,,no_permission,,,,,,,,,,,240061,,,Tue Jun 25 12:19:47 UTC 2013,,,,,,0|i00wiv:,3201,,,,,,,,"04/Jun/12 07:42;mgrigorov;The fix is simple:

--- a/wicket-core/src/main/java/org/apache/wicket/util/tester/BaseWicketTester.java
+++ b/wicket-core/src/main/java/org/apache/wicket/util/tester/BaseWicketTester.java
@@ -2116,7 +2116,7 @@ public class BaseWicketTester
 
                        public boolean accept(FeedbackMessage message)
                        {
-                               return message.getLevel() == level;
+                               return message.getLevel() == level && message.isRendered();
                        }
                });

But org.apache.wicket.util.tester.WicketTester#assertErrorMessages() doesn't say that it asserts only rendered feedback messages.
I agree that asserting for rendered messages is more correct but applying this fix may break some applications which rely on the current behavior.","04/Jun/12 08:10;mgrigorov;Actually this change even break few tests in wicket-core:

Failed tests:   submitWithoutUploadFile(org.apache.wicket.util.tester.FormTesterTest): (..)
  createBook_validateFail(org.apache.wicket.util.tester.WicketTesterTest): (..)
  createBook_validatePass(org.apache.wicket.util.tester.WicketTesterTest): (..)
  interfaceValidator(org.apache.wicket.resource.loader.ValidatorStringResourceLoaderTest): (..)
  classValidator(org.apache.wicket.resource.loader.ValidatorStringResourceLoaderTest): (..)
","27/Jun/12 08:24;bitstorm;@Trejkaz
isn't assertFeedback() better suited for what you wanna do in your test?","27/Jun/12 23:47;trejkaz;That might work too, actually. It doesn't assert the kind of messages coming back, but that might not be so bad...","25/Jun/13 12:19;mgrigorov;Added org.apache.wicket.util.tester.WicketTester#assertFeedbackMessages(IFeedbackMessageFilter, Serializable...).
Now the application code can use any filter to decide whether to look for renderer or not messages, their level, etc.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mounted page is not throwing ExpireException with setting setRecreateMountedPagesAfterExpiry(false),WICKET-4932,12624625,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,thyzz,thyzz,19/Dec/12 13:03,20/Jun/13 12:28,13/Mar/19 23:17,20/Jun/13 10:07,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"We have a page that is both bookmarkable (and accessible with certain page parameters) and has a second constructor taking an object. 
When ever the session time-out we want to show a session expired page. But we get a exception because Wicket is trying to rebuild the page with no page parameters. 
We have set the setting getPageSettings().setRecreateMountedPagesAfterExpiry(false); This works when clicking on (ajax)links, but it's not working when using the back/forward button in the browser (or javascript:history.go(-1)).

I'll attache a quickstart.",,,,,,,,,,,,,,,,,,,,,,19/Dec/12 13:05;thyzz;sessiontimeout.zip;https://issues.apache.org/jira/secure/attachment/12561689/sessiontimeout.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-09 20:01:36.546,,,no_permission,,,,,,,,,,,300450,,,Thu Jun 20 12:28:12 UTC 2013,,,,,,0|i168c7:,244483,,,,,,,,"19/Dec/12 13:05;thyzz;Run the quickstart. Follow the links to page three. Wait there for a minute and hit a backbutton. An exception is thrown. But it's not the page expired exception, but a runtime exception telling you that you accessed the bookmarkable page without the correct page parameters","09/Jan/13 20:01;pedrosans;Hi Thijs, thx for reporting. It's should be already fixed at the master. Keeping the ticket opened since there are room for improvements at Wicket mappers.","09/Jan/13 20:45;thyzz;Thanks Predo
I'll try test it before the weekend.","09/Jan/13 20:50;pedrosans;Sure, please notice that you don't need to wait one minute until the session to expire. To simple visit http://localhost:8080/page2?<random_number> after the server starts is enough since we can know that there's no page with this random number id at them moment.",20/Jun/13 10:07;mgrigorov;Closing as Fixed since there is no feedback since January 2013.,20/Jun/13 12:28;thyzz;Sorry about that. Pedro did fix it. (So we're happily using 6.5.0).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IE 8 : error when handling Wicket Ajax Response,WICKET-4881,12617398,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,fdonckels,fdonckels,23/Nov/12 09:18,20/Jun/13 07:53,13/Mar/19 23:17,12/Dec/12 08:06,6.2.0,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket,,,,,,,0,,,,,,,"I have a problem with Wicket 6.2.0/6.3.0 and IE (this works perfectly with Chrome or Firefox). I have a list of items, with Ajax links in the list. The response to the Ajax link modifies a panel from the page, and redraws the list (its container).

IE does at least some of the changes correctly, but outputs an error, and it seems that subsequent Ajax request fail:


       (... some UI code ...)
   (... Jquery and Wicket ajax references ...)
<script type=""text/javascript"" id=""wicket-ajax-base-url"">
/*<![CDATA[*/
Wicket.Ajax.baseUrl=""other/bictables/list"";
/*]^]^>*/
</script>
</head>]]></header-contribution><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-interaction-view-toolbar-AMEND"",""e"":""click"",""c"":""AMENDea""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-interaction-view-toolbar-RETURN"",""e"":""click"",""c"":""RETURNec""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-0-actions-view"",""e"":""click"",""c"":""viewf2""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-0-actions-edit"",""e"":""click"",""c"":""editf3""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-0-reorder-down"",""e"":""click"",""c"":""downf4""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-1-actions-view"",""e"":""click"",""c"":""viewf5""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-1-actions-edit"",""e"":""click"",""c"":""editf6""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-1-reorder-up"",""e"":""click"",""c"":""upf7""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-1-reorder-down"",""e"":""click"",""c"":""downf8""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-2-actions-view"",""e"":""click"",""c"":""viewf9""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-2-actions-edit"",""e"":""click"",""c"":""editfa""});]]>
   (... lots of similar code from the table ...)
<evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-17-actions-edit"",""e"":""click"",""c"":""edit136""});]]></evaluate><evaluate><![CDATA[Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-17-reorder-up"",""e"":""click"",""c"":""up137""});]]></evaluate></ajax-response>
INFO: returned focused element: http://localhost:8080/payments/app/other/bictables/list?3#
INFO: returned focused element: null
ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: [object Error], text: Wicket.Ajax.ajax({""u"":""./list?3-1.IBehaviorListener.0-entities-entitiesList-bictables-7-actions-view"",""e"":""click"",""c"":""view10d""});
ERROR: FunctionsExecuter.processNext: [object Error]
    ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: [object Error], text: Wicket.Ajax.ajax({""u"":""./list?2-4.IBehaviorListener.0-entities-entitiesList-bictables-7-actions-  view"",""e"":""click"",""c"":""view2cb""});
    ERROR: FunctionsExecuter.processNext: [object Error]


all subsequent Ajax requests lead to :

INFO: Channel '0' is busy - scheduling the callback to be executed when the previous request finish

Is this a bug in Wicket, in IE? Any way to circumvent it if it's in IE?","Internet Explorer 8, Windows 7 64 bits",,,,,,,,,,,,,,,,,,WICKET-5039,,,19/Jun/13 14:17;tobiashaupt;WICKET-4881-avoid-recursion.patch;https://issues.apache.org/jira/secure/attachment/12588600/WICKET-4881-avoid-recursion.patch,03/Dec/12 12:59;mgrigorov;WICKET-4881.patch;https://issues.apache.org/jira/secure/attachment/12555753/WICKET-4881.patch,23/Nov/12 14:34;fdonckels;wicket_bug_report.7z;https://issues.apache.org/jira/secure/attachment/12554730/wicket_bug_report.7z,23/Nov/12 16:26;bitstorm;wicket_bug_report.zip;https://issues.apache.org/jira/secure/attachment/12554739/wicket_bug_report.zip,,,,,4.0,,,,,,,,,,,,,,,,,,,2012-11-23 09:27:00.61,,,no_permission,,,,,,,,,,,291834,,,Wed Jun 19 15:12:35 UTC 2013,,,,,,0|i0rfsn:,158202,,,,,,,,"23/Nov/12 09:27;mgrigorov;Can you provide a quickstart application that reproduces the problem ?
Or can you reproduce it at http://www.wicket-library.com/wicket-examples-6.0.x/ajax/ ?",23/Nov/12 14:34;fdonckels;Maven project,"23/Nov/12 14:39;fdonckels;This project can be run using maven; the produced war file can be dropped in a Jboss 6 (probably 7 too).

To reproduce the issue:
once jboss has started the app: navigate using IE8 to : http://localhost:8080/wicket.bug.report-web-1.0.0-SNAPSHOT/app/
after that, click on one of the magnifying glass icons.
the ""view panel"" appears, but all subsequent Ajax requests fail. (and the wicket debug panel shows the error)

Notice that the error doesn't happen if in the wicket.bug.report.web.base.AbstractListPanel.ActionsFragment class, you disable the EditAjaxLink. (even though it's not clicked)

","23/Nov/12 16:28;bitstorm;I've modified the maven project in order to run it by just typing ""maven jetty:run"". Anyway, I couldn't get any error message with IE 8, everything works fine running the project with Jetty.","26/Nov/12 08:21;fdonckels;I downloaded your project and reproduced the issue (using mvn jetty:run).
See here: http://www.screenr.com/GbU7
(sorry about the sound, I turned the microphone off, but that didn't prevent it from recording some noise)","26/Nov/12 09:11;mgrigorov;I cannot reproduce the problem here as well.
I use IE9 in compatibility modes and it didn't break with any of them. I cannot install IE8 here.
The source code of the demo application is too big to make a full code review. A brief look at it didn't show anything suspicious.",26/Nov/12 10:04;bitstorm;I suspect you may have a more general problem with AJAX and IE. Does the rest of the application work fine with AJAX? Does data pagination return any error?,"26/Nov/12 12:09;fdonckels;Copy-pasted from the ##wicket IRC channel :
inside the catch block of FunctionsExecuter, the exception message is ""Out of stack space""
depth is 41 / current is 41
of course ,  I have no idea how this is supposed to work...
the call stack is just a pretty large bunch of anonymous JScript functions

actually, the issue happens in the processEvaluation function, of Wicket.Ajax.Call when calling eval on the Javascript provided in the Ajax response
It's odd though: if I change the number of items per page in the pagination, everything is ok until itemsPerPage = 8 (lower is ok)","26/Nov/12 12:14;mgrigorov;Can you try the JavaScript from this comment
https://issues.apache.org/jira/browse/WICKET-4675?focusedCommentId=13426609&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13426609
in your IE8 instance ?
What is the number that it gives ?","26/Nov/12 12:22;fdonckels;LOG: 272 and then it outputs ""Out of memory"" (which is pretty odd and a different message). That seems quite low to run out of stack space in a Win7 64 bit environment and 8gb of memory...","26/Nov/12 12:32;mgrigorov;Each browser has different capabilities.
See http://stackoverflow.com/questions/7826992/browser-javascript-stack-size-limit

It depends on how much memory you use in each stack frame.
The test that you ran is very simple and I'm not sure why 272 is the max for you. It could be some configuration property of IE ...

The only solution that I see is to use setTimeout() when the depth is lower. The current threshold is 1000 recursive calls. Pre-Wicket-4675 it was 50. But it fails for you at 41 which indeed is very low.",03/Dec/12 12:48;dondimon;I have the same issue on page with ~200 AjaxCheckBox components in IE7. IE9 in compatibility mode works fine.,"03/Dec/12 12:59;mgrigorov;Here is a possible solution.
If the <evaluation> elements in <ajax-response> are more than X then combine them into one.

You can clone Wicket sources and apply the patch locally to test it.",03/Dec/12 16:30;dondimon;I've tried this - doesn't help.,03/Dec/12 16:36;mgrigorov;Can you attach the Ajax response that leads to this problem ?,"04/Dec/12 09:01;dondimon;Sorry, it was my fault with an incorrect build. Provided patch fixed the problem. Thank you.",04/Dec/12 09:07;fdonckels;I'll try that patch too ASAP,"06/Dec/12 08:49;fdonckels;In my specific case, I had to change the value from 50 to 30 (probably because my IE is nuts), but that does solve the issue.",12/Dec/12 08:06;mgrigorov;Since 6.4.0 all prepend scripts will be combined in one <priority-evaluate> and all append scripts in one <evaluate>.,"18/Feb/13 14:02;ptitjes;I'm a bit annoyed by the commit that fixes this bug: https://github.com/apache/wicket/commit/cbf76d0e8c355876e302699c0975971773941ae9
I understand that this is needed for IE compatibility but, indeed, it does completely removes the possibility to use the notify callback in the evaluated Javascript code. (see: https://github.com/apache/wicket/blob/master/wicket-core/src/main/java/org/apache/wicket/ajax/res/js/wicket-ajax-jquery.js#L1045)

I would need that to defer DOM replacements after a modal window close animation.

We can keep the IE-needed concatenation of evaluations by adding some Java APIs to:
1) Explicitly ask for a particular script to be in its own ""[priority-]evaluate"" element (just like IJavascriptResponse does for appended-scripts)
2) Pass an additional string to name the notify callback name

May I open a feature request issue for that, or should I use this bug as its fix broke an existing feature ? I can provide patches.","18/Feb/13 14:07;mgrigorov;Hi Didier,

Very good timing!
We are discussing this issue in WICKET-5039.
Can you please add a quickstart with your requirement to it.","18/Feb/13 14:31;reiern70;Hi, 

Maybe it is just changing the regular expression pattern at

https://github.com/apache/wicket/blob/master/wicket-core/src/main/java/org/apache/wicket/ajax/res/js/wicket-ajax-jquery.js#L1045)

so that it covers case function(){A|...}

",19/Jun/13 14:17;tobiashaupt;Patch added that avoids recursion in most of the default evaluations,"19/Jun/13 14:21;tobiashaupt;I still have heavy performance problems with the deep recursion / deep stack problem. In my case I append javascript that does a lot of jquery stuff so that it builds a big stack itself. I get the too much recursion message in firefox pretty soon or the page freezes.

I understand that recursion is necessary through the notify call if the execution of the next step needs to be deferred until something long running (like downloading scripts etc.) has happened. Most of the calls of notify do not need a deferred execution so I introduced a second callback: notifyContinue that will be called whenever it is possible to avoid recursion.

Please see the attached patch and verify if everything is correctly adapted. In my case it avoids the Exception and speeds up the evaluation a lot.","19/Jun/13 14:26;mgrigorov;Please create a new ticket.
Also please add information why you think some calls do not need to wait for the previous.
A quickstart app will really help to improve this code faster.
Thanks!","19/Jun/13 15:12;tobiashaupt;I understand it like that: all tasks need to wait but some finish instantly / synchronously - they don't need the deferred callback to be called at some future time. 
So they don't need further recursion and can continue with the next step in a simple loop.

I know that there was a quickstart to check the recursion depth and stack size allready. This should be sufficient. It's hard to simulate the problem. ",,,,,,,,,,,,,
"PackageTextTemplate misses locale, style and variation",WICKET-4579,12558790,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jriehn,jriehn,31/May/12 14:36,13/Jun/13 08:48,13/Mar/19 23:17,13/Jun/13 08:48,1.5.7,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,0,,,,,,,"Because of PackageTextTemplate calls IResourceStream.locate(clazz, path) it is currently not possible to set locale, style and variation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-05-31 20:59:39.776,,,no_permission,,,,,,,,,,,240059,,,Thu Jun 13 08:48:23 UTC 2013,,,,,,0|i00wif:,3199,,,,,,,,"31/May/12 20:59;svenmeier;PackageTextTemplate does all the heavy lifting in the constructor, so no chance to set locale, style or variation before hand.

What solution do you suggest?
Is it acceptable to overwrite getLocale() etc.? Or do we have to delay reading the stream until the first access, thus allowing to call setLocale() etc. before the stream is located?","01/Jun/12 07:14;coldiges;I would prefer a delayed reading of the stream until it is actually accessed using getString() which would allow to set the values before accessing it.
Obviously any actual change to the locale, style or variation has to clear the buffered string to ensure a proper reloading depending on the new value(s).","01/Jun/12 08:31;jriehn;I agree with Christian. By using getString() to locate resources,  PackageTextTemplate has also the chance to reload resources after the cache was cleared.

regards,

Jan","01/Jun/12 09:44;svenmeier;A Patch is welcomed. This won't make it into 1.5.x though,I'm afraid.","03/Jun/12 05:06;mgrigorov;I added an overloaded constructor which accepts the style, the variation and the locale.
It is not as dynamic as you need it but you can use it as a local variable in a method (most of the times in #renderHead()) and this way it will be re-instantiated at every rerender of the component/behavior that needs this template.
Is this good enough ?","12/Jun/12 11:19;jriehn;yes, for my purposes it is good enough - but it is not in the sense of IResourceStream. The Loaders should set the resolved locale, style and variation.","13/Jun/13 08:48;mgrigorov;With Wicket 7 the template will be loaded lazily on first usage of #toString() or #interpolate() methods.
If the style/locale/variation/encoding are changed then the template will be reloaded.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractAjaxBehavior should clean stored reference to a component on unbind,WICKET-4925,12623664,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,vtsaplin,vtsaplin,13/Dec/12 04:47,25/May/13 20:10,13/Mar/19 23:17,07/Jan/13 14:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.5.0,,,,,,,,,0,,,,,,,"AbstractAjaxBehavior isn't reusable right now. It saves a reference to a component on bind and doesn't properly clean it on unbind. It breaks the add/remove contract for behaviors. If a behavior is particularly expensive to create we should be able to remove it and reuse later on the same or other components.
Here is a simple fix:

	@Override
	public final void unbind(final Component hostComponent)
	{
		component = null;

		// call the callback
		onUnbind();
	}

	protected void onUnbind()
	{
	}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,297392,,,2012-12-13 04:47:31.0,,,,,,0|i14ocv:,235411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester throws an exception when a Palette component is added to a Form associated with a compound property model,WICKET-5086,12636005,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,vmathon,vmathon,08/Mar/13 11:19,14/May/13 20:11,13/Mar/19 23:17,26/Mar/13 22:51,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket,,,,,,,0,,,,,,,"FormTester throws an exception when a Palette component is added to a Form associated with a compound property model:
org.apache.wicket.WicketRuntimeException: No get method defined for class ... expression: choices

It worked fine in Wicket 6.5.0, and works fine if the form is not associated with a compound property model.","Windows 7, JDK 1.6_31",,,,,,,,,,,,,,,,,,,,,21/Mar/13 21:55;bitstorm;WICKET-5086.patch;https://issues.apache.org/jira/secure/attachment/12574892/WICKET-5086.patch,08/Mar/13 11:21;vmathon;wicket-palette-test.zip;https://issues.apache.org/jira/secure/attachment/12572747/wicket-palette-test.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2013-03-21 21:55:05.009,,,no_permission,,,,,,,,,,,316497,,,Tue May 14 20:07:44 UTC 2013,,,,,,0|i1im3j:,316840,,,,,,,,08/Mar/13 11:21;vmathon;A quick start showing the issue.,"21/Mar/13 21:55;bitstorm;The error occurs when BaseWicketTester invokes getValue on the two AbstractOptions inside Palette component. AbstractOptions uses the default getValue defined inside FormComponent which tries to retrieve an inheritable model.
I think we should override getValue inside AbstractOptions, like we did with updateModel (see attached patch).","26/Mar/13 22:50;svenmeier;AbstractOptions doesn't use its model at all, the actual form value is handled by the recorder component.","26/Mar/13 22:51;svenmeier;AbstractOptions does not use its model object, the Recorder does the form processing","14/May/13 20:07;paulbors;As a work-around for 6.6.0 I got away with defining two String properties for my POJO used to mock the unit tests. The two properties are “choices” and “selection”.
This works because the crash happens when the FormTester is trying to get access to all of the form fields values and attempts to resolve those properties against the backing POJO for the PropertyModel.

Upgrading to 6.7.0 is not an option for us because of WICKET-5147 ""WicketTester MockHttpRequest.getCookies very slow / OutOfMemory"" which is fixed in 6.8.0 (scheduled for this Friday, May/17/2013).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The event listener in Wicket.Ajax.ajax() should not return the value of attrs.ad (allowDefault),WICKET-5093,12636366,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,11/Mar/13 13:46,13/May/13 12:24,13/Mar/19 23:17,13/May/13 12:24,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket,,,,,,,0,,,,,,,"Currently the event listeners registered in Wicket.Ajax.ajax() return the value of attrs.ad as a result.
This is wrong because this way the event propagation is effected.

event.preventDefault != event.stopPropagation

If the propagation has to be stopped then a before handler can do ""Wicket.Event.stop(attrs.event)"" where needed.",,,,,,,,,,,,,,,WICKET-5178,,,,,,,08/May/13 12:43;svenmeier;WICKET-5093.zip;https://issues.apache.org/jira/secure/attachment/12582288/WICKET-5093.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-05-08 08:58:03.554,,,no_permission,,,,,,,,,,,316858,,,Mon May 13 12:24:35 UTC 2013,,,,,,0|i1iobj:,317200,,,,,,,,"08/May/13 08:58;svenmeier;This change leads to doubled submits in the following scenario:

- user enters something in a textfield
- user clicks ajax button
- ""change"" ajax event on textfield sends Ajax request
- ""click"" ajax event on button is queued, no longer returning false
- browser submits form via non-ajax
- queued ""click"" ajax event is send via Ajax, resulting in second form submit",08/May/13 09:01;svenmeier;IMHO this change should be reverted and the issue be revisited in Wicket 7.x,08/May/13 10:04;mgrigorov;You think that the solution suggested in WICKET-5178 is not good anymore ?,"08/May/13 10:51;svenmeier;The important thing is that stopPropagation and preventDefault have to be called *before* queuing the ajax event in a channel.

I don't think we can make this change for Wicket 1.5.x or 6.x without breaking applications - better roll back to previous solution.","08/May/13 11:04;mgrigorov;But the new setting will do exactly what has been done in 6.6.0. The benefit is that it will be configurable.
It was configurable in 6.6.0 too - allowDefault has been used for this. Now there will be two settings for the two separate functionalities.
Please provide a quickstart in WICKET-5178.","08/May/13 11:25;svenmeier;I don't know where you're planning to handle the new stopPropagation setting. If it is handled at the same place as preventDefault, then it won't fix this issue.","08/May/13 12:43;svenmeier;Quickstart for 6.x:

Enter something in the textfield, then press enter. Observe two ""submit"" log entries.

This issue can be triggered by clicking on the button too, but it requires exact timing.","13/May/13 12:24;mgrigorov;Sven,

An improvement is pushed to master branch.
Please try it and report in WICKET-5178. If it is OK then I'll back port it to 6.x.
Your quickstart app seems to work as desired now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Url#getQueryString(charset) method returns quesrystring with ""?"" prefixed to it",WICKET-4664,12599598,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,vineetsemwal,vineetsemwal,20/Jul/12 09:17,02/May/13 16:25,13/Mar/19 23:17,02/May/13 14:02,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,0,,,,,,,"i have just pointed out 6.0.0-beta3/6.x but it must be same in 1.5.x too ,afaik ""?"" is not considered part of querystring ,""?"" is considered separator see http://tools.ietf.org/html/rfc3986#section-3
this method is used in Url#toString() too which can be easily fixed but it may be used at other places too so i don't know if removing ""?"" will break things now.

so how things break currently
RequestUtils.decodeParameters(url.getQueryString(),parameters);
decodeparameters will considered first key to be ""?key"" 
so may be requestutils#decodeparameters method should strip away ""?"" if it's present in the query string before populating pageparameters

thanks!


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-04-29 16:49:15.581,,,no_permission,,,,,,,,,,,240057,,,Thu May 02 16:25:21 UTC 2013,,,,,,0|i00whj:,3195,,,,,,,,29/Apr/13 16:49;cedricgatay;I'm working on it,"29/Apr/13 17:46;cedricgatay;Github pull request is here : https://github.com/apache/wicket/pull/37

I will update the wiki to reflect the change once it is properly reviewed.","30/Apr/13 09:50;vineetsemwal;aha i nearly forgot this issue ...
since the change is scheduled for 7.0 ,i think it will be good to have getQueryString methods without ""?"" itself .. ,one way would be to rename current methods and help IDE refactor and later add getQueryString methods which returns value which does not start with ""?"" 

edit: i made a little typo so corrected it 
@cederic : i agree with you ,not sure how much things will it break ..","30/Apr/13 09:59;cedricgatay;I'm not sure we should remove the leading ? in the getQueryString, looking forward other dev point of view before doing anything on this.","01/May/13 09:39;mgrigorov;I've created a simple Servlet:
public class Serv extends HttpServlet
{
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		System.err.println(""qs: "" + request.getQueryString());
		System.err.println(""url: "" + new URL(""http://host/path?query=value"").getQuery());
	}
}

In both cases '?' is not in the query string:

qs: aaa=bb
url: query=value

Also both of them return null when there is no query string.

So I think Wicket's Url should do the same.",01/May/13 10:24;cedricgatay;In this case I will continue my work on this issue to make Wicket's Url behave as it behaves in classic servlets.  I'll  update here when I'm done with this. ,"01/May/13 16:35;cedricgatay;The pull request now contains one more commit with the updated behavior for Url#getQueryString() : 

 * it never returns the leading ""?""
 * returns null if there is no query string","02/May/13 14:02;mgrigorov;The changes are applied.
Thank you, Cedric!","02/May/13 16:25;cedricgatay;Thanks, the wiki is updated to reflect the changes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester does not support custom pages for component testing using the new API,WICKET-3670,12506280,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,papegaaij,papegaaij,05/May/11 12:48,02/May/13 02:29,13/Mar/19 23:17,20/May/11 14:59,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,1,,,,,,,"The methods to test components only allow custom markup, no custom pages. We need custom pages for our testcases. I'll attach a patch to add support for this.",,,,,,,,,,,,,,,,,,,,,,05/May/11 12:52;papegaaij;wickettester.diff;https://issues.apache.org/jira/secure/attachment/12478270/wickettester.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-11 18:31:36.601,,,no_permission,,,,,,,,,,,71460,,,Fri Jun 10 08:20:35 UTC 2011,,,,,,0|i0kabr:,116490,,,,,,,,11/May/11 18:31;mgrigorov;Check r1102010 and give feedback whether it serves the new need.,"12/May/11 07:59;manthos;Side note:

There are startComponentInPage(componentClass) witch just calls startComponentInPage(componentClass, pageMarkup)  with pageMarkup == null.

Could you please provide same for startComponentInPage(component, pageMarkup)? Like...

    public final <C extends Component> C startComponentInPage(final C component) {
        return startComponentInPage(component, null);
    }",10/Jun/11 07:20;papegaaij;We need this method with an instance as well. We need to be able to provide a model to the constructor of the component.,10/Jun/11 07:30;mgrigorov;There is protected BaseWicketTester#createPage() which you can override and return your own page.,"10/Jun/11 08:18;papegaaij;Not for the page, for the component. The method manthos mentioned would be very useful.","10/Jun/11 08:20;mgrigorov;Check latest trunk :-)
This method is already in.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester#isInvisible(String path),WICKET-3465,12499344,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,manthos,manthos,22/Feb/11 13:45,02/May/13 02:29,13/Mar/19 23:17,22/Feb/11 14:28,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"BaseWicketTester#isInvisible(String path) does not fail if Component does not exist.

Similar methods like isVisible, isEnabled, isDisabled and isRequired, they all fail if component does not exist.",,,,,,,,,,,,,,,,,,,,,WICKET-1214,22/Feb/11 13:48;manthos;patch2.patch;https://issues.apache.org/jira/secure/attachment/12471619/patch2.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-22 14:28:49.743,,,no_permission,,,,,,,,,,,204250,,,Tue Feb 22 14:28:49 UTC 2011,,,,,,0|i0kawn:,116584,,,,,,,,22/Feb/11 13:47;manthos;attached patch2.patch depends on patch1.patch from WICKET-1214,22/Feb/11 13:48;manthos;needs patch1.patch from WICKET-1214,"22/Feb/11 14:28;mgrigorov;Improved with r1073341.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding AjaxFormComponentUpdatingBehavior to dropdownchoice does not work,WICKET-3142,12478657,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nino,nino,29/Oct/10 12:06,02/May/13 02:29,13/Mar/19 23:17,30/Oct/10 04:19,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"When firing the onchange of the dropdown a nullpointer occurs on the java side. Also notice that the user are not getting displayed the exception page.

Please run the attached quickstart, and select something in the dropdown.",,,,,,,,,,,,,,,,,,,,,WICKET-3097,29/Oct/10 12:08;nino;dropdownajaxbug.zip;https://issues.apache.org/jira/secure/attachment/12458323/dropdownajaxbug.zip,30/Oct/10 02:53;pedrosans;url-tests-2.patch;https://issues.apache.org/jira/secure/attachment/12458466/url-tests-2.patch,29/Oct/10 19:29;pedrosans;url-tests.patch;https://issues.apache.org/jira/secure/attachment/12458440/url-tests.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-10-29 13:28:17.282,,,no_permission,,,,,,,,,,,203959,,,Sat Oct 30 05:31:42 UTC 2010,,,,,,0|i0kbov:,116711,,,,,,,,"29/Oct/10 13:28;pedrosans;The AjaxFormComponentUpdatingBehavior is generating an url for the callback script before an AttachedCompoundPropertyModel to be lazy created to the form component. Unfortunately when the component insert the new model to his data array at the position 0, the generated ulr for the behavior is no longer valid, because the behavior position has been incremented.
Nino, for now you can just pass the model to your components as constructor parameters and they behaviour will work (of course this is an workaround), while this ticket is open.",29/Oct/10 19:29;pedrosans;tests,30/Oct/10 02:53;pedrosans;sending the url-tests-2.patch that has one more test,"30/Oct/10 05:31;hudson;Integrated in Apache Wicket 1.5.x #468 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/468/])
    Issue: WICKET-3142
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
isTemporary behavior and ajax behavior together crashes with WicketRuntimeException: Couldn't find component behavior.,WICKET-3097,12476691,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,michal.kurtak,michal.kurtak,06/Oct/10 16:16,02/May/13 02:29,13/Mar/19 23:17,13/Oct/10 18:40,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"My scenario:
1. Component has 2 behaviors: first is temporary and second is ajax behavior.
2. Url for Ajax behavior contains behavior's index (e.g.
../page?1-1.IBehaviorListener.1-form-text)
2. Temporary behavior is removed in detachBehaviors method.
3. Ajax request is invoking ListenerInterfaceRequestHandler and it's
looking for behavior on non-existing index

This scenario causes error on wicket 1.5-M2.1",,,,,,,,,,,,,,,,,,,,,,13/Oct/10 20:13;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12457094/patch.txt,06/Oct/10 16:18;michal.kurtak;temporarybehbug.zip;https://issues.apache.org/jira/secure/attachment/12456515/temporarybehbug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-13 19:16:26.987,,,no_permission,,,,,,,,,,,41680,,,Wed Oct 13 22:53:22 UTC 2010,,,,,,0|i0kbtj:,116732,,,,,,,,06/Oct/10 16:18;michal.kurtak;Quickstart project (from archetype) with bug attached,"13/Oct/10 19:16;hudson;Integrated in Apache Wicket 1.5.x #392 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/392/])
    isTemporary behavior and ajax behavior together crashes with WicketRuntimeException: Couldn't find component behavior.
Issue: WICKET-3097
",13/Oct/10 20:13;pedrosans;test case preventing the bug,13/Oct/10 20:26;pedrosans;How about applying the Igor patch on 1.4?,"13/Oct/10 21:31;ivaynberg;thanks for the testcase pedro, ive cleaned it up a bit and committed.

re 1.4 we decided not to apply it because it touches some very fragile parts of wicket and we would rather not make 1.4.x any less stable. the chances of this happening in 1.4.x are much slimmer then in 1.5. it requires a combination of metadata/temporary behavior/callback behavior all used within the same component. 1.5 uses metadata on every render so there the problem is a lot more prominent.","13/Oct/10 22:53;hudson;Integrated in Apache Wicket 1.5.x #395 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/395/])
    test case
Issue: WICKET-3097
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PreCallHandler and PostCallHandler registrations are lost when ;jsessionid is removed in javascript files URL,WICKET-2877,12464779,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mimah35,mimah35,18/May/10 10:43,02/May/13 02:29,13/Mar/19 23:17,27/Aug/10 06:42,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,,,,0,ajax,session,wicket,,,,"When no http session exists the URL of wicket-ajax.js is suffxed with ;jsessionid token. 
Then you can register preCallHandler or postCallHandler for the ajax requests with Wicket.Ajax.registerPreCallHandler(..) and Wicket.Ajax.registerPostCallHandler(...).

But if the browser supports cookies the result of an ajax request return a response with the wicket-ajax.js without ;jsessionid token. Then the browser download this ""new"" file and evaluate it. This evaluation clears all the preCallHandler and postCallHandler registrations and the postCallHandler you registered is never call.

A workaround is to add explicitly the wicket-ajax.js in your page (without the ;jsessonid token).

As a fix maybe you can add 
if (typeof(Wicket.Ajax) == ""undefined"") { .. } around Wicket.Ajax = { ... } (or around the whole file) like in wicket-event.js to prevent this. 


",,,,,,,,,,,,,,,,,,,,,WICKET-2999,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-27 06:42:10.439,,,no_permission,,,,,,,,,,,203722,,,Fri Aug 27 06:42:10 UTC 2010,,,,,,0|i0kcbz:,116815,,,,,,,,27/Aug/10 06:42;ivaynberg;fixed by WICKET-2999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Packaged Resource URLs encoded with jsessionid,WICKET-2999,12471870,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,bht@actrix.gen.nz,bht@actrix.gen.nz,18/Aug/10 05:15,02/May/13 02:29,13/Mar/19 23:17,24/Aug/10 22:49,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,,,,0,,,,,,,"Packaged Resource URLs encoded with jsessionid even with Browser Cookie Support

With the provided testcase (this works in almost any testcase):
- Remove browser cookies for the test domain.
- Click on link ""Wicket"".
+ The browser hits the the wicket application for the first time with no cookie.
+ The application responds with a 302 response with a cookie, for a URL containing jsessionid.
+ The browser receives the cookie with the response and sends another request for a URL containing jsessionid.
+ The request contains the cookie header.

Expected behavior from now on:

The application knows that the browser has cookie support and should not rewrite URLs in links in the content.

Actual behavior:

The application responds with content where links contain jsessionid eg
<script type=""text/javascript"" src=""resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js;jsessionid=3884e
<form wicket:id=""testForm"" action="";jsessionid=388...

Two things: Form submit URLs and packaged resource URLs.

I guess the problem is not necessarily URL rewriting in all cases because the URL of the page must contain jsessionid, and that this URL may have been copied as a whole when building the submit URL of the form.

However, the jsessionid in packaged resources leads to double-fetching of resources such as wicket-event.js with jsessionid in the URL and without it which breaks browser cache behavior.

I am filing this as NetBeans project just in case it happens only in combination with GlassFish.",GlassFish 3.01,,,,,,,,,,,,WICKET-1572,,,,,,,,,18/Aug/10 05:16;bht@actrix.gen.nz;jsessionidInPackagedResources.zip;https://issues.apache.org/jira/secure/attachment/12452362/jsessionidInPackagedResources.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-18 05:36:19.721,,,no_permission,,,,,,,,,,,203835,,,Thu Aug 19 01:57:06 UTC 2010,,,,,,0|i0kc1z:,116770,,,,,,,,18/Aug/10 05:16;bht@actrix.gen.nz;NetBeans project,"18/Aug/10 05:36;ivaynberg;in 1.4 a potential way to implement it would be to have an ISessionIndependentResourceReference mixin and make packagedresourcereference implement it. then, when we generate a url for a resource reference we check if it implements this and do not pass the generated url through response.encode() so jsessionid is not appended, or use our urlutils to strip it.

in 1.5 we can most likely bake this right into resourcereference as an overridable method that returns a boolean, like boolean requiresSession() { return true; }",18/Aug/10 15:07;ivaynberg;actually isStateless() would be a better method name,19/Aug/10 01:57;ivaynberg;seems to work properly in 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransparentWebMarkupContainer appears magically for html elements without 'wicket:id' but with 'href' attribute ,WICKET-3111,12477532,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mgrigorov,mgrigorov,16/Oct/10 10:15,02/May/13 02:29,13/Mar/19 23:17,17/Oct/10 08:16,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"If in a Panel there is a <a> element with specified 'href' attribute but without 'wicket:id' then Wicket creates automatically TransparentWebMarkupContainer (respectfully a ComponentTag for it) for it and this causes problems with finding the inner real ComponentTag's.

See attached quickstart.",,,,,,,,,,,,,,,,,,,,,,17/Oct/10 08:05;mgrigorov;WICKET-3111.patch;https://issues.apache.org/jira/secure/attachment/12457366/WICKET-3111.patch,16/Oct/10 10:19;mgrigorov;wicket-3111.tgz;https://issues.apache.org/jira/secure/attachment/12457331/wicket-3111.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-17 08:14:15.14,,,no_permission,,,,,,,,,,,203935,,,Sun Oct 17 10:26:12 UTC 2010,,,,,,0|i0kbrz:,116725,,,,,,,,"16/Oct/10 10:19;mgrigorov;Attach a quickstart application.

In MyPanel.html just change 
<a href=""something/else""> to 
<a ahref=""something/else"">

and the unit test will pass.","17/Oct/10 08:10;mgrigorov;Hi Juergen,

Can you review the attached patch?
All unit tests pass successfully.
The quickstart works OK on 1.4-SNAPSHOT without any modifications.

I'll transform the quickstart app to unit test in the meantime.",17/Oct/10 08:14;jdonnerstag;The patch is exactly right. I was about to commit exactly that.,"17/Oct/10 08:36;mgrigorov;Thanks!

One more review, please: org.apache.wicket.markupFragments.MarkupFragmentTest.testPanelWithAutoComponent()
",17/Oct/10 09:20;jdonnerstag;They are looking good => applied. Thanks a lot for the effort.,"17/Oct/10 09:27;hudson;Integrated in Apache Wicket 1.5.x #412 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/412/])
    WICKET-3111 TransparentWebMarkupContainer appears magically for html elements without 'wicket:id' but with 'href' attribute

Add test case for Panel with <a href=""...""/> for which an auto component is added (TransparentWebMarkupContainer) and this causes that the any inner ComponentTags cannot be found with MarkupFragment#find(String childId)
fixed: TransparentWebMarkupContainer appears magically for html elements without 'wicket:id' but with 'href' attribute
Issue: WICKET-3111
","17/Oct/10 10:26;hudson;Integrated in Apache Wicket 1.5.x #413 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/413/])
    test cases for IMarkupFragment, getAssociatedMarkup(), getMarkup() and getMarkup(child). Thanks Martin
Issue: WICKET-3111
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InlineEnclosure are piling up on each render,WICKET-5085,12636001,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svenmeier,svenmeier,08/Mar/13 10:59,29/Apr/13 08:06,13/Mar/19 23:17,29/Apr/13 07:57,1.5.10,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket,,,,,,,0,,,,,,,"InlineEnclosureHandler#resolve() uses an auto-incremented id for its resolved InlineEnclosure, 

On the next render, a new instance will be resolved, since the id of the already resolved InlineEnclosure does not match the id in the markup.

But InlineEnclosures are not removed after render as other auto-components, thus all instances pile up in the owning container of the markup.
",,,,,,,,,,,,,,,WICKET-5162,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-04-28 11:37:28.427,,,no_permission,,,,,,,,,,,316493,,,Mon Apr 29 07:57:17 UTC 2013,,,,,,0|i1im2n:,316836,,,,,,,,08/Mar/13 13:07;svenmeier;id of enclosure is now stable in markup,"28/Apr/13 11:37;mgrigorov;There is still problem with unique id of InlineEnclosures.
The introduced counter is field member of InlineEnclosureHandler but IMarkupFilter instances are not shared between markup files. I.e. MyPanelA will use instance of InlineEnclosureHandler and MyPanelB will use another instance of InlineEnclosureHandler. So their produced markup will have unique 'counter' by its own, but the counters will collide in the final page markup.","28/Apr/13 11:48;mgrigorov;The problem is even deeper.
The problem with the many instances of InlineEnclosureHandler is easily solved by making the 'counter' variable static.

But there is still a problem when PanelA is repeated in Wicket repeater. In this case the produced markup for all renderings of PanelA have the same HTML ids. ","28/Apr/13 21:23;svenmeier;Why not let InlineEnclosure use Wicket's standard HTML id generation? That would be far easier than introducing yet another complexity in handling of enclosures:

diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java b/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java
index 3e4d230..d0d16ba 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java
@@ -58,7 +58,6 @@
 
 		// ensure that the Enclosure is ready for ajax updates
 		setOutputMarkupPlaceholderTag(true);
-		setMarkupId(getId());
 	}
 
 	@Override

IMHO this problem would better tracked on a separate issue. What's the fix version now?","29/Apr/13 07:57;mgrigorov;WICKET-5162 will provide the fix for 6.8.0, 1.5.11",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page#isPageStateless() may return wrong value,WICKET-5083,12635818,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,07/Mar/13 15:37,19/Apr/13 09:22,13/Mar/19 23:17,19/Apr/13 08:53,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.8.0,,,wicket,,,,,,,0,,,,,,,"This ticket is a follow up to WICKET-5078 (WICKET-4763 also seems related).

Page#isPageStateless() can be invoked at a time where onInitialize() hasn't been called yet. This causes pages to report that they are not stateful, even though they are, if the stateful components are added in onInitialize() and not in the constructor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-03-12 10:48:02.547,,,no_permission,,,,,,,,,,,316310,,,Fri Apr 19 09:22:41 UTC 2013,,,,,,0|i1ikxz:,316653,,,,,,,,"12/Mar/13 10:48;mgrigorov;From now on the page (and all components inside) will be initialized if they are not already.
The initialization will happen as late as possible. I.e. after the light checks - isBookmarkable and stateless hint.",12/Mar/13 12:44;mgrigorov;The commit has been reverted because it lead to executing #onInitialize() in the constructor of a page.,"12/Mar/13 12:46;mgrigorov;Once 6.8.0-SNAPSHOT is available I'll re-apply beee594d98f82d1bf8b59c3c69dbe33eb1743091 +
--- i/wicket-core/src/main/java/org/apache/wicket/page/AbstractPageManager.java
+++ w/wicket-core/src/main/java/org/apache/wicket/page/AbstractPageManager.java
@@ -127,10 +127,6 @@ public abstract class AbstractPageManager implements IPageManager
        @Override
        public void touchPage(IManageablePage page)
        {
-               if (!page.isPageStateless())
-               {
-                       getContext().bind();
-               }
                getRequestAdapter().touch(page);

and test it more extensively before 6.8.0","19/Apr/13 09:11;svenmeier;Hi Martin,

will you revert the revert (af890025eb8fd12459600cf2cf93bc78661589f4) too?

diff --git a/wicket-core/src/main/java/org/apache/wicket/Page.java b/wicket-core/src/main/java/org/apache/wicket/Page.java
index 86c0472..1467798 100644
--- a/wicket-core/src/main/java/org/apache/wicket/Page.java
+++ b/wicket-core/src/main/java/org/apache/wicket/Page.java
@@ -450,8 +450,6 @@
 
 		if (stateless == null)
 		{
-			internalInitialize();
-
 			if (isStateless() == false)
 			{
 				stateless = Boolean.FALSE;
","19/Apr/13 09:22;mgrigorov;Thanks, Sven!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester should send copies of its cookies ,WICKET-4989,12628123,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,michael.mosmann,michael.mosmann,17/Jan/13 23:18,17/Apr/13 10:22,13/Mar/19 23:17,19/Feb/13 16:23,1.5.9,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.7.0,,wicket,,,,,,,0,,,,,,,"There are some bugs related to cookie handling in BaseWicketTester.

Problem 1) a cookie set in the request should not be in the response unless manually set by the server code

Problem 2) wicket tester sends the original cookie instance to the server. If the server code manipulates the cookie anyhow (e.g. change its value) but do not send it back explicitly in the response then the original cookie in WicketTester (the request cookie) is updated while it shouldn't be.

A possible solutions for these problems can be found at:
https://github.com/apache/wicket/pull/28",any,,,,,,,,,,,,,,,,,,,,,17/Jan/13 23:19;michael.mosmann;quickstart-basewickettester-bug.zip;https://issues.apache.org/jira/secure/attachment/12565394/quickstart-basewickettester-bug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-02-19 16:23:23.332,,,no_permission,,,,,,,,,,,304974,,,Tue Feb 19 16:26:17 UTC 2013,,,,,,0|i17x87:,254353,,,,,,,,"19/Feb/13 16:23;mgrigorov;Now WicketTester keeps the cookies in the request. They are transferred to the next request unless there is a cookie in the lastResponse that has max-age==0 for a cookie with the same name, path and domain.
MockHttpServlet(Request|Response)#getCookies() returns copies of the cookies so the request and response do not share the same instances.  ","19/Feb/13 16:26;mgrigorov;One more thing that I believe is wrong in the current handling: some tests assert that a response cookie is in the response even after a redirect. 
A browser wont keep the cookie in all responses. It will be just in the first response (the redirect one) and from there on only the request headers will have the cookie, but not the headers for all following responses. 
I didn't change this behavior because it may break user applications.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester#getInputValue() does not support Select/SelectOption nor other custom components,WICKET-5027,12631063,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,06/Feb/13 13:52,26/Mar/13 22:14,13/Mar/19 23:17,06/Feb/13 14:12,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,The huge if-else statement in FormTester#getInputValue() is not extensible.,,,,,,,,,,,,,,,,,,,WICKET-5086,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,311559,,,Wed Feb 06 14:12:32 UTC 2013,,,,,,0|i1hrn3:,311905,,,,,,,,"06/Feb/13 14:12;svenmeier;getModelValue() is now properly implemented for ListMultipleChoice, CheckGroup, RadioGroup and Select",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlRenderer#removeCommonPrefixes() fails when contextPath+filterPrefix has more segments than the argument,WICKET-5073,12635131,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,04/Mar/13 14:31,21/Mar/13 10:09,13/Mar/19 23:17,21/Mar/13 10:09,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket,,,,,,,0,,,,,,,"I get this exception when trying to create a URL with RequestCycle#urlFor:

org.apache.wicket.WicketRuntimeException: An error occurred while generating an Url for handler 'ResourceReferenceRequestHandler{resourceReference=scope: org.apache.wicket.Application; name: ImageResource; locale: null; style: null; variation: null, pageParameters=publicId=[f74df62d-cbdb-49db-96e4-36e3ea62610e], type=[sr]}'
        at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:516) [wicket-core-6.6.0.jar:6.6.0]
        at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:473) [wicket-core-6.6.0.jar:6.6.0]
        at xxx.XXXWebApplication.urlFor(XXXWebApplication.java:161) ~[xxx-web-0.1.0-SNAPSHOT.jar:0.1.0-SNAPSHOT]
[...]
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        at java.util.ArrayList.rangeCheck(ArrayList.java:604) ~[na:1.7.0_10]
        at java.util.ArrayList.remove(ArrayList.java:445) ~[na:1.7.0_10]
        at org.apache.wicket.request.UrlRenderer.removeCommonPrefixes(UrlRenderer.java:319) ~[wicket-request-6.6.0.jar:6.6.0]
        at org.apache.wicket.request.UrlRenderer.renderRelativeUrl(UrlRenderer.java:220) ~[wicket-request-6.6.0.jar:6.6.0]
        at org.apache.wicket.request.UrlRenderer.renderUrl(UrlRenderer.java:117) ~[wicket-request-6.6.0.jar:6.6.0]
        at org.apache.wicket.request.cycle.RequestCycle.renderUrl(RequestCycle.java:529) [wicket-core-6.6.0.jar:6.6.0]
        at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:511) [wicket-core-6.6.0.jar:6.6.0]
        ... 46 common frames omitted

The app uses a context path and no filter path. I see that UrlRenderer#removeCommonPrefixes receives an empty list and the code in the method assumes that context path + filter path is always a common prefix and tries to remove it later from the empty list.",,,,,,,,,,,,,,,,,,,,,,04/Mar/13 18:01;cleiter;WICKET-5073-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12571914/WICKET-5073-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-03-04 15:28:17.994,,,no_permission,,,,,,,,,,,315624,,,Mon Mar 04 18:01:11 UTC 2013,,,,,,0|i1igpj:,315967,,,,,,,,04/Mar/13 15:28;svenmeier;I see two checks on #isEmpty() in removeCommonPrefixes(). Could you provide a quickstart or preferably an addition to UrlRendererTest?,"04/Mar/13 18:01;cleiter;Unfortunately I wasn't able to reproduce this without the select2 component, but the quickstart itself is very simple. I suspect the problem is that urlFor is called in the IResourceListener callback. 

Then context path for the quickstart is ""/qs"" - the problem doesn't occur if it is set to ""/"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket session id not up to date due to Tomcat session fixation protection,WICKET-4512,12552306,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,cmenzel,tro,tro,24/Apr/12 13:25,16/Mar/13 07:48,13/Mar/19 23:17,26/Apr/12 12:19,1.4.20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.21,,,wicket,,,,,,,0,,,,,,,"While using a form based login with a security constraint in web.xml and killing the session on page start the value of 'WebSession.get().getId()' is not equal to '((ServletWebRequest) RequestCycle.get().getRequest()).getHttpServletRequest().getSession(false).getId()'.

This is due to Tomcat's session fixation protection in Tomat 7.0.

We implemented the following workaround:

new HttpSessionStore() {
public Session lookup(Request request) {
   String sessionId = getSessionId(request, false);
   LOG.debug(""AbstractHttpSessionStore#lookup() [sessionId={}]"", sessionId);
   if (sessionId != null) {
      WebRequest webRequest = toWebRequest(request);
      Session session = (Session)getAttribute(webRequest, Session.SESSION_ATTRIBUTE_NAME);
      
      // it cannot be okay if the session id's are not equal!!!
      if (null != session && !sessionId.equals(session.getId())) {
         try {
            Field f = Session.class.getDeclaredField(""id"");
            f.setAccessible(true);
            f.set(session, null); // it will be resolved later from the httpSession
         } catch (Exception e) {
            throw new IllegalStateException(e);
         }
      }
      return session;
   }
   return null;
}
}",Tomcat 7.0.23,,,,,,,,,,,,,,,,,,,,,25/Apr/12 16:28;cmenzel;0001-WICKET-4512-don-t-store-session-id-longer-than-neede.patch;https://issues.apache.org/jira/secure/attachment/12524303/0001-WICKET-4512-don-t-store-session-id-longer-than-neede.patch,24/Apr/12 13:26;tro;sessionIdProblem.zip;https://issues.apache.org/jira/secure/attachment/12523973/sessionIdProblem.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-04-24 13:33:49.011,,,no_permission,,,,,,,,,,,237065,,,Mon May 07 14:41:07 UTC 2012,,,,,,0|i0k8nz:,116221,,,,,,,,"24/Apr/12 13:26;tro;Added quickstart 'sessionIdProblem' to show the problem.

After login click the button and take a look at your console to see the different session id's.",24/Apr/12 13:33;mgrigorov;Discussion: http://markmail.org/thread/dffvzfoz4m2uc2r3,"24/Apr/12 14:13;mgrigorov;To be able to run the quickstart I needed to add:

<role rolename=""myrole""/>
  <user username=""test"" password=""test"" roles=""myrole""/>

to $TOMCAT_HOME/conf/tomcat-users.xml.

The quickstart works fine on Wicket 1.5-SNAPSHOT. The printed session ids are identical. For example:

State: 0
Before invalidateNow: AF4807AAC8415994FD13E8BCEC769093
State: 1
[WICKET = 25949FBA12735264B218553648FC2F65] - [TOMCAT = 25949FBA12735264B218553648FC2F65]

Wicket 1.4.x will be tested later.","25/Apr/12 16:27;cmenzel;1.5 does a session.bind when storing the page at the end of the request, and it gets the new session id from there. In 1.4, that does not happen - the session object hangs on to the old id even when Tomcat7 changes the ID of the underlying HttpSession.

The simplest fix for 1.4 appears to be to simply null Session#id in Session#detach. Whenever the id is needed again, it will be restored from the underlying HttpSession, and so will always have the correct value.

I'm attaching a patch, so maybe one of the old-time devs can say whether this is a bad idea before we include this.",25/Apr/12 16:28;cmenzel;null the session id,"25/Apr/12 16:32;cmenzel;Clarification: What tomcat is doing here is not discarding the HttpSession object but simply changing its id. Thus the Wicket Session is still there in the next request, but has a stale ID.",26/Apr/12 06:38;tro;Patch works for me.,"26/Apr/12 12:19;cmenzel;fix pushed, should work now.","07/May/12 13:46;cmenzel;Thomas, could you try the current wicket-1.4.x branch again please? Instead of nulling the reference at the end of the request, I am now refreshing it. Some other parts (like WicketSessionFilter) need the value to be cached even in a non-Wicket request. Does it still work for you like this?","07/May/12 14:34;tro;Hi Carl-Eric, still works fine!","07/May/12 14:41;cmenzel;Awesome, thanks Thomas!",,,,,,,,,,,,,,,,,,,,,,,,,,,,
@SpringBean fails to invoke methods on bean with non-public methods,WICKET-5052,12633625,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,adupuis,adupuis,22/Feb/13 14:32,13/Mar/13 14:29,13/Mar/19 23:17,27/Feb/13 08:12,1.5.10,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket-spring,,,,,,,0,,,,,,,"@SpringBean fails to inject properly classes with a composite interface.

eg :

interface Something1 {}

interface Something2 {}

-edit-public-edit- interface Something extends Something1, Something2 {}

class TestBean implements Something {}

public class TestPage extends WebPage {
@SpringBrean
private Something something;
}

Trying to inject a bean implementing the Something interface does not seems to fail at first, but when calling any method an IllegalAccessException is thrown, similar to this :
java.lang.IllegalAccessException: Class org.apache.wicket.proxy.LazyInitProxyFactory$JdkHandler can not access a member of class {replaced} with modifiers ""public abstract""

I've attached different test cases reproducing the problem.

As a side note, referencing directly the implementing class like this seems to work : 

public class TestPage extends WebPage {
@SpringBrean
private TestBean something;
}

But it kind of defeats the purpose of DI.


-edit- The visibility of the main interface was incorrectly listed as package-private, it is public (otherwise you can't reference it).","Tomcat 6.0.35
Java 1.6.0.37
",,,,,,,,,,,,,,,,,,,,,22/Feb/13 14:32;adupuis;springbean-tests.tgz;https://issues.apache.org/jira/secure/attachment/12570475/springbean-tests.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-02-26 15:16:56.766,,,no_permission,,,,,,,,,,,314120,,,Wed Feb 27 14:20:09 UTC 2013,,,,,,0|i1i7fz:,314465,,,,,,,,"26/Feb/13 15:16;mgrigorov;The problem is related to the visibility of the interfaces. All of them have package visibility.
Make com.mycompany.service1.TestService1Sub1 and com.mycompany.service1.TestService1Sub2 public and the test passes.
No need to make the impls visible.

Wicket creates serializable proxy around the Spring bean. So it needs to be able to see the methods in the interfaces. The test passes if you use just pure Spring code only because the test class is in the same package as the service interfaces and impls. But since the proxy is in org.apache.wicket.ioc package it cannot see the methods.",27/Feb/13 08:12;mgrigorov;Fixed by making the method of the proxied bean accessible (method.setAccessible(true)).,"27/Feb/13 14:20;adupuis;I edited the issue description, as I had incorrectly listed the Something interface as package-private.

Otherwise, I think I understand why it isn't working at the moment, but I don't think I should have to expose the underlying interfaces by making them public for the injection to work.

Thanks for the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RestartResponseException broken with page instance and bookmarkable page,WICKET-5078,12635554,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,06/Mar/13 12:01,12/Mar/13 10:14,13/Mar/19 23:17,12/Mar/13 10:13,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket,,,,,,,0,,,,,,,"If I do throw new RestartResponseException(new OtherPage(""redirected!"")); on OtherPage itself and OtherPage is mounted then a completely new page is constructed and displayed instead of the instance I created.

Does not happen if the page isn't mounted or the current page is not OtherPage. If I hide the default constructor it also doesn't happen.

I'll attach a quickstart which demonstrates the problem.",,,,,,,,,,,,,,,,,,,,,,06/Mar/13 12:02;cleiter;WICKET-5078-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12572311/WICKET-5078-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-03-06 21:31:09.077,,,no_permission,,,,,,,,,,,316047,,,Tue Mar 12 10:13:22 UTC 2013,,,,,,0|i1ijbj:,316390,,,,,,,,"06/Mar/13 21:31;svenmeier;OtherPage is stateless and mounted, thus Wicket assumes that it can safely be recreated as needed.","07/Mar/13 08:35;svenmeier;If you're wondering why OtherPage is stateless although it contains an AjaxLink:
You're adding the AjaxLink in #onInitialize(), that's too late to influence the stateless detection, since a page's #onInitialize() is called shortly before render only :(.","08/Mar/13 14:54;mgrigorov;I think this should be improved.
org.apache.wicket.request.cycle.RequestCycle#setResponsePage(IRequestablePage) sets the stateless hint to false just to make sure that stateless pages are stored and used after the redirect.
See WICKET-3965.","12/Mar/13 10:13;mgrigorov;From now on ""new RestartResponseException(IRequestablePage)"" will mark the page as stateful to preserve it after the redirect. The same as in RequestCycle#setResponsePage(IRequestablePage) (WICKET-3965)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax update renders parent/child JS in different order than initial Page render,WICKET-5082,12635631,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,nickpratt,nickpratt,06/Mar/13 18:46,07/Mar/13 19:44,13/Mar/19 23:17,07/Mar/13 19:44,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,,,,,,,,0,,,,,,,"See attached quickstart.  On initial page load, the child Javascripts are rendered and executed first, followed by the parent's JS - in this case a Datatables.net JS. Everything works fine.

However, if you click on a link in the DefaultDataTable, we trigger a DDT refresh via Ajax, and then you can see that the parent's JS is executed first, before the child JS - this causes a problem since the parent JS modifies the visible rows in the table and Wicket can no longer find some of the child rows.

I expected the order of JS contributions to be the same for initial page render and any Ajax updates.",,,,,,,,,,,,,,,,,,,,,,06/Mar/13 21:05;nickpratt;Change_order_of_Ajax_child_visitation.patch;https://issues.apache.org/jira/secure/attachment/12572395/Change_order_of_Ajax_child_visitation.patch,06/Mar/13 18:46;nickpratt;quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12572365/quickstart.tar.gz,06/Mar/13 22:19;svenmeier;wicket-5082.patch;https://issues.apache.org/jira/secure/attachment/12572414/wicket-5082.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2013-03-06 22:19:37.722,,,no_permission,,,,,,,,,,,316124,,,Thu Mar 07 19:44:28 UTC 2013,,,,,,0|i1ijsn:,316467,,,,,,,,"06/Mar/13 19:38;nickpratt;So normal page rendering uses a ChildFirstHeaderRenderStrategy (since 1.5), but the Ajax header writing doesnt seem to follow that strategy and writes parent first then children (AbstractAjaxResponse.writeHeaderContribution() )is there a reason we couldnt render both normal and ajax updates with the same order?","06/Mar/13 20:39;nickpratt;I dug around, and here's what's happening:
In normal rendering, all the items go in to the on dom ready, all appended to the same list in the Response.  In an Ajax response, the Wicket added JS for the click handlers get stored in the response.appendJavaScripts, and then, even though the parent was visited last (I replaced the AbstractAjaxResponse.writeHeaderContributor with the same code from ChildFirstHeaderRenderStrategy), the parent's JS was going in to the domReadyJavaScripts - which ultimately are added to the page before the child JS (stored in appendJavaScripts).

While I have a workaround (an explicit check to see if we are in an AjaxRequest, and then adding to the appendJavaScripts in that case, and the modification of the wicket-core AbstractAjaxResponse to do a ChildFirst traverse), it seems a bit of a hack - I think the order of rendering and JS appends should be the same in both the non-Ajax and Ajax cases.

See attached patch file for changes needed in AbstractAjaxResponse in order to allow the workaround to work - without this change, I dont see a workaround.","06/Mar/13 22:19;svenmeier;Could you try wicket-5082.patch :
- it reuses the current IHeaderRenderStrategy to get the same ordering as on non-ajax request
- It changes AjaxEventBehavior to always render an OnDomReadyHeaderItem, the destinction betwenn Ajax and non-Ajax is superfluous actually.

Note that there are unit test failing with this change though.","07/Mar/13 00:08;nickpratt;Thanks Sven - your patch is simpler and works in my test cases and my application.  I noticed the two new tests failing - domReadyOrder and domReadyOrder2, although I dont know if the expected values are meaningful beyond just being a base for a string comparison.",07/Mar/13 19:44;svenmeier;The JavaScript ordering should now be consistent.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
form#onSubmit() is called on just replaced nested forms,WICKET-5076,12635305,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,fafi,fafi,05/Mar/13 10:06,05/Mar/13 14:32,13/Mar/19 23:17,05/Mar/13 14:32,1.5.6,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket-extensions,,,,,,,0,,,,,,,"I use wizard api from wicket extensions.
Next button is implemented like org.apache.wicket.extensions.wizard.NextButton.
It means: if step is complete wizardModel.next() is called and step content is replaced.

I send you example - see attachment.

In the example Step2Panel contains inner form ""innerForm"".
The problem is when we leave step 1 (click to next button) - innerForm.onSubmit from step 2 is called. 
Obversely when we leave step 2 innerForm.onSubmit is not called!

One solution is to call form.process(null) manually in Nextbutton.onClick before step content is replaced. It is wrong again becaouse innerForm.onSubmit is called twice.
","Linux debian unstable 64-bit
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-03-05 14:32:42.3,,,no_permission,,,,,,,,,,,315798,,,Tue Mar 05 14:32:42 UTC 2013,,,,,,0|i1ihs7:,316141,,,,,,,,"05/Mar/13 10:36;fafi;Example is available on
https://github.com/fafejtao/wicketWizardInnerFormBug",05/Mar/13 14:32;svenmeier;forms are now collected before delegating to the form submitter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When modal window is closed page scrolls to top,WICKET-5075,12635201,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,04/Mar/13 20:28,04/Mar/13 20:42,13/Mar/19 23:17,04/Mar/13 20:42,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,,,,,,,,0,,,,,,,"the current function passed to onCloseButton() does not abort the current event, which navigates to # since that is whats in the href of the link, which in turn scrolls the page to the top.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,315694,,,2013-03-04 20:28:46.0,,,,,,0|i1ih53:,316037,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cookies#isEqual(Cookie, Cookie) may fail with NullPointerException",WICKET-5072,12635087,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,04/Mar/13 08:58,04/Mar/13 09:03,13/Mar/19 23:17,04/Mar/13 09:03,1.5.10,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket,,,,,,,0,,,,,,,"If c1.getPath == null but c2.getPath != null then a NPE will occur.
Same is valid for the 'domain' property.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,315580,,,2013-03-04 08:58:26.0,,,,,,0|i1igfr:,315923,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectOptions fails to render text on openClose tag,WICKET-5067,12634623,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,28/Feb/13 15:08,28/Feb/13 15:18,13/Mar/19 23:17,28/Feb/13 15:18,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-extensions,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,315116,,,Thu Feb 28 15:18:34 UTC 2013,,,,,,0|i1idl3:,315460,,,,,,,,28/Feb/13 15:18;svenmeier;tag is now modified to TagType.OPEN (as Label does it too),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextFields submits Form if a choice is selected via enter-key,WICKET-4857,12614817,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,marcel.hoerr,marcel.hoerr,05/Nov/12 15:48,28/Feb/13 06:58,13/Mar/19 23:17,06/Nov/12 08:39,6.0.0,6.1.0,6.1.1,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.3.0,,,wicket-extensions,,,,,,,0,,,,,,,"I am not quite sure if this is really a bug, but the behaivor of wicket 1.5 and wicket 6 differs in the following situation:

In wicket 1.5 a user could select a choice in an AutoCompleteTextField via the enter-key and the underlying Form was not submitted.
In wicket 6 however the Form gets submitted in that case.

Note: the behaivor is in both versions identical (aka no form submit) if no button is added to the form. Thus in both versions the Form is not submitted if the user selects a choice via mouse-click.

While in some use cases it is useful that hitting the enter-key in TextFields submits the form - e.g. in a search panel, in this particular use case the form should not be submitted. Or at least, there should be a (built in) hook to prevent this behaivor.",,,,,,,,,,,,,,,WICKET-4998,,,,,,,05/Nov/12 15:50;marcel.hoerr;myproject-1.5.zip;https://issues.apache.org/jira/secure/attachment/12552115/myproject-1.5.zip,05/Nov/12 15:50;marcel.hoerr;myproject-6.2.0.zip;https://issues.apache.org/jira/secure/attachment/12552116/myproject-6.2.0.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-11-05 18:04:32.401,,,no_permission,,,,,,,,,,,255291,,,Thu Feb 28 06:58:07 UTC 2013,,,,,,0|i0eqqf:,84093,,,,,,,,05/Nov/12 15:50;marcel.hoerr;quickstarts for wicket 1.5 and wicket 6 added.,"05/Nov/12 18:04;bitstorm;Returning false instead of jqEvent.stopPropagation() at line 230  (file wiket-autocomplete.js) solves the problem. Alternatively we can add method jqEvent.preventDefault() 
","05/Nov/12 18:11;bitstorm;Ok, this post contains a sort of explanation.

http://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false",06/Nov/12 08:39;mgrigorov;Thanks Andrea!,06/Nov/12 15:03;marcel.hoerr;Thanks!,"27/Feb/13 21:12;mitnpatel;Encounter this bug recently and I am using Wicket 6.6.0.  I can reproduce this in 6.6.0.  

Tested Marcel's both quickstart with 6.3.0 and 6.6.0. 

Noticed  for 6.3.0 and 6.6.0:- 
 
 1)  Selecting AutoCompleteTextFields via enter-key fill input box with selected item and it do not submits( AjaxButton's onSubmit method is called) form but cursor focus is in same input box and now if you press enter-key it submit form

 2) Click in AutoCompleteTextFields and just press enter-key still submits form.   

 3) For TextField enter-key press,  form is still getting submitted 

I apologizes if this is not place for above comment as this issue is already closed or these use cases are not valid for this issue    ","27/Feb/13 21:32;svenmeier;Autocomplete has been continuously improved for Wicket 6.x, the latest fixed is for WICKET-5055. Could you try out Wicket trunk, and if you still experience a problem please open a new issue.

Please double check the old behavior, e.g. 2) submits the form in 1.5.x too.",28/Feb/13 06:58;mitnpatel;I tested with 6.7.0-SNAPSHOT and behavior was same so I created new issue WICKET-5064 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
relativeUrl's begins with ./,WICKET-4903,12618548,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,ann,ann,03/Dec/12 10:53,27/Feb/13 09:45,13/Mar/19 23:17,27/Feb/13 09:45,6.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,,,,,,,,1,,,,,,,"In method renderRelativeUrl in UrlRenderer the check url.isAbsolute() is removed. For wich reason is this removed? Because now our relativeurls link /js/name.js are rendered ./js/name.js

How can I fix this?

The url is made by Url.parse(""/js/name.js"").
",,,,,,,,,,,,,,,,,,,,,,05/Dec/12 09:54;mgrigorov;4903.tgz;https://issues.apache.org/jira/secure/attachment/12556083/4903.tgz,04/Dec/12 07:29;ann;TestRelativeUrls.zip;https://issues.apache.org/jira/secure/attachment/12555901/TestRelativeUrls.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-12-03 11:02:53.214,,,no_permission,,,,,,,,,,,293381,,,Wed Feb 27 09:45:53 UTC 2013,,,,,,0|i0szdz:,167210,,,,,,,,"03/Dec/12 11:02;mgrigorov;Please provide a quickstart that demonstrates the use case.
The method name says that the result is a *relative* url. UrlRenderer also provides #renderFullUrl() and #renderContextRelativeUrl().
The change has been made for solving WICKET-4645.","04/Dec/12 14:07;svenmeier;Maybe the following line in your code is the cause of a misunderstanding:

            response.render(JavaScriptUrlReferenceHeaderItem.forReference(TestResourceReference.get()));

You're calling the static method *JavaScriptHeaderItem*#forReference(), probably thinking that this will generate an absolute Url as JavaScriptUrlReferenceHeaderItem's javadoc promises. But all this does is creating a JavaScriptReferenceHeaderItem, which uses a relative Url (as almost anything in Wicket).
","05/Dec/12 09:11;marie;Is that something that can be solved at our side? 
Or should it be something provided through the wicket framework, a new method in JavaScriptUrlReferenceHeaderItem?

We need this functionality for all our javascript includes. Because this javascript doesn't reside in our project code and we don't want to run against crossdomain loading problem.

Thanks !",05/Dec/12 09:54;mgrigorov;I believe what you need is something like this.,"05/Dec/12 10:07;marie;I think there is a misunderstanding..
Our javascript isn't inside our webapp-directory.

For example:
www.mysite.com/mywicketproject/index.html
www.mysite.com/js/myjs.js

But we don't want to include the js as ""www.mysite.com/js/myjs.js"", but as ""/js/myjs.js"".
The linking of the js is dealed with in apache / varnish.","05/Dec/12 10:19;mgrigorov;Please give more details in the initial report. I spend my time debugging what is the use case.

Since you rewrite the url then I think you can use absolute urls like CDN ones - http://my.special.cdn.url/js/myjs.js. mod_rewrite can transform this to whatever you actually need.
That is TestResourceReference should use UrlResourceReference dependencies with fully qualified urls like the one above.","05/Dec/12 10:31;marie;Sorry for that !
It's sometimes hard for us to describe a usecase that is so clear for us, but indeed not always for somebody else.
Thanks for the time, and we'll try harder to explain in the future.

About the jira issue, we'll try with full url's instead. 
This worked in 1.5.8 and 6.0.0, so we thought it was a bug.
But now we know that it's just not supported anymore.","05/Dec/12 14:06;marie;We've been looking further into it, and found WICKET-4502. 
There you propose to build the url in the IRequestMapper#mapHandler().
That's the way we tried to include the links with absolute urls too.
Our js need to have the same host and port as the wicket application, otherwise we have problems with crossside js loading.
We tried to render the url as full, by adding the host and port, but wicket removes it and makes it relative.
Thanks for looking into this once more.","05/Dec/12 14:25;mgrigorov;> Our js need to have the same host and port as the wicket application, otherwise we have problems with crossside js loading.

But you rewrite  http://my.special.cdn.url/js/my.js to http://your.site.com/js/my.js, no ?","06/Dec/12 07:10;marie;Can it be made possible in wicket? This was the case before, and looking at other issues (f.e. WICKET-4502) we aren't the only ones needing it.
We have over more than 20 hostnames to support.
http://abc.mysite.com
http://def.mysite.com
..
The way you propose with the rewriting will be very hard to implement.",27/Feb/13 09:45;mgrigorov;UrlResourceReference has been improved to render its url as is. it wont be recalculated against the base url (the currently rendered page url). ,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inline enclosures don't work with different namespace,WICKET-5048,12633158,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,20/Feb/13 09:39,27/Feb/13 09:42,13/Mar/19 23:17,27/Feb/13 09:42,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket,,,,,,,0,,,,,,,"Fails with ""Tag expected"" from MarkupStream, I'll attach a unit test.",,,,,,,,,,,,,,,,,,,,,,20/Feb/13 09:39;cleiter;WICKET-5048-testcase.patch;https://issues.apache.org/jira/secure/attachment/12570099/WICKET-5048-testcase.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,313654,,,2013-02-20 09:39:19.0,,,,,,0|i1i4kf:,313999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Problem using AutoCompleteBehavior with AjaxFormComponentUpdatingBehavior(""onchange"")",WICKET-4990,12628170,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,jamesyong,jamesyong,18/Jan/13 07:58,21/Feb/13 12:10,13/Mar/19 23:17,25/Jan/13 19:16,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,"
Given a text field that uses the following behaviors: 
A.  AjaxFormComponentUpdatingBehavior(""onchange""); 
B.  AutoCompleteBehavior

Say I enter an letter 'U' into the text field, and an auto-suggest list pops up.
When I select an item (e.g. USD) from the auto-suggest list using a mouse, the onchange event from behavior A  is fired twice. The 1st onchange event is for 'U' and the 2nd onchange event is for 'USD'. 

This issue is mentioned as a regression by Sven Meier and related to WICKET-1280.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-25 19:16:35.241,,,no_permission,,,,,,,,,,,305064,,,Thu Feb 14 06:57:34 UTC 2013,,,,,,0|i187zr:,256097,,,,,,,,"24/Jan/13 02:00;jamesyong;Here is how I fix it:
Add the following to auto-complete.js / auto-complete.min.js,

var onchangehandlers;
....
function showAutoComplete(){var input=Wicket.$(elementId);
if(onchangehandlers==null || onchangehandlers.length==0){
  var c = (jQuery.hasData(input)&&jQuery._data(input)).events['change'];
  if (c!=null&&c.length>0){
    onchangehandlers=[];
	jQuery.each(c, function(index, value) {  onchangehandlers[index]=value.handler; });
	jQuery(input).off('change');
  }
}
....
function hideAutoComplete(){
if(onchangehandlers!=null){
jQuery.each(onchangehandlers, function(index, value) {  jQuery(Wicket.$(elementId)).on('change', onchangehandlers[index]); });
onchangehandlers = null;
}
......
","25/Jan/13 19:16;svenmeier;Please test thoroughly, I had to change a few things to adapt for the new non-inline event handlers.","13/Feb/13 17:11;jamesyong;Hi Sven,

I have found some regressions caused by my code changes. Still testing some additional code changes.

Regards,
James","13/Feb/13 17:41;svenmeier;Next release will be built soon, so hurry up with your testing.","14/Feb/13 02:27;jamesyong;Hi Sven,

I need much more time to fix the regression. Please revert the change. Sorry about that.

Regards,
James",14/Feb/13 06:57;svenmeier;Please open a new issue when you're ready. Autocomplete works fine here with the recent changes together with AjaxFormComponentUpdatingBehavior.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket-event.js defined Function.prototype.bind doesn't support prepended arguments,WICKET-5026,12630656,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,costescuandrei,costescuandrei,04/Feb/13 15:20,19/Feb/13 16:02,13/Mar/19 23:17,19/Feb/13 16:02,1.5.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,,,wicket,,,,,,,0,,,,,,,"As the title says, for Safari, wicket defines Function.prototype.bind (cause the browser doesn't have it).
But it's not compatible to what the other browsers and frameworks offer. Prepending arguments should be allowed.

In Wicket 1.6 I don't know if this is still relevant with the switch to jQuery (which has 'proxy'). The .js at least is no longer there.

Just replace the existing Function.prototype.bind declaration with:
{code:JavaScript}
if (Function.prototype.bind == null) {
	Function.prototype.bind = function(context) {
		var method = this;
		var args = Array.prototype.slice.call(arguments, 1);
		return function() {
			return method.apply(context, args.concat(Array.prototype.slice.call(arguments)));
		};
	}
}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-02-04 15:27:04.743,,,no_permission,,,,,,,,,,,311152,,,Tue Feb 05 07:27:55 UTC 2013,,,,,,0|i1hp4v:,311499,,,,,,,,"04/Feb/13 15:26;costescuandrei;For some reason, JIRA markup doesn't work to show the code nicely...",04/Feb/13 15:27;mgrigorov;Can you give an example of what doesn't work ?,"04/Feb/13 15:28;mgrigorov;> For some reason, JIRA markup doesn't work to show the code nicely...
Use .patch files for better expressing what change is needed ;-)","04/Feb/13 20:07;costescuandrei;function f(a, b, c) {
    alert(a + ', ' + b + ', ' + c);
}

var x = f.bind(undefined, 1);
x(2, 3);

Should show ""1, 2, 3"" instead of ""2, 3, ..."" in Safari just like in other browsers.
This time I had a good reason for wanting nicely formatted code in the comment :).
For more complicated things I (usually) create(d) a patch or a pull request. This time it seemed like more work that way (I'm not using 1.5 locally) but you're right - it would have been clear.","05/Feb/13 07:27;papegaaij;I'm not a fan of extending prototypes of built-in types, but if it's done, I think it's best to take the function from MDN: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade Atmosphere to 1.0.10,WICKET-5045,12632792,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,papegaaij,papegaaij,18/Feb/13 06:45,19/Feb/13 15:00,13/Mar/19 23:17,19/Feb/13 15:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-atmosphere,,,,,,,0,,,,,,,Quite a few bugs have been fixed in Atmosphere 1.0.10.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,313288,,,Tue Feb 19 15:00:27 UTC 2013,,,,,,0|i1i2b3:,313633,,,,,,,,19/Feb/13 15:00;papegaaij;Done,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Atmosphere + DateLabel,WICKET-5044,12632768,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,floaz,floaz,17/Feb/13 23:06,19/Feb/13 14:53,13/Mar/19 23:17,19/Feb/13 14:53,6.2.0,6.3.0,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-atmosphere,,,,,,,0,atmosphere,DateLabel,ServletWebRequest,WebClientInfo,,,"When i add a new DateLabel from atmosphere subscribed method. I get an exception, because of the 
DateConverter.getClientTimeZone().
There is only an AtmosphereWebRequest, not a ServletWebRequest which is needed by WebClientInfo class. There is no client info available from atmosphere.

------------------------

The exception:

java.lang.ClassCastException: org.apache.wicket.atmosphere.AtmosphereWebRequest cannot be cast to org.apache.wicket.protocol.http.servlet.ServletWebRequest
     at org.apache.wicket.protocol.http.request.WebClientInfo.<init>(WebClientInfo.java:65)
     at org.apache.wicket.protocol.http.WebSession.getClientInfo(WebSession.java:148)
     at org.apache.wicket.protocol.http.WebSession.getClientInfo(WebSession.java:37)
     at org.apache.wicket.datetime.DateConverter.getClientTimeZone(DateConverter.java:193)
     at org.apache.wicket.datetime.DateConverter.convertToString(DateConverter.java:152)
     at org.apache.wicket.datetime.DateConverter.convertToString(DateConverter.java:43)
     at org.apache.wicket.Component.getDefaultModelObjectAsString(Component.java:1671)
     at org.apache.wicket.Component.getDefaultModelObjectAsString(Component.java:1643)
     at org.apache.wicket.datetime.markup.html.basic.DateLabel.onComponentTagBody(DateLabel.java:297)


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-02-19 14:53:05.32,,,no_permission,,,,,,,,,,,313264,,,Tue Feb 19 14:53:05 UTC 2013,,,,,,0|i1i25r:,313609,,,,,,,,19/Feb/13 14:53;papegaaij;AtmosphereWebRequest is now a ServletWebRequest.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BufferedResponseMapper doesn't recognize the the stored response because the session id is not available,WICKET-4163,12528447,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,24/Oct/11 08:56,14/Feb/13 15:17,13/Mar/19 23:17,24/Oct/11 09:00,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"WebPageRenderer logs a warning that there is a stored response but it wasn't picked by BufferedResponseRequestHandler:

WARN  - WebPageRenderer            - The Buffered response should be handled by BufferedResponseRequestHandler

The problem is in org.apache.wicket.request.mapper.BufferedResponseMapper.getSessionId() which was wrongly optimized to not create a new Session with http://svn.apache.org/viewvc?view=revision&revision=1186125

Workaround until 1.5.3 is released:

MyApplication#init() {

  mount(new BufferedResponseMapper() {
    protected String getSessionId()
	{
		return Session.get().getId();
	}
  });
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-19 09:54:21.112,,,no_permission,,,,,,,,,,,214307,,,Thu Feb 14 15:17:25 UTC 2013,,,,,,0|i0k94v:,116297,,,,,,,,"19/Jul/12 09:54;tapter;I still (or again?) get this in Wicket 1.5.7 when using setRedirect on a mounted page at least. There the new page is created and stored and the user is redirected to mypage?2 for example. Upon handling this URL, this WARN is issued every time!",06/Feb/13 10:10;rniestroj;Got the same error on Wicket 6.5.0. Dont know where it come from. Maybe i will have to revert on SVN revision by revision to find out what wrong. Clearing browser cache doesnt change anything. Closing browser changes. When i click an ajax link or sth like that the first time the request goes to the server but nothing happens. Second time it then works ok.,14/Feb/13 15:17;rniestroj;What are the possible causes of this  warning? The Buffered response should be handled by BufferedResponseRequestHandler  ? I have this when i enter a certain panel and try through an ajaxlink to go to another panel. The ajax can be on this panel or on another panel. I have to click three times until the debugger stops in the onClick method of the link.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Post Parameters are lost when continueToOriginalDestination() is called,WICKET-5036,12631963,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,slowery23,slowery23,12/Feb/13 15:22,14/Feb/13 14:48,13/Mar/19 23:17,14/Feb/13 14:45,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,"if a RestartResponseAtInterceptPageException() is thrown during a POST request, the InterceptData.set() method is saving off the parameters, but the call to continueToOriginalDestination() doesn't read these parameters and they get lost on the subsequent call (see lines 173-174 of RestartResponseAtInterceptPageException).

I will attach a quickstart demoing this.  In the quickstart, I would expect the call to continueToOriginalDestination() on the EulaPage to call into the authenticate() on the session and now they should be authenticated, but that call never happens.  Instead, it goes back to the SignInPage.",,,,,,,,,,,,,,,,,,,,,,12/Feb/13 15:23;slowery23;wicket-post-problems.zip;https://issues.apache.org/jira/secure/attachment/12568983/wicket-post-problems.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-02-14 11:25:41.326,,,no_permission,,,,,,,,,,,312459,,,Thu Feb 14 14:48:03 UTC 2013,,,,,,0|i1hx6v:,312805,,,,,,,,12/Feb/13 15:23;slowery23;Quickstart demoing the bug,"14/Feb/13 11:25;svenmeier;My commit is to blame for this one:

wicket-core/src/main/java/org/apache/wicket/RestartResponseAtInterceptPageException.java
diff --git a/wicket-core/src/main/java/org/apache/wicket/RestartResponseAtInterceptPageException.java b/wicket-core/src/main/java/org/apache/wicket/RestartResponseAtInterceptPageException.java
index cdfa766..def29ba 100644
--- a/wicket-core/src/main/java/org/apache/wicket/RestartResponseAtInterceptPageException.java
+++ b/wicket-core/src/main/java/org/apache/wicket/RestartResponseAtInterceptPageException.java
@@ -143,7 +143,11 @@
 
 		public static InterceptData get()
 		{
-			return Session.get().getMetaData(key);
+			if (Session.exists())
+			{
+				return Session.get().getMetaData(key);
+			}
+			return null;
 		}
 
 		public static void clear()

I've create WICKET-5040 to find a solution to this issue.",14/Feb/13 14:45;svenmeier;see WICKET-5040,"14/Feb/13 14:48;svenmeier;BTW SignInForm#onMethodMismatch() (inherited from StatelessForm) returns ABORT, so you'll probably have to override this or otherwise the continued post parameters will not be accepted as a submit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session.exists() returns false when ThreadContext#session is not set to current session,WICKET-5040,12632348,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,14/Feb/13 10:41,14/Feb/13 14:44,13/Mar/19 23:17,14/Feb/13 14:44,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,"There are several places in Wicket which check for the existence of a Session before actually getting a reference to it, e.g. FeedbackCollector:

	public final List<FeedbackMessage> collect(final IFeedbackMessageFilter filter)
	{
		...
		if (includeSession && Session.exists())
		{
			messages.addAll(Session.get().getFeedbackMessages().messages(filter));
		}
	}

If no one has called Session#get(), all calls to Session#exists() return false although a session might exist in the session store, i.e. it might just not be set to ThreadContext#session already.",,,,,,,,,,,,,,,,,,,WICKET-5036,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,312844,,,Thu Feb 14 14:44:54 UTC 2013,,,,,,0|i1hzkn:,313190,,,,,,,,"14/Feb/13 14:11;svenmeier;With commit:80adc54 RestartResponseAtInterceptPageException.InterceptData#get() checks for existence of a session with Session#exists() before calling Session#get():

			if (Session.exists())
			{
				return Session.get().getMetaData(key);
			}
			return null;

This was changed so that RestartResponseAtInterceptPageException#MAPPER doesn't create a (temporary) session if not needed (e.g. when a resource is requested).

Note that Session#exists()'s javadoc is ambiguous about this detail:

	/**
	 * Checks if the <code>Session</code> threadlocal is set in this thread
	 * 
	 * @return true if {@link Session#get()} can return the instance of session, false otherwise
	 */
	public static boolean exists()

It claims to return true if #get() can return the session. If there's a current session but it is not set on the ThreadContext yet, #exists() will return false, but #get() will return the session from the session store.",14/Feb/13 14:44;svenmeier;Session#exists() now check session store too,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
script tag with wicket:id does not throw exception if it was not added in the code,WICKET-5035,12631827,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,kgignatyev,kgignatyev,11/Feb/13 22:02,12/Feb/13 21:24,13/Mar/19 23:17,12/Feb/13 21:23,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,"Have markup

<wicket:panel>

    <b> this is my component</b>

    <script language=""JavaScript"" wicket:id=""my-script"">

    </script>

</wicket:panel>

and code

public MyComponent(String id) {
        super(id);
        setOutputMarkupId(true);

        String script = getScript();
        Label scriptLabel = new Label(""my-script"",script);
        scriptLabel.setEscapeModelStrings(false);
        //add( scriptLabel); 
    }

response simply contains empty CDATA for the script tag body without throwing exception that component is not added in the code

<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><component id=""container5""  encoding=""wicket1"" ><![CDATA[<div wicket:id=""container"" id=""container5"">
    <div wicket:id=""replaceable"" id=""replaceable6""><wicket:panel>

    <b> this is my component</b>

    <script language=""JavaScript"" wicket:id=""my-script"">
/*<![CDATA[*/


    
/*]^]^>*/
</script>

</wicket:panel></div>
</div>]]></component></ajax-response>

adding label in the code adds script body as expected.

repro  project attached 
",,,,,,,,,,,,,,,,,,,,,,11/Feb/13 22:03;kgignatyev;wicket-extra-caret.tgz;https://issues.apache.org/jira/secure/attachment/12568895/wicket-extra-caret.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-02-12 21:23:47.419,,,no_permission,,,,,,,,,,,312323,,,Tue Feb 12 21:23:47 UTC 2013,,,,,,0|i1hwcn:,312669,,,,,,,,12/Feb/13 21:23;svenmeier;a script or style tag with wicket:id will now fail if no component can be resolved,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tracking id retrieved in AtmosphereBehavior#onRequest() is always 0,WICKET-4723,12604360,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,linekin,linekin,22/Aug/12 10:55,11/Feb/13 08:36,13/Mar/19 23:17,11/Feb/13 08:36,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"jquery.atmosphere.js will always use 0 as initial tracking-id to send request,
and then reassign it from server response.

AtmosphereBehavior#getUUID() shouldn't return the tracking-id from request header, since the initial request's tracking-id is 0.
The correct way to retrieve tracking-id is calling AtmosphereResource#uuid()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-08-23 11:04:24.921,,,no_permission,,,,,,,,,,,293353,,,Mon Feb 11 08:36:47 UTC 2013,,,,,,0|i0sxdj:,166884,,,,,,,,"23/Aug/12 08:31;linekin;After some tracing and testing, I found that  AtmosphereResource#uuid() wil return wrong tracking-id under some circumstances.

The uuid in AtmosphereResource is retrieved from ""response"" header X_ATMOSPHERE_TRACKING_ID, but it's set only when the ""request"" header X_ATMOSPHERE_TRACKING_ID is null or equals ""0"".

This should be a issue of atmosphere, but currently to work with atmosphere 1.0.0.beta5, the only way to get the correct tracking-id I can see is via
resource.getRequest().getAttribute(ApplicationConfig.SUSPENDED_ATMOSPHERE_RESOURCE_UUID);

the resource above is AtmosphereResource.","23/Aug/12 11:04;papegaaij;I've added a fallback in case the uuid is ""0"". For a real solution, I need Jeanfrancois Arcand to explain how this is supposed to work in Atmosphere.","27/Aug/12 20:14;linekin;a related issue of atmosphere.
https://github.com/Atmosphere/atmosphere/issues/544

AtmosphereResource#uuid() will be fixed to return the right tracking-id",11/Feb/13 08:36;papegaaij;This has been fixed some time ago.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"the option name ""maxRequests"" is wrong in jquery.wicketatmosphere.js",WICKET-4724,12604361,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,linekin,linekin,22/Aug/12 11:02,11/Feb/13 08:29,13/Mar/19 23:17,11/Feb/13 08:29,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"the option name should be ""maxRequest"" not ""maxRequests""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-08-23 10:26:59.378,,,no_permission,,,,,,,,,,,293354,,,Mon Feb 11 08:29:43 UTC 2013,,,,,,0|i0sxdr:,166885,,,,,,,,"23/Aug/12 10:26;papegaaij;This is indeed wrong, however I'm wondering if this option is still needed. I added it because with long-polling, the browser stopped connecting after 60 cycles. Is this still the case? If so, I think this should be fixed in Atmosphere itself, because with long-polling you do not want the browser to stop connecting, not even after 100000 cycles. Atmosphere should differentiate between failed connections and normal disconnections.",27/Aug/12 19:54;mgrigorov;The value could be set to -1 and this will disable the max.,"27/Aug/12 20:04;mgrigorov;From Atmosphere mailing lists:

> Hi folks,
> I have just found that jquery plugin uses maxRequest 60 by default.
> According to [1] maxRequest is 'The maximum number of requests that will be executed. Once the maximum gets reached, the connection will be closed.'
> However it makes sense only for long-polling transport, because the connection is closed each time when client pushes/recieves the message. But i am not sure how it affects the streaming transport.
> I can send as many messages as i want with streaming transport. I suppose only connection interrupt (or timeout and maxStreamingLength ?)  between client and server may force reconnect, so the counter will be increased. So after some amount of time the jquery plugin may silently stop to work and you will not find the reason easily if you don't know about the default value of this parameter :) . So behavior of this parameter in streaming transport is not consistent with pooling transport.
> Why max requests are limited by default? Does it make any sense?

JF Arcand:
Because of proxy that close connection (with all transports), we need to stop sending requests after some time ... if the server goes down or anything related, the browser will keep trying, so that's why I've added this property. Does it make sence?",11/Feb/13 08:29;papegaaij;With WICKET-4946 and a recent version of Atmosphere this issue is fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"InlineEnclosureHandler always uses ""wicket"" namespace",WICKET-5020,12630135,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,31/Jan/13 14:02,31/Jan/13 14:26,13/Mar/19 23:17,31/Jan/13 14:26,1.5.9,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,"The name of the wicket namespace is hardcoded in InlineEnclosureHandler:

public final static String INLINE_ENCLOSURE_ATTRIBUTE_NAME = ""wicket:enclosure"";

This constant is also used by InlineEnclosure and was probably never meant to be part of the public API.

These classes should respect the user defined namespace provided by the MarkupResourceStream.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,310631,,,2013-01-31 14:02:27.0,,,,,,0|i1hlwv:,310976,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket Enclosure fails with more than one component,WICKET-5013,12629889,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,magne,magne,30/Jan/13 12:56,31/Jan/13 13:40,13/Mar/19 23:17,31/Jan/13 13:40,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.6.0,,wicket,,,,,,,1,,,,,,,"An enclosure like:

<wicket:enclosure child=""message"">
  <span wicket:id=""message"" />
  <a href=""#"" wicket:id=""link""></a>
</wicket:enclosure>

fails with:
org.apache.wicket.WicketRuntimeException: The component(s) below failed to render. Possible reasons could be that: 1) you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered), 2) if your components were added in a parent container then make sure the markup for the child container includes them in <wicket:extend>.

1. [ExternalLink [Component id = link]]

It will report failed rendering for all components within the enclosure except the child.
This works if I turn the enclosure into an inline enclosure:

<div wicket:enclosure=""message"">
  <span wicket:id=""message"" />
  <a href=""#"" wicket:id=""link""></a>
</div>

I got this error when upgrading from Wicket 6.2.0 to 6.3.0.

I also noticed that the AjaxEnclosureListener only visits the InlineEnclosures.","Sun JDK 1.7.0_11
Ubuntu 12.10",,,,,,,,,,,,,,,,,,,,,30/Jan/13 19:13;cleiter;WICKET-5013.zip;https://issues.apache.org/jira/secure/attachment/12567189/WICKET-5013.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-30 13:00:58.834,,,no_permission,,,,,,,,,,,310385,,,Thu Jan 31 13:40:19 UTC 2013,,,,,,0|i1hkef:,310730,,,,,,,,"30/Jan/13 13:00;mgrigorov;Please attach a quickstart application that demonstrates the problem.
Also try with <span ...></span> instead of the short version that you use.
And try with 6.5.0 too","30/Jan/13 19:12;cleiter;Now that was difficult to reproduce in a quickstart. It happened only if I added the DebugBar. I traced it further down and this happens because getPage().detach() is called (inside DebugBar somewhere, to measure page size). This method calls MarkupContainer#detachChildren and there is this:

				// We need to keep InlineEnclosures for Ajax request handling.
				// TODO this is really ugly. Feature request for 1.5: change auto-component that
				// they don't need to be removed anymore.
				if (component.isAuto() && !(component instanceof InlineEnclosure))
				{
					children_remove(i);
				}

If I add && !(component instanceof Enclosure) it avoids the problem. I don't have a any real insight how auto components work and so I'm quite certain that this is the wrong approach. :)

I'll add a quickstart so that someone can have a look at it.",30/Jan/13 19:45;cleiter;WICKET-5014 is related. detach() is also called here from the WicketObjets.sizeOf(). The change that causes these troubles was introduced by WICKET-4867.,"31/Jan/13 13:40;mgrigorov;The objects will be cloned before detaching them and measuring their size from now on, so the original component wont be detached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rendered URL is resulting with double slash when using AuthenticatedWebApplication,WICKET-4935,12624659,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,toxic53,toxic53,19/Dec/12 16:11,31/Jan/13 13:36,13/Mar/19 23:17,19/Dec/12 19:00,1.5.9,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.5.0,,wicket,,,,,,,0,,,,,,,When the application requires authentication and a page requiring authentication is the first page to be accessed the url for the Login page is including a double slash causing a 404.  This only happens when the page locked down is mounted with mountPackage.,,,,,,,,,,,,,,,WICKET-4920,,,,,,,19/Dec/12 16:13;toxic53;sessionissue.zip;https://issues.apache.org/jira/secure/attachment/12561722/sessionissue.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-12-19 19:00:47.707,,,no_permission,,,,,,,,,,,300484,,,Wed Dec 19 19:00:47 UTC 2012,,,,,,0|i168lb:,244524,,,,,,,,19/Dec/12 16:13;toxic53;This is a quickstart.  You recreate assuming your context root is / you can hit http://localhost:8080/private/AdminPage and you should be able to recreate.  To keep recreating clear you session.,19/Dec/12 16:14;toxic53;It could possibly be related to this issue,19/Dec/12 19:00;svenmeier;fixed and added more tests,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update quickstart info for changed workflow in IntelliJ idea,WICKET-4984,12628008,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pparson,pparson,17/Jan/13 09:01,28/Jan/13 10:29,13/Mar/19 23:17,28/Jan/13 10:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,site,,,,,,,0,quickstart,"website,",,,,,"http://wicket.apache.org/start/quickstart.html reads:
""From within IDEA, just use “File/New Project/Import from external model/Maven”, choose the project directory and select the generated pom.xml.""

Since Idea 12, it should be:
""From within IDEA, just use “File/import Project"", choose the project directory and select the generated pom.xml.""",Idea 12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,304856,,,2013-01-17 09:01:48.0,,,,,,0|i17wfj:,254223,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractRequestLogger - infinite ArrayIndexOutOfBoundsException when requestWindow size is 0,WICKET-4973,12627409,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,michiel.korthuis@topicus.nl,michiel.korthuis@topicus.nl,14/Jan/13 10:59,26/Jan/13 18:43,13/Mar/19 23:17,17/Jan/13 09:14,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,requestlogger,,,,,,"On our production-system we discovered an issue:
We saw this stacktrace in our logs (at the end of _every_ request):


13-01-13 16:59:33 ERROR - RequestCycle                   - Exception occurred during onEndRequest
java.lang.ArrayIndexOutOfBoundsException: -1
        at org.apache.wicket.protocol.http.AbstractRequestLogger.hasBufferRolledOver(AbstractRequestLogger.java:185)
        at org.apache.wicket.protocol.http.AbstractRequestLogger.resizeBuffer(AbstractRequestLogger.java:448)
        at org.apache.wicket.protocol.http.AbstractRequestLogger.addRequest(AbstractRequestLogger.java:339)
        at org.apache.wicket.protocol.http.CobraRequestLogger.addRequest(CobraRequestLogger.java:40)
        at org.apache.wicket.protocol.http.AbstractRequestLogger.requestTime(AbstractRequestLogger.java:246)
        at org.apache.wicket.Application$2.onEndRequest(Application.java:1640)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$2.notify(RequestCycleListenerCollection.java:85)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$2.notify(RequestCycleListenerCollection.java:81)
        at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:144)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection.onEndRequest(RequestCycleListenerCollection.java:80)
        at org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:596)
        at org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:558)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:285)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:245)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at nl.topicus.cobra.hibernate.CloseTransactionAfterViewFilter.doFilterInternal(CloseTransactionAfterViewFilter.java:65)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
        at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:200)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)


Apparently our requestWindow array was initialized with size 0. Problem is, when trying to resize it to a larger size, an ArrayIndexOutOfBoundsException occurs, so resizing fails (and because of that it tries to resize it on every request...)

The problem disappears (and sometimes returns) when restarting the application.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-17 08:55:56.172,,,no_permission,,,,,,,,,,,304193,,,Thu Jan 17 09:14:59 UTC 2013,,,,,,0|i17k0v:,252213,,,,,,,,17/Jan/13 08:55;mgrigorov;[~papegaaij]: you pushed a fix already. Is there anything else to be done for this ticket ?,"17/Jan/13 09:14;papegaaij;No, I forgot to close the ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket 1.5 Form Post Action and Link Get discard Page Class Information,WICKET-4014,12520994,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bht@actrix.gen.nz,bht@actrix.gen.nz,01/Sep/11 00:04,24/Jan/13 20:02,13/Mar/19 23:17,07/Sep/11 14:28,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"Page expiry is a very annoying and perplexing event especially if users stay logged in via remember-me cookie.

It is therefore not a fancy enhancement but an essential business requirement to not drop the user out of context after session expiry.
Only stateless pages can fully achieve this, but it is not always desirable to go fully stateless, especially while a recovery solution already exists.
In 1.4, this appears to be automatic with BookmarkablePageRequestTargetUrlCodingStrategy - without any additional coding.

The solution is well known - keep as much state in the client as required to recover the page class, and possibly even its page parameters, and to not destroy this information.

The two attached testcases show two possible methods of page fallback recovery (one with AJAX, one without) that already work behind the scenes.
Of course it is easy with AJAX, to just force a page reload, but this is not discussed here. AJAX just serves to demonstrate how easy the principle actually is.
In most cases the user could successfully reload the page but Wicket 1.5 can't create a response because it has forgotten the class of the expired page.

In 1.4, it is possible to recover the class of an expired page via its mount path.
This feature is lost in 1.5.

To get this functionality back in a more streamlined fashion, I am additionaly proposing in a separate jira issue 4013 to store page class and page parameters in PageExpiredException.

Meanwhile, the focus of this issue is to request whatever means to not overwrite the path of a page in a form post action or get request, and to get the page class back as in 1.4 by whatever means.

The two attached testcases may be helpful for expermintation. The 1.4 tescase demonstrates how the scheme works, unfortunately I could not fill the blanks in the 1.5 testcase.

In 1.4,

a form tag is rendered as:
<form wicket:id=""form"" action=""?wicket:interface=:0:form::IFormSubmitListener::""
This is requested as:
/testForm.0?wicket:interface=:0:form::IFormSubmitListener::
and the page class can be recovered from the mount path ""testForm"" as in
    mount(new HybridUrlCodingStrategy(""testForm"", TestPageForm.class));

an anchor tag is rendered as:
<a href=""?wicket:interface=:0:linkSwitch::ILinkListener::""
This is requested as:
/testLink.0?wicket:interface=:0:linkSwitch::ILinkListener::
and the page class can be recovered from the mount path ""test"" as in
    mount(new HybridUrlCodingStrategy(""testLink"", TestPageLink.class));



In 1.5,

a form tag is rendered as:
<form wicket:id=""form"" action=""wicket/page?0-2.IFormSubmitListener-form""
This is requested requested as:
/wicket/page?0-1.IFormSubmitListener-form

This overwrites the mount path ""testForm"" as in
    mountPage(""testForm"", TestPageForm.class);
Consequently the server cannot discover the page class


an anchor tag is rendered as:
<a href=""wicket/page?0-1.ILinkListener-linkSwitch""
This is requested requested as:
/wicket/page?0-1.ILinkListener-linkSwitch

This overwrites the mount path ""testLink"" as in
    mountPage(""testLink"", TestPageLink.class);
Consequently the server cannot discover the page class
","Wicket version: 1.5-RC7
java version ""1.6.0_25""
Java(TM) SE Runtime Environment (build 1.6.0_25-b06)
Java HotSpot(TM) Client VM (build 20.0-b11, mixed mode, sharing)
Server: GlassFish 3.1.1",,,,,,,,,,,,,,WICKET-4116,,,,,,,08/Sep/11 12:18;bht@actrix.gen.nz;ExpiryFallbackParametersQuickStart1.5.zip;https://issues.apache.org/jira/secure/attachment/12493576/ExpiryFallbackParametersQuickStart1.5.zip,01/Sep/11 00:06;bht@actrix.gen.nz;ExpiryFallbackQuickStart1.4.zip;https://issues.apache.org/jira/secure/attachment/12492548/ExpiryFallbackQuickStart1.4.zip,01/Sep/11 00:06;bht@actrix.gen.nz;ExpiryFallbackQuickStart1.5.zip;https://issues.apache.org/jira/secure/attachment/12492549/ExpiryFallbackQuickStart1.5.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-09-07 19:59:58.311,,,no_permission,,,,,,,,,,,50926,,,Thu Jan 24 20:02:20 UTC 2013,,,,,,0|i0k9hz:,116356,,,,,,,,01/Sep/11 00:06;bht@actrix.gen.nz;Testcases,07/Sep/11 19:57;bht@actrix.gen.nz;Thanks very much for fixing this. How I can test? Are there any snapshot builds that I can download?,"07/Sep/11 19:59;mgrigorov;Either SVN checkout and build Wicket locally or use 1.5-SNAPSHOT from http://wicket.apache.org/start/quickstart.html.
The latter relies on Apache Jenkins servers which is not the most stable CI service.",07/Sep/11 23:26;bht@actrix.gen.nz;Thanks. I am impressed. It looks like this is a major improvement compared with 1.4 - we don't have to catch PageExpiredException anymore :),"08/Sep/11 07:51;mgrigorov;PageExpiredException still can be thrown if the page is not mounted. In this case the link contains only the page id and there is no information which page class to use to create a new instance.

But I think it was the same in 1.4 with the hybrid url coding strategies.","08/Sep/11 08:20;bht@actrix.gen.nz;I think we will see a substantial improvement in 1.5 compared with 1.4 because the hybrid strategies DO expire in 1.4. Now we can confidently say that mounting pages will avoid PageExpiredException. But wait, what happens to the PageParameters of the mounted page? Will they be used to reconstruct the page even if the request has POST parameters for the new target? Theoretically, it should be possible because 1.5 distinguishes between GET and POST parameters. Unfortunately I did not supply a testcase for PageParameters.","08/Sep/11 09:01;mgrigorov;The newly created page will use the parameters which have been send to the expired page.
Please test it harder and let us know if there are any issues. Thanks!",08/Sep/11 12:18;bht@actrix.gen.nz;I could verify that recovery works with parameters. This is more than what I could achieve with 1.4. You asked me to test harder. I can break it with the attached testcase where the GET parameter has the same name as the form field. I don't know whether this is out of scope.,"08/Sep/11 12:20;mgrigorov;Please create a separate ticket (may be a sub-task of this) and explain the problem there.
Thanks !","15/Dec/11 14:23;thomas.goetz;The only disadvantage to the solution is IMHO:
when you have a mounted page with a state (e.g. some ajax components on the page) and the page expires then you now have no chance of informing the user about the session expiry. Instead a fresh page (with a reset/fresh state) is created which can result in a suboptimal user experience (as already discussed today in IRC with martin-g and carl-eric). I'd suggest to make that behavior configurable, should I open a new ticket for that?","24/Jan/13 20:02;bht@actrix.gen.nz;This issue is not fixed yet. In the the 1.4 test case, WebRequestCycleProcessor succeeds in re-instantiating a page from a form post request. In Wicket 6.5, the form post URL does not include any page information for a mounted page. It does not work although IPageSettings#getRecreateMountedPagesAfterExpiry() == true",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate html ID for generated divs in modal.js,WICKET-4363,12539963,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rhansen,rhansen,26/Jan/12 20:48,22/Jan/13 12:10,13/Mar/19 23:17,26/Jan/12 22:30,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket-extensions,,,,,,,0,,,,,,,"using wicket's ModalWindow creates invalid markup since it creates two divs with id=""_wicket_window_11""",,0,0,,0%,0,0,,,,,,,,,,,,,,,26/Jan/12 20:51;rhansen;0001-Fix-duplicate-IDs-in-modal-window.patch;https://issues.apache.org/jira/secure/attachment/12512034/0001-Fix-duplicate-IDs-in-modal-window.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-22 11:39:09.471,,,no_permission,,,,,,,,,,,225466,,,Tue Jan 22 12:10:06 UTC 2013,,,,,,0|i00vzj:,3114,,,,,,,,26/Jan/12 20:51;rhansen;simple fix,"22/Jan/13 11:39;rniestroj;I think the bug is still there in Wicket 6.4.0

This is the Panel i have in my modalWindow:

   <wicket:panel>
      <div wicket:id=""formContainer"">
         <div wicket:id=""editInstallationFormPanel"">

         </div>
      </div>
      <div class=""ui-widget ui-corner-all"" style=""margin-top:10px;"">
         <div wicket:id=""filterForm"" class=""ui-widget-header ui-corner-top"" style=""padding: 5px;"">

         </div>
         <table wicket:id=""dataTable"" class=""ui-widget-content ui-corner-bottom"">

         </table>
      </div>
   </wicket:panel>

When i add the wicket:id=""formContainer"" to the target it gets duplicated with the same generated id. 

I have a link in the  wicket:id=""dataTable"" for editing items from the datatable. This link uses replaceWith to replace the wicket:id=""formContainer"" with a new instance and then i add wicket:id=""formContainer"" to the AjaxRequestTarget. Then it doubles the formContainer div.

Can you reopen this isse?",22/Jan/13 11:43;mgrigorov;Please attach a quickstart and we will reopen it.,22/Jan/13 12:06;rniestroj;How do i create a quickstart?,22/Jan/13 12:09;mgrigorov;http://wicket.apache.org/start/quickstart.html,22/Jan/13 12:10;mgrigorov;The idea is that you create a mini application that exposes the problem so we can debug it and fix the problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket-ajax-jquery.js fails with 'member not found' on IE for delayed ajax requests,WICKET-4986,12628023,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,17/Jan/13 11:47,17/Jan/13 11:53,13/Mar/19 23:17,17/Jan/13 11:53,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,,,,,,,"Channel#done() uses setTimeout() to execute delayed Ajax calls.

On IE when the delayed call is executed, jquery's #preventDefault() fails with 'member not found' because the original event object's properties (here e.returnValue) can no longer be accessed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,304871,,,Thu Jan 17 11:53:09 UTC 2013,,,,,,0|i17wiv:,254238,,,,,,,,17/Jan/13 11:53;svenmeier;catch a possible 'member not found',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in FencedFeedbackPanel#onRemove,WICKET-4968,12627145,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mfrankerl,mfrankerl,11/Jan/13 09:20,17/Jan/13 08:32,13/Mar/19 23:17,17/Jan/13 08:32,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,,,,,,,"There is a potential NPE in FencedFeedbackPanel.onRemove(FencedFeedbackPanel.java:155).

If a FencedFeedbackPanel instance is used two times ( i.e. wizard is replacing components on navigation) the MetaDataKey ""FENCE_KEY"" could be null. This causes a NPE in any further call of ""onRemove"".

Example Stacktrace:

Caused by: java.lang.NullPointerException
	at org.apache.wicket.feedback.FencedFeedbackPanel.onRemove(FencedFeedbackPanel.java:155)
	at org.apache.wicket.Component.internalOnRemove(Component.java:1102)
	at org.apache.wicket.MarkupContainer.removeChildren(MarkupContainer.java:1589)
	at org.apache.wicket.Component.internalOnRemove(Component.java:1110)
	at org.apache.wicket.MarkupContainer.removeChildren(MarkupContainer.java:1589)
	at org.apache.wicket.Component.internalOnRemove(Component.java:1110)
	at org.apache.wicket.MarkupContainer.removeChildren(MarkupContainer.java:1589)
	at org.apache.wicket.Component.internalOnRemove(Component.java:1110)
	at org.apache.wicket.MarkupContainer.removeChildren(MarkupContainer.java:1589)
	at org.apache.wicket.Component.internalOnRemove(Component.java:1110)
	at org.apache.wicket.MarkupContainer.removedComponent(MarkupContainer.java:1341)
	at org.apache.wicket.MarkupContainer.replace(MarkupContainer.java:739)
	at org.apache.wicket.extensions.wizard.Wizard.onActiveStepChanged(Wizard.java:233)",,,,,,,,,,WICKET-4888,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,303914,,,2013-01-11 09:20:09.0,,,,,,0|i17gun:,251699,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AtmosphereEventSubscriptionCollector is slow,WICKET-4971,12627204,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,0xabadea,0xabadea,11/Jan/13 16:30,14/Jan/13 12:20,13/Mar/19 23:17,14/Jan/13 07:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"AtmosphereEventSubscriptionCollector.onBeforeRender() is called so often that the amount of work it performs starts being significant. The method was a hotspot in our performance tests. I reduced the average HTTP response time by 20ms by caching the subscribe metods:

    private static final ConcurrentMap<Class<?>, List<Method>> class2SubscribeMethod = new ConcurrentHashMap<Class<?>, List<Method>>();

    @Override
    public void onBeforeRender(Component component)
    {
        for (Method curMethod : getSubscribeMethods(component.getClass()))
        {
            subscribeComponent(component, null, curMethod);
        }
        for (Behavior curBehavior : component.getBehaviors())
        {
            for (Method curMethod : getSubscribeMethods(curBehavior.getClass()))
            {
                subscribeComponent(component, curBehavior, curMethod);
            }
        }
    }

    private List<Method> getSubscribeMethods(Class<?> clazz)
    {
        List<Method> methods = class2SubscribeMethod.get(clazz);
        if (methods != null)
        {
            return methods;
        }

        methods = computeSubscribeMethods(clazz);
        List<Method> newMethods = class2SubscribeMethod.putIfAbsent(clazz, methods);
        return newMethods != null ? newMethods : methods;
    }

    private List<Method> computeSubscribeMethods(Class<?> clazz)
    {
        List<Method> result = Lists.newArrayList();
        for (Method curMethod : clazz.getMethods())
        {
            if (curMethod.isAnnotationPresent(Subscribe.class))
            {
                verifyMethodParameters(curMethod);
                result.add(curMethod);
            }
        }
        return result;
    }

I can provide a patch of a pull request if needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-11 17:14:39.35,,,no_permission,,,,,,,,,,,303973,,,Mon Jan 14 12:20:54 UTC 2013,,,,,,0|i17h7z:,251759,,,,,,,,11/Jan/13 17:14;papegaaij;I'll see if I can come with an implementation using Guava's Cache somewhere next week. IMHO ConcurrentHashMap is a bit to bloated too be used as simple cache.,"11/Jan/13 17:30;0xabadea;Yeah, that's better. I would have done it that way, but I didn't know that Wicket uses Guava.","14/Jan/13 07:33;papegaaij;Subscription collection is now cached, thanks for the suggestion! Wicket itself does not use Guava, but wicket-atmosphere does.","14/Jan/13 09:28;0xabadea;Thanks for the quick fix!

There appears to be a superfluous verifyMethodParameters() call in the loop over behavior methods.",14/Jan/13 12:20;papegaaij;Good catch! Fixed it,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wickettester#startcomponent(component) doesn't call oninitialize,WICKET-4792,12609510,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,vineetsemwal,vineetsemwal,28/Sep/12 08:28,13/Jan/13 15:01,13/Mar/19 23:17,03/Oct/12 11:58,1.5.8,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,,,,,,,,0,,,,,,,"currently wicketester#startcomponent(component) only executes beforerender which causes onbeforerender to be executed however onInitialize() is missed out .

beforerender+internalinitialize will be a good behavior..

thanks !",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257693,,,Sun Jan 13 15:01:53 UTC 2013,,,,,,0|i0k85b:,116137,,,,,,,,"13/Jan/13 11:26;vineetsemwal;there is still a bug in this method in my opinion,my apology for responding late,i didn't use this method in long time and i do it mechanically what this method does when there is a need...
ok here is the problem ,since this method doesn't do/go_through a normal processRequestAndDetach()  ,i think it's good to do a  component#detach() in the end in this method else problems can be the component's requestFlags will get cached and so the behavior will not be expected foreg. on next tester#startcomponent(component) ,the component's configure() and beforerender() won't work as expected ie. onconfigure() and onbeforerender() won't be called..

thanks :)  ",13/Jan/13 11:59;vineetsemwal;you can additionally do tester.getrequestcycle().detach() if you want the behavior to be closer to tester#startcomponntinpage(component) which i think should be in my opinion ..,"13/Jan/13 15:01;vineetsemwal;oh silly me ,from user point of view first problem can be just simply solved by creating/passing new instance of component though that is not a good way i think..",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when stopping Tomcat,WICKET-4965,12626975,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,0xabadea,0xabadea,10/Jan/13 16:56,11/Jan/13 08:08,13/Mar/19 23:17,11/Jan/13 08:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"{noformat}
java.lang.NullPointerException: null
    at org.apache.wicket.atmosphere.EventBus.get(EventBus.java:86)
    at org.apache.wicket.atmosphere.AtmosphereBehavior.findEventBus(AtmosphereBehavior.java:85)
    at org.apache.wicket.atmosphere.AtmosphereBehavior.onDisconnect(AtmosphereBehavior.java:182)
    at org.atmosphere.cpr.AtmosphereResourceImpl.onDisconnect(AtmosphereResourceImpl.java:809)
    at org.atmosphere.cpr.AtmosphereResourceImpl.notifyListeners(AtmosphereResourceImpl.java:754)
    at org.atmosphere.cpr.AtmosphereResourceImpl.resume(AtmosphereResourceImpl.java:327)
    at org.atmosphere.cpr.DefaultBroadcaster.resumeAll(DefaultBroadcaster.java:315)
    at org.atmosphere.cpr.DefaultBroadcasterFactory.destroy(DefaultBroadcasterFactory.java:307)
    at org.atmosphere.cpr.AtmosphereFramework.destroy(AtmosphereFramework.java:930)
    at org.atmosphere.cpr.AtmosphereServlet.destroy(AtmosphereServlet.java:186)
    at org.apache.catalina.core.StandardWrapper.unload(StandardWrapper.java:1465)
    at org.apache.catalina.core.StandardWrapper.stopInternal(StandardWrapper.java:1823)
    at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)
    at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5463)
    at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)
    at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1575)
    at org.apache.catalina.core.ContainerBase$StopChild.call(ContainerBase.java:1564)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
{noformat}

The NPE occurs because the Wicket application has already been destroyed. It it destroyed by the Wicket filter's destroy() method, which is invoked by ReflectorServletProcessor.destroy(). AtmosphereFramework.destroy() first destroys the handler, and then it destroys the broadcast factory (which resumes the resources).

Jean-Francois says the bug is not in Atmosphere: https://github.com/Atmosphere/atmosphere/issues/812","Atmosphere 1.0.5, wicket-atmosphere 0.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-11 08:08:36.627,,,no_permission,,,,,,,,,,,303668,,,Fri Jan 11 08:08:36 UTC 2013,,,,,,0|i17dl3:,251170,,,,,,,,"11/Jan/13 08:08;papegaaij;Resources are no longer unregistered during shutdown now, preventing the NPE (which also occurs on Jetty by the way).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket ajax submit does not serialize elements of parental forms,WICKET-4961,12626862,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,dmalescot,dmalescot,09/Jan/13 22:04,10/Jan/13 22:15,13/Mar/19 23:17,10/Jan/13 21:16,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,,,,,,,"Since Wicket 6.4.0 there is a problem with nested form.
If i submit child form and append root form in target, refresh is broken.

I make a quickstart for this problem :
 - Select a radio button
 - enter data in textfield
 - submit form
=> selected radio button has disappeared

If you change wicket version from pom.xml to 1.5.8, it's work perfectly.",,,,,,,,,,,,,,,,,,,,,,09/Jan/13 22:05;dmalescot;quickstart_http.zip;https://issues.apache.org/jira/secure/attachment/12564043/quickstart_http.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-10 20:54:56.826,,,no_permission,,,,,,,,,,,303552,,,Thu Jan 10 22:15:30 UTC 2013,,,,,,0|i17cav:,250961,,,,,,,,"10/Jan/13 20:54;svenmeier;According to the ""Nested Forms Specification"" on https://cwiki.apache.org/WICKET/nested-forms.html

  ... When submitting a nested form, the entire <form> is submitted (including fileuploads), but processed according to ...

Although FormComponents of parental forms are not processed, they nevertheless expect their input to be submitted to be able to read it into the raw input.
With wicket-ajax-jquery.js this contract was broken, only elements inside the nested form are serialized and submitted to the server.",10/Jan/13 21:16;svenmeier;elements of parental form are now serialized too (as it was in 1.5.x),"10/Jan/13 22:15;dmalescot;Thank you :)

Is the release of 6.5.0 is still scheduled to 18/01/13 ?
In fact this bug is really important for me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with file upload with progress bar via AJAX and Firefox,WICKET-4954,12626356,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bitstorm,bitstorm,07/Jan/13 14:50,08/Jan/13 14:13,13/Mar/19 23:17,08/Jan/13 14:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.5.0,,,,,,,,,0,,,,,,,"Firefox has a strange problem when used with a form that is set to multipart/form-data‎ and submitted via AJAX. It seems like it's still waiting for the response to finish even after the AJAX response has terminated.
You can see this issue in the example here: http://www.wicket-library.com/wicket-examples-6.0.x/ajax/upload?0.
The upload works fine but after it has completed Firefox displays the ""Stop"" button instad of ""Reload"". Moreover, if you try to upload a file bigger then the limit (1 M), the upload bar enters into a loop where it continues to read the upload status.
Everything works fine with Chrome.
",Firefox 17.0.1,,,,,,,,,,,,,,,,,,,,,08/Jan/13 13:08;bitstorm;WICKET-4954.patch;https://issues.apache.org/jira/secure/attachment/12563748/WICKET-4954.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-01-07 15:15:20.483,,,no_permission,,,,,,,,,,,302946,,,Tue Jan 08 13:51:25 UTC 2013,,,,,,0|i176pj:,250055,,,,,,,,"07/Jan/13 14:57;bitstorm;Some additional informations:
-the issue is not present with version 1.5.x
-to reproduce the issue you just need to set your form to multipart and submit it via AJAX. No file upload is required.",07/Jan/13 15:15;mgrigorov;I think the problem is related to ProgressBar. Firebug shows that GET requests to the UploadProgressBar resource are keep done. All of them at 0%.,"08/Jan/13 10:20;bitstorm;Ok, now I've got the whole picture. The problem with progress bar can be solved handling FileUploadException inside MultipartServletWebRequestImpl.java:

try
   {
    items = fileUpload.parseRequest(ctx);
  }
 catch (FileUploadException e)
 {
 throw e;
 }
finally
{
 onUploadCompleted();
}


but I still have a problem with Firefox. If I try to upload a huge file it keeps ajax channel busy and I can't upload any other file.","08/Jan/13 10:35;mgrigorov;This is how Ajax upload works - it uses XmlHttpRequest to make a request to an iframe.
This XHR will keep the channel busy until it is closed, i.e. the upload finishes.
And unfortunately the web container consumes the whole body of the file upload. We cannot tell it to stop when we see that the file size is too big.

About the Ajax channel - we can add a new type, ALWAYS, that will fire a new Ajax call no matter what. But it will only work when you use file upload based on IResource (http://wicketinaction.com/2012/11/uploading-files-to-wicket-iresource/) because otherwise the second request will hit the server side synchronization on the page instance.","08/Jan/13 13:08;bitstorm;IMHO it's not worthwhile to implement a new channel type. I'd rather implement a solution for HTML5 which allows to know the file size before starting the upload.
I've attached the patch for the progress bar.",08/Jan/13 13:12;mgrigorov;See https://github.com/wicketstuff/core/tree/master/jdk-1.6-parent/wicket-html5-parent/wicket-html5/src/main/java/org/wicketstuff/html5/fileapi,"08/Jan/13 13:16;mgrigorov;The patch is applied to 6.x and 1.5.x.
Thanks!

Is there anything else we need to do in this ticket ?","08/Jan/13 13:51;bitstorm;no, I think it's ok, thank you",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceStreamLocator#newResourceNameIterator isn't a factory method anymore,WICKET-4950,12625698,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,manthos,manthos,02/Jan/13 16:27,07/Jan/13 13:41,13/Mar/19 23:17,07/Jan/13 13:41,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,,,,,,,"During migration from wicket 1.5 to 6 I noticed that ResourceStreamLocator and ResourceNameIterator changed in some ways.

IMO suboptimal: the method ResourceStreamLocator#newResourceNameIterator contains code. Typically all new... methods only create a new instance, so user can override and add his own implementation.

Since the parameter 'extension' (from ResourceNameIterator) changed from String to Iterator<String>, I suggest to provide a 'newResourceNameIterator' method with a Iterator as parameter (only creating a new ResourceNameIterator).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,302246,,,2013-01-02 16:27:05.0,,,,,,0|i16znz:,248913,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RangeValidator#decorate mixes error keys,WICKET-4953,12626334,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mfrankerl,mfrankerl,07/Jan/13 11:15,07/Jan/13 13:35,13/Mar/19 23:17,07/Jan/13 13:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,,,,,,,,0,,,,,,,"The setting of error key in RangeValidator#decorate is wrong. Switch condition of case according to key.

Should be:
{code}
			case MINIMUM :
				error.addKey(""MinimumValidator"");
				break;
			case MAXIMUM :
				error.addKey(""MaximumValidator"");
				break;
{code}",wicket 6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,302921,,,2013-01-07 11:15:50.0,,,,,,0|i176gn:,250015,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error adding links to WebSocketRequestHandler,WICKET-4928,12624194,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,roxen,roxen,16/Dec/12 17:27,07/Jan/13 13:29,13/Mar/19 23:17,07/Jan/13 13:29,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket-native-websocket,,,,,,,0,,,,,,,"I get a nullpointer when trying to add newly created ajax links to the WebSocketRequestHandler because of the lack of a base url. Doing the same with an AjaxRequestTarget works fine. See attached quickstart.

ERROR - AbstractWebSocketProcessor - An error occurred during processing of a WebSocket message
java.lang.NullPointerException
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.renderHead(AbstractDefaultAjaxBehavior.java:97)
	at org.apache.wicket.ajax.AjaxEventBehavior.renderHead(AjaxEventBehavior.java:79)
	at org.apache.wicket.Component.renderHead(Component.java:2704)
	at org.apache.wicket.ajax.AbstractAjaxResponse$1.component(AbstractAjaxResponse.java:476)
	at org.apache.wicket.ajax.AbstractAjaxResponse$1.component(AbstractAjaxResponse.java:470)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:144)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:162)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:123)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:192)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:874)
	at org.apache.wicket.ajax.AbstractAjaxResponse.writeHeaderContribution(AbstractAjaxResponse.java:469)
	at org.apache.wicket.ajax.XmlAjaxResponse.writeComponent(XmlAjaxResponse.java:101)
	at org.apache.wicket.ajax.AbstractAjaxResponse.writeComponents(AbstractAjaxResponse.java:214)
	at org.apache.wicket.ajax.AbstractAjaxResponse.writeTo(AbstractAjaxResponse.java:145)
	at org.apache.wicket.ajax.WebSocketRequestHandler.respond(WebSocketRequestHandler.java:257)
	at org.apache.wicket.protocol.ws.api.AbstractWebSocketProcessor.broadcastMessage(AbstractWebSocketProcessor.java:185)
	at org.apache.wicket.protocol.ws.api.AbstractWebSocketProcessor.onMessage(AbstractWebSocketProcessor.java:89)
	at org.apache.wicket.protocol.ws.jetty.JettyWebSocketProcessor$JettyWebSocket.onMessage(JettyWebSocketProcessor.java:44)
	at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455$WSFrameHandler.onFrame(WebSocketConnectionRFC6455.java:845)
	at org.eclipse.jetty.websocket.WebSocketParserRFC6455.parseNext(WebSocketParserRFC6455.java:359)
	at org.eclipse.jetty.websocket.WebSocketConnectionRFC6455.handle(WebSocketConnectionRFC6455.java:235)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:606)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:46)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:603)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:538)
	at java.lang.Thread.run(Thread.java:680)


I have a similar kind of problem using wicket-cdi and websockets trying to use request scoped injected beans. I suppose that's natural though but it would be awesome if it worked. (Example not included in the quickstart)

org.jboss.weld.context.ContextNotActiveException: WELD-001303 No active contexts for scope type javax.enterprise.context.RequestScoped
	at org.jboss.weld.manager.BeanManagerImpl.getContext(BeanManagerImpl.java:590)
	at org.jboss.weld.bean.proxy.ContextBeanInstance.getInstance(ContextBeanInstance.java:71)
",,,,,,,,,,,,,,,,,,,,,,16/Dec/12 17:30;roxen;websocket-target-add-link.zip;https://issues.apache.org/jira/secure/attachment/12561195/websocket-target-add-link.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,298949,,,2012-12-16 17:27:32.0,,,,,,0|i15xdz:,242709,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autolink already rendered problem,WICKET-3150,12479302,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mgrigorov,mgrigorov,06/Nov/10 18:56,27/Dec/12 02:41,13/Mar/19 23:17,07/Nov/10 13:01,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"Trying to migrate my application from 1.4 to 1.5 I experience the following problem:


org.apache.wicket.markup.MarkupException: The component [AutolinkExternalLink [Component id = _autolink_2]] was rendered already. You can render it only once during a render phase. Class relative path: org.apache.wicket.markup.resolver.AutoLinkResolver$AutolinkExternalLink:p:_link11:_autolink_2
	at org.apache.wicket.Page.componentRendered(Page.java:361)
	at org.apache.wicket.Component.rendered(Component.java:2580)
	at org.apache.wicket.Component.render_(Component.java:2384)
	at org.apache.wicket.Component.render(Component.java:2307)
....

See the attached quickstart.
The content of MyPanel.html is the minimal version of the complete html in our application that reproduces the problem.
If I move the content from the panel to the page .html then everything is OK.
Removing *any* of <wicket:link>s in the panel solves the problem.
To reproduce the problem just run TestHomePage.",,,,,,,,,,,,,,,WICKET-4944,,,,,,,06/Nov/10 18:57;mgrigorov;wicket-3150.tgz;https://issues.apache.org/jira/secure/attachment/12458998/wicket-3150.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-09 00:50:12.425,,,no_permission,,,,,,,,,,,203964,,,Tue Nov 09 00:50:12 UTC 2010,,,,,,0|i0kbo7:,116708,,,,,,,,"09/Nov/10 00:50;hudson;Integrated in Apache Wicket 1.5.x #496 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/496/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StalePageException on non-versioned Page in Ajax request does not render ajax-response,WICKET-3252,12493030,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,michal.kurtak,michal.kurtak,12/Dec/10 15:22,21/Dec/12 08:38,13/Mar/19 23:17,17/Dec/10 16:12,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"If StalePageException occurs in Ajax request on non-versioned page, response contains rendered page but no <ajax-response> element.. Response should contain ajax redirect to stale page.
How to reproduce this behavior in attached quickstart project (HomePage in quickstart contains two links (one that opens popup window and the other performs ajax request):

1. Click on the popup link. New window is opened.
2. In the originating window, click Ajax Link.
3. In popup window click Ajax Link and error occurs",,,,,,,,,,,,,,,,,,,,,,13/Dec/10 21:05;pedrosans;WICKET-3252-test.patch;https://issues.apache.org/jira/secure/attachment/12466169/WICKET-3252-test.patch,12/Dec/10 17:53;mgrigorov;WICKET-3252.patch;https://issues.apache.org/jira/secure/attachment/12466101/WICKET-3252.patch,12/Dec/10 15:23;michal.kurtak;stalepageexception-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12466097/stalepageexception-quickstart.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-12-12 17:53:55.829,,,no_permission,,,,,,,,,,,204061,,,Fri Dec 17 16:12:00 UTC 2010,,,,,,0|i0kbgv:,116675,,,,,,,,12/Dec/10 15:23;michal.kurtak;quickstart with reported bug,12/Dec/10 17:53;mgrigorov;Possible fix,"13/Dec/10 21:05;pedrosans;+1 for Martin patch, it fix the attached test case asserting that when responding an AJAX request an AJAX response will to be returned","17/Dec/10 16:12;mgrigorov;Fixed with r1050433.

Pedro's tests are also in.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CryptoMapper ignores original queryString parameters,WICKET-4923,12623542,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,lauraz,lauraz,12/Dec/12 13:01,12/Dec/12 14:30,13/Mar/19 23:17,12/Dec/12 14:30,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,,,,,,,,0,,,,,,,"When an AjaxRequest with parameters (e.g.: Autocomplete.getChoices()) arrives and CryptoMapper decrypts it, original queryString parameters dissapears.

Debugging CryptoMapper, I've checked that this method:
private Url decryptUrl(final Request request, final Url encryptedUrl) {
        ...
}

receives querystrings parameters (on field url.parameter from ""request"" parameter) and the new Url returned by the method never adds them to its own list. ",,,,,,,,,,,,,,,,,,,,,,12/Dec/12 13:02;lauraz;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12560559/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-12-12 14:30:02.912,,,no_permission,,,,,,,,,,,297252,,,Wed Dec 12 14:30:02 UTC 2012,,,,,,0|i14ndj:,235252,,,,,,,,12/Dec/12 13:02;lauraz;Here is a quickstart,12/Dec/12 14:30;svenmeier;additional query parameters have to be added to the new url,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LazyInitProxyFactory prevents using package private interfaces,WICKET-4918,12623046,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,tkorri,tkorri,09/Dec/12 12:01,12/Dec/12 09:27,13/Mar/19 23:17,12/Dec/12 09:27,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,wicket-guice,,,,,,,0,,,,,,,"I'm trying to inject a package private interface for my model classes but I keep getting a java.lang.IllegalArgumentException: non-public interfaces from different packages.

I'm guessing the LazyInitProxyFactory adding IWriteReplace to the proxies is the culprit here, since IWriteReplace is also an package private interface in the org.apache.wicket.proxy package.",,,,,,,,,,,,,,,,,,,,,,11/Dec/12 17:07;stephenlujan;0001-fixed-WICKET-4918-by-making-IWriteReplace-public.patch;https://issues.apache.org/jira/secure/attachment/12560402/0001-fixed-WICKET-4918-by-making-IWriteReplace-public.patch,09/Dec/12 12:02;tkorri;guice-proxytest.zip;https://issues.apache.org/jira/secure/attachment/12560068/guice-proxytest.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-12-10 19:34:33.492,,,no_permission,,,,,,,,,,,296638,,,Tue Dec 11 17:07:47 UTC 2012,,,,,,0|i14dl3:,233664,,,,,,,,09/Dec/12 12:02;tkorri;Quickstart reproducing this behaviour,"10/Dec/12 19:34;stephenlujan;I confirmed that this works with just google guice but not wicket-guice, by replacing ""Injector.get().inject(this);"" with ""Guice.createInjector().injectMembers(this);"" in the net.korri.model.Model constructor.",11/Dec/12 17:07;stephenlujan;Taneli Korri was correct. Making IWrireReplace public does solve the issue. I've added a patch just in case that's helpful.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Websockets are not working if URL has a hash in it,WICKET-4917,12623022,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,solomax,solomax,08/Dec/12 15:20,12/Dec/12 07:51,13/Mar/19 23:17,12/Dec/12 07:51,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket-native-websocket,,,,,,,0,,,,,,,"I have tried to create ""single page"" application with custom HomePageMapper to eliminate ?1 at the end of the URL (please see quickstart app attached)

Inconsistemcy:
I have used wicket-native-websocket 0.4 which have dependency to wicket-experimental 6.2.0
should it be 6.3.0 ?

Errors:
1) if the following URL is accessed: http://localhost:8080/#testHash
The following error appears in the Chrome console:
URL has fragment component ws://localhost:8080/#testHash&pageId=4 

I believe URL constructed should be: ws://localhost:8080/?&pageId=4#testHash


2) If the following URL is accessed: http://localhost:8080/
I have Exception in the web server console:

WARN  - ServletHandler             - /&pageId=0
java.lang.IllegalStateException: Request parameter 'pageId' is required!
	at org.apache.wicket.util.lang.Checks.notEmpty(Checks.java:55)
	at org.apache.wicket.protocol.ws.api.AbstractWebSocketProcessor.<init>(AbstractWebSocketProcessor.java:77)
	at org.apache.wicket.protocol.ws.jetty.JettyWebSocketProcessor.<init>(JettyWebSocketProcessor.java:70)
	at org.apache.wicket.protocol.http.Jetty7WebSocketFilter.doWebSocketConnect(Jetty7WebSocketFilter.java:81)
	at org.eclipse.jetty.websocket.WebSocketFactory.acceptWebSocket(WebSocketFactory.java:351)
	at org.apache.wicket.protocol.http.Jetty7WebSocketFilter.acceptWebSocket(Jetty7WebSocketFilter.java:75)
	at org.apache.wicket.protocol.http.AbstractUpgradeFilter.processRequest(AbstractUpgradeFilter.java:102)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:245)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1332)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:477)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:965)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)
	at org.eclipse.jetty.server.Server.handle(Server.java:348)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:452)
	at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:884)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:938)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:630)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)
	at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:603)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:538)
	at java.lang.Thread.run(Thread.java:722)

I believe this exception is caused by my custom home page mapper. May be there is workaround how this can be used? or maybe I can add javascript code to open websocket?

Thanks in advance","1) Sun JDK 1.7.09
2) Ubuntu 12.10
3) Wicket 6.3.0
4) Google Chrome 24.0.1312.35 beta",,,,,,,,,,,,,,,,,,,,,11/Dec/12 21:44;solomax;fix-WICKET-4917.patch;https://issues.apache.org/jira/secure/attachment/12560458/fix-WICKET-4917.patch,08/Dec/12 15:22;solomax;websockets.tgz;https://issues.apache.org/jira/secure/attachment/12560033/websockets.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-12-12 07:51:21.346,,,no_permission,,,,,,,,,,,296612,,,Wed Dec 12 07:51:21 UTC 2012,,,,,,0|i14alz:,233182,,,,,,,,08/Dec/12 15:22;solomax;Quickstart project demonstrating the behavior described,11/Dec/12 21:44;solomax;patch fixing the issue for me,"12/Dec/12 07:51;mgrigorov;Thanks for the patch, Maxim!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTree$TreeItem renderHead does not call renderHead for child TreeItems.,WICKET-4916,12623014,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,reiern70,reiern70,08/Dec/12 14:53,10/Dec/12 10:07,13/Mar/19 23:17,10/Dec/12 10:07,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket-extensions,,,,,,,0,,,,,,,AbstractTree$TreeItem renderHead does not call renderHead for child TreeItems (it does for all children of child TreeItem but not for TreeItem itself). The result of this is that inMethod tree grid does not add clickable behavior to child rows when a row is expanded. For previous versions of wicket this was not a problem as markup rendering will render the onclicks.,,0,0,,0%,0,0,,,,,,,,,,,,,,,08/Dec/12 14:56;reiern70;WICKET-4916.patch;https://issues.apache.org/jira/secure/attachment/12560032/WICKET-4916.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-12-10 10:07:44.553,,,no_permission,,,,,,,,,,,296604,,,Mon Dec 10 10:07:44 UTC 2012,,,,,,0|i14ak7:,233174,,,,,,,,08/Dec/12 14:56;reiern70;fix for the problem.,"10/Dec/12 10:07;mgrigorov;The patch is applied!
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette Ajax update does not work,WICKET-4911,12618849,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,aka,aka,05/Dec/12 10:17,05/Dec/12 11:27,13/Mar/19 23:17,05/Dec/12 11:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,,,,,,,,0,,,,,,,"Javadoc of org.apache.wicket.extensions.markup.html.form.palette.Palette describes a method of receiving ajax updates when the selection has changed:

Palette palette=new Palette(...) {
    protected Recorder newRecorderComponent()
    {
      Recorder recorder=super.newRecorderComponent();     
      recorder.add(new AjaxFormComponentUpdatingBehavior(&quot;onchange&quot;) {...});
      return recorder;
    }
}

Prior to wicket 6 this worked, but the jQuery integration broke this functionality. The problem lies in palette.js line 127:

if (recorder.onchange!=null) { recorder.onchange(); }

Here the change event should be fired when the content of the hidden input field that is used to record the selection changes. However since the ajax update on the onchange event is registered by AjaxFormComponentUpdatingBehavior with jQuery, recorder.onchange will always be null.

The solution might be something like this:

$(recorder).change()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-12-05 11:27:56.547,,,no_permission,,,,,,,,,,,296109,,,Wed Dec 05 11:27:56 UTC 2012,,,,,,0|i14633:,232449,,,,,,,,05/Dec/12 11:27;svenmeier;event is now properly triggered,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Do not register Ajax timer if the component is removed,WICKET-4886,12617531,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,olze84,olze84,25/Nov/12 17:32,05/Dec/12 08:03,13/Mar/19 23:17,25/Nov/12 21:45,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket,,,,,,,0,ajax,panel,replace,,,,"I have this example to show my problem:
https://github.com/olze/WicketPanelReplace

This kind of architecture is used in a bigger application with about 30-35 panels where about 10 use Ajax to replace itself. The problem is that after the addOrReplace() the parent to the panel get lost which will lead to findParent() returning null. And because of that, the error ""Page not found for component..."" will be displayed.

Its like a ""ping pong"" application which means i dont know what to display next - i get this information from a controller in the backend. For that reason i can not create a flow-based wizard like the wizard example because i dont know yet what to display.

As adviced in the mailing list i created this jira issue. I dont know if this is a bug or a feature request.",,,,,,,,,,,,WICKET-4910,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,292019,,,2012-11-25 17:32:57.0,,,,,,0|i0rjqv:,158843,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
autocomplete shows strings with quotes strings as string2 with &quot;quote&quot;,WICKET-4899,12618321,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,gb6881,gb6881,30/Nov/12 15:11,30/Nov/12 16:37,13/Mar/19 23:17,30/Nov/12 16:37,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,,,,,,,,0,,,,,,,"searching in the quickstart for ""s"" and, selecting the result shows the bug. 
in this case the selected value is ""string2 with &quot;quote&quot;""

i'm not sure if  it would have been better to reopen this issue:
https://issues.apache.org/jira/browse/WICKET-4691",,,,,,,,,,,,,,,,,,,,,,30/Nov/12 15:12;gb6881;autocompletequote.zip;https://issues.apache.org/jira/secure/attachment/12555509/autocompletequote.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-30 16:37:25.091,,,no_permission,,,,,,,,,,,292982,,,Fri Nov 30 16:37:25 UTC 2012,,,,,,0|i0sr5z:,165878,,,,,,,,"30/Nov/12 16:37;svenmeier;Fix introduced in WICKET-4691 was one escaping too much, since Strings#escapeMarkup() escapes quotes already.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rendering of feedback messages fails with DebugBar in page,WICKET-4878,12617328,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,22/Nov/12 12:26,22/Nov/12 12:31,13/Mar/19 23:17,22/Nov/12 12:31,1.5.9,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,wicket,,,,,,,0,,,,,,,"After the page is detached to calculate its size, messages are no longer available for FeedbackPanel to get the CSS styling for messages, failing with a NullPointerException.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,259542,,,Thu Nov 22 12:31:13 UTC 2012,,,,,,0|i0lqe7:,124927,,,,,,,,22/Nov/12 12:31;svenmeier;CSS styling is now kept independent of message,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket-Atmosphere track message length,WICKET-4869,12616942,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,zala,zala,20/Nov/12 14:21,21/Nov/12 15:37,13/Mar/19 23:17,21/Nov/12 15:37,6.0.0,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"When activating a PerRequestBroadcastFilter, the methods annotated with @Subscribe are unable to contribute to the AjaxRequestTarget.

At the Filter level, the messages are OK but the client receives an empty <ajax-response>.

A quickstart is attached where target/WEB-INF/lib is provided because jquery.atmosphere.js has been modified in order to activate track message length.

Feel free to ask for more info.

Regards,

Pierre Goupil","Linux 3.0.0-13-generic #22-Ubuntu, OpenJDK Runtime Environment (IcedTea6 1.11.5), Tomcat 7.0.28",,,,,,,,,,,,,,,,,,,,,20/Nov/12 14:24;zala;quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12554346/quickstart.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-21 10:57:43.386,,,no_permission,,,,,,,,,,,258832,,,Wed Nov 21 15:37:55 UTC 2012,,,,,,0|i0l4o7:,121407,,,,,,,,"20/Nov/12 14:25;zala;At the root of the quickstart, there's a tomcat-logs.txt file containing all messages from Tomcat, just in case.","21/Nov/12 10:57;papegaaij;I've just pushed some updates to wicket-atmosphere and also updated the quickstart at https://github.com/papegaaij/wicket-atmosphere-quickstart . With these changes, message length tracking is enabled and seems to work (I can push very large messages). Can you verify that this also works for you? Make sure you use the same filter configuration from the web.xml as in the quickstart.","21/Nov/12 12:11;zala;Good afternoon,

Well done! Silly question: where is org.apache.wicket.atmosphere.TrackMessageSizeFilter from web.xml? I can't find it in the code of wicket-atmosphere.

Plus, I can't see any change in the GitHub of Apache Wicket, is there anything that I should know?

Regards,

Pierre",21/Nov/12 13:16;papegaaij;The github repo is synced once a day as far as I know. You can use our public Apache git repository at https://git-wip-us.apache.org/repos/asf/wicket.git or wait a day.,"21/Nov/12 14:17;zala;I've just tried it and... it works! Great work, thank you. You can close this ticket.","21/Nov/12 15:37;papegaaij;Message length tracking is now enabled.

*Note* All users upgrading to wicket-atmosphere 0.6 need to add the following configuration to the web.xml:

    <init-param>
        <param-name>org.atmosphere.cpr.broadcastFilterClasses</param-name>
        <param-value>org.apache.wicket.atmosphere.TrackMessageSizeFilter</param-value>
    </init-param>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IE8, IE7 javascript errors with Wicket 6",WICKET-4851,12614422,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jackberg,jackberg,01/Nov/12 19:32,15/Nov/12 09:03,13/Mar/19 23:17,15/Nov/12 09:03,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.3.0,,,wicket-extensions,,,,,,,0,,,,,,,"I am having problems with Javascript in IE8 and IE7. 
I am getting a flood of 
SCRIPT5007: Unable to get value of the property 'jQuery17209514285345432955': object is null or undefined 
jquery-ver-1348220874405.js, line 3405 character 3 
errors to the console.

The problem can also be observed in the simple example 
www.wicket-library.com/wicket-examples-6.0.x/ajax/modal-window 
Just open a modal window and close it by the X in the corner. Observe how the console is flooded with error messages. IE9 in IE8 mode will also do. 

Tried it with wicket 6.2. Line numbers are for development mode javascript.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-08 16:28:02.118,,,no_permission,,,,,,,,,,,253752,,,Thu Nov 15 09:03:13 UTC 2012,,,,,,0|i0e4zz:,80572,,,,,,,,"08/Nov/12 16:28;bitstorm;I think the problem is inside function Wicket.Event.fix (file wiket-evet-jquery.js, line 124). Here we should replace 'jQuery.event.fix(evt)' with 'jQuery.event.fix(evt || window.event)'.
PS: for those (like me) who aren't black belt of JavaScript, it is worth remembering that OR operator can be used also to express an alternative value if a variable is undefined. ","15/Nov/12 09:03;mgrigorov;Thanks, Andrea!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Date converters should use a new instance of DateFormat to be thread safe,WICKET-4839,12613489,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,soulspirit,soulspirit,25/Oct/12 14:05,15/Nov/12 08:49,13/Mar/19 23:17,15/Nov/12 08:49,1.4.19,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,,,wicket,,,,,,,0,,,,,,,"Please consider the linked issue WICKET-4833.

I had to open a new issue because I cannot attach the quickstart project I've prepared to a closed issue.",,,,,,,,,,,,,,,WICKET-4858,,,,,,,05/Nov/12 10:02;soulspirit;0001-WICKET-4839-DateFormat-should-be-thread-safe.patch;https://issues.apache.org/jira/secure/attachment/12552081/0001-WICKET-4839-DateFormat-should-be-thread-safe.patch,25/Oct/12 14:17;soulspirit;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12550780/quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-11-02 15:08:16.995,,,no_permission,,,,,,,,,,,251027,,,Thu Nov 15 08:49:56 UTC 2012,,,,,,0|i0b3dj:,62659,,,,,,,,"25/Oct/12 14:17;soulspirit;The attached project demonstrates that instances of DateFormat managed by org.apache.wicket.util.convert.converter.DateConverter are shared between different requests and different sessions, thus DateConverter should be thread-safe.

The application writes to the console the instance number of the DateFormat instance used by DateConverter, and it's clear it doesn't change refreshing the page or running a different HTTP session, provided the Locale assigned by Wicket to the user doesn't change.
","02/Nov/12 15:08;mgrigorov;From now on ConverterLocator will create a new instance of all date based converters.
Thanks!","04/Nov/12 12:02;soulspirit;Sorry if I'm insisting, but your solution isn't optimal: https://git-wip-us.apache.org/repos/asf?p=wicket.git;a=commitdiff;h=7d139086fe0cd036d90fd7a32209776c1653ec5c
Your fix prevents the user to register its own converters for date related datatypes.

ConverterLocator is a registry, not a factory. The right way to register a custom converter is to call ConverterLocator#set() , which registers an *INSTANCE* of the submitted converter in a map. With your fix custom converters aren't looked up from this map, making the class buggy.

There are to solutions coming to my mind:
- synchronizing the code that makes use of DateFormat in DateConverter and other similar converters (non optimal)
- forcing the creation of a new DateFormat object each time DateConverter has to use it (a better one)

Thanks for your time.","05/Nov/12 07:16;mgrigorov;Good catch! Thanks for reviewing!

I improved it by checking first in the registered converters and if there is no match then check for the date types and use the new logic.

It would be even better if instead of registering the converter itself it was possible to register a provider for the converter but we cannot make API breaks until Wicket 7 so this improvement will have to wait.","05/Nov/12 08:28;soulspirit;Ok, this way the patch works, but it tricks the user who wants to subclass DateConverter.
It would appear legitimate to subclass DateConverter overriding #getDateFormat() to make it use a different date format than the hard-coded DateFormat.SHORT, but doing so would make the class unsafe, because the special code in ConverterLocator would not trigger.
To make it work, the subclass should handle concurrency by itself, and it would sound strange, given that DateConverter doesn't do anything special about it.

I think it would better making clear that IConverter(s) instances are shared between threads, and making each IConverter implementation handle the concurrency by itself.

In our specific case of DateConverter, the call to DateFormat#getDateInstance() should be simply replaced by a call to new DateFormat() . Simple and safe.

A more involved but elegant solution could make use of a ThreadLocal<DateFormat> to ""cache"" the DateFormat instance, but a simple new DateFormat() would suffice it.

Thanks again.","05/Nov/12 08:44;mgrigorov;Hi,

I'm not sure that I understand. A patch would make it more clear, I believe.

""should be simply replaced by a call to new DateFormat() . Simple and safe.""
Could be, but DateFormat's constructor is not visible (at least in JDK 6), so I'm not sure how you instantiated it. Maybe you use SimpleDateFormat instead...

Additionally DateConverter creates a new DateFormat instance for each call to #convertToString() so I'm starting wonder whether my change is needed at all. It seems to be OK even without it. Many threads share the same DateConverter instance but since it is stateless (doesn't keep state) and creates new instances of DateFormat for each usage of #convertToXYZ() it should be safe.",05/Nov/12 10:02;soulspirit;This patch addresses DateConverter thread-safeness problem.,"05/Nov/12 10:05;soulspirit;The problem isn't DateConverter itself. It is true, it's stateless, but java.text.DateFormat isn't. Its apidoc says:

Date formats are not synchronized.
It is recommended to create separate format instances for each thread.
If multiple threads access a format concurrently, it must be synchronized
externally.

And you can verify it by running the quickstart project I've previously attached.","05/Nov/12 10:25;mgrigorov;I'm not sure why the current code deals with DateFormat.getDateInstance(DateFormat.SHORT, locale) instead of returning a new instance of SimpleDateFormat every time.
I also think that this method returns instances from a pool. I'm not sure why Emond said that the providers are pooled but the DatFormat instances are not. 
The code in java.text.DateFormat#get(int timeStyle, int dateStyle, int flags, Locale) looks like:

LocaleServiceProviderPool pool =
                LocaleServiceProviderPool.getPool(DateFormatProvider.class);
            if (pool.hasProviders()) {
                DateFormat providersInstance = pool.getLocalizedObject(
                                                    DateFormatGetter.INSTANCE,
                                                    loc, 
                                                    timeStyle,
                                                    dateStyle,
                                                    flags);
                if (providersInstance != null) {
                    return providersInstance;
                }
            }

So, I agree that org.apache.wicket.util.convert.converter.DateConverter#getDateFormat(Locale) should look like:

public DateFormat getDateFormat(Locale locale)
	{
		if (locale == null)
		{
			locale = Locale.getDefault();
		}

		return new SimpleDateFormat(getPattern(), locale);
	}

protected String getPattern() { ....}

And with this improvement the earlier commits in ConverterLocator should be reverted.
Agree ?","05/Nov/12 10:44;soulspirit;Exactly.
In the patch I had to take the pattern from the DateFormat instance because there is no way to emulate the style defined by DateFormat.SHORT with a pattern for SimpleDateFormat (DateFormat.SHORT's pattern is somehow generated very differently for each Locale).
So, I made it a two-step conversion to keep the maximum date pattern compatibility with the original version of DateConverter. I like your proposal of a #getPattern() method.","05/Nov/12 11:18;mgrigorov;Now, I see what is the reason to use DateFormat.getDateInstance(DateFormat.SHORT, locale) - http://stackoverflow.com/questions/4594519/how-do-i-get-localized-date-pattern-string.
SimpleDateFormat is not able to produce a short pattern for all possible locales. I.e. DateFormat.getDateInstance() will not always return SimpleDateFormat and as your patch suggests it will throw a ClassCastException. And with your approach it will return an invalid (for the passed locale) pattern in this case.

The only safe way is to return a clone of the returned DateFormat instance:

public DateFormat getDateFormat(Locale locale)
	{
		if (locale == null)
		{
			locale = Locale.getDefault();
		}

		// return a clone because DateFormats are not thread-safe and
		// DateFormat.getDateInstance may return an instance from a pool
		return (DateFormat) DateFormat.getDateInstance(DateFormat.SHORT, locale).clone();
	}

Another way is 

public DateFormat getDateFormat(Locale locale)
	{
		if (locale == null)
		{
			locale = Locale.getDefault();
		}

		DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.SHORT, locale);
		if (dateFormat instanceof SimpleDateFormat)
		{
			String pattern = ((SimpleDateFormat) dateFormat).toLocalizedPattern();
			dateFormat = new SimpleDateFormat(pattern, locale);
		}
		return dateFormat;
	} 

 i.e. a more explicit way of making a clone for SimpleDateFormat.
I prefer the first approach.","05/Nov/12 12:07;svenmeier;+1 for just using clone(), it seems the simplest solution. People who are concerned about performance (if this is an issue at all) can always register their own converter.","05/Nov/12 13:26;soulspirit;Speaking about performance, it should be much faster just synchronizing the block, that has the plus to make clear to everyone that DateConverter has to be thread-safe:

@Override
public String convertToString(final Date value, final Locale locale)
{
  final DateFormat dateFormat = getDateFormat(locale);
  if (dateFormat != null)
  {
    synchronized (dateFormat) {
      return dateFormat.format(value);
    }
  }
  return value.toString();
}
","06/Nov/12 07:58;mgrigorov;See WICKET-4858. There I tried to consolidate the common code for all Date-based converters in one AbstractDateConverter but clirr-maven-plugin sees problems in applying the change for Wicket 6.x, so it will have to wait for Wicket 7.

For Wicket 1.5.9/6.3.0 I'm going to revert the change in ConverterLocator and use #clone(). Later this can be optimized if it shows performance problems.","06/Nov/12 08:29;mgrigorov;Done.
From now on a cloned instance of the returned DateFormat will be used.","06/Nov/12 09:13;papegaaij;The quickstart attached to this ticket is invalid. SimpleDateFormat.toString is not an indication of the actual instance of SimpleDateFormat because the hashCode method is overridden to return the hash code of the pattern, which will always be the same. If you change the debug output to System.identityHashCode( dateFormat ), you'll see a new instance is used on every call. Therefore, I opt to undo the changed made for this ticket, because they are not needed. DateFormat.getInstance will not return the same instance twice.","06/Nov/12 10:57;soulspirit;You're right Emond, I've been tricked by both DateFormat#toString() and the misleading method's name DateFormat#getDateInstance() ( #newDateInstance() seems more appropriate).
Thanks to everyone and sorry for the misguiding bug submission.",15/Nov/12 08:49;mgrigorov;The change is reverted in 6.x branch.,,,,,,,,,,,,,,,,,,,,,
Return error code 400 when an Ajax request has no base url set in header/request parameters.,WICKET-4841,12613513,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jriehn,jriehn,25/Oct/12 16:13,05/Nov/12 09:29,13/Mar/19 23:17,05/Nov/12 09:29,1.5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.3.0,,wicket,,,,,,,0,,,,,,,"Hello,

currently we've got a problem with faked ajax requests. these ajax 
requests misses some parameters, but the wicket-ajax header flag is set. 
So ServletWebRequest throws an exception:

java.lang.IllegalStateException: Current ajax request is missing the base url header or parameter
         at org.apache.wicket.util.lang.Checks.notNull(Checks.java:38)
         at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getClientUrl(ServletWebRequest.java:171)
         at org.apache.wicket.request.UrlRenderer.<init>(UrlRenderer.java:59)


These faked requests are so massive, that our application is no longer 
monitorable. Our workaround rejects these requests via apache config. 

Instead of logging an exception, in deployment mode wicket should log a warning and reject the request",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-05 09:29:19.798,,,no_permission,,,,,,,,,,,251057,,,Mon Nov 05 09:29:19 UTC 2012,,,,,,0|i0b3uf:,62735,,,,,,,,05/Nov/12 09:29;mgrigorov;From now on Http error 400 (Bad request) will be returned to the client.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ComponentResolvers created in app init ignore markup's namespace,WICKET-4829,12612855,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,chrisc,chrisc,21/Oct/12 01:57,02/Nov/12 17:52,13/Mar/19 23:17,02/Nov/12 16:56,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.3.0,,,wicket,,,,,,,0,,,,,,,"Initially this problem was occurring in a page with an enclosure and so I thought it was specific to enclosures but on minimalizing the quickstart it is apparent that it happens on any page where a non default namespace is specified AND a href has a relative path.
 
The attached quickstart has a single page with no components at all. In 6.x the page fails if a non default namespace is specified in the <html> tag. This works fine in 1.4.x and 1.5.x

<html xmls:foobar>

causes:

Last cause: Unable to find component with id 'foobar_relative_path_prefix_' in [HtmlHeaderContainer [Component id = _header_0]]
	Expected: '_header_0.foobar_relative_path_prefix_'.
	Found with similar names: ''

If we remove the non standard namespace declaration from the html element then the page works fine.

Also, if we remove the line:

<link rel=""stylesheet"" href=""style.css"" type=""text/css"" media=""screen"" title=""Stylesheet""/>

from the HomePage.html then the problem doesn't occur.

Problem could possibly be related to how RelativePathPrefixHanlder deals with a non default namespace.","Windows, Java 6.x",,,,,,,,,,,,,,,,,,,,,23/Oct/12 01:58;chrisc;nonStdNamespaceBugW6.2.zip;https://issues.apache.org/jira/secure/attachment/12550393/nonStdNamespaceBugW6.2.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-24 06:27:06.992,,,no_permission,,,,,,,,,,,250132,,,Fri Nov 02 17:52:28 UTC 2012,,,,,,0|i0aps7:,60450,,,,,,,,21/Oct/12 19:48;chrisc;Quickstart with a single page and no components demonstrating the problem.,"22/Oct/12 05:09;chrisc;Edit title to reflect new discovery: for the problem to occur you need the link element to have href with a relative path. Remove the link to style.css or make the href an absolute ref and the problem goes away.

Problem in RelativePathPrefixHanlder?","22/Oct/12 20:52;chrisc;I have found the cause of the problem but not sure of the best fix.

The cause:

In ComponentResolvers#resolve in both standard and non standard namespace scenarios the resolve process falls back to the resolveByApplication option.

resolveByApplication uses the application's component resolver collection that was established at application init - obviously none of these have a reference to the current markupStream (which indirectly stores the namespace for the stream) and that is indeed the case for the RelativePathPrefixHandler stored in the application component resolver collection as it is created in ""resolver"" mode (markupStream == null).

RelativePathPrefixHander#resolve calls RelativePathPrefixHander#getWicketRelativePathPrefix() which calls the base class' getWicketNamespace() method which, having markupStream == null will always return ""wicket"" and not the namespace declared for the current markupStream. This is why the component can not be resolved.

Possibly solution:

Perhaps RelativePathPrefixHander#getWicketRelativePathPrefix() could take a MarkupStream as a parameter and, if not null return, the namespace associated with that markupStream.","22/Oct/12 21:10;chrisc;In addition to 
.\wicket-core\src\main\java\org\apache\wicket\markup\parser\filter\RelativePathPrefixHandler.java

it looks like the following also call their base class' AbstractMarkupFilter method getWicketNamespace():

.\wicket-core\src\main\java\org\apache\wicket\markup\parser\filter\WicketMessageTagHandler.java
.\wicket-core\src\main\java\org\apache\wicket\markup\parser\filter\InlineEnclosureHandler.java

Therefore these will likely suffer from the same problem as they also can be used in ""resolver"" mode (markupStream == null).

Given that they all derive from AbstractMarkupFilter it might be best to provide a AbstractMarkupFilter.getWicketNamespace(MarkupStream markupStream) method and make them use that within the context of a resolve operation.","23/Oct/12 01:54;chrisc;I have implemented a fix that works well and is hopefully follows any wicket design guidelines.

To summarize: some of the markup filters that double as IComponentResolvers make calls to getWicketNamespace. As these application wide IComponentResolvers are essentially ""global"" they can't store a reference to an individual markup source and so currently have no markup context to use when returning the wicket namespace.

To remedy this we simply add a new getWicketNamespace method in AbstractMarkupFilter that takes a MarkupStream parameter. The resolve method of these three IComponentResolverS then simply passes in the MarkupStream to getWicketNamespace and the problem is fixed.


diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/parser/AbstractMarkupFilter.java b/wicket-core/src/main/java/org/apache/wicket/markup/parser/AbstractMarkupFilter.java
index 27779c5..ed4802b 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/parser/AbstractMarkupFilter.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/parser/AbstractMarkupFilter.java
@@ -23,6 +23,7 @@ import org.apache.wicket.markup.HtmlSpecialTag;
 import org.apache.wicket.markup.Markup;
 import org.apache.wicket.markup.MarkupElement;
 import org.apache.wicket.markup.MarkupParser;
+import org.apache.wicket.markup.MarkupStream;
 import org.apache.wicket.markup.MarkupResourceStream;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -176,4 +177,21 @@ public abstract class AbstractMarkupFilter implements IMarkupFilter
 		}
 		return wicketNamespace;
 	}
+
+	/**
+	 * @return the namespace of the given markup or loaded markup
+	 */
+	protected String getWicketNamespace(MarkupStream markupStream)
+	{
+		String wicketNamespace;
+		if (markupStream != null)
+		{
+			wicketNamespace = markupStream.getWicketNamespace();
+		}
+		else
+		{
+			wicketNamespace = getWicketNamespace();
+		}
+		return wicketNamespace;
+	}
 }
diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java
index f812f76..84a959e 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java
@@ -178,7 +178,7 @@ public final class InlineEnclosureHandler extends AbstractMarkupFilter
 		if (Strings.isEmpty(inlineEnclosureChildId) == false)
 		{
 			String id = tag.getId();
-			if (id.startsWith(getWicketNamespace()))
+			if (id.startsWith(getWicketNamespace(markupStream)))
 			{
 				id = id + container.getPage().getAutoIndex();
 			}
diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/RelativePathPrefixHandler.java b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/RelativePathPrefixHandler.java
index 420a881..4f1c593 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/RelativePathPrefixHandler.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/RelativePathPrefixHandler.java
@@ -141,7 +141,7 @@ public final class RelativePathPrefixHandler extends AbstractMarkupFilter
 			{
 				if (tag.getId() == null)
 				{
-					tag.setId(getWicketRelativePathPrefix());
+					tag.setId(getWicketRelativePathPrefix(null));
 					tag.setAutoComponentTag(true);
 				}
 				tag.addBehavior(RELATIVE_PATH_BEHAVIOR);
@@ -157,7 +157,7 @@ public final class RelativePathPrefixHandler extends AbstractMarkupFilter
 	public Component resolve(final MarkupContainer container, final MarkupStream markupStream,
 		final ComponentTag tag)
 	{
-		if ((tag != null) && (tag.getId().equals(getWicketRelativePathPrefix())))
+		if ((tag != null) && (tag.getId().equals(getWicketRelativePathPrefix(markupStream))))
 		{
 			String id = tag.getId() + container.getPage().getAutoIndex();
 
@@ -169,8 +169,8 @@ public final class RelativePathPrefixHandler extends AbstractMarkupFilter
 		return null;
 	}
 
-	private String getWicketRelativePathPrefix()
+	private String getWicketRelativePathPrefix(MarkupStream markupStream)
 	{
-		return getWicketNamespace() + WICKET_RELATIVE_PATH_PREFIX_CONTAINER_ID;
+		return getWicketNamespace(markupStream) + WICKET_RELATIVE_PATH_PREFIX_CONTAINER_ID;
 	}
 }
diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java
index 65aa1d1..204b21e 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/WicketMessageTagHandler.java
@@ -91,7 +91,7 @@ public final class WicketMessageTagHandler extends AbstractMarkupFilter
 				// if this is a raw tag we need to set the id to something so
 				// that wicket will not merge this as raw markup and instead
 				// pass it on to a resolver
-				tag.setId(getWicketMessageIdPrefix());
+				tag.setId(getWicketMessageIdPrefix(null));
 				tag.setAutoComponentTag(true);
 				tag.setModified(true);
 			}
@@ -163,11 +163,11 @@ public final class WicketMessageTagHandler extends AbstractMarkupFilter
 	public Component resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag)
 	{
 		// localize any raw markup that has wicket:message attrs
-		if ((tag != null) && (tag.getId().startsWith(getWicketMessageIdPrefix())))
+		if ((tag != null) && (tag.getId().startsWith(getWicketMessageIdPrefix(markupStream))))
 		{
 			Component wc;
 			int autoIndex = container.getPage().getAutoIndex();
-			String id = getWicketMessageIdPrefix() + autoIndex;
+			String id = getWicketMessageIdPrefix(markupStream) + autoIndex;
 
 			if (tag.isOpenClose())
 			{
@@ -189,8 +189,8 @@ public final class WicketMessageTagHandler extends AbstractMarkupFilter
 		return wicketNamespace + ':' + ""message"";
 	}
 
-	private String getWicketMessageIdPrefix()
+	private String getWicketMessageIdPrefix(MarkupStream markupStream)
 	{
-		return getWicketNamespace() + WICKET_MESSAGE_CONTAINER_ID;
+		return getWicketNamespace(markupStream) + WICKET_MESSAGE_CONTAINER_ID;
 	}
 }
","23/Oct/12 01:58;chrisc;This is an update which adds a tests inline exclosures. HomePage.html is provided with two <html> blocks -one for default namespace and one for non default namespace for easy testing.
This test works with the patch/diff I have provided.","24/Oct/12 06:27;svenmeier;Although I wasn't able to apply your patch directly, your changes seems to solve this issue.

But before we just fix the code, perhaps we improve the whole situation:
It's unfortunate that AbstractMarkupFilter#markupResourceStream is sometimes set and on other times it's null.
And InlineEnclosureHandler still has ""wicket:"" prefix in INLINE_ENCLOSURE_ATTRIBUTE_NAME.

I wonder why RelativePathPrefixHandler#getWicketRelativePathPrefix() and others even bother to prefix the id with the namespace? The namespace is the same for the whole markup anyway. Wouldn't it be easier just to skip the prefixing?","24/Oct/12 06:37;chrisc;The handlers/filters deriving from AbstractMarkupFilter have dual personalities and they are constructed in one or the other personality. On one hand the filters are actually filters but on the other hand they act as component resolvers. When acting as component resolvers they are used as ""globals"" by the app and so can't keep a reference to any particular markup as they are reused in the rendering of many different markups - this explains why markupResourceStream must be null when constructed in ""ComponentResolver"" mode. I don't think we can avoid that while ever rendering requires the use of the application wide, and therefore shared, collection of IComponentResolvers.

I think the reason the namespace is used in the id is because even though the namespace is the same for any one markup, markup inheritance (extend/child) means that you can be performing a render across multiple markups which *could* have different namespaces. I'm not sure if that would be a problem in this case where the component resolution is all bound to within the rendering of a single markup. I don't know but there may be complex markup inheritance usage where not having the namespace could be a problem.","24/Oct/12 06:58;svenmeier;Yeah, this dual personalities thing I find unfortunate: depending on the personality the member variable is null.

Regarding the namespace prefix:
I don't think it makes any difference from what namespace the componentTag was identified from. All <wicket:message>, <foo:message> and <bar:message> tags from different markups are handled by the same WicketMessageTagHandler and resolved by a single WicketMessageTagHandler. The prefix shouldn't matter.","24/Oct/12 07:23;chrisc;WicketMessageTagHandler may not need the prefix but some of the other filters/resolvers might be used in scenarios that cross markups. Not sure exactly but maybe an <:extend> tag inside an <:enclosure> or perhaps an 'a' tag using a relative path inside a markup that is 'overridden' in a child (derived) markup.

I'm not sure if these scenarios are plausible but to verify that *all* scenarios work without the namespace inside the id would require very exhaustive, extensive testing.

For now it might be easier to make the small fix that does not alter the composition of the id because it is a lot less risky than changing the composition of the id. Perhaps the change of id composition could be raised as a separate ""improvement"" issue in JIRA.","25/Oct/12 22:38;chrisc;Do you think it would be possible to go ahead with the simple bug fix now and look at the other idea as an improvement? If you could apply these small, safe patches into the master then I can switch back to the master branch again and then maybe we can look at the riskier move of changing the id composition later.

At the moment we want our app to go live soon with a 6.2 snapshot but without the patches in the master we'd have to make a release based on our own branch with the fix which isn't ideal.","26/Oct/12 08:36;svenmeier;Before adding more methods, I'd like to hear Martin's opinion on this, since he worked on WICKET-4520 and WICKET-4521.",02/Nov/12 17:52;chrisc;I couldn't find any reference to this fix in GitHub. Does something need to be pulled before it ends up in the master branch?,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketRuntimeException when Tomcat cleans up a session later on,WICKET-4842,12613610,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,tapter,tapter,26/Oct/12 06:43,02/Nov/12 14:51,13/Mar/19 23:17,02/Nov/12 14:51,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.3.0,,,,,,,,,0,,,,,,,"When I let my tomcat 6 sit around for a couple hours, a session will expire after a while.
Exactly 4 hours after the last request, I then get this stacktrace on system out:

{quote}
     [exec] 25.10.2012 19:59:08 org.apache.catalina.core.ContainerBase backgroundProcess
     [exec] WARNUNG: Exception processing manager org.apache.catalina.session.StandardManager@b3f7eb background process
     [exec] org.apache.wicket.WicketRuntimeException: There is no application attached to current thread ContainerBackgroundProcessor[StandardEngine[Catalina]]
     [exec] 	at org.apache.wicket.Application.get(Application.java:231)
     [exec] 	at org.apache.wicket.protocol.http.AbstractRequestLogger.<init>(AbstractRequestLogger.java:111)
     [exec] 	at org.apache.wicket.protocol.http.RequestLogger.<init>(RequestLogger.java:45)
     [exec] 	at org.apache.wicket.Application.newRequestLogger(Application.java:759)
     [exec] 	at org.apache.wicket.Application.getRequestLogger(Application.java:439)
     [exec] 	at org.apache.wicket.protocol.http.WebApplication.sessionUnbound(WebApplication.java:511)
     [exec] 	at org.apache.wicket.session.HttpSessionStore$SessionBindingListener.valueUnbound(HttpSessionStore.java:454)
     [exec] 	at org.apache.catalina.session.StandardSession.removeAttributeInternal(StandardSession.java:1654)
     [exec] 	at org.apache.catalina.session.StandardSession.expire(StandardSession.java:756)
     [exec] 	at org.apache.catalina.session.StandardSession.isValid(StandardSession.java:592)
     [exec] 	at org.apache.catalina.session.ManagerBase.processExpires(ManagerBase.java:680)
     [exec] 	at org.apache.catalina.session.ManagerBase.backgroundProcess(ManagerBase.java:665)
     [exec] 	at org.apache.catalina.core.ContainerBase.backgroundProcess(ContainerBase.java:1316)
     [exec] 	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1601)
     [exec] 	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1610)
     [exec] 	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1610)
     [exec] 	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1590)
     [exec] 	at java.lang.Thread.run(Thread.java:662)
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,251170,,,2012-10-26 06:43:45.0,,,,,,0|i0b57r:,62957,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractResourceReferenceMapper doesn't escape separators in style/variation names,WICKET-4844,12613871,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,29/Oct/12 10:35,29/Oct/12 14:36,13/Mar/19 23:17,29/Oct/12 14:36,1.5.8,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.3.0,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.request.mapper.AbstractResourceReferenceMapper#encodeResourceReferenceAttributes() doesn't escape '-' character when generating the query string parameter with the locale-style-variation.

So using a style with name ""a-b"" leads to parameter with name ""-a-b"" and later is decoded to style == ""a"" and variation == ""b""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,252723,,,Mon Oct 29 14:36:26 UTC 2012,,,,,,0|i0d4h3:,74501,,,,,,,,"29/Oct/12 14:36;mgrigorov;Fixed.
'-' is replaced with '~', and '~' with '~~'.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Non standard (""wicket"") namespace causes incorrect relative URL in certain cases",WICKET-4330,12537877,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,chrisc,chrisc,10/Jan/12 09:45,21/Oct/12 19:50,13/Mar/19 23:17,11/Jan/12 13:01,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,wicket,,,,,,"The problem is related to non standard (i.e. ""wicket"") namespaces.

In my quickstart if I change the namespace in all markup from ""wicket""
to ""foobar"" then the BPL which has only the last segment differing from the current page ends up producing an incorrect link to another page in the same path.

i.e.

Browser is at this page:
http://127.0.0.1/content/other/o/1234/aspect/fred


<p>
	Here's a relative link to another page in the same 'path'
	<div>
		<a foobar:id=""janeLink"" href=""../../../../../jane""
style=""outline: 0;"">
			jane
		</a>
	</div>
</p>
<p>
	A link to the current page
	<a foobar:id=""fredLink"" href=""fred"">fred</a> </p>

The above BPL href of ../../../../../jane is wrong.

With 'wicket' set as the namespace the 'jane' BPL outputs 'jane' which is correct.

This same code worked with the non standard namespace under 1.4.x

Attached quickstart demonstrates the issue.","Win XP, 4GB RAM, Tomcat 6, Java 6",,,,,,,,,,,,,,,,,,,,,10/Jan/12 09:46;chrisc;nonStdNamespaceBug.zip;https://issues.apache.org/jira/secure/attachment/12510025/nonStdNamespaceBug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-01-10 14:57:35.866,,,no_permission,,,,,,,,,,,223383,,,Wed Jan 11 20:44:35 UTC 2012,,,,,,0|i00w3j:,3132,,,,,,,,"10/Jan/12 09:46;chrisc;Quickstart - uses port 80, not 8080!","10/Jan/12 09:51;chrisc;The cause of the issue seems to be that the BPL tag is incorrectly having the RelativePathPrefixHandler invoked on it. With the non standard namespace Wicket confuses this BPL for a non wicket tag and so applies that filter which causes the damage to the href when it attempts to make an already relative link relative ... again ;)
","10/Jan/12 14:57;mgrigorov;How this application even works ?
You don't specify anywhere that 'foobar' is a replacement for 'wicket' namespace. Or at least I don't see it.","10/Jan/12 15:03;mgrigorov;Otherwise the problem seems to be the check for ""wicket:id"" in org.apache.wicket.markup.parser.filter.RelativePathPrefixHandler#onComponentTag().
It doesn't honor changed namespaces for MarkupParser (I still don't see you doing this anyway).","10/Jan/12 15:17;mgrigorov;wicket:message wont work as well with changed namespace:

/** TODO Post 1.2: General: Namespace should not be a constant */
	private final static String WICKET_MESSAGE_ATTRIBUTE_NAME = ""wicket:message"";
","10/Jan/12 15:21;mgrigorov;org.apache.wicket.markup.html.form.AutoLabelTextResolver.TextLabel#findLabelContent has:

String text = formComponent.getDefaultLabel(""wicket:unknown"");
				if (!""wicket:unknown"".equals(text) && !Strings.isEmpty(text))

I'm not sure wicket:unknown is even documented anywhere... :-/","10/Jan/12 18:20;chrisc;> You don't specify anywhere that 'foobar' is a replacement for 'wicket' namespace. Or at least I don't see it. 

It's specified in the html tag of each markup file. That was all that was required to change the namespace in 1.4.x. In fact in 1.4.x we even had some markup specified with ""wicket"" namespace and others specified with ""foobar"" namespace and it worked perfectly - even markup inheritance worked with markups in the hierarchy having *different* namespaces.

Are you saying that in 1.5.x we need to specify a namespace change in the java code somewhere?

> General: Namespace should not be a constant

I had a hunch that some hard coded ""wicket"" namespace references in 1.5.x might be related or the cause of the issue.","11/Jan/12 10:24;mgrigorov;AFAIK you need to configure the namespace with org.apache.wicket.markup.AbstractMarkupParser#setWicketNamespace().
I haven't had time to debug how now <foobar:panel> actually works.
But even with #setWicketNamespace(""foobar"") the problems in my previous comment will break your application.",11/Jan/12 10:28;chrisc;That must be a change since 1.4.x where we've been using different namespaces that were specified purely at the markup level with no Java code to specify them.,"11/Jan/12 12:06;mgrigorov;All is fine.
It appears that org.apache.wicket.markup.parser.filter.WicketNamespaceHandler is responsible to extract the namespace from <html xmlns:...> and set it for the MarkupResourceStream.
I'll fix the issues in the comments above.",11/Jan/12 20:44;chrisc;Thanks Martin! That works really well now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redirect to HTTPS is using wrong port 80 if HttpsConfig with default ports 80/443 is used,WICKET-4824,12612635,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svenmeier,svenmeier,19/Oct/12 09:09,19/Oct/12 10:40,13/Mar/19 23:17,19/Oct/12 10:40,6.1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"HttpsMapper#mapHandler() doesn't set the Url's port, if the desired protocol uses the standard port.

This leads to UrlRenderer choosing to the request's port as fallback (which is 80 before switching to https).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,249884,,,Fri Oct 19 10:40:48 UTC 2012,,,,,,0|i0amlb:,59933,,,,,,,,"19/Oct/12 10:40;svenmeier;Port is now always set explicitly, it won't be rendered by UrlRenderer if not required",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
URLRenderer renderFullUrl,WICKET-4587,12559331,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,forchel,forchel,05/Jun/12 06:29,18/Oct/12 08:44,13/Mar/19 23:17,18/Oct/12 08:44,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"When using the following code to create an absolute url in wicket 1.5.7 from a page class and parameters, there are also duplicate segments in the url. the rendered absolute url is not correct.

final Url url = RequestCycle.get().mapUrlFor( pageClass, pageParameters );
final String result = RequestCycle.get().getUrlRenderer().renderFullUrl( url );

RequestCycle.get().mapUrlFor(..) does not return an ""absolute"" url (first segment will not be empty).

See also description in WICKET-4561
",,,,,,,,,,,,,,,,,,,,,,05/Jun/12 07:35;forchel;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12530909/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-06-21 09:12:21.611,,,no_permission,,,,,,,,,,,240062,,,Thu Oct 18 08:44:42 UTC 2012,,,,,,0|i00wj3:,3202,,,,,,,,"05/Jun/12 07:35;forchel;Attached you can find the quickstart. The BasePage class generates in the HTML header links to alternative Languages/Locales (just as an example). These links are absolute URLs. With Wicket 1.5.5 the generated links are correct but not with Wicket 1.5.7.

correct: http://localhost:8080/shop/en/home.html
wrong: http://localhost:8080/shop/de_DE/shop/en/home.html

You can switch to different Locales/Languages with the LocaleDropDownChoice added to each page.
","21/Jun/12 09:12;mgrigorov;The fix for your app is to replace
final Url url = getRequestCycle().mapUrlFor( getPageClass(), getPageParameters() );

with
final Url url = Url.parse(urlFor( getPageClass(), getPageParameters() ).toString());

I am not sure how to prevent such error cases. Different methods create different things.

urlFor() returns url relative to the current one (the baseUrl). It uses mapUrlFor() internally to get the url that the IRequestMapper would create and then relativizes it agains the baseUrl.

mapUrlFor() returns the plain url that IRequestMapper creates. I'm not sure how useful is it for end users because it returns an url which is relative to the filter path, not against the current url or the context path...

",18/Oct/12 08:44;mgrigorov;I've improved the javadoc of #mapUrlFor() methods. Now they describe what is the difference with #urlFor() methods.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handling of semicolons in form action URLs,WICKET-4816,12612019,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aws1032,aws1032,16/Oct/12 11:50,17/Oct/12 12:28,13/Mar/19 23:17,17/Oct/12 12:28,1.5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,wicket,,,,,,,0,,,,,,,"What I expect to happen when there is no semicolon support in Wicket is that a
URL in a form like below stays intact and will not be cut off at the position of
the first semicolon:

<form action=""http://localhost:8080/dor/abc_1234:56;023:456_def_78;90.html""
method=""post""><input type=""submit"" value=""Submit"" /></form>

In my application the part abc_1234:56;023:456_def_78;90.html is ""named1"" in the
mapping below:

mount(new MountedMapper(""dor/#{named1}"", TestPage.class, new
MyPageParametersEncoder()));

and parsed in MyPageParametersEncoder.

The officially intended use of semicolons in URLs seems to be specified in ""RFC
1808 - Relative Uniform Resource Locators, 2.4.5.""
(http://www.faqs.org/rfcs/rfc1808.html). But that´s not what I´m looking for.

If I had not some pages running on this syntax, I could easily swap the
semicolon with another symbol. Nevertheless and if I´m correctly informed, I
think those URLs should not be cut off.

(Quotation from the mailing list)

The quickstart can be tested with the following URLs:

http://localhost:8080/dor/abc_1234:56;023:456_def_78;90.html
http://localhost:8080/dor/abc_1234:56%3B023:456_def_78%3B90.html
http://localhost:8080/dor/?abc=1234:56%3B023:456&def=78%3B90

The crucial part is the action attribute in the form in the page´s source code, which contains i.e. ""./abc_1234:56?-1.IFormSubmitListener-form"".",Jetty 8.1.1.v20120215,,,,,,,,,,,,,,,,,,,,,16/Oct/12 11:51;aws1032;myproject.tar.gz;https://issues.apache.org/jira/secure/attachment/12549291/myproject.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-17 12:28:57.442,,,no_permission,,,,,,,,,,,248968,,,Wed Oct 17 12:28:57 UTC 2012,,,,,,0|i0a2tj:,56730,,,,,,,,16/Oct/12 11:51;aws1032;The quickstart mentioned above.,"16/Oct/12 12:10;aws1032;This might be the source code responsible for the cut:

org.apache.wicket.util.string.Strings#stripJSessionId(String url)

where it reads: cut off at "";""","17/Oct/12 12:28;mgrigorov;Yes, Strings.stripJSessionId() was the problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException while reading the POST parameters,WICKET-4818,12612186,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,17/Oct/12 10:04,17/Oct/12 10:20,13/Mar/19 23:17,17/Oct/12 10:20,1.5.8,6.1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,wicket,,,,,,,0,,,,,,,"It seems some web containers return a 'null' value for HttpServletRequest#getParameterMap() -> entry.getValue() instead of empty String[] and this causes NullPointerException while iterating the values.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,249251,,,2012-10-17 10:04:29.0,,,,,,0|i0a6dj:,57306,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Submitting value filled in DropDownChoice fails when tinymce textarea is on the page,WICKET-4771,12608218,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,marie,marie,19/Sep/12 09:47,09/Oct/12 14:52,13/Mar/19 23:17,09/Oct/12 14:52,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"I have a form with a TextField and DropDownChoice. 
On the same page I also have a textarea that is used for tinymce. 
When submitting my form, only the value from the TextField is correctly filled into the modelobject, 
not from the DropDownChoice.
When I remove the tinymce textarea from my page, the value from DropDownChoice is also correctly filled in the modelobject. 

This worked in wicket 1.5.7.
I will add a quickstart",,,,,,,,,,,,,,,,,,,,,,19/Sep/12 09:48;marie;myproject.zip;https://issues.apache.org/jira/secure/attachment/12545701/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,240074,,,Wed Sep 19 09:48:41 UTC 2012,,,,,,0|i00wq7:,3234,,,,,,,,"19/Sep/12 09:48;marie;QuickStart that can reproduce the problem. 
Just fill in a value in the textfield and choice one from the DropDownChoice. Then press submit. I put some System.outs in the onsubmit, that show that only the value from the TextField is filled into the modelobject.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableChoiceLabel won't close select onblur,WICKET-4806,12610739,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,sscialabba,sscialabba,07/Oct/12 04:50,09/Oct/12 14:32,13/Mar/19 23:17,09/Oct/12 14:32,6.0.0,6.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket-extensions,,,,,,,0,,,,,,,"AjaxEditableChoiceLabel won´t close the select combo (showed after clicking in the asociated label) when it losses the focus. It's supossed to call the onCancel method like it does in AjaxEditableLabel but the select turns into a label only selecting a different value in the select combo (it doesn't work pressing Escape or clicking in other part of the page).
I fix it localy adding this code:

editor.add(new AjaxEventBehavior(""blur"") {
	protected void onEvent(AjaxRequestTarget target) {
		AjaxEditableChoiceLabel.this.onCancel(target);
           }
});

For the editor declared as DropDownChoice in line 183 of AjaxEditableChoiceLabel .java.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,244930,,,2012-10-07 04:50:27.0,,,,,,0|i05wnz:,32389,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket 6 and Atmospher Integration:  AtmosphereServlet does not delegate WicketFilter for Error Pages .,WICKET-4742,12605969,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,esajjkh,esajjkh,03/Sep/12 09:51,05/Oct/12 13:44,13/Mar/19 23:17,10/Sep/12 13:02,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"Atmosphere(0.2 version)Integration : AtmosphereServlet does not delegate to WicketFilter internally to display the mounted error pages. 

",Windows Vista,,,,,,,,,,,,,,,,,,,,,03/Sep/12 11:40;esajjkh;myproject.tar;https://issues.apache.org/jira/secure/attachment/12543533/myproject.tar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-09-04 08:48:51.173,,,no_permission,,,,,,,,,,,243372,,,Fri Oct 05 13:44:41 UTC 2012,,,,,,0|i03dof:,17649,,,,,,,,04/Sep/12 08:48;papegaaij;This is a bug in AtmosphereServlet. I've created a ticket at https://github.com/Atmosphere/atmosphere/issues/595 . I'll keep this open until the other ticket is resolved.,10/Sep/12 12:52;jfarcand;This is fixed in Atmosphere 1.0.0. Try updating the atmosphere-runtime.jar to 1.0.0 and let me know if that help.,"10/Sep/12 13:02;papegaaij;With Atmosphere 1.0.0, which is included in the next version of wicket-atmosphere, this is fixed.","05/Oct/12 13:44;esajjkh;Hi, I have updated to wicket 6.1.0 , however wicket error pages are still hurting me. I have asked the question with details at:
http://apache-wicket.1842946.n4.nabble.com/Wicket-6-and-Atmosphere-framework-integration-tt4651637.html

Any help will be appreciated. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester.executeAjaxEvent only fires one of multiple behaviors bound to a given event,WICKET-4801,12610095,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,brianlaframboise,brianlaframboise,03/Oct/12 16:25,03/Oct/12 20:00,13/Mar/19 23:17,03/Oct/12 20:00,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"Migrating from Wicket 1.4.21 to 6.0.0, I have a test failing because an AjaxFormComponentUpdatingBehavior was not executed despite calling WicketTester.executeAjaxEvent on the desired component with the correct event.

The component in question has two behaviors added to it; both behaviors are bound to the same event. My test is only interested in exercising one of the behaviors.

The root cause appears to be that BaseWicketTester uses WicketTesterHelper.findAjaxEventBehaviour to find and execute a behavior. That method returns only the first behavior matching the given event - even though there can be many.

From what I can gather, Wicket 1.4.21 happens to find the behaviour I'm interested in whereas Wicket 6.0.0 happens to find the other one.

When I exercise the same code in an actual servlet environment (Jetty), both behaviors are executed as expected.

I've attached a quickstart project with a test case that reproduces this issue.",,,,,,,,,,,,,,,,,,,,,,03/Oct/12 16:26;brianlaframboise;WICKET-4801-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12547550/WICKET-4801-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257689,,,2012-10-03 16:25:58.0,,,,,,0|i0k84f:,116133,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AtmosphereWebRequest should return true on calls to #isAjax(),WICKET-4756,12606855,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,johannes.odland@gmail.com,johannes.odland@gmail.com,10/Sep/12 10:31,03/Oct/12 13:54,13/Mar/19 23:17,03/Oct/12 13:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,,,,,,,,0,,,,,,,"When WebPage#dirty() method is called it checks wether the request is an ajax request or not. 

If the request is an ajax-request the page keeps the same page-id, if not the page-id is incremented.


AtmosphereWebRequest returns false when isAjax() is called.
As a result, page-ids are incremented when posted messages to the eventbus is processed. 
The new state of the page will be stored with a new id. 

Any subsequent posts or ajax-events will not be able to access the new state, they will still access the page with the old id.

AtmosphereWebRequest should return _true_ when isAjax() is called.



Example: 

If you create a simple page with a listview and a list that can be updated with both wicket-atmosphere and wicket-ajax this will happen:


After instantiation:

pagestore:
0 : empty list

Add one string with wicket ajax:

pagestore:
0 :  ""This message was added with ajax""

Add one string with wicket-atmosphere

pagestore:
0: ""This message was added with ajax""
1: ""This message was added with ajax"", ""This method was added with atmosphere""


At this point, if the user refreshes the page, updates the list with ajax or atmosphere the user will se the result of page with id 0. The change that was performed with atmosphere will be lost.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257700,,,2012-09-10 10:31:51.0,,,,,,0|i0k86v:,116144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DOM ids change of the input fields of FilterToolbar,WICKET-4784,12609105,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,wk,wk,25/Sep/12 19:10,03/Oct/12 12:37,13/Mar/19 23:17,03/Oct/12 12:37,1.5.8,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,,,wicket-extensions,,,,,,,0,,,,,,,"The fix in WICKET-3916 is not effective: https://fisheye6.atlassian.com/changelog/wicket?cs=1148229

https://github.com/apache/wicket/blob/master/wicket-core/src/main/java/org/apache/wicket/Component.java#L2506

As one can see in Component.internalRenderComponent(), the method Component.onComponentTag(), where the markup id is written to the tag, is called before the behavior had a chance to call setOutputMarkupId(true). (The Behavior.onComponentTag() is called in Component.renderComponentTag() a few lines down. The behavior has to call setOutputMarkupId() earlier, like in onConfigure()",,,,,,,,,,,WICKET-4758,,,,,,,,,,,25/Sep/12 19:10;dashorst;WICKET-4758.patch;https://issues.apache.org/jira/secure/attachment/12546567/WICKET-4758.patch,25/Sep/12 19:10;dashorst;filter-columns2.tar.gz;https://issues.apache.org/jira/secure/attachment/12546566/filter-columns2.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-09-25 20:54:05.216,,,no_permission,,,,,,,,,,,257697,,,Tue Sep 25 20:54:05 UTC 2012,,,,,,0|i0k867:,116141,,,,,,,,25/Sep/12 19:32;wk;Um... how did this issue get recreated under a new number? Did I click a link I was not supposed to click? Just don't want to cause any trouble.,"25/Sep/12 20:54;dashorst;I did this to be able to close the original issue for 6.1.0. I tried for a while to fix 1.5.x as well, but want to release 6.1.0 soonish, so I split the issue into 2.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilterForm/FilterToolbar don't work when there's more than one IColumn to be filtered,WICKET-4759,12607513,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,wk,wk,13/Sep/12 20:31,03/Oct/12 11:44,13/Mar/19 23:17,03/Oct/12 10:48,6.0.0,6.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.1,6.2.0,,wicket-extensions,,,,,,,0,,,,,,,"Adding more than one IFilteredColumn to a DefaultDataTable wrapped in a FilterForm removes the ability to submit the form by pressing the enter key. A HTML form needs a submit button so it can be submitted by pressing enter. (For some reason it works when there's only one input field)

I'll attach a quickstart to clarify the issue.",,,,,,,,,,,,,,,,,,,,,,13/Sep/12 20:36;wk;WICKET-4759.patch;https://issues.apache.org/jira/secure/attachment/12545043/WICKET-4759.patch,13/Sep/12 20:34;wk;filter-columns.tar.gz;https://issues.apache.org/jira/secure/attachment/12545041/filter-columns.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-10-03 11:44:00.296,,,no_permission,,,,,,,,,,,252543,,,Wed Oct 03 11:44:00 UTC 2012,,,,,,0|i0cuon:,72915,,,,,,,,13/Sep/12 20:34;wk;Quickstart with a basic DefaultDataTable with two filtered columns,13/Sep/12 20:36;wk;proposed patch against master,27/Sep/12 18:16;wk;Stackoverflow thread to the same issue: http://stackoverflow.com/questions/477691/submitting-a-form-by-pressing-enter-without-a-submit-button,03/Oct/12 11:44;dashorst;Also applied on the 6.1.1 branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clicking on Label of Radio doesn't update component with Ajax update,WICKET-4769,12608066,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,thyzz,thyzz,18/Sep/12 14:05,03/Oct/12 10:50,13/Mar/19 23:17,03/Oct/12 10:50,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,1,,,,,,,"We just upgraded a application from wicket 1.4 to wicket 6.
We discovered that when clicking on the label of a radio button that has a AjaxFormChoiceComponentUpdatingBehavior attached the radio is not selected.

I'll attach 2 testcases (one for wicket 1.4 and one for wicket 6)",,,,,,,,,,,,,,,,,,,WICKET-4797,,,20/Sep/12 22:58;aaron.j.garcia;radio-choice-bug-6.0.0.tar;https://issues.apache.org/jira/secure/attachment/12545974/radio-choice-bug-6.0.0.tar,02/Oct/12 18:07;thyzz;radio-label.html;https://issues.apache.org/jira/secure/attachment/12547413/radio-label.html,18/Sep/12 14:15;thyzz;test.zip;https://issues.apache.org/jira/secure/attachment/12545565/test.zip,18/Sep/12 14:15;thyzz;test14.zip;https://issues.apache.org/jira/secure/attachment/12545566/test14.zip,,,,,4.0,,,,,,,,,,,,,,,,,,,2012-09-20 22:57:00.149,,,no_permission,,,,,,,,,,,257699,,,Wed Oct 03 07:34:19 UTC 2012,,,,,,0|i0k86n:,116143,,,,,,,,"18/Sep/12 14:15;thyzz;test runs on port 8080
test14 runs on port 8081
","20/Sep/12 22:57;aaron.j.garcia;I'm also having this issue, but I went from 1.5.8 -> 6.0.0.  I have a Quick Start too, which I will attach.  It seems that this only happens when the RadioChoice form component is inside of a form.  When I had a RadioChoice component outside of the form, the issue wasn't occurring.  ",20/Sep/12 22:58;aaron.j.garcia;Another quick start that illustrates the issue. ,"20/Sep/12 23:02;aaron.j.garcia;Some more details (sorry for the multiple comments):

Java Version: 1.7.0_04
Tomcat Version: 7.0.27
Firefox Version: 15.0
Operating System: Open Suse 11.4
","21/Sep/12 06:45;thyzz;In my example the radio is inside a radiogroup, not in a form.","02/Oct/12 12:25;thyzz;I build wicket from source, but the example provided in test.zip (and so also my application) still don't work. Can this be reopened?","02/Oct/12 12:49;mgrigorov;When I debugged it I used radio-choice-bug-6.0.0.tar...
Testing with test.zip I see that it fires the Ajax event twice - the second time it comes after repainting the group.
By just commenting out the line: 
target.add(group); 
in TestPage it starts working.

I have no idea why it fires 'click' event after the DOM replacements.","02/Oct/12 13:03;thyzz;I wish I could comment out that line in my reallife application. There it's part of a larger repaint action.
I'll start digging, to see if I can find out why it gets repainted a second time.","02/Oct/12 13:14;thyzz;When I comment out target.add(group); it still fires the ajax call twice. 
Only difference is that now the selection stay's
","02/Oct/12 18:07;thyzz;The repainting of the dom doesn't trigger the second event.
When you click on the label 2 click events are fired. If you click on the radio button there is only one event.
See the attached html file demonstrating the issue. 

This causes the ajax request to happen twice, with all kinds of weird side effects. 

some extra info: http://bugs.jquery.com/ticket/10673","02/Oct/12 18:38;mgrigorov;It is not the same. In your code the <label> doesn't wrap the <input>.
http://jsfiddle.net/HKGsT/14/ works as expected.","02/Oct/12 18:56;thyzz;Ah yes. But as sone as you pull the click event to an wrapping div: http://jsfiddle.net/LmMuy/ (which is basically the same as my earlier example) it gives the same behavior of the double event.

(May be I'm now stating the obvious, not sure I understood your comment completely)
","02/Oct/12 18:56;mgrigorov;I just committed a change [1] which I'll have to revert :-/
It works only if the choice component is repainted with the Ajax response.


1. https://git-wip-us.apache.org/repos/asf/wicket/repo?p=wicket.git;a=commitdiff;h=881d03ec84ead3386d37faf0eecf50d05fe30ac9","02/Oct/12 19:18;mgrigorov;I think I solved it.
Please try the latest code in master branch.",02/Oct/12 19:21;svenmeier;I have a solution for WICKET-4797 ready that would solve this issue too. May I interrupt your check-ins for a moment?,"02/Oct/12 19:29;thyzz;The test case (as in test.zip) works!!
Tomorrow, when I'm actually working, i'll try the big app where I found the issue. Thanks so far","02/Oct/12 20:42;svenmeier;I've checked a solution for WICKET-4797 which addresses this issue too. Now the input name is used for Ajax precondition and identification of checked inputs, which hopefully is much simpler to understand and maintain.

I took the opportunity to impoved  the Javascript similar Carl-Eric's AbstractCheckSelector.",03/Oct/12 07:34;thyzz;It works! Thanks Martin and Sven,,,,,,,,,,,,,,,,,,,,,
CheckBoxMultipleChoice loses state,WICKET-4797,12609774,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,pedrosans,pedrosans,01/Oct/12 17:12,02/Oct/12 20:38,13/Mar/19 23:17,02/Oct/12 20:38,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"At 6.2.0-SNAPSHOT the CheckBoxMultipleChoice component looses its current selection of options every time a new one is selected. Initial investigation/debug shows that the converted input already don't have the full user selection, so the root cause may be a bug in the encode/decoding of the request parameters.
It's a regression since the same quickstart works fine at 6.0.0",,,,,,,,,,,,,,,,,,,,,,01/Oct/12 17:12;pedrosans;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12547239/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257690,,,Mon Oct 01 17:21:30 UTC 2012,,,,,,0|i0k84n:,116134,,,,,,,,"01/Oct/12 17:21;pedrosans;just tested the quickstart at 6.1.0 and it's OK, the but is at the  6.2.0-SNAPSHOT only",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebApplication doesn't recognize if an incoming request is multipart.,WICKET-4715,12603736,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bitstorm,bitstorm,16/Aug/12 15:03,01/Oct/12 08:59,13/Mar/19 23:17,07/Sep/12 09:03,1.5.7,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,,,,,,,,0,,,,,,,"Thanks to the mail at http://apache-wicket.1842946.n4.nabble.com/Read-POST-based-request-from-external-site-td4651269.html we have spotted a problem with method  newWebRequest of class WebApplication. 
It seems that this method doesn't test if the original request is multipart and doing so post parameters go lost. 
We should create a  MultipartServletWebRequestImpl when such a type of request is being served. I attach a possible patch but I'm not 100% about two things:
- which is the best way to determinate if a HttpServletRequest is multipart?
- in order to build a MultipartServletWebRequestImpl we need to provide a string identifier for the upload.   How can we generate it (in my patch it's a constant value)?
",,,,,,,,,,,,,,,,,,,WICKET-4791,,,16/Aug/12 19:14;bitstorm;WICKET-4715.patch;https://issues.apache.org/jira/secure/attachment/12541265/WICKET-4715.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-20 06:51:00.716,,,no_permission,,,,,,,,,,,250931,,,Mon Oct 01 08:59:37 UTC 2012,,,,,,0|i0b2jr:,62525,,,,,,,,"16/Aug/12 19:19;bitstorm;I've seen how Commons FileUpload library solved the problem of determining if a HttpServletRequest is multipart and is quite similar to what I've done, so now I'm confident with my code :).
I've improved my patch adding a test case for multipart requests.","20/Aug/12 06:51;mgrigorov;I think this patch will break normal form submit with multipart content in org.apache.wicket.markup.html.form.Form#handleMultiPart(), but let me check it.",20/Aug/12 07:16;mgrigorov;False alarm. Seems to work fine.,"04/Sep/12 00:09;petr.nejedlik;We have upgraded from wicket 1.5.7 to 1.5.8 and I must say that changes in WebApplication in method createWebRequest (where in multipart case method newMultipartWebRequest is called) are bad for us.
We have maxSizeLimit defined in every UploadPanel (component that upload files) not in application.
In this situation, there is even no chance to declare maxSize on Form component. You can declare it by setMaxSize, but when Form calls method newMultipartWebRequest this defined size is not used because MultipartServletWebRequestImpl class has been already created in createWebRequest in method createWebRequest in WebApplicationClass.

I tried to inherit from WebApplication, overiide method newWebRequest a then in own descendant of ServletWebRequest owerride method newMultipartWebRequest.
But there is problem - method newMultipartWebRequest must return MultipartServletWebRequest (abstract class) not WebRequest.

Is it possible to change method newMultipartWebRequest to return only WebRequest.
In that situation we can override method newMultipartWebRequest, return self (descendant of ServletWebRequest) and create MultipartServletWebRequestImpl later (in onRespond method)

Thanks Petr Nejedlik","04/Sep/12 07:58;mgrigorov;Hi Petr,

I've just committed an improvement for this regression.
Can you test with latest 1.5-SNAPSHOT ? Or attach a quickstart so we can test it.
Thanks!","07/Sep/12 08:20;vanger;I also have some strange related problems with multipart:
we have several jsp pages which doesn't have anything to do with wicket. But they use multipart upload forms served by Apache ServletFileUpload.
When we make single change in our project - upgrade wicket version from 1.5.7 to 1.5.8 (in pom) this forms becomes broken:
line 
List<FileItem> items = upload.parseRequest(request);
always returns zero items with wicket 1.5.8 in project.
I can't even imagine how change of wicket  can affect some JSPs...
Example:

<%@ page import=""org.apache.commons.fileupload.FileItem"" %>
<%@ page import=""org.apache.commons.fileupload.disk.DiskFileItemFactory"" %>
<%@ page import=""org.apache.commons.fileupload.servlet.ServletFileUpload"" %>
<%@ page import=""java.util.ArrayList"" %>
<%@ page import=""java.util.List"" %>
<%@ page contentType=""text/html;charset=UTF-8"" language=""java"" session=""false"" %>

<form action=""<%=request.getRequestURI()%>"" method=""post"" enctype=""multipart/form-data"">
    <input type=""file"" name=""file"" size=""120""/>
    <input type=""submit"" value=""Upload""/>
</form>

<%
        final int maxSize = 16 * 1024 * 1024;
        DiskFileItemFactory factory = new DiskFileItemFactory();
        factory.setSizeThreshold(maxSize);

        ServletFileUpload upload = new ServletFileUpload(factory);
        upload.setSizeMax(maxSize);
        List items = upload.parseRequest(request); //This always returns empty list in 1.5.8
%>","07/Sep/12 08:26;mgrigorov;The problem is that WicketFilter is executed before the JspServlet and thus the POST request parameters are already consumed.

The previous fix that I've added for 1.5.9 wont help for this new case.
I think we should revert the change completely. To support the original use case for this ticket the user application should create the MultipartWebRequest itself in the page constructor to be able to read the file upload parameters. I see no other way :-/","07/Sep/12 09:03;mgrigorov;I'm closing this ticket.
The change will be most probably reverted with WICKET-4752 unless someone finds a solution that will work for all cases.",01/Oct/12 08:59;mgrigorov;The change has been reverted for Wicket 1.5.9 and 6.2.0.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with switching between HTTP/HTTPS,WICKET-4776,12608601,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,mrm,mrm,21/Sep/12 09:29,01/Oct/12 08:24,13/Mar/19 23:17,01/Oct/12 08:24,1.5.6,1.5.7,1.5.8,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,wicket,,,,,,,0,,,,,,,"Testcase, two Pages (A and B)
Page A: two Links to Page B
-Link1: setResponsePage(PageB.class);
-Link2: setResponsePage(new PageB());

Page B: ""@RequireHttps"", two Links to Page A
-Link1: setResponsePage(PageA.class);
-Link2: setResponsePage(new PageA());

Clicking link1 behaves equal in every Version i tested. No Problems switching between Page A and B and HTTP/HTTPS-change is working like expected (except status 404 at Page B in 1.5.6).

Clicking link2 behaves very strange.
Link2-Behavior in different Versions:
1.5.4/5 (and i guess older): Everything working correct like Link1.
1.5.6: Status 404 on Both Links at Page B

1.5.7/8/6.0.0: 
If i go from Page A to B, Page B isn't called with https.
Now I'm on Page B an go to Page A, A is called WITH https?!?!
Then, moving one more to B, https is switching again to http.

This is very confusing, Page A without requireHttps is called with https, Page B with requireHttps is called without https?!
This leads in most cases on my website to a ""Page B"" where Links/Buttons/etc aren't working anymore.",,,,,,,,,,,,,,,,,,,,,,21/Sep/12 12:16;mrm;myproject.zip;https://issues.apache.org/jira/secure/attachment/12546033/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-09-21 09:56:30.729,,,no_permission,,,,,,,,,,,257698,,,Mon Oct 01 08:24:47 UTC 2012,,,,,,0|i0k86f:,116142,,,,,,,,"21/Sep/12 09:56;mgrigorov;Hi,

Please attach a quickstart.Preferably for 6.0.0.
I guess you need to call Session#bind() before going to HTTPS.",21/Sep/12 12:16;mrm;Added quickstart of the problem. Session bind doesn't change something.,01/Oct/12 08:08;svenmeier;intermediate relative url is missing port and protocol,01/Oct/12 08:24;svenmeier;port and protocol is now preserved,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket 1.5.6 duplicates segments in absolute URLs,WICKET-4561,12555298,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,forchel,forchel,15/May/12 08:21,01/Oct/12 08:08,13/Mar/19 23:17,18/May/12 09:02,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"Since we migrate our application to Wicket 1.5.6 some URLs from BookmarkablePageLinks have duplicate segements for indicating a Shop and a Language item from our persistence model. For indicating a Shop and Language item we use our own ShopMapper and LanguageMapper (subclass of AbstractComponentMapper). This was working until we migrate to 1.5.6.
For instance ...

correct URL: host/servlet/shop/en/page
wrong URL: host/servlet/shop/en/shop/en/page

This happens, for example, when the protocol of the linked URL is different from the current protocol (http/https). So, basically, all links that point to pages that are annotated with @RequireHttps are wrong.

In our Application class we set the HttpsMapper as RootRequestMapper, e.g.:

setRootRequestMapper(new HttpsMapper(new ShopMapper(new LanguageMapper(getRootRequestMapper())), new HttpsConfig() ) );


Using a debugger, I've tracked down the spot where wrong URL is rendered:

org.apache.wicket.request.Url.resolveRelative()
",,,,,,,,,,,,,,,,,,,WICKET-4776,,,15/May/12 14:16;mgrigorov;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12527261/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-05-16 11:51:42.872,,,no_permission,,,,,,,,,,,257762,,,Tue Jun 05 07:36:13 UTC 2012,,,,,,0|i0k8kn:,116206,,,,,,,,"15/May/12 08:26;forchel;Using a quickstart Application and replace our own RequestMapper with the org.apache.wicket.examples.requestmapper.LocaleFirstMapper produces the same duplicated path segments, e.g.

correct: https://localhost:8443/de_DE/secure.html
wrong:  https://localhost:8443/de_DE/de_DE/secure.html","15/May/12 08:29;forchel;Unfortunately I can't attach the quickstart because the JIRA server returns an error response trying to attach a file.

> The JIRA server was contacted but has returned an error response. We are unsure of the result of this operation.
>
> Close this dialog and press refresh in your browser","16/May/12 11:51;thomas.goetz;I debugged this to the following point:

Url.resolveRelative(final Url relative):

this.segments.size=2 (de_DE/secure.html)

after line 1012: getSegments().addAll(relative.getSegments());

--> this.segments.size=3 (de_DE/de_DE/secure.html)


","16/May/12 11:55;mgrigorov;I guess WICKET-4514 is involved.
WICKET-4562 looks like a duplicate.","04/Jun/12 12:32;tobiashaupt;When using the following code to create an absolute url in wicket 1.5.7 from a page class and parameters, there are also duplicate segments in the url - the rendered absolute url is not correct.

final Url url = RequestCycle.get().mapUrlFor( pageClass, pageParameters );
final String result = RequestCycle.get().getUrlRenderer().renderFullUrl( url );

I think the reason for this is, that RequestCycle.get().mapUrlFor(..) does not return an ""absolute"" url (first segment will not be empty).","04/Jun/12 15:42;mgrigorov;Please open a new ticket with a quickstart.
Thanks!","04/Jun/12 15:44;mgrigorov;The fix in 1.5.6 is in org.apache.wicket.request.UrlRenderer#renderUrl(Url) which decides whether to use #renderFullUrl() or #renderRelativeUrl(). That's why it doesn't help for your case - because you use directly #renderFullUrl().
Please create a new ticket and I'll see what can be done.",05/Jun/12 07:36;forchel;https://issues.apache.org/jira/browse/WICKET-4587 created.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using both MountedMapper and CryptoMapper causes warning,WICKET-4780,12608869,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,yesotaso,yesotaso,24/Sep/12 13:42,29/Sep/12 07:19,13/Mar/19 23:17,25/Sep/12 07:35,1.5.7,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,wicket,,,,,,,0,,,,,,,"Having both MountedMapper and CryptoMapper causes:
WARN  - WebPageRenderer            - The Buffered response should be handled by BufferedResponseRequestHandler

{code}
	public void init() {
		setRootRequestMapper(new CryptoMapper(getRootRequestMapper(), this));
		mountPage(""/home"", HomePage.class);
		super.init();
	}
{code}

{code}
	public HomePage(final PageParameters parameters) {
		super(parameters);

		add(new Label(""version"", getApplication().getFrameworkSettings().getVersion()));

		add(new Form<Void>(""form""));
	}
{code}

{code}
--HomePage.html
...
<form wicket:id=""form""></form>
...
{code}
",,,,,,,,,,,,,,,,,,,,,,24/Sep/12 13:45;yesotaso;WICKET-4780_quickstart.rar;https://issues.apache.org/jira/secure/attachment/12546295/WICKET-4780_quickstart.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-09-24 14:35:16.499,,,no_permission,,,,,,,,,,,252540,,,Sat Sep 29 07:19:42 UTC 2012,,,,,,0|i0cunj:,72910,,,,,,,,"24/Sep/12 14:35;mgrigorov;The problem here is that BufferedResponseMapper is wrapped as part of SystemMapper in CryptoMapper. 
Later when mountPage(""/home"") is called a new CompoundRequestMapper is created with CryptoMapper as an member and a MountedMapper for HomePage is prepended to it.
So we have : CompoundRequestMapper(MountedMapper(/home), CryptoMapper(SystemMapper(BufferedResponseMapper, /* other system mappers */ )))

When a request with url : home?0 comes MountedMapper(/home) matches on it and BufferedResponseMapper is not asked at all. Later when starting to render the reported WARN is issued because now we check for stored response.  ","24/Sep/12 19:19;mgrigorov;It seems the current behavior is as designed. See http://markmail.org/thread/b2zxg7w3i75anadl
If you want to keep mounted paths not encrypted then you can use BookmarkableCryptoMapper.java from https://issues.apache.org/jira/browse/WICKET-4140.

I'll leave the ticket open for a while if someone wants to implement the improvement I suggested in this mail thread.",25/Sep/12 07:35;mgrigorov;Fixed by delegating CryptoMapper#getCompatibilityScore() to the wrapped ex-root request mapper.,"25/Sep/12 07:42;yesotaso;1- To be honest I would avoid MountedMapper but that causes another problem (which I dont have too much details to represent atm).
When I enable CryptoMapper the URL's in my custom behaviours go invalid thats why I chose mounting the pages I use those behaviours.
2- BookmarkableCryptoMapper given in WICKET-4140 is incomplete I assume since when I use it the resources (again URL problem) go haywire.","28/Sep/12 19:04;tapter;@Martin: Does your fix mean, the CryptoMapper can still be added first, followed by a number of mountPage() calls?
We have the situation that most of our app should be encrypted, but there are several URLs called directly from the outside with a special meaning that need to be available under this URL and will not support an immediate redirect to another url (especially since some URLs are the target of a direct initial POST request)?","29/Sep/12 07:19;mgrigorov;Hi Matthias,

Yes, you still should be able to do this. 
The attached quickstart does exactly this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Registering resource bundles with duplicate resource references gives an NPE,WICKET-4787,12609245,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,papegaaij,papegaaij,26/Sep/12 14:07,28/Sep/12 06:01,13/Mar/19 23:17,28/Sep/12 06:01,6.0.0,6.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"ResourceBundles.addBundle tries to throw an IllegalArgumentException at line 140, but the toString of curProvidedResource gives an NPE, because it needs a RequestCycle. toString-methods of HeaderItems should not require a RequestCyle.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257695,,,Fri Sep 28 06:01:32 UTC 2012,,,,,,0|i0k85r:,116139,,,,,,,,28/Sep/12 06:01;papegaaij;the toString methods are changed to no longer need RequestCycle.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilteringHeaderResponse does not unwrap PriorityHeaderItems for filtering,WICKET-4788,12609246,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,rbe,rbe,26/Sep/12 14:13,27/Sep/12 13:09,13/Mar/19 23:17,27/Sep/12 13:09,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"The FilteringHeaderResponse should unwrap PriorityHeaderItems for filtering.

Now you need to overwrite the render(HeaderItem item) method or create filter, which unwrap the PriorityHeaderItem before filtering.
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-27 13:09:46.623,,,no_permission,,,,,,,,,,,257694,,,Thu Sep 27 13:09:46 UTC 2012,,,,,,0|i0k85j:,116138,,,,,,,,27/Sep/12 13:09;papegaaij;The filters now unwrap the header items before checking the class.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket 6: modal windows in Safari are always in drag or resize mode,WICKET-4770,12608093,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,ghayman,ghayman,18/Sep/12 17:23,25/Sep/12 06:27,13/Mar/19 23:17,25/Sep/12 06:27,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"In Wicket 6 using Safari, a modal dialog will not allow interactions with form components. The whole dialog always seems to be in ""drag"" mode. Click anywhere on the panel and the dialog will drag.

Interaction works fine with all other browsers.
",Safari - all OS,,,,,,,,,,,,,,,,,,,,,18/Sep/12 17:24;ghayman;Fix_to_Wicket_6___Safari_modal_window_drag_issue1.patch;https://issues.apache.org/jira/secure/attachment/12545583/Fix_to_Wicket_6___Safari_modal_window_drag_issue1.patch,25/Sep/12 06:06;papegaaij;WICKET-4770-remove-hack.diff;https://issues.apache.org/jira/secure/attachment/12546449/WICKET-4770-remove-hack.diff,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-09-23 08:15:38.299,,,no_permission,,,,,,,,,,,252549,,,Tue Sep 25 06:27:34 UTC 2012,,,,,,0|i0cuq7:,72922,,,,,,,,18/Sep/12 17:24;ghayman;Patch file to resolve issue,"18/Sep/12 17:25;ghayman;The modal dialog tries to set event.ignore=true if the browser is Safari. This Wicket event data structure used to be passed through to Wicket.Drag.mouseDownHandler as the argument e. However, in the switch over to jQuery events the argument (e) passed to mouseDownHandler is no longer Wicket ""event"". It is now jQuery event data.

There is a test in mouseDownHandler to check for the existence of e.ignore. As this is now jQuery data, it _never_ exists, so Safari is never recognized.

I changed this test to check event.ignore and it appears to work correctly.
","23/Sep/12 08:15;papegaaij;Although I don't know the code that well, I don't think the patch is correct. I cannot find any code that sets the 'ignore' flag on the jQuery event. Therefore is presume that with this patch, the if-condition will always be true. If that seems to work correctly, perhaps the solution is to remove the if entirely?","24/Sep/12 20:37;ghayman;event.ignore is set on line 1200 of modal.js (Wicket 6.0). This is specifically NOT the jQuery event object which is why the later test was failing.

When I changed the later test to test against event.ignore (non-jQuery object) rather than e.ignore (jQuery object) the function worked as expected.

Whether this is 100% the correct change I will leave up to those more knowledgeable in the Wicket code, but I can say that it worked for us with no other apparent side effects.","25/Sep/12 06:02;papegaaij;Ok, I didn't expect wicket-ajax-jquery.js to contain hacks to just get modal windows working. I tried to find when this code was added, but it goes beyond recorded history of the ModalWindow. The first commit with this ignore flag is from the initial addition of modal window, back in august 2006. I highly doubt that this hack is still relevant. Unfortunately, I don't have Safari to test it in, so I'll ask Martijn to test if this hack can be removed.","25/Sep/12 06:27;papegaaij;A coworker tested my proposal on Safari, and the hack is no longer needed. I've removed the hack on both ends of the code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Button value is double escaped,WICKET-4734,12605207,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,pvandepitte,pvandepitte,28/Aug/12 11:43,24/Sep/12 07:52,13/Mar/19 23:17,28/Aug/12 19:56,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,wicket,,,,,,,0,,,,,,,"When the model property of a Button contains html entities (e.g. single quotes), these characters are double escaped: in Button.onComponentTag (getDefaultModelObjectAsString) and in ComponentTag.writeOutput",,,,,,,,,,,,,,,WICKET-4505,WICKET-3608,,,,,,28/Aug/12 17:43;bitstorm;WICKET-4734.patch;https://issues.apache.org/jira/secure/attachment/12542793/WICKET-4734.patch,28/Aug/12 12:06;pvandepitte;double-escaping.tar.gz;https://issues.apache.org/jira/secure/attachment/12542755/double-escaping.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-08-28 17:42:41.385,,,no_permission,,,,,,,,,,,252552,,,Tue Aug 28 20:02:39 UTC 2012,,,,,,0|i0cuqv:,72925,,,,,,,,28/Aug/12 12:09;pvandepitte;Current workaround: button.setEscapeModelStrings(false),"28/Aug/12 17:42;bitstorm;Button should not escape its model in onComponentTag. I think we can safely substitute getDefaultModelObjectAsString with getModel().getObject() and let ComponentTag do its job.
See patch (no test case broken).","28/Aug/12 19:56;svenmeier;Aligned with TextField: since model value is written into attribute, call #setEscapeModelValue(false) and let ComponentTag do the escaping.","28/Aug/12 20:02;svenmeier;Andrea, of course using getModel().getObject() would work fine too, it's just that TextField does it this way (i.e. setEscapeModelValue(false)).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource bundles are not resolved on PriorityHeaderItems,WICKET-4753,12606570,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,papegaaij,papegaaij,07/Sep/12 12:43,24/Sep/12 07:51,13/Mar/19 23:17,07/Sep/12 12:45,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"If a bundle X provides resource A, and resource A is rendered as priority header item, the resource A is rendered, not bundle X.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,252541,,,Fri Sep 07 12:45:17 UTC 2012,,,,,,0|i0cunr:,72911,,,,,,,,07/Sep/12 12:45;papegaaij;Resolved by unwrapping IWrappedHeaderItems when resolving bundles.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UploadProgressBar regression,WICKET-4751,12606397,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,06/Sep/12 12:58,24/Sep/12 07:51,13/Mar/19 23:17,06/Sep/12 14:35,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket-extensions,,,,,,,0,,,,,,,"The upload progress bar doesn't show anymore with 6.0.0:
http://www.wicket-library.com/wicket-examples-6.0.x/upload/single

The same example works with 1.5.8:
http://www.wicket-library.com/wicket-examples/upload/single",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,246540,,,2012-09-06 12:58:34.0,,,,,,0|i07r33:,43154,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
atmosphere example will stop working if opening the same url in a different tab in the same browser,WICKET-4729,12604722,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,linekin,linekin,24/Aug/12 06:57,24/Sep/12 07:51,13/Mar/19 23:17,04/Sep/12 18:39,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"If the url of a running atmosphere example is copied and then opened in a different tab while the old one left open in the same browser,
i.e. there are two atmosphere examples of the same url opened at the same time in a browser, 
one of them will stop working.

I found the cause of this problem is that trackingPages in EventBus is using a BiMap.
If there are different tracking-ids mapping to the same PageKey, one of the map entry will be removed.
The simple solution would be replacing the BiMap with HashMap, but I think there might be reasons why BiMap is used here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-04 18:39:00.59,,,no_permission,,,,,,,,,,,252539,,,Tue Sep 04 18:39:00 UTC 2012,,,,,,0|i0cunb:,72909,,,,,,,,04/Sep/12 18:39;papegaaij;I've reworked the page registration. The BiMap was used to make sure the registration would not grow with every page opened. I've replaced the BiMap with a normal HashMap and added a method to unregister a connection when it is closed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SerializingObjectSizeOfStrategy do not use framework serializer,WICKET-4743,12605994,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,splatch,splatch,03/Sep/12 13:36,24/Sep/12 07:51,13/Mar/19 23:17,03/Sep/12 13:58,1.5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,,,,,,,,0,,,,,,,"Currently default implementation of SerializingObjectSizeOfStrategy do not use FrameworkSettings, thus it causes a ObjectNotSerializableException if serializer have custom behaviours.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-03 13:58:46.445,,,no_permission,,,,,,,,,,,252546,,,Mon Sep 03 13:58:46 UTC 2012,,,,,,0|i0cupj:,72919,,,,,,,,"03/Sep/12 13:58;mgrigorov;Improved for org.apache.wicket.util.lang.WicketObjects.SerializingObjectSizeOfStrategy#sizeOf(Object).

I've noticed that #cloneObject() and #cloneModel() also use custom logic but they have some optimizations related to OSGi. I'll leave them as they are because I cannot test them.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException on WicketFilter.init() after calling setFilterPath(),WICKET-4737,12605496,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jesselong,jesselong,30/Aug/12 09:37,24/Sep/12 07:50,13/Mar/19 23:17,30/Aug/12 17:55,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"WICKET-4626 broke the ability to pre-set the filter path using setFilterPath(). The patch introduced by WICKET-4626 calls setFilterPath() from within WicketFilter.init(), and setFilterPath() throws IllegalStateException if it is called more than once.",When you pre-configure the filter path using the setFilterPath() method.,,,,,,,,,,,,,,,,,,,,,30/Aug/12 09:54;jesselong;WICKET-4737.patch;https://issues.apache.org/jira/secure/attachment/12543065/WICKET-4737.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-30 09:42:23.342,,,no_permission,,,,,,,,,,,252553,,,Tue Sep 04 11:09:40 UTC 2012,,,,,,0|i0cur3:,72926,,,,,,,,"30/Aug/12 09:42;mgrigorov;Can't you use org.apache.wicket.protocol.http.WicketFilter#FILTER_MAPPING_PARAM ?
I.e. an <init-param><param-name>filterMappingUrlPattern</param-name><param-value>yours</param-value></init-param>","30/Aug/12 09:54;jesselong;Doesn't matter, why take away a nice feature when there is no need to? Right now, setFilterPath() is useless to anyone except WicketFilter.init(). Either it must work, or it should be removed.

I'll use init params to work around in the mean time, but I like the feature and I'd like it to work again in 6.0.1.",30/Aug/12 09:54;jesselong;This is a patch to solve the problem...,04/Sep/12 07:42;cleiter;The easiest workaround (until 6.0.1 is released) seems to be to call getWicketFilter().setFilterPath(path) in WebApplication#init.,"04/Sep/12 08:09;jesselong;No, WicketFilter.setFilterPath() cannot be called more than once in Wicket 1.5.x and Wicket 6. The problem was (now fixed, thanks Martin) that WicketFilter.init() would call WicketFilter.setFilterPath(), even if it was previously called, causing IllegalStateException.

If we call WicketFilter.setFilterPath() from WebApplication.init() then our call will be the second call, and it would still throw an IllegalStateException.","04/Sep/12 08:23;cleiter;I understand the problem. The workaround works for me. See this code in WicketFilter:

		if (getFilterPath() == null)
		{
			log.warn(""Unable to determine filter path from filter init-parm, web.xml, ""
				+ ""or servlet 3.0 annotations. Assuming user will set filter path ""
				+ ""manually by calling setFilterPath(String)"");
		}

setFilterPath() is never called and we have the chance to invoke it in WebApplication#init.","04/Sep/12 11:09;jesselong;Good point, yes, that will work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CssPackageResource doesn't work if the extension isn't css,WICKET-4732,12605048,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,27/Aug/12 08:04,24/Sep/12 07:50,13/Mar/19 23:17,29/Aug/12 11:03,1.5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,wicket,,,,,,,0,,,,,,,"CssPackageResource#processResponse is never called if the extension isn't css. It works for .css because PackageResourceReference#getResource checks if the extension is css and then creates a CssPackageResource. For anything else than .css/.js a PackageResource is created.

Actually the overridden processResponse method in CssPackageResource (instead of PackageResource) should get called, but ResourceReferenceRegistry#createDefaultResourceReference installs a plain PackageResource which gets called later.",,,,,,,,,,,,,,,,,,,,,,29/Aug/12 07:54;mgrigorov;wicket-4732.tgz;https://issues.apache.org/jira/secure/attachment/12542902/wicket-4732.tgz,29/Aug/12 08:04;cleiter;wicket-4732.zip;https://issues.apache.org/jira/secure/attachment/12542903/wicket-4732.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-08-29 07:54:49.616,,,no_permission,,,,,,,,,,,252556,,,Wed Aug 29 11:03:30 UTC 2012,,,,,,0|i0curr:,72929,,,,,,,,29/Aug/12 07:54;mgrigorov;Here is a quickstart with 6.0 that works.,29/Aug/12 08:04;cleiter;Attaching quickstart for 1.5.8. The HomePage renders main.css and main.less. The installed ICssCompressor is only called for main.css but should be called for both.,"29/Aug/12 08:09;cleiter;Use this in the Wicket 6 quickstart:

public class LessPackageResource extends CssPackageResource {
    public LessPackageResource(Class<?> scope, String name) {
        super(scope, name, null, null, null);
    }

    @Override
    protected byte[] processResponse(Attributes attributes, byte[] bytes) {
        System.err.println(""CALLED"");
        return super.processResponse(attributes, bytes);
    }
}

processResponse is also never called there.",29/Aug/12 11:03;mgrigorov;Fixed + test.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Only complete handler (no success or failure handler) is called when Ajax link produces an exception,WICKET-4741,12605925,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,otah,otah,02/Sep/12 21:03,24/Sep/12 07:50,13/Mar/19 23:17,03/Sep/12 08:45,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"If there is an Ajax link which causes a redirect (if there is an exception or redirect to login page), only the complete handler is called. No call to the success handler (which wouldn't make much sense), but also no call to the failure handler. But as I said, the complete handler is called.

I understand the documentation in the way, that in all cases either success or failure handler should be called and then the complete handler. But in this situation no success or failure handler is called.

Attaching quickstart with window.alert javascripts as success, failure and complete handlers. The link produces WicketRuntimeException. Then, the complete popup is displayed, but not the failure handler. If you comment the exception, both success and complete handler are called.",,,,,,,,,,,,,,,,,,,,,,02/Sep/12 21:03;otah;failure-handler.zip;https://issues.apache.org/jira/secure/attachment/12543498/failure-handler.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-09-03 08:39:33.211,,,no_permission,,,,,,,,,,,252557,,,Mon Sep 03 08:45:43 UTC 2012,,,,,,0|i0curz:,72930,,,,,,,,"03/Sep/12 08:39;mgrigorov;The problem was a missing call to Wicket.Ajax.Call#success(). This is what Wicket 1.5.x does.

The next question is: Why success ? The onClick() handler just have thrown an exception. 
I think we should differentiate between success and failure.","03/Sep/12 08:45;mgrigorov;The behavior whether to execute the failure handler or to make a redirect to the error page can be configured with:
org.apache.wicket.settings.IExceptionSettings#setAjaxErrorHandlingStrategy().
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KittenCaptchaPanel is broken,WICKET-4735,12605273,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,abonis,abonis,28/Aug/12 19:10,24/Sep/12 07:49,13/Mar/19 23:17,29/Aug/12 07:37,6.0.0-beta2,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,,,,,,,,0,,,,,,,"The code from the KittenCaptchaPanel example works fine with wicket versions 1.5.8 and 6.0.0-beta1, but fails to highlight kittens with versions 6.0.0-beta2 and 6.0.0-beta3.","FreeBSD 8.2, OpenJDK 7, Opera 12.01",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,246194,,,2012-08-28 19:10:58.0,,,,,,0|i07i2f:,41694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ModalWindow.closeCurrent Javascript error,WICKET-4761,12607596,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,ann,ann,14/Sep/12 09:22,24/Sep/12 07:49,13/Mar/19 23:17,24/Sep/12 07:49,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,wicket-extensions,,,,,,,0,,,,,,,"Hi,

I have a window with a page on it that can upload a file. After uploading the file I call methode ModalWindow.closeCurrent for closing the window. But it doesn't close in internet explorer 9, in the ajax-debug window I get the following error:
ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: SyntaxError: Expected ';'

So I debugged in ModalWindow and when I change the javascript in ModalWindow getCloseJavacriptInternal line 418: var close = function() {...}; with that last ';' then it works fine.


Thanks
Ann",Internet Explorer 9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-24 07:49:06.554,,,no_permission,,,,,,,,,,,252568,,,Mon Sep 24 07:49:06 UTC 2012,,,,,,0|i0cuuv:,72943,,,,,,,,"24/Sep/12 07:49;papegaaij;I've added the semicolon and removed another one, which wasn't needed. I don't have IE to test this is, but the semicolon was indeed missing (it's an assignment). Normally the JS-engine should insert a semicolon, but perhaps this doesn't work due to way this js is executed. It's better to just put the semicolons where they are supposed to go and not rely on any auto semicolon insertion.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ComponentFeedbackPanel broken under Wicket 6.0.0 when RenderStrategy.REDIRECT_TO_RENDER,WICKET-4773,12608409,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,danhaywood,danhaywood,20/Sep/12 09:24,22/Sep/12 18:01,13/Mar/19 23:17,22/Sep/12 18:01,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,,,,,,,,0,,,,,,,"Test case created on github, see https://github.com/danhaywood/wicket-4773

browse to http://localhost:8080/wicket-examples/forminput and follow the instructions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-22 18:01:33.137,,,no_permission,,,,,,,,,,,252571,,,Sat Sep 22 18:01:33 UTC 2012,,,,,,0|i0cuvr:,72947,,,,,,,,20/Sep/12 09:38;danhaywood;The issue is that the reporter on the FeedbackMessage is set to null when detached after the first request; this means that the ComponentFeedbackPanel's filter never locates the message on the rendering in the second request,"22/Sep/12 18:01;papegaaij;The code that clears the reporter was added long ago for WICKET-2384 to prevent a memory leak. I'm not sure if this is still needed, but it seems better to at least not clear reporter until the message is rendered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Whitespace in TabbedPanel markup causes layout issues,WICKET-4768,12608056,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,lemkemch,lemkemch,18/Sep/12 13:14,22/Sep/12 14:59,13/Mar/19 23:17,22/Sep/12 14:59,1.5.8,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,css,html,template,,,,"The markup for TabbedPanel contains too much whitespace.  This causes issues as outlined e.g. in 

http://stackoverflow.com/questions/241512/best-way-to-manage-whitespace-between-inline-list-items

Could the markup be modified as given in the answers on Stackoverflow?",,,,,,,,,,,,,,,,,,,,,,19/Sep/12 10:21;lemkemch;TabbedPanel.html;https://issues.apache.org/jira/secure/attachment/12545705/TabbedPanel.html,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-09-22 14:59:27.287,,,no_permission,,,,,,,,,,,252562,,,Sat Sep 22 14:59:27 UTC 2012,,,,,,0|i0cutj:,72937,,,,,,,,19/Sep/12 10:21;lemkemch;Proposed solution,"22/Sep/12 14:59;papegaaij;The whitespace inside the li is removed, as suggested.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
multiple <style> tags in header are rendered incorrectly,WICKET-4766,12608029,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,marie,marie,18/Sep/12 08:32,21/Sep/12 20:11,13/Mar/19 23:17,21/Sep/12 20:11,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"I created a small quickstart. 
The BasePage has some multiple <style> tags. Only he first one is rendered correctly, all following render the tag body only, the surrounding <style></style> is missing.
",,,,,,,,,,,,,,,,,,,,,,21/Sep/12 16:37;svenmeier;WICKET-4766-testcase.patch;https://issues.apache.org/jira/secure/attachment/12546061/WICKET-4766-testcase.patch,18/Sep/12 08:32;marie;myproject.zip;https://issues.apache.org/jira/secure/attachment/12545540/myproject.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-09-19 16:30:13.478,,,no_permission,,,,,,,,,,,252573,,,Fri Sep 21 20:11:09 UTC 2012,,,,,,0|i0cuwf:,72950,,,,,,,,18/Sep/12 08:32;marie;small quickstart that simulates the problem.,"19/Sep/12 16:30;svenmeier;Which browser are you using?

When I check the response in Firefox' Net console, the generated markup looks fine. It seems that Firefox doesn't like @import inside the commented/CDATA style tags.

BTW moving the markup from BasePage to Homepage (i.e. no markup inheritance) the outcome is the same.","20/Sep/12 05:48;marie;I'm also using Firefox, but testing the same in Internet Explorer, gives the same output. 
I think it has nothing to do with the browser. 
The html that wicket generates isn't correct. Before printing < sty le type=""text/css"" media=""print"" >, there is no closing tag (< / sty le>). 
Also the same worked perfectly with wicket 1.5.7, also in Firefox. ","20/Sep/12 08:57;svenmeier;Sorry, I've misread the html output.

The problem is that HtmlHeaderContainer#renderNext() splits <style>, body and </style> each in its own PageHeaderItem. Since duplicate header items are filtered from output, successive style tags are missing from the generated HTML.

As a workaround I'd suggest using a single <style> tag *or* to wrap the <style> tags in a <wicket:link> tag.

","20/Sep/12 11:46;marie;Hi Sven, Is this something you can fix or can you assign somebody else to this issue?

The problem is that I can't use a workaround. The template is generated by our drupal website,
and we don't have any control over it. ",21/Sep/12 15:45;svenmeier;Modified test classes for HeaderResponseTest showing the problem.,"21/Sep/12 16:37;svenmeier;changed markup to show the problem and one additional one:
- second <style> tags in page markup is rendered without tags
- js header contribution from panel duplicates js header contribution from page","21/Sep/12 16:40;svenmeier;Sorry that I don't have a solution currently. I'll have to dig deeper into the new HeaderItem stuff to be able to sort out the problem. Perhaps Edmond can spot the problem right away.

I don't understand why the header in the page's markup should be handled differently than the header in panels. But this is the case currently:
- the page's header is sliced into too much HeaderItems
- the panel's header is handled as a block, thus possibly resulting in duplicated js contribution.","21/Sep/12 19:16;papegaaij;I think this problem is manifold. First of all, I've discovered that HtmlHeaderContainer renders a StringHeaderItem at line 230. This should be a PageHeaderItem. Secondly, I suspect that StringHeaderItem and PageHeaderItem should not override equals and hashcode. The argumentation for this would be that these are free-form and therefore no assumptions can be made about the semantics of the contents. With duplicate JS or CSS references, it is clear that duplicates should not be rendered, but as can be seen in this case, duplication has no meaning for StringHeaderItem. Finally, it seems that HtmlHeaderContainer.renderNext is not needed at all. This is the method that splits the headers into many small parts.

The first observation should be fixed, because it is a bug.

Removing the method that splits the header items, fixes this ticket. It breaks 2 others, but only because some whitespace in the header changes.

Changing the second observation fixes this bug, but breaks a testcase: HeaderSectionTest.renderHomePage_20(). This testcase renders a StringHeaderItem in a component that is added twice. Changing the equals causes the item to be rendered twice. Perhaps StringHeaderItem should be rendered once per component class, but the HeaderItem does not know the class of the component. In all, changing this right now probably breaks applications, so we should probably opt for the other solution and leave this as is.","21/Sep/12 19:27;papegaaij;I've also found a problem in your proposed testcase. By including a.js in both the panel and the page, via head, Wicket will not be able to filter duplicates, therefore a.js will be included twice in the output. Your testcase includes a.js only once in the output, is this intentional? If so, how do you suggest Wicket filters these duplicate references?","21/Sep/12 20:11;papegaaij;I'm closing this ticket, because this issue is now fixed. If anyone finds the comments about StringHeaderItem.equals or the filtering of duplicate references in head-sections still relevant, I think opening a new ticket would be best.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
PageParameters#mergeWith may loose values of the 'other' PP,WICKET-4775,12608436,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,mgrigorov,mgrigorov,20/Sep/12 12:26,21/Sep/12 20:05,13/Mar/19 23:17,21/Sep/12 20:05,1.5.8,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"The code at org.apache.wicket.request.mapper.parameter.PageParameters#mergeWith() looks like:

for (NamedPair curNamed : other.getAllNamed())
		set(curNamed.getKey(), curNamed.getValue());

may loose some values if 'other' has a named parameter with several values.With the current code only the last name/value pair is preserved.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-21 20:05:19.916,,,no_permission,,,,,,,,,,,252559,,,Fri Sep 21 20:05:19 UTC 2012,,,,,,0|i0cusf:,72932,,,,,,,,"21/Sep/12 20:05;papegaaij;The merge method now first removes named keys and adds them from 'other'. This preserves multiple values in 'other'.

While fixing this bug, I've also discovered and fixed a bug in merging index parameters: if this contains '0' and '1' and other contains '1' and '2', the value under '0' was overwritten with null.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""'NEW VALUE' is not a valid Serializable"" error during ajax form submission",WICKET-4755,12606754,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,alecswan,alecswan,09/Sep/12 06:59,20/Sep/12 15:19,13/Mar/19 23:17,20/Sep/12 15:19,1.5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,,,,,,,,0,,,,,,,"I attached a quickstart with a test in TestHomePage#formSubmitsSuccessfully.

The test throws ""'NEW VALUE' is not a valid Serializable"" error when ""NEW VALUE"" string in ""value"" textField is submitted as a part of myForm ajax submission.

The problem is that a call to Objects#convertValue(nonNullNonArrayValue, Object.class) will always return null if nonNullNonArrayValue is a value that is not null and not an array! Shouldn't it always return the first parameter when the second parameter is Object.class?

Sven on Wicket forum suggested to fix this as by adding another if-statement in Objects#convertValue() if (toType.isInstance(value)) {
  result = toType.cast(value);
}

See the following forum thread for more information http://apache-wicket.1842946.n4.nabble.com/Issues-with-default-type-conversion-in-1-5-td4651857.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-20 15:19:36.051,,,no_permission,,,,,,,,,,,245986,,,Thu Sep 20 15:19:36 UTC 2012,,,,,,0|i07fpr:,41312,,,,,,,,20/Sep/12 15:19;svenmeier;DefaultConverter now casts if possible,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavaScriptStripper fails with single line comments,WICKET-4760,12607592,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cleiter,cleiter,14/Sep/12 08:40,17/Sep/12 09:07,13/Mar/19 23:17,17/Sep/12 08:50,1.5.8,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,wicket,,,,,,,0,,,,,,,"The valid input
x++ //
x++

gets transformed to
x++ x++

which is syntactically invalid. This breaks the unminified version of bootstrap 2.1.1.

The problem doesn't occur with multiline comments because the linebreaks are preserved there.",,,,,,,,,,,,,,,,,,,,,,14/Sep/12 09:48;cleiter;WICKET-4760-tests.patch.txt;https://issues.apache.org/jira/secure/attachment/12545131/WICKET-4760-tests.patch.txt,14/Sep/12 08:59;cleiter;WICKET-4760.patch.txt;https://issues.apache.org/jira/secure/attachment/12545125/WICKET-4760.patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-09-17 08:50:37.413,,,no_permission,,,,,,,,,,,252555,,,Mon Sep 17 08:50:37 UTC 2012,,,,,,0|i0curj:,72928,,,,,,,,14/Sep/12 08:59;cleiter;Trivial patch which preserves newlines at the end of single line comments.,"14/Sep/12 09:48;cleiter;Adds testcase, fixes other tests.","17/Sep/12 08:50;mgrigorov;Patch applied.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Atmosphere example doesn't work due to missing 'page' when creating AjaxRequestTarget,WICKET-4656,12598813,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,mgrigorov,mgrigorov,14/Jul/12 15:46,17/Sep/12 05:37,13/Mar/19 23:17,17/Sep/12 05:37,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"Testing beta3 revealed this error when trying to use Wicket Atmosphere:

ERROR - DefaultExceptionMapper     - Unexpected error occurred
java.lang.IllegalArgumentException: Argument 'page' may not be null.
	at org.apache.wicket.util.lang.Args.notNull(Args.java:41)
	at org.apache.wicket.ajax.AjaxRequestHandler.<init>(AjaxRequestHandler.java:111)
	at org.apache.wicket.protocol.http.WebApplication$DefaultAjaxRequestTargetProvider.get(WebApplication.java:956)
	at org.apache.wicket.protocol.http.WebApplication$DefaultAjaxRequestTargetProvider.get(WebApplication.java:949)
	at org.apache.wicket.protocol.http.WebApplication.newAjaxRequestTarget(WebApplication.java:800)
	at org.apache.wicket.atmosphere.AtmosphereRequestHandler.respond(AtmosphereRequestHandler.java:65)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:814)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
....",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-16 07:24:52.205,,,no_permission,,,,,,,,,,,257729,,,Mon Sep 17 05:37:01 UTC 2012,,,,,,0|i0k8db:,116173,,,,,,,,"16/Jul/12 07:24;papegaaij;This seems to be caused by the upgrade to Atmosphere 1.0.0-beta3. I've reported an issue ( https://github.com/Atmosphere/atmosphere/issues/513 ). For now, you can work around the problem by forcing atmosphere to version 0.9.5 using maven dependency management (0.9.6 and 0.9.7 are broken as well).","16/Jul/12 13:41;papegaaij;This seems to be caused by a bug in Jetty 7.6.3 (which is used for the examples), Jetty 8.1.3 works fine.",17/Sep/12 05:37;papegaaij;This is fixed with more recent versions of Atmosphere.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormComponents remain invalid forever if there is no feedback panel,WICKET-4757,12606996,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,11/Sep/12 05:41,11/Sep/12 05:44,13/Mar/19 23:17,11/Sep/12 05:44,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"if there is no feedback panel the error messages are not removed in ondetach and form component re-validation is skipped so the form component, once marked as invalid, will remain invalid forever or at least until its error messages are rendered.

the error messages should be dropped and the form component should be re-validated on every form submit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,252550,,,2012-09-11 05:41:57.0,,,,,,0|i0cuqf:,72923,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketFilter unify the filterPath,WICKET-4626,12595630,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,dlmiles,dlmiles,22/Jun/12 20:38,30/Aug/12 09:38,13/Mar/19 23:17,22/Aug/12 09:19,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"WICKET-4626 WicketFilter unify the filterPath

Use of getter/setter internally to limit read/writes to filterPath         
field location.

Removed lazy initialization code from main code path.

Provide a new method #canonicaliseFilterPath(String) to convert
""/wicket/"" into ""wicket/"" as expected internally and maybe used by
unit tests to further validate correct values for filterPath.

Added unit test for this new method and use method in setter.",,,,,,,,,,,,,,,,,,,,,,22/Jun/12 21:22;dlmiles;0001-WICKET-4626-WicketFilter-unify-the-filterPath.patch;https://issues.apache.org/jira/secure/attachment/12533110/0001-WICKET-4626-WicketFilter-unify-the-filterPath.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-22 09:19:13.448,,,no_permission,,,,,,,,,,,257741,,,Thu Aug 30 09:38:02 UTC 2012,,,,,,0|i0k8fz:,116185,,,,,,,,22/Jun/12 21:22;dlmiles;PATCH ATTACHED,"22/Aug/12 09:19;mgrigorov;The patch is applied with minor improvements.
Thanks!","30/Aug/12 09:34;jesselong;This patch has broken the ability to pre-set the filter path using the setFilterPath() method. In my use case, my WicketFilter is created from within another Filter. This Filter then sets the filterPath using the setFilterPath() method.

Now, after this patch, WicketFilter.init() calls setFilterPath() for a second time, causing an IllegalStateException (see top of setFilterPath() method).",30/Aug/12 09:38;jesselong;Created new ticket WICKET-4737 for bug introduced and described in comment above.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTextComponent not escaping html data by default therefore user text is not redisplayed correctly,WICKET-4505,12551265,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,jpboudreault,jpboudreault,17/Apr/12 16:58,28/Aug/12 18:33,13/Mar/19 23:17,25/Apr/12 07:55,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"User input is not escaped in all text fields by default (and the default is not configurable).

This leads to user entered text not being redisplayed correctly.

* You can replicate using the project from WICKET-3330.
* Just enter the text my&frac12;companyname and press enter
* The field will not redisplay the text entered properly",,,,,,,,,,,,,,,,,,,,,,17/Apr/12 17:00;jpboudreault;ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12522977/ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg,24/Apr/12 15:23;bitstorm;EscapeHtmlChars.zip;https://issues.apache.org/jira/secure/attachment/12523997/EscapeHtmlChars.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-04-19 13:53:37.317,,,no_permission,,,,,,,,,,,236129,,,Wed Apr 25 12:29:25 UTC 2012,,,,,,0|i0k8p3:,116226,,,,,,,,17/Apr/12 17:10;jpboudreault;edit : I did more testing with XSS and I was not able to exploit it. Therefore I updated the description.,"19/Apr/12 13:53;bitstorm;The input for text fields is unescaped by class TagAttributes when it is inserted inside value="""" attribute. Maybe this is done for security reasons?
Anyway, I think TagAttributes should replace any occurrence of character double-quotes (""') before rendering attribute values. I would modify method 'unescapeHtml(Object value)' like this:

private static final Object unescapeHtml(Object value)
	{
		if (value instanceof CharSequence)
		{
			CharSequence unescapedMarkup = Strings.unescapeMarkup(value.toString());
			return Strings.replaceAll(unescapedMarkup, ""\"""", ""\\\"""");
		}
		else
		{
			return value;
		}
	}",19/Apr/12 14:15;bitstorm;Forget what I said about double-quotes replacing. Unescaping already convert double quotes into a safe &quot;,"19/Apr/12 19:40;svenmeier;I've just tested with the project from 3330 and everything worked as expected: wicket-1.5.x, jetty, linux, firefox and chrome.

my&frac12;companyname stays my&frac12;companyname after a submit.

What container are you using?","20/Apr/12 02:46;jpboudreault;I am running the project from intelliJ on a windows 7 machine. The problem happens in chrome and in IE.
Here is my maven config :
	<properties>
		<wicket.version>1.5.5</wicket.version>
		<jetty.version>6.1.25</jetty.version>
	</properties>

Thanks!","20/Apr/12 13:03;bitstorm;The discussion from WICKET-3608 explains why it was choosen to unescape the value of the attributes when it is displayed (see Attila's comment on 26/Apr/11 ). 

@Sven
in order to reproduce the issue you must use Wicket 1.5-RC4 or any later version.","20/Apr/12 13:41;svenmeier;@Andrea
I've tested this with current 1.5.x head, and it works.

Note that we don't talk about attributes from the markup, but entered values sent from the browser.

@Jean-Phillip
Can you confirm this?","20/Apr/12 14:25;jpboudreault;I just tested with head and the problem still happens. I am using an english (canada) locale if it does matter.

Could anyone on windows confirm the behavior?

Thanks!","20/Apr/12 15:43;bitstorm;It also happens to me under Linux Ubuntu 64bit, Jetty 6.1.26 and using current 1.5.x head. If I remove the overridden version of method put from class TagAttributes (i.e. value is no more unescaped) the input is redisplayd correctly.
I will do some more debugging as soon as possible.","20/Apr/12 15:53;bitstorm;@Sven
The attribute I'm talking about is value=""..."" added by class TextField inside method onComponentTag ","23/Apr/12 11:46;mgrigorov;The demo app works fine for me too.
I ran ""mvn jetty:run"" with 6.1.26 and with Start.java with Jetty 7.5.0. Tested with Chrome/Ubuntu and IE9/Windows7. Wicket 1.5-SNAPSHOT.

Please attach a quickstart to this ticket that shows the problem without any modifications required by me. I needed to tweak the app from 3330 to be able to run it.","24/Apr/12 12:08;jpboudreault;What kind of problem are you having with the 3330 project? I just imported it in IntelliJ replaced wicket.version and jetty.version in the pom.xml and ran it trough the IDE without any problem. 

","24/Apr/12 12:12;mgrigorov;This is also what I did and it didn't reproduce the problem.
I needed to add src/test from another project to have Start.java.","24/Apr/12 15:26;bitstorm;I've attached a brand new quickstart project based on version 1.5.5. You should be able to reproduce the problem running the project via mvn jetty:run

","24/Apr/12 21:28;svenmeier;Thanks Andrea, I can confirm the problem with the new quickstart.

It seems the fix for WICKET-3608 broke this one, see commit e9389ebdaf5b1eeb79a5ed3624eeaa529d322cf0 .

The following line in TagAttributes doesn't make sense to me:

	public final Object putInternal(String key, Object value)
	{
		return super.put(key, unescapeHtml(value));
	}

How can TagAttributes know where the value is coming from and whether is needs to be unescaped?","24/Apr/12 22:57;svenmeier;Markup attributes are now unescaped while parsing the markup. I removed the unescaping during rendering of TagAttributes.
Tests and Andrea's quickstart work fine now.","25/Apr/12 07:55;svenmeier;unescape markup attribute during parsing, don't unescape while rendering",25/Apr/12 12:29;jpboudreault;Thanks for addressing and fixing the issue!,,,,,,,,,,,,,,,,,,,,,
input button escapes escaped value,WICKET-3608,12503964,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svenmeier,svenmeier,11/Apr/11 19:00,28/Aug/12 18:33,13/Mar/19 23:17,06/May/11 10:20,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,An input button with a value attribute containing escaped characters (&gt;) is double escaped when rendered. Worked in 1.4.x.,,,,,,,,,,,,,,,WICKET-4505,,,,,,,04/May/11 15:58;pedrosans;WICKET-3608-martinsfix-test.patch;https://issues.apache.org/jira/secure/attachment/12478171/WICKET-3608-martinsfix-test.patch,13/Apr/11 13:47;pedrosans;WICKET-3608-test.patch;https://issues.apache.org/jira/secure/attachment/12476236/WICKET-3608-test.patch,04/May/11 16:42;pedrosans;WICKET-3608-unescaping-at-TagAttribute.patch;https://issues.apache.org/jira/secure/attachment/12478177/WICKET-3608-unescaping-at-TagAttribute.patch,03/May/11 19:46;mgrigorov;WICKET-3608.patch;https://issues.apache.org/jira/secure/attachment/12478088/WICKET-3608.patch,11/Apr/11 19:11;svenmeier;double_escaped_test.diff;https://issues.apache.org/jira/secure/attachment/12476036/double_escaped_test.diff,06/May/11 08:26;mgrigorov;tagIdWarning.patch;https://issues.apache.org/jira/secure/attachment/12478389/tagIdWarning.patch,,,6.0,,,,,,,,,,,,,,,,,,,2011-04-11 20:27:06.832,,,no_permission,,,,,,,,,,,204375,,,Fri May 06 10:20:31 UTC 2011,,,,,,0|i0kaif:,116520,,,,,,,,11/Apr/11 19:11;svenmeier;test,11/Apr/11 20:27;mgrigorov;The cause is WICKET-2829,11/Apr/11 20:35;mgrigorov;possible solution,12/Apr/11 05:38;ivaynberg;applied martin's patch. makes sense and makes things more consistent.,"13/Apr/11 13:47;pedrosans;In the way XmlTag and ComponentTag were changed in WICKET-2829, I thought we would suggest users to entrust tag attribute escaping to framework. It is not consistent to decide to escape an attribute or not based in a component flag designed to model text, and not for tag attribute content.
I'm sending the Sven patch back still failing after r1091299. If suggest user to entrust tag attribute escaping to framework is not a good idea, I guess we need a new flag, API and doc explaining that Wicket escapes tag attribute by default, and you can change this default behavior by setting (...)",13/Apr/11 13:54;mgrigorov;Reopening the issue since it broke few tests.,"13/Apr/11 13:55;mgrigorov;From IRC:
(03:52:21 PM) martin-g: the problem is that the user cannot provide: <input value="" aaa < bb"" .../>
(03:52:51 PM) martin-g: ComponentTag will encode it properly but the problem is that XmlPullParser will fail to parse it
(03:53:06 PM) pedrosans: hum, I missed that
(03:53:56 PM) martin-g: if the attribute value comes from the code then it works out of the box - wicket encodes it for you
(03:54:12 PM) martin-g: but if you try to set it in the html then the parser chokes","26/Apr/11 08:05;mgrigorov;Nice solution/workaround here is to use resource bundle for this special value.
E.g. 
in markup : <input type=""button"" wicket:message=""value:myKey""/>
in MyApp.properties: myKey=Bla a<b>c.

I understand that it looks like a hack but the automatic encoding for attribute values in one central place (ComponentTag.writeOutput()) is too cool to be sacrificed for this special use case.","26/Apr/11 14:13;akiraly;Imho the markup document and its file representation should be two different things). Converting (reading/deserializing) from file to document should involve a step where the xml entities are decoded. So if in the file it is <input type=""button"" value=""Bla a&lt;b&gt;c"" /> in the parsed document (in memory) this should be <input type=""button"" value=""Bla a<b>c"" /> (or a DOM object representing this). Afaik this is how xml, html parsers work too.

Similarly the converting (writing/serializing) from document to file now involves a central encoding step (WICKET-2829).","26/Apr/11 15:41;jdonnerstag;I agree with Attila. A IMarkupFilter would probably the right place, because there tag attributes are available. Tags which are irrelevant for Wicket are passed on as RawMarkup without any conversion anyways.","03/May/11 19:14;mgrigorov;Here is a IMarkupFilter based solution which unescapes all ComponentTag attribute values.
It is based on http://www.docjar.com/html/api/org/apache/commons/lang/Entities.java.html but without the support for all the HTML entities.
Currently supported ones are: nbsp, lt, gt, amp, quot and #039. If we want to support all other entities then maybe it will be better to copy the whole Entities class from commons-lang.

@All: Please share your opinion so I can finish the task.
",03/May/11 19:46;mgrigorov;Attach the new patch.,"04/May/11 15:58;pedrosans;Thanks Attila, I think you solved the puzzle :-)
Sending Martin's patch with a test case.

How about unscape tag attributes in XmlTag.put(key, value) method instead of the filter solution? IMO it is the correct place and will prevent double escaping even when user add an escaped value in ComponentTag directly.
","04/May/11 16:04;mgrigorov;Moving the logic in XmlTag sounds better!
So we just need to copy Entities.java from commons-java and the case is solved completely :-)","04/May/11 16:42;pedrosans;Sending Martin's patch again but moving the unescape call

- unescaping attribute at TagAttributes level because XmlPullParser uses its API directly
- improving the test case to cover the escaped attribute value add in ComponentTag","04/May/11 20:26;mgrigorov;With r1099592 I committed the last patch by Pedro + two classes copied from commons-lang and now unescaping works for all (I assume) HTML entities.

Thanks Pedro!","05/May/11 21:58;berniegp;The modifications made to XmlTag.java produce a flood of warnings for components with setOutputMarkupId(true).

The warning is :
WARN  - TagAttributes              - WARNING: Please use component.setMarkupId(String) to change the tag's 'id' attribute.

TagAttribute.checkIdAttribure(String key) does the following:
private void checkIdAttribute(String key)
{
    if ((key != null) && (key.equalsIgnoreCase(""id"")))
    {
        log.warn(""WARNING: Please use component.setMarkupId(String) to change the tag's 'id' attribute."");
    }
}

Tracing a little bit, the warnings originate from the statements :
if (getFlag(FLAG_OUTPUT_MARKUP_ID))
{
    tag.put(MARKUP_ID_ATTR_NAME, getMarkupId());
}
in
Component.onComponentTag(ComponentTag tag)

As far as I can see, this happens because XmlTag uses TagAttributes instead of ValueMap in  void copyPropertiesTo(final XmlTag dest)","06/May/11 08:26;mgrigorov;A patch that moves the check for setting 'id' attribute in ComponentTag itself.
This way it is closer to the user-space code. We don't want the user code to set the id via ComponentTag.put().",06/May/11 10:20;mgrigorov;Improved with r1100160.,,,,,,,,,,,,,,,,,,,,
TypeError: Wicket.Event is undefined,WICKET-4702,12602307,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,inren,inren,08/Aug/12 22:18,23/Aug/12 11:20,13/Mar/19 23:17,23/Aug/12 11:20,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,wicket-examples,,,,,,0,,,,,,,"Combination of AjaxLink (also AjaxButton) with Palette produces javascript errors on page load (here Firefor, but also in IE):
TypeError: Wicket.Event is undefined
[Bei diesem Fehler anhalten] 	

Wicket.Event.add(window, 'domready', Wicket.Focus.attachFocusEvent);

wicket...9000.js (Zeile 2399)

TypeError: Wicket.Event is undefined
[Bei diesem Fehler anhalten] 	

Wicket.Event.add(window, ""domready"", function(event) {

?2 (Zeile 26)

TypeError: Wicket.Browser is undefined
[Bei diesem Fehler anhalten] 	

...Wicket.Browser.isIE() && (Wicket.Browser.isIEQuirks() || !Wicket.Browser.isIE7()...

wicket...9000.js (Zeile 177)

CustomError: Error in protected function: !97

When you set  palette visible=false, these errors disapear.

Quickstart is here : https://docs.google.com/open?id=0B6-D5YvsNca8TWFLRzVSR29mMzA",Linux hostname 3.1.10-1.9-default #1 SMP Thu Apr 5 18:48:38 UTC 2012 (4a97ec8) x86_64 x86_64 x86_64 GNU/Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-08-09 09:05:09.124,,,no_permission,,,,,,,,,,,257707,,,Thu Aug 23 11:20:43 UTC 2012,,,,,,0|i0k88f:,116151,,,,,,,,09/Aug/12 09:05;mgrigorov;Fixed by checking for more specific objects in the Wicket namespace in wicket-event.js and wicket-ajax.js,"13/Aug/12 09:34;inren;The Wicket.Event error has gone, the  AjaxLink (also AjaxButton) are working again. But sadly, now the palette isn't working anymore, the JS Wicket.palette (if I remember the name right) object is now missing.","13/Aug/12 15:37;mgrigorov;The quickstart works for me.
Do you experience the problem with the same quickstart or with your application ?","13/Aug/12 17:54;inren;Application and Quickstart

mvn -U jetty:run with the quickstart: 
TypeError: Wicket.Palette is undefined

Don't know if this helps, mvn downloaded:
https://repository.apache.org/content/repositories/snapshots/org/apache/wicket/wicket-core/6.0-SNAPSHOT/wicket-core-6.0-20120813.160808-1493.pom
https://repository.apache.org/content/repositories/snapshots/org/apache/wicket/wicket-core/6.0-SNAPSHOT/wicket-core-6.0-20120813.160808-1493.jar
and
https://repository.apache.org/content/repositories/snapshots/org/apache/wicket/wicket-extensions/6.0-SNAPSHOT/wicket-extensions-6.0-20120813.160901-1490.pom
https://repository.apache.org/content/repositories/snapshots/org/apache/wicket/wicket-extensions/6.0-SNAPSHOT/wicket-extensions-6.0-20120813.160901-1490.jar

",23/Aug/12 11:20;mgrigorov;Improved the check in wicket-event.js to not override window.Wicket if it already exists.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ThreadContext should be detached before each subscribed page gets notified,WICKET-4727,12604585,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,linekin,linekin,23/Aug/12 09:48,23/Aug/12 10:21,13/Mar/19 23:17,23/Aug/12 10:21,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket-atmosphere,,,,,,,0,,,,,,,"Since the event subscriptions may cross different sessions, before entering request cycles of notified page, the ThreadContext should be detached except application instance.

In EventBus#post(Object event), ThreadContext.detach() should be placed inside the for-loop block of atmosphere resources,
otherwise Session().get() may return previous page's session.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-08-23 10:21:03.889,,,no_permission,,,,,,,,,,,257701,,,Thu Aug 23 10:21:03 UTC 2012,,,,,,0|i0k873:,116145,,,,,,,,"23/Aug/12 10:21;papegaaij;Good catch. I've replaced restore(null) with detach, moved it inside the loop, and removed the redundant detach at the end of the loop.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatePicker doesn't send 'change' event to the input field,WICKET-4725,12604371,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,phenderson,phenderson,22/Aug/12 11:44,22/Aug/12 12:38,13/Mar/19 23:17,22/Aug/12 12:38,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket-datetime,,,,,,,0,javascript,,,,,,"A textfield with a datepicker.
Add an OnChangeAjaxBehavior or an AjaxFormSubmitBehavior
When a date is selected via the date picker no ajax change event is triggered.
fails with 6 snapshot
works as expected with 1.5.7",linux tomcat openjdk 7,,,,,,,,,,,,,,,,,,,,,22/Aug/12 11:46;phenderson;datepickertest.tar.gz;https://issues.apache.org/jira/secure/attachment/12541892/datepickertest.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-22 12:38:10.049,,,no_permission,,,,,,,,,,,257702,,,Wed Aug 22 12:38:10 UTC 2012,,,,,,0|i0k87b:,116146,,,,,,,,22/Aug/12 11:46;phenderson;Quick start example.,"22/Aug/12 12:38;mgrigorov;Fixed by triggering manually 'change' event after selecting a date.
Unfortunately I wasn't able to find YUI 2.x API for that, so I used jQuery.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceStreamResource#getResourceStream() is called multiple times,WICKET-4718,12603891,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,blacklight,blacklight,17/Aug/12 17:32,20/Aug/12 21:29,13/Mar/19 23:17,20/Aug/12 15:32,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"When a ResourceStreamResource is implemented to return a IResourceStream dynamically, by returning a new instance of an extended AbstractResourceStream, that ResourceStream is instantiated multiple times when a ResourceLink is clicked.

In my case, that ResourceStream returns an AttachmentInputStream from the Ektorp library (for CouchDB interaction). This behavior results in multiple queries (currently up to four) when I click once on a ResourceLink to that resource.

Code Examples
Extended ResourceStreamResource: http://pastebin.com/9BB7LEiV
Extended IResouceStream: http://pastebin.com/Z7GvzGja","Mac OS X 10.7.4 Lion, Java 6, IntelliJ Idea 11.1, Tomcat 7 & Jetty 7.5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-08-20 08:59:21.91,,,no_permission,,,,,,,,,,,257703,,,Mon Aug 20 21:29:21 UTC 2012,,,,,,0|i0k87j:,116147,,,,,,,,"20/Aug/12 08:59;mgrigorov;The default impl of org.apache.wicket.request.resource.ResourceStreamResource#getResourceStream() is:

/**
	 * Lazy or dynamic initialization of the wrapped IResourceStream(Writer)
	 * @return the underlying IResourceStream
	 */
	protected IResourceStream getResourceStream()
	{
		return stream;
	}

Since you override it then it will do whatever you do in your implementation.

I see two solutions for your case:

1) Use org.apache.wicket.request.resource.ResourceStreamResource#ResourceStreamResource(IResourceStream) constructor and thus the 'stream' will be created just once and reused many times later.

2) Cache the created value of the 'stream' in your #getResourceStream() impl and reuse it. This will make the instantiation of 'stream' lazy.","20/Aug/12 09:16;blacklight;Thank you for your comment! Unfortunately, I already tried both, and there's two problems with it.

1) Can't do that, because that would make my resources static. I'm having many different ResourceLinks on one page, if I would load all those resources at once at page-load I would have a horrible performance. I also need to create the ResourceLink at page-load because I need the URL for it (it's not supposed to be a shared resource, my site is secured) to pass it to other functions, e.g. a JW Player for a mp3-file coming from the database.

2) I tried to cache the stream with a class variable in #getResourceStream(), but I also couldn't do that because the org.ektorp.AttachmentInputStream is not serializable. I get an error if I do that, the page can't be serialized and I don't have access to the resource even though it apparently has been queried once.

So 1) is not an option for now. Do you maybe see a solution for point 2? That would really help me out of my dilemma. I'm still wondering why the #getResourceStream() is called multiple times if it is only requested once via a ResourceLink. That's why I thought it's a bug.","20/Aug/12 09:27;mgrigorov;Put a breakpoint in #getResourceStream() and see the stacktrace(s). Paste them here or in a pastebin too.

As a workaround you can null-ify your cached 'stream' by overriding org.apache.wicket.request.resource.IResource#respond():

@Override public void respond(Attributes attrs) {
   super.respond(attrs);

  cachedStream = null;
}","20/Aug/12 10:04;blacklight;Ok, here's the stack trace when I try to cache the IResourceStream returned by getResourceStream() in my extended ResourceStreamResource. I get that multiple times as well: http://pastebin.com/5tgWDZYc

Also, I tried to debug it. Without caching, if I click on a ResourceLink e.g. to display an image from the database in a JQuery FancyBox, the stream get instantiated in the CouchDbAttachmentResource#getResourceStream(). It then appears to get instantiated again in the ResourceStreamResource#internalGetResourceStream()! I can't see why this should be happening. 
Also, by the time the resource should be displayed, the stream is already closed for some reason, so this is happening all over again, which is probably why I get 2x2=4 queries for one click on a ResourceLink.

If I try your workaround, it's sometimes working, sometimes not depending on the way I use the resource. I still get multiple queries, but for the image explained above, it's only happening two times.
However, when I let the browser e.g. play a .wav file directly from the database, it's not working anymore and I get the following exceptions: http://pastebin.com/JZF1kF9i

So not really an option either :/","20/Aug/12 10:08;mgrigorov;Please create a quickstart.
#internalGetResourceStream() just calls #getResourceStream() and asserts that the returned value is not null.","20/Aug/12 10:13;blacklight;Ok I will try to do that somehow, I hope I can replicate it because the CouchDB is local and I can't reproduce the environment the same way in a quick start. I will see if I find a workaround and comment again.","20/Aug/12 11:28;blacklight;Alright, I was able to replicate the behavior without the actual database! I'm using images from the web and am reading that data into an InputStream instead. But the structure is the same. The AttachmentInputStream class is the same, it comes from the Ektorp library and is returned if I fetch an attachment.

http://d.pr/f/aFnV

The first link is with caching, the second without. No error when I click on the second link which is what I have right now, but as you can see in the console there are multiple queries just like to my CouchDB.","20/Aug/12 15:32;mgrigorov;The problem was that ResourceStreamResource#close() also called #getInternalResourceStream().
With this fix now your link2 works fine.
link1 works also fine if you make your cached stream transient.","20/Aug/12 15:40;blacklight;Great, thank you for looking into it so quickly! Hope the release is near. :)

I tried making the cached stream transient today after your suggestions, but that caused some other problems with some of my resources, even though it might be working in the quick-start. If the fix makes my current implementation work, I'm happy.","20/Aug/12 15:47;mgrigorov;6.0.0 is close but you can try with 6.0-SNAPSHOT in the meantime. This way we can fix other issues before 6.0.0.
Just add the Apache snapshots repository to your project's pom.xml. See pom.xml in the quickstart for 6.0-SNAPSHOT.","20/Aug/12 16:08;blacklight;Hm, I tried it with the 6.0-SNAPSHOT. I'm afraid it's still not working as intended. In the quick-start it worked for the first time (maybe by coincidence), but if you click a second time (and every time after that) it's the same behavior: multiple queries.","20/Aug/12 20:56;mgrigorov;For me every click on link2 leads to these three log statements:

INFO  - TestResourceStreamResource - Called multiple times, therefore querying my database four times instead of once
INFO  - CustomResourceStream       - Opening InputStream for http://couchdb.apache.org/image/couch.png
INFO  - CustomResourceStream       - Closing InputStream for http://couchdb.apache.org/image/couch.png

I think this is the correct behavior.

Did you download 6.0-SNAPSHOT from Apache Snapshots repo or you built Wicket locally ?
Apache Jenkins setup is not very stable and sometimes it takes more time to build proper SNAPSHOT. ","20/Aug/12 21:29;blacklight;You are correct! I downloaded it from the Apache repository, and that was probably too quick. I just tried it again, and now I get the correct behavior every time like you do. 

Indeed it seems fixed! :)",,,,,,,,,,,,,,,,,,,,,,,,,,
SerializableChecker.close throws NPE,WICKET-4706,12603181,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svieujot,svieujot,13/Aug/12 06:12,20/Aug/12 08:42,13/Mar/19 23:17,20/Aug/12 08:42,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"The following code : 

try( SerializableChecker checker = new SerializableChecker( new NotSerializableException() ); ){
	checker.writeObject( page );
}

throws an NPE because SerializableChecker does not implement close.
Creating a simple empty close method in SerializableChecker should fix the problem.

java.lang.NullPointerException
	at java.io.ObjectOutputStream.flush(ObjectOutputStream.java:715)
	at java.io.ObjectOutputStream.close(ObjectOutputStream.java:736)
	at com.seanergie.wicket.WicketTestUtils.testPage(WicketTestUtils.java:92) // Line corresponding to the try closing }

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257706,,,2012-08-13 06:12:52.0,,,,,,0|i0k887:,116150,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette does not display a single unselected item,WICKET-4590,12559467,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,alexgrant,alexgrant,05/Jun/12 23:45,14/Aug/12 14:02,13/Mar/19 23:17,06/Jun/12 18:25,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,,,,,,,,0,,,,,,,"In Wicket 1.5.7, if you have a Palette where the choices model returns one object and the (selected) model returns zero objects, the palette will appear empty.

I believe this was a result of the change in WICKET-4528. In the method Recorder.updateIds, it used to look like this

	private void updateIds(final String value)
	{
		if (Strings.isEmpty(value))
		{
			ids = EMPTY_IDS;
		}
		else
		{
			ids = value.split("","");
		}
	}

Now it looks like this

	private void updateIds(final String value)
	{
		getSelectedIds().clear();

		for (final String id : Strings.split(value, ','))
		{
			getSelectedIds().add(id);
		}
	}

Which means that if value is """", Strings.split returns one empty string, so getSelectedIds() contains one empty string, resulting in getUnselectedList() deciding that the selected and choices lists are both size one and therefore there is nothing available to display in the unselected list.",,,,,,,,,,,,,,,,,,,,,,05/Jun/12 23:47;alexgrant;WICKET-4590-palette-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12531047/WICKET-4590-palette-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-06-06 18:25:30.171,,,no_permission,,,,,,,,,,,257749,,,Wed Jun 06 18:25:30 UTC 2012,,,,,,0|i0k8hr:,116193,,,,,,,,05/Jun/12 23:47;alexgrant;Attached a quickstart showing the problem.,06/Jun/12 18:25;svenmeier;Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6.0.0-beta3: Ajax upload file is not working in IE,WICKET-4701,12602138,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,javadeveloper.david@gmail.com,javadeveloper.david@gmail.com,08/Aug/12 08:37,09/Aug/12 08:40,13/Mar/19 23:17,09/Aug/12 08:40,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,,,,,,,,0,,,,,,,"In IE (IE8, IE9),  when pressing on the button that supposed to do the Ajax upload – a new window is opened with the <ajax-response> content, and the upload itself failed.

Note that in Firefox And Chrome it's working well.

[Please find attached a quickstart project.]


",Using eclipse Indigo on Linux. Deployed on Jboss 7.,,,,,,,,,,,,,,,,,,,,,08/Aug/12 08:39;javadeveloper.david@gmail.com;myproject.zip;https://issues.apache.org/jira/secure/attachment/12539792/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-09 08:40:15.068,,,no_permission,,,,,,,,,,,257708,,,Thu Aug 09 08:40:15 UTC 2012,,,,,,0|i0k88n:,116152,,,,,,,,"09/Aug/12 08:40;mgrigorov;I was able to reproduce it only in IE9 Backward compatibility mode.
The problem and solution are described at http://stackoverflow.com/questions/875650/why-does-ie-open-form-submission-in-a-new-window-and-not-dynamically-inserted-if",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NumberTextField doesn't accept values <=0 for Double and Float,WICKET-4696,12601502,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,svieujot,svieujot,05/Aug/12 15:15,06/Aug/12 19:14,13/Mar/19 23:17,05/Aug/12 21:17,1.5.7,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"The org.apache.wicket.util.lang.Numbers class defines the method :
public static Number getMinValue(Class<? extends Number> numberType)

This method return the MatchingNumberTypeClass.MIN_VALUE.
But for Double.MIN_VALUE and Float.MIN_VALUE return the smallest positive number, not the smallest negative number like for the other number classes.

One side effect is that by default you can't enter a negative value, or a 0 in a NumberTextField<Double> or NumberTextField<Float>.",,,,,,,,,,,,,,,,,,,,,,05/Aug/12 15:17;svieujot;WICKET-4696.patch;https://issues.apache.org/jira/secure/attachment/12539205/WICKET-4696.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-05 21:17:08.447,,,no_permission,,,,,,,,,,,257709,,,Sun Aug 05 21:17:08 UTC 2012,,,,,,0|i0k88v:,116153,,,,,,,,05/Aug/12 15:17;svieujot;Patch attached.,05/Aug/12 21:17;svenmeier;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in SqlDateConverter,WICKET-4694,12601318,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,dutrieux,dutrieux,03/Aug/12 08:02,06/Aug/12 10:20,13/Mar/19 23:17,06/Aug/12 10:20,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,(java.util.Date),1.5,ClassCastException,SqlDateConverter,,,"When converting a date string to a java.sql.Date you'll always get a ClassCastException like this one:

java.lang.ClassCastException: java.util.Date cannot be cast to java.sql.Date
     at org.apache.wicket.util.convert.converters.SqlDateConverter.convertToObject(SqlDateConverter.java:43)

Reason is DateFormat.parse() returns a java.util.Date, which is cast to java.sql.Date. One solution would be

return new Date(((java.util.Date)parse(getDateFormat(locale), value, locale)).getTime())

See https://issues.apache.org/jira/browse/WICKET-2309

The problem had been fixed in version 1.4, but the (java.util.Date) code was remove on 1.5 but It's very important to don't have this error.","Windows  7x64, jdk1.6.0_33 (32bits)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-08-03 14:19:21.011,,,no_permission,,,,,,,,,,,257711,,,Mon Aug 06 10:16:06 UTC 2012,,,,,,0|i0k89b:,116155,,,,,,,,"03/Aug/12 14:19;svenmeier;This is the current line 43 in wicket-1.5.x:

  return new Date(parse(getDateFormat(locale), value, locale).getTime());

Looks pretty much the same what you're suggesting and hasn't changed for the last two years.",06/Aug/12 10:16;mgrigorov;The problem is in the class type signature: SqlDateConverter extends AbstractConverter<java.sql.Date> and later usage of #parse() method which tries to cast java.util.Date to java.sql.Date.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<script> tag broken in certain situations when <script src=""...""></script> reference added in page header section",WICKET-4683,12600805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,szmurlor,szmurlor,31/Jul/12 08:38,02/Aug/12 12:17,13/Mar/19 23:17,02/Aug/12 12:17,6.0.0,6.0.0-beta2,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"Closing </script> tag is swallowed in certain situations when external script reference is added (<script src=""""></script>) to the page <head></head> section in Wicket 6.0.0-beta2 and beta3 and SNAPSHOT

Original source code for <head> section:
<head>
		<meta charset=""utf-8"" />
		<title>Apache Wicket Quickstart</title>
		<link href='http://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:regular,bold' rel='stylesheet' type='text/css' />
		<link rel=""stylesheet"" href=""style.css"" type=""text/css"" media=""screen"" title=""Stylesheet"" />

        <script type=""text/javascript"" src=""http://akuku/something1.js""></script>
        <script type=""text/javascript"" src=""http://akuku/something2.js""></script>
        <script type=""text/javascript"" src=""http://akuku/something3.js""></script>

        <script type=""text/javascript"" src=""akuku/something4.js""></script>

        <script type=""text/javascript"" src=""/akuku/something5.js""></script>
        <script type=""text/javascript"" src=""akuku/something6.js""></script>

Rendered HTML:
	<head>
		<meta charset=""utf-8"" />
		<title>Apache Wicket Quickstart</title>
		<link href='http://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:regular,bold' rel='stylesheet' type='text/css' />
		<link rel=""stylesheet"" href=""style.css"" type=""text/css"" media=""screen"" title=""Stylesheet""/>

        <script type=""text/javascript"" src=""http://akuku/something1.js""></script>
        <script type=""text/javascript"" src=""http://akuku/something2.js""><script type=""text/javascript"" src=""http://akuku/something3.js""><script type=""text/javascript"" src=""akuku/something4.js""></script><script type=""text/javascript"" src=""/akuku/something5.js""><script type=""text/javascript"" src=""akuku/something6.js""></script>

	</head>",JavaSE-1.6 Eclipse: mvn jetty:run,,,,,,,,,,,,,,,,,,,,,31/Jul/12 08:46;szmurlor;script_swallowed.zip;https://issues.apache.org/jira/secure/attachment/12538522/script_swallowed.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-07-31 10:15:01.956,,,no_permission,,,,,,,,,,,257718,,,Tue Jul 31 10:15:01 UTC 2012,,,,,,0|i0k8av:,116162,,,,,,,,31/Jul/12 08:41;szmurlor;Wicket Quickstart demostrating bug.,31/Jul/12 08:46;szmurlor;Attached corrected Wicket Quickstart demonstrating the bug.,"31/Jul/12 10:15;mgrigorov;I have solved the issue by not applying StyleAndScriptIdentifier markup filter on <script> elements without 'src' attribute.
The bug is somewhere deeper because this markup filter just sets some user data to the auto component. It seems this confuses later the rendering somehow. I'm leaving the ticket opened if someone else wants to track it down further. 
The ticket will be closed when 1.5.8 or 6.0.0 are released.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NotSerializableException of the field ""pageMarkup"" in BaseWicketTester$StartComponentInPage",WICKET-4684,12600815,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cwellekoetter,cwellekoetter,31/Jul/12 09:56,02/Aug/12 12:16,13/Mar/19 23:17,02/Aug/12 12:16,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"If you enable the RequestLogger in your application and if you use the ""startComponentInPage"" Method on the WicketTester you could get NotSerializableExceptions if the session gets serialized:

WARN  org.apache.wicket.util.lang.WicketObjects Unable to determine object size of Session
java.io.NotSerializableException: org.apache.wicket.markup.Markup
	- field (class ""org.apache.wicket.util.tester.BaseWicketTester$StartComponentInPage"", name: ""pageMarkup"", type: ""interface org.apache.wicket.markup.IMarkupFragment"")
	- object (class ""org.apache.wicket.util.tester.BaseWicketTester$StartComponentInPage"", [Page class = org.apache.wicket.util.tester.BaseWicketTester$StartComponentInPage, id = 1, render count = 2])
	- field (class ""org.apache.wicket.Component"", name: ""parent"", type: ""class org.apache.wicket.MarkupContainer"")
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-31 10:00:05.881,,,no_permission,,,,,,,,,,,257717,,,Tue Jul 31 10:05:38 UTC 2012,,,,,,0|i0k8an:,116161,,,,,,,,"31/Jul/12 10:00;mgrigorov;Why this page is serialized ?
I think WicketTester do not serialize the page at all.
Do you use custom IPageManager for WicketTester ?","31/Jul/12 10:05;cwellekoetter;No, I do not use a custom IPageManager. I only enabled the RequestLogger in the application.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException with IFeedback instances that contain other IFeedback instances,WICKET-4687,12600930,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,ccrabb,ccrabb,31/Jul/12 22:50,02/Aug/12 12:06,13/Mar/19 23:17,02/Aug/12 12:06,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,ConcurrentModificationException,"IFeedback,",,,,,"When an implementation of IFeedback contains a component that dynamically constructs a child instance of IFeedback, a ConcurrentModificationException will occur.  This is easily replicated through the use of a FormComponentFeedbackBorder which contains a refreshing repeater (ListView) that constructs a FeedbackPanel.

Here is the exception:

java.util.ConcurrentModificationException
     at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
     at java.util.AbstractList$Itr.next(AbstractList.java:343)
     at org.apache.wicket.Component.internalPrepareForRender(Component.java:2212)
     at org.apache.wicket.Page.internalPrepareForRender(Page.java:246)
     at org.apache.wicket.Component.render(Component.java:2281)
     at org.apache.wicket.Page.renderPage(Page.java:1020)
     at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:115)
     at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:237)
     at org.apache.wicket.core.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:165)
     at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:814)
     at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
     at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:253)
     at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:210)
     at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:281)
     at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:245)
     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1332)
     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:477)
     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)
     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)
     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)
     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:965)
     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
     at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
     at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)
     at org.eclipse.jetty.server.Server.handle(Server.java:348)
     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:452)
     at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:884)
     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:938)
     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:630)
     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)
     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:77)
     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:606)
     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:46)
     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:603)
     at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:538)
     at java.lang.Thread.run(Thread.java:662)",,,,,,,,,,,,,,,,,,,,,,31/Jul/12 22:51;ccrabb;feedbackIssue.zip;https://issues.apache.org/jira/secure/attachment/12538628/feedbackIssue.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257715,,,Tue Jul 31 22:51:09 UTC 2012,,,,,,0|i0k8a7:,116159,,,,,,,,31/Jul/12 22:51;ccrabb;Attached is a quick start where the exception occurs rendering the HomePage.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ValidationError addKey fails with error abort,WICKET-4685,12600822,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hafenwasser,hafenwasser,31/Jul/12 10:43,31/Jul/12 15:10,13/Mar/19 23:17,31/Jul/12 15:10,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"// own code
	TextField<String> field = new TextField<String>( ""fldItem"", getPropertyModel() );
	field.add( new PatternValidator( pattern ) {
		protected ValidationError decorate( ValidationError error, IValidatable<String> validatable ) {
			error.setMessage( ""Input is not matching pattern="" + pattern );
			return error;
		}
	} );

// this will fail in the class ValidationError at
	public ValidationError addKey(IValidator<?> validator)
	{
		Args.notNull(validator, ""validator"");
		addKey(validator.getClass().getSimpleName());      // <-- fail, because getSimpleName is empty
		return this;
	}","wicket 6.0.0. beta3
Java(TM) SE Runtime Environment (build 1.7.0_03-b04)
Java HotSpot(TM) 64-Bit Server VM (build 22.1-b02, mixed mode)
debian 64 bit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257716,,,2012-07-31 10:43:15.0,,,,,,0|i0k8af:,116160,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"html forms always submitted with ""GET"" method (by querystring)",WICKET-4682,12600657,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,matthewyeh,matthewyeh,30/Jul/12 13:27,30/Jul/12 14:02,13/Mar/19 23:17,30/Jul/12 14:02,6.0.0-beta2,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"In wicket 6.0 beta, forms will always submit with ""GET"" method even though getMethod() returns ""POST"".
The form will fail to submit if the length of querystring is too long....",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-30 13:51:46.255,,,no_permission,,,,,,,,,,,257719,,,Mon Jul 30 14:02:02 UTC 2012,,,,,,0|i0k8b3:,116163,,,,,,,,30/Jul/12 13:51;mgrigorov;Please attach a quickstart to demonstrate the bug.,"30/Jul/12 14:02;mgrigorov;Added a check of the form's markup attributes. If method=""post"" is used then the Ajax form submittion will be also POST.

Please try with latest 6.0-SNAPSHOT (you may need to build it locally until Jenkins build the official one).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoLinkResolver looks in the wrong scope,WICKET-4681,12600478,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,cmenzel,cmenzel,cmenzel,27/Jul/12 14:50,27/Jul/12 16:20,13/Mar/19 23:17,27/Jul/12 16:20,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,,,wicket,,,,,,,0,,,,,,,"When turning on MarkupSettings#automaticLinking, AutoLinkResolver is supposed to touch tags like <img> and <a> and set their src/href attributes so that packaged resources are correctly referenced.

I found a situation where that does not work: If you have a panel, and e.g. an <img> tag inside that panel, and the <img> tag is NOT enclosed in a container component, it looks for the resource in the scope of the surrounding component, not in the panel's scope. It obviously can't find it there, so it just dumps the raw attribute.

If you put that <img> tag into a MarkupContainer (like WMC) then it works correctly. So it looks like the scope is off-by-one or something like that. I'll investigate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,253137,,,Fri Jul 27 16:20:43 UTC 2012,,,,,,0|i0dbsv:,75841,,,,,,,,"27/Jul/12 15:16;cmenzel;With <wicket:link> it works, since that introduces a container component.","27/Jul/12 16:20;cmenzel;6.x is not affected.

I fixed it in 1.5.x by having AutoLinkResolver trying getAssociatedMarkup first before using getMarkup. That way it uses the correct scope to resolve package resources.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlPullParser doesn't parse correctly attributes with complex namespace,WICKET-4679,12600377,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,26/Jul/12 20:11,27/Jul/12 08:32,13/Mar/19 23:17,27/Jul/12 08:32,1.5.7,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"Having a markup like:
<a class=""addthis_button_google_plusone_badge"" g:plusone:size=""smallbadge""  g:plusone:href=""https://plus.google.com/25252/""></a> causes XmlPullParser to throw the following exception:

java.text.ParseException: Same attribute found twice: g:plusone (line 19, column 100)
     at org.apache.wicket.markup.parser.XmlPullParser.parseTagText(XmlPullParser.java:673)
     at org.apache.wicket.markup.parser.XmlPullParser.next(XmlPullParser.java:294)
     at org.apache.wicket.markup.parser.filter.RootMarkupFilter.nextElement(RootMarkupFilter.java:58)
.....",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257720,,,Fri Jul 27 08:32:04 UTC 2012,,,,,,0|i0k8bb:,116164,,,,,,,,"27/Jul/12 08:32;mgrigorov;Improved it to be able to parse namespaces with two colons inside.
I don't see a better way to make the parsing scaling to more complex attribute names without making the regex pattern more complex.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavaScript error when submitting nested multipart form,WICKET-4673,12600235,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,blahspam,blahspam,25/Jul/12 23:17,26/Jul/12 13:58,13/Mar/19 23:17,26/Jul/12 09:46,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"When attempting to submit a nested form containing a FileUploadField via AjaxButton, the following JavaScript error is reported (via Wicket Debug Panel):

ERROR: An error occurred while executing Ajax request:TypeError: Object #<HTMLDivElement> has no method 'submit'
","wicket 6.0.0-beta3, Chrome",,,,,,,,,,,,,,,,,,,,,25/Jul/12 23:24;blahspam;nestedforms.zip;https://issues.apache.org/jira/secure/attachment/12537920/nestedforms.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-07-26 09:12:10.866,,,no_permission,,,,,,,,,,,257721,,,Thu Jul 26 13:58:01 UTC 2012,,,,,,0|i0k8bj:,116165,,,,,,,,"25/Jul/12 23:24;blahspam;Quickstart demonstrating the error

browse to http://localhost:8080/ and click on the ""Inner Submit"" button.","26/Jul/12 09:12;mgrigorov;A fix is committed in master branch.
I'll close the ticket when I add some unit tests.",26/Jul/12 09:46;mgrigorov;Test added.,26/Jul/12 13:58;blahspam;Thanks Martin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PropertyVariableInterpolator add support for IConverterLocator (patch included),WICKET-3753,12508810,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,manthos,manthos,31/May/11 09:39,24/Jul/12 18:01,13/Mar/19 23:17,19/Jul/12 19:14,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,1.5-RC5,6.0.0,wicket,,,,,,,0,,,,,,,"Add support for IConverterLocator to PropertyVariableInterpolator (see patch) to work with known IConverter for properties.

Sample code:
getString(""created"", Model.of(item));

properties:
created=Item created at ${createDate} by ${user}.

Currently createDate (and any other property) is always converted by toString() instead of respecting IConverter to get properties localized.
",,,,,,,,,,,,,,,,,,,WICKET-4662,,,31/May/11 09:39;manthos;converter.patch;https://issues.apache.org/jira/secure/attachment/12480921/converter.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-03 02:24:37.888,,,no_permission,,,,,,,,,,,71927,,,Tue Jul 24 18:01:00 UTC 2012,,,,,,0|i0ka53:,116460,,,,,,,,"03/Jun/11 02:24;ivaynberg;thanks for the patch, but in the future make sure the tests pass :)","05/Jun/11 09:38;manthos;oops, I think had run the tests successfully... apparently  not... sorry...
thanks for applying","18/Jul/12 22:14;svenmeier;This change break property substitution in StringResourceModel's resource keys, which should *not* be converted according to the current locale.","19/Jul/12 08:10;manthos;IMO using Localizer.getString with a model (to use for property substitutions in the strings) should honor converter and locale... 
Any ideas how we can deal with it? 
","19/Jul/12 10:04;tapter;Using converters to replace properties in KEYS should never happen as this leads to totally strange resource keys which cannot be handled anymore. For example:
new StringResourceModel(""details.disabled.${disabled}"", this.model) 
will result in keys like ""details.disabled.yes"" or ""details.disabled.nein"" since we're using a default boolean converter to display various booleans throughout the application.
The culprit is StringResourceModel.getResourceKey() which calls.  return PropertyVariableInterpolator.interpolate(resourceKey, model.getObject());  which results in  PropertyVariableInterpolator.getValue() being called which does the conversion. Maybe there should be a flag on the interpolator whether or not to use converters?","19/Jul/12 10:55;manthos;This sounds good to me. One thing: Instead of a new parameter flag we could also extract into a KeyVariableInterpolator class, just for a clearer separation. If you agree I will contribute a patch for this.","19/Jul/12 11:02;svenmeier;Please see my changes in Wicket master. Values are now converted automatically in Localizer. This is much better than the previous solution, because the component's #getConverter() is taken into account.

PropertyVariableInterpolator is reverted to it's 1.4.x state, I.e. no usage of converters.
Interpolation in resource keys happens without converter.

Question is: What to do with 1.5.x without stepping on someone's feet?","19/Jul/12 11:34;manthos;Thank you. Agree, using components getConverter is much better (btw: correctly also Locale should taken from component).

Porting to 1.5 shouldn't break implementations, or have I overlook something?
","19/Jul/12 11:58;tapter;I see no documentation mentioning that StringResourceModels will also convert the variables in the keys and I also see no applications for such a behaviour.
I do not know what effect those changes of Sven have but replacements in keys should never be let through a converter anyway, that was the only isse I have with localization.",24/Jul/12 09:41;tapter;I need to backport this to 1.5.7 for the time being. Could you lead me to the file(s) changed by this fix? I don't see any changes attached to this issue... Thanks!,"24/Jul/12 18:01;svenmeier;Do you have a clone of Wicket's source?

git checkout wicket-1.5.x
git show be9300fe2b1215044721e95eb2318356b2f21311",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax responses for QUEUE and DROP type channels are not guaranteed to be processed in the order of the requests,WICKET-4668,12599951,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,coldiges,coldiges,24/Jul/12 06:55,24/Jul/12 11:28,13/Mar/19 23:17,24/Jul/12 11:28,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"The ajax responses are processed in several recorded steps depending on the response content. Those steps form a step-chain for each request/response. The processing order of each step-chain is guaranteed to be processed in the correct order but having several of those step-chains being executed ""concurrently"" may result in out-of-order response processing.

The ""concurrency"" is introduced into the response processing by using the window.setTimeout function to re-schedule some of the steps (for various reasons), but this timeout function does NOT guarantee to execute the scheduled code in the order it is scheduled.

For this reason e.g. the DOM replacement step of response2 might be executed before the same step is executed for response1.

This effect is also visible to the user. Suppose you have a textfield and you trigger an ajax-request for each new character in the textfield (onChange event). The Ajax response updates another part of the page showing the entered text in a label component. Now, if the out-of-order response processing hits, the label might show an old state of the textfield, because the latest response has been overwritten by a previous response.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257723,,,2012-07-24 06:55:53.0,,,,,,0|i0k8bz:,116167,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LazyInitProxyFactory uses wrong ClassLoader in OSGi environment,WICKET-4663,12599593,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,stefanovich,stefanovich,20/Jul/12 07:55,23/Jul/12 13:46,13/Mar/19 23:17,23/Jul/12 08:14,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"The method LazyInitProxyFactory#createProxy use Thread.currentThread().getContextClassLoader() to create a new proxy instance. It seems that this is not correct in an OSGi environment.

Preferred is to use the ClassLoader provided by the AbstractClassResolver class (getClassResolver is not part of IClassResolver). 

Then it will be something like:


			ClassLoader classLoader;
			if (Application.exists())
			{
				AbstractClassResolver classResolver = (AbstractClassResolver) Application.get()
					.getApplicationSettings()
					.getClassResolver();			

				classLoader = classResolver.getClassLoader();
			}
			else
			{
				classLoader = Thread.currentThread().getContextClassLoader();
			}
			
			try
			{
				return Proxy.newProxyInstance(classLoader, new Class[] { type, Serializable.class,
						ILazyInitProxy.class, IWriteReplace.class }, handler);
			}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-23 08:14:58.562,,,no_permission,,,,,,,,,,,257725,,,Mon Jul 23 13:46:41 UTC 2012,,,,,,0|i0k8cf:,116169,,,,,,,,"23/Jul/12 08:14;mgrigorov;Applied your suggestion in 1.5.x.
For 6.x I moved #getClassLoader() method in IClassResolver interface.",23/Jul/12 13:46;stefanovich;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a new AjaxChannel that discards any Ajax requests if there is a running request in the same channel,WICKET-4665,12599602,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,coldiges,coldiges,20/Jul/12 10:12,23/Jul/12 13:25,13/Mar/19 23:17,23/Jul/12 13:25,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"The schedule JavaScript function of the ajax channel uses a BUSY flag and a request queue in a callbacks array.

If the channel is marked as busy because there is a request currently being executed, the second part of the function is executed and for channel type DROP, the newly scheduled request is put into the callbacks queue.

Using this approach, the dropping channel type actually allows 2 requests in the ""total queue"".
The one that triggers the busy = true which is still running and the one that is stored into the callbacks array.

Reading the documentation of AjaxChannel.DROP says:

dropping - only the last Ajax request is processed, the others are discarded

		schedule: function (callback) {
			if (this.busy === false) {
				this.busy = true;
				try {
					return callback();
				} catch (exception) {
					this.busy = false;
					Wicket.Log.error(""An error occurred while executing Ajax request:"" + exception);
				}
			} else {
				Wicket.Log.info(""Channel busy - postponing..."");
				if (this.type === 's') { // stack
					this.callbacks.push(callback);
				}
				else { /* drop */
					this.callbacks = [];
					//  THIS IS WRONG   this.callbacks[0] = callback;
				}
				return null;
			}
		},

To make it work, the dropping channel should NOT store the currently scheduled request, but simply clear the callbacks array.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-20 15:06:36.927,,,no_permission,,,,,,,,,,,257724,,,Sun Jul 22 20:07:39 UTC 2012,,,,,,0|i0k8c7:,116168,,,,,,,,"20/Jul/12 15:06;svenmeier;I don't know why this implementation keeps one additional callback in the queue, but it has been this way in 1.5.x too (didn't check 1.4.x).

IMHO it would make sense to let the channel drop *all* successive callbacks while busy, as you suggested. But I would like to hear the opinion other developers.

@Igor, @Martin ? ","22/Jul/12 20:07;mgrigorov;I think Matej have implemented this functionality and I didn't have the chance someone to explain it to me. So this is how I understood it by reading its JSDoc and follow the logic in the code: 
the already fired request doesn't count, only the requests in the queue count. That is, the already fired request should not be stopped (this will lead to ""the client aborted the connection"" exceptions), the ""busy"" flag is there to prevent more than one Ajax requests on the same channel to be fired in the same time. 
DROP and QUEUE affect only the queue of waiting requests.

If DROP was supposed to drop all requests but the one that is currently being executed then the JSDoc would say that it allows only the *first* request, not the *last*.

We may add a third value for AjaxChannel.Type for this new behavior though.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
atomicity violation bugs of using concurrent collections,WICKET-4646,12598123,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jacklondongood,jacklondongood,10/Jul/12 03:01,23/Jul/12 10:58,13/Mar/19 23:17,23/Jul/12 10:58,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,patch,,,,,,"My name is Yu Lin. I'm a Ph.D. student in the CS department at
UIUC. I'm currently doing research on mining Java concurrent library
misusages. I found some misusages of ConcurrentHashMap in wicket
1.5.7, which may result in potential atomicity violation bugs.

The code below is a snapshot of the code in file
src/wicket-core/src/main/java/org/apache/wicket/request/resource/PackageResourceReference.java from line 152 to 157

L152        UrlAttributes value = urlAttributesCacheMap.get(key);
L153        if (value == null)
L154        {
L155            value = getUrlAttributes(locale, style, variation);
L156            urlAttributesCacheMap.put(key, value);
L157        }

In the code above, an atomicity violation may occur between lines <154
and 156>. Suppose a thread T1 executes line 152 and finds out the
concurrent hashmap does not contain the key ""key"". Before it gets to
execute line 156, another thread T2 puts a pair <key, v> in the
concurrent hashmap ""urlAttributesCacheMap"". Now thread T1 resumes
execution and it will overwrite the value written by thread T2. Thus,
the code no longer preserves the ""put-if-absent"" semantics. By using
putIfAbsent method, we can eliminated this atomicity violation (see
patch).

I found some similar atomicity violations in other files:

In
src/wicket-core/src/main/java/org/apache/wicket/util/lang/PropertyResolver.java,
atomicity violation may occur if thread T2 puts a value to the map
between lines <385 and 522> or <234 and 260>. However, it seems map
""getAndSetters"" is not always a ConcurrentHashMap that the first
atomicity violation at line 522 cannot be fixed by using putIfAbsent,
so should we use synchronized?

In
src/wicket-core/src/main/java/org/apache/wicket/session/DefaultPageFactory.java,
atomicity violation may occur if thread T2 puts a value to the map
between lines <124 and 131> or <234 and 260>.

In
src/wicket-core/src/test/java/org/apache/wicket/versioning/InMemoryPageStore.java,
atomicity violation may occur if thread T2 puts a value to the map
between lines <95 and 97>.

In
src/wicket-spring/src/main/java/org/apache/wicket/spring/injection/annot/AnnotProxyFieldValueFactory.java,
atomicity violation may occur if thread T2 puts a value to the map
between lines <127 and 142> or <165 and 170>.

In 
src/wicket-util/src/main/java/org/apache/wicket/util/convert/converter/AbstractIntegerConverter.java,
atomicity violation may occur if thread T2 puts a value to the map
between lines <47 and 51>.

In 
src/wicket-util/src/main/java/org/apache/wicket/util/watch/ModificationWatcher.java,
atomicity violation may occur if thread T2 puts a value to the map
between lines <95 and 107>.

Meanwhile, there may be an atomicty violation between lines <190 and 200> in 
src/wicket-core/src/main/java/org/apache/wicket/feedback/FeedbackMessages.java.
Suppose thread T1 finds list ""messages"" is not empty at line
187. Before T1 removes ""toDelete"" from ""messages"" at line 200, T1
suspends and another thread T2 removes the same ""toDelete"" from ""messages"". 
When T1 resumes, it will remove nothing and ""clear"" will return the wrong value (in
this case, ""clear"" method should return 0). Though I'm not sure whether this scenario 
will happen, I also provide a patch for this atomicty violation.",,1814400,1814400,,0%,1814400,1814400,,,,,,,,,,,,,,,10/Jul/12 03:03;jacklondongood;fix-WICKET-4646.patch;https://issues.apache.org/jira/secure/attachment/12535779/fix-WICKET-4646.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-07-23 10:58:12.28,,,no_permission,,,,,,,,,,,257732,,,Mon Jul 23 10:58:12 UTC 2012,,,,,,0|i0k8dz:,116176,,,,,,,,10/Jul/12 03:03;jacklondongood;This is a patch that can fix the atomicity violation bugs.,23/Jul/12 10:58;mgrigorov;Thank you!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax channel busy flag not properly cleared upon SUCCESSFUL callback executions,WICKET-4661,12599270,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,coldiges,coldiges,18/Jul/12 13:59,20/Jul/12 06:27,13/Mar/19 23:17,20/Jul/12 06:27,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"The error is triggered if a custom AjaxChannel is defined using code like this in an AjaxEventbehavior:

{noformat}
@Override
         protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {
                super.updateAjaxAttributes(attributes);
                attributes.setChannel(new AjaxChannel(""mychannel"", Type.DROP));
         }

{noformat}

Note: The channel type does NOT matter. Neither DROP nor QUEUE work.

My guess is, the fact the a named ajax channel is used results in the client side re-using the JavaScript Wicket.Channel instances. 

In a re-used instance, the busy flag needs to be properly cleared after successfully executing an ajax call and its callback which is NOT done in the currently implemented code:

{noformat}
schedule: function (callback) {
			if (this.busy === false) {
				this.busy = true;
				try {
					return callback();
				} catch (exception) {
					this.busy = false;
					Wicket.Log.error(""An error occurred while executing Ajax request:"" + exception);
				}
			} else {
				Wicket.Log.info(""Channel busy - postponing..."");
{noformat}

A better, working solution would be:

{noformat}
schedule: function (callback) {
			if (this.busy === false) {
				this.busy = true;
				try {
					var callbackResult = callback();
					this.busy = false;
					return callbackResult;
				} catch (exception) {
					this.busy = false;
					Wicket.Log.error(""An error occurred while executing Ajax request:"" + exception);
				}
			} else {
				Wicket.Log.info(""Channel busy - postponing..."");
{noformat}
",,,,,,,,,,,,,,,,,,,,,,18/Jul/12 14:20;jriehn;wicket-4661.patch;https://issues.apache.org/jira/secure/attachment/12536993/wicket-4661.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-07-18 14:20:06.508,,,no_permission,,,,,,,,,,,257727,,,Fri Jul 20 06:27:47 UTC 2012,,,,,,0|i0k8cv:,116171,,,,,,,,18/Jul/12 14:20;jriehn;possible solution as patch,"20/Jul/12 06:27;svenmeier;Problem was that ChannelManager#done() always got an undefined channel, thus informing the wrong channel (the default '0') of completion.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The default exception mapper is replying cacheable exceptional responses,WICKET-4659,12599073,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,pedrosans,pedrosans,17/Jul/12 07:27,17/Jul/12 09:43,13/Mar/19 23:17,17/Jul/12 09:43,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,The problem is that some common URLs in the application like to a page instance are responding the cached exception page rather than hitting the server for the page instance being requested. It happens because at some moment in the past a exception page were replied and cached for a request in this URL.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257728,,,2012-07-17 07:27:12.0,,,,,,0|i0k8d3:,116172,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxFormChoiceComponentUpdatingBehavior not set model object,WICKET-4643,12597895,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,wickeria,wickeria,07/Jul/12 11:13,09/Jul/12 12:06,13/Mar/19 23:17,09/Jul/12 12:06,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket,,,,,,,0,,,,,,,AjaxFormChoiceComponentUpdatingBehavior cause ajax request but model object is not set. Quickstart is attached.,,,,,,,,,,,,,,,,,,,,,,07/Jul/12 11:14;wickeria;quickstart1.zip;https://issues.apache.org/jira/secure/attachment/12535517/quickstart1.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-07-08 10:21:43.791,,,no_permission,,,,,,,,,,,257733,,,Mon Jul 09 12:06:20 UTC 2012,,,,,,0|i0k8e7:,116177,,,,,,,,"08/Jul/12 10:21;svenmeier;When wicket-ajax-jquery calls jQuery.ajax(), it passes the serialized field as the settings' data. But since the choice is not actually a form component, data is empty.

Since data is empty, jQuery doesn't set the default content-type (would be application/x-www-form-urlencoded):

	if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
		jqXHR.setRequestHeader( ""Content-Type"", s.contentType );
	}

settings.data *is* changed in beforeSend() via AjaxFormChoiceComponentUpdatingBehavior's attrs.dep (dynamic extra parameters), but this is too late for the content-type.

Without ""application/x-www-form-urlencoded"" contentType, Wicket doesn't get hold on the post parameters via request#getParameter().

I've fixed the problem by using a GET instead of a POST. I'm not sure whether it would be better to evaluate attrs.dep *before* invoking jQuery's ajax() though.","08/Jul/12 12:16;svenmeier;switched from post to get, since without data jQuery will not set contentType","09/Jul/12 12:06;mgrigorov;I reverted to use POST method again for FormChoiceComponentUpdatingBehavior.
If POST data is added dynamically then set the content type to jqXHR manually.

Dynamic extra parameters are added in #beforeSend() since WICKET-4606 as an optimization to not calculate them if a precondition disallows the Ajax call.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlRenderer / Problem with rendering of relative URLs on error page,WICKET-4634,12596576,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mrubezhanskyy,mrubezhanskyy,02/Jul/12 08:47,02/Jul/12 12:11,13/Mar/19 23:17,02/Jul/12 12:11,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"There is some resource on the error page (NotFoundErrorPage), in my example (attached to this ticket) it is an image. When the page is called directly using mounted page name, the image is shown correctly.

The page is mapped in web.xml as an 404 – error page and could be invoked indirectly, when the customer types some wrong URL inside wicket filter. In this case, the image is not shown because parsed html it is linked with wrong URL.

I have debugged the problem until org.apache.wicket.request.UrlRenderer class renderRelativeUrl() method.  In this method the relative URL of the image is parsed incorrectly.

Important requirements to reproduce the bug:

Wicket filter is mapped to non-root url-pattern (in the case of root mapping the bug could not be reproduced):

(web.xml)

	<filter-mapping>
		<filter-name>wicket.bugreport</filter-name>
		<url-pattern>/testapp/*</url-pattern>
        <!-- Also added request and error dispatchers  -->
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
	</filter-mapping>

    <!-- Added mapping of 404 error page to the scope of ""testapplicaiton"" filter  -->
    <error-page>
   		<error-code>404</error-code>
   		<location>/testapp/error404</location>
   	</error-page>

Direct call of error page, image is shown:
http://localhost:8080/somelocation/testapp/error404

Call throw servlet error mapper, image is not shown:
http://localhost:8080/somelocation/testapp/blablabla/hugo


Example is attached!

",ubuntu 12.04 / tomcat 6 / jetty 7.5,,,,,,,,,,,,,,,,,,,,,02/Jul/12 08:50;mrubezhanskyy;wicket-bugreport.tar.gz;https://issues.apache.org/jira/secure/attachment/12534188/wicket-bugreport.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257736,,,Mon Jul 02 08:50:36 UTC 2012,,,,,,0|i0k8ev:,116180,,,,,,,,02/Jul/12 08:50;mrubezhanskyy;simple project to reproduce the ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BufferedWebResponse fails to add/clear cookie in redirect,WICKET-4358,12539719,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mcallan,mcallan,25/Jan/12 07:00,30/Jun/12 12:01,13/Mar/19 23:17,28/Jun/12 09:40,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,1,cookie,redirect,,,,,"bufferedWebResponse.addCookie( cookie );

That fails under certain conditions: (1) when called on the last of three 302 redirects during OpenID login; and (2) on single redirect immediately after container startup, though it later recovers.  Failure confirmed in Firebug; no cookies sent in any of the response headers.  My workaround is to bypass the buffered response.  This works:

((HttpServletResponse)bufferedWebResponse.getContainerResponse()).addCookie( cookie );
",Firefox 9,,,,,,,,,,,,,,,,,,,,,28/Jun/12 09:14;mgrigorov;WICKET-4358.patch;https://issues.apache.org/jira/secure/attachment/12533792/WICKET-4358.patch,09/Jun/12 04:42;berniegp;wicket-4358.zip;https://issues.apache.org/jira/secure/attachment/12531502/wicket-4358.zip,01/Feb/12 23:25;mcallan;wicket-bug-4358.tar.bz2;https://issues.apache.org/jira/secure/attachment/12512866/wicket-bug-4358.tar.bz2,,,,,,3.0,,,,,,,,,,,,,,,,,,,2012-01-25 07:16:35.942,,,no_permission,,,,,,,,,,,225222,,,Sat Jun 30 12:01:01 UTC 2012,,,,,,0|i0k8tb:,116245,,,,,,,,"25/Jan/12 07:16;mgrigorov;How do you make the redirect ?
Can you provide a quickstart application please.","26/Jan/12 04:08;mcallan;The following is not the only failure path I encountered.  There's a simpler one involving a single redirect after a container restart.  But I haven't investigated it much because it's not a real problem for my app.  This is the path I was looking at most closely:

Redirect (1) is by RequestCycle#scheduleRequestHandlerAfterCurrent.  See page WP_Login, line 768:
http://zelea.com/var/db/repo/votorola-wic-1.5/file/1618244d61ee/votorola/a/web/wic/authen/WP_Login.java#l768

Redirect (2) is by the OpenID provider.  In my test case, the provider is https://pip.verisignlabs.com/.  Their server redirects the client to page WP_OpenIDReturn, which then retrieves the previous instance of WP_Login from the session and calls into it from line 170: http://zelea.com/var/db/repo/votorola-wic-1.5/file/1618244d61ee/votorola/a/web/wic/authen/WP_OpenIDReturn.java#l170

Redirect (3) is by RequestCycle#setResponsePage(Class,PageParameters).  See page WP_Login, line 124: http://zelea.com/var/db/repo/votorola-wic-1.5/file/1618244d61ee/votorola/a/web/wic/authen/WP_Login.java#l124

The cookies are set immediately after, beginning at line 156: http://zelea.com/var/db/repo/votorola-wic-1.5/file/1618244d61ee/votorola/a/web/wic/authen/WP_Login.java#l156

The cookie setting code is here.  Without the workaround described here, it fails:
http://zelea.com/var/db/repo/votorola-wic-1.5/file/1618244d61ee/votorola/g/web/wic/WebResponseX.java#l23

I hope this is enough to trace the fault.  If you still need a quickstart, I'll try to find time to install Maven and create one.
","27/Jan/12 13:44;mgrigorov;I don't have time to debug your code by just reading it ... :-/
I suspect that you use some version of ResetResponseException (like RestartResponseException) that resets the WebResponse and clears the cookies.
Add a breakpoint at org.apache.wicket.protocol.http.BufferedWebResponse#reset() and see what happens.","31/Jan/12 13:04;mcallan;I don't think so, but that breakpoint IS triggered twice.  Firebug says the first break holds up the response to the initial request (form POST), but I guess that one is uninteresting.  The second break holds up the response to the third request (a GET) which is the one in which the cookies are supposed to be set.  The cookies are not set.  The break occurs after the response page is fully constructed.  The constructor runs to completion and throws no exceptions.  Here's the stack trace at the breakpoint:

[1] org.apache.wicket.protocol.http.BufferedWebResponse.reset (BufferedWebResponse.java:412)
[2] org.apache.wicket.protocol.http.HeaderBufferingWebResponse.flush(HeaderBufferingWebResponse.java:90)
[3] org.apache.wicket.protocol.http.WicketFilter.processRequest (WicketFilter.java:172)
[4] org.apache.wicket.protocol.http.WicketFilter.doFilter (WicketFilter.java:218)
[5] org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (null)
[6] org.apache.catalina.core.ApplicationFilterChain.doFilter (null)
[7] org.apache.catalina.core.StandardWrapperValve.invoke (null)
[8] org.apache.catalina.core.StandardContextValve.invoke (null)
[9] org.apache.catalina.valves.RequestFilterValve.process (null)
[10] org.apache.catalina.valves.RemoteAddrValve.invoke (null)
[11] org.apache.catalina.core.StandardHostValve.invoke (null)
[12] org.apache.catalina.valves.ErrorReportValve.invoke (null)
[13] org.apache.catalina.core.StandardEngineValve.invoke (null)
[14] org.apache.catalina.connector.CoyoteAdapter.service (null)
[15] org.apache.coyote.http11.Http11Processor.process (null)
[16] org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process (null)
[17] org.apache.tomcat.util.net.JIoEndpoint$Worker.run (null)
[18] java.lang.Thread.run (Thread.java:722)

But the breakpoint is NOT triggered and the cookies ARE set if I remove the call to RequestCycle.setResponsePage() by commenting out line 124: http://zelea.com/var/db/repo/votorola-wic-1.5/file/1618244d61ee/votorola/a/web/wic/authen/WP_Login.java#l124

Hope this helps.  If it's not enough, then I'll try to find time to create a quickstart.
","31/Jan/12 13:23;mgrigorov;The response is flushed for every response... I.e. this stack is normal.
There must be another one that resets the response and starts writing new headers and content in it.

Please attach a quickstart.","01/Feb/12 23:25;mcallan;Quickstart attached.  Tested with JDK 1.6 and 1.7, Firefox 9.  Instructions:

(1) Build and run the quickstart.

(2) Load the home page: http://localhost:8080/wicket-bug-4358/

(3) Click on the login link at top left.

(4) Login with your OpenID.  After 3 redirects you land back on the home page.  Verify that the
following localhost cookies ARE set on the third redirect: vo_loginPersistKey,
vo_loginPersistUserEmail.

(5) Open votorola.g.web.wic.WebResponseX in your editor.

(6) Edit addCookie().  Comment out the workaround (B) and uncomment the call to BufferedWebResponse (A).

(7) Clear the two cookies from your browser.

(8) Rebuild and retest (1-4).  This time the cookies are NOT set.
","09/Feb/12 15:13;mgrigorov;Sorry, your quickstart is too complicated and takes me too much time to analyze what you are doing.
If you can reproduce it with less code (Wicket quickstart + what is needed to reproduce) then I'll take a look again. Otherwise I'll leave it to someone else to debug this application. ","09/Feb/12 19:18;mcallan;Unfortunately OpenID login is complicated by lots of redirects and that kind of complexity appears to be essential to the bug.  The response to the third and final 302 redirect (which you can see in Firebug) is supposed to have two cookies.  They are added on lines 129 and 133 of votorola.a.web.wic.authen.WP_Login.  The redirect itself is invoked on line 102.

Are you able to confirm that it works with the workaround and fails without it?  If so, then it should be easy for whoever you assign to trace the fault in BufferedWebResponse.  HttpServletResponse handles the cookies OK, but BufferedWebResponse is dropping them.

A possible clue: when the cookies are passed to BufferedWebResponse there is a mysterious EXTRA call to BufferedWebResponse.reset().  See my reply of Jan 31.  This call does NOT occur when the workaround is in place, i.e. when the cookies are passed directly to HttpServletResponse.  Maybe it's normal for the buffer to be flushed if cookies are added and not otherwise, but I think the problem is that it's being flushed before the cookies are successfully handed to HttpServletResponse.  Else where did the cookies go?
","09/Jun/12 04:42;berniegp;I stumbled upon what I think is the same bug and built a very simple quickstart reproducing the issue with Wicket 1.5.7.

Steps to reproduce:
1-Browse to localhost:8080
2-The label should read ""Cookie is NOT set""; if not, click on ""clear cookie""
3-Click on ""Set cookie via link handler""
4-Click on ""Set cookie""
5-The label should now read ""Cookie is set""
6-Click on ""clear cookie""
7-Clich on ""Set cookie via bookmarkable link (no prompt)""
8-The label should read ""Cookie is NOT set""

Both ""cookie-setting"" pages use the same code:
		HomePage.setCookie(HomePage.COOKIE_KEY, ""setResponsePage"");
		setResponsePage(HomePage.class);

However, only the first page works. The case that works is when setResponsePage is called from within a ListenerInterfaceRequestHandler. The case that doesn't is when setResponsePage is called from within a RenderPageRequestHandler.

The problem seems to be around BufferedWebResponse#renderPage(Url targetUrl, RequestCycle requestCycle) line 107. ",09/Jun/12 04:42;berniegp;Quickstart,28/Jun/12 09:14;mgrigorov;Here is a possible patch.,"28/Jun/12 09:40;mgrigorov;Fix for the Bertrand's quickstart is applied.
Michael Allan's code is too hard to follow and debug. 
@Michael: please verify that the fix solves your problem.",29/Jun/12 17:04;berniegp;I confirm that it works with the patch,"30/Jun/12 12:01;mcallan;Believe it or not, I can no longer duplicate the fault unless I apply the patch.  I can no longer duplicate it in my original quickstart (same jars, same Tomcat), nor in my current code.  But if I apply the patch, then it reappears in my current code (but not in the quickstart).  This is so strange, that I actually opened up the jars to double check.  With my current Wicket (1.5.4) or with a newly rebuilt 1.5.4 from your repo (class files identical) it's OK.  With a patched 1.5.4 (class file different), it reverts to the original behaviour.  The original workaround continues to work in this case.

Please don't spend more time on this.  If I'm the only one affected, then the workaround will suffice for me.
",,,,,,,,,,,,,,,,,,,,,,,,,
NumberTextField does not have default minimum and maximum,WICKET-4584,12559083,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,apierzch,apierzch,03/Jun/12 12:01,27/Jun/12 09:23,13/Mar/19 23:17,27/Jun/12 09:23,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"Javadoc of NumberTextField says:

A TextField for HTML5 <input> with type number.
Automatically validates the input against the configured min and max attributes. If any of them is null then Double.MIN_VALUE and Double.MAX_VALUE are used respectfully. Note: FormComponent.setType(Class) must be called explicitly!

It is not true. We have constructor which sets them to null:

	public NumberTextField(String id, IModel<N> model, Class<N> type)
	{
		super(id, model, type);

		validator = null;
		minimum = null;
		maximum = null;
	}

and if I don't set them manually, in case of error nulls go to RangeValidator (line 84-85:

			error.setVariable(""minimum"", min);
			error.setVariable(""maximum"", max);

causing:
java.lang.IllegalArgumentException: Argument 'value' may not be null.

Nevertheless, I think reflection API should be used to determine if given Number has MAX_VALUE/MIN_VALUE and this one should be used. In other case I think it is ok to use Double.MAX_VALUE/MIN_VALUE.

or maybe you have another ideas?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257751,,,2012-06-03 12:01:42.0,,,,,,0|i0k8i7:,116195,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
onError call order doesn't match onSubmit,WICKET-4616,12595249,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,cmenzel,cmenzel,cmenzel,20/Jun/12 10:56,26/Jun/12 16:22,13/Mar/19 23:17,26/Jun/12 16:22,1.5.7,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket,,,,,,,0,,,,,,,onError in Forms and Buttons should be called in the same order as onSubmit (i.e. post-order).,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,253140,,,Tue Jun 26 16:22:57 UTC 2012,,,,,,0|i0dbtj:,75844,,,,,,,,"24/Jun/12 00:38;cmenzel;Fixed in 6.0.

Do we want this fixed in 1.5 too? I'm tending toward yes. It's not an API change (we never specified the traversal order anywhere), it is a slight behavioral change that makes things more consistent. It didn't even break any tests! Though of course I added one to test the traversal order now ;-)",26/Jun/12 16:22;cmenzel;Fixed in 1.5 as well.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxButton / AjaxFormSubmitBehavior behaviour in wicket 1.5,WICKET-4575,12558375,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,cmenzel,jamesmcintosh,jamesmcintosh,29/May/12 01:46,26/Jun/12 16:21,13/Mar/19 23:17,26/Jun/12 16:21,1.5.0,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"I've just been going through an upgrade form wicket 1.4 to 1.5 and noticed a big change in the AjaxFormSubmitBehavior.onEvent(AjaxRequestTarget).

In 1.4 the code would submit the From.onSubmit() first and then fire the AjaxFormSubmitBehavior.onSubmit() event, now this behaviour is reversed to process the AjaxFormSubmitBehavior first.

I have lots of examples of requiring the AjaxButton to perform ""on after submit"" ajax events, e.g. Ajax Wizard navigation, closing modals after form submit. These ajax events change the component heirachy so that the form is no longer present, thus never gets submitted e.g. Next button. I have no particular cases where I would want the AjaxButton onSubmit called before the form submit, I'm wondering if there are many at all.

I'm not sure of the implications of changing the AjaxFormSubmitBehavior logic for other components which use it so I will make a suggestion to modify the AjaxFormSubmitBehaviour's onEvent and onSubmit in the AjaxButton to emulate the original behaviour:

new AjaxFormSubmitBehavior(form, ""onclick"") {

	boolean formSubmited;

	protected void onEvent(AjaxRequestTarget target) {
		formSubmited = false;
		super.onEvent(target);
		if (formSubmited) {
			LegacyAjaxButton.this.onSubmit(target, LegacyAjaxButton.this.getForm());
		}
	}
	
	protected void onSubmit(AjaxRequestTarget target) {
		formSubmited = true;
		LegacyAjaxButton.this.onBeforeSubmit(target, LegacyAjaxButton.this.getForm());
 	}
 	
 	...
 	
}

and add an onBeforeSubmit method to the AjaxButton.

protected void onBeforeSubmit(AjaxRequestTarget target, Form<?> form) {		
}

The other possible solution would be to change the IFormSubmitter to have both an onAfterSubmit() and call it in Form.delegateSubmit().


Just as a side note, I've noticed some other chatter on mailing lists around this (see below) so thought I would raise it.

AjaxWizard issue:
http://www.mail-archive.com/users@wicket.apache.org/msg71273.html
AjaxButton issue:
http://comments.gmane.org/gmane.comp.java.wicket.user/96947",,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-03 04:49:00.546,,,no_permission,,,,,,,,,,,257754,,,Tue Jun 26 16:21:30 UTC 2012,,,,,,0|i0k8iv:,116198,,,,,,,,03/Jun/12 04:49;mgrigorov;The change in the order is caused by WICKET-1894.,"15/Jun/12 13:36;cmenzel;Both this and WICKET-1894 present valid use cases, so I think we need to support both. Ideally, each submit button should be able to choose whether it wants to run before or after Form#onSubmit.

In 6.0 this should be easy - I'm going to give IFormSubmitter an additional method #getSubmitOrder to return an enum value, either BEFORE_FORM or AFTER_FORM. The existing buttons can default to return BEFORE_FORM as 1.5 is doing now. Form#delegateSubmit can then simply switch the order around depending on this value.

This would be an API break for 1.5 though. What are good options to add this anyway? We could give 1.5 an additional Interface IOrderedFormSubmitter extends IFormSubmitter, and have all default implementations like AjaxFallbackButton etc implement it. In 6.0 it could be dropped again.

Opinions?","15/Jun/12 14:17;cmenzel;Okay, 6.0 was easy enough.

Any objections to adding a temporary IOrderedFormSubmitter interface in 1.5?","15/Jun/12 14:25;cmenzel;On second thought, having an onBeforeFormSubmit and an onAfterFormSubmit in ISubmittingComponent sounds good too, instead of opting for just one of the two with the enum solution. The drawback is that the old onSubmit method wouldn't make any sense then anymore and should be removed, thus increasing the migration work for all users.

Again, opinions? Which of these is better:
- put the enum-based solution (BEFORE_FORM, AFTER_FORM, currently in master) in 1.5 too?
- drop the enum and change onSubmit to onBeforeFormSubmit and onAfterFormSubmit in 6, and add onAfterFormSubmit in 1.5?",16/Jun/12 23:30;jamesmcintosh;The second option (adding methods without enum) is definitely more elegant.,"18/Jun/12 09:43;cmenzel;Hm. I guess we could deprecate IFormSubmitter#onSubmit in both 1.5 and 6.0, and add onBeforeFormSubmit and onAfterFormSubmit (in IFS for 6.0 and in a temp interface in 1.5). For the time being, #onSubmit could be called together with onBeforeFormSubmit (which is what is happening today).","19/Jun/12 14:28;cmenzel;I have an implementation for both 6.0 and 1.5.

In 1.5 I have deprecated onSubmit and added onSubmitBeforeForm and onSubmitAfterForm in an extension interface.

In 6.0 I have moved onSubmit to onSubmitBeforeForm and added onSubmitAfterForm.

It works, the two methods seem intuitive, so that is nice. The implementation is as simple as I could get it. Still, after talking with martin-g I didn't push it out to the main branches directly, but set up two sandbox branches instead so others can have a look. See sandbox/formsubmit-beforeafter-1.5 and sandbox/formsubmit-beforeafter-6.0.

It's ready to be merged, I'd just like some more comments.","19/Jun/12 14:32;mgrigorov;Copy my comments from dev@ mailing list:

Looks OK to me.

Just a few minor things:

1) I prefer on(Before|After)FormSubmit than
onSubmit(Before|After)Form. Sounds more clear to me

2) I see you removed 'abstract' from the methods.
I agree that it will be worse if I have to override both new methods
for every Link/Button I use. But I also remember that in earlier
versions of Wicket #onSubmit() was abstract and #onError() wasn't and
some people complained about this. I think #onError() became abstract
for 1.5.x.
We just need to decide which way to go here.","19/Jun/12 14:41;cmenzel;> 1) I prefer on(Before|After)FormSubmit than
> onSubmit(Before|After)Form. Sounds more clear to me  

I had those first, but it seemed odd - ""onBeforeFormSubmit"" sounds like
it happens before the submit, like onBeforeRender happens before render.
onSubmitBeforeForm is clearly a part of the submit, just invoked before
the form is called.

> 2) I see you removed 'abstract' from the methods.
> I agree that it will be worse if I have to override both new methods
> for every Link/Button I use. But I also remember that in earlier
> versions of Wicket #onSubmit() was abstract and #onError() wasn't and
> some people complained about this. I think #onError() became abstract
> for 1.5.x.
> We just need to decide which way to go here.  

With the two new methods I don't think any of them should be abstract.
Almost all buttons will only need one of them. In our application the
abstract onError added a lot of noise that we didn't need, and this
would triple it.",22/Jun/12 13:22;cmenzel;Commited the patches to both 1.5 and 6.0.,"26/Jun/12 02:12;pedrosans;It's natural to expect that IFormSubmitter#onSubmit will be invoked before the form's one. IMO a better API would be:
 
public interface IFormSubmitter{
	void onSubmit();  <-- keeps the current signature
	void onAfterSubmit(); <-- adding the exception case. Also onAfterFormSubmit sounds a pleonasm
}","26/Jun/12 15:36;cmenzel;I had initially wanted the symmetry of onAfter/onBefore, and the onAfter*Form*Submit part to make it clear that it's not actually ""after submit"" but ""after Form#onSubmit"".

Howevery, I now think you're correct. 1.5 has firmly established that IFS#onSubmit is called before Form#onSubmit. So we'll simply add #onAfterSubmit now.",26/Jun/12 16:21;cmenzel;Fixed again in 1.5 and 6.0.,,,,,,,,,,,,,,,,,,,,,,,,,,
"ResourceStreamLocator does a hard-coded resource lookup in ""META-INF/resources""",WICKET-4618,12595252,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,cmenzel,cmenzel,cmenzel,20/Jun/12 11:19,22/Jun/12 13:25,13/Mar/19 23:17,22/Jun/12 13:24,1.5.7,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,,,,,,,,,,0,,,,,,,"ResourceStreamLocator currently does a hard-coded resource lookup in ""META-INF/resources"". In deployment, that is not a big problem, since its results are cached. In testing however, this single line is nearly doubling our wallclock time.

I agree that the lookup is necessary for Servlet 3.0 support, but it should not be just inelegantly hardcoded like that. Our application doesn't use it, yet our tests are hit hard. I profiled one of the worse testcases (roughly 50-60 seconds in 1.4, now 110-120(!)) - we spent over 70% of the time in ResourceStreamLocator#getResourceStream. I tried commenting out just that one call looking for ""META-INF/resources"" and the test dropped back down to 60 seconds.

So I'd really like this to be configurable, so I can just get rid of it in test configurations.

WICKET-4617 will take care of it all in 6.0, because it will introduce a ResourceFinder/ResourcePath for it, which will make it easily configurable.

For 1.5 I propose giving ResourceStreamLocator itself a list of paths to try (by default """" and ""META-INF/resources"") instead of hard-coding.

Objections?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-20 11:25:37.268,,,no_permission,,,,,,,,,,,253138,,,Fri Jun 22 13:25:10 UTC 2012,,,,,,0|i0dbt3:,75842,,,,,,,,20/Jun/12 11:25;mgrigorov;Sounds good!,22/Jun/12 13:24;cmenzel;Fixed in 1.5.x. New method ResourceStreamLocator#getClasspathLocationPrefixes().,"22/Jun/12 13:25;cmenzel;Not yet fixed in 6.0, but that will be taken care of by WICKET-4617.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester.assertRedirectUrl always fails because it always thinks the redirect was null,WICKET-4610,12595032,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,trejkaz,trejkaz,18/Jun/12 23:39,21/Jun/12 09:43,13/Mar/19 23:17,21/Jun/12 09:43,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"I have a page which always redirects.

When I write a test for this page, tester.assertRedirectUrl(...) always fails with the assertion failure showing that the redirect URL was null.

The page does redirect when running the application for real and I have stepped through in the debugger when running the test and it goes all the way to the HttpServletResponse.sendRedirect call.

However, in the same debugging session, tester.getLastResponse().getRedirectLocation() == null

Cut-down example follows.


public class AlwaysRedirectPage extends WebPage
{
    public AlwaysRedirectPage()
    {
        // redirects to another web server on the same computer
        throw new RedirectToUrlException(""http://localhost:4333/"");
    }
}

public class TestAlwaysRedirectPage
{
    @Test
    public void test()
    {
        WicketTester tester = new WicketTester();
        tester.startPage(AlwaysRedirectPage.class);
        tester.assertRedirectUrl(""http://localhost:4333/"");
    }
}
",,,,,,,,,,,,,,,,,,,,,,20/Jun/12 08:33;bitstorm;WICKET-4610.diff;https://issues.apache.org/jira/secure/attachment/12532671/WICKET-4610.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-06-19 16:14:09.159,,,no_permission,,,,,,,,,,,257742,,,Thu Jun 21 09:43:33 UTC 2012,,,,,,0|i0k8g7:,116186,,,,,,,,"18/Jun/12 23:42;trejkaz;Additionally, tester.getLastResponse().getStatus() == 200 instead of 302. :(
","19/Jun/12 16:14;bitstorm;Method isExternalRedirect of BaseWicketTester does not consider the URL's port comparing the original url and the new one, hence it considers http://localhost:4333/ an internal url. See attached patch.

  ","20/Jun/12 08:33;bitstorm;Regarding to the second issue related to response status, I've modified method sendRedirect of class MockHttpServletResponse in order to change its status to 302 when it is invoked. I've updated the patch file.","21/Jun/12 09:43;mgrigorov;Thanks, Andrea!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jsessionid is not added to resources if cookies are disabled by the server,WICKET-4550,12554659,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,miggel,miggel,10/May/12 09:16,18/Jun/12 08:42,13/Mar/19 23:17,16/May/12 07:58,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,wicket,,,,,,,1,,,,,,,"When I configure the container (either Jetty or Tomcat) to not support cookies, I expect the jsessionid to be added to all resource links in the page. However, with Wicket 1.5.5 this isn't the case, i.e. all URLs are lacking the jsessionid, both in development and deployment mode.

Example IS:
<script type=""text/javascript"" src=""wicket/resource/org.apache.wicket.markup.html.WicketEventReference/wicket-event-ver-1331911540000.js""></script>

Example SHOULD:
<script type=""text/javascript"" src=""wicket/resource/org.apache.wicket.markup.html.WicketEventReference/wicket-event-ver-1331911540000.js;jsessionid=${something}""></script>

This creates a new session for each and every resource in the page, which is an undesirable behavior. I have found a few issues regarding this topic, e.g. WICKET-4334 and WICKET-4312, but none of them could give me a clue about why it doesn't work the way I expect it. In Wicket 1.4.x the jsessionid was added to all resource links, so everything worked fine and the current session was reused.

I created a quickstart do demonstrate the behavior - please see the attached file. The file jetty-web.xml tells Jetty to not support cookies, so mvn jetty:run can be run without any further configuration.

By the way, I found a suggestion to use a custom IResourceCachingStrategy to append the jsessionid (or whatever) to URLs of resources in the archive of the mailinglist. Unfortunately, this doesn't work because the URL is encoded afterwards and the ; is turned into %3B.",,,,,,,,,,,,,,,,,,,,,,15/May/12 15:33;mgrigorov;WICKET-4550.patch;https://issues.apache.org/jira/secure/attachment/12527360/WICKET-4550.patch,10/May/12 09:18;miggel;jsessionid-quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12526323/jsessionid-quickstart.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-05-10 09:20:54.383,,,no_permission,,,,,,,,,,,238909,,,Tue May 15 15:35:11 UTC 2012,,,,,,0|i0k8l3:,116208,,,,,,,,"10/May/12 09:18;miggel;Quickstart to show the behavior described above. Please execute mvn verify jetty:run, open the application in the browser and look at the <script> tages in the source of the page.","10/May/12 09:20;mgrigorov;The reason is explained in WICKET-4334 - static resources do not need sessionid.
Only temporary Wicket sessions are created which are discarded at the end of the request. No http sessions are created.","10/May/12 09:47;miggel;I still can't exactly understand the reason for this.

In our scenario, we have two Tomcat instances running on the same machine. One is considered as active, i.e. new sessions are created on this instance, the other is considered as passive, i.e. it only serves sessions which are already open until they expire. When we deploy a new version of our application we deploy it to the passive instance and then switch the configuration of active and passive.

Let's consider the following scenario:
* Instance A is active, B is passive.
* The application contains a static resource something.js, which has the hash ABC appended as its version.
* something.js is changed in a new version of the application, so its new hash is now 123.
* Then, this new version is deployed to B and B is then made the active instance.

The page served by A now contains a resource link to something-ver-ABC.js. As the jsessionid is lacking, this request will be redirected to the active Tomcat instance, which is B. But B doesn't know the version ABC of something.js, it only knows something-ver-123.js. The result is a 404.

Or am I missing something here?","10/May/12 12:45;miggel;As (bad) luck would have it we just tripped over another error caused by this bug :-(

Our Tomcats are clustered, i.e. there are three of them behind a load balancer. The sessions are sticky, so that a user stays on the same Tomcat throughout his session. Now we ran into this constellation:

* A new version of our application has been freshly deployed to the three Tomcats T1, T2 and T3.
* A page mounted at /somePage (or a component used in this page) mounts an image to static URL /img/something.png on instantiation, i.e. when the page is accessed for the first time.
* A user logs into a new session on Tomcat T1 and accesses the page /somePage.
* The resource link to /img/something.png served by T1 on page /somePage doesn't contain a jsessionid.

This will lead to the fact that the new session for /img/something.png, be it temporary or not, will be created on either of the three Tomcats. However, /somePage has only been accessed on T1, which means that both T2 and T3 have not yet mounted the image on the given path and will thus answer with a 404. Only when /somePage has been accessed on all three Tomcats the image will always be delivered. Before that, there is always a chance of 2/3 or 1/3 that you'll get a 404.","10/May/12 22:44;chrisc;After 4334 was fixed we confirmed that Wicket was serving static resources without creating a new session - and this is perfect. Static resources should never need a session in order to serve them (definition of static - unchanging regardless of session).

If you are seeing a session being created now then maybe your code is creating one somehow or something has changed in Wicket since the release we tested that now does create a session even though it is not needed.

From memory the problem in the Wicket code was a call to ""get session"" style of method that really was only checking if there was a session, it didn't really need a session, but it in fact created one in the process if there wasn't one.

Check that you don't have any other filters in the chain in web.xml that might be creating a session. We use exPOJO for Dependency Injection and we need to tell it to ignore requests for wicket resources that have the path wicket/resource like this:

	<filter>
		<filter-name>exPOJO Filter</filter-name>
		<filter-class>com.sas.framework.expojo.servlet.ExpojoServletFilter</filter-class>
		<!-- exPOJO uses 'startsWith' method to match, not any regular expression matching so 
			don't use blah/* here -->
		<init-param>
			<param-name>ignorePaths</param-name>
			<param-value>wicket/resource/,robots.txt,index.html,static/,css/,images/,swf/,fckeditor</param-value>
		</init-param>
	</filter>
","11/May/12 07:39;mgrigorov;The problem is not that a Wicket Session is created but that there is no jsessionid in the url for static resources and thus the routing doesn't work.
The problem can be solved by decorating the url of the resources. This way you can transform some/resource.ext to some/resource-server1.ext or some/resource.ext;server=1 and use this as a condition.

I'd like to not revert 4334 because as its description says: the first request for a page comes with jsessionid in all urls for static resources and then the web container realizes that cookies are supported and removes the jsessionid for the next requests and this leads to double download of all static resources. ","15/May/12 14:31;mgrigorov;Using custom IResourceCachingStrategy is not an option because adding ';jsessionid=...' is later url encoded and the ';' is being lost.
Using custom request parameter is an option only if you have control on the load balancers. Most of the time the developers have no such control.

I tried the brutal way: make a quickstart that enables the encoding of the jsessionid in the url even for static resources by either extending classes or copy/paste them but I faced several problems:
1) org.apache.wicket.request.cycle.RequestCycle#renderUrl(Url, IRequestHandler) decides whether to pass the url to HttpServletResponse#encodeURL()
By providing my own RequestCycle impl that overrides public CharSequence urlFor(IRequestHandler handler) I partially solved the problem, but 
#urlFor(Class<C> pageClass, PageParameters parameters) and #urlFor(ResourceReference reference, PageParameters params) are final and it is not possible to override them.

2) HeaderResponse#internalRenderXyzResourceReference() also strips the jsessionid from the url. 
The only way I see here is to copy/paste HeaderResponse and setup it by using IHeaderResponseDecorator (this works)


After all these hacks I think it will be much easier to introduce a new setting in IResourceSettings with which the application will be able to enable encoding of jsessionid even for the static resources. By default its value will be 'do-not-encode-for-static-resources'.

A patch will come soon.","15/May/12 15:35;miggel;That's perfect, thank you :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
non-relative redirects do not work properly,WICKET-4588,12559373,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aschmidt,aschmidt,05/Jun/12 12:46,15/Jun/12 08:55,13/Mar/19 23:17,15/Jun/12 08:55,1.5.7,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"wicket-ajax-jquery.js
in  processAjaxResponse:

// support/check for non-relative redirectUrl like as provided and needed in a portlet context
if (redirectUrl.charAt(0) === ('/') || redirectUrl.match(""^http://"") === ""http://"" || redirectUrl.match(""^https://"") === ""https://"") {

==>  match function returns an array !!

absolute redirect urls like e.g.  'http://www.google.de'  are not recognized
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-15 08:55:54.73,,,no_permission,,,,,,,,,,,257750,,,Fri Jun 15 08:55:54 UTC 2012,,,,,,0|i0k8hz:,116194,,,,,,,,"15/Jun/12 08:55;mgrigorov;Fixed!
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug in Duration.toString(Locale locale),WICKET-4597,12559831,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mfrankerl,mfrankerl,08/Jun/12 11:07,15/Jun/12 08:18,13/Mar/19 23:17,15/Jun/12 08:18,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,Duration.toString(Locale locale) misses milliseconds in line 529,,,,,,,,,,,,,,,,,,,,,,10/Jun/12 13:31;bitstorm;WICKET4597.patch;https://issues.apache.org/jira/secure/attachment/12531595/WICKET4597.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-06-09 14:21:15.405,,,no_permission,,,,,,,,,,,257745,,,Fri Jun 15 08:18:43 UTC 2012,,,,,,0|i0k8gv:,116189,,,,,,,,09/Jun/12 14:21;bitstorm;In that line we should replace seconds() with getMilliseconds(). The attached patch contains a test method for Duration.toString(Locale locale),"15/Jun/12 08:18;mgrigorov;Thank you, Andrea!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InterceptData never cleared from session after continueToOriginalDestination is called,WICKET-4500,12551041,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,chrisc,chrisc,16/Apr/12 11:30,12/Jun/12 08:05,13/Mar/19 23:17,17/Apr/12 13:29,1.5.5,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,wicket,,,,,,"We have a scenario where single person can log in under different accounts on the same website. Different user types will typically go to different page types.

A single person using different accounts is not normally required but we are demonstrating to corporate clients how the system will be used by different user types. In the demonstration we need to log in as an 'admin' user to demo the admin aspects and then we need to log in as a 'standard' user to demonstrate the aspects that will apply to a standard user.

The admin page uses RedirectToInterceptException to authentication page if no one is logged in.
 
The standard page uses the home page to authenticate and throws new RestartResponseException(new AuthenticatePage(parameters)) if no one is authenticated (i.e. no intercept)

After authentication we either continue or go to the 'default' page for a standard user.

 

Code looks like this:

 

                        If ( authenicationSucceeded )

                        {

                                    if ( !continueToOriginalDestination() )

                                    {

                                                // Was not redirected to this authentication page so go to default destination for the home page

                                                // Find default page for standard users and go to that page

                                    }

                        }

 

What we find is that after an admin log on (with intercept/continue sequence) a subsequent standard user log on will not execute the above body because continueToOriginalDestination returns 'true' even though this page was not an intercept page. 

It looks like after an intercept/continue has occurred it does not clear the 'original destination' attribute and so a subsequent call to continueToOriginalDestination will return true when it should really return false.

The quickstarts demonstrates the problem:

Point browser to localhost/app/landing

Click 'logon'
Click 'Click to continue' - each time you click continueToOriginalDestination is called which successfully does a continue as evidenced by the page counter incrementing. 

If running in a debugger set a break point on RestartResponseAtInterceptPageException.InterceptData.clear().
Restart the app and then click on 'logon' and you will never see the clear method executed.

","Tomcat 6.0.29
Linux or Windows (happens on both)",,,,,,,,,,,,,,,,,,,,,16/Apr/12 11:30;chrisc;continueDestinationNotCleared.zip;https://issues.apache.org/jira/secure/attachment/12522763/continueDestinationNotCleared.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-06-12 07:17:55.669,,,no_permission,,,,,,,,,,,235905,,,Tue Jun 12 08:05:06 UTC 2012,,,,,,0|i0k8pz:,116230,,,,,,,,"16/Apr/12 22:58;chrisc;I forgot to add this comment:

The problem occurs even with only a single user logon but it doesn't usually get noticed in that scenario but I can think of situations in which it could cause a problem. The InterceptData.clear never gets called in the simple process of the Admin user going to admin page getting redirected and then 'continued' after authentication.

What is the mechanism by which the clear method gets called anyway? A static IRequestMapper is created but I can't see where it's ever referenced or used anywhere else in the code. Should it be mounted somewhere for it to work properly?",16/Apr/12 23:50;chrisc;I thought there might be a workaround for this problem while waiting for the fix but the InterceptData.clear method is not accessible as it's an inner class. I have no way of explicitly clearing the InterceptData so it's a bit of a show stopper for me at the moment.,"12/Jun/12 07:07;chrisc;The above fix is great but we've run into another problem. If an admin user attempts to go to a restricted page and gets redirected via a RedirectToInterceptException but then decides not to log on but then goes to the normal home page authentication and then successfully logs on as a standard user that authentication will redirect to where the admin initially wanted to go to - because they never authenticated as admin continueToOriginalDestination was never called and so Wicket still thinks that when continueToOriginalDestination is called after the standard user's authentication that it needs to redirect to the original admin page... fun!

Would it be possible to introduce an explicit 'clearRedirect' method so that when the home page does a  RestartResponseException to redirect to the standard user authentication page it can, at the same time, do a 'clearRedirect' so that a subsequent call to continueToOriginalDestination does not attempt to go to the admin page.

I can't remove the continueToOriginalDestination from the standard user authentication page because it is still required to perform a continue when it was reached by a RedirectToIntercepException from restricted pages other than the home page.","12/Jun/12 07:17;mgrigorov;Hi,

Please copy the comment above to a new ticket so we can track it separately.

Don't you use the same approach to redirect for both types of users ? 
I mean if you use RestartResponseAtInterceptPageException in both cases then the second call should override the stored data from the first call and all should be fine.","12/Jun/12 08:05;chrisc;I want slightly different behavior for both:

The standard user's experience is very 'guided' and 'directed' by the system to avoid them ending up confused.

When a standard user goes to home page they actually see the authenticate page. After authentication, if there was no previous intercept exception the authenticate page can determine the most appropriate place to send the standard user. If we had used RestartResponseAtInterceptPageException from the home page to the authentication page then the standard user will always end up at the home page after continueToOriginalDestination.

The admin users are more tech savvy and so can request a particular url, get redirected to authenticate page if necessary, and then return to the page *they* desired.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax request attributes should be passed to the dynamic parameters,WICKET-4599,12560086,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,10/Jun/12 16:07,10/Jun/12 16:17,13/Mar/19 23:17,10/Jun/12 16:17,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket,,,,,,,0,,,,,,,Ajax Editable components doesn't work because 'attrs' is not passed to the generated JavaScript function for the dynamic extra parameters for the Ajax call.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257743,,,2012-06-10 16:07:03.0,,,,,,0|i0k8gf:,116187,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Choice is not rendered as selected on different instances semantically equal,WICKET-4353,12539599,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,newgro,newgro,24/Jan/12 11:50,04/Jun/12 20:57,13/Mar/19 23:17,24/May/12 06:01,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,,,wicket,,,,,,,1,DropDownChoice,,,,,,"With 1.5.4 there was a change in org.apache.wicket.markup.html.form.AbstractSingleSelectChoice.java
Sven stated in list that: ""Igor's commit statements says ""improved inconsistency handling in choice components"".
This change prevents IChoiceRenderer#getIdValue() being called with -1 as the index argument. "".
It is defenitly a comprehensible change. But the effect is (for me) quite heavy.
If you don't overwrite equals in selectable objects then two semantically equal instances will not be rendered as 
selected because of the different physical instances. But it worked in 1.5.3.","windows, jdk1.6",,,,,,,,,,,,,,,,,,,,,04/Jun/12 20:57;svenmeier;WICKET-4353-IChoiceRenderer-Without-Index.diff;https://issues.apache.org/jira/secure/attachment/12530856/WICKET-4353-IChoiceRenderer-Without-Index.diff,24/Jan/12 11:51;newgro;ddcbug.zip;https://issues.apache.org/jira/secure/attachment/12511659/ddcbug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-24 13:56:37.729,,,no_permission,,,,,,,,,,,225101,,,Mon Jun 04 20:57:39 UTC 2012,,,,,,0|i0k8tj:,116246,,,,,,,,24/Jan/12 11:51;newgro;Simple test for reproducing the behavior,"24/Jan/12 13:56;svenmeier;There are several solutions how to detect the selected choice:
1) use a custom ChoiceRenderer (no longer available with 1.5.4)
2) override AbstractSingleSelectChoice#getModelValue()
3) make sure the selected choice is the identical object contained in the choices list (e.g. via OpenSessionInView)

I think 1) was a nice and easy solution so far.

@Igor:
You've implemented a different solution in 92dec6995318444eb831c49b350a6b03b89e0962, utiliizing the choiceRenderer and #isSelected(). Why did you revert this change?
","24/Jan/12 16:17;ivaynberg;because it did not work when the index of the choice was used instead of an explicit id.

we should remove the option of using the index in ddcs and everything will work much better...","25/Jan/12 17:12;svenmeier;Ok, I understand now. We could change the ChoiceRenderer interface for Wicket 6, although it would be nice if a default implementation still would support index-based ids.

But for 1.5.x I'd prefer the previous behavior to be restored.",30/Jan/12 12:47;svenmeier;@Igor: What do you think? Can we remove the new check for 1.5.x?,"16/May/12 08:41;gad;I've found similar problem. 

It solves by just overriding the equals value in de options. But sometimes this is not easy. For me it happens that the code that goes into the dropdown is an autogenerated one with the XCF framework. It's the output of a Webservice and makes it difficult to use. 

I had to use a proxy class between dropdown and output. or override the getModelValue function, what is not a good idea. 

It should not use indexof. It should just compare choice renderer ids.","23/May/12 10:20;gad;Sorry I'm wrong. 

This problem cannot be solved by just overriding the equals function in the options. Since getIndexOf will not return the element if the memory address is not the same. 

I'm having big troubles with this. 

Someone can explain how this should work correctly?","24/May/12 06:01;svenmeier;I reverted the new index check. Otherwise it's not possible to utilize the renderer's id for semantic equality, which is a valid usecase.","04/Jun/12 20:57;svenmeier;I've tried out an IChoiceRenderer without index parameter, see diff.

Still supports index-based values for options (although slower), works out nicely for the Palette component *but* might still not be worth it.

@Igor WDYT?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ThreadContext does not properly remove the ThreadLocal from the current thread,WICKET-4574,12558117,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jesselong,jesselong,25/May/12 15:12,03/Jun/12 04:37,13/Mar/19 23:17,03/Jun/12 04:37,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"Actually, I only checked 6.0.0-beta2 and master, 6.0.0-beta2 is not in the drop down.

ThreadLocal.get() returns the current value, if one is set. If not, it creates a new value using the initialValue() method, AND (importantly) registers the ThreadLocal in the Thread's Map of ThreadLocals.

In order for the get(false) method to work as expected, we must actually call ThreadLocal.remove() after a ThreadLocal.get() that returned null.

Also, after the request was processed, we never properly remove the ThreadLocal from the Thread, we were simply setting it to the previous value, which was null most of the time. This is not enough. The ThreadLocal was still attached to the Thread, just the value it was storing was null.

Here's hoping that Jira is working again and I can attach a patch.

",,,,,,,,,,,,,,,,,,,,,,25/May/12 15:14;jesselong;threadContext.patch;https://issues.apache.org/jira/secure/attachment/12529733/threadContext.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-05-28 12:19:10.761,,,no_permission,,,,,,,,,,,257755,,,Mon May 28 12:19:10 UTC 2012,,,,,,0|i0k8j3:,116199,,,,,,,,25/May/12 15:14;jesselong;threadContext.patch against 6.0.0-beta2,"28/May/12 12:19;mgrigorov;The suggested fix is applied in master branch.
Will be applied in 1.5.x after releasing 1.5.7. The fix looks OK but I don't want to commit it just before the release.

-beta2 is not in the dropdown because it is not released yet. It will be there once the vote is closed. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AJAX autocomplete of wicket-examples not working,WICKET-4581,12558947,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jordeu,jordeu,01/Jun/12 12:51,03/Jun/12 03:36,13/Mar/19 23:17,03/Jun/12 03:36,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket-extensions,,,,,,,0,,,,,,,"The autocomplete is not working on wicket-6.0.0-beta2 on Firefox 12 and it was working on wicket-6.0.0-beta1.

I've traced and the problem started with this commit:
https://github.com/apache/wicket/commit/a1d5ef35b5167fffa2b7fb6ff718e72e2a29b431

A simple workaround is to revert this commit (git revert a1d5ef3) and rebuild wicket, and everything seems to work fine (at least on Firefox 12).
","Firefox 12, Linux",,,,,,,,,,,,WICKET-4569,,WICKET-4569,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-01 13:18:23.609,,,no_permission,,,,,,,,,,,257752,,,Fri Jun 01 13:26:40 UTC 2012,,,,,,0|i0k8if:,116196,,,,,,,,01/Jun/12 13:18;thomas.goetz;Might be a duplicate of WICKET-4569.,"01/Jun/12 13:26;jordeu;Yes Thomas it seems a duplicate. I've also was getting this ""firstChild.tagName is undefined"" javascript error. And this other ticket was created on 23 of May and the problematic commit was done at 18 of May.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoComplete text field does not work: Channel busy - postponing..,WICKET-4569,12557045,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,tank,tank,23/May/12 18:21,03/Jun/12 03:36,13/Mar/19 23:17,03/Jun/12 03:36,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket,,,,,,,0,,,,,,,"After first input I'm getting a ""Channel busy - postponing..."".

The same code works fine with Wicket 1.5.4. ","Opera 12.00 beta, Firefox 12, Chromium 18.0.1025.151",,,,,,,,,,,,,,,,,,,,,23/May/12 18:23;tank;myproject.zip;https://issues.apache.org/jira/secure/attachment/12528760/myproject.zip,31/May/12 01:58;jan.moxter;wicket-autocomplete.js;https://issues.apache.org/jira/secure/attachment/12530316/wicket-autocomplete.js,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-05-24 06:52:48.147,,,no_permission,,,,,,,,,,,257759,,,Sun Jun 03 03:36:15 UTC 2012,,,,,,0|i0k8jz:,116203,,,,,,,,"24/May/12 06:52;thomas.goetz;I can see a Javascript error, don't know yet if this is related to the problem:

firstChild.tagName is undefined
http://localhost:8080/wicket/resource/org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteBehavior/wicket-autocomplete.min-ver-D8BB536965389FBE5A49426BDF9FFDEE.js
Line 108","24/May/12 07:30;thomas.goetz;The same error ""Channel busy ..."" occurs in the examples (AutoCompletePage).","31/May/12 01:58;jan.moxter;Made a simple workaround so that it works in the moment, but I am quit sure that the necessary rework for using jquery etc. was not finished yet","31/May/12 02:02;jan.moxter;The problem is that the response from the call to ""Wicket.Ajax.ajax(attrs)"" is managed by the Autocomplete Script internal function ""doUpdateChoices(resp, defaultSelection)"", but the ajax response is called using apply and therefor an array of parameters is used to call the function. The parameter necessary is the third parameter. In the js script in the attachment is workaround for this. ","03/Jun/12 03:36;mgrigorov;I wasn't able to reproduce ""Channel busy - postponing..."" but I fixed the bug described by WICKET-4581 and now Autocompleter seems to work fine.
Please check the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autocomplete IE javascript error: 'target' is null or not an object,WICKET-4465,12547564,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,fafi,fafi,22/Mar/12 08:45,29/May/12 07:21,13/Mar/19 23:17,22/Mar/12 10:17,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta1,,wicket-extensions,,,,,,,0,javascript,,,,,,"When I click to autocomplete textfield the javascript error bellow is shown.

Webpage error details

User Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729)
Timestamp: Thu, 22 Mar 2012 08:05:57 UTC


Message: 'target' is null or not an object
Line: 68
Char: 1
Code: 0
URI: http://xxx:8080/wicket/resource/org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteBehavior/wicket-autocomplete-ver-C51E30D722C9620E9D06F141A171849F.js

Wicket 1.5.4 works fine.
","javascript - IE7, IE8, IE9",,,,,,,,,,,,,,,,,,,,,22/Mar/12 10:20;bitstorm;WICKET-4465.patch;https://issues.apache.org/jira/secure/attachment/12519421/WICKET-4465.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-03-22 09:30:35.181,,,no_permission,,,,,,,,,,,232662,,,Tue May 29 07:21:25 UTC 2012,,,,,,0|i00vnr:,3061,,,,,,,,"22/Mar/12 09:30;bitstorm;That's the old problem with event.target property and IE. The property must be accessed in a safe mode like this:

var input = event.target ? event.target : event.srcElement;

See patch above.",22/Mar/12 10:17;mgrigorov;Thanks Andrea!,"22/Mar/12 10:21;bitstorm;Sorry Martin, the patch was not complete, it missed Wicket.fixEvent(event) call. I've updated it and tested it.",22/Mar/12 10:44;mgrigorov;The improvement is added. Thanks again!,29/May/12 07:19;vancoeverden;This error also occurs in version 1.4.20,"29/May/12 07:21;mgrigorov;1.4.x receives only security fixes.
Please upgrade to 1.5.6.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractAjaxTimerBehavior should escape the quotes for the code that it schedules to execute,WICKET-4573,12558074,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,25/May/12 10:17,25/May/12 10:29,13/Mar/19 23:17,25/May/12 10:29,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,,,wicket,,,,,,,0,,,,,,,The callback script in org.apache.wicket.ajax.AbstractAjaxTimerBehavior#getJsTimeoutCall() may be extended/replaced with user provided one that contains single or double quotes and in the case when double quotes are used they will break the final generated JavaScript for the timer.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257756,,,Fri May 25 10:29:12 UTC 2012,,,,,,0|i0k8jb:,116200,,,,,,,,"25/May/12 10:29;mgrigorov;Fixed in 1.5.x.
This is already fixed in 6.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource filtering breaks the calculation of rendered resources,WICKET-4566,12556675,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,mgrigorov,mgrigorov,21/May/12 11:51,21/May/12 13:57,13/Mar/19 23:17,21/May/12 13:57,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta2,,,wicket,,,,,,,0,,,,,,,"The calculation of rendered resources at org.apache.wicket.markup.head.internal.HeaderResponse#rendered field is broken when org.apache.wicket.markup.head.filter.FilteringHeaderResponse is in use.
The problem is that org.apache.wicket.markup.head.filter.FilteringHeaderResponse#getContent(String) creates its own instance of HeaderResponse and thus has its own 'rendered' set.
If a filtered resource depends on a resource which is rendered in the head (i.e. in the default filtered bucked named 'headerBucket') then the latter is also rendered in the custom filter.",,,,,,,,,,,,,,,,,,,,,,21/May/12 12:02;mgrigorov;WICKET-4566-problem.patch;https://issues.apache.org/jira/secure/attachment/12528413/WICKET-4566-problem.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-05-21 13:57:39.887,,,no_permission,,,,,,,,,,,257760,,,Mon May 21 13:57:39 UTC 2012,,,,,,0|i0k8k7:,116204,,,,,,,,"21/May/12 12:02;mgrigorov;Here is a modification of ResourceDecoration's HomePage that exposes the problem.

top.js is rendered in the <head> (default bucket).
HomePage.js is rendered at the bottom of the page and depends on jQuery because it uses JQueryPluginResRef.
By adding a dependency to top.js we can see that top.js is rendered both in the <head> and as part of the bucket at the bottom of the body.
The latter should not be there.",21/May/12 13:57;papegaaij;Fixed by passing markRendered to the original header response.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException in Url.resolveRelative by using Check and alias for Page,WICKET-4445,12546196,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,vklidu,vklidu,13/Mar/12 07:57,18/May/12 10:59,13/Mar/19 23:17,18/May/12 10:59,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,,,,,,,,0,,,,,,,"By using alias for Page and using Check with CheckGroup and wantOnSelectionChangedNotifications set to true, I get ArrayIndexOutOfBoundsException.","win7, chrome",,,,,,,,,,,,,,,,,,,,,13/Mar/12 07:58;vklidu;checkerror.zip;https://issues.apache.org/jira/secure/attachment/12518158/checkerror.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-05-18 10:59:30.931,,,no_permission,,,,,,,,,,,231354,,,Fri May 18 10:59:30 UTC 2012,,,,,,0|i0k8sn:,116242,,,,,,,,13/Mar/12 07:58;vklidu;wicket quickstart for error,"13/Mar/12 07:59;vklidu;relativeUrl=..?7-1.IOnChangeListener-form-checks

java.lang.ArrayIndexOutOfBoundsException: -1
     at java.util.ArrayList.remove(ArrayList.java:390)
     at org.apache.wicket.request.Url.resolveRelative(Url.java:994)
     at org.apache.wicket.markup.html.form.Form.dispatchEvent(Form.java:1040)
     at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:733)
     at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:692)",18/May/12 10:59;mgrigorov;Fixed with WICKET-4561.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component#getMarkupId() generates id that gets hidden by AdBlock,WICKET-4559,12555155,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jakubvalenta,jakubvalenta,14/May/12 16:24,18/May/12 10:05,13/Mar/19 23:17,18/May/12 10:05,1.4.21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"Component#getMarkupId() generates ids containing string ""ad"". Element with such id (e.g., ""buttonad"") is then hidden by the AdBlock plugin (because it matches AdBlock's CSS selector #buttonad).

Since AdBlock is quite a common plugin, this issue might affect most of the applications using Wicket.

Test project and screenshot is attached.
--
Wicket 1.4.21
Firefox 12, AdBlock 2.0.3
Linux 3.3.5, x86_64",,,,,,,,,,,,,,,,,,,,,,14/May/12 16:24;jakubvalenta;wicket_bug_adblock_project.tar.gz;https://issues.apache.org/jira/secure/attachment/12526775/wicket_bug_adblock_project.tar.gz,14/May/12 16:24;jakubvalenta;wicket_bug_adblock_screenshot.png;https://issues.apache.org/jira/secure/attachment/12526776/wicket_bug_adblock_screenshot.png,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-05-15 17:57:43.327,,,no_permission,,,,,,,,,,,239407,,,Fri May 18 10:05:06 UTC 2012,,,,,,0|i0k8kv:,116207,,,,,,,,"15/May/12 17:57;svenmeier;Note that in deployment configuration the ids will not contain the component id, so ""buttonad"" becomes ""idad"".

What's your suggestion? You could give your component a different id than ""button"", wouldn't that fix it?","15/May/12 18:48;jakubvalenta;I didn't know that.  It seems that ""idad"" is not blocked by AdBlock, so you're right, this issue does not occur in deployment conf.

As for changing the id: there are dozens of ids blocked by AdBlock, so I think the chances are pretty high, that one chooses a different id that gets blocked, too.  Not to mention that on large project it might take quite some time to change all usages of the wrong ids (there might be others, not only ""button"").

I would feel much safer if getMarkupId() just skipped ""ad"", like this:

if (generatedMarkupId == 173) {
    generatedMarkupId = Session.get().nextSequenceValue();
}","18/May/12 10:05;mgrigorov;Applied the suggested solution.
I don't see any problem with it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlRenderer produces wrong full urls when the passed parameter is not absolute (as Url understands 'absolute'),WICKET-4514,12552542,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,25/Apr/12 09:54,18/May/12 08:12,13/Mar/19 23:17,25/Apr/12 12:37,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"Code like:

Url baseUrl = Url.parse(""one/two/three"");
baseUrl.setProtocol(""http"");
baseUrl.setHost(""www.example.com"");
baseUrl.setPort(8888);
UrlRenderer renderer = new UrlRenderer(new MockWebRequest(baseUrl));
renderer.setBaseUrl(baseUrl); // this is needed because MockWebRequest cuts data
String fullUrl = renderer.renderFullUrl(Url.parse(""../four""));

Produces url: http://www.example.com/../four while it has to be http://www.example.com/one/four",,,,,,,,,,,,,,,,,,,WICKET-4561,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,237070,,,2012-04-25 09:54:29.0,,,,,,0|i0k8nr:,116220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible NPE in FragmentMarkupSourcingStrategy.getMarkup,WICKET-4563,12556216,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,meiklehmann,meiklehmann,17/May/12 10:13,17/May/12 15:22,13/Mar/19 23:17,17/May/12 11:03,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,,,,,,,,0,,,,,,,"For the code

{noformat}		if (childMarkup == null)
		{
			throw new MarkupNotFoundException(""No Markup found for Fragment "" + markupId +
				"" in providing markup container "" + markupProvider.toString());
		}
{noformat}
markupProvider might be null",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257761,,,2012-05-17 10:13:14.0,,,,,,0|i0k8kf:,116205,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableLabel not selecting text or moving cursor on Firefox 11.0 or Safari 5.0.5,WICKET-4529,12553609,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,ebolwidt,ebolwidt,02/May/12 11:09,16/May/12 07:45,13/Mar/19 23:17,16/May/12 07:45,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,wicket-extensions,,,,,,,0,,,,,,,"The class Javadoc for AjaxEditableLabel says:
""""""
onEdit(AjaxRequestTarget) is called when the label is clicked and the editor is to be displayed. The default implementation switches the label for the editor and places the caret at the end of the text.</li>
""""""

However this does not happen on Firefox or Safari.
Looking at the code, it is actually trying to place the caret at the end of the line _and_ selecting the text in the form field. (This -selecting the text- is what I also want, and also the most common behavior of such ajax-editable fields on other big websites on the Internet)


// put focus on the textfield and stupid explorer hack to move the
// caret to the end
target.appendJavaScript(""{ var el=wicketGet('"" + editor.getMarkupId() + ""');"" +
	""   if (el.createTextRange) { "" +
	""     var v = el.value; var r = el.createTextRange(); "" +
	""     r.moveStart('character', v.length); r.select(); } }"");
target.focusComponent(editor);

However the ""stupid explorer hack"" as the code calls it, probably _only_ works on explorer, because the el.createTextRange method is quite old and deprecated (it's only needed on MSIE <9)
I'm getting good results by just calling select() on the DOM element. I don't have MSIE available to test there but I think it will work there too.


// put focus on the textfield and stupid explorer hack to move the
// caret to the end
target.appendJavaScript(""{ var el=wicketGet('"" + editor.getMarkupId() + ""');"" +
	""   el.select(); "" +
        "" }"");
target.focusComponent(editor);

",MacOS,,,,,,,,,,,,,,,,,,,,,13/May/12 16:01;bitstorm;TestScreenshot.png;https://issues.apache.org/jira/secure/attachment/12526682/TestScreenshot.png,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-05-07 15:14:02.927,,,no_permission,,,,,,,,,,,237796,,,Sun May 13 16:00:40 UTC 2012,,,,,,0|i0k8mn:,116215,,,,,,,,"07/May/12 15:14;mgrigorov;I just tried 

document.getElementsByName(""text"")[0].select()

at http://www.wicket-library.com/wicket-examples/compref/wicket/bookmarkable/org.apache.wicket.examples.compref.TextFieldPage

and it works on IE9, Opera 11.61, Safari 5.1.5 and Chrome 18.x (Win7) and 20.x (Ubuntu). It doesn't work on Firefox 11 (both Win7 and Ubuntu).","13/May/12 13:20;bitstorm;@Martin

 select() should work also for Firefox. How did you test your JavaScript code (with firebug console?)?. I've changed code as suggested by Erwin and tested it with example /wicket-examples/ajax/editable-label. Everything was fine with the following configurations:

-Firefox 12 under Ubuntu
-Chromium 18 under Ubuntu
-Firefox 11 and 12 under Windows xp
-Opera 11.64 under Windows xp
-Safari 5.1.7 under Windows xp
-IE 7 and 8 under Windows xp
","13/May/12 13:30;mgrigorov;Thanks for testing this, Andrea!

Yes, I used Firebug for Firefox and Dev tools for IE/Chrome/Safari, and Dragonfly for Opera.
All behaved well but Firefox.

I'll try your approach and if everything is OK then I'll apply it.","13/May/12 16:00;bitstorm;@Marting

well...I know it could sound silly :), but I've asked you if you used firebug because the first time I tried your code I also thought it didn't work. But later I realised that if you click on page before running your script, everything works as expected (see attached picture with firefox 11)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FeedbackPanel does not show messages on stateless pages,WICKET-4536,12554128,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,papegaaij,papegaaij,07/May/12 09:13,15/May/12 07:32,13/Mar/19 23:17,15/May/12 07:32,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"Feedback messages do not show up on stateless pages after the fix for WICKET-4468. The problem is that feedbackmessagemodel caches the 'getObject' result and with the fix for WICKET-4468, getObject is called before any messages are added.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-05-07 14:24:53.304,,,no_permission,,,,,,,,,,,238353,,,Tue May 15 07:29:22 UTC 2012,,,,,,0|i0k8lz:,116212,,,,,,,,07/May/12 09:17;papegaaij;Fixed by changing isVisible to onConfigure with setVisible on FeedbackPanel.,"07/May/12 09:22;papegaaij;It might be possible to work around this problem in 1.5.6 by subclassing FeedbackPanel, overriding onConfigure and call detach() from it.",07/May/12 14:24;thomas.heigl;The suggested work around works for me.,15/May/12 07:29;mgrigorov;Need to be fixed in 6.x too.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unencoded ampersands in CSS-/Javascript-Reference,WICKET-4546,12554520,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aws1032,aws1032,09/May/12 16:04,11/May/12 12:50,13/Mar/19 23:17,11/May/12 12:50,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta2,,,,,,,,,0,ampersand,css,encoding,javascript,url,,"Ampersands in CSS-/Javascript-References are not encoded properly, see the source code (html) in:

http://www.wicket-library.com/wicket-examples/resourceaggregation

{quote}
    <!-- BasicGroupingKey [group=GLOBAL, loadOrder=0, css=true] -->
<link rel=""stylesheet"" type=""text/css"" href=""./wicket/resource/org.apache.wicket.Application/merged-resources?refs=org.apache.wicket.examples.resourcedecoration.HomePage:footer.css%7Corg.apache.wicket.examples.resourcedecoration.HomePage:header.css&type=css"" />
<!-- BasicGroupingKey [group=APPLICATION, loadOrder=0, css=true] -->
<link rel=""stylesheet"" type=""text/css"" href=""./wicket/resource/org.apache.wicket.Application/merged-resources?refs=org.apache.wicket.examples.resourcedecoration.HomePage:app.css&type=css"" />
<!-- BasicGroupingKey [group=PAGE, loadOrder=0, css=true] -->
<link rel=""stylesheet"" type=""text/css"" href=""./wicket/resource/org.apache.wicket.Application/merged-resources?refs=org.apache.wicket.examples.resourcedecoration.HomePage:HomePage.css&type=css"" />{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-05-10 14:40:11.675,,,no_permission,,,,,,,,,,,238770,,,Fri May 11 12:50:30 UTC 2012,,,,,,0|i0k8lj:,116210,,,,,,,,"10/May/12 14:40;mgrigorov;This is how org.apache.wicket.examples.resourcedecoration.MergedResourcesResource works.
It puts '|' in the query parameter value and then splits on it.","10/May/12 14:51;aws1032;I did not mean the pipe ( | ) symbol but the ampersand ( & ).

See: http://www.htmlhelp.com/tools/validator/problems.html#amp

So according to the W3C it is a problem.

Ampersand encoding in wicket has quite a ticket history, just to name a few:

WICKET-358 WICKET-559 WICKET-2131 WICKET-3334 ",10/May/12 14:57;mgrigorov;Which ampersand exactly do you mean ?,"10/May/12 14:58;mgrigorov;The ampersands in the urls are normal delimiters for the request parameters, no ?","10/May/12 15:00;aws1032;The ampersand before &type, i.e. &type=css or custom parameters if I add any.",10/May/12 15:05;mgrigorov;You are correct.,"11/May/12 12:50;mgrigorov;Improved! Thanks!
Wicket is even more famous now! :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in org.apache.wicket.markup.html.form.ValidationErrorFeedback,WICKET-4548,12554639,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,thomas.goetz,thomas.goetz,10/May/12 07:49,10/May/12 09:53,13/Mar/19 23:17,10/May/12 09:53,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta2,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.markup.html.form.ValidationErrorFeedback throws a NPE in the following situation:

- Form with a TextField<Integer> that has a RangeValidator
- value outside range is entered
- form is submitted

See attached quickstart.",,,,,,,,,,,,,WICKET-4549,,,,,,,,,10/May/12 07:51;thomas.goetz;wicket-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12526314/wicket-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,238889,,,2012-05-10 07:49:46.0,,,,,,0|i0k8lb:,116209,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Final methods on ResourceNameIterator prevent full customization of IResourceStreamLocator,WICKET-4530,12553779,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,jriehn,jriehn,03/May/12 15:25,08/May/12 22:02,13/Mar/19 23:17,08/May/12 22:02,1.5.5,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta2,,wicket,,,,,,,0,IResourceStreamLocator,resource,ResourceNameIterator,,,,"IResourceStreamLocator contains the method newResourceNameIterator(...) which builds a ResourceNameIterator. Unfortunately ResourceNameIterator declares several getter methods (getLocale(), getStyle(), getVariation(), getExtension()) as final and thus ties the public API to the internal implementation of ResourceNameIterator. Therefore it's not possible to fully customize the behavior of ResourceNameIterator by subclassing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-05-07 12:40:12.93,,,no_permission,,,,,,,,,,,237988,,,Tue May 08 22:02:38 UTC 2012,,,,,,0|i0k8mf:,116214,,,,,,,,"07/May/12 12:40;mgrigorov;What is your use case ?
Why do you want different behavior from #getLocale() for example ?","07/May/12 12:55;coldiges;Basic rule: 

The getter methods have to return the current values depending on the state of the iterator. That is if the iterator points to name #3, getLocale has to return the correct value for name #3. 

Problem:

Now if you subclass ResourceNameIterator and replace the iterator functionality, the subclass doesnt have access to the private field localeIterator which the FINAL method getLocale uses as the source of the current value. Thus it is impossible to still fulfill the basic rule as stated above. Basically any usecase which actually changes ResourceNameIterator breaks the rule.
","07/May/12 17:11;svenmeier;I remember speaking with Jan about the problem of providing a custom name iterating scheme.

What's the suggested fix? Would introducing an interface help here?
","08/May/12 06:43;coldiges;For 1.5 I would suggest to simply remove the final modifiers of the getters to avoid a breaking API change.
For 6.0 a new IResourceNameIterator makes more sense.",08/May/12 08:53;jriehn;I totally agree with Christian. Removing the final modifiers of the getters in 1.5 avoids an API break. For 6.0 it's straightforward to introduce a IResourceNameIterator. ,"08/May/12 22:02;svenmeier;Introduced new interface IResourceNameIterator in Wicket 6.
To keep ABI compatibility in 1.5.x, the getters in ResourceNameIterator are no longer final. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make it easier to produce a page with links with absolute urls,WICKET-4502,12551205,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,17/Apr/12 12:05,08/May/12 14:54,13/Mar/19 23:17,08/May/12 14:54,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"We needed to create a page which links have absolute urls (protocol, host, port included). So I created a simple extension of MountedMapper that makes the relative url returned by super.mapHandler() to an absolute one.
So far so far but later Wicket uses org.apache.wicket.request.UrlRenderer#shouldRenderAsFull() to decide whether to actually render the url as full (i.e. as absolute) and since the protocol, the host and the port matches with the current request's url attributes it decides to render the url as relative.

Since Url class is final it is not possible to create a custom AbsoluteUrl which #toString() delegates to #toString(StringMode.FULL).

I see two solutions:
1) provide AbsoluteUrl class which is again final and uses StringMode.FULL
2) add a boolean flag to Url that is used by UrlRenderer#shouldRenderAsFull() so I can force full mode

Do you have other solutions ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-04-17 19:15:37.905,,,no_permission,,,,,,,,,,,236069,,,Tue May 08 14:54:15 UTC 2012,,,,,,0|i0k8pj:,116228,,,,,,,,"17/Apr/12 19:15;svenmeier;Can't you just provide a custom UrlRenderer in your RequestCycle:

	protected UrlRenderer newUrlRenderer()
	{
		return new UrlRenderer(getRequest()) {
			protected boolean shouldRenderAsFull(final Url url) {
				if (pageWithAbsoluteUrlsOnly()){
					return true;
				} else {
					return super.shouldRenderAsFull(url);
				}
			}
                };
	}

??","18/Apr/12 10:03;mgrigorov;I don't like this approach because:
1) I'll have to find out how to implement ""pageWithAbsoluteUrlsOnly()"". Probably I'll need custom IRequestCycleListener to track the ""target"" page
2) IRequestMapper#mapHandler() is resposible to create the Urls. By using custom UrlRenderer I move this responsibility

The simplest and cleanest solution for me is to remove 'final' from Url class. Then I can return my custom AbsoluteUrl in #mapHandler().",08/May/12 14:54;mgrigorov;Solved by removing 'final' from the class signature.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractDefaultAjaxBehavior.getCallbackFunctionBody uses jQuery.extend,WICKET-4543,12554316,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,papegaaij,papegaaij,08/May/12 12:40,08/May/12 13:28,13/Mar/19 23:17,08/May/12 13:28,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta2,,,wicket,,,,,,,0,,,,,,,Wicket components should not rely on jQuery. jQuery.extend should be made available through the Wicket JS api and AbstractDefaultAjaxBehavior.getCallbackFunctionBody should use that.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,238546,,,Tue May 08 13:28:13 UTC 2012,,,,,,0|i0k8lr:,116211,,,,,,,,08/May/12 13:28;papegaaij;Wicket.merge added which exposes a simplified version of $.extend.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spaces in path cause ModifcationWatcher to fail,WICKET-4509,12552028,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,cleiter,cleiter,22/Apr/12 10:30,04/May/12 20:25,13/Mar/19 23:17,24/Apr/12 08:01,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"The ModificationWatcher isn't able to reload resource files if there's a space in the path.

The problem is that Files#getLocalFileFromUrl(String) receives an URL encoded String in which spaces are encoded to %20. They are never decoded and passed to File(). The fix is not to use the external representation of an URL but the file representation.",Windows 7,,,,,,,,,,,,,,,,,,,,,22/Apr/12 10:31;cleiter;WICKET-4509.patch;https://issues.apache.org/jira/secure/attachment/12523677/WICKET-4509.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-04-22 19:21:48.733,,,no_permission,,,,,,,,,,,237072,,,Fri May 04 20:25:03 UTC 2012,,,,,,0|i0k8of:,116223,,,,,,,,22/Apr/12 10:31;cleiter;Attaching patch. All current test cases pass.,"22/Apr/12 19:21;svenmeier;In your patch url.getFile() misses any protocol information, thus the following invocation of Files#getLocalFileFromUrl(String) always returns null.","22/Apr/12 20:30;svenmeier;I've changed #getLocalFileFromUrl(URL) to decode the url before passing it on to the other method.

Regretfully Wicket's UrlDecoder is not accessible from wicket-util, so I've just used Java's default URLDecoder.","04/May/12 16:43;pete;@Sven: In 6.x, can we move UrlDecoder into wicket-util?",04/May/12 16:43;pete;^ and add some comment in the migration-wiki?,"04/May/12 20:25;svenmeier;Yes, UrlDecoder could be moved. This would definitely warrant a comment in the migration-wiki ;).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListView causes page ID increment,WICKET-4286,12534538,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,malichtenberg,malichtenberg,09/Dec/11 20:10,30/Apr/12 20:50,13/Mar/19 23:17,25/Apr/12 21:24,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,2,,,,,,,"A ListView with setReuseItems(false) causes the page ID to increment when the page is reloaded or the back button is pressed. This new ID is not reflected in the URL so Ajax actions against the new ID are lost when navigating away and back again. 

Steps to reproduce in quickstart
1) Load quickstart project in browser
2) Click ""Link to Other"" then click browser's back button.
3) Notice the log statement indicates the HomePage ID is 2, yet the URL remains at ID 0
4) Click ""Ajax Increment Link"" a few times
5) Click ""Link to Other"" then click browser's back button
6) Notice the counter is at zero, and subsequent clicks to the ""Ajax Increment Link"" start from zero. The current page ID output in the log is 4.

",any,,,,,,,,,,,,,,,,,,,,,09/Dec/11 20:11;malichtenberg;ajaxtest1.5.3.tar.gz;https://issues.apache.org/jira/secure/attachment/12506786/ajaxtest1.5.3.tar.gz,12/Apr/12 20:37;nsegura3;ajaxupdate.zip;https://issues.apache.org/jira/secure/attachment/12522477/ajaxupdate.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-12-10 20:44:33.303,,,no_permission,,,,,,,,,,,220260,,,Thu Apr 12 20:37:27 UTC 2012,,,,,,0|i0k8uf:,116250,,,,,,,,"10/Dec/11 20:44;svenmeier;If you use the link to OtherPage and then the back button, the browser requests page ?0. The page with id 0 is correctly restored and rendered.
Before rendering the ListView removes all its children and recreates them. This results in a new page version, which is correctly taken into account by the ajax link and your log output.

This might look unexpected but actually it's quite common: the browser requests page version X but gets version Y as response.

So what is the problem you're experiencing? Wicket does not (yet) support back button for ajax requests, see WICKET-271 .","10/Dec/11 22:17;dretzlaff;That's an old ticket! :)

1.5's liberal advancement of the page identifier changes Wicket's limited AJAX versioning support significantly, in my opinion detrimentally:
1. In 1.4 reloading a page (with back or reload buttons) results in the most recent version associated with that URL; in 1.5 it results in the oldest version.
2. With a 1.5 AJAXy page, it seems quite easy to get into a state where different AJAX behaviors target different versions of the same page. That sounds confusing to debug.

ListView's effect on the page version makes the gotcha more unexpected, but I agree it's working as designed. Maybe Wicket's AJAX versioning gotchas just get an extra underscore for now, pending full support?

Was there discussion of the tradeoffs between 1.4 and 1.5's versioning strategies? I looked but I could not find one. I don't mean to naysay the new design since I don't know the history.","11/Dec/11 17:29;malichtenberg;My concern is after the page ID is advanced due to a reload or back button any model updates done on that version can never be retrieved. With 1.4 the view did not reflect the most recent version of the page, but since the page ID never advanced the model was intact. 

As Dan mentions with 1.5 we can easily get into situations where ajax requests target different page version, and with that a different copies of page models. ","14/Dec/11 12:48;thomas.goetz;I'm not quite sure if this is related to the problem, but I guess so:

we have a page containing an AJAX wizard. Users can go forward and backward and fill several form components which are correctly written into the model when the wizard step is changed (via AJAX).

But: if you reload the page, all input data is gone (from all wizard pages), as the URL still shows ?0 ...","14/Dec/11 18:23;dretzlaff;Thomas, it sounds likely. Look at the AJAX URLs to see if they're targeting a different page version than in the URL. Note that AJAX requests themselves don't advance the page identifier (see WebPage#dirty(boolean)), but for example normal reloads containing ListViews will. So maybe you can workaround the issue in your wizard by identifying and suppressing the non-AJAX, page-dirtying operation.","16/Dec/11 08:12;thomas.goetz;@Dan: what exactly do you mean by that? It seems to me that the page *should* be dirtied upon ajax operations (+ model changes)?! Because on page reload the ""old' state is restored (after page has been rendered), so everything that happend after this (via AJAX) is not serialized, or do I get this wrong?","16/Dec/11 08:18;thomas.goetz;And: yes, the ajax URLs target an incremented version of the page, while the URL still shows the ""old"" one.","16/Dec/11 19:19;dretzlaff;There are two concepts here: ""touched"" pages and ""dirty"" pages. Simply retrieving a page from the page manager ""touches"" it, scheduling it for serialization into the page store at the end of the request. The question is whether it updates the original page store entry, or goes into a new entry. The page gets a new page map entry if and only if it is marked ""dirty"" which is triggered by component hierarchy change, component model change, or explicitly with Page#dirty(). However, WebPage#dirty() has a special case which prevents AJAX requests from *ever* marking a page dirty.

So after the request that originally created your wizard's page, there must be another non-AJAX request which dirties the page and advances its identifier past the one in the browser address bar.","16/Dec/11 19:22;dretzlaff;And my disclaimer: I didn't design this, I'm just interpreting the code. If I'm wrong, I hope somebody corrects me. :)",07/Jan/12 14:23;mgrigorov;@Thomas: can you attach a quickstart with your case too ?,"07/Jan/12 14:26;mgrigorov;I think this ticket should be closed as ""Not a problem"" because ListView is designed to work this way - in each call of its onBeforeRender() it recreates its items which makes the page dirty, and therefore increases the page id.
Thomas can open a new ticket with a quickstart.","10/Feb/12 01:37;ivaynberg;this is no different then how 1.4.x worked. the back button takes you back to the state of the page before ajax changes. in order for it to take you back to the ""last"" click we would need ajax history support, which we do not yet have.","10/Feb/12 01:50;dretzlaff;I agree there isn't a good solution without AJAX history, but I respectfully disagree that 1.4 worked the same. In 1.4 reloading the page returned the most recent version of a page (the one with the most AJAX updates); in 1.5 those AJAX changes can be lost on reload/back.","10/Feb/12 03:19;ivaynberg;go to http://www.wicket-library.com/wicket-examples/ajax/links

this is wicket 1.5.x (1.5.4 currently)

click the ajax link to increment the counter a few times. reload the page. counter retains its value, ajax changes are not lost.

click the back link, you will be taken wherever you were before. since ajax links did not cause a url change and no browser history change you are not taken to a page with counter's previous value.

this is exactly how 1.4 behaves.

the only difference between the two is that 1.5.x always redirects to a non-bookmarkable url so a refresh never loses ajax changes like it did in 1.4.x which did not redirect to a non-bookmarkable url so a refresh would recreate the page from scratch.

","10/Feb/12 03:29;ivaynberg;i think the root cause here is the difference in caching, not how page version or ajax is handled. in 1.5.x the back button causes a request back to the server which causes the page to be rerendered and the version incremented. in 1.4.x the back button would not cause a request to the server, instead the cached version of the page would be shown. im not sure why this was changed in 1.5.x, may be worth opening a discussion on dev@.","10/Feb/12 03:38;dretzlaff;No, I think the issue is that non-AJAX reloads that render ListViews end up calling MarkupContainer#add, incrementing the page ID but not updating the URL. The relevant change is in Page#dirty() which only scheduled a page to be flushed in 1.4, and now assigns it a new page ID.","12/Apr/12 19:46;ivaynberg;a valid usecase:

whats happening is this

user hits the page /foo
goes to /foo?1
does a bunch of ajax stuff, staying on /foo?1
clicks refresh, so hits /foo?1
listview refreshes, changing hierarchy, creating page version 2
the ajax behavior's url is rendered as /foo?2:...
the page is rendered, but not redirected to /foo?2

so what we have now is a browser pointing to /foo?1 and ajax (and
non-ajax) urls pointing to /foo?2

further clicks work only because the component they repaint has the
same markup id on page 1 and page 2. however, all model changes are
stored in page 2. this is why when the browser is refreshed the
counter reverts to a previous value - because it is page 1 that is
rerendered.

there are two ways to fix this:

1) redirect to correct version. so when the browser is refreshed for
the first time on /foo?1 the browser would redirect to /foo?2 and it
would keep doing that for every refresh. not ideal.

2) freeze the page version when we are accessing a url that we know
will not mutate the state of the page - meaning urls that just render
the page and do not invoke any listeners. the only state we will lose
is noise from component replacement in listviews and user's
onbeforerender() overrides which i think is acceptable since they do
not represent true state mutation that comes from intentional
callbacks.
","12/Apr/12 20:37;nsegura3;Attached QuickStart. 
Access URL is https://localhost:8443/test/ajaxtest

- click on the buttons several times
- refresh page: the counters should now reflect the clicks
- click on the buttons more times
- refresh page: the counters do not reflect click after first refresh",,,,,,,,,,,,,,,,,,,,,
Stack overflow when render malformed html.,WICKET-4511,12552234,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,inaiat,inaiat,24/Apr/12 02:58,27/Apr/12 12:26,13/Mar/19 23:17,27/Apr/12 12:26,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"Stack overflow when render malformed html.

Please, note that </HEAD> element is inserted after </body>.

HTML:
<html>
<head>
<body>
Malformed HTML
</body>
</head>
</html>

Java:
package com.mycompany;

import org.apache.wicket.markup.html.WebPage;
public class Test1 extends WebPage {
	private static final long serialVersionUID = -4267477971499123852L;

}


Thanks.","windows, ubuntu. java 7, jetty 6.1.26",,,,,,,,,,,,,,,,,,,,,26/Apr/12 21:49;bitstorm;WICKET-4511.patch;https://issues.apache.org/jira/secure/attachment/12524773/WICKET-4511.patch,24/Apr/12 03:48;inaiat;console-output.txt;https://issues.apache.org/jira/secure/attachment/12523915/console-output.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-04-26 14:01:17.331,,,no_permission,,,,,,,,,,,236978,,,Fri Apr 27 12:26:24 UTC 2012,,,,,,0|i0k8o7:,116222,,,,,,,,24/Apr/12 03:48;inaiat;Console output.,"26/Apr/12 14:01;bitstorm;The problem is due to HtmlHeaderSectionHandler which does not identify <head> tag properly. If you look at method onComponentTag you see that variable foundHead is set to true only when closing tag </head> is encountered and not when we find the opening one.
I've attached a patch which slightly changes the behavior of  HtmlHeaderSectionHandler and solve the issue. I've tested it with all test cases without any problem. ","26/Apr/12 14:43;mgrigorov;Thanks for the investigation and the patch, Andrea!

I think we should extend HtmlHeaderSectionHandler to throw an exception if it sees <head> and <body> without </head> in between.
Now the attached quickstart fails with StackOverflowError - not good at all but the developer goes to find what is wrong and fixes his code. 
With your fix Wicket behaves better and the developer is not notified about this problem.
Wicket is not HTML validator but since <head> and <wicket:head> are more special I think we can add some more 'if's in this code to prevent such problem.

Do you want to implement it and add a test ? :-)   ","26/Apr/12 15:39;bitstorm;Yes, of course! I think should be ready by tomorrow.
PS: Soon or later I will use IRC to speed up communication :)",26/Apr/12 21:51;bitstorm;Here it is. Now HtmlHeaderSectionHandler throws a MarkupException if it finds a <body> inside <head>. I've also added a test case for this issue.,"27/Apr/12 12:26;mgrigorov;Thanks again, Andrea!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inline enclosure doesn't work if wicket:message attribute is used on the same tag,WICKET-4520,12553110,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,27/Apr/12 08:56,27/Apr/12 10:41,13/Mar/19 23:17,27/Apr/12 10:41,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"Markup like:

        <div wicket:enclosure=""child"" wicket:message=""title:something"">
	        <div>Inner div
		        <span wicket:id=""child"">Blah</span>
	        </div>
        </div>

doesn't work (Inner div is visible, no matter whether 'child' is visible or not) because the auto component created for wicket:message breaks somehow wicket:enclosure.
",,,,,,,,,,,,,,,,,,,,,,27/Apr/12 09:04;mgrigorov;inline-enclosure-message.tgz;https://issues.apache.org/jira/secure/attachment/12524834/inline-enclosure-message.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,237126,,,Fri Apr 27 09:04:42 UTC 2012,,,,,,0|i0k8mv:,116216,,,,,,,,27/Apr/12 09:04;mgrigorov;A quickstart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket example 'forminput' is broken due to bad url for IOnChangeListener,WICKET-4518,12552813,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,mgrigorov,mgrigorov,26/Apr/12 08:45,26/Apr/12 23:19,13/Mar/19 23:17,26/Apr/12 23:19,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"http://localhost:8080/forminput (wicket-examples) doesn't change the locale of the labels when the locale select is changed.
The reason seems to be the produced url: './.?5-1.IOnChangeListener-inputForm-localeSelect' 
This is parsed to a Url with one empty segment and thus HomePageMapper doesn't match it and doesn't handle it.",,,,,,,,,,,,,,,,,,,,,,26/Apr/12 15:37;svenmeier;WICKET-4518-alternative.patch;https://issues.apache.org/jira/secure/attachment/12524454/WICKET-4518-alternative.patch,26/Apr/12 09:20;mgrigorov;WICKET-4518.patch;https://issues.apache.org/jira/secure/attachment/12524414/WICKET-4518.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-04-26 15:37:54.199,,,no_permission,,,,,,,,,,,236867,,,Thu Apr 26 23:19:36 UTC 2012,,,,,,0|i0k8nb:,116218,,,,,,,,"26/Apr/12 09:09;mgrigorov;The problem comes from WICKET-4260.
Form.java, line 527:
Url action = Url.parse(getActionUrl().toString());

#getActionUrl() returns something like : './?1-1.SomeListener' . Before WICKET-4260 it was '?1-1.SomeListener'.
Url.parse()-ing that produces an Url with two segments: [., ], before 4260: [].",26/Apr/12 09:20;mgrigorov;Attaching a suggested patch.,"26/Apr/12 15:37;svenmeier;Alternative patch: If resolving a relative url removes a leading dot, it should remove a following empty segment to.","26/Apr/12 15:49;mgrigorov;Urls like '././././././some/thing/meaningful' should be treated as 'some/thing/meaningful' so I suggest using 'while' instead of 'if'.
Code that manipulates strings has always been one of my nightmares so feel free to improve it as you find better.","26/Apr/12 23:19;svenmeier;Url allows all kind of strange segments, so I decided to keep ""./?foo"" allowed. resolveRelative() now takes care to remove any leading ""./"", "".//"" and additionally empty segments too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NumberTextField<BigDecimal> renders its value in unsupported number format ,WICKET-4501,12551202,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,17/Apr/12 11:27,23/Apr/12 13:21,13/Mar/19 23:17,23/Apr/12 09:18,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"The issue is similar to WICKET-3591 but its fix doesn't help when the model object of the NumberTextField is a BigDecimal because BigDecimalConverter#convertToString() produces something like ""123, 456, 789"" and this is not supported by <input type=""number"">'s spec: http://dev.w3.org/html5/markup/datatypes.html#common.data.float.",,,,,,,,,,,,,,,,,,,,,,23/Apr/12 08:15;cleiter;WICKET-4501.patch;https://issues.apache.org/jira/secure/attachment/12523768/WICKET-4501.patch,17/Apr/12 11:28;mgrigorov;number-field.tgz;https://issues.apache.org/jira/secure/attachment/12522945/number-field.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-04-23 08:15:33.949,,,no_permission,,,,,,,,,,,236066,,,Mon Apr 23 13:21:59 UTC 2012,,,,,,0|i0k8pr:,116229,,,,,,,,"17/Apr/12 11:28;mgrigorov;A quickstart that demonstrates the problem.
Enter a number with at least 4 digits and submit.",23/Apr/12 08:15;cleiter;This patch uses a special locale for which the grouping of digits can be disabled without changing global behavior.,23/Apr/12 09:18;mgrigorov;Fixed by applying Christoph's patch.,"23/Apr/12 13:21;svenmeier;I was tinkering with something similar but new Locale(""en"", """", ""wicket-html5"") didn't came to my mind.

Nice solution Christoph :).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicktTester.getLastResponseAsString() returns wrong result after starting a Component,WICKET-4507,12551620,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,carstenbehring,carstenbehring,19/Apr/12 13:49,23/Apr/12 08:27,13/Mar/19 23:17,23/Apr/12 08:27,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"> This following test :

 @Test
 public void test() throws Exception {
  WicketTester tester=new WicketTester();
  tester.startComponentInPage(new Label(""lableId"", ""content"") {
        @Override
        protected void onComponentTag(ComponentTag tag) {
            super.onComponentTag(tag);
            tag.put(""test"",""123"");
        }
     });
  tester.assertResultPage(""icket:id=\""lableId\"" test=\""123\"">content"");
  assertEquals(""icket:id=\""lableId\"" test=\""123
 \"">content"",tester.getLastResponseAsString());
  assertEquals("""",tester.getResponse().getDocument());
}

exposes the wrong behaviour of test.getLastResponseAsString() after starting a component.

It should return something such as ""<span> .... </span>"", bit it returns a string ""cut in the middle"" : cket:id=\""lableId\"" test=\""123\"">content


see attached quickstart",,,,,,,,,,,,,,,,,,,,,,22/Apr/12 11:29;cleiter;WICKET-4507.patch;https://issues.apache.org/jira/secure/attachment/12523681/WICKET-4507.patch,19/Apr/12 13:50;carstenbehring;quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12523342/quickstart.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-04-22 11:29:17.704,,,no_permission,,,,,,,,,,,236428,,,Sun Apr 22 21:17:59 UTC 2012,,,,,,0|i0k8on:,116224,,,,,,,,"22/Apr/12 11:29;cleiter;The current implementation of BaseWicketTester#getLastResponseAsString() returns just the body of a component if startComponentInPage() has been used. The surrounding markup of the page and the tag of the component get removed. Testing for attributes can't work that when only the body is rendered.

The JavaDoc of getLastResponseAsString isn't exactly clear what the intended behaviour is: ""In case the processed component was not a Page then the automatically created page markup gets removed"". I think the tag of the component itself shouldn't be removed.

I'll attach a patch which does just that.","22/Apr/12 21:17;carstenbehring;I just tried the patch and wanted to confirm, that it would fix the problem for me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxLazyLoadPanel not replaced within AjaxTabbedPanel,WICKET-4504,12551255,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,xomit,xomit,17/Apr/12 15:54,23/Apr/12 08:10,13/Mar/19 23:17,23/Apr/12 08:10,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta2,,,wicket-extensions,,,,,,,0,,,,,,,"An AjaxLazyLoadPanel is not replaced when added as panel of an AbstractTab within an AjaxTabbedPanel.

A set breakpoint in AjaxLazyLoadPanel constructor at AbstractDefaultAjaxBehavior.respond method is never reached.
The attached quickstart will demonstrate the behavior.

This is reproducible with version 6.0.0-beta1 and 6.0-SNAPSHOT.",JDK6 Linux x64,,,,,,,,,,,,,,,,,,,,,17/Apr/12 15:55;xomit;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12522965/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-04-20 15:21:04.089,,,no_permission,,,,,,,,,,,236119,,,Mon Apr 23 08:10:49 UTC 2012,,,,,,0|i0k8pb:,116227,,,,,,,,20/Apr/12 15:21;mgrigorov;The app runs fine when run with 'mvn jetty:run' or deployed in web container. It fails only when started in embedded Jetty because Wicket Ajax resources (like wicket-ajax-jquery.js) cannot be found in the classpth for some reason.,"20/Apr/12 15:31;mgrigorov;By using 6.0.0-beta1 all is fine even with Start.java (embedded Jetty).
But even starting wicket-examples with StartExamples.java in 6.0-SNAPSHOT fails here. It could be something wrong in my IDE but could be another problem...","20/Apr/12 15:32;xomit;Sorry, forgot to mention this. Try to switch the tabs a second time. The first click on ""Tab B"" will correctly render ""Content B"". But switching back to ""Tab A"" and then again back to ""Tab B"" fails to render ""Content B"".","20/Apr/12 16:02;mgrigorov;Thanks for the clarification!
I just pushed a fix in 6.0-SNAPSHOT. Please test it and give feedback.
Then I'll port it back to 1.5.x.",20/Apr/12 22:38;xomit;Your provided fix solves the issue as far as I'm concerned.,"23/Apr/12 08:10;mgrigorov;Solved by using ""OnDomReady"" header contribution.
This is how it works in 1.5.x too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix missing in 1.4.19, was fixed in 1.3.3:  Discrepancy between Button implementation of getForm and the code in Form.findSubmittingButton()",WICKET-4506,12551505,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,ishai,ishai,18/Apr/12 18:25,20/Apr/12 14:23,13/Mar/19 23:17,20/Apr/12 14:23,1.4.19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"There is a discrepancy between Button implementation of getForm (derived from FromComponent) and the code in org.apache.wicket.markup.html.form.Form.findSubmittingButton()
Last one assumes form can be null while org.apache.wicket.markup.html.form.FormComponent.getForm() throws an exception if it is so

This was fixed in 1.3.3 based on https://issues.apache.org/jira/browse/WICKET-1414. Please migrate the fix to 1.4 code line.","Windows 7
IE 8
JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-04-20 14:06:59.089,,,no_permission,,,,,,,,,,,236313,,,Fri Apr 20 14:06:59 UTC 2012,,,,,,0|i0k8ov:,116225,,,,,,,,"20/Apr/12 14:06;mgrigorov;Thanks for reporting this problem!
1.4.x is frozen and it receives only security related fixes. The fix will be committed only in 1.5.x and 6.x branches.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"HtmlHandler wrongly handles tags not requiring closed tags if the markup does not have ""top"" level tag",WICKET-4494,12550666,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mjirkovsky,mjirkovsky,12/Apr/12 11:52,13/Apr/12 11:48,13/Mar/19 23:17,13/Apr/12 11:48,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"Hi, 

I have custom component (extends MarkupContainer implements IMarkupCacheKeyProvider, IMarkupResourceStreamProvider) which fetches its HTML markup from database. 
Following HTML markup: 

<img alt="""" src=""logo.png""> 
<br>Some text 
<br>Some more text 

causes following error: 

2012-04-12 10:52:53,012 [http-8080-6] ERROR: Unexpected error occurred 
Unable to find close tag for: '<img alt=""logo"" src=""logo.png"">' in org.apache.wicket.util.resource.StringResourceStream@3d7e16fc 
 MarkupStream: [unknown] 
        at org.apache.wicket.markup.MarkupFragment.<init>(MarkupFragment.java:127) 
        at org.apache.wicket.markup.MarkupStream.getMarkupFragment(MarkupStream.java:485) 
        at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:244) 
        at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1421) 
        at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1596) 
        at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1571) 
        at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1525) 

I think the problem is that org.apache.wicket.markup.parser.filter.HtmlHandler does not handle such markup correctly. It does not call ComponentTag.setHasNoCloseTag(true) for the img tag. Such call is missing in postProcess() method. I think that this problem can be fixed by inserting: 

top.setHasNoCloseTag(true); 

after line 80 in HtmlHandler.java file. 


Michal",,,,,,,,,,,,,,,,,,,,,,12/Apr/12 11:53;mjirkovsky;HtmlHandlerTest.tgz;https://issues.apache.org/jira/secure/attachment/12522404/HtmlHandlerTest.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-04-13 11:48:53.335,,,no_permission,,,,,,,,,,,235530,,,Fri Apr 13 11:48:53 UTC 2012,,,,,,0|i0k8q7:,116231,,,,,,,,12/Apr/12 11:53;mjirkovsky;Quickstart app that demonstrates the problem.,13/Apr/12 11:48;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TextTemplate in RenderHead() on component doesn't Re-Render for every page,WICKET-4487,12549594,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,raystorm,raystorm,05/Apr/12 00:52,10/Apr/12 12:00,13/Mar/19 23:17,10/Apr/12 12:00,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"I have a project that uses a menu thats repeated on every page.  If I first view it on a mounted page /PageName and then look at it on a BookMarkable page
/wicket/bookmarkable/page.class.name?foo  the images referenced in my template do not appear.(the javascript template image strings do not change)
",Tomcat 6.x,,,,,,,,,,,,,,,,,,,,,05/Apr/12 11:37;bitstorm;PackageTextTemplateVersion.zip;https://issues.apache.org/jira/secure/attachment/12521489/PackageTextTemplateVersion.zip,05/Apr/12 11:31;mgrigorov;WICKET-4487.patch;https://issues.apache.org/jira/secure/attachment/12521488/WICKET-4487.patch,05/Apr/12 00:56;raystorm;test.war;https://issues.apache.org/jira/secure/attachment/12521436/test.war,05/Apr/12 00:56;raystorm;test.zip;https://issues.apache.org/jira/secure/attachment/12521437/test.zip,,,,,4.0,,,,,,,,,,,,,,,,,,,2012-04-05 11:03:39.374,,,no_permission,,,,,,,,,,,234585,,,Thu Apr 05 18:03:46 UTC 2012,,,,,,0|i0k8qv:,116234,,,,,,,,05/Apr/12 00:56;raystorm;Here is a compiled war and the sources I used to create it.,"05/Apr/12 11:03;bitstorm;Hi,

actually this is not a bug. Wicket keeps a registry of every  ResourceReference used in an application. The registry its like a Map where the key is composed, among other things, by Class name and resource name which in case of TextTemplateResourceReference are the scope Class and the fileName (i.e. BasePage.class and ""includes/javascript/jqueryslidemenu.js"")
When you go from homepage to a bookMarkable one Wicket keeps using the previous TextTemplateResourceReference with the wrong url for arrow pics.
To solve your problem you could use a PackageTextTemplate to generate the dynamic JavaScript.

I will upload your code with this solution in a few minutes... ","05/Apr/12 11:13;mgrigorov;Hey Andrea,

Sorry for not assigning the ticket when I start working on it. Now we both worked on the same task.. Not that this is too bad, now we have two opinions ;-)

I think it is actually a bug. TextTemplateResourceReference is just too static in its current state. Since I'm not sure whether it should be static or dynamic I'll attach my patch here to discuss it.","05/Apr/12 11:31;mgrigorov;Attaching a patch that makes TextTemplateResourceReference more dynamic by:
constructing its resource data on the fly and by re-registering itself in the global ResourceReferenceRegistry because otherwise its variableModel got stale.","05/Apr/12 12:12;bitstorm;Don't worry Martin!
I will take a look at the patch as soon as possible","05/Apr/12 17:34;raystorm;Andrea, thanks for the solution to keep me moving forward.

Martin, thanks for telling me to file a bug report.   I didn't think it was a bug with wicket.  I thought maybe there was some other way I should be storing/accessing resources for my application.","05/Apr/12 18:03;bitstorm;@Martin

The patch looks good, I don't see any reason to not integrate it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket-core-1.5.5.jar not closed when Application is undeployed from directory,WICKET-4458,12546928,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bht@actrix.gen.nz,bht@actrix.gen.nz,17/Mar/12 22:56,09/Apr/12 09:04,13/Mar/19 23:17,02/Apr/12 09:46,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"How to reproduce:

- Create a 1.5.5 quickstart
- deploy it on the GlassFish server with directory deployment (I use NetBeans which is easy)
- open the application in the browser
- undeploy the application
- try to execute the maven clean goal or try to delete the target dir

Error in GlassFish log:
Unable to delete file WEB-INF\lib\wicket-core-1.5.5.jar

I first thought that this was a GlassFish issue such as:

http://java.net/jira/browse/GLASSFISH-17339

To eliminate that, I added glassfish\modules\war-util.jar to the project and wrote code to let GlassFish close all jar files:

In the Application class:

    @Override
    public void onDestroy() {
        super.onDestroy();
        ClassLoader parentClassLoader = this.getClass().getClassLoader();
        ClassLoader classLoader;
        do{
            classLoader = parentClassLoader; 
            if(classLoader instanceof WebappClassLoader){
                WebappClassLoader glassFishLoader = (WebappClassLoader)classLoader;
                glassFishLoader.closeJARs(true);
                break;
            }
            parentClassLoader = classLoader.getParent();
        }while(parentClassLoader != classLoader && parentClassLoader != null);
        
    }
	
but this did not fix the problem.
","java version ""1.6.0_30""
Java(TM) SE Runtime Environment (build 1.6.0_30-b12)
Java HotSpot(TM) Client VM (build 20.5-b03, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-03-19 14:28:47.309,,,no_permission,,,,,,,,,,,232086,,,Mon Apr 09 09:04:31 UTC 2012,,,,,,0|i0k8sf:,116241,,,,,,,,"19/Mar/12 14:28;mgrigorov;Hi,

Can you test with 1.5.4 and verify that there is no problem with it ?
Did you run the tool described in the GF ticket (https://blogs.oracle.com/quinn/entry/tool_for_diagnosing_failed_glassfish) ? I see it should point where is the file leak.

Sorry for asking you to do these checks but I use neither GF nor Netbeans and it will take me more time to setup and debug it.","21/Mar/12 07:48;bht@actrix.gen.nz;I understand. No problem. Actually I was the one who noticed that the link to the tool was broken - now it is back.

- Shutdown GlassFish
- start GlassFish in debug mode
- open the maven project in NetBeans
- run the tool: 
java -classpath C:\zip\zip1\java\util\ZipFileMonitor.jar;""%JAVA_HOME%/lib/tools.jar"" util.ZipFileMonitor -host 127.0.0.1 -port 9009 -filter wicket
- deploy/run the project
- undeploy the project
- execute the show command in the utility console

show
Current list of opened but unclosed jar files matching the filter:
Path ""C:\bt\java\servlet\Wicket\issues\_current\GlassFishJarNotReleased\myproject\target\myproject-1.0-SNAPSHOT\WEB-INF\lib\wiore-1.5.5.jar""
..Opened by hashCode object 1989 from:
    java.util.jar.JarFile.<init>(java\util\jar\JarFile.java:137)
    java.util.jar.JarFile.<init>(java\util\jar\JarFile.java:72)
    sun.net.www.protocol.jar.URLJarFile.<init>(sun\net\www\protocol\jar\URLJarFile.java:72)
    sun.net.www.protocol.jar.URLJarFile.getJarFile(sun\net\www\protocol\jar\URLJarFile.java:48)
    sun.net.www.protocol.jar.JarFileFactory.get(sun\net\www\protocol\jar\JarFileFactory.java:65)
    sun.net.www.protocol.jar.JarURLConnection.connect(sun\net\www\protocol\jar\JarURLConnection.java:104)
    sun.net.www.protocol.jar.JarURLConnection.getInputStream(sun\net\www\protocol\jar\JarURLConnection.java:132)
    java.net.URL.openStream(java\net\URL.java:1010)
    org.apache.wicket.Application.initializeComponents(org\apache\wicket\Application.java:499)
    org.apache.wicket.Application.initApplication(org\apache\wicket\Application.java:808)
    org.apache.wicket.protocol.http.WicketFilter.init(org\apache\wicket\protocol\http\WicketFilter.java:374)
    org.apache.wicket.protocol.http.WicketFilter.init(org\apache\wicket\protocol\http\WicketFilter.java:309)
    org.apache.catalina.core.ApplicationFilterConfig.getFilter(org\apache\catalina\core\ApplicationFilterConfig.java:264)
    org.apache.catalina.core.ApplicationFilterConfig.<init>(org\apache\catalina\core\ApplicationFilterConfig.java:120)
    org.apache.catalina.core.StandardContext.filterStart(org\apache\catalina\core\StandardContext.java:4685)
    org.apache.catalina.core.StandardContext.start(org\apache\catalina\core\StandardContext.java:5377)
    com.sun.enterprise.web.WebModule.start(com\sun\enterprise\web\WebModule.java:498)
    org.apache.catalina.core.ContainerBase.addChildInternal(org\apache\catalina\core\ContainerBase.java:917)
    org.apache.catalina.core.ContainerBase.addChild(org\apache\catalina\core\ContainerBase.java:901)
    org.apache.catalina.core.StandardHost.addChild(org\apache\catalina\core\StandardHost.java:733)
    com.sun.enterprise.web.WebContainer.loadWebModule(com\sun\enterprise\web\WebContainer.java:2018)
    com.sun.enterprise.web.WebContainer.loadWebModule(com\sun\enterprise\web\WebContainer.java:1669)
    com.sun.enterprise.web.WebApplication.start(com\sun\enterprise\web\WebApplication.java:109)
    org.glassfish.internal.data.EngineRef.start(org\glassfish\internal\data\EngineRef.java:130)
    org.glassfish.internal.data.ModuleInfo.start(org\glassfish\internal\data\ModuleInfo.java:269)
    org.glassfish.internal.data.ApplicationInfo.start(org\glassfish\internal\data\ApplicationInfo.java:301)
    com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(com\sun\enterprise\v3\server\ApplicationLifecycle.java:461)
    com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(com\sun\enterprise\v3\server\ApplicationLifecycle.java:240)
    org.glassfish.deployment.admin.DeployCommand.execute(org\glassfish\deployment\admin\DeployCommand.java:389)
    com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(com\sun\enterprise\v3\admin\CommandRunnerImpl.java:348)
    com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(com\sun\enterprise\v3\admin\CommandRunnerImpl.java:363)
    com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(com\sun\enterprise\v3\admin\CommandRunnerImpl.java:1085)
    com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(com\sun\enterprise\v3\admin\CommandRunnerImpl.java:95)
    com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(com\sun\enterprise\v3\admin\CommandRunnerImpl.java:
    com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(com\sun\enterprise\v3\admin\CommandRunnerImpl.java:
    com.sun.enterprise.v3.admin.AdminAdapter.doCommand(com\sun\enterprise\v3\admin\AdminAdapter.java:461)
    com.sun.enterprise.v3.admin.AdminAdapter.service(com\sun\enterprise\v3\admin\AdminAdapter.java:212)
    com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(com\sun\grizzly\tcp\http11\GrizzlyAdapter.java:179)
    com.sun.enterprise.v3.server.HK2Dispatcher.dispath(com\sun\enterprise\v3\server\HK2Dispatcher.java:117)
    com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(com\sun\enterprise\v3\services\impl\Container.java:354)
    com.sun.enterprise.v3.services.impl.ContainerMapper.service(com\sun\enterprise\v3\services\impl\ContainerMapper.java:195)
    com.sun.grizzly.http.ProcessorTask.invokeAdapter(com\sun\grizzly\http\ProcessorTask.java:849)
    com.sun.grizzly.http.ProcessorTask.doProcess(com\sun\grizzly\http\ProcessorTask.java:746)
    com.sun.grizzly.http.ProcessorTask.process(com\sun\grizzly\http\ProcessorTask.java:1045)
    com.sun.grizzly.http.DefaultProtocolFilter.execute(com\sun\grizzly\http\DefaultProtocolFilter.java:228)
    com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(com\sun\grizzly\DefaultProtocolChain.java:137)
    com.sun.grizzly.DefaultProtocolChain.execute(com\sun\grizzly\DefaultProtocolChain.java:104)
    com.sun.grizzly.DefaultProtocolChain.execute(com\sun\grizzly\DefaultProtocolChain.java:90)
    com.sun.grizzly.http.HttpProtocolChain.execute(com\sun\grizzly\http\HttpProtocolChain.java:79)
    com.sun.grizzly.ProtocolChainContextTask.doCall(com\sun\grizzly\ProtocolChainContextTask.java:54)
    com.sun.grizzly.SelectionKeyContextTask.call(com\sun\grizzly\SelectionKeyContextTask.java:59)
    com.sun.grizzly.ContextTask.run(com\sun\grizzly\ContextTask.java:71)
    com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(com\sun\grizzly\util\AbstractThreadPool.java:532)
    com.sun.grizzly.util.AbstractThreadPool$Worker.run(com\sun\grizzly\util\AbstractThreadPool.java:513)
    java.lang.Thread.run(java\lang\Thread.java:662)

This tool appears to be quite useful :)

","21/Mar/12 16:30;bitstorm;No problem under Ubuntu 10.04 64 bit and OpenJDK 6.0. Here's the list of what I've done

-Create a 1.5.5 quickstart
-Run mvn deploy
-Started GlassFish 3.1 from Eclipse
-Entered into admin console and deployed the snapshot directory (./target/myproject-1.0-SNAPSHOT).
-Opened the application in the browser
-Undeployed the application
- Run maven clean (while GlassFish was still running)

","26/Mar/12 08:18;mgrigorov;Here is the code related to this stacktrace (o.a.w.Application.java):

	InputStream in = null;
				try
				{
					final URL url = resources.next();
					final Properties properties = new Properties();
					in = url.openStream();   // LINE 499
					properties.load(in);
					load(properties);
				}
				finally
				{
					IOUtils.close(in);
				}

As you can see we close the input stream in 'finally'. It is not even 'IOUtils.closeQuietly()' so if there is an error during #close() it will stop the initialization of the application.
For some reason I don't trust this detection ...","30/Mar/12 07:04;bht@actrix.gen.nz;Thanks for the help.

I appreciate your efforts and comments. They lead me to suspect that this is a GlasFish issue not w Wicket one. However this reproduces on Windows so I would prefer this to be closed as invalid not ""Cannot Reproduce"".","30/Mar/12 14:48;tjquinn;Martin, you have misunderstood the meaning of the stack trace. Closing the stream is not sufficient in this case to fully close the file.  The classes near the top of the stack trace show that the URL opened had scheme ""jar"" and Java SE, once it opens the JAR to resolve such a URL, leaves the JAR open by default even after the stream has been closed.

One solution could be for the initializeComponents code, instead of using url.openStream, to use 

final URLConnection cnx = url.openConnection(url);
cnx.setUseCaches(false);
in = cnx.getInputStream();

(and of course to close the stream as it already does).

- Tim","30/Mar/12 14:57;mgrigorov;Hi Tim,

Can you refer to some documentation that specifies this behavior ?
I don't see anything specific in JarUrlConnection.
In UrlConnection there is:
* Invoking the <tt>close()</tt> methods on the <tt>InputStream</tt> or <tt>OutputStream</tt> of an 
 * <tt>URLConnection</tt> after a request may free network resources associated with this 
 * instance, unless particular protocol specifications specify different behaviours 
 * for it.

which opens the door for the impls to do nothing as you said...
But lsof also doesn't show open file descriptor to the .jar here ...","30/Mar/12 15:08;tjquinn;Hi, Martin.

I don't know of any doc that states categorically that JarURLConnection behaves this way but as you said the JavaDoc leaves that option open to the implementation.  It has been a while but I remember reading the relevant Java SE source code and finding exactly this caching behavior.  I do not know if this applies in the lsof experiment you ran, but GC can trigger JAR closes so it can be very unpredictable when to expect the file to be left open vs. closed.  

","30/Mar/12 19:52;bht@actrix.gen.nz;I would suggest to re-open this issue.

While fixing it, it might be prudent to check the framework for more occurrences of similar code using JarUrlConnection.  ","01/Apr/12 21:02;bitstorm;I've run the same test of Ubuntu under Windows xp 32 bit without any problems. I've both tried with Eclipse + Glassfish 3.1.2 and NetBeans 7.1.1 + Glassfish 3.1.2. Java version was 1.6.0_31.

Could it be due to some kind of security software (like an antivirus) which holds the open files?

@bernard 
Which version of Windows are you using?",02/Apr/12 07:24;mgrigorov;I was able to reproduce it and I'll try Tim's suggestion.,"02/Apr/12 09:14;mgrigorov;The improvement is applied in 1.5.x and 6.x.
I don't see the opened file descriptor in lsof output anymore.
Please re-test with 1.5-SNAPSHOT before 1.5.6 is out.","09/Apr/12 09:04;bht@actrix.gen.nz;Hi Martin and Andrea,

Thanks very much! It works for me, in fact I have made both tests and I can see the difference immediately. I use WinXP 32bit. In 1.5.5 it always reproduces for me. Sorry for the frustration at your end - these things can be tricky.

BTW do you know how to change email in Jira? My ID is the old email address. My email has changed and therefore I was a bit slow responding because I don't get Jira's emails anymore.",,,,,,,,,,,,,,,,,,,,,,,,,,
"Inline Enclosure needs to check isVisibleInHierarchy, not only isVisible",WICKET-4475,12548178,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,osiefart,osiefart,26/Mar/12 20:32,02/Apr/12 13:35,13/Mar/19 23:17,02/Apr/12 09:46,1.4.20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,Enclosure,Inline,visibility,,,,"If the Visibility of the child component from the inline enclure uses setVisibleAllowed, the enclosure is rendered if the component is not visible. Take a look to the updateVisibility-method of the InlineEnclosure-Class. In my opinion the method should check for isVisibleInHierarchy.
","Mac Os, Java 6",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-04-02 08:27:50.463,,,no_permission,,,,,,,,,,,233275,,,Mon Apr 02 08:27:50 UTC 2012,,,,,,0|i0k8s7:,116240,,,,,,,,26/Mar/12 20:40;osiefart;Showcase: https://github.com/osiefart/wicket-jira-bugs/tree/master/WICKET-4475,"02/Apr/12 08:27;mgrigorov;I updated the code to use determineVisilibility() instead of #isVisible() so visibilityAllowed() will be taken into account.
But it seems you didn't understand the purpose of Inline in InlineEnclosure. The markup element for the InlineEnclosure is always rendered, even if the child is invisible, this way it can be updated in Ajax requests because the placeholder tag is there.
If you want the markup of the enclosure to not be rendered at all then you need <wicket:enclosure>, but in this case it wont work in Ajax.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TagUtils uses wrong separator in its #copyAttributes(),WICKET-4485,12549148,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,02/Apr/12 12:16,02/Apr/12 12:28,13/Mar/19 23:17,02/Apr/12 12:28,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.markup.TagUtils#copyAttributes(Component, ComponentTag) uses "", "" as a separator for the attributes that it copies.
If the attribute is 'class' then the separator should be "" "", if it is ""style"" or ""onclick"" then it should be ""; "", ...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,234139,,,2012-04-02 12:16:17.0,,,,,,0|i0k8r3:,116235,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket:link component ids get too long,WICKET-4484,12548547,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,jesselong,jesselong,28/Mar/12 20:38,29/Mar/12 16:52,13/Mar/19 23:17,29/Mar/12 16:52,1.5.0,1.5.1,1.5.2,1.5.3,1.5.4,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"The resolve() method of org.apache.wicket.markup.parser.filter.WicketLinkTagHandler appends modifies the original tag id and appends the next autoId to it. The problem is that this is done during every render, the the component id gets longer and longer.

I had a situation on a production server where component ids were over 10k. RepeatingView just added to the problem.

Long story short, I think resolve should just return the TransparentWebMarkupContainer with the modified id, and not set the original id.",,,,,,,,,,,,,,,,,,,,,,28/Mar/12 20:40;jesselong;WICKET-4484.patch;https://issues.apache.org/jira/secure/attachment/12520317/WICKET-4484.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-03-29 16:52:34.025,,,no_permission,,,,,,,,,,,233644,,,Thu Mar 29 16:52:34 UTC 2012,,,,,,0|i0k8rb:,116236,,,,,,,,"28/Mar/12 20:40;jesselong;This is what I have done to resolve the issue. I have tested and it works for me. Please verify that this is correct, I'm not sure I understand the implications 100%.","29/Mar/12 16:52;svenmeier;You're dead right, the tag id is not supposed to be changed by the component resolver.

Thanks for reporting this issue!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component#setDefaultModel() should call #modelChanging(),WICKET-4483,12548513,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,28/Mar/12 15:51,29/Mar/12 11:24,13/Mar/19 23:17,29/Mar/12 11:24,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta2,,,wicket,,,,,,,0,,,,,,,"Component#setDefaultModel() should call #modelChanging() as #setDefaultModelObject() does.
It worked by chance so far because addStateChange() is called.

http://markmail.org/thread/uxl6uufusggqbb6s",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,233610,,,Thu Mar 29 11:24:59 UTC 2012,,,,,,0|i0k8rj:,116237,,,,,,,,"29/Mar/12 11:24;mgrigorov;Fixing only in 6.x because there wasn't any problem with it. I noticed it by chance.
No need to make this change in the stable branch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SmartLinkLabel failing to process email with -,WICKET-4477,12548269,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,leadseeker,leadseeker,27/Mar/12 07:26,27/Mar/12 11:25,13/Mar/19 23:17,27/Mar/12 11:16,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket-extensions,,,,,,,0,,,,,,,"In a similar vein to WICKET-3174 - using SmartLinkLabel with an email address that includes a ""-"" generates a link only on the right-most part of the address. 

Example: 
- my-test@example.com 
Will generate a link like: 
- my-<a href=""mailto:test@example.com"">test@example.com</a> 

The addition of the ""-"" char is a valid email address format. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-03-27 11:16:40.357,,,no_permission,,,,,,,,,,,233366,,,Tue Mar 27 11:25:43 UTC 2012,,,,,,0|i0k8rz:,116239,,,,,,,,27/Mar/12 11:16;svenmeier;Thanks for reporting this issue.,27/Mar/12 11:25;leadseeker;Thanks for fixing it!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
processScript in Wicket.Head.Contributor doesn't remove CDATA - eval fails in IE,WICKET-4446,12546231,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,davesman,davesman,13/Mar/12 13:44,19/Mar/12 14:46,13/Mar/19 23:17,19/Mar/12 14:46,1.5.4,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"There's incosistency between org.apache.wicket.util.string.JavaScriptUtils and wicket-ajax.js
Even though the source is marked with comment

	 * Script open tag. If this tag is changed, also update Wicket.Head.Contributor.processScript()
	 * function from wicket-ajax.js

In JavaScriptUtils there are:
public final static String SCRIPT_CONTENT_PREFIX = ""\n/*<![CDATA[*/\n"";
public final static String SCRIPT_CONTENT_SUFFIX = ""\n/*]]>*/\n"";

in wicket-ajax.js (line 1742 in 1.5.5 version) there are:
// get rid of prefix and suffix, they are not eval-d correctly
text = text.replace(/^<!--\/\*--><!\[CDATA\[\/\*><!--\*\//, """");
text = text.replace(/\/\*-->]]>\*\/$/, """");

As you can see the sequences in java and javascript DO NOT MATCH! There are missing new lines in JS and there are extra HTML comments <!-- --> that aren't added by the Java code.
The result is, that these extra lines aren't removed and IE fails to eval such a javascript. I could fix this issue by editing the wicket-ajax.js like this:
text = text.replace(/^\n\/\*<!\[CDATA\[\*\/\n/, """");
text = text.replace(/\n\/\*]]>\*\/\n$/, """");

But we need it fixed officially, because we use gradle for Wicket dependency.
","Windows 7 64-bit
Firefox 10 (is OK) and IE 8,9 (they fail)
Wicket 1.5.4 and 1.5.5 tested
Jetty",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,231389,,,Tue Mar 13 13:45:30 UTC 2012,,,,,,0|i00vq7:,3072,,,,,,,,"13/Mar/12 13:45;davesman;Note to the enviroment: FireFox is fine - it's javascipr engine can obviously handle such eval expression, but IE cannot (tested version 8 and 9)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Repaint the initial state of the page if the page is expired, a new one is freshly created and the requested component is not available ",WICKET-4454,12546547,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,15/Mar/12 09:42,15/Mar/12 09:56,13/Mar/19 23:17,15/Mar/12 09:56,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"From the users@ mailing list: http://markmail.org/thread/ttox5ymihtf5y55i

A ComponentNotFoundException is being thrown if the page is expired, a new page is freshly created and due to component replacement the requested sub-component is not reachable.
The parent component depends on whether a user is logged in. The sub-component has a link inside which is not reachable after page expiration because a different parent component is used in this case.",,,,,,,,,,,,,,,,,,,,,,15/Mar/12 09:43;mgrigorov;wicketcompo2.zip;https://issues.apache.org/jira/secure/attachment/12518440/wicketcompo2.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,231705,,,2012-03-15 09:42:54.0,,,,,,0|i00vov:,3066,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractClassResolver recreates URL incorrectly,WICKET-4443,12545581,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jesselong,jesselong,08/Mar/12 00:29,12/Mar/12 13:55,13/Mar/19 23:17,12/Mar/12 13:55,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta1,,wicket,,,,,,,0,classloader,,,,,,"AbstractClassResolver converts java.net.URLs to their external form (java.lang.String), then converts them back to java.net.URLs. It looks like the conversion to external form is for comparison between URLs (comparing URLs is slow, Strings not so - see WICKET-3867), because we only want one result per URL (Set<URL>).

The problem is that, when converting from the external form back to a java.net.URL, the no context URL is given to the URL constructor, just the external form String is given. Passing a context URL to the java.net.URL constructor is the only way of setting the URLStreamHandler related to the URL. So, if you have some exotic URL schema, like I do, using protocols the standard Java libraries dont know about, you can no longer load your resources.

Please see the code in CompoundClassResolver#getResources() - it implements a unique list of URL by comparing the external forms of the URLs, while still managing to use the original URL objects, with their URLStreamHandlers attached.",,,,,,,,,,,,,,,,,,,,,,08/Mar/12 01:39;jesselong;WICKET-4443.patch;https://issues.apache.org/jira/secure/attachment/12517510/WICKET-4443.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-03-08 13:34:58.009,,,no_permission,,,,,,,,,,,230767,,,Mon Mar 12 13:55:19 UTC 2012,,,,,,0|i00vqf:,3073,,,,,,,,"08/Mar/12 01:39;jesselong;Patch that changes various parts, mainly IClassResolvers to use a TreeSet with a Comparator that compares URLs' toExternalForm when a Set<URL> is needed.

Also, add some docs about possible MalformedURLException in UrlResourceStreamReference (related to this bug)","08/Mar/12 13:34;mgrigorov;Thanks for the patch!

I added a note to UrlResourceStreamReference's javadoc explaining how to deal with custom URL schemes. Unfortunately there is no getter method in j.n.URL to get its handler and reuse it later ...","09/Mar/12 07:19;jesselong;UrlResourceStreamReference caches the URL as a string. Is there any reason for this? If we just keep a reference to the URL object, it may suffice.

My first thought was that it caches the URL as a string in external form because it needs to be serialized, but UrlResourceStreamReference does not implement {Serializable, IClusterable} and neither does its parent - AbstractResourceStreamReference, and neither does the interface require serialization - IResourceStreamReference. Could we not just let UrlResourceStreamReference keep a reference to the original URL?",10/Mar/12 14:26;mgrigorov;I'll investigate this option next week.,"11/Mar/12 07:10;jesselong;I looked around. UrlResourceStreamReference is package private to the org.apache.wicket.util.resource.locator.caching package. It is used ONLY by the CachingResourceStreamLocator class, which converts UrlResourceStream instances to UrlResourceStreamReference instances, and stores them in a java.util.Map.

This map acts as a cache of the result of locating resources, including not-found entries. The idea behind the cache it to avoid having to FIND resources every time they are required, but just use the caches find result from the map.

The map is never serialized, as CachingResourceStreamLocator is not Serializable and neither is IResourceStreamLocator, which it implements.

IResourceStreamLocator is mainly used from: Application.get().getResourceSettings().getResourceStreamLocator().

I vote we just keep a reference to the original URL.

Pro: we can load arbitrary URLs, from any url scheme, using its configured URLStreamHandler.

Con: the URL object probably uses slightly more memory that the external form string.",12/Mar/12 13:55;mgrigorov;The suggestion is committed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Url to the home page is not correct when the current base url has only one segment,WICKET-3337,12495703,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,16/Jan/11 12:11,08/Mar/12 06:32,13/Mar/19 23:17,16/Jan/11 12:36,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"The link ""go back"" in all Ajax examples in wicket-examples is not correct.
In details:
 1) current base url looks like : autocomplete?0 (i.e. one segment + one query parameter)
 2) ""go back"" points to the application home page (Index.class)
 3) RequestCycle.mapUrlFor(IRequestHandler) creates Url("""") for the home page
 4) UrlRenderer.renderUrl(homePageUrl) incorrectly returns """" instead of ""."" for this input",,,,,,,,,,,,,,,,,,,WICKET-3363,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204139,,,Sun Jan 16 12:36:36 UTC 2011,,,,,,0|i0kb8n:,116638,,,,,,,,16/Jan/11 12:36;mgrigorov;Fixed with r1059546,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The datepicker components stops popup in Chrome 17. ,WICKET-4410,12542558,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hype,hype,14/Feb/12 15:45,07/Mar/12 16:22,13/Mar/19 23:17,07/Mar/12 16:22,1.4.19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket-datetime,,,,,,,0,chrome,datepicker,,,,,"The datepicker components stops popup in Chrome 17. To reproduce bug follow steps bellow:
1) Fill in date in the input. 
2) Repeat some times cycle of show-hide.

Chome's Console will show error:
Uncaught TypeError: this is not a Date object.
YAHOO.widget.DateMath.clearTime calendar.js:1052
Calendar.isDateOOB calendar.js:4037
Calendar.select calendar.js:3702
Wicket.DateTime.showCalendar wicket-date.js:154
showCalendar wicket-date.js:180
_addListener.wrappedFn event.js:937

Surrounding code in clearTime js function (from calendar.js) with try/finally bug fixes.","Windows XP 32bit, Google Chrome 17.",7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,14/Feb/12 15:50;hype;ASF.LICENSE.NOT.GRANTED--datepicker_chrome_bug.jpg;https://issues.apache.org/jira/secure/attachment/12514499/ASF.LICENSE.NOT.GRANTED--datepicker_chrome_bug.jpg,14/Feb/12 15:48;hype;QuickStartDatePicker.war;https://issues.apache.org/jira/secure/attachment/12514498/QuickStartDatePicker.war,07/Mar/12 15:12;mgrigorov;datepickerbug-1.5.tgz;https://issues.apache.org/jira/secure/attachment/12517409/datepickerbug-1.5.tgz,07/Mar/12 13:51;hype;datepickerbug.zip;https://issues.apache.org/jira/secure/attachment/12517401/datepickerbug.zip,,,,,4.0,,,,,,,,,,,,,,,,,,,2012-02-22 12:57:21.895,,,no_permission,,,,,,,,,,,227844,,,Wed Mar 07 16:22:33 UTC 2012,,,,,,0|i00vtj:,3087,,,,,,,,14/Feb/12 15:48;hype;Looking for similar bug I noticed that the same bug appears in WICKET-3360 and took web app from it.,"22/Feb/12 12:57;mgrigorov;Currently wicket-datetime uses yui 2.8.1RC2. Looking at 2.9.0 (last from the 2.x series) changelog I don't see a fix which sounds like this problem.
YUI team said that this is the last release of 2.x and it is recommended to use 3.x (3.4.1 at the moment).
","24/Feb/12 08:53;mgrigorov;YUI is updated to 2.9.0 in 1.5.x.
Can you try whether your problem is gone there ? Or create a quickstart app that I can modify. See http://wicket.apache.org/start/quickstart.html",28/Feb/12 10:24;mgrigorov;Closing until a quickstart app with sources is provided.,"07/Mar/12 13:51;hype;Sorry for such a delay.

I've tested this project in chrome for many times and I can say that this bug is very unstable. One time it comes up after one cycle of calendar show-hide. Another time it may come up after 15 cycles. But each time Chrome's console points at ""Uncaught TypeError: this is not a Date object."" calendar.js:1052.",07/Mar/12 13:58;mgrigorov;Reopen since there is a quickstart app now.,"07/Mar/12 15:12;mgrigorov;I cannot run your quickstart for some reason...
It fails for me with:

java.lang.ClassNotFoundException: org.joda.time.ReadWritableInstant
     at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
     at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
     at java.security.AccessController.doPrivileged(Native Method)
     at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
     at java.lang.ClassLoader.loadClass(ClassLoader.java:423)
     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
     at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
     at com.mycompany.HomePage.<init>(HomePage.java:38)
     at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
     at org.apache.wicket.session.DefaultPageFactory.createPage(DefaultPageFactory.java:188)
....

I guess it is some classpath clash with another project in my IDE.

I'm attaching your app working with Wicket 1.5-SNAPSHOT.
It works for me without problem.
But I have Chrome 19.x here and Wicket 1.5 uses YUI 2.9.0 while 1.4.x - 2.8.2.",07/Mar/12 16:18;hype;Can't reproduce bug in your project. It seems like it was fixed in next versions. Thank you.,07/Mar/12 16:22;mgrigorov;I guess the upgrade of YUI fixes it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pressing ESCAPE doesn't work for AjaxEditable components,WICKET-4436,12544911,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,02/Mar/12 10:26,02/Mar/12 10:41,13/Mar/19 23:17,02/Mar/12 10:41,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,,,wicket-extensions,,,,,,,0,,,,,,,Pressing Escape key doesn't cancel the typing of new label in Chrome.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,230097,,,Fri Mar 02 10:41:32 UTC 2012,,,,,,0|i0k8sv:,116243,,,,,,,,"02/Mar/12 10:41;mgrigorov;Fixed in 1.5.x.
In 6.x it is fixed already.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
autocomplete: show list on empty input is ignored if show list on focus gain is false,WICKET-4392,12541606,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,gabi.boros,gabi.boros,07/Feb/12 11:59,23/Feb/12 14:53,13/Mar/19 23:17,09/Feb/12 12:05,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.5,6.0.0-beta1,wicket-extensions,,,,,,,0,,,,,,,"Like the summary says, show list on empty input is ignored if show list on focus gain is false",,,,,,,,,,,,,,,,,,,,,,07/Feb/12 12:01;gabi.boros;fix-WICKET-4392.patch;https://issues.apache.org/jira/secure/attachment/12513599/fix-WICKET-4392.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,226893,,,Tue Feb 07 12:01:22 UTC 2012,,,,,,0|i00vvb:,3095,,,,,,,,07/Feb/12 12:01;gabi.boros;patch for fixing the issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket 1.5 rewrites template content where it should not,WICKET-4425,12543490,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pointbreak,pointbreak,21/Feb/12 13:53,22/Feb/12 09:32,13/Mar/19 23:17,22/Feb/12 09:32,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"I have recently upgraded from Wicket 1.4.14 to 1.5.4. One issue that I
encountered is that <script> tags in panel templates are rewritten by
Wicket, even when the <script> tags in question have no wicket handlers
attached to them. I.e. the following panel template (notice that there
are no wicket:id attributes whatsoever):

<wicket:panel>
    <script id=""template-upload"" type=""text/x-jquery-tmpl"">
        <span>${name}</span>
    </script>
</wicket:panel>

Would render in the panel as:

<script id=""template-upload"" type=""text/x-jquery-tmpl"">
/*<![CDATA[*/
    <span>${name}</span>
/*]]>*/
</script>

Imho this is unwanted behavior that is a regression from the behavior in
Wicket 1.4.x (or at least 1.4.14). Wicket should not add content to the
body of the script tags (or any other tags in a template, unless their
content is provided programmatically), as it does not have the knowledge
how that affects the functionality of the page. Moreover, the content
that Wicket adds to these script tags is only correct for Javascript
(hence incorrect for the scripts in the example as they are not
javascript). In the above example adding /*, */
will change the functionality of the script tag. If the ""/*<![CDATA[*/""
part was necessary in the script tags above, they should be added by the
person that provides the template, not magically added by Wicket.

I have attached a quickstart that demonstrates the issue. The quickstart has a <script id=""script1"">Some Text</script> element in HomePage.html that (by javascript) is shown in an alert box. Because of this bug, the alert will now start with ""/*<![CDATA[*/"", while it should simply show the text. See HomePage.html in the provided quickstart.",,,,,,,,,,,,,,,,,,,,,,21/Feb/12 15:17;mgrigorov;WICKET-4425.patch;https://issues.apache.org/jira/secure/attachment/12515361/WICKET-4425.patch,21/Feb/12 13:54;pointbreak;myproject.zip;https://issues.apache.org/jira/secure/attachment/12515357/myproject.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-02-21 15:17:37.027,,,no_permission,,,,,,,,,,,228736,,,Tue Feb 21 20:12:34 UTC 2012,,,,,,0|i00vrr:,3079,,,,,,,,21/Feb/12 13:54;pointbreak;quickstart that demonstrates the issue,21/Feb/12 15:17;mgrigorov;Here is a patch that wraps the content of <script> element only if its type is a plain javascript.,"21/Feb/12 15:41;pointbreak;Martin, although your patch would probably solve my issue in this particular case, I don't think it is the correct approach. Imho the content of the <script> tags in this quickstart should not be altered by wicket in any way, even when they contain javascript. Wicket should not try to ""correct"" what it deems incorrect html in a template. The programmer that provides the template is responsible for that. It would be different if the script elements were attached to a wicket Component (i.e. had a wicket:id) and/or their content was programmatically added to them. But template code should be rendered as-is where not attached to wicket Components. That wicket alters content of html-elements that are not attached to Components a regression from pre 1.5 versions. I don't really understand why wicket would want to do that.","21/Feb/12 15:45;mgrigorov;I guess you didn't notice that I linked this ticket to the one that introduced this change. Check it and you'll see that we need to ""help"" in some cases.","21/Feb/12 16:21;pointbreak;Well actually I did see that, but am still confused. My point is that if there is a verbatim <script> tag in the template and its code needs to be wrapped inside ""/*<![CDATA[*/"", this should be done by the programmer that writes the <script> tag. NOT as an afterthought by wicket. I don't see why wicket should help here. (And Wicket did not do that in older versions).

This also applies to the issue you linked. The SCRIPT tag in that issue should itself contain the wrapping /*<![CDATA[*/ ... /*]]>*/ stuff. Not providing that is an error in the template, since the template can't be parsed by an XML/XHTML parser. Of course Wicket should be smart enough that if such a CDATA wrapper code is available inside contributions in the <wicket:head> section that it doesn't skip that in the context of e.g. ajax requests. But providing that wrapping code is part of the job of the template writer. I.e. I would argue that the the following template code is faulty, and to fix that is the responsibility of the template programmer:

<wicket:head>
<script>
if (someVariable < 0) {
someVariable = 0;
}
</script>
</wicket:head>","21/Feb/12 18:45;mgrigorov;The developer should not be aware of the fact that Wicket uses XML to deliver the HTML response in Ajax response. This CDATA is there exactly for this reason - to allow DOMParser (JS) to create a proper JS Document no matter what is the actual content.

Additionally <div/> is a valid by HTML specs but some browsers don't behave well with with. And Wicket tries to help in this situation as well, by expanding it to <div></div>.

I'll commit this patch soon if there are no technical problems with it.","21/Feb/12 20:12;pointbreak;You are right in that he/she should not need to be aware of details of how wicket TRANSPORTS. He/she should be aware how wicket PARSES templates though. Thus, that > and < have special meaning in XML/XHTML templates, and will trigger a parsing error unless used or escaped correctly. Why would the template parser not simply throw an error on templates that can't be parsed as valid XML or XHTML? Unbalanced tags in templates also result in parse errors from wicket (even when they are valid in HTML and accepted by browsers). Your <div/> vs. <div></div> example has nothing to do with this, as for either choice the template will be valid/parsable by any XML parser. A script tag that contains special characters is not. I don't understand why you would want a parser that accepts and and tries to fix incorrect use of special characters in scripts tags in template files. Additionally it does a pretty bad job at that. E.g. try this in a template for an actual error message from the template parser; just a variation of the same thing though:

<script>
alert(""</script>"");
</script>

But I fail in getting my message across, so eh.. go ahead, I am happy with your patch either way. Yet convinced that there is a flawed design decision in the (new) wicket template processing logic, that your patch not fixes but works around only for this specific case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Package resources leak file handles,WICKET-4359,12539755,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,25/Jan/12 12:23,20/Feb/12 21:19,13/Mar/19 23:17,25/Jan/12 14:21,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"It seems 1.5.4 introduced a new file handle leak with PackageResource.
lsof shows that there are opened input streams after using such resource.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,225258,,,Wed Jan 25 14:21:57 UTC 2012,,,,,,0|i00vzz:,3116,,,,,,,,"25/Jan/12 14:21;mgrigorov;Reverted partially the improvement in Connections.close(Connection) to call connection.getInputStream().close() only for FileUrlConnection. 
Still don't close for remote connections (like HttpUrlConnection).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
addDomReadyEvent broken for IE,WICKET-4111,12526010,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mpiepkorn,mpiepkorn,06/Oct/11 07:32,20/Feb/12 12:45,13/Mar/19 23:17,07/Oct/11 07:52,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,1.5.2,,wicket,,,,,,,1,core,event,ie,javascript,,,"Wicket.Event.addDomReadyEvent is broken in IE since 1.5.1. I identified WICKET-4080 as the cause of the problem: onreadystatechange with readyState=""loaded"" is sometimes fired before the document is fully loaded, causing scripts that reference DOM nodes to fail.

See http://msdn.microsoft.com/en-us/library/ms534359%28v=vs.85%29.aspx for the order of the readystate events.

The attached quickstart reproduces the issue (you may need to F5 a few times as it does not happen reliably). The actual JS error is:

SCRIPT5007: The property ""onkeydown"" has no value: The object is null or undefined
wicket-autocomplete-ver-1317728550188.js, Line 91 Character 9
",IE 7-9,,,,,,,,,,,,,,,,,,,,,06/Oct/11 07:33;mpiepkorn;wicket-qs-domready.zip;https://issues.apache.org/jira/secure/attachment/12497958/wicket-qs-domready.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-06 11:15:01.228,,,no_permission,,,,,,,,,,,49540,,,Mon Feb 20 12:45:23 UTC 2012,,,,,,0|i0k99r:,116319,,,,,,,,"06/Oct/11 11:15;papegaaij;It seems the domready handlers used by wicket-event.js are not reliable in IE. We've seen it skip 'complete' entirely, so waiting for 'complete' is not an option. Also, the order documented in the link you gave, is not the order we observed here. It seems IE is not even consistent with its own documentation. I think this needs to be fixed by using the way jquery solves this.",07/Oct/11 07:20;mgrigorov;I can't reproduce any problem with the attached quickstart with IE9 running in all possible modes (IE7/8/9).,"07/Oct/11 07:52;mgrigorov;I reverted WICKET-4080.
Since no one else than Topicus (the reporters of WICKET-4080) had complained about problems in Wicket's domReady() impl and they actually didn't fix their problem completely with WICKET-4080 and then moved to JQuery.ready() I see no reason to fire Wicket's domReady() on 'loaded' state for IE.","24/Jan/12 08:57;djapal;tried with IE 9 and wicket 1.5.4 and it doesnt work. re-broken? can somebody double check it? thnx

(tried AjaxLazyLoadPanel)","24/Jan/12 10:45;mgrigorov;I just updated http://www.wicket-library.com/wicket-examples/index.html with 1.5.4 and I tried it with IE9 - all works fine here.
Clean your browser cache and try again.","20/Feb/12 11:57;cleiter;I can reliably reproduce this with the given testcase by setting the wicket version in the pom to 1.5.4 and adding
<script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"" />
to the <head>. There seems to be some conflict with jquery. The error message is:

SCRIPT5007: Unable to get value of the property 'addDomReadyEvent': object is null or undefined 
wicket-ajax-ver-1327324821063.js, line 2471 character 1","20/Feb/12 12:45;mgrigorov;If you replace
<script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"" /> 
with
<script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"" ></script>
all works fine.

My IDE shows me warning that some browsers do not behave well with open-close <script/> elements.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CheckGroup model in AjaxFormChoiceComponentUpdatingBehavior onUpdate contains only last checked item,WICKET-4416,12543189,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,tank,tank,19/Feb/12 06:47,20/Feb/12 11:08,13/Mar/19 23:17,20/Feb/12 11:08,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket,,,,,,,0,,,,,,,"CheckGroup model in AjaxFormChoiceComponentUpdatingBehavior onUpdate contains only last checked item.

P.S. A model in Form onSubmit contains all selected items.",,,,,,,,,,,,,,,,,,,,,,19/Feb/12 06:48;tank;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12515122/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,228475,,,2012-02-19 06:47:40.0,,,,,,0|i00vt3:,3085,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Any empty url-parameter will make wicket 1.5 crash,WICKET-4398,12541793,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,johannes.odland@gmail.com,johannes.odland@gmail.com,08/Feb/12 12:29,16/Feb/12 14:34,13/Mar/19 23:17,09/Feb/12 10:00,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,1,,,,,,,"Adding an empty parameter to the query string will make wicket crash.

http://www.example.com/?oneParam&


How to reproduce in test:

PageParameters params = new PageParameters();
params.set("""","""");
params.getAllNamed();


Cause:
Wicket accepts empty parameters, but when encoding the url for a rendered page it will call params.getAllNamed().

params.getAllNamed() instantiates new NamedPairs, which calls Args.notEmpty() on the key during instantiation, causing the application to crash. 

The NamedPair constructor should probably allow empty string as a key, and call Args.notNull() on the key in stead.
",,,,,,,,,,,,,,,,,,,,,,08/Feb/12 14:20;cleiter;WICKET-4398-2.patch;https://issues.apache.org/jira/secure/attachment/12513817/WICKET-4398-2.patch,08/Feb/12 12:56;cleiter;WICKET-4398.patch;https://issues.apache.org/jira/secure/attachment/12513807/WICKET-4398.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-02-08 12:35:59.308,,,no_permission,,,,,,,,,,,227080,,,Thu Feb 16 14:34:49 UTC 2012,,,,,,0|i00vuv:,3093,,,,,,,,"08/Feb/12 12:35;mgrigorov;Can you please either create a unit test/quickstart app or paste the exception ?
Empty parameter name should not be allowed. Empty value is OK.",08/Feb/12 12:56;cleiter;Problem seems to be in Url class which allows empty parameters. Adding patch.,08/Feb/12 14:20;cleiter;There's a unit test which checks that empty URL parameters are parsed. After talking with Martin I add a trivial new patch that simply allows empty parameters.,09/Feb/12 10:12;cleiter;The committed fix doesn't solve the problem completely. A request to /?a&+ or /?a&%20 triggers the same exception.,"09/Feb/12 10:28;mgrigorov;Improved 1.5.x! Git merge failed me.
Thanks, Christoph!","16/Feb/12 14:34;meeque;Thanks for the fix. This issue has been bugging us, since we have 3rd-party websites linking to our Wicket pages, and they insist to send along a trailing & in the query string. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
improve wicket's handling of empty / null page parameters,WICKET-4384,12541062,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,pete,pete,03/Feb/12 12:24,15/Feb/12 21:48,13/Mar/19 23:17,15/Feb/12 21:48,1.5.4,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,- DefaultPageFactory#newPage() should be sure to not pass 'null' to a page constructor with page parameters,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,226414,,,2012-02-03 12:24:20.0,,,,,,0|i00vwv:,3102,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketSessionFilter and HttpSessionStore use different attribute name for Wicket Session,WICKET-3769,12509176,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hok,hok,03/Jun/11 12:28,06/Feb/12 07:23,13/Mar/19 23:17,03/Jun/11 15:17,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"from this topic 
http://apache-wicket.1842946.n4.nabble.com/WicketSessionFilter-and-ignorePaths-in-WicketFilter-td3570291.html
Please, look at the second post (the ignorePaths param is not linked with this issue as the title suggests).

How to reproduce with the quickstart:
1. open localhost:8080 - a wicket test page is displayed.
2. open localhost:8080/external - this is the external servlet that tries to access the wicket session. An exception is thrown.",N/A,,,,,,,,,,,,,,,,,,,,,03/Jun/11 12:29;hok;quickstart.rar;https://issues.apache.org/jira/secure/attachment/12481328/quickstart.rar,03/Jun/11 14:19;hok;quickstart2.rar;https://issues.apache.org/jira/secure/attachment/12481346/quickstart2.rar,03/Jun/11 14:19;hok;quickstart2.rar;https://issues.apache.org/jira/secure/attachment/12481345/quickstart2.rar,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-06-03 13:49:46.984,,,no_permission,,,,,,,,,,,72164,,,Mon Feb 06 07:23:18 UTC 2012,,,,,,0|i0ka33:,116451,,,,,,,,"03/Jun/11 13:49;mgrigorov;Your investigation in the mailing thread is wrong. The session is successfully retrieved but it fails later when you call session.getId() which tries to get the current http servlet request thru RequestCycle.get().getRequest().getContainerRequest() and fails because there is no RequestCycle in the current thread.

I.e. you can use Session and Application to set/get attributes/services/etc. but any usage of RequestCycle will fail.

Here is the stacktrace of your application:
java.lang.NullPointerException
	at org.apache.wicket.Session.getId(Session.java:375)
	at org.apache.wicket.ExternalServlet.doGet(ExternalServlet.java:26)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
....

It is clear that the session object is not null.

I fixed the NPE here but who knows how many other places can fail with something like this.","03/Jun/11 14:22;hok;Martin,
thanks for the fast fix. After I tested the quickstart that I attached, the exception really is NPE. However I have uncommented the ignorePaths parameter from web.xml (it is in the attached quickstart2). In this case the following exception is thrown when Session.get() is called:

DEBUG - WicketSessionFilter        - could not set Wicket session: key null not found in http session for ,localhost, or http session does not exist
DEBUG - log                        - call servlet EXTERNAL_SERVLET
WARN  - log                        - /external
java.lang.IllegalArgumentException: Argument 'requestCycle' may not be null.
	at org.apache.wicket.util.lang.Args.notNull(Args.java:39)
	at org.apache.wicket.Application.fetchCreateAndSetSession(Application.java:1487)
	at org.apache.wicket.Session.get(Session.java:159)
	at org.apache.wicket.ExternalServlet.doGet(ExternalServlet.java:21)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)

I'd like to apologize for submitting a wrong quickstart the first time. The second one reproduces the problem.","03/Jun/11 15:17;mgrigorov;Fixed.

You need to call Session.bind() at least once before trying to reach it in the servlet.","05/Feb/12 11:08;drecute;I added Session.bind() to the constructor of my WebSession subclass(UserSession), then I called UserSession.get() in the servlet. But I'm still getting the exception: java.lang.IllegalArgumentException: Argument 'requestCycle' may not be null. 

Please let me know, how do I get access to RequestCycle in the servlet. My servlet is added to a Page using the Include component. On the Page, I have getSession() overridden and in the servlet I tried to retrieve it using UserSession.get().

Any suggestions please.

Thanks","06/Feb/12 07:23;mgrigorov;RequestCycle is not created in non-Wicket request like request to a Servlet.
Please ask your questions in the mailing lists.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
datatime extension's calendar-min.js appears to be corrupted / out of sync,WICKET-4378,12540717,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rhansen,rhansen,01/Feb/12 13:33,01/Feb/12 17:33,13/Mar/19 23:17,01/Feb/12 17:33,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket-datetime,,,,,,,0,"javascript,",yui,,,,,"In some cases, when including a datepicker as a component inside a modal window.   Internet Explorer 7/8  throw a runtime exception.
This happens only in deployment mode, after re-minifying calendar.js and replacing calendar-min.js the problem goes away, the files seem to be out of sync or corrupted.",Internet Explorer 7/8,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,01/Feb/12 17:23;rhansen;calendar-min.js;https://issues.apache.org/jira/secure/attachment/12512770/calendar-min.js,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,226112,,,Wed Feb 01 17:23:32 UTC 2012,,,,,,0|i00vxj:,3105,,,,,,,,01/Feb/12 17:23;rhansen;re-minified calendar-min.js,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Markup Inheritance & getVariation(): markup loading (and merging) order depends on whether the super constructor adds components or not.,WICKET-4361,12539887,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bodje,bodje,26/Jan/12 10:47,31/Jan/12 16:10,13/Mar/19 23:17,31/Jan/12 16:10,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,getVariation,MarkupInheritance,wicket,,,,"I have a web page 'ChildPage' that inherits (java/markup) from a 'SuperPage' ('ChildPage' --> 'SuperPage'). 'ChildPage' now needs to override getVariation() to return a variation string, for example ""test"". The variation string is preferably set in the ChildPages constructor, maybe by a PageParameter.

I would expect the following markup: ChildPage_test.html merged with SuperPage.html. This is the case, when SuperPage has no component added in its constructor. But when SuperPage has a component added in constructor, then I get ChildPage.html merged with SuperPage.html.

quickstart ""myproject_1.5.4"" (wicket 1.5.4) shows:
ChildPage1 inherits from SuperPage1 (no component added)
ChildPage2 inherits from SuperPage2 (label added)

* Click on ""load ChildPage1_test.html "" -> markup ok: ChildPage1_test.html merged with SuperPage1.html 
* Click on ""load ChildPage2_test.html "" -> markup not ok: ChildPage2.html merged with SuperPage2.html  :  expected ChildPage2_test.html merged with SuperPage2.html

same with ""myproject2_1.4.19"" (wicket 1.4.19) works fine!

At the moment I moved the logic into getVariation() with: return getPageParameters.get(""variation"").toString();
This works and that's why I'm unsure if it is a bug at all.


Here is some debugging output from MarkupCache:
1 : hildPage1 inherits from SuperPage1 (no component added)

child constructor ------> Class=ChildPage1 variationString=test
DEBUG - MarkupCache                - Load markup: cacheKey=com.mycompany.ChildPage1_test_en_US.html
DEBUG - MarkupCache                - Loading markup from file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/ChildPage1_test.html
DEBUG - AbstractMarkupParser       - The markup file does not have a XML declaration prolog with 'encoding' attribute:file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/ChildPage1_test.html. It is more save to use it. E.g. <?xml version=""1.0"" encoding=""UTF-8"" ?>
DEBUG - WebAppClassLoader          - loaded class com.mycompany.ChildPage1 from sun.misc.Launcher$AppClassLoader@11b86e7
DEBUG - MarkupCache                - Load markup: cacheKey=com.mycompany.SuperPage1_test_en_US.html
DEBUG - MarkupCache                - Loading markup from file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/SuperPage1.html
DEBUG - AbstractMarkupParser       - The markup file does not have a XML declaration prolog with 'encoding' attribute:file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/SuperPage1.html. It is more save to use it. E.g. <?xml version=""1.0"" encoding=""UTF-8"" ?>
DEBUG - MergedMarkup               - Merge markup: derived markup: ChildPage1_test.html; base markup: SuperPage1.html
DEBUG - WebAppClassLoader          - loaded class com.mycompany.SuperPage1 from sun.misc.Launcher$AppClassLoader@11b86e7
DEBUG - MergedMarkup               - Merge markup: file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/ChildPage1_test.html


2: ChildPage2 inherits from SuperPage2 (label added)

DEBUG - MarkupCache                - Load markup: cacheKey=com.mycompany.ChildPage2_en_US.html
DEBUG - MarkupCache                - Loading markup from file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/ChildPage2.html
DEBUG - AbstractMarkupParser       - The markup file does not have a XML declaration prolog with 'encoding' attribute:file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/ChildPage2.html. It is more save to use it. E.g. <?xml version=""1.0"" encoding=""UTF-8"" ?>
DEBUG - WebAppClassLoader          - loaded class com.mycompany.ChildPage2 from sun.misc.Launcher$AppClassLoader@11b86e7
DEBUG - MarkupCache                - Load markup: cacheKey=com.mycompany.SuperPage2_en_US.html
DEBUG - MarkupCache                - Loading markup from file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/SuperPage2.html
DEBUG - AbstractMarkupParser       - The markup file does not have a XML declaration prolog with 'encoding' attribute:file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/SuperPage2.html. It is more save to use it. E.g. <?xml version=""1.0"" encoding=""UTF-8"" ?>
DEBUG - MergedMarkup               - Merge markup: derived markup: ChildPage2.html; base markup: SuperPage2.html
DEBUG - WebAppClassLoader          - loaded class com.mycompany.SuperPage2 from sun.misc.Launcher$AppClassLoader@11b86e7
DEBUG - MergedMarkup               - Merge markup: file:/C:/testumgebung/eclipseWorkspace/myproject/target/classes/com/mycompany/ChildPage2.html
...
child constructor ------> Class=ChildPage2 variationString=test",,,,,,,,,,,,,,,,,,,,,,26/Jan/12 10:48;bodje;myproject2_1.4.19.zip;https://issues.apache.org/jira/secure/attachment/12511970/myproject2_1.4.19.zip,26/Jan/12 10:48;bodje;myproject_1.5.4.zip;https://issues.apache.org/jira/secure/attachment/12511969/myproject_1.5.4.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-27 08:53:52.459,,,no_permission,,,,,,,,,,,225390,,,Tue Jan 31 16:10:27 UTC 2012,,,,,,0|i00vzr:,3115,,,,,,,,"27/Jan/12 08:53;mgrigorov;The problem is in MarkupContainer#add() which calls #getMarkup() to see whether to call #internalOnMarkupAttached().
#getMarkup() is called in the base page constructor stack and it leads to caching the loaded page markup in MarkupCache and later Wicket reuses this cached markup and never asks for the one with the variation (from the child page).

A solution for this particular case is to implement ChildPage#getVariation() like this:
return getPageParameters().get(""variation"").toString();

But I have no idea how to properly fix the real problem.","31/Jan/12 16:10;mgrigorov;Moved the calls of #internalOnMarkupAttached() in Component#onInitialize().
This way #onMarkupAttached() is called a bit later than now but it fixes the problem with early the load of the markup and also saves some CPU cycles by not iterating all children of the added component",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextField+OnChangeAjaxBehavior doesn't fire updates on item selection,WICKET-4204,12530698,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,xavilope,xavilope,08/Nov/11 09:53,30/Jan/12 11:00,13/Mar/19 23:17,30/Jan/12 11:00,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket-extensions,,,,,,,0,,,,,,,"When adding an OnChangeAjaxBehavior to an AutoCompleteTextField, onUpdate() doesn't fire when selecting an item from the autocomplete item list. 
It is firing when using an AjaxFormComponentUpdatingBehavior. 

wicket-autocomplete.js seems to be using the onchange event handler, which is cleared by Wicket.ChangeHandler. 
Maybe obj.onchangeoriginal should be checked in first place in wicket-autocomplete.js

See this related discussion at SO for context: http://stackoverflow.com/q/8047769/851811",,,,,,,,,,,,,,,,,,,,,,10/Nov/11 15:57;bitstorm;WICKET-4204.patch;https://issues.apache.org/jira/secure/attachment/12503241/WICKET-4204.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-10 15:57:11.325,,,no_permission,,,,,,,,,,,216436,,,Mon Jan 30 11:00:54 UTC 2012,,,,,,0|i0k913:,116280,,,,,,,,"10/Nov/11 15:57;bitstorm;When an item of the list is selected, the event ""onclick"" is passed to AutoCompleteTextField's onchange by the click handler defined at line 578 of wicket-autocomplete.js.
A possible solution is to trigger a new event which is not ignored by AutoCompleteTextField. See patch.
",10/Nov/11 16:12;mgrigorov;I hope all this will be solved cleanly with Wicket.next's use of jQuery.,"10/Nov/11 17:14;xavilope;I've not tried the patch, but if it is firing ""onpaste""/""oninput"", wouldn't it make other behaviors that only appended ""onchange"" (such as new AjaxFormComponentUpdatingBehavior(""onchange"")) stop working (they were before the patch).","10/Nov/11 23:36;bitstorm;@Martin
I hope so too :)

@Xavier
You are right, but at this point it's not clear to me why AutoCompleteTextField overrides its onchange handler with Wicket.ChangeHandler...","30/Jan/12 11:00;mgrigorov;I'd say this is fixed in 6.0.
Here Autocomplete component uses the special ""inputchanged"" (see OnChangeAjaxBehavior) event to work. I added explicitly OnChangeAjaxBehavior to the autocomplete component and it didn't break the functionality. 
#onChange() method received just the letter typed by the user, not the selected choice afterwards.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form components' name/value are encoded in stateless form's action url,WICKET-4365,12540021,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,coolzerotas,coolzerotas,27/Jan/12 10:49,30/Jan/12 09:46,13/Mar/19 23:17,30/Jan/12 09:46,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,1,,,,,,,"Stateless forms aren't working well as you can see on wicket examples: http://www.wicket-library.com/wicket-examples/stateless/foo

The first time you submit, (for example, the value 10), everything works as supposed to. If you now change the value (to 11 for example) and submit the form, the value wicket shows is 10.

I think the problem is stateless forms are generating an action URL with submitted values on query string, and when you resubmit the form, this values on query string replace the POST(or GET) values.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,225524,,,2012-01-27 10:49:00.0,,,,,,0|i00vz3:,3112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester.assertFeedback broken,WICKET-4367,12540263,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,robrosko,robrosko,28/Jan/12 14:06,29/Jan/12 09:31,13/Mar/19 23:17,29/Jan/12 09:31,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,The method assertFeedback in WicketTester has changed from 1.5.3 to 1.5.4 and does not work anymore as expected. This bug was introduced by WICKET-4246.,,,,,,,,,,,,,,,,,,,,,,28/Jan/12 14:11;robrosko;WICKET-4367.patch;https://issues.apache.org/jira/secure/attachment/12512313/WICKET-4367.patch,28/Jan/12 14:07;robrosko;assertFeedback.zip;https://issues.apache.org/jira/secure/attachment/12512310/assertFeedback.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-29 09:31:44.09,,,no_permission,,,,,,,,,,,225677,,,Sun Jan 29 09:31:44 UTC 2012,,,,,,0|i00vyv:,3111,,,,,,,,28/Jan/12 14:07;robrosko;A quickstart to demonstrate the problem,28/Jan/12 14:11;robrosko;Patch applies to wicket-core. This solved my problem immediately. It seems that this subtle bug was introduced by WICKET-4246 where a method call was dropped.,"29/Jan/12 09:31;mgrigorov;Applied!
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dropping ajax request causes componentnotfoundexception,WICKET-4227,12531435,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mwegrzyn,mwegrzyn,15/Nov/11 09:57,28/Jan/12 01:01,13/Mar/19 23:17,25/Nov/11 13:39,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,issue described in http://osdir.com/ml/users-wicket.apache.org/2011-11/msg00019.html,,,,,,,,,,,,,,,,,,,,,,24/Nov/11 16:52;mgrigorov;WICKET-4227.patch;https://issues.apache.org/jira/secure/attachment/12505017/WICKET-4227.patch,15/Nov/11 09:57;mwegrzyn;myproject.zip;https://issues.apache.org/jira/secure/attachment/12503728/myproject.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-11-24 16:52:31.507,,,no_permission,,,,,,,,,,,217171,,,Sat Jan 28 01:01:01 UTC 2012,,,,,,0|i0k8zb:,116272,,,,,,,,15/Nov/11 09:57;mwegrzyn;quickstart,"24/Nov/11 16:52;mgrigorov;It appeared there is a bug in ajax channels handling.
With this patch the quickstart works.
Can you test it against your real application ?","25/Nov/11 09:40;mwegrzyn;Yes, with patch application works.
Thank you.","25/Jan/12 09:26;mwegrzyn;I have just updated to Wicket 1.5.4 and tested WICKET-4227 and unfortunately still it does not work as intended.
Only last (and sometimes first - seems it depends on AjaxChannel name) lazy component from repeater is loaded.

It can be reproduced with old quickstart - just change returned channel type in MyAjaxLazyLoadPanel to AjaxChannel.Type.DROP.
","25/Jan/12 11:02;mgrigorov;Clear the browser cache.
I just retested it with 1.5-SNAPSHOT and it behaves well","25/Jan/12 11:28;mwegrzyn;I have tried that already and in few different browsers - no luck.

Is it possible that it has been fixed somewhere between 1.5.4 and SNAPSHOT?

Can you try to test quickstart with 1.5.4 and above mentioned change in MyAjaxLazyLoadPanel?","25/Jan/12 11:36;mwegrzyn;Note that I do not get any exception more, but not all lazy components are loaded.","26/Jan/12 20:09;agiljanovic;Hi all 

We have been following the developments around this issue with great interest hoping that this would resolve the problem we have with our Wicket based application (please check the project site for more project related info: http://intelleo.eu).

On the page in question we have several tabs utilizing  ""AjaxTabbedPanel"" overridden so that its ""AjaxFallbackLink"" uses ""AjaxChannel.Type.DROP"". One of the tabs on the page, is displaying a form that loads several ""AjaxLazyLoadPanels"". The idea was to enable users to navigate away from the form without having to wait for all LazyPanels to finish loading.

Unfortunately when we click any other tab, we still get the “Component not found” exception. We are running 1.5-SNAPSHOT.
Are we missing something? Any suggestions?

Thanks in advance.

Aleksandar

P.S.
The follwing is the actual ERROR description:

2012-01-26 11:57:31,883 ERROR org.apache.wicket.DefaultExceptionMapper.internalMap(DefaultExceptionMapper.java:114) - Unexpected error occurred
org.apache.wicket.request.handler.ComponentNotFoundException: Could not find component 'mainContainer:mainTabs:lpform:tabs:panel:mainContentPanel:lpFormPanel:lpform:tabs:panel:learninghistoryupdatinglabel' on page 'class org.intelleo.webui.lp.workspace.MainPage
	at org.apache.wicket.request.handler.PageAndComponentProvider.getComponent(PageAndComponentProvider.java:167)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.getComponent(ListenerInterfaceRequestHandler.java:92)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:239)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:750)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:252)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.apache.tuscany.sca.host.webapp.TuscanyServletFilter.doFilter(TuscanyServletFilter.java:99)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:425)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.server.session.SessionHandler.handle(SessionHandler.java:182)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:933)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:362)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:867)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:334)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:559)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:992)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:541)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:203)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:406)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:462)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:662)

",27/Jan/12 08:20;mgrigorov;Please create a separate issue with a quickstart and detailed description how to reproduce.,"28/Jan/12 01:01;agiljanovic;Done, please see the following:

https://issues.apache.org/jira/browse/WICKET-4366

Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Select does not work properly in functional flows e.g. Wizards,WICKET-2949,12469471,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,sludwig,sludwig,16/Jul/10 17:09,27/Jan/12 16:30,13/Mar/19 23:17,27/Jan/12 16:30,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.5,6.0.0-beta1,wicket-extensions,,,,,,,0,,,,,,,"When the Select FormComponent for rendering drop-downs is used inside a WizardStep that has a form-submitting back-button with defaultFormProcessing=false, the following effect is possible: Say there are three WizardSteps in a row, and the one with the Select is the middle one. Now say that we first move through the first two steps successfully, with changes to the Model being applied since validation results are ok. Then say we go back to the first step (the Model remaining unchanged during this navigation because in fact all our back-buttons have defaultFormProcessing=false).

Now comes the problem. If we now from this point go back and forth between the first and the second step, without changing any selections or data, we may not get the result that we would like to see, i.e. that the selected values are kept (re-validated and reapplied to the model, but never changed to other values). But, for example, on going forward to the second step, we may observe the drop-down showing a default value rather than the expected unchanged value.

I think this happens when the back-button is a form-submitting button with defaultFormProcessing=false that generates raw input on the form, which in case of the Select is a path including the current page version. Then, when we are in step one, we use the next-button to go forward. The Select is being re-rendered and during this phase it checks itself if there is raw input. Indeed, there is, but the path does not match any option, because the page version is now a newer one. Thus, the Select might think it has invalid input, but it does not complain. Instead, it assumes null or empty string as input which leads it to render with the default value being selected.

(I cannot supply an example for this since we use a copyrighted wizard and i currently have no time to set up an example based on the original wicket-extensions wizard. But it would be great if someone could follow this report and check carefully whether this is really always a problem, and how to fix it. I am going to try a workaround in my case where the Select does ""ignore"" the page version in the paths. I am not sure yet if there are more problems on the road with this approach.)
","Java 5 Tomcat 5.5.28, Java 6 Tomcat 6.0",,,,,,,,,,,,,,,,,,,,,19/Jul/10 14:38;sludwig;alternative_isSelected_20100719_sludwig.txt;https://issues.apache.org/jira/secure/attachment/12449845/alternative_isSelected_20100719_sludwig.txt,27/Jan/12 15:26;svenmeier;wicket2949.zip;https://issues.apache.org/jira/secure/attachment/12512179/wicket2949.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-25 01:03:20.082,,,no_permission,,,,,,,,,,,203788,,,Fri Jan 27 16:30:42 UTC 2012,,,,,,0|i0kc5z:,116788,,,,,,,,"19/Jul/10 11:14;sludwig;I have now created a fix of the central method Select.isSelected. In my version, if hasRawInput returns true but getInputAsArray (which only looks at the request itself) returns null, getRawInput is used to get the raw input from the form. Subsequently, the raw input is splitted by ';' and thus the paths are obtained. If there are one or more paths, the option(s) are selected that match these paths.

To account for an older page version in the paths in the raw input, I also changed the comparison of the paths so that the page version is effectively ignored.

If getRawInput should return null for a nullable Select, the behavior of isSelected is the same as in the 1.4.9 version when hasRawInput returns true but getInputAsArray returns nothing and no option is selected.

Please find the code attached.
",25/Aug/10 01:03;ivaynberg;please create a quickstart that reproduces the problem and reopen the issue. your description is pretty hard to follow and would be hard to recreate. also please attach your changes in a form of a patch. thanks.,27/Jan/12 15:26;svenmeier;quickstart showing the problem,"27/Jan/12 16:30;svenmeier;getRawInput() is now used, making sure no new request intervenes with its parameters",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Descendants of DynamicImageResource don't pass PageParameters to rendering code,WICKET-4267,12532845,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mat000,mat000,27/Nov/11 20:14,27/Jan/12 15:06,13/Mar/19 23:17,27/Jan/12 15:06,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,wicket-extensions,,,,,,0,,,,,,,"There are two problematic classes beside RenderedDynamicImageResource (see WICKET-4130) which are not able to get request parameters:
BlobImageResource - it's likely necessary to pass Attributes to the getBlob() method
ThumbnailImageResource - page parameters are not passed to the underlying unscaledImageResource in getScaledImageInstance()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,218578,,,2011-11-27 20:14:10.0,,,,,,0|i0k8vj:,116255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CryptoMapper - Error decoding text, exception thrown for links in markup",WICKET-4222,12531250,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,leadseeker,leadseeker,13/Nov/11 04:53,23/Jan/12 11:45,13/Mar/19 23:17,23/Nov/11 21:59,1.5.2,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,crypto,urls,wicket,,,,"When CryptoMapper is used an exception is thrown for any links in the page markup such as images and stylesheets.

Can be replicate with this init() and a standard quickstart.
public void init() {
    super.init();
    getSecuritySettings().setCryptFactory(new KeyInSessionSunJceCryptFactory());
    setRootRequestMapper(new CryptoMapper(getRootRequestMapper(), this));
}

HomePage.html
<img src=""logo.png"" width=""50px"" height=""50px"" alt=""Wicket Logo"" />

ERROR - AbstractCrypt              - Error decoding text: logo.png
java.lang.RuntimeException: Unable to decrypt the text '??(?x'
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:150)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptUrlSafe(AbstractCrypt.java:66)
	at org.apache.wicket.request.mapper.CryptoMapper.decryptUrl(CryptoMapper.java:159)
	at org.apache.wicket.request.mapper.CryptoMapper.mapRequest(CryptoMapper.java:102)
	at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:181)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:206)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
..snip
Caused by: javax.crypto.IllegalBlockSizeException: Input length must be multiple of 8 when decrypting with padded cipher
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_ab.b(DashoA13*..)
	at com.sun.crypto.provider.PBEWithMD5AndDESCipher.engineDoFinal(DashoA13*..)
	at javax.crypto.Cipher.doFinal(DashoA13*..)
	at org.apache.wicket.util.crypt.SunJceCrypt.crypt(SunJceCrypt.java:94)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:146)
	... 32 more
ERROR - CryptoMapper               - Error decrypting URL
java.lang.IllegalArgumentException: Argument 'url' may not be null.
	at org.apache.wicket.util.lang.Args.notNull(Args.java:41)
	at org.apache.wicket.request.Url.parse(Url.java:127)
	at org.apache.wicket.request.mapper.CryptoMapper.decryptUrl(CryptoMapper.java:160)
	at org.apache.wicket.request.mapper.CryptoMapper.mapRequest(CryptoMapper.java:102)
	at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:181)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:206)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)",,,,,,,,,,,,,,,,,,,,,,13/Nov/11 04:54;leadseeker;cryptoMapperQs.tgz;https://issues.apache.org/jira/secure/attachment/12503511/cryptoMapperQs.tgz,23/Jan/12 10:29;leadseeker;cryptoMapperQs2.tgz;https://issues.apache.org/jira/secure/attachment/12511485/cryptoMapperQs2.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-23 10:52:52.103,,,no_permission,,,,,,,,,,,216987,,,Mon Jan 23 11:45:22 UTC 2012,,,,,,0|i0k8zz:,116275,,,,,,,,13/Nov/11 04:54;leadseeker;CryptoMapper quickstart,"23/Jan/12 10:28;leadseeker;I'm still getting these exceptions when using WiQuery, attaching QS.",23/Jan/12 10:29;leadseeker;Quickstart showing decryption exceptions.,"23/Jan/12 10:52;mgrigorov;The exceptions are logged only when AbstractCrypt.class has enabled DEBUG logging.
Can you paste the stacktrace please.","23/Jan/12 10:58;leadseeker;DEBUG - PageAccessSynchronizer     - 'qtp1168197421-22' attempting to acquire lock to page with id '1'
DEBUG - PageAccessSynchronizer     - qtp1168197421-22 acquired lock to page 1
DEBUG - MarkupContainer            - Add version to [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 0]
DEBUG - Component                  - Markup available [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 0]
DEBUG - Component                  - Markup available [Component id = version]
DEBUG - MarkupContainer            - Add dialog to [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 0]
DEBUG - Component                  - Markup available [Dialog [Component id = dialog]]
DEBUG - MarkupContainer            - Add open-dialog to [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 0]
DEBUG - Component                  - Markup available [Button [Component id = open-dialog]]
DEBUG - Component                  - Begin render [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 1]
DEBUG - MarkupContainer            - Add _header_0 to [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 1]
DEBUG - Component                  - Markup available [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - Begin render [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - renderHead: [Component id = version]
DEBUG - Component                  - renderHead: [Dialog [Component id = dialog]]
DEBUG - Component                  - renderHead: [Button [Component id = open-dialog]]
DEBUG - Component                  - renderHead: [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - renderHead: [HomePage [Component id = 1]]
DEBUG - Component                  - renderHead: [HomePage [Component id = 1]]
DEBUG - ryDecoratingHeaderResponse - WiQuery contribution starts!
DEBUG - ryDecoratingHeaderResponse - WiQuery plugin contribution finished in 0ms!
DEBUG - ryDecoratingHeaderResponse - WiQuery plain javascripts, plain css and strings contribution starts!
DEBUG - ryDecoratingHeaderResponse - WiQuery plain javascripts, plain css and strings contribution finished in 0ms!
DEBUG - ryDecoratingHeaderResponse - WiQuery contribution finished in 13ms!
DEBUG - MarkupContainer            - Add _relative_path_prefix_1 to [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - Markup available [TransparentWebMarkupContainer [Component id = _relative_path_prefix_1]]
DEBUG - Component                  - Begin render [TransparentWebMarkupContainer [Component id = _relative_path_prefix_1]]
DEBUG - Page                       - Rendered [TransparentWebMarkupContainer [Component id = _relative_path_prefix_1]]
DEBUG - Component                  - End render [TransparentWebMarkupContainer [Component id = _relative_path_prefix_1]]
DEBUG - Page                       - Rendered [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - Component                  - End render [HtmlHeaderContainer [Component id = _header_0]]
DEBUG - MarkupContainer            - Add _relative_path_prefix_2 to [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 1]
DEBUG - Component                  - Markup available [TransparentWebMarkupContainer [Component id = _relative_path_prefix_2]]
DEBUG - Component                  - Begin render [TransparentWebMarkupContainer [Component id = _relative_path_prefix_2]]
DEBUG - Page                       - Rendered [TransparentWebMarkupContainer [Component id = _relative_path_prefix_2]]
DEBUG - Component                  - End render [TransparentWebMarkupContainer [Component id = _relative_path_prefix_2]]
DEBUG - Component                  - Begin render [Button [Component id = open-dialog]]
DEBUG - Page                       - Rendered [Button [Component id = open-dialog]]
DEBUG - Component                  - End render [Button [Component id = open-dialog]]
DEBUG - Component                  - Begin render [Dialog [Component id = dialog]]
DEBUG - Page                       - Rendered [Dialog [Component id = dialog]]
DEBUG - Component                  - End render [Dialog [Component id = dialog]]
DEBUG - Component                  - Begin render [Component id = version]
DEBUG - Page                       - Rendered [Component id = version]
DEBUG - Component                  - End render [Component id = version]
DEBUG - Page                       - Rendered [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 1]
DEBUG - Component                  - End render [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 1]
DEBUG - Page                       - ending request for page [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@20e0b1d6
DEBUG - Page                       - ending request for page [Page class = uk.co.leadseeker.HomePage, id = 1, render count = 1], request org.apache.wicket.protocol.http.servlet.ServletWebRequest@20e0b1d6
DEBUG - PageAccessSynchronizer     - 'qtp1168197421-22' released lock to page with id '1'
DEBUG - PageAccessSynchronizer     - 'qtp1168197421-22' notifying blocked threads
DEBUG - AbstractCrypt              - Error decoding text: style.css
java.lang.RuntimeException: Unable to decrypt the text '?ܥy?,'
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:150)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptUrlSafe(AbstractCrypt.java:66)
	at org.apache.wicket.request.mapper.CryptoMapper.decryptUrl(CryptoMapper.java:172)
	at org.apache.wicket.request.mapper.CryptoMapper.mapRequest(CryptoMapper.java:103)
	at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:184)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1326)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:940)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:874)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:349)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:904)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:565)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:217)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:46)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:545)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:43)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.crypto.IllegalBlockSizeException: Input length must be multiple of 8 when decrypting with padded cipher
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_ab.b(DashoA13*..)
	at com.sun.crypto.provider.PBEWithMD5AndDESCipher.engineDoFinal(DashoA13*..)
	at javax.crypto.Cipher.doFinal(DashoA13*..)
	at org.apache.wicket.util.crypt.SunJceCrypt.crypt(SunJceCrypt.java:94)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:146)
	... 32 more
DEBUG - RequestCycle               - No suitable handler found for URL style.css, falling back to container to process this request
DEBUG - AbstractCrypt              - Error decoding text: logo.png
java.lang.RuntimeException: Unable to decrypt the text '??(?x'
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:150)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptUrlSafe(AbstractCrypt.java:66)
	at org.apache.wicket.request.mapper.CryptoMapper.decryptUrl(CryptoMapper.java:172)
	at org.apache.wicket.request.mapper.CryptoMapper.mapRequest(CryptoMapper.java:103)
	at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:184)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1326)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:940)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:874)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:349)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:904)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:565)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:217)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:46)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:545)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:43)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.crypto.IllegalBlockSizeException: Input length must be multiple of 8 when decrypting with padded cipher
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_ab.b(DashoA13*..)
	at com.sun.crypto.provider.PBEWithMD5AndDESCipher.engineDoFinal(DashoA13*..)
	at javax.crypto.Cipher.doFinal(DashoA13*..)
	at org.apache.wicket.util.crypt.SunJceCrypt.crypt(SunJceCrypt.java:94)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:146)
	... 32 more
DEBUG - RequestCycle               - No suitable handler found for URL logo.png, falling back to container to process this request","23/Jan/12 11:00;mgrigorov;DEBUG - AbstractCrypt - Error decoding text: logo.png 
java.lang.RuntimeException: Unable to decrypt the text '??(?x' 
at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:150) 

Everything is OK. This is a DEBUG message. Configure your logging settings and all will be fine.",23/Jan/12 11:45;leadseeker;Thanks - I switched to your BookmarkableCryptoMapper as specified in WICKET-4140 and this not only gets rid of the exceptions from my debug logs but also works exactly as I wanted (i.e. same as 1.4.x url encryption). Maybe it should be considered for addition to release?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
renderHead not called in an IAjaxCallDecorator that implements IComponentAwareHeaderContributor,WICKET-4347,12538982,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,thomas.goetz,thomas.goetz,19/Jan/12 15:24,20/Jan/12 10:00,13/Mar/19 23:17,20/Jan/12 10:00,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,,,,,,,,,,0,,,,,,,"See quickstart, the JS ResourceReference is not included. Problem is in AbstractDefaultAjaxBehavior, line 93: ajaxCallDecorator is of type CancelEventIfNoAjaxDecorator, and my CallDecorator is it's delegate and thus not checked (if instanceof IComponentAwareHeaderContributor).",,,,,,,,,,,,,,,,,,,,,,19/Jan/12 15:25;thomas.goetz;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12511128/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-01-20 10:00:31.336,,,no_permission,,,,,,,,,,,224484,,,Fri Jan 20 10:00:31 UTC 2012,,,,,,0|i0k8tr:,116247,,,,,,,,"19/Jan/12 15:27;thomas.goetz;The JavaDoc in IAjaxCallDecorator is not up to date:
""Ajax call decorators are potential contributors to the page header by implementing {@link IHeaderContributor}."", should read: {@link IComponentAwareHeaderContributor}.","20/Jan/12 10:00;mgrigorov;Fixed in 1.5.x.
6.0 doesn't use delegates so there is no need to port the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getAjaxRegionMarkupId called for not enabled behaviors,WICKET-4346,12538821,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bezda,bezda,18/Jan/12 15:46,18/Jan/12 21:30,13/Mar/19 23:17,18/Jan/12 21:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,,,,,,,,0,,,,,,,"Component.getAjaxRegionMarkupId should call behavior's getAjaxRegionMarkupId only if behavior is enabled, otherwise Wicket.Ajax.Call.processComponent cannot find specified markup id",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-01-18 20:38:23.415,,,no_permission,,,,,,,,,,,224324,,,Wed Jan 18 20:38:23 UTC 2012,,,,,,0|i00w1j:,3123,,,,,,,,18/Jan/12 20:38;pete;Please specify the wicket version(s) that is affected and attach a quickstart to speed-up resolving that ticket.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"FileUpload: Using IE9 in IE8 compatibility mode, ajax-response cannot be parsed",WICKET-4332,12538097,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,andi5,andi5,11/Jan/12 20:29,18/Jan/12 15:43,13/Mar/19 23:17,16/Jan/12 15:24,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"See the quickstart project.
When using a simple form with multipart/form-data and an IE9 (9.0.8112.16421 here) in IE8 compatibility mode (via X-UA-Compatible meta tag),
the posting of the data in the hidden iframe works but the response text/xml is not handled correctly.

ERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element
",,,,,,,,,,,,,,,,,,,,,,16/Jan/12 09:09;mgrigorov;WICKET-4332.patch;https://issues.apache.org/jira/secure/attachment/12510681/WICKET-4332.patch,11/Jan/12 20:30;andi5;wicket-4332.tar.bz2;https://issues.apache.org/jira/secure/attachment/12510236/wicket-4332.tar.bz2,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-15 18:14:17.933,,,no_permission,,,,,,,,,,,223603,,,Wed Jan 18 15:43:24 UTC 2012,,,,,,0|i00w3b:,3131,,,,,,,,"15/Jan/12 18:14;mgrigorov;I see the problem is already discussed at users@ mailing list (http://markmail.org/thread/o4bdtdxrxmlgnn77) but none of the doctypes doesn't seem to work when
 <meta content=""IE=8"" http-equiv=""X-UA-Compatible""> is specified in the markup.
So far I cannot find any solution/workaround to this problem.","15/Jan/12 18:24;andi5;Wow, that is really sad. Let us hope someone starts having an idea :)
Meanwhile, shall we add a disclaimer somewhere? I.e. detect that mode in javascript and log/alert something?
Any sluggish workaround possible?
",15/Jan/12 18:28;mgrigorov;I'm trying to find a way to serialize the contents of the received DispHtmlDocument. If it is possible to get the ajax-response from the body then we can manually create the DOMDocument and continue with the normal flow..,16/Jan/12 09:09;mgrigorov;A patch that transforms HtmlDocument to DOM Document when IE is running in compatible mode and creates DispHtmlDocument from XML response.,"16/Jan/12 13:11;balamaci;Hi Martin,
I think in the patch, in Wicket._createXmlDocument, the ""return xmlDocument;"" should go a level lower, as it returns nothing for if (window.DOMParser) branch and breaks other browsers than IE.

For some reason in IE9, envelope.compatMode shows as undefined instead of ""BackCompat"".
Will investigate further but just wanted to let you know about the return.","16/Jan/12 13:19;mgrigorov;Hi Serban,

I'll check the case for DOMParser. Thanks!

Here while running the app in IE9 with <meta ...IE=8> the compatMode is 'BackCompat'. Without the <meta> it is ""Css1Compat"".
I picked this property to be able to differentiate what is the current envelope. The best check would be something like: if (envelope instanceof DispHtmlDocument) , but this fails. If you find a better way to recognize that we need to convert from HtmlDocument to DOMDocument then modify it and update the patch.","16/Jan/12 14:14;mgrigorov;I committed the fix in 1.5 since it is quite stable here.
Let us know if you have any improvements.","16/Jan/12 16:47;balamaci;Martin, for me all the instantiations in _createXmlDocument like new ActiveXObject(""Msxml2.DOMDocument.6.0""); fail with Automation server can't create object and it reaches ""Cannot create DOM document"".

Could it be that you have enabled security settings more permissive than default?

I'll try tomorrow with another IE instance, cause it may be that ours are more draconic.","16/Jan/12 17:01;mgrigorov;The last tried one is ""Microsoft.XMLDOM"" which is the one that has been in use until now.
The new code just tries to find the newest version of the ActiveXObject that is able to parse XML and falls back to older versions.

See http://blogs.msdn.com/b/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx for more information.","18/Jan/12 15:43;balamaci;Hi Martin,
It was indeed an issue with that perticular IE9 instance and we were receiving ""Automation server can't create object"" exception for ""Microsoft.XMLDOM"" with 1.5.3 . I tested with two other IE9 instances and is working as expected. Today it was deployed our prelive env and have positive feedback from the testers. 

Great work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CryptoMapper does not work for applications having a home page that needs query parameters,WICKET-4345,12538799,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,vmathon,vmathon,18/Jan/12 13:43,18/Jan/12 14:05,13/Mar/19 23:17,18/Jan/12 14:05,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"CryptoMapper.decryptUrl() should not return null for requests like http://myhost/MyApplication/app/?param=xx 

As a possible fix one can replace

if (encryptedUrl.getSegments().isEmpty() && encryptedUrl.getQueryParameters().isEmpty()) {
           return encryptedUrl;
}

with 

if (encryptedUrl.getSegments().isEmpty()) {
           return encryptedUrl;
}

but I suspect that the original test is intended to answer to another use case... ","Windows7, IE8",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,224302,,,2012-01-18 13:43:41.0,,,,,,0|i00w1r:,3124,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rerendering a page with WicketTester after you loose permission does not give access-denied,WICKET-4340,12538604,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,papegaaij,papegaaij,17/Jan/12 07:58,17/Jan/12 23:08,13/Mar/19 23:17,17/Jan/12 23:08,1.5.4,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,Since WICKET-4256 WicketTester does not give an access-denied page when you try to rerender a page instance after loosing permission to render that page. A testcase is added to WicketTesterTest (rerenderNotAllowed) to demonstrate the problem.,,,,,,,,,,,,,,,,,,,,,,17/Jan/12 09:04;mgrigorov;WICKET-4340.patch;https://issues.apache.org/jira/secure/attachment/12510820/WICKET-4340.patch,17/Jan/12 08:30;papegaaij;quickstart-4340.tar.bz2;https://issues.apache.org/jira/secure/attachment/12510818/quickstart-4340.tar.bz2,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-17 09:04:38.61,,,no_permission,,,,,,,,,,,224108,,,Tue Jan 17 23:08:25 UTC 2012,,,,,,0|i00w27:,3126,,,,,,,,"17/Jan/12 09:04;mgrigorov;A patch that fixes the problem.
It moves the check for ""isActionAuthorized(RENDER)"" to Page#onConfigure() instead of #onBeforeRender() because the latter is not called anymore in such cases.

Igor, please review.","17/Jan/12 09:05;papegaaij;Probably applies to 1.4 as well. I did not test it on 1.4, but the patch for WICKET-4256 got backported to 1.4.",17/Jan/12 22:54;ivaynberg;blah. 1.5.x fix is committed under WICKET-4030 by mistake :/,"17/Jan/12 23:08;ivaynberg;added the test to 1.4.x, it does not suffer from this problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
onBeforeRender() is called on components that are not allowed to render,WICKET-4256,12532431,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,23/Nov/11 06:33,17/Jan/12 08:38,13/Mar/19 23:17,23/Nov/11 06:46,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,,,,,,,,0,,,,,,,"pasted from the list:

Hi,

I ran into an odd problem this week. A model fed to a ListView was
calling service methods the current user wasn't allowed to use, and I
was wondering how that could happen. A panel far above this ListView in
the hierarchy had been secured (using Shiro annotations, but that turns
out to not matter at all) and was not supposed to be rendered for this
user. From this I had expected the ListView not to be rendered either,
but here it was trying to assemble itself in onBeforeRender and thus
calling the ""forbidden"" service methods.

I investigated Component and friends for a bit, and have found a
potential problem.

internalBeforeRender() checks determineVisibility() before doing
anything. So far so good. determineVisibility() then checks
isRenderAllowed() so the application's IAuthorizationStrategy can block
certain components. This is where it goes wrong though:
isRenderAllowed() only looks at FLAG_IS_RENDER_ALLOWED for performance
reasons, and that flag hasn't been set yet! internalPrepareForRender()
only calls setRenderAllowed() *after* beforeRender().

Due to this, the supposedly secure panel was going through its own
beforeRender and thus calling that ListView's beforeRender.

I think this can be a serious problem, such as in my case described
above. I'd expect that if isActionAuthorized(RENDER) is false, the
secured component should basically never get to the beforeRender phase.
My questions are now:

- Is this intentional? If yes, please explain the reasoning behind it,
 because it isn't obvious to me.

- If not, can we fix it? My intuitive suggestion would be to simply
 move the call to setRenderAllowed() from the end of
 internalBeforeRender() (prepareForRender in 1.4) to the beginning of
 that method, so beforeRender() can reliably look at that flag.

- If we can fix it, when and where do we fix it? This hit me in 1.4,
 and looking at the code it's still there in 1.5. I'd *really* like it
 fixed in the last 1.4 release, and certainly in 1.5, given that this
 has the potential to impact security.

 It's not an API break, but I'm not sure whether the implications for
 application behavior are tolerable for all existing applications. On
 the other hand, it seems to be a real security problem, so maybe the
 change is justified. I'd like some core dev opinions please :-)

If this is in fact a bug, I'm of course willing to provide a ticket and
a patch :-)

Thanks!

Carl-Eric
www.wicketbuch.de",,,,,,,,,,,,,,,,,,,WICKET-4340,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,218164,,,2011-11-23 06:33:13.0,,,,,,0|i0k8xj:,116264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mounting a home page with package mapper results in invalid url's,WICKET-4303,12535648,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,m_seko,m_seko,19/Dec/11 01:04,16/Jan/12 21:39,13/Mar/19 23:17,16/Jan/12 15:38,1.5.3,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,wicket,,,,,,"If the transition destination page mountPackage HomePage, which displays a 404 error when you click on the link the normal component.
This would not be a bug?
When you reload before click, the issue does not occur.

Wicket 1.4 this issue does not happen.

The stack trace below.
WARN  - WicketObjects              - Could not resolve class [wicket153mount...]
java.lang.ClassNotFoundException: wicket153mount///
    at java.lang.Class.forName0(Native Method)
    at java.lang.Class.forName(Class.java:242)
    at org.apache.wicket.application.AbstractClassResolver.resolveClass(AbstractClassResolver.java:108)
    at org.apache.wicket.util.lang.WicketObjects.resolveClass(WicketObjects.java:68)
    at org.apache.wicket.request.mapper.AbstractComponentMapper.getPageClass(AbstractComponentMapper.java:138)
    at org.apache.wicket.request.mapper.PackageMapper.parseRequest(PackageMapper.java:142)
    at org.apache.wicket.request.mapper.AbstractBookmarkableMapper.mapRequest(AbstractBookmarkableMapper.java:263)
    at org.apache.wicket.request.mapper.mount.UnmountedMapperAdapter.mapRequest(UnmountedMapperAdapter.java:73)
    at org.apache.wicket.request.mapper.mount.MountMapper.mapRequest(MountMapper.java:131)
    at org.apache.wicket.request.mapper.CompoundRequestMapper.mapRequest(CompoundRequestMapper.java:130)
    at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:181)
    at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:206)
    at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
    at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
    at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
    at java.lang.Thread.run(Thread.java:595)","Internet Explorer,Chrome (Probably occurs in any browser)",,,,,,,,,,,,,,,,,,,,,30/Dec/11 13:35;m_seko;ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12508930/ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg,02/Jan/12 06:04;m_seko;WICKET-4303WithWicket6.0.zip;https://issues.apache.org/jira/secure/attachment/12509031/WICKET-4303WithWicket6.0.zip,11/Jan/12 00:54;m_seko;WICKET-4303WithWicket6.0_120111.zip;https://issues.apache.org/jira/secure/attachment/12510135/WICKET-4303WithWicket6.0_120111.zip,19/Dec/11 01:05;m_seko;wicket153mount.zip;https://issues.apache.org/jira/secure/attachment/12507854/wicket153mount.zip,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-12-20 09:31:46.657,,,no_permission,,,,,,,,,,,221332,,,Mon Jan 16 21:39:35 UTC 2012,,,,,,0|i00w73:,3148,,,,,,,,19/Dec/11 01:05;m_seko;Attach quickstart.,20/Dec/11 09:31;svenmeier;Works fine here with Firefox. Could you please retry with wicket-1.5.x head?,"22/Dec/11 01:24;m_seko;Tested using Wicket 1.5.x head.
Change the results by the browser.
(Any browser, not. Sorry)

The following are the test results.
Chrome 16.0 : Failure to Transition
Firefox 3.6.13 : Successful Transition
Firefox 9.0 : Failure to Transition
IE 6 : Failure to Transition
IE 8 : Failure to Transition
Safari 5.1.2 : Successful Transition
","29/Dec/11 13:17;pete;I can confirm this broken behavior on 6.0-SNAPSHOT...

The problem only happens when the home page resides in the package that you map with mountPackage(..). Moving the home page outside of the mounted package (so it will by default be mapped to '/') will eliminate the problem. However this is just a workaround for this bug and I am still investigating on the internals of how to fix this.","29/Dec/11 13:23;pete;the broken url that gets generated is 

  /example/..;jsessionid=4390380538049583490

which tries to map to the home page. due to the jsessionid the browser does not shorten the url into '/'

so this only happens when a new session is created.

The fix is probably to enforce the generation of 

  /example/HomePage;jsessionid=4390380538049583490

but I still have to get the whole picture (in my scarce spare time :-) to apply a fix...","29/Dec/11 15:51;m_seko;I understood the issue.
I'm not in a hurry. I Waiting for a fix.

And, thank you to modify the title of ticket.","29/Dec/11 20:22;pete;I committed an initial fix ... the quickstart works for me now ... however I am a little scared that the problem exists in several other places

@masaya: please verify the fix","30/Dec/11 11:57;m_seko;Thanks to commit the fix.
I read a fix.
I am not familiar with Wicket 6.0. If I say the wrong thing, sorry.

I seem to need to call the Request#setUrl() in HomePageMapper#parseRequest()
(Unfortunately, Request#setUrl has not been defined.)

If you don't call Request#setUrl(), I seem to be ignored in the value MountedMapper#parseRequest() rewritten by Url#canonical().","30/Dec/11 12:41;pete;@masaya:

- do you still get a 404 when clicking on the link?

- why you need to call #setUrl() ? Request#getUrl() builds the url from the current request. Setting the url doesn't make much sense unless you run a test case.","30/Dec/11 13:32;m_seko;ClassNotFoundException is not throw.
but 404 errors occur.

I was tested in Wicket1.5.3.
May I failed to apply the fix Wicket1.5.3 Peter I's.

I check again later.


If the following fails.

public class WicketApplication extends WebApplication
{
	@Override
	public Class<HomePage> getHomePage()
	{
		return HomePage.class;
	}

	@Override
	public void init()
	{
		super.init();
		mountPackage(""/base"", getHomePage());
	}
}",30/Dec/11 13:35;m_seko;404 error screenshot.,"30/Dec/11 13:53;m_seko;I wanted to try and test in Wicket 6.0.
However, do not know how to obtain build results 6.0-SNAPSHOT.

https://repository.apache.org/content/repositories/snapshots/org/apache/wicket/wicket-core/6.0-SNAPSHOT/
This URL is likely a result of old building.

I've never built a Wicket 6.0.

I tested with Wicket6.0 takes time.

Sorry, but I need time.
A few days later, I think the results say.",30/Dec/11 23:09;pete;I use this one: https://repository.apache.org/content/groups/snapshots/org/apache/wicket/wicket-core/6.0-SNAPSHOT/,"02/Jan/12 06:04;m_seko;thank you for the URL.
But, in my environment seems to not work FIX.
I tested with IE8.

I also built its own Wicket 6.0  jar, did not work.

Attach a project in Eclipse 3.5 WTP that I used for testing.
It has its own jar file contains.",02/Jan/12 07:49;mgrigorov;@Peter: can this fix be ported to 1.5 ?,02/Jan/12 11:25;pete;@Martin: It can be applied to 1.5 (I even ran my first successful 'git cherry-pick' on my local repo :-) - just first want to make sure the fix is appropriate.,"07/Jan/12 21:32;pete;fix appled for 1.5 as well...

@Masaya: is the problem still there with current wicket-6 build? I could reproduce the problem you had in my local workspace and got it solved, too. So if you still have a problem it's maybe of a different kind. Please provide more information in that case.","09/Jan/12 06:32;m_seko;@Peter
Thanks for patiently examined.

In my environment, returned by the destination URL is wrong Wicket.
Responses are shown below.

----
HTTP/1.1 302 Moved Temporarily
Server: Apache-Coyote/1.1
Date: Mon, 09 Jan 2012 06:02:25 GMT
Expires: Thu, 01 Jan 1970 00:00:00 GMT
Pragma: no-cache
Cache-Control: no-cache, no-store
Location: http://192.168.0.131:8080/wicket60_niceurl/../wicket/page?1
Content-Length: 0
----

As a result, the transition to the following URL. And that 404.
http://192.168.0.131:8080/wicket/page?1

After 404, if I manually enter the following URL appears the page I were expecting.
http://192.168.0.131:8080/wicket60_niceurl/wicket/page?1
Thus, the rendering of the page buffer is seemed to have been successful.


This issue occurs in IE8. Does not occur in Safari 5.1.2.

If you need any additional information, please tell me.","09/Jan/12 22:30;pete;unfortunately your description is hard to read and not very detailed :-(

I tried to reproduce the issue on OS X with no success. Please do the following:

- attach an updated quickstart (or specify which one you used)
- what operating system(s) and browser(s) did cause the issue
- assure that you work with the current master branch from git
","11/Jan/12 00:53;m_seko;I'm sorry.

OS: Windows XP SP3
Browser: IE8, Firefox9.0.1,  Chrome 16.0.912.75

Quick Start is attached to the comments below.
quickstart can be run in Eclipse WTP.

Built using the jar from the master branch from git.


I also prepared a quick start deployment server.
Can be tested at the following URL.
http://176.34.56.245/wicket60_niceurl/

According to my friend, the problem does not occur in Safari on MacOS.
Except Safari (for example, Firefox9) you want to try it.","11/Jan/12 00:54;m_seko;attach quickstart.
WICKET-4303WithWicket6.0_120111.zip","16/Jan/12 15:38;mgrigorov;The new attachment works OK with current 6.0-SNAPSHOT.
I'm not sure what is ""wicket-core-6.0-mybuild.jar"" but maybe you broke it in your build.
Use https://repository.apache.org/content/repositories/snapshots/ to get the latest 6.0-SNAPSHOT.","16/Jan/12 21:39;m_seko;Multiplied by the nuisance.
My skills were insufficient.

Thanks to Peter and Martin .

I am waiting for the Wicket 1.5.4.",,,,,,,,,,,,,,,,
Do not strip the jsessionid from the url for resources,WICKET-4312,12536148,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,22/Dec/11 10:56,16/Jan/12 09:40,13/Mar/19 23:17,22/Dec/11 14:45,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Wicket should not strip the jsessionid from resources' url before rendering them in the header.
If the application is configured to use url rewriting instead of cookie based storage of the jsessionid this strip causes a new WebSession for each request to a resource.

This is a revert of the change for WICKET-3724.",,,,,,,,,,,,,,,WICKET-4334,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,221831,,,2011-12-22 10:56:57.0,,,,,,0|i00w5j:,3141,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
One of the stateless examples makes the page stateful ,WICKET-4336,12538440,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,15/Jan/12 14:26,15/Jan/12 15:25,13/Mar/19 23:17,15/Jan/12 15:25,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Stateless example - Stateless page that stores state in URL (http://www.wicket-library.com/wicket-examples/stateless/state-in-url) - makes the page stateful.
Could be related to WICKET-4290.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,223944,,,Sun Jan 15 15:25:02 UTC 2012,,,,,,0|i00w2n:,3128,,,,,,,,"15/Jan/12 15:25;mgrigorov;Fixed.
It seems to be broken since we made .setResponsePage(pageInstance) to make the page stateful.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicketTester#executeBehavior doesn't ever attach request-parameter ,WICKET-4320,12536735,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,zbigniewruchala,zbigniewruchala,31/Dec/11 13:33,15/Jan/12 00:03,13/Mar/19 23:17,07/Jan/12 09:34,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,wicket-tester,,,,,,"wicketTester#executeBehavior doesn't honor AjaxFormSubmitBehavior contract. When wicketTester executes the behaviour, no request-parameters are sent.

",,,,,,,,,,,,,,,,,,,,,,31/Dec/11 13:34;zbigniewruchala;patch.txt;https://issues.apache.org/jira/secure/attachment/12508986/patch.txt,31/Dec/11 13:34;zbigniewruchala;quick-start.zip;https://issues.apache.org/jira/secure/attachment/12508985/quick-start.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,222418,,,Sat Dec 31 13:34:36 UTC 2011,,,,,,0|i00w4n:,3137,,,,,,,,31/Dec/11 13:34;zbigniewruchala;quick-start and patch against 1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with ajax requests in rc3 with browsers other than chrome,WICKET-3596,12503383,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,taroquu,taroquu,05/Apr/11 09:49,13/Jan/12 16:39,13/Mar/19 23:17,12/Apr/11 15:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,,,,,,,,1,,,,,,,"When making simple ajax requests (apart from in chrome) using rc3 no response is being returned. 

Strangely enough, after making the request, and then refreshing the page everything is fine.

The tomcat is producing this error:

ERROR - DefaultExceptionMapper         - Unexpected error occurred
org.apache.wicket.behavior.InvalidBehaviorIdException: Cannot find behavior with id: 0 on component: [ [Component id = next]]
	at org.apache.wicket.Behaviors.getBehaviorById(Behaviors.java:299)
	at org.apache.wicket.Component.getBehaviorById(Component.java:4368)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:177)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:157)
	at org.apache.wicket.request.RequestHandlerStack.executeRequestHandler(RequestHandlerStack.java:84)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:205)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:247)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:138)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:244)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:541)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:383)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:243)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:188)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:288)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)

There are javascript errors on the page too:

Error: [Exception... ""'JavaScript component does not have a method named: ""handleEvent""' when calling method: [nsIDOMEventListener::handleEvent]""  nsresult: ""0x80570030 (NS_ERROR_XPC_JSOBJECT_HAS_NO_FUNCTION_NAMED)""  location: ""<unknown>""  data: no]

Error: no element found
Source File: http://localhost:8080/UniOrder/wicket/page?62-1.IBehaviorListener.0-wizard-form-buttons-next&random=0.9048021817669812
Line: 1

Error: no element found
Source File: http://localhost:8080/UniOrder/?62
Line: 1",,,,,,,,,,,,,,,,,,,,,,09/Apr/11 18:45;mgrigorov;WICKET-3596.patch;https://issues.apache.org/jira/secure/attachment/12475901/WICKET-3596.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-05 09:55:59.577,,,no_permission,,,,,,,,,,,204364,,,Fri Jan 13 16:32:05 UTC 2012,,,,,,0|i0kak7:,116528,,,,,,,,"05/Apr/11 09:55;mgrigorov;Can you try with Firefox or IE at http://wicketstuff.org/wicket/ajax ?
All these and the application I'm working on works OK with RC3/SNAPSHOT.

If the examples work then please attach a quickstart that shows the problem. ","05/Apr/11 10:29;taroquu;I've tried the tab panel, it is doing the same thing.","05/Apr/11 10:34;mgrigorov;It works here with FF4 and IE6.
I'm starting to think that it is something with your browsers.","05/Apr/11 10:40;taroquu;I've just had a few colleagues try it, firefox 3.6, firefox 4 (rc) and ie 8 with the same results. It doesn't work the first time but upon return to the page its fine. Perhaps if you close your browser and reopen it you'll be able to duplicate it.","05/Apr/11 11:04;akiraly;It seems I can reproduce it with Chrome10, FF4, IE9, Opera11. Steps:

1. Delete jsessionid cookie for wicketstuff.org
2. Go to http://wicketstuff.org/wicket/ajax/tabbed-panel
3. Click ""second tab"" once. Nothing happens (ajax call is done response is received I can see it in sniffer but it is not loaded/rendered).
4. Click it again. Works like a charm.

I think it has to do with session creation/tracking (note the cookie delete step).","05/Apr/11 21:39;taroquu;I've just tried the wicket stuff page on my computer at home (also with firefox 4) same problem, also fixed by a page refresh after the initial ajax request. Getting a different error though:

Error: Wicket.functionExecuterCallbacks.script1 is not a function
Source File: http://wicketstuff.org/wicket/ajax/tabbed-panel;jsessionid=2CA4D72C9D1513B7FB5195F5074CB4EF?0
Line: 2453",09/Apr/11 18:45;mgrigorov;A patch fixing the problem,"11/Apr/11 11:04;taroquu;Its working much better now - but not perfectly I'm afraid. I'm now getting this error

Error: Wicket.functionExecuterCallbacks.script1 is not a function
Source File: http://localhost:8080/UniOrders/?5
Line: 2487

There is no longer an error on the tomcat log and the ajax response xml is correct. But only some of the page is being updated. This now seem to be affecting chrome as well.

Thanks","11/Apr/11 11:13;mgrigorov;You applied my patch against current trunk and you faced this error ?
Can you describe the steps to reproduce the new problem ?","11/Apr/11 11:17;taroquu;Yes, I applied against the current trunk and rebuilt the jar. upon updating the jar in the project I rebuilt and redeployed. When running the same ajax request that was causing the problem before some of the page is being updated, but some of it is not. The ajax response is however correct in that it contains all the elements to be updated that it should do - however only the first element is being updated. the component id=""title33"" is updating as it should, then it throws that javascript error.

<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><component id=""title33"" ><![CDATA[<h1 wicket:id=""title"" id=""title33"">Services</h1>]]></component><header-contribution encoding=""wicket1"" ><![CDATA[<head xmlns:wicket=""http://wicket.apache.org""><script type=""text/javascript"" src=""./wicket/resource/org.apache.wicket.markup.html.WicketEventReference/wicket-event-ts1302516811798.js""></script>
<script type=""text/javascript"" src=""./wicket/resource/org.apache.wicket.ajax.WicketAjaxReference/wicket-ajax-ts1302516811798.js""></script>
<script type=""text/javascript"" src=""./wicket/resource/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/wicket-ajax-debug-ts1302516811798.js""></script>
<script type=""text/javascript"" id=""wicket-ajax-debug-enable"">
/*<![CDATA[*/
wicketAjaxDebugEnable=true;
/*]^]^>*/
</script>
<script type=""text/javascript"" id=""wicket-ajax-base-url"">
/*<![CDATA[*/
Wicket.Ajax.baseUrl=""."";
/*]^]^>*/
</script>
</head>]]></header-contribution><component id=""breadcrumbs"" ><![CDATA[<div wicket:id=""breadC"" id=""breadcrumbs"">
                <ul>
                    <li><a wicket:id=""bc1"" class="""" href=""./wicket/page?2-1.ILinkListener-header-breadC-bc1"" id=""bc134"" onclick=""var wcall=wicketAjaxGet(&#039;./wicket/page?2-1.IBehaviorListener.0-header-breadC-bc1&#039;,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$(&#039;bc134&#039;) != null;}.bind(this));return !wcall;"">Step 1</a></li>
                    <li><a wicket:id=""bc2"" href=""./wicket/page?2-1.ILinkListener-header-breadC-bc2"" id=""bc235"" onclick=""var wcall=wicketAjaxGet(&#039;./wicket/page?2-1.IBehaviorListener.0-header-breadC-bc2&#039;,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$(&#039;bc235&#039;) != null;}.bind(this));return !wcall;"" class=""current"">Step 2</a></li>
                    <li><a wicket:id=""bc3"" href=""./wicket/page?2-1.ILinkListener-header-breadC-bc3"" id=""bc336"" onclick=""var wcall=wicketAjaxGet(&#039;./wicket/page?2-1.IBehaviorListener.0-header-breadC-bc3&#039;,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$(&#039;bc336&#039;) != null;}.bind(this));return !wcall;"">Step 3</a></li>
                    <li class=""end""><a wicket:id=""bc4"" href=""./wicket/page?2-1.ILinkListener-header-breadC-bc4"" id=""bc437"" onclick=""var wcall=wicketAjaxGet(&#039;./wicket/page?2-1.IBehaviorListener.0-header-breadC-bc4&#039;,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$(&#039;bc437&#039;) != null;}.bind(this));return !wcall;"">Step 4</a></li>
                </ul>
            </div>]]></component><component id=""form39""  encoding=""wicket1"" ><![CDATA[<form wicket:id=""form"" class=""wicketExtensionsWizardForm"" id=""form39"" method=""post"" action=""./wicket/page?2-1.IFormSubmitListener-wizard-form""><div style=""width:0px;height:0px;position:absolute;left:-100px;top:-100px;overflow:hidden""><input type=""hidden"" name=""form39_hf_0"" id=""form39_hf_0"" /></div><div style=""width:0px;height:0px;position:absolute;left:-100px;top:-100px;overflow:hidden""><input type=""text"" autocomplete=""false""/><input type=""submit"" name=""buttons:next"" onclick="" var b=document.getElementById('next4c'); if (b!=null&amp;&amp;b.onclick!=null&amp;&amp;typeof(b.onclick) != 'undefined') {  var r = b.onclick.bind(b)(); if (r != false) b.click(); } else { b.click(); };  return false;""  /></div>
 <table class=""wicketExtensionsWizardOuterTable"">
  <tr>
   <td valign=""top"">
       
   </td>
   <td valign=""top"">
    <table class=""wicketExtensionsWizardInnerTable"">
     <tr class=""wicketExtensionsWizardHeaderRow"">
      <td valign=""top"" class=""wicketExtensionsWizardHeader""><span wicket:id=""header""><wicket:panel>
<div>
  <div wicket:id=""title"" class=""wicketExtensionsWizardHeaderTitle""></div>
  <div wicket:id=""summary"" class=""wicketExtensionsWizardHeaderSummary""></div>
</div>
</wicket:panel></span></td>
     </tr>
     <tr class=""wicketExtensionsWizardFeedbackRow"">
      <td valign=""top"" class=""wicketExtensionsWizardFeedback""><span wicket:id=""feedback"" id=""feedback3b""><wicket:panel>
  
</wicket:panel></span></td>
     </tr>
     <tr class=""wicketExtensionsWizardViewRow"">
      <td valign=""top"" class=""wicketExtensionsWizardView""><div wicket:id=""view"" class=""wicketExtensionsWizardViewInner""><wicket:panel>
    <div id=""business_summary"">
        <fieldset>
                <legend>Business</legend>
                <!-- Populate with Wicket -->
                <table>
                    <thead>
                        <th>Customer</th><th>Contract Term</th><th>Type</th>
                    </thead>
                    <tr>
                        <td><span>Gamma Telecom</span></td><td><span>24 months</span></td><td><span>Affinity</span></td>
                    </tr>
                </table>
        
        </fieldset>
    </div>
    
    <div id=""tabs"" wicket:id=""tabs""><wicket:panel>
<div wicket:id=""tabs-container"" class=""tab-row"">
<ul>
    
</ul>
</div>
<div wicket:id=""panel"" class=""tab-panel"">[panel]^</div>
</wicket:panel></div>
</wicket:panel></div></td>
     </tr>
     <tr class=""wicketExtensionsWizardButtonBarRow"">
      <td valign=""top"" class=""wicketExtensionsWizardButtonBar"">
      <div id=""submit"" wicket:id=""buttons""><wicket:panel>
<div>
        <wicket:child/>
      <input class=""prev"" wicket:id=""previous"" type=""button"" value=""Previous"" name=""buttons:previous"" id=""previous4d"" onclick=""var wcall=wicketSubmitFormById(&#039;form39&#039;, &#039;./wicket/page?2-1.IBehaviorListener.0-wizard-form-buttons-previous&#039;, &#039;buttons:previous&#039; ,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$$(this)&amp;&amp;Wicket.$$(&#039;form39&#039;)}.bind(this));;; return false;""/>
      <input class=""next"" wicket:id=""next"" type=""button"" value=""Next"" name=""buttons:next"" id=""next4c"" onclick=""var wcall=wicketSubmitFormById(&#039;form39&#039;, &#039;./wicket/page?2-1.IBehaviorListener.0-wizard-form-buttons-next&#039;, &#039;buttons:next&#039; ,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$$(this)&amp;&amp;Wicket.$$(&#039;form39&#039;)}.bind(this));;; return false;""/>
      <input class=""cancel"" wicket:id=""cancel"" type=""button"" value=""Cancel"" name=""buttons:cancel"" id=""cancel4e"" onclick=""var wcall=wicketSubmitFormById(&#039;form39&#039;, &#039;./wicket/page?2-1.IBehaviorListener.0-wizard-form-buttons-cancel&#039;, &#039;buttons:cancel&#039; ,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$$(this)&amp;&amp;Wicket.$$(&#039;form39&#039;)}.bind(this));;; return false;""/>
      <input class=""finish disabled"" wicket:id=""finish"" type=""button"" value=""Finish"" name=""buttons:finish"" disabled=""disabled"" id=""finish4f""/>
</div>
</wicket:panel></div>
      </td>
      
     </tr>
    </table>
   </td>
  </tr>
 </table>
</form>]]></component></ajax-response>","11/Apr/11 11:22;mgrigorov;As I see this is not wicket-examples > ajax > tabbed panel.
Can you create a minimal quickstart that reproduces the problem and attach it to the ticket ?",11/Apr/11 11:37;taroquu;I've tried the tab panel example with the patched jar and it works fine in all browsers. Do you know what might be causing that js error to occur in my application?,"11/Apr/11 11:45;mgrigorov;Wicket.functionExecuterCallbacks is something new in Wicket. It is included with RC3.
Looking in wicket-ajax.js there is no way to contain something different than a function.
That's why I need a quickstart that reproduces the problem.",12/Apr/11 15:05;taroquu;I will investigate this and see if I can work out why its coming up in my application. I'll let you know,"12/Apr/11 15:12;mgrigorov;The original problem is fixed with r1091444.
Please open a new ticket for the other problem when you find a way to reproduce it.
Thanks!

The original problem was the following:
- initially the page is loaded with jsessionid in the url because there is no cookie
- all resources are loaded with jsessionid
- later Ajax response doesn't have jsessionid in the contributed resources' urls because there is a cookie already in use
- in wicket-ajax.js we make a check ""is this resource already contributed?"" and we ignore double contributions
- because of the jsessionid the check was negative for all wicket-***.js resources which caused they to be reloaded and all state information to be lost

I ""translated"" Strings.stripJSessionId() from Java to JavaScript.","26/Apr/11 16:56;barrettas;I ran into the Wicket.functionExecuterCallbacks issue and determined it is due to the wicket-ajax.js resource being pulled in via an AJAX form submission response. This redefines the variable, thus losing the state and then not pulling in any resources that were after wicket-ajax.js in the AJAX response. This issue exists in 1.4.17 and could be fixed by either not reloading wicket-ajax if it is already loaded, as Martin stated they fixed in r1091444, or within wicket-ajax.js make sure the Wicket.functionExecuterSeq and Wicket.functionExecuterCallbacks variables are not reset if they already exist. Something like this may fix it:

Wicket.functionExecuterSeq = Wicket.functionExecuterSeq || 0;
Wicket.functionExecuterCallbacks = Wicket.functionExecuterCallbacks || {};","26/Apr/11 17:11;mgrigorov;Hi Barrett,

This has been fixed in 1.5 with WICKET-3473 and WICKET-3641.
So far no one else reported it for 1.4.x. If you can create a quickstart that reproduces the problem then please attach it to WICKET-3473 and add a comment,
The fix in 3473 can easily be ported to 1.4.x, but the question is ""Why wicket-ajax.js is delivered second time?"" We need a test case to debug it.","26/Apr/11 20:30;barrettas; It is an odd case where we include a wicket panel/page within a non-wicket, static page by loading the component via a jQuery AJAX call. jQuery loads scripts by adding them to head and then immediately removing them. The component contains an AJAX button for form submission, which is completely handled by wicket, and when the response returns it includes a reference to wicket-ajax.js in the head conrtibutions. The Wicket.Head.containsElement check does not see it as already being in head since jQuery removed it so the wicket js adds it again.

 I solved the issue by adding dummy script elements to the head with a src_ attribute set to the script src via ajaxSuccess handling after jQuery initially loads each script. Now the script appears as already loaded and everything works as expected.","13/Jan/12 16:32;schueffi;I just want to report the same behaviour in wicket 1.4.19  
(""Error: Wicket.functionExecuterCallbacks.script1 is not a function"" on first page-load, and on all subsequent page loads it works like a charm).

- On first page load, wicket-event.js and wicket-ajax.js do have a "";jsessionid=..."" parameter.
- When the user now clicks on some ajax-enabled link, the ajax-request gets triggered, and the xml-response from the server looks fine.
- In the xml-response there now is a header-contribution for wicket-ajax.js and wicket-event.js (without sessionid).
- The browser now loads both script-files again (without sessionid, utilizing the cookie instead), and then raising the javascript-exception mentioned earlier.",,,,,,,,,,,,,,,,,,,,
Ajax link reports weird error when session is expired,WICKET-4116,12526359,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,robinshine,robinshine,09/Oct/11 06:21,13/Jan/12 14:35,13/Mar/19 23:17,17/Oct/11 18:10,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"Reproducing steps:

1. Put below simple page into a Wicket application and get it mounted:

TestPage.java:

import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.markup.html.AjaxLink;
import org.apache.wicket.markup.html.WebPage;

@SuppressWarnings(""serial"")
public class TestPage extends WebPage {
	
	public TestPage() {
		
		add(new AjaxLink<Void>(""test"") {

			@Override
			public void onClick(AjaxRequestTarget target) {
			}
			
		});
		
	}
	
}

TestPage.html:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
<?xml version=""1.0"" encoding=""UTF-8""?>
<html xmlns=""http://www.w3.org/1999/xhtml"">
	<head>
		<title>Test Page</title>
	</head>
	<body>
		<a wicket:id=""test"">test</a>
	</body>
</html>

2. Access the page in browser via mounted url, the page will display a link. 

3. Wait until current session is expired (do not refresh the page or click the link while waiting). 

4. Hit the link and below exception will be thrown:
Message: Cannot find behavior with id: 0 on component: [ [Component id = test]]. Perhaps the behavior did not properly implement getStatelessHint() and returned 'true' to indicate that it is stateless instead of returning 'false' to indicate that it is stateful.

5. In wicket 1.5.0, this results in a PageExpiredException which is more comprehensive. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-10-09 10:46:40.826,,,no_permission,,,,,,,,,,,50918,,,Fri Jan 13 14:35:07 UTC 2012,,,,,,0|i0k99b:,116317,,,,,,,,"09/Oct/11 10:46;mgrigorov;With r1180580 if a request to listener interface is executed on expired page then a re-paint of the whole (and new) page is scheduled.
Additionally a debug message is logged.","10/Oct/11 09:07;mgrigorov;The change broke Wicket's StatelessForm. 
I tested only Jolira's stateless components yesterday.","10/Oct/11 09:57;mgrigorov;Improved.
Now listener interfaces again can be executed on stateless pages.  ","13/Oct/11 19:59;ivaynberg; fix broke a bunch of stuff

for example we no longer redirect from /page to /page?0 which causes problems

also querying request handlers for page instance no longer works. most
queries look like this:

if (pageHandler.isPageInstanceCreated())
 return (Page)pageHandler.getPage();

public final boolean isPageInstanceCreated() {
 return !pageComponentProvider.isNewPageInstance(); }

however, since isNewPageInstance() now caches the initial value of
'true' even though the page provider later did create the instance we
now erroneously assume the page instance was not created.

isNewPageInstance() is a horrible name, it really should be
isPageInstanceCreated(). if we need something like
wasPageInstanceProvided() - to know whether or not page provider was
created with or without a page instance to fix WICKET-4116 then we
should add it

or perhaps simpler names:

Page hasPageInstance() and boolean createdPageInstance()","14/Oct/11 16:21;mgrigorov;Can you attach a quickstart ?
","14/Oct/11 16:55;ivaynberg;no need for a quickstart, check wicket-examples...","14/Oct/11 19:59;mgrigorov;I have tested almost all wicket-examples for 1,5,2 and I didn't notice anything wrong...
I'm traveling now and I wont be able to do anything until Monday so either cancel 1.5.2 or improve WICKET-4014/WICKET-4116.","14/Oct/11 20:32;ivaynberg;the examples will still work, but notice there is no redirect from /page to /page?0

this also breaks cdi integration because that code only retrieves the page from the request handler if its created - it uses the isNewPageInstance() to check this, and now it never thinks it is created. i think this is the same root cause that creates the lack of the redirect.

i already -1ed the release. im not sure if i will have time before monday myself...","17/Oct/11 08:34;papegaaij;I consider rev #1184776 an API break. Even though you will not get a compilation error, it breaks methods that worked fine before: RenderPageRequestHandler.isPageInstanceCreated now throws an IllegalStateException for our custom PageProvider where it did not do so before this change. It is not optional to implement IIntrospectablePageProvider, because core functionality depends on it. This is just as bad, or even worse, as adding the methods directly to IPageProvider.",17/Oct/11 15:07;ivaynberg;fixed,17/Oct/11 18:10;mgrigorov;Fixed with r1185315.,"13/Jan/12 14:27;helgoboss;I would prefer if a PageExpiredException would be thrown in such a case. In our project, we need to show the user a special message if he clicks on an Ajax link but the session has expired. If the ListenerInterfaceRequestHandler just does a repaint, you have a hard time detecting what actually happened. Or am I missing something?

Currently I use an ugly workaround on the page which is repainted to detect the timeout and throw a PageExpiredException:


    @Override
    protected void onInitialize() {
        super.onInitialize();
        if (wasRequestedAfterSessionExpiration()) {
            throw new PageExpiredException(""attempt to invoke request on expired listener interface"");
        }
    }

    private boolean wasRequestedAfterSessionExpiration() {
        return getSession().isTemporary() && isListenerInterfaceRequest(getRequest());
    }

    private boolean isListenerInterfaceRequest(Request request) {
        return extractPageComponentInfo(request.getUrl()) != null;
    }

    private PageComponentInfo extractPageComponentInfo(Url url) {
        for (Url.QueryParameter p: url.getQueryParameters()) {
            if (Strings.isEmpty(p.getValue())) {
                PageComponentInfo i = PageComponentInfo.parse(p.getName());
                if (i != null) {
                    return i;
                }
            }
        }
        return null;
    }","13/Jan/12 14:35;mgrigorov;Hi,

This will be possible with WICKET-4290.
There is a new setting in IPageSettings which will switch that behavior.",,,,,,,,,,,,,,,,,,,,,,,,,,
URL parameters containing a single quote are incorrectly escaped,WICKET-4275,12533583,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,gereon.steffens@web.de,gereon.steffens@web.de,02/Dec/11 08:17,11/Jan/12 16:10,13/Mar/19 23:17,11/Jan/12 16:10,1.4.19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,,,wicket,,,,,,,0,escaping,parameter,url,,,,"URL parameters containg a single quote are incorrectly escaped as e.g. ""Joe\'s+Garage"". RFC 2396 doesn't prescribe this escaping, the resulting URL contains an unescaped backslash character (thus making it invalid), and Wicket doesn't undo this escaping when such parameters are parsed.",,,,,,,,,,,,,,,,,,,,,,02/Dec/11 08:19;gereon.steffens@web.de;url-escaping-quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12505859/url-escaping-quickstart.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-12-28 10:30:22.805,,,no_permission,,,,,,,,,,,219311,,,Wed Jan 11 16:10:05 UTC 2012,,,,,,0|i0k8vb:,116254,,,,,,,,02/Dec/11 08:19;gereon.steffens@web.de;quickstart to illustrate the escaping problem,28/Dec/11 10:30;papegaaij;This bug does not affect Wicket 1.5 and 6.0.,"11/Jan/12 16:10;mgrigorov;I replaced the old fix for the CVE with one that removes \0000 and everything after it in the urls.
\0000 is an indication that someone tries to do something nasty.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ModalWindow does not close cleanly,WICKET-4311,12536097,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nsegura3,nsegura3,21/Dec/11 22:56,09/Jan/12 06:18,13/Mar/19 23:17,09/Jan/12 06:18,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket-extensions,,,,,,,0,modal,,,,,,"If you have a modal window implemented as a page, when you close it, it is
not possible to reopen it anymore unless you have set a WindowClosedCallback. This is because WindowClosedBehavior.respond() does not get called, and the ""shown"" flag stays set to true",Windows 7,,,,,,,,,,,,,,,,,,,,,21/Dec/11 22:57;nsegura3;modaltest.zip;https://issues.apache.org/jira/secure/attachment/12508313/modaltest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,221780,,,Wed Dec 21 22:57:34 UTC 2011,,,,,,0|i00w5r:,3142,,,,,,,,21/Dec/11 22:57;nsegura3;Attached quickstart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with AbstractAutoCompleteBehavior on BookmarkablePages,WICKET-4305,12535682,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,daniel.peters,daniel.peters,19/Dec/11 10:57,07/Jan/12 09:44,13/Mar/19 23:17,07/Jan/12 09:44,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket-extensions,,,,,,,0,,,,,,,"AbstractAutoCompleteBehavior internally uses the GET parameter ""q"".
If you are on a bookmarkable page that also uses the parameter q (very common for searches), AutoCompleteTextFields wont work anymore. They will only see the original q parameter that has been used to call the page.
The autocomplete appends the q= param to the URL and read it with getParameter(""q""). Since there are 2 params with the same name now, it will always get the first.

My first fix was to rename the autocomplete parameter to something like ""wicketac:q"", but this breaks WicketStuff-objectautocomplete which uses the same JS, so this is probably not a good idea.

Another idea was to get the _last_ q-parameter of the URL in AbstractAutoCompleteBehavior.
This works quite well...

Code:
protected void respond(final AjaxRequestTarget target)
{
	final RequestCycle requestCycle = RequestCycle.get();
	final List<StringValue> values = requestCycle.getRequest().getRequestParameters()
			.getParameterValues(""q"");
	final String val = (values != null && values.size() > 0) ? values.get(values.size() - 1)
			.toOptionalString() : null;
	onRequest(val, requestCycle);
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-12-20 10:48:17.342,,,no_permission,,,,,,,,,,,221366,,,Tue Dec 20 10:48:17 UTC 2011,,,,,,0|i00w6n:,3146,,,,,,,,"20/Dec/11 10:48;mgrigorov;Check the ""Subversion commits"" tab here to see how I did it in Wicket 6.0. The change revision is r1221193.
If you like it and want it in Wicket 1.5 please port it and attach the patch here. There are minor differences in the .js part.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester#startComponentInPage swallows useful exceptions,WICKET-4318,12536621,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,dalvizu,dalvizu,29/Dec/11 22:47,07/Jan/12 09:41,13/Mar/19 23:17,07/Jan/12 09:41,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"The method BaseWicketTester#startComponentInPage (final Class<C> componentClass, final IMarkupFragment pageMarkup) starts a panel inside of page markup through reflection, and captures all of the exceptions (InvocationTargetException, NoSuchMethodException, etc...) in one big try /catch:

		C comp = null;
		try
		{
			Constructor<C> c = componentClass.getConstructor(String.class);
			comp = c.newInstance(ComponentInPage.ID);
			componentInPage = new ComponentInPage();
			componentInPage.component = comp;
			componentInPage.isInstantiated = true;
		}
		catch (Exception e)
		{
			fail(e.getMessage());
		}

There are two issues with this:

1) This fail() will often not print out anything helpful about the exception that caused the error. For a NullPointerException (along with many other exceptions) you'll simply get back: ""junit.framework.AssertionFailedError: null""

2) You cannot write tests that expect an exception in the constructor, for example if you were using auth-roles and expect to see an UnauthorizedInstantiationException if you provide the wrong role, you cannot test this. You could test this scenario if it were a page, however, because these Exceptions will not be swallowed.",JUnit 4.8.2,,,,,,,,,,,,,,,,,,,,,29/Dec/11 23:05;dalvizu;wicket-4318.patch;https://issues.apache.org/jira/secure/attachment/12508894/wicket-4318.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,222304,,,Thu Dec 29 23:05:34 UTC 2011,,,,,,0|i00w4v:,3138,,,,,,,,29/Dec/11 23:05;dalvizu;Uploading wicket-4318.patch for the 1.5.x branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HeaderResponseContainerFilteringHeaderResponse does not override enough methods,WICKET-4247,12532096,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,andi5,andi5,20/Nov/11 20:12,06/Jan/12 14:01,13/Mar/19 23:17,21/Dec/11 12:17,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,,,wicket,,,,,,,0,,,,,,,"Seen on Wicket 1.5.3 and I think it is still there in SVN.

Major because users might be trapped thinking that their Javascript is at the bottom but it is not, having weird consequences.

Attached is a quickstart. It sets up a header response decorator with a header response sending javascript to the bottom which is optionally wrapped by a simple implementation of an aggregating header response. The wrapper though uses a full-arguments method to render javascript which is not fetched by the other response header. So the javascript ends up in the html head.

It should suffice to override the remaining four (js/css, resource ref/url) render methods to fix this.
",,,,,,,,,,,,,,,,,,,,,,06/Jan/12 13:43;andi5;0001-WICKET-4247-Fix-latest-two-js-additions-to-HeaderRes.patch;https://issues.apache.org/jira/secure/attachment/12509683/0001-WICKET-4247-Fix-latest-two-js-additions-to-HeaderRes.patch,21/Dec/11 10:56;papegaaij;0001-WICKET-4247-override-last-2-renderJavaScript-methods.patch;https://issues.apache.org/jira/secure/attachment/12508225/0001-WICKET-4247-override-last-2-renderJavaScript-methods.patch,20/Nov/11 20:14;andi5;wicket-4247.tar.bz2;https://issues.apache.org/jira/secure/attachment/12504437/wicket-4247.tar.bz2,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-11-28 21:07:28.561,,,no_permission,,,,,,,,,,,217832,,,Fri Jan 06 14:01:27 UTC 2012,,,,,,0|i0k8yf:,116268,,,,,,,,"20/Nov/11 20:14;andi5;Quickstart
Watch WicketApplication.PROXY_HEADER_RESPONSE","28/Nov/11 20:58;andi5;I think I was wrong about ""It should suffice to override the remaining four (js/css, resource ref/url) render methods to fix this. "".

There are still two methods missing. This looks fragile to me :)

So, what shall I do about?
#renderJavaScriptReference(String, String, boolean)
#renderJavaScriptReference(String, String, boolean, String)
","28/Nov/11 21:07;mgrigorov;It is fragile :-)
But this is just because not that many people use these classes...

I'd like to rework IHeaderResponse to have just: renderText(), renderCss(CssAttributes) and renderJavaScript(JavaScriptAttributes). These XyzAttributes will have all specifics for <link/> and <script/>.
Not sure whether this will be part of Wicket 6.0 but it should be soon because more people like you will start using this fragile classes :-)","14/Dec/11 13:38;papegaaij;In the branch on github at https://github.com/papegaaij/wicket/commits/wicket+wiquery IHeaderResponse has been rewritten, including the filters, which fixes this issue.","15/Dec/11 14:41;mgrigorov;@Andreas: do you need this fix in 1.5 ?
These classes are reworked in 6.0 and I'd like to save myself some time if this ticket is only for consistency and completeness and it is not really a stopper for you.","15/Dec/11 19:11;papegaaij;Perhaps for 1.5, it's as easy as adding the last few methods? New methods will not get added in 1.5, as that's an API break.","19/Dec/11 08:32;andi5;It is no stopper for me, but only because I work around and do not use the missing functions.
+1 for Emond's comment.","19/Dec/11 08:35;mgrigorov;Applying a patch is easy :-)
Attach it and I'll commit it.","19/Dec/11 08:43;andi5;Sure, just give me a few days to find some spare time :-)",21/Dec/11 10:56;papegaaij;Fixes the issue in 1.5 by overriding the last 2 methods.,"06/Jan/12 12:59;andi5;Martin, did you really apply the latest patch? I cannot find it.
Kudos to Emond!","06/Jan/12 13:05;mgrigorov;I did: http://git-wip-us.apache.org/repos/asf?p=wicket.git;a=commitdiff;h=4e760f5a
I switched to Git recently.","06/Jan/12 13:23;andi5;Oh, I missed that. Great decision, btw :-D","06/Jan/12 13:42;andi5;I think the patch had a typo, at least my app stopped working...
Please consider the new patch which sits on top of the other.
",06/Jan/12 14:01;papegaaij;You are right. I've committed your patch: http://git-wip-us.apache.org/repos/asf?p=wicket.git;a=commit;h=56ab23584fcb1c3949e69255078239c85dacea69,,,,,,,,,,,,,,,,,,,,,,,,
Confusion between a form component's wicket:id and a PageParameter in Wicket 1.5.x,WICKET-4290,12534810,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,papegaaij,vmontaner,vmontaner,12/Dec/11 17:19,04/Jan/12 19:07,13/Mar/19 23:17,04/Jan/12 19:07,1.5.0,1.5.1,1.5.2,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"A Form has a strange behavior when a component has the same wicket:id than a page parameter.

To create a Bookmarkable link after a form is submited, setResponsePage is called, and a PageParameter object is given as a parameter : 
			PageParameters params = new PageParameters();
			params.add(""searchString"", searchField.getValue());
			setResponsePage(SomePage.class, params);

In Wicket 1.5, if ""searchString"" is also a form-component's wicket:id, the form will only be submitted once : 
searchField.getValue() will always return the first value entered by the user.


Here's an example : 

public class SearchPanel extends Panel {

	public SearchPanel(String id) {
		super(id);
		add(new SearchForm(""searchForm""));
	}

	private class SearchForm extends Form<String> {

		private static final long serialVersionUID = 1L;
		private TextField<String> searchField;

		public SearchForm(String id) {
			super(id);
			searchField = new TextField<String>(""searchString"", new Model<String>(""""));
			add(searchField);
		}

		@Override
		public void onSubmit() {
			PageParameters params = new PageParameters();
			params.add(""searchString"", searchField.getValue());
			setResponsePage(ListContactsPage.class, params);
		}
	}
}


I tested the same application with Wicket 1.4.17 and it was fine. I only had this problem in Wicket 1.5.2 and 1.5.3.","OS Linux Mint
Java 1.6",,,,,,,,,,,,WICKET-4287,,,,,,,,,03/Jan/12 07:51;papegaaij;0001-WICKET-4290-Do-not-render-page-parameters-for-statef.patch;https://issues.apache.org/jira/secure/attachment/12509179/0001-WICKET-4290-Do-not-render-page-parameters-for-statef.patch,29/Dec/11 16:02;papegaaij;0001-WICKET-4290-remove-page-parameters-in-onBeforeRender.patch;https://issues.apache.org/jira/secure/attachment/12508852/0001-WICKET-4290-remove-page-parameters-in-onBeforeRender.patch,13/Dec/11 14:30;vmontaner;Zencontact.tar.gz;https://issues.apache.org/jira/secure/attachment/12507186/Zencontact.tar.gz,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-12-12 17:51:29.539,,,no_permission,,,,,,,,,,,220494,,,Wed Jan 04 19:07:07 UTC 2012,,,,,,0|i00w8n:,3155,,,,,,,,"12/Dec/11 17:51;mgrigorov;Put the example in a quickstart application, please.
Thanks!",13/Dec/11 05:47;svenmeier;page parameter is rendered in form action,"13/Dec/11 14:32;vmontaner;I just attached a simple, mavenized web project : Zencontact.tar.gz

I just noticed something : the bug only appears in the home page. 
If you change getHomePage (in the WebApplication class), to return HomePage.class, the problem will not appear. ","29/Dec/11 16:02;papegaaij;The problem is that Form removes the page parameters from the page that is processing the incoming request and then renders a new page using the original page parameters. This causes the request parameters to be rendered in the action url of the form.

This patch moves the code responsible for removing the conflicting page parameters to onBeforeRender. However, it loses some code that was added for WICKET-3438 (commented lines in the patch). The quickstart that comes with that bug still works correctly though.","02/Jan/12 09:07;mgrigorov;I think the problem lies somewhere else.
org.apache.wicket.Component#urlFor(RequestListenerInterface) and org.apache.wicket.Component#urlFor(Behavior, RequestListenerInterface) pass PageProvider with a Page instance to IRequestMapper and this way page's parameters are encoded in the url.
Page's parameters are the parameters in the request when the page is constructed. They are available in any version of the page lifecycle with page.getPageParameters(). I think they shouldn't be encoded in every Link's href, or Form's action, ...

I think we should change the API for the two methods above to accept PageParameters explicitly. This way the user can decide what parameter to encode in the url.

In 1.5 the old methods will delegate to the new version and will be deprecated. In 6.0 change the API.",03/Jan/12 07:51;papegaaij;Patch that tries to fix this issue as described by Martin,"04/Jan/12 19:07;papegaaij;A slightly modified version of the patch is applied. PageParameters are no longer rendered in urls for stateful components. StatelessForm and StatelessLink do add the parameters.

In Wicket 6.0, the old urlFor methods are removed from Component. In 1.5.x they stay, but marked deprecated. Wicket itself no longer uses them.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringValueConversionException for correct situation,WICKET-4309,12535842,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,phantom,phantom,20/Dec/11 13:17,04/Jan/12 10:16,13/Mar/19 23:17,04/Jan/12 10:16,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,StringValue,StringValueConversionException,,,,,"StringValue.toOptionalLong() produces org.apache.wicket.util.string.StringValueConversionException if empty string was passed.
Let me suggest, that this behavior should be changes for all toOptionalXXX methods except getOptionalString method.

The problem in inner code:

The problem in following code:

public final Long toOptionalLong() throws StringValueConversionException
    {
        return (text == null) ? null : toLongObject();
    }

Should be something like this:

The problem in following code:

public final Long toOptionalLong() throws StringValueConversionException
    {
        return Strings.isEmpty() ? null : toLongObject();
    }

But there is another problem: what to do if incorrect param was passed - for example ""abc"" for parameter of Long type?","Java 1.6, Jboss",,,,,,,,,,,,,,,,,,,,,03/Jan/12 23:18;bitstorm;WICKET-4309.patch;https://issues.apache.org/jira/secure/attachment/12509351/WICKET-4309.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-01-03 23:17:38.464,,,no_permission,,,,,,,,,,,221525,,,Wed Jan 04 10:16:33 UTC 2012,,,,,,0|i00w5z:,3143,,,,,,,,"03/Jan/12 23:17;bitstorm;The discussion for this issue is here: http://mail-archives.apache.org/mod_mbox/wicket-users/201111.mbox/%3CCAEvAQhOFBzXdnabkeYOJKA0iDt4abHWnGqEbsXaYoYsfaXT25g@mail.gmail.com%3E

I've attached a patch which applies proposed changes to all toOptionalXXX methods except toOptionalString.","04/Jan/12 10:16;mgrigorov;Patch applied.
Thanks, Andrea!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester doesn't handle nested forms correctly,WICKET-4298,12535314,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cmenzel,cmenzel,15/Dec/11 14:10,23/Dec/11 10:56,13/Mar/19 23:17,23/Dec/11 10:56,1.4.19,1.5.3,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.4,6.0.0-beta1,wicket,,,,,,,0,,,,,,,"While working on WICKET-4295, I discovered that FormTester doesn't handle nested form submits correctly.

The browser will always submit the outermost form, because that is the only form it sees. Wicket will then determine the correct form by looking at the submitting component. If you create a FormTester on an inner form, however, the test request will point directly at that inner form. This is a problem for the new feature in WICKET-4295, but also in general since it does not correctly model the actual interaction. Also the submitting component is not found due to the wrong form being looked at. (form.getRootForm() == Form.this in Form#findSubmittingButton()) This means that for a nested form, the submitting component could *never* be found! I think it's mostly luck that this is not a bigger issue in tests :-)

It is possible to have the correct handling in a test, if you do newFormTester(outerForm) and then submit with a submit button in the inner form (formtester.submit(""inner:submitButton"")).

I think FormTester should do the correct thing on its own though. The fix is trivial: in submit() don't just use the form it's pointing at, but use form.getRootForm(). This fixes both the correct request handling, as well as the issue with not finding the submitting component.

I'll attach the appropriate patches.",,,,,,,,,,,,,,,,,,,,,,15/Dec/11 14:12;cmenzel;WICKET-4298-1.4-fix-nested-form-handling-in-FormTester.patch;https://issues.apache.org/jira/secure/attachment/12507525/WICKET-4298-1.4-fix-nested-form-handling-in-FormTester.patch,15/Dec/11 14:12;cmenzel;WICKET-4298-1.5-fix-nested-form-handling-in-FormTester.patch;https://issues.apache.org/jira/secure/attachment/12507526/WICKET-4298-1.5-fix-nested-form-handling-in-FormTester.patch,15/Dec/11 14:12;cmenzel;WICKET-4298-6.0-fix-nested-form-handling-in-FormTester.patch;https://issues.apache.org/jira/secure/attachment/12507527/WICKET-4298-6.0-fix-nested-form-handling-in-FormTester.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,220998,,,Thu Dec 15 14:12:56 UTC 2011,,,,,,0|i00w7z:,3152,,,,,,,,"15/Dec/11 14:12;cmenzel;A set of patches against 1.4, 1.5 and trunk. An appropriate test is included. The build did not break, so I assume the fix is safe.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Header contributions order is not stable,WICKET-4000,12520497,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svieujot,svieujot,28/Aug/11 23:17,21/Dec/11 15:17,13/Mar/19 23:17,21/Dec/11 15:17,1.5-RC6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket,,,,,,,0,,,,,,,"In the last RCs, I started to experience problems with the contributions order.
For example, I add jQuery, and until 1.5RC5, it worked well, but now the call to the jQuery script has been moved to the bottom of the page head, and this disables all my other scripts that are expecting jQuery's $ to be defined.

I attach a quickstart to demonstrate the problem.
Maybe the order in the quickstart is not the expected one, but what it shows is that the order does not make real sense (at least to me) :
In the quickstart, the wicket:head tag contributions are in the order 3 - 8 - 9 - 5, and the renderHead methods contributions are in the order 4 - 1 - 2 - 6 - 7.",,,,,,,,,,,,,,,,,,,,,,20/Dec/11 19:01;papegaaij;0001-WICKET-4000-render-all-headers-through-IHeaderRespon.patch;https://issues.apache.org/jira/secure/attachment/12508116/0001-WICKET-4000-render-all-headers-through-IHeaderRespon.patch,28/Aug/11 23:17;svieujot;quickstart-scriptsOrder.zip;https://issues.apache.org/jira/secure/attachment/12492019/quickstart-scriptsOrder.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-08-29 10:18:25.504,,,no_permission,,,,,,,,,,,2562,,,Wed Dec 21 15:17:42 UTC 2011,,,,,,0|i0k9jb:,116362,,,,,,,,"29/Aug/11 10:18;mgrigorov;Running the quickstart with trunk and RC5.1 produces the same sequences: 3, 8, 9, 5, 4, 1, 2, 6, 7.
And according to org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy this is correct.","29/Aug/11 10:58;mgrigorov;Actually it seems in both versions wicket:head may play wrong.
ChildFirstHeaderRenderStrategy says that components' contributions are rendered before page's contributions. So it seems script 5 must be rendered first, not fourth.","29/Aug/11 11:03;svieujot;Ok. I understand the advantage of being able to have a child replace a parent contribution, but I wouldn't it be possible to keep an intuitive order, and to still have the last contribution replace the previous ones inplace ?

Also here the logic is not followed completely as the Application contributions are rendered first anyway.

Last, what I see is that the <wicket:head> is rendered before the code contributions of the renderHead method.
I would suggest to invert this, as usually I guess you would use the renderHead to include more general code / libraries, and then the <wicket:head> to include more specific code, most likely using the libraries contributed by the renderHead method.",29/Aug/11 11:17;mgrigorov;See WICKET-3761 for the reasons.,"29/Aug/11 11:18;svieujot;It looks to me that the above suggestion (contribution order identical to wicket 1.4, but still allowed contributions code override from children) can be implemented by adding a kind of buffer in HeaderResponse, and flushing it once all the headerContributions are done.

It would seem to me a much more user friendly approach, whilst keeping the advantage of being able to override previous contributions.
At least, when I look at my webapps, the current wicket 1.5 contributions order gives me headaches.

What do you think ?","29/Aug/11 11:24;mgrigorov;This buffering is possible with ResponseHeaderDecorator. See http://www.wicket-library.com/wicket-examples/resourceaggregation for example.
But I think this example doesn't use wicket:head.","30/Aug/11 14:33;mgrigorov;What we are going to do here ?
The order is the same as in previous RCs of 1.5 (after WICKET-3761).
Reordering is possible with custom IHeaderResponseDecorator. See org.apache.wicket.resource.aggregation.AbstractResourceAggregatingHeaderResponse.",30/Aug/11 15:29;ivaynberg;imho its too late to tweak this. save it for wicket.next,"30/Aug/11 22:02;svieujot;I don't think we should postpone this for 1.6.
Indeed, 1.5 is changing the default order, and I think this might lead to some breaks in the webapps that are hard to track.
For example, when it breaks the javascript ordering, no compilation warning is going to alert the developers, and only a careful integration testing can detect this. I think webapps using wiquery might suffer from this new ordering (my webapps at least failed).

Furthermore, changing the order in 1.5 whilst knowing that we might revert back to the 1.4 order in 1.6 does not seem right to me.
I would suggest trying to fix this asap, and I am ready to start a patch if you think I am on the right track (It would be my first wicket hack, so don't expect miracles ...).
","31/Aug/11 09:04;mgrigorov;The order from 1.4 is still possible. See org.apache.wicket.markup.renderStrategy.AbstractHeaderRenderStrategy.get().
For Wicket.next we will consider making it easier for the application developer to specify the contribution order. But I can see how this can be problematic for component libraries.

With the current approach (child first) the components contribute their js/css and the page can override them. This is also what you are trying to so, right ?","31/Aug/11 11:05;svieujot;In fact, I am not too much concerned about the override capability. It might be an advantage, but I do not use it or see any use case for this in my applications.

Here are 2 simple scenari that fail with me and that would seem quite an intuitive way to use wicket :

1) You use jQuery in part of the public pages of your website. so it makes sense to add the jQuery contribution in the PublicBasePage.
But as the PublicBasePage contributions come after the children ones, any Panel using jQuery will fail as jQuery will not be loaded yet.

2) Again you want to use jQuery in a page. It makes more sense to put the contribution in the renderHead than in the wicket:head as it is more type safe.
Also, in renderHead, you can use Wiquery's response.renderJavaScriptReference( CoreJavaScriptResourceReference.get() );
In the page, you want to add a custom jquery one liner. It is then much easier to put this one liner in the wicket:head as it will be in the same html, and much less verbose than doing this in the renderHead.
But again this fails, as currently the default is to have first the wicket:head contributions, and later the renderHead.

I understood that you can re-write your own strategy (even if I am not sure that the wicket:head / renderHead order can be altered), but I am quite reluctant to do so, as this means you might have a component library that can work only with some specific webapps.
Also, those problems are quite nasty, as you do not detect them on compilation.

That's why I would suggest :
1) To have 2 renderHead methods renderHeadBeforeMarkup & renderHeadAfterMarkup (or whatever better name).
At least this make the component libraries completely safe and the coding intuitive.

2) To use the former wicket 1.4 default order which is much more intuitive (and which will have the advantage to limit the breakage in the legacy applications).
This is also in line with the java code where the base class constructor is always called before the sub class one (hence the order assumed in my quickstart which would be the natural one for someone not delving into wicket's code).
The implementation would require implementing a buffer in the HeaderResponse to allow the override of parent contributions by the children (if this is a useful feature - frankly I am not sure).
I guess that would also require an additional method (like header.flush) that would be called in the renderCycle.

With those changes, it would also remove the need to have a configurable renderStrategy.","31/Aug/11 11:43;mgrigorov;I see you are confused.

If a component depends on JS library then the component should add a reference for it. It should not expect that the page that uses this component will provide it. The component can implement means to switch off the contribution or to override the ResourceReference if it wants, so it will be possible to use different version of the JS library.

The page contribution should come after the components so that even if the component library doesn't provide ways to switch off/replace the contribution then the page can still override it. This is more valid for CSS contributions and less for JS ones.
As final resort Wicket provides IHeaderResponseDecorator hook so you are able to suppress any ResourceReference you want.

Additionally there are Application scoped IHeaderContributor's which will render their CSS/JS for all pages and always before the pages/components.

The only difference between 1.4 and 1.5 if that components now contribute before the page. That's all. There are no differences in wicket:head vs. renderHead() order.
Additionally there is no sense to use wicket:head in the base Page. It is for Panels and Borders and inherited Pages. In the base page you can (and should) use <head>.

About Java constructors: it is the same in Wicket.
wicket:head order in the quickstart: 3 (BasePage.html) and then 8, 9 (HomePage.html)
renderHead order: 1, 2 (BasePage.java) and then 6, 7 (HomePage.java)

As I said earlier the only one that looks out of order is the Panel contribution. I expect 5 (Header.html) and 4 (Header.java) to be the first two in the line, not in the middle as now. 

1.5.0 is already voted so it is not possible to shuffle them more for 1.5.x thus the ticket is moved to 1.6.x.","31/Aug/11 22:36;svieujot;Then I think my problem boils down to WICKET-3761 .
I want to contribute jQuery via a renderHead method, or via the Applications's HeaderContributors, and currently this means that the jquery library will never be available to any code in a wicket:head.

This is the same as Igor mentioned here : https://issues.apache.org/jira/browse/WICKET-3761?focusedCommentId=13044321&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13044321

Do I have a solution for this ?
The only one I see now is to avoid using wicket:head, and use a <script> tag in the <body> instead.

Thank you.",31/Aug/11 23:46;ivaynberg;we should consider reverting WICKET-3761,01/Sep/11 00:15;svieujot;This would be very helpful !,"02/Sep/11 16:38;svieujot;For information, there was another problem linked to WiQuery (Maybe this issue : http://code.google.com/p/wiquery/issues/detail?id=203 ), and this was inverting the order of some renderHead contributions ... making the all issue even stranger.
wiquery-jquery-ui 1.5-M4 still has the issue, but switching to wiquery-jquery-ui 1.5-SNAPSHOT resolved this specific issue.","13/Dec/11 11:53;papegaaij;Reverting WICKET-3761 just inverts the arbitrarily chosen order and breaks applications that depend on this order. The major issue is that wicket:head is rendered by a different code path than other header contributions. wicket:head should be rendered by IHeaderResponse, making it possible to change the order using rendering strategies or a HeaderResponseDecorator. The default order should stay as it is right now as both orders are equally valid. I'm willing to take this issue after I'm finished with WICKET-4273.","20/Dec/11 07:30;papegaaij;With this patch, all header rendering is done by IHeaderResponse from within the HeaderRenderStrategy. Some tests are failing now, because the order changed, but I think the order defined in these testcases is wrong.",20/Dec/11 19:01;papegaaij;Final version of the patch,"21/Dec/11 15:17;mgrigorov;Fixed in 6.0.x.
The only difference is that wicket:head contributes before same component's #renderHead(). This way the dynamic code can override the static code ",,,,,,,,,,,,,,,,,,,
<script> element in Ajax requests is executed twice in Opera 11,WICKET-3669,12506269,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mschayna,mschayna,05/May/11 10:31,20/Dec/11 13:29,13/Mar/19 23:17,20/Dec/11 13:29,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,6.0.0-beta1,,wicket,,,,,,,0,ajax,javascript,opera,rendering,,,"I have component with behavior which adds <script> element in Behavior.onComponentRendered() to respons. This javascript is to be processed in browser when component is rendered. This works pretty well when component is rendered during standard HTTP request. But when the same code is called from Ajax request, this script runs on browser two times! 

There is some magic in Ajax request processing in wicket-ajax.js: only for Opera and IE these <script> elements from responses are added to HTML and page <header> element as well. Comment says that this is workaround for these browsers, maybe in older versions of Opera dynamically adding element into HTML doesn't run <script> elements within, but now could be obsolete. 
","Opera 11.10, Linux Ubuntu 10.10",,,,,,,,,,,,,,,,,,,,,13/Jul/11 15:33;mschayna;testcase-WICKET-3669-second.tar.gz;https://issues.apache.org/jira/secure/attachment/12486323/testcase-WICKET-3669-second.tar.gz,05/May/11 10:37;mschayna;testcase-WICKET-3669.tar.gz;https://issues.apache.org/jira/secure/attachment/12478262/testcase-WICKET-3669.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-05-10 14:48:07.538,,,no_permission,,,,,,,,,,,2599,,,Tue Dec 20 13:29:08 UTC 2011,,,,,,0|i0kabz:,116491,,,,,,,,"05/May/11 10:37;mschayna;quickstart for WICKET-3669

Opera 11 shows alerts two times with same number
","10/May/11 14:48;mgrigorov;Fixed.
Tested on FF4, Chrome 12, IE8 and Opera 11","13/Jul/11 15:22;mschayna;I'm afraid this ticket must be reopened.

Fix works only for components which has <script> element on its first level (as seen in first test case). When component with script behavior is added to another component (Panel e.g.) and this parent component is changed in AJAX request, script is executed twice in browser again. See my second test case.

I have tried this simple solution: in replaceOuterHtml() method in wicket-ajax.js comment out test for Opera browser, so in this case is executed same code as in Gecko browsers. It works for me in all of my real cases (pretty large application which heavily uses Wicket). It seems like modern Opera versions are more compatible with Gecko than older versions.

{code}
    if (Wicket.Browser.isIE()) {  //-- don't do this for Opera  || Wicket.Browser.isOpera()) {		
    	Wicket.replaceOuterHtmlIE(element, text);				
    } else if (Wicket.Browser.isSafari() ) {
    	Wicket.replaceOuterHtmlSafari(element, text);    	
    } else /* GECKO */ {
       ...
{code}
","13/Jul/11 15:28;mgrigorov;Which second case you mean ?

We know that Opera 11 is not Opera 9. The same is valid for Safari 5 which is treated as Safari 3.
If we do your ""fix"" then some user of Opera 9/10 may complain that it doesn't work ...
We have plans to use JQuery for the functionality needed by wicket-ajax.js so hopefully this will solve all such issues. But this is planned for Wicket 1.6/1.7. ","13/Jul/11 15:33;mschayna;Second test case, where first fix won't work.","13/Jul/11 15:39;mschayna;OK, I see that my simple ""fix"" doesn't work in Opeara 9, hm. 

I upload second test case right now, it demonstrates where your first fix failed. I hope it should be resolved in Wicket 1.4. Thanks for your support.","21/Sep/11 15:26;mschayna;There are no solution out there. Maybe fix for 1.4.x can be unnecessary, but the same fix for 1.5 doesn't work...","20/Dec/11 13:29;mgrigorov;Fixed with the usage of JQuery to replace the DOM.
Tested with Opera 11.60 on Ubuntu.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlResourceStream closes incorrect InputStream causing stacktraces on undeploy on GlassFish,WICKET-4293,12535164,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pdegeus,pdegeus,14/Dec/11 14:27,16/Dec/11 15:47,13/Mar/19 23:17,16/Dec/11 14:17,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,core,ear,glassfish,resource,,,"The UrlResourceStream, used by PackageResources, uses URLConnection#getInputStream() to get file contents. This method is called in UrlResourceStream#getInputStream(), but also when closing the resource in UrlResourceStream#close(). At least on GlassFish v2 and v3, the second call to URLConnection#getInputStream() returns a new stream, so the one created to retrieve the file contents is never closed properly.
This results in a warning of the container when the classes are garbage-collected, for example on undeploy.

The problem is not triggered in all situations. It can be reproduced by using Wicket in a multi-module project consisting of an EAR, WAR and JAR. The JAR must contain a resource (CSS, image, ...) and a Behavior. Inside the Behavior, a static ResourceReference must be created for the resource file.
When using this Behavior from inside the WAR project by loading a page the resource is loaded properly. On undeploy however, the described problem will show up.

The problem does not exists in Wicket 1.4.x, because a reference to the InputStream is stored. A quickstart and patch for 1.5 is available, will try to attach it :)","GlassFish v2.1.1 and GlassFish v.3.1

java version ""1.6.0_29""
Java(TM) SE Runtime Environment (build 1.6.0_29-b11-402-11M3527)
Java HotSpot(TM) 64-Bit Server VM (build 20.4-b02-402, mixed mode)

Mac OS X 10.7.2",,,,,,,,,,,,,,,,,,,,,14/Dec/11 14:29;pdegeus;Wicket153-bug.zip;https://issues.apache.org/jira/secure/attachment/12507356/Wicket153-bug.zip,14/Dec/11 14:29;pdegeus;patch.txt;https://issues.apache.org/jira/secure/attachment/12507357/patch.txt,15/Dec/11 14:46;pdegeus;wicket-core-4293-2.patch;https://issues.apache.org/jira/secure/attachment/12507535/wicket-core-4293-2.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-12-15 12:45:46.073,,,no_permission,,,,,,,,,,,220848,,,Fri Dec 16 13:03:14 UTC 2011,,,,,,0|i00w87:,3153,,,,,,,,"14/Dec/11 14:29;pdegeus;Quickstart to reproduce the bug. Must be ran on GlassFish to be able to see the problem.

The patch on Wicket 1.5-SNAPSHOT fixes the problem.","15/Dec/11 12:45;mgrigorov;We have test for this situation but it doesn't open a new input stream for each call: org.apache.wicket.util.resource.UrlResourceStreamTest.loadJustOnce()

I just committed an improvement that should do what you need.
Try it and give us feedback,
Also try to break/improve the test if you can.
Thanks!","15/Dec/11 14:45;pdegeus;Thanks for your reply, Martin.

Your commit fixes the problem, but has one disadvantage: the call to Connections.close(data.connection) still opens a new InputStream and immediately closes it.
The problem is thereby even broader: every call to Connections.close(URLConnection) has this problem. Please refer to these implementations of URLConnection (in OpenJDK and GlassFish) to see a new stream created for every call:

http://grepcode.com/file/repository.springsource.com/org.apache.geronimo/com.springsource.org.apache.geronimo.kernel/2.0.1/org/apache/geronimo/kernel/classloader/JarFileUrlConnection.java?av=h#JarFileUrlConnection
http://grepcode.com/file/repo1.maven.org/maven2/org.glassfish.common/common-util/10.0-b28/com/sun/enterprise/loader/EJBClassLoader.java?av=h#EJBClassLoader.InternalJarURLConnection

In my opinion all usages of the close(URLConnection) with connections other than HttpURLConnection are faulty and should be checked/changed.
I'll attach a new patch (wicket-core-4293-2.patch) fixing the problem based on your new commit and extending the test you mentioned.","15/Dec/11 14:56;mgrigorov;The real problem is Connections#close() that calls getInputStream().
I don't see a reason to do that.","15/Dec/11 15:00;pdegeus;Exactly, but the streams that are used must of course be closed afterwards, which is what my patch accomplishes.","15/Dec/11 15:19;mgrigorov;Your test improvement is not correct. Or at least doesn't follow the rule that calling getInputStream() should increase the streamCounter.
I'll commit the improved version soon.","15/Dec/11 16:15;pdegeus;Thanks, I'm curiously waiting for your change :)
I noted another potential problem in my patch; the last line of internalGetInputStream should read:

return (data != null) ? data.inputStream : null;","16/Dec/11 09:49;mgrigorov;Hi Pepijn,

Can you please take a look at r1215075 ?
Thanks!","16/Dec/11 11:18;pdegeus;Hi Martin, that looks great. I see you have a different opinion on whether getInputStream should return a single stream instance or always a new one :)
One remaining thing: you're still using Connections.closeQuietly(data.connection), which opens a new stream and immediately closes it. This is unnecessary and I'd suggest to fix that too by removing the call.
Thanks!","16/Dec/11 12:36;mgrigorov;You didn't pay attention then ;-)
Connections#close() no more does this.
Thanks for your help!","16/Dec/11 13:03;pdegeus;Ah sorry, didn't have the wicket-util project open. Shame on me.
It works great now, thank you too :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JavaScript error ""Uncaught TypeError: Cannot read property 'length' of undefined"" in case of CheckGroupSelector and nested forms",WICKET-4300,12535344,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,amorozov,amorozov,15/Dec/11 17:53,16/Dec/11 15:09,13/Mar/19 23:17,16/Dec/11 15:09,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Full stack trace is:

Uncaught TypeError: Cannot read property 'length' of undefined:
(anonymous function)CheckGroupSelector-ver-1323970753862.js:35
Wicket.CheckboxSelector.updateAllCheckboxesAbstractCheckSelector-ver-1323970753862.js:35
(anonymous function)

Caused by CheckGroupSelector.java:

	@Override
	protected CharSequence getFindCheckboxesFunction()
	{
		CheckGroup<?> group = getGroup();
		if (group == null)
		{
			throw new WicketRuntimeException(
				""CheckGroupSelector component ["" +
					getPath() +
					""] cannot find its parent CheckGroup. All CheckGroupSelector components must be a child of or below in the hierarchy of a CheckGroup component."");
		}
		return ""Wicket.CheckboxSelector.Group.findCheckboxesFunction('"" +
			group.getForm().getMarkupId() + ""','"" + group.getInputName() + ""')"";
	}

The generated JS will address HTML form which is attached to check group, but this element may be not a root form (which is rendered as 'div' instead of 'form' element). JS code CheckGroupSelector:js:34 ""parentForm[groupName]"" can be evaluated to 'undefined'. I think, that ""group.getForm().getMarkupId()"" should be replaced by ""group.getForm().getRootForm().getMarkupId()"".




","JDK 1.6u27, Win64, Google Chrome 15.0.x",,,,,,,,,,,,,,,,,,,,,15/Dec/11 17:55;amorozov;myproject.zip;https://issues.apache.org/jira/secure/attachment/12507557/myproject.zip,15/Dec/11 17:56;amorozov;wicket-4300-fix.patch;https://issues.apache.org/jira/secure/attachment/12507558/wicket-4300-fix.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,221028,,,Thu Dec 15 17:56:42 UTC 2011,,,,,,0|i00w7r:,3151,,,,,,,,15/Dec/11 17:55;amorozov;quickstart project,15/Dec/11 17:56;amorozov;patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multipart Form and AjaxSubmitLink will result in invalid redirect after user session expires,WICKET-4251,12532149,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,trixom,trixom,21/Nov/11 13:10,16/Dec/11 14:08,13/Mar/19 23:17,16/Dec/11 14:08,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Hi,

I have hit an issue similar to this one:

https://issues.apache.org/jira/browse/WICKET-3141

I do not receive any errors from Wicket itself to help clarify, so I will try to explain using an example.

The example below with which I could recreate the issue uses the default SignInPanel (in my LoginPage.clas) and AuthenticatedWebSession to authenticate the user and store the session:

	protected Class<? extends WebPage> getSignInPageClass()
	{
		return LoginPage.class;
	}

If the authentiation is succesfull then the user is redirect back to the test page:

			protected void onSignInSucceeded() {
				setResponsePage(Test.class);
			}

So far so good. However if I use a form with setMultiPart(true) in combination with an AjaxSubmitLink as shown in the following piece of code:

import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;
import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.form.Form;

@AuthorizeInstantiation(""USER"")
public class Test extends WebPage {

	public Test()
	{
		super();
		
		final Form testForm = 
				new Form(""testForm"");
	
		testForm.setMultiPart(true);
		
		testForm.add(new AjaxSubmitLink(""testButton"", testForm) {
			
			@Override
			protected void onSubmit(AjaxRequestTarget target, Form form) {
				super.onSubmit();
			};
			
			@Override
			protected void onError(AjaxRequestTarget target, Form form) {
				
			};
		});
				
		add(testForm);
	}
}

And have selected the option ""Remember credentials"" in the SignInPanel, clicking on the testButton AFTER the session has expired will result in:

http://localhost:8080/PaladinWicket/?3-1.IBehaviorListener.0-testForm-testButton&wicket-ajax=true&wicket-ajax-baseurl=.

which displays this in the browser:

This XML file does not appear to have any style information associated with it. The document tree is shown below.
<ajax-response>
<redirect>
<![CDATA[ .?1 ]]>
</redirect>
</ajax-response>",JDK_1.6_027/Windows/Linux/Explorer/Chrome/Firefox,,,,,,,,,,,,,,,,,,,,,24/Nov/11 13:57;mgrigorov;WICKET-4251.patch;https://issues.apache.org/jira/secure/attachment/12505011/WICKET-4251.patch,21/Nov/11 13:59;trixom;myproject.rar;https://issues.apache.org/jira/secure/attachment/12504502/myproject.rar,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-11-21 13:29:09.924,,,no_permission,,,,,,,,,,,217885,,,Thu Nov 24 13:57:14 UTC 2011,,,,,,0|i0k8xz:,116266,,,,,,,,"21/Nov/11 13:29;mgrigorov;Please package these code snippets in an executable quickstart application. This will save us some time to reproduce and debug it.
Thanks!","21/Nov/11 13:59;trixom;Login as test/test and set the ""Remember credentials""

Wait for 1 minute and click on the ""Test"" button.

Thanks!","23/Nov/11 14:15;trixom;Hi,

Is it possible to get an assessment on the issue I am having? Is it maybe something I can workaround for the time being (except disabling ""Remember credentials""...)?

Thanks,

Tom","24/Nov/11 13:57;mgrigorov;Here is a patch that solves the problem.

Details:
the form is submitted with Ajax via iframe, then Wicket detects that the session has expired and redirects to the login page and stores the ""original destination"" (url and post parameters). 
After this redirect the requests are no more Ajax!
Since there is a ""remember me"" cookie the login page automatically re-authenticates and redirects to the original destination (again in non-Ajax request). Here we use the stored url and post parameters and try to redirect but ""wicket-ajax=true"" parameter confuses the logic in ServletWebResponse#sendRedirect() and XML response (<redirect>...</redirect>) is generated instead of normal redirect.

@Igor: I'm assigning the ticket to you to check whether the logic to filter these special parameters is OK to be there. We already have similar logic in UrlInfo class. Maybe this should be extracted in one common place and reused ? Where is this place ?!

Another observation: WebRequest.isAjax() is called many times in request's lifetime. Is it safe to lazy evaluate this boolean and cache it ? ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong Ajax form submit with wicket-1.418 and IBM WebSphere Portal 6.1,WICKET-4223,12531291,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,matutet,matutet,14/Nov/11 08:49,15/Dec/11 14:39,13/Mar/19 23:17,15/Dec/11 14:39,1.4.20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.4,,wicket,,,,,,,6,patch,,,,,,"Recently, when we were developing an application for IBM WebSphere Portal 6.1 (JSR286 Portlet) using Wicket 1.4.18, we had problems with forms that use AjaxButton component for submitting. 

After some investigations, we realized that the problem was on the javascript side (wicket-ajax.js).  The url encoded by IBM WebSphere Portal 6.1 has the following pattern:

/wps/myportal/!ut/p/c5/_very_very_long_string_ended_with_a_slash/

and when wicket-ajax.js do the submit, builds the following url

/wps/myportal/!ut/p/c5/_very_very_long_string_ended_with_a_slash/&wicket:ajax=true

As you can see, this is an invalid URL: after the / must be an ? not an &","Apache Wicket 1.4.18
IBM WebSphere Portal 6.1

",,,,,,,,,,,,,,,,,,,,,14/Nov/11 08:50;matutet;wicket-1.4.x-wicket-ajax.js.patch;https://issues.apache.org/jira/secure/attachment/12503579/wicket-1.4.x-wicket-ajax.js.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-12-15 14:39:22.219,,,no_permission,,,,,,,,,,,217027,,,Thu Dec 15 14:39:22 UTC 2011,,,,,,0|i0k8zr:,116274,,,,,,,,14/Nov/11 08:52;matutet;Patch to solve this problem is attached to this issue,"15/Dec/11 14:39;mgrigorov;Fixed.
Thanks!

The fix for 6.0 will be included in another (bigger) commit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance regression in Component.configure() in 1.5 ,WICKET-4278,12533786,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,04/Dec/11 15:19,15/Dec/11 14:30,13/Mar/19 23:17,15/Dec/11 14:30,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Wicket 1.5 is slower than 1.4 in rendering deep component trees.
See the attached application that adds recursively components with specified depth. In 1.5 it is several times slower than 1.4.

I found several problems:

1) org.apache.wicket.Component.configure() calls org.apache.wicket.Component.setRenderAllowed()
The problems is that configure() is called for each component in the hierarchy and  setRenderAllowed() is overwritten in MarkupContainer to visit all children and call it for them. And the final result is that setRenderAllowed() is called for the parent and all its children, then for the first child and all its children again, and so on...

The solution is to completely remove org.apache.wicket.MarkupContainer.setRenderAllowed()

2) If you increase the number of components to > 1000 in 1.5 we hit StackOverflowError in 
2.1) org.apache.wicket.MarkupContainer.getMarkupType()
2.2) org.apache.wicket.Component.getLocale()
2.3) org.apache.wicket.MarkupContainer.internalMarkRendering(boolean)

For 2.1 and 2.2 I suggest to add transient fields which will cache the calculated value after the first call of the get method.
For 2.3 I don't see a solution for now",,,,,,,,,,,,,,,,,,,,,,04/Dec/11 16:20;mgrigorov;WICKET-4278.patch;https://issues.apache.org/jira/secure/attachment/12506044/WICKET-4278.patch,04/Dec/11 15:23;mgrigorov;WICKET-4278.patch;https://issues.apache.org/jira/secure/attachment/12506043/WICKET-4278.patch,04/Dec/11 15:20;mgrigorov;myproject-1.4.tgz;https://issues.apache.org/jira/secure/attachment/12506041/myproject-1.4.tgz,04/Dec/11 15:20;mgrigorov;myproject-1.5.tgz;https://issues.apache.org/jira/secure/attachment/12506042/myproject-1.5.tgz,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-12-05 13:09:47.33,,,no_permission,,,,,,,,,,,219512,,,Thu Dec 08 07:22:40 UTC 2011,,,,,,0|i0k8uv:,116252,,,,,,,,"04/Dec/11 16:20;mgrigorov;The optimization for the locale breaks WicketTester tests but this is completely problem in MockPageManager because it doesn't serialize the pages and the transient field is not cleaned.
Removing this optimization for now...","05/Dec/11 12:11;mgrigorov;Actually the caching of the locale can be applied. We can null-ify it in Component#onDetach().
","05/Dec/11 13:09;svenmeier;setRenderAllowed() was under suspicion already, but I didn't assume that this code could simply be removed ;).

Together with caching of locale and markupType we're now down to 15% performance degradation.

I'll try to profile another hot-spot.","08/Dec/11 07:22;svenmeier;As powwowed, I removed MarkupContainer#setRenderAllowed()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockHttpServletResponse.addCookie(Cookie) adds duplicate cookies,WICKET-4292,12534952,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,13/Dec/11 13:36,13/Dec/11 14:04,13/Mar/19 23:17,13/Dec/11 14:04,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.protocol.http.mock.MockHttpServletResponse.addCookie(Cookie) makes a bad check whether the cookie to be added is already in the list of cookies.
Since javax.servlet.http.Cookie doesn't implement #equals() ""cookies.remove(cookie)"" wont remove the previous cookie because the identity is different.

According to http://www.ietf.org/rfc/rfc2109.txt, p.4.3.3 :

 If a user agent receives a Set-Cookie response header whose NAME is
   the same as a pre-existing cookie, and whose Domain and Path
   attribute values exactly (string) match those of a pre-existing
   cookie, the new cookie supersedes the old.  However, if the Set-
   Cookie has a value for Max-Age of zero, the (old and new) cookie is
   discarded.  Otherwise cookies accumulate until they expire (resources
   permitting), at which time they are discarded.

I.e. the equality is on the name, path and domain.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,220636,,,2011-12-13 13:36:15.0,,,,,,0|i00w8f:,3154,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve WicketTester handling of cookies ,WICKET-4289,12534782,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,12/Dec/11 12:56,12/Dec/11 15:44,13/Mar/19 23:17,12/Dec/11 15:44,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Several of the startXyz() methods recreate the http servlet request and thus it is not easy to set cookies with wickettester which will be sent to the server side.
Such methods are:
- org.apache.wicket.util.tester.BaseWicketTester.startResourceReference(ResourceReference, PageParameters)
- org.apache.wicket.util.tester.BaseWicketTester.executeListener(Component, RequestListenerInterface)
- org.apache.wicket.util.tester.BaseWicketTester.startPage(IPageProvider)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,220466,,,Mon Dec 12 15:44:40 UTC 2011,,,,,,0|i00w8v:,3156,,,,,,,,12/Dec/11 15:44;mgrigorov;Now the HttpServletRequest is created just once per request cycle and all non-expired cookies are transferred from the last response to the new request.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Select component loses it's value,WICKET-4276,12533592,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,mikulka,mikulka,02/Dec/11 10:25,06/Dec/11 13:19,13/Mar/19 23:17,06/Dec/11 13:19,1.4.19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.4,6.0.0-beta1,wicket-extensions,,,,,,,0,,,,,,,"Select component loses selected option and shows the first option in some situations (one example is when you try to submit a form, but there are validation errors).

It was working fine in 1.4.18, but it's broken in 1.4.19.This must be caused by the solution from this issue https://issues.apache.org/jira/browse/WICKET-3962
I think the problem is likely in Select.isSelected method, where String[] paths = getInputAsArray() is actually an array of uuid-s, so uuid-s are compared to paths.

I haven't tested wicket 1.5, but this problem may also affect 1.5 versions.",,,,,,,,,,,,,,,,,,,,,,02/Dec/11 10:29;mikulka;myproject.zip;https://issues.apache.org/jira/secure/attachment/12505871/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-12-06 13:19:56.154,,,no_permission,,,,,,,,,,,219320,,,Tue Dec 06 13:19:56 UTC 2011,,,,,,0|i0k8v3:,116253,,,,,,,,02/Dec/11 10:29;mikulka;Here's a quickstart project to demonstrate the problem.,06/Dec/11 13:19;svenmeier;completed WICKET-3962 changes in Select#isSelected(SelectionOption),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the wrong option in select components is rendered (Combination of reusing panels and defaultFormProcessing==false),WICKET-3962,12518692,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,osiefart,osiefart,12/Aug/11 12:57,06/Dec/11 10:58,13/Mar/19 23:17,16/Sep/11 09:27,1.4.18,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,,,wicket,,,,,,,1,defaultFormProcessing,select,,,,,"We are reusing a panel (let's say a PersonPanel, two instances). There is a forward / back ajax-navigation between the panels, which is implemented with component.replace. So the component path for the select of both panels are the same. The back-function is implemented with setDefaultFormProcessing(false). If now showing PersonPanel1 --> Forward --> PersonPanel2 --> Back --> PersonPanel1 --> Forward --> PersonPanel2, the selects of the panel 2 are showing the values of panel1.

The Reason:
In the 'Select.isSelected(...)'  the getInputAsArray() is used (instead of the getRawInput()). So request parameters are overruling the raw input, if the component path is the same.

Wicket-Code:

if (hasRawInput()) {
  String[] paths = getInputAsArray();

I think, instead of calling getInputAsArray() the getRawInput()(With a split for the MultiSelect-support) should be used.
",mac os / windows / java 1.5 / java 1.6 / tomcat,600,600,,0%,600,600,,,,,,,,WICKET-64,,,,WICKET-4276,,,14/Aug/11 11:28;mgrigorov;PageScopedValue.patch;https://issues.apache.org/jira/secure/attachment/12490380/PageScopedValue.patch,15/Aug/11 08:28;osiefart;Select.java;https://issues.apache.org/jira/secure/attachment/12490416/Select.java,13/Aug/11 19:53;svenmeier;select-option-uuid.patch;https://issues.apache.org/jira/secure/attachment/12490354/select-option-uuid.patch,12/Aug/11 15:40;osiefart;wicket-3962.zip;https://issues.apache.org/jira/secure/attachment/12490260/wicket-3962.zip,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-08-12 13:58:21.435,,,no_permission,,,,,,,,,,,60493,,,Fri Sep 16 09:27:46 UTC 2011,,,,,,0|i0k9nb:,116380,,,,,,,,12/Aug/11 13:58;mgrigorov;Can you create a quickstart so we can play with it ?,12/Aug/11 15:40;osiefart;Quickstart Example for the bug,12/Aug/11 15:51;sludwig;Note that this issue is related to https://issues.apache.org/jira/browse/WICKET-2949 .,"13/Aug/11 19:53;svenmeier;IMHO we should align Select/SelectOption with how CheckGroup/Check works, i.e. using a uuid as value.
This would fix this bug too.

See attached patch.","14/Aug/11 11:28;mgrigorov;+1 for the patch.

I tried to encapsulate the logic for value generation but later I realized that it will take more bytes for each form component that uses PageScopedValue. So maybe it is not a good idea.","15/Aug/11 08:28;osiefart;Is an uuid construct really necessary? Changing ""String[] paths = getInputAsArray();"" to ""String[] paths = Strings.split(getRawInput(), ';');"" solves the problem. I think, there is no reasonf for using the request params, if there is raw input in the component.","15/Aug/11 19:26;svenmeier;I don't like the uuid too much either, but Check/CheckGroup and Option/OptionGroup do it this way (for whatever reason). Note that these components use getInputAsArray() too.","19/Aug/11 10:58;mgrigorov;The uuid is there because of the scenario in WICKET-64.
I think Select will suffer from the same problem in such scenario - the currently used relative path will break in a repeater.",25/Aug/11 09:38;svenmeier;WICKET-64 ... thanks for the link. So uuid is the way to go ... are you going to commit PageScopedValue or do we want to cut down on a few bytes?,25/Aug/11 09:47;mgrigorov;Apply your patch. It can be improved anytime later.,"16/Sep/11 09:27;svenmeier;aligned Select with CheckGroup and RadioGroup, i.e. use uuid for values",,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException: Header was already written to response!,WICKET-3618,12504438,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,kukushi,kukushi,16/Apr/11 10:10,06/Dec/11 09:03,13/Mar/19 23:17,17/Apr/11 04:59,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"Getting this error for no apparent reason, the code works fine on wicket 1.4.17. Code example with error is attached.

Click on the 'click here' link to see the error occur in the console, below is part of the stack trace.


ERROR - DefaultExceptionMapper     - Unexpected error occurred
java.lang.IllegalStateException: Header was already written to response!
        at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.checkHeader(HeaderBufferingWebResponse.java:62)
        at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.setDateHeader(HeaderBufferingWebResponse.java:131)

        at org.apache.wicket.protocol.http.BufferedWebResponse$SetDateHeaderAction.invoke(BufferedWebResponse.java:241)
        at org.apache.wicket.protocol.http.BufferedWebResponse.writeTo(BufferedWebResponse.java:487)
        at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:225)
        at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:139)
        at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:715)
        at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:274)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
        at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:227)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:138)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1323)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:474)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:517)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:935)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:404)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:184)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:870)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:151)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:346)
        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:596)
        at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1051)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:592)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)
        at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:426)
        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:241)
        at org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnectorEndPoint.run(SslSocketConnector.java:646)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:528)
        at java.lang.Thread.run(Thread.java:619)",windows xp,,,,,,,,,,,,,,,,,,,,,16/Apr/11 10:12;kukushi;wicket-1.5-test.zip;https://issues.apache.org/jira/secure/attachment/12476520/wicket-1.5-test.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-08-26 18:14:27.662,,,no_permission,,,,,,,,,,,63505,,,Tue Dec 06 09:03:56 UTC 2011,,,,,,0|i0kahb:,116515,,,,,,,,"16/Apr/11 10:12;kukushi;an actual example of the error occurring, click on the 'click here' link to see the error occur in the console.","26/Aug/11 18:14;kgignatyev;I also see this exception happening in 1.5-TRUNK but not for this code though, the problem is that stack trace gives no clue which of my components is causing this error to occur

<2011-08-26 11:04:14,493> ERROR [org.apache.wicket.DefaultExceptionMapper] - Unexpected error occurred (qtp1484171702-46)
java.lang.IllegalStateException: Header was already written to response!
	at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.checkHeader(HeaderBufferingWebResponse.java:64)
	at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.setDateHeader(HeaderBufferingWebResponse.java:134)
	at org.apache.wicket.protocol.http.BufferedWebResponse$SetDateHeaderAction.invoke(BufferedWebResponse.java:298)
	at org.apache.wicket.protocol.http.BufferedWebResponse.writeTo(BufferedWebResponse.java:552)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:185)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:147)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:719)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:274)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:283)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:226)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1323)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:476)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:517)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
	at org.eclipse.jetty.server.handler.ContextHandler.__doHandle(ContextHandler.java:937)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:871)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:346)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)
	at java.lang.Thread.run(Thread.java:680)
","11/Nov/11 15:31;jomarl;We're getting this stacktrace logged on certain pages in our application if we do a browser refresh (F5) before the page is fully loaded (""double clicking"" F5)  using Wicket 1.5.3.",06/Dec/11 09:00;yossis;We're also getting this exception with Wicket 1.5.3 when refreshing or closing the tab before a page is loaded. Can this issue be re-opened?,"06/Dec/11 09:03;mgrigorov;Please create a quickstart and attach it to a new ticket.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket 1.5 RC-3 Bug with conditional comments,WICKET-3597,12503398,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,gabrielmoreira,gabrielmoreira,05/Apr/11 14:11,03/Dec/11 15:41,13/Mar/19 23:17,06/Apr/11 18:38,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,javascript,,,,,,IE Conditional Comments with script block causes malformed HTML on Chrome and Firefox.,"Windows 7 64b - Chrome 11, Firefox 3.6",,,,,,,,,WICKET-3420,,,,,,,,,,,,05/Apr/11 14:13;gabrielmoreira;ASF.LICENSE.NOT.GRANTED--Chrome 11 Bug.jpg;https://issues.apache.org/jira/secure/attachment/12475481/ASF.LICENSE.NOT.GRANTED--Chrome+11+Bug.jpg,05/Apr/11 14:15;gabrielmoreira;ASF.LICENSE.NOT.GRANTED--Firefox bug.jpg;https://issues.apache.org/jira/secure/attachment/12475483/ASF.LICENSE.NOT.GRANTED--Firefox+bug.jpg,05/Apr/11 14:14;gabrielmoreira;ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12475482/ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg,05/Apr/11 14:15;gabrielmoreira;myproject.rar;https://issues.apache.org/jira/secure/attachment/12475484/myproject.rar,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-04-06 18:38:07.091,,,no_permission,,,,,,,,,,,204365,,,Sat Dec 03 15:40:59 UTC 2011,,,,,,0|i0kajz:,116527,,,,,,,,06/Apr/11 18:38;mgrigorov;Fixed with r1089558.,"03/Dec/11 15:31;mrvisser;I'm a little curious about the impact of the change in this commit. If you have a script tag that is not of type ""text/javascript"", then injecting a /* into the element may have undesired consequences on the template. Is it not valid to have a script tag with type=""text/html"", and not have /* injected to the output?",03/Dec/11 15:40;mgrigorov;Use org.apache.wicket.markup.html.IHeaderResponse.renderString(CharSequence) for such needs.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RenderedDynamicImageResource doesn't pass PageParameters to rendering code,WICKET-4130,12527173,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cmenzel,cmenzel,14/Oct/11 10:38,27/Nov/11 20:16,13/Mar/19 23:17,18/Oct/11 10:10,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"In 1.5, resources can no longer get request parameters by calling getParameters() but instead get an instance of Attributes. Unfortunately RenderedDynamicImageResponse hides this from its subclasses, it never gets passed on.

I propose to create an additional render method that gets PageParameters in addition to Graphics2D. The default implementation would just call the old render method, so there are no compatibility issues. Additionally, the old method could be deprecated.
",,,,,,,,,,,,,,,WICKET-4267,,,,,,,14/Oct/11 10:42;cmenzel;0001-WICKET-4130-rendereddynamicimageresource-needs-pagep.patch;https://issues.apache.org/jira/secure/attachment/12499015/0001-WICKET-4130-rendereddynamicimageresource-needs-pagep.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-18 10:10:40.114,,,no_permission,,,,,,,,,,,85556,,,Tue Oct 18 10:10:40 UTC 2011,,,,,,0|i0dbuv:,75850,,,,,,,,14/Oct/11 10:43;cmenzel;This patch adds the methods as proposed in the ticket description.,"18/Oct/11 10:10;mgrigorov;Improved.

Hopefully removing 'abstract' from the deprecated #render(Graphics2D) is not ABI break.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableLabel does not work when using CryptoMapper,WICKET-4266,12532802,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,marcelomoralesname,marcelomoralesname,26/Nov/11 19:55,27/Nov/11 12:59,13/Mar/19 23:17,27/Nov/11 12:59,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,wicket-extensions,,,,,,0,ajax,crypto,extension,security,,,"AjaxEditableLabel, from extensions, never works when using CryptoMapper.

The wicket ajax debug window shows a 404, like the following.

INFO: Initiating Ajax GET request on 91uu9ZgjBKhxZoic_SU3NJwUE3Bin1mwtzj6iEczwYDitUclGWhvJg&save=true&ael:editor=edit%20me%20now!?random=0.06433736416511238
INFO: Invoking pre-call handler(s)...
INFO: focus removed from editor3
INFO: focus set on wicketAjaxDebugScrollLock
ERROR: Received Ajax response with code: 404
INFO: Invoking post-call handler(s)...
INFO: Invoking failure handler(s)...


On the server side, the log shows:


DEBUG - taStore$PageSavingRunnable - Saving asynchronously: Entry [sessionId=1a58f8f8ktcthiauyfc3a0ljp, pageId=3]...
DEBUG - DiskDataStore              - Storing data for page with id '3' in session with id '1a58f8f8ktcthiauyfc3a0ljp'
DEBUG - PageAccessSynchronizer     - 'qtp552451240-21' notifying blocked threads
ERROR - AbstractCrypt              - Error decoding text: 7gg4MWWtY8WW6zszrUHAJJUziEUEOZ6CTzt3NJ2Z36Wgjbno59hklA&save=true&ael:editor=edit me
java.lang.RuntimeException: Unable to decrypt the text '81e�cŖ�;3�A�$�3�E9��O;w4��ߥ������d��'
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:150)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptUrlSafe(AbstractCrypt.java:66)
	at org.apache.wicket.request.mapper.CryptoMapper.decryptUrl(CryptoMapper.java:159)
	at org.apache.wicket.request.mapper.CryptoMapper.mapRequest(CryptoMapper.java:102)
	at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:181)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:206)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1326)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:940)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:874)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:349)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:904)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:565)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:217)
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:50)
	at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:245)
	at org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnectorEndPoint.run(SslSocketConnector.java:667)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
	at java.lang.Thread.run(Thread.java:679)
Caused by: javax.crypto.IllegalBlockSizeException: Input length must be multiple of 8 when decrypting with padded cipher
	at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:750)
	at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:676)
	at com.sun.crypto.provider.PBECipherCore.doFinal(PBECipherCore.java:422)
	at com.sun.crypto.provider.PBEWithMD5AndDESCipher.engineDoFinal(PBEWithMD5AndDESCipher.java:323)
	at javax.crypto.Cipher.doFinal(Cipher.java:1813)
	at org.apache.wicket.util.crypt.SunJceCrypt.crypt(SunJceCrypt.java:94)
	at org.apache.wicket.util.crypt.AbstractCrypt.decryptByteArray(AbstractCrypt.java:146)
	... 32 more
ERROR - CryptoMapper               - Error decrypting URL
java.lang.IllegalArgumentException: Argument 'url' may not be null.
	at org.apache.wicket.util.lang.Args.notNull(Args.java:41)
	at org.apache.wicket.request.Url.parse(Url.java:127)
	at org.apache.wicket.request.mapper.CryptoMapper.decryptUrl(CryptoMapper.java:160)
	at org.apache.wicket.request.mapper.CryptoMapper.mapRequest(CryptoMapper.java:102)
	at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:181)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:206)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1326)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:940)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:874)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:349)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:904)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:565)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:217)
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:50)
	at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:245)
	at org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnectorEndPoint.run(SslSocketConnector.java:667)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
	at java.lang.Thread.run(Thread.java:679)
DEBUG - RequestCycle               - No suitable handler found for URL 7gg4MWWtY8WW6zszrUHAJJUziEUEOZ6CTzt3NJ2Z36Wgjbno59hklA&save=true&ael:editor=edit%20me?random=0.6775260255672038, falling back to container to process this request
","jetty 7.5.0.v20110901

Apache Maven 3.0.3 (r1075438; 2011-02-28 13:31:09-0400)
Maven home: /home/marcelo/local/apache-maven-3.0.3
Java version: 1.6.0_23, vendor: Sun Microsystems Inc.
Java home: /usr/lib/jvm/java-6-openjdk/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""3.0.0-13-generic"", arch: ""amd64"", family: ""unix""

java version ""1.6.0_23""
OpenJDK Runtime Environment (IcedTea6 1.11pre) (6b23~pre11-0ubuntu1.11.10)
OpenJDK 64-Bit Server VM (build 20.0-b11, mixed mode)


Distributor ID:	Ubuntu
Description:	Ubuntu 11.10
Release:	11.10
Codename:	oneiric
",,,,,,,,,,,,,,,,,,,,,26/Nov/11 19:56;marcelomoralesname;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12505214/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,218535,,,Sat Nov 26 19:56:35 UTC 2011,,,,,,0|i0k8vr:,116256,,,,,,,,26/Nov/11 19:56;marcelomoralesname;Quickstart to show the problem,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread Test Uses Sun Proprietary API,WICKET-4265,12532738,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jwcarman,jwcarman,25/Nov/11 17:05,27/Nov/11 11:57,13/Mar/19 23:17,27/Nov/11 11:57,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,,,,,,,,0,,,,,,,The ResourceTestPage class uses classes from com.sun.* packages to do image I/O.  This breaks the build for me using Oracle's JDK7 on linux (see environment).  You should use the ImageIO class instead.,"Apache Maven 3.0.3 (r1075438; 2011-02-28 12:31:09-0500)
Maven home: /usr/local/programs/current/maven
Java version: 1.7.0_01, vendor: Oracle Corporation
Java home: /usr/local/programs/jdk1.7.0_01/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""2.6.35.14-103.fc14.x86_64"", arch: ""amd64"", family: ""unix""
",,,,,,,,,,,,,,,,,,,,,25/Nov/11 17:06;jwcarman;WICKET-4265.patch;https://issues.apache.org/jira/secure/attachment/12505142/WICKET-4265.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-27 11:57:00.899,,,no_permission,,,,,,,,,,,218471,,,Sun Nov 27 11:57:00 UTC 2011,,,,,,0|i0k8vz:,116257,,,,,,,,25/Nov/11 17:06;jwcarman;A patch which fixes the issue.,27/Nov/11 11:57;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavaSerializer Does Not Call SerializableChecker,WICKET-4264,12532736,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jwcarman,jwcarman,25/Nov/11 16:28,27/Nov/11 11:48,13/Mar/19 23:17,27/Nov/11 11:48,1.5.0,1.5.1,1.5.2,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"In the new JavaSerializer class, it has a CheckerOutputStream which extends ObjectOutputStream.  The intent is to use the ObjectOutputStream.writeObjectOverride() support.  However, the writeObjectOverride() method is never called unless you use the no-arg constructor from the ObjectOutputStream class (which sets the ""enableOverride"" flag to true).  The CheckerOutputStream uses the ObjectOutputStream(OutputStream) constructor in its constructor.  Worse yet, even if the writeObjectOverride() method were to be  called, it would create a StackOverflowError because it's calling the super.writeObject() method which is what called it in the first place (infinite recursion).

","Apache Maven 3.0.3 (r1075438; 2011-02-28 12:31:09-0500)
Maven home: /usr/local/programs/current/maven
Java version: 1.7.0_01, vendor: Oracle Corporation
Java home: /usr/local/programs/jdk1.7.0_01/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""2.6.35.14-103.fc14.x86_64"", arch: ""amd64"", family: ""unix""",,,,,,,,,,,,,,,,,,,,,25/Nov/11 17:03;jwcarman;WICKET-4264.patch;https://issues.apache.org/jira/secure/attachment/12505141/WICKET-4264.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-27 11:48:45.882,,,no_permission,,,,,,,,,,,218469,,,Sun Nov 27 11:48:45 UTC 2011,,,,,,0|i0k8w7:,116258,,,,,,,,25/Nov/11 17:03;jwcarman;Here is what I propose to be the solution.  Let me know what you think and I'll try to come up with a way to write a unit test for this.,"27/Nov/11 11:48;mgrigorov;Thanks for the patch, James!
I fixed it almost like you did in the patch, just I preserved the method signatures.
No API breaks, no new classes used.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket autocomplete keeps working on the replaced element when somehow the element is replaced by another ajax request when it is shown.,WICKET-4261,12532711,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,jcompagner,jcompagner,25/Nov/11 12:44,25/Nov/11 13:07,13/Mar/19 23:17,25/Nov/11 12:45,1.4.19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.4,6.0.0-beta1,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,218444,,,2011-11-25 12:44:32.0,,,,,,0|i0k8wf:,116259,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"TreeColumn not displayed when there is only one ""Alignment.MIDDLE"" column",WICKET-4226,12531388,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,tahitiangabriel,tahitiangabriel,15/Nov/11 00:37,24/Nov/11 16:10,13/Mar/19 23:17,24/Nov/11 16:10,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket-extensions,,,,,,,0,column,treetable,,,,,"When you create a TreeTable with only one column in the middle (Alignment.MIDDLE), the column is not display in the browser.

When you look at the HTML code, the width is set to 00%:
...
<div class=""a_"">
    <span class=""b_"" style=""width:00%"">
       <span class=""c_"">...
    </span>
</div>
...

The error comes from the MiddleColumnsView class where the number is formatted :

        /**
	 * @see org.apache.wicket.MarkupContainer#onRender()
	 */
	@Override
	protected void onRender()
	{
		Response response = RequestCycle.get().getResponse();
		double widths[] = computeColumnWidths();

		NumberFormat nf = NumberFormat.getNumberInstance(Locale.ENGLISH);
		nf.setMaximumFractionDigits(0);
		nf.setMaximumIntegerDigits(2);            //  <--------- Should be nf.setMaximumIntegerDigits(3);  to handle value > 99

		for (int i = 0; i < columns.size(); ++i)
		{
			Component component = components.get(i);
			IRenderable renderable = renderables.get(i);
			IColumn column = columns.get(i);

			// write the wrapping column markup
			response.write(""<span class=\""b_\"" style=\""width:"" + nf.format(widths[i]) + ""%\"">"");


To reproduce you can use the TreeTablePage class from wicket example and keep only one ""middle"" column :
...
                IColumn columns[] = new IColumn[] {
				new PropertyTreeColumn<String>(new ColumnLocation(Alignment.MIDDLE, 8,
					Unit.PROPORTIONAL), ""Tree Column (middle)"", ""userObject.property1""),
				new PropertyRenderableColumn<String>(
					new ColumnLocation(Alignment.RIGHT, 8, Unit.EM), ""R1"", ""userObject.property6""), };
...
",,,,,,,,,,,,,,,,,,,,,,15/Nov/11 00:45;tahitiangabriel;MiddleColumnsView.patch;https://issues.apache.org/jira/secure/attachment/12503698/MiddleColumnsView.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,217124,,,Tue Nov 15 00:45:05 UTC 2011,,,,,,0|i0k8zj:,116273,,,,,,,,15/Nov/11 00:45;tahitiangabriel;Patch for wicket 1.5.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatePicker fails to display when rendered via ajax response,WICKET-4213,12530902,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,wimvr,wimvr,09/Nov/11 17:35,24/Nov/11 15:22,13/Mar/19 23:17,24/Nov/11 15:22,1.5.1,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket-datetime,,,,,,,0,patch,,,,,,"When a DatePicker is rendered on a Page, it properly displays. But, when you put it on a Panel that is rendered via an AjaxLink, it will not show the datapicker icon, but generate a javascript error instead.

If you look carefully, you'll see it appearing for a very short time when the Panel is rendered, but then it disappears again and you see javascript error.",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,09/Nov/11 17:37;wimvr;DatePicker.java.patch;https://issues.apache.org/jira/secure/attachment/12503103/DatePicker.java.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,216640,,,Wed Nov 09 17:37:51 UTC 2011,,,,,,0|i0k90f:,116277,,,,,,,,"09/Nov/11 17:37;wimvr;With this patch, the issue is fixed. It will prepend the javascript to remove the datepicker in case the field is refreshed via ajax. The current code seems to execute after displaying the new datepicker, removing the just drawn datepicker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Checks in IRequestMapper.mapHandler should be on page instance, if available",WICKET-4250,12532137,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,papegaaij,papegaaij,21/Nov/11 10:56,24/Nov/11 14:36,13/Mar/19 23:17,24/Nov/11 14:36,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"AbstractBookmarkableMapper and MountedMapper only check if a the page class match that of the mount, even when a page instance is available. This makes it difficult to use the classes as superclass in a single-page application, where the same page can be mounted at different urls. The attached patch allows checks on the page instance to be implemented in subclasses.",,,,,,,,,,,,,,,,,,,,,,21/Nov/11 10:57;papegaaij;0001-WICKET-4250.patch;https://issues.apache.org/jira/secure/attachment/12504491/0001-WICKET-4250.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-24 14:22:49.083,,,no_permission,,,,,,,,,,,217873,,,Thu Nov 24 14:22:49 UTC 2011,,,,,,0|i0k8y7:,116267,,,,,,,,"24/Nov/11 14:22;mgrigorov;I guess a test case wont be very simple to be created...
At least the patch is simple.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal Window respond 404 with Internet Explorer.,WICKET-4241,12531908,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,m_seko,m_seko,18/Nov/11 09:39,23/Nov/11 07:00,13/Mar/19 23:17,23/Nov/11 07:00,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket-extensions,,,,,,,0,,,,,,,"Modal Window respond 404 with Internet Explorer.
Stack trace is displayed on the console.
This issue does not occur in chrome.

the stack trace below.
WARN  - WicketObjects              - Could not resolve class [wicket]
java.lang.ClassNotFoundException: wicket
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)
    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)
    at java.lang.Class.forName0(Native Method)
    at java.lang.Class.forName(Class.java:242)
    at org.apache.wicket.application.AbstractClassResolver.resolveClass(AbstractClassResolver.java:108)
    at org.apache.wicket.util.lang.WicketObjects.resolveClass(WicketObjects.java:68)
    at org.apache.wicket.request.mapper.AbstractComponentMapper.getPageClass(AbstractComponentMapper.java:138)
    at org.apache.wicket.request.mapper.BookmarkableMapper.parseRequest(BookmarkableMapper.java:110)
    at org.apache.wicket.request.mapper.AbstractBookmarkableMapper.mapRequest(AbstractBookmarkableMapper.java:263)
    at org.apache.wicket.request.mapper.CompoundRequestMapper.mapRequest(CompoundRequestMapper.java:130)
    at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:181)
    at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:206)
    at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
    at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
    at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
    at java.lang.Thread.run(Thread.java:595)",Internet Explorer (IE),,,,,,,,,,,,,,,,,,,,,22/Nov/11 14:22;bitstorm;WICKET-4241.patch;https://issues.apache.org/jira/secure/attachment/12504753/WICKET-4241.patch,18/Nov/11 09:41;m_seko;WICKET-4241.zip;https://issues.apache.org/jira/secure/attachment/12504189/WICKET-4241.zip,21/Nov/11 02:22;m_seko;WICKET-4241_with_patch1.zip;https://issues.apache.org/jira/secure/attachment/12504460/WICKET-4241_with_patch1.zip,21/Nov/11 02:23;m_seko;WICKET-4241_with_patch1_404_error.png;https://issues.apache.org/jira/secure/attachment/12504461/WICKET-4241_with_patch1_404_error.png,21/Nov/11 02:23;m_seko;WICKET-4241_with_patch1_debug.png;https://issues.apache.org/jira/secure/attachment/12504462/WICKET-4241_with_patch1_debug.png,,,,5.0,,,,,,,,,,,,,,,,,,,2011-11-18 11:08:37.007,,,no_permission,,,,,,,,,,,217644,,,Wed Nov 23 04:09:43 UTC 2011,,,,,,0|i0k8z3:,116271,,,,,,,,18/Nov/11 09:41;m_seko;attach quickstart,"18/Nov/11 11:08;bitstorm;Inside modal.js there is this if block:

if(Wicket.Browser.isIELessThan9()){
	this.content.contentWindow.location.replace(this.settings.ie8_src);
}else{
	this.content.contentWindow.location.replace(this.settings.src);
}

I might be wrong but It seems that 'ie8_src' is never initialized. Removing if block (leaving just 'this.content.contentWindow.location.replace(this.settings.src);') seems to fix the issue. ","18/Nov/11 11:11;mgrigorov;This has been introduced by a similar ticket in 1.5.2 I think by Pedro.
Use svn blame to find the other ticket and if we find a solution for both quickstarts it'll be perfect.","20/Nov/11 18:56;bitstorm;The parameter 'settings.ie8_src' is not initialize inside ModalWindow if page is stateless. I've added initialization also for this case.

Tested with IE 6 and 8.","21/Nov/11 02:21;m_seko;Thank you.
But, in my environment do not seem to have fixed.

I builded wicket-extensions with patch. And test.
Modal Window respond 404 with Internet Explorer(6 and 8).

Patch does not seem to run.

Attached quickstart and screenshot.
WICKET-4241_with_patch1.zip
WICKET-4241_with_patch1_404_error.png
WICKET-4241_with_patch1_debug.png",21/Nov/11 02:22;m_seko;attached WICKET-4241_with_patch1.zip,21/Nov/11 02:23;m_seko;attached WICKET-4241_with_patch1_404_error.png,21/Nov/11 02:23;m_seko;WICKET-4241_with_patch1_debug.png,22/Nov/11 14:21;bitstorm;I've updated the patch and tested it with your quickstart and with Wicket modal window examples (with IE 6 and Firefox). I look forward to your feedbacks.,"22/Nov/11 14:29;mgrigorov;Looks good to me.
Let's see whether it fixes the problem in Masaya's application and then we will apply it.","23/Nov/11 04:09;m_seko;Modal window runs properly.
To running with Internet explorer(6 and 8) and Chrome.

I'm glad.
Thank you.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug in org.apache.wicket.validation.validator.UrlValidator,WICKET-4255,12532343,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jamerlan,jamerlan,22/Nov/11 14:55,23/Nov/11 06:44,13/Mar/19 23:17,23/Nov/11 06:44,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Looks like there is a bug in UrlValidator. It validates URLs like ""http://testhost.local/pages/index.php"" as invalid.
But URL is valid! Try to execute ""new java.net.URL(""http://testhost.local/pages/index.php"");"" for example. It does not throws ""MalformedURLException"" because URL is valid.

In method: UrlValidator.isValidAuthority() there is code: ""if (topLevel.length() < 2 || topLevel.length() > 4){return false;}"" Looks like this ""> 4"" is a wrong constraint.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,218076,,,2011-11-22 14:55:49.0,,,,,,0|i0k8xr:,116265,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket-auth annotation always denies access if the deny list is empty,WICKET-3974,12519288,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mmg,mmg,18/Aug/11 12:28,18/Nov/11 11:00,13/Mar/19 23:17,18/Nov/11 11:00,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket-auth-roles,,,,,,,0,,,,,,,"I am developing a web application that uses the wicket-auth framework 1.4.17,
more specifically the following class :

org.apache.wicket.authorization.strategies.role.annotations.AnnotationsRoleAuthorizationStrategy

and I am experiencing an issue that I think might be a bug (but I'm not sure, it might be
that I'm doing something wrong). I am using an annotation like below :

	@AuthorizeAction(action = ..., roles = ...)

However I have found that I am always denied access to the page. I have traced the reason
of the access to the following code, in method ""check"" of the above class :

	if (hasAny(new Roles(authorizeActionAnnotation.deny())))
	{
		return false;
	}

The deny list returned by ""authorizeActionAnnotation.deny()"" is empty, therefore ""hasAny""
always returns true, which means that when the deny list is empty you are always denied
access to the page!

Maybe it's a feature but it sounds like counter-intuitive to me :) Using the following
annotation did fix the issue :

	@AuthorizeAction(action = ..., deny=""dummyRoleToDeny"", roles = ...)

I posted this on the mailing list and obtained confirmation that this seems to be an incorrect check,
and not a misunderstanding on my part
",,,,,,,,,,,,,,,,,,,,,,23/Aug/11 10:54;mgrigorov;WICKET-3974.patch;https://issues.apache.org/jira/secure/attachment/12491333/WICKET-3974.patch,23/Aug/11 09:56;mgrigorov;WICKET-3974.patch;https://issues.apache.org/jira/secure/attachment/12491328/WICKET-3974.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-08-23 09:56:23.055,,,no_permission,,,,,,,,,,,63774,,,Thu Aug 25 11:00:33 UTC 2011,,,,,,0|i0k9mf:,116376,,,,,,,,"23/Aug/11 09:56;mgrigorov;Unfortunately the fix needs small API break.
org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeAction.roles() and #deny() have type String[] but their defaults for some reason are """". They have to be {}, i.e. empty array, not empty string.

Is it OK to include this fix in 1.5 RC at least ?",25/Aug/11 11:00;mgrigorov;It's an API break (minor) so it will have to wait for the next major release.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
INamedParameters.getAllNamed() returns a list of NamedPairs defined as inner class of PageParameters,WICKET-4076,12523916,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jgallardo,jgallardo,21/Sep/11 20:11,17/Nov/11 16:04,13/Mar/19 23:17,17/Nov/11 16:04,1.5.0,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket,,,,,,,0,api-change,,,,,,"In an attempt to create my own implementation of PageParameterEncoder and PageParameters, I encountered the following problem with the API:

The interface INamedParameters defines the method getAllNamed() that returns a list of NamedPairs defined as inner class of PageParameters .

I believe that an interface shouldnt be referencing any element from an implementation to be a true extensible interface. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-21 20:18:58.042,,,no_permission,,,,,,,,,,,2605,,,Wed Sep 21 20:18:58 UTC 2011,,,,,,0|i0k9cv:,116333,,,,,,,,21/Sep/11 20:18;ivaynberg;moved NamedPair out of PageParams and inside the interface,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CompoundRequestMapper sort broken with big negative compatibilityScore,WICKET-4217,12531126,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,jriehn,jriehn,11/Nov/11 12:27,11/Nov/11 12:32,13/Mar/19 23:17,11/Nov/11 12:32,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,,,wicket,,,,,,,0,,,,,,,"the following fails for RequestMapper with big negative compatibilityScore:

public int compareTo(final MapperWithScore o)
{
	return o.compatibilityScore - compatibilityScore;
}

see patch with testcase.",,,,,,,,,,,,,,,,,,,,,,11/Nov/11 12:29;jriehn;wicket-request.patch;https://issues.apache.org/jira/secure/attachment/12503368/wicket-request.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-11 12:32:34.299,,,no_permission,,,,,,,,,,,216864,,,Fri Nov 11 12:32:58 UTC 2011,,,,,,0|i0k907:,116276,,,,,,,,11/Nov/11 12:29;jriehn;TestCase and possible fix,11/Nov/11 12:32;svenmeier;applied patch.,11/Nov/11 12:32;svenmeier;Thanks Jan.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make CryptoMapper easier to extend,WICKET-4140,12527499,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,thomas.goetz,thomas.goetz,17/Oct/11 21:07,10/Nov/11 12:50,13/Mar/19 23:17,10/Nov/11 12:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,,,wicket,wicket-extensions,,,,,,0,,,,,,,The links for changing tabs are not encoded by CryptoMapper when using an AjaxTabbedPanel (see attached QuickStart). Haven't tested this in other AJAX components yet.,"Mac OSX 10.7.2
java version ""1.6.0_26""
Java(TM) SE Runtime Environment (build 1.6.0_26-b03-383-11A511)
Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02-383, mixed mode)",,,,,,,,,,,,,,WICKET-4139,,,,,,,10/Nov/11 12:50;mgrigorov;BookmarkableCryptoMapper.java;https://issues.apache.org/jira/secure/attachment/12503198/BookmarkableCryptoMapper.java,17/Oct/11 21:08;thomas.goetz;QuickStart.zip;https://issues.apache.org/jira/secure/attachment/12499442/QuickStart.zip,19/Oct/11 12:54;mgrigorov;QuickStart_Wicket_1_4_19.tgz;https://issues.apache.org/jira/secure/attachment/12499674/QuickStart_Wicket_1_4_19.tgz,18/Oct/11 18:44;thomas.goetz;QuickStart_Wicket_1_4_19.zip;https://issues.apache.org/jira/secure/attachment/12499578/QuickStart_Wicket_1_4_19.zip,18/Oct/11 14:19;mgrigorov;WICKET-4140.patch;https://issues.apache.org/jira/secure/attachment/12499543/WICKET-4140.patch,,,,5.0,,,,,,,,,,,,,,,,,,,2011-10-18 05:44:30.694,,,no_permission,,,,,,,,,,,88691,,,Thu Nov 10 12:50:09 UTC 2011,,,,,,0|i0k96v:,116306,,,,,,,,"18/Oct/11 05:44;svenmeier;You've mounted the home page *after* setting the cryptomapper as root, thus sidestepping the crypting.","18/Oct/11 06:13;thomas.goetz;CryptoMapper needs to be mounted *before* mounting pages, else all BookmarkablePages are not accessible at their mount point (because URL is encoded). You can try it my attached QuickStart: just flip the mounting of CrytoMapper and Homepage and try to open localhost:8080/Home ---> 404","18/Oct/11 06:29;thomas.goetz;Ok, the problem seems to be that CryptoMapper - when mounted as last mapper - somehow ""overwrites"" the mapping of formerly mounted pages and throws an exception when trying to open them. I'll create a new ticket for that.",18/Oct/11 14:15;mgrigorov;Reopening the ticket for further investigation.,"18/Oct/11 14:19;mgrigorov;Attaching a patch that allows to preserve the mounted paths.
TODO: apply encrypting for urls produced by PageInstanceMapper (i.e. starting with Application.getMapperContext().getorg.apache.wicket.request.mapper.IMapperContext.getNamespace()+getPageIdentifier())","18/Oct/11 14:22;mgrigorov;@Thomas: can you attach a quickstart for 1.4.19 that shows that the scenario worked as you want it, i.e. the mounted paths are not encrypted.
If you can provide such quickstart then this is a regression and we have to improve it.","18/Oct/11 15:34;svenmeier;The CrytoMapper is supposed to encrypt urls, why should part of it be preserved? IMHO it would be easier to just redirect to crypted urls:

setRootRequestMapper(new CryptoMapper(getRootRequestMapper(), this));
        
RedirectRequestMapper redirectMapper = new RedirectRequestMapper();
redirectMapper.redirect(""foo"", FooPage.class);
redirectMapper.redirect(""bar"", BarPage.class);
mount(redirectMapper);","18/Oct/11 15:59;mgrigorov;Yes, this is also how I understand it - CryptoMapper encrypts everything. But Thomas said in IRC that the old impl in 1.4.x behaves as he wants it. So maybe we have a regression.","18/Oct/11 16:23;ivaynberg;i wouldnt necessarily consider it a regression...it doesnt have to work 1:1

if you mount a page outside the crypto mapper then why should urls generated back to that page should be crypted?
perhaps what we need is what sven suggested, something that exposes a bookmarkable url and redirects to a crypted version when its hit.","18/Oct/11 16:29;mgrigorov;It is all about WICKET-4014...
Thomas wants his mounted points visible, i.e. hitting ""/Home"" should work. But he also wants the Ajax links to be encrypted.
Since WICKET-4014 the Ajax links use the mount point to be able to recreate an expired page and thus the Ajax urls are not encrypted.","18/Oct/11 18:44;thomas.goetz;Attached a Wicket 1.4.19 QuickStart, demonstrating the favoured behavior: mounted pages (accessible via their mount path) and encrypted ajax links. ","19/Oct/11 12:39;mgrigorov;Even with RedirectMapper the favoured behavior wont work.
First request to ""/Home"" will be OK but then CryptoMapper will create encrypted urls for the BookmarkablePageLinks in the page and from there on the url in the address bar wont be bookmarkable anymore.",19/Oct/11 12:54;mgrigorov;Uploading a version of 1.4.19 that actually uses BookmarkablePageLink (QuickStart_Wicket_1_4_19.tgz).,19/Oct/11 13:25;mgrigorov;In 1.4.x it was working because the encrypted data was stored in the query string (x=dfhdhywgavsag) while now in 1.5.x the whole url is encrypted. ,10/Nov/11 12:50;mgrigorov;Here is an example that by extending CryptoMapper you can preserve the mount paths.,,,,,,,,,,,,,,,,,,,,,,,,
"DatePicker dialog closed, when the user clicks on calendar navigator with autoHide == true",WICKET-4206,12530716,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,avskor,avskor,08/Nov/11 13:40,09/Nov/11 10:59,13/Mar/19 23:17,09/Nov/11 10:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket-datetime,,,,,,,0,,,,,,,"Configure Calendar Navigator http://developer.yahoo.com/yui/examples/calendar/calnavigator_clean.html
and set DatePicker autoHide option to true:

        DateTextField date2 = new DateTextField(""date2"");
        final DatePicker datePicker = new DatePicker() {
            @Override
            protected String getAdditionalJavaScript() {
                 return ""${calendar}.cfg.setProperty(\""navigator\"",true,false); ${calendar}.render();"";
            }
        };
        datePicker.setAutoHide(true);

DatePicker dialog closed on month or year selection",,,,,,,,,,,,,,,,,,,,,,08/Nov/11 13:41;avskor;fix-WICKET-4206.patch;https://issues.apache.org/jira/secure/attachment/12502915/fix-WICKET-4206.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-09 10:59:36.585,,,no_permission,,,,,,,,,,,216454,,,Wed Nov 09 10:59:36 UTC 2011,,,,,,0|i0k90n:,116278,,,,,,,,08/Nov/11 13:41;avskor;Patch,09/Nov/11 10:59;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket fails to start when deployed filenames contain space characters,WICKET-4203,12530631,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,fziglar,fziglar,07/Nov/11 21:00,09/Nov/11 08:34,13/Mar/19 23:17,09/Nov/11 08:34,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"When upgrading from Wicket 1.4 to 1.5, Wicket may fail to start with an exception like:

org.apache.wicket.WicketRuntimeException: java.net.URISyntaxException: Illegal character in path at index 12: file:/W:/Dev Projects/Portal/website/web/WEB-INF/classes/wicket.properties
	at org.apache.wicket.application.AbstractClassResolver.getResources(AbstractClassResolver.java:156)
	at org.apache.wicket.Application.initializeComponents(Application.java:491)
	at org.apache.wicket.Application.initApplication(Application.java:808)
	at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:346)
	at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:286)
	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:662)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:224)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at com.google.appengine.tools.development.JettyContainerService.startContainer(JettyContainerService.java:186)
	at com.google.appengine.tools.development.AbstractContainerService.startup(AbstractContainerService.java:182)
	at com.google.appengine.tools.development.DevAppServerImpl.start(DevAppServerImpl.java:172)
	at com.google.appengine.tools.development.DevAppServerMain$StartAction.apply(DevAppServerMain.java:164)
	at com.google.appengine.tools.util.Parser$ParseResult.applyArgs(Parser.java:48)
	at com.google.appengine.tools.development.DevAppServerMain.<init>(DevAppServerMain.java:113)
	at com.google.appengine.tools.development.DevAppServerMain.main(DevAppServerMain.java:89)
Caused by: java.net.URISyntaxException: Illegal character in path at index 12: file:/W:/Dev Projects/Portal/website/web/WEB-INF/classes/wicket.properties
	at java.net.URI$Parser.fail(URI.java:2809)
	at java.net.URI$Parser.checkChars(URI.java:2982)
	at java.net.URI$Parser.parseHierarchical(URI.java:3066)
	at java.net.URI$Parser.parse(URI.java:3014)
	at java.net.URI.<init>(URI.java:578)
	at java.net.URL.toURI(URL.java:918)
	at org.apache.wicket.application.AbstractClassResolver.loadResources(AbstractClassResolver.java:177)
	at org.apache.wicket.application.AbstractClassResolver.getResources(AbstractClassResolver.java:139)
	... 24 more

This issue was not present in Wicket 1.4.

The problem could be corrected by moving the deployment path for the application to a folder that contains no space characters in the absolute path name. However, finding and changing the appropriate configuration settings throughout the framework and IDE can be somewhat cumbersome.

After some investigation, it appears the cause is a change made for WICKET-3867, which relies on URL.toURI(). The javadocs for this method state that:
""Note, any URL instance that complies with RFC 2396 can be converted to a URI. However, some URLs that are not strictly in compliance can not be converted to a URI."". It appears that wicket may not be able to rely on ClassLoader.getResources to return a URL which is safe to convert to a URI using this method.

I am humbly supplying a proposed patch, which selects a URI constructor to invoke instead of using URL.toURI. The constructors for URI are designed to accept paths that are not strictly compliant, and canonicalize them to a compliant form. I believe this will correctly construct URIs for equality checks, even when the ClassLoader does not return RFC-2396 compliant URLs.",,,,,,,,,,,,,,,,,,,,,,08/Nov/11 16:40;mgrigorov;WICKET-4203-externalForm.patch;https://issues.apache.org/jira/secure/attachment/12502928/WICKET-4203-externalForm.patch,07/Nov/11 21:04;fziglar;WICKET-4203-loadResources.patch;https://issues.apache.org/jira/secure/attachment/12502805/WICKET-4203-loadResources.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-11-08 16:29:14.073,,,no_permission,,,,,,,,,,,216369,,,Tue Nov 08 21:17:36 UTC 2011,,,,,,0|i0k91b:,116281,,,,,,,,"07/Nov/11 21:04;fziglar;Proposed patch.

Please review this patch: I'm afraid I haven't been able to load the entire unit test framework to fully test it. However, the patch seems to pass the testing framework I have loaded, as well as correcting the problem noted.",07/Nov/11 21:10;fziglar;Sorry for the typo!,"08/Nov/11 16:29;mgrigorov;Isn't it better to use URL.toExternalForm() instead of transforming the URL back and forth to URI ?
We just need to return all unique URLs in all asked ClassLoaders. ",08/Nov/11 16:40;mgrigorov;Please try with this patch.,"08/Nov/11 21:17;fziglar;Hello,

Your patch works like a champ for me!

I was concerned from the linked issue that URIs might have been selected to provide an extra degree of canonicalization. If the more flexible equality check of URI is not required, then I agree that toExternalForm() seems ideal here. And since the URLs all come from ClassLoader.getResources, it does seem unlikely that this class will encounter equal URLs with different strings (like different case letters for the schemes).

Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListenerInterfaceRequestHandler fails with an exception if a new page is created and the component does not exist on that page,WICKET-4197,12530279,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,papegaaij,papegaaij,04/Nov/11 13:31,05/Nov/11 05:21,13/Mar/19 23:17,05/Nov/11 05:21,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"ListenerInterfaceRequestHandler.response looks up the component on the page, but does not handle ComponentNotFoundException thrown by PageAndComponentProvider when the component does not exist. A situation where this might occur, is that the page instance is fresh and the component is added in onBeforeRender.

The attached quickstart demonstrates the problem. Copy the URL of the link at the bottom, paste it in the location bar and change the page id, simulating an expired page (ie session timeout). This will give a ComponentNotFoundException.",,,,,,,,,,,,,,,,,,,,,,04/Nov/11 13:33;papegaaij;0002-WICKET-4197.patch;https://issues.apache.org/jira/secure/attachment/12502394/0002-WICKET-4197.patch,04/Nov/11 13:32;papegaaij;quickstart.tar.bz2;https://issues.apache.org/jira/secure/attachment/12502392/quickstart.tar.bz2,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,216061,,,2011-11-04 13:31:27.0,,,,,,0|i0k91r:,116283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RestartResponseException does not work correctly with newly created page instances,WICKET-4198,12530333,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,04/Nov/11 16:06,04/Nov/11 16:07,13/Mar/19 23:17,04/Nov/11 16:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,,,,,,,,0,,,,,,,restart response exception is not passing the page instance to pageprovider so a redirect to a bookmarkable version of the page's url is made which craps out if page is not bookmarkable.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,216071,,,2011-11-04 16:06:16.0,,,,,,0|i0k91j:,116282,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redirecting in unit tests breaks when upgrading from Wicket 1.4.15 to 1.4.18,WICKET-4086,12524612,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,gertjan_schouten,gertjan_schouten,26/Sep/11 10:02,01/Nov/11 14:16,13/Mar/19 23:17,01/Nov/11 14:16,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,,,,,,,"I've attached a unit test according to the Wicket archetype. The unit test fails. If you replace 1.4.18 with 1.4.15 in the pom.xml, the unit test will succeed. It's really simple code, just redirect to another page and test this.","Linux, Ubunbtu 10.10",,,,,,,,,,,,,,,,,,,,,26/Sep/11 10:03;gertjan_schouten;myproject.zip;https://issues.apache.org/jira/secure/attachment/12496459/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-01 14:16:45.614,,,no_permission,,,,,,,,,,,2566,,,Tue Nov 01 14:16:45 UTC 2011,,,,,,0|i0k9br:,116328,,,,,,,,"26/Sep/11 10:03;gertjan_schouten;Contains wicket project created with wicket archetype. Unit test fails with 1.4.18, but succeeds with 1.4.15","01/Nov/11 14:16;mgrigorov;The use case works in 1.5.

Here is the upgraded code:


WicketTester tester = new WicketTester(new WicketApplication());
        tester.setFollowRedirects(false);
    
	    //start and render the test page
		tester.startPage(HomePage.class);

		//assert rendered page class
		tester.assertRenderedPage(TestPage.class);

		assertTrue(tester.getLastResponse().isRedirect());
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BookmarkablePageLinks not working on a forwarded page,WICKET-4138,12527392,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,chrisc,chrisc,17/Oct/11 05:13,31/Oct/11 15:16,13/Mar/19 23:17,31/Oct/11 15:16,1.5.0,1.5.1,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"While migrating our app from 1.4 to 1.5 we have discovered a problem with how BookmarkablePageLinks are rendered.

The attached quickstart demonstrates the problem:

Two pages: HomePage and OtherPage mounted at: /content/home and /content/other respectively.

These are mounted using the encoder UrlPathPageParametersEncoder for backwards compatibility with existing 1.4 style URLs.

A filter has been established in web.xml to forward requests to root (eg., localhost) to localhost/content/home
[Note: I have left out the port :8080 part from all URL references so please insert when testing]

Point browser to http://localhost and the page is forwarded to http://localhost/content/home and displays correctly (browser URL still shows http://localhost as desired) but the links do not work because they remove the 'content' segment of the URL:

eg., Home link -> http://localhost/home - fails - should have been http://localhost/content/home

If you type in the full URL: http://localhost/content/home

then the home page displays and the links work correctly.

A similar page set  up works fine in 1.4.","Windows XP, Quad Core Intel, 2GB RAM",,,,,,,,,,,,,,,,,,,,,19/Oct/11 12:36;mgrigorov;ForwardAttributes.java;https://issues.apache.org/jira/secure/attachment/12499673/ForwardAttributes.java,17/Oct/11 05:14;chrisc;ForwardingFromRoot.zip;https://issues.apache.org/jira/secure/attachment/12499256/ForwardingFromRoot.zip,19/Oct/11 12:31;mgrigorov;WICKET-4138.patch;https://issues.apache.org/jira/secure/attachment/12499669/WICKET-4138.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-10-19 12:31:30.003,,,no_permission,,,,,,,,,,,87568,,,Wed Oct 19 23:56:33 UTC 2011,,,,,,0|i0k973:,116307,,,,,,,,17/Oct/11 05:14;chrisc;This quickstart demonstrates the bug.,"17/Oct/11 22:41;chrisc;If I get Wicket to handle the ""/"" mount path and not the separate filter then it seems to work. Hopefully I will be able to refactor for 1.5 so that the separate filter ignores the ""/"" mount path and leaves it up to Wicket to handle.

The reason the separate filter is currently handling the ""/"" mount path is that the app is multi tenanted and supports many virtual hosts. It uses a URL parameter strategy where the value is an organization ID like /o/123 to specify the organization ID to display. An incoming request for www.abc.com is forwarded to www.abc.com/content/home/o/123 but we should be able to determine the org ID from the domain name and let wicket perform its natural rendering of the page returned by getHomePage().

If this works out then this issue will no longer be an issue for us.",19/Oct/11 12:31;mgrigorov;Here is a minimal patch that fixes the problem.,"19/Oct/11 12:35;mgrigorov;Igor,

Can you take a look?
Do we need ForwardAttributes (like ErrorAttributes) ?
My investigation shows that UrlRenderer#getBaseUrl() should not always take into account javax.servlet.forward.request_uri. Only renderRelativeXYZ() may use it otherwise infinite redirects happen.

Additionally  should we make org.apache.wicket.protocol.http.servlet.ServletWebRequest.shouldPreserveClientUrl() aware of forward attributes ? I'm not sure.",19/Oct/11 20:01;chrisc;You added ForwardAttributes but I can't see any reference to that in the code base or the patch. How is it used?,"19/Oct/11 20:04;ivaynberg;its not used yet, it was just an idea he prototyped...","19/Oct/11 23:56;chrisc;I applied the patch and now the above mentioned links in our app works fine under Wicket 1.5. Great work!

When will this patch be committed to the trunk?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListenerInterfaceRequestHandler should not assume existence of a page,WICKET-4185,12529239,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,papegaaij,papegaaij,28/Oct/11 11:58,31/Oct/11 13:26,13/Mar/19 23:17,31/Oct/11 13:26,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,ListenerInterfaceRequestHandler should not assume a page instance is always available in isPageInstanceCreated. This handler can also be used for links on bookmarkable pages. The attached patch fixes this.,,,,,,,,,,,,,,,,,,,,,,28/Oct/11 11:59;papegaaij;0001-WICKET-4185.patch;https://issues.apache.org/jira/secure/attachment/12501281/0001-WICKET-4185.patch,28/Oct/11 12:22;papegaaij;0001-testcase-for-WICKET-4185.patch;https://issues.apache.org/jira/secure/attachment/12501285/0001-testcase-for-WICKET-4185.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,215099,,,2011-10-28 11:58:48.0,,,,,,0|i0k91z:,116284,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error page resource relative urls are wrong,WICKET-4168,12528672,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,kan.izh,kan.izh,25/Oct/11 13:23,29/Oct/11 03:03,13/Mar/19 23:17,28/Oct/11 21:10,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"The wicket page exposed as 404 error page has wrong links to resources. The sample project is attached.

Run the project with ""mvn jetty:run"" and go to url ""http://localhost:8080/bug/404"" - it's mapped wicket page, works perfect. But if you type any wrong url such as ""http://localhost:8080/bug/aaaaaa"" the page doesn't have styles and images.",,,,,,,,,,,,,,,,,,,,,,27/Oct/11 14:51;kan.izh;fix-WICKET-4168.patch;https://issues.apache.org/jira/secure/attachment/12501098/fix-WICKET-4168.patch,25/Oct/11 13:25;kan.izh;myproject.zip;https://issues.apache.org/jira/secure/attachment/12500672/myproject.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-10-25 22:41:25.688,,,no_permission,,,,,,,,,,,214532,,,Sat Oct 29 02:38:39 UTC 2011,,,,,,0|i0k947:,116294,,,,,,,,25/Oct/11 13:25;kan.izh;Sample project based on quickstart maven project.,25/Oct/11 22:41;pedrosans;The problem is that ServletWebRequest#getClientUrl method is returning a client URL that includes the context path. When responding it uses the errorAttributes.getRequestUri() URL to create the client one.,"26/Oct/11 13:59;pedrosans;I don't know why ServletWebRequest#getClientUrl is testing error attributes in request and using the error URI, it is the address of the resource causing problems, but getClientUrl is designed to to return only the base URL without context or filter mapping.

Simply remove the test for error attributes an its logic fix this BUG and have no impact at WICKET-3599, WICKET-3551 but breaks some test expectations.","26/Oct/11 14:13;kan.izh;I think it should use error URI, because actual page could be on different level, not in root as /404. A test case for the fix should include urls like """"http://localhost:8080/bug/aaaaaa/bbbb/cccc"". Also to check if it works after moving the ""/404"" mapping to somewhere else, e.g. ""/error/http/404"".","27/Oct/11 13:54;mgrigorov;I can add that the attached quickstart works fine when started with Start.java.
It seems Jetty acts differently when started with 'mvn jetty:run' and embedded.
Going to test with Tomcat7.","27/Oct/11 13:58;mgrigorov;The application works fine when deployed at Tomcat 7.0.21 at context path /4168.
Both /4168/404 and /4168/fasdshshds  show the error page.
I would blame maven-jetty-plugin or the config in this project's pom.xml","27/Oct/11 14:24;kan.izh;Are you sure? Just tried it with JBossAS7 and Tomcat 7.0.22. Fails everywhere. I suspect you have deployed it on ROOT once, and ""../../"" works.

As I see, the problem is in the getClientUrl method. If it's normal page it uses the private method ""getUrl"", and it does remove context and filter paths, but for an error page it doesn't. Hence all resource relative urls have extra 2 levels up ""../../"".","27/Oct/11 14:31;mgrigorov;I did: 
- mvn package
- cp target/*.war $TC7/webapps/4168.war
- start TC7
- open http://localhost:8080/4168 (home page)
- open http://localhost:8080/4168/gfshhffdhdhdh (the error page)
- open http://localhost:8080/4168/404 (the error page)",27/Oct/11 14:51;kan.izh;Fix added,"27/Oct/11 14:57;kan.izh;I do exactly the same! And it fails for me.
Could you show content of the page? It should contain [<img src=""logo.png"" width..../>], but I have [<img src=""../../logo.png"" width.../>]. Also could you try ""http://localhost:8080/4168/gf/s/h/h/f/fdhdhdh"" please?","27/Oct/11 16:28;pedrosans;Hi, in order to simulate the bug here using Firefox I have to clean the browser cache each time I go to the problematic URL.","28/Oct/11 20:13;pedrosans;Oh, also the the context path can't be empty. I'm using here 
class Start{
...
  bb.setContextPath(""/bug"");
...
}",28/Oct/11 21:44;kan.izh;Sorry. Are you sure it's fixed in 1.5.2??,"28/Oct/11 21:51;kan.izh;Also, the fix r1190596 invokes setParameters twice for error urls - from getContextRelativeUrl and after it.","29/Oct/11 02:38;pedrosans;Why are you asking?
OK, I will double check the setParameters usage.",,,,,,,,,,,,,,,,,,,,,,,,
AppendingStringBuffer.insert  infinite loop,WICKET-4184,12529233,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dmeggy,dmeggy,28/Oct/11 11:06,28/Oct/11 16:25,13/Mar/19 23:17,28/Oct/11 16:25,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"When trying to insert a StringBuffer into an AppendingStringBuffer, the method 

public AppendingStringBuffer insert(final int offset, final Object obj)

will call itself repeatedly generating an infinite loop.

The fix would be to call toString() method if the object is a StringBuffer


public AppendingStringBuffer insert(final int offset, final Object obj)
	{
		if (obj instanceof AppendingStringBuffer)
		{
			AppendingStringBuffer asb = (AppendingStringBuffer)obj;
			return insert(offset, asb.value, 0, asb.count);
		}
		else if (obj instanceof StringBuffer)
		{
			//return insert(offset, obj);
                       return insert(offset, obj.toString());

		}
		return insert(offset, String.valueOf(obj));
	}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,215093,,,2011-10-28 11:06:31.0,,,,,,0|i0k927:,116285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in JsonRequestLogger when logging resource requests,WICKET-4183,12529203,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,papegaaij,papegaaij,28/Oct/11 07:14,28/Oct/11 08:42,13/Mar/19 23:17,28/Oct/11 08:42,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"The use of NopAnnotationIntrospector causes NullPointerExceptions when trying to log enum values. The attached patch fixes this by changing to JacksonAnnotationIntrospector, which is the default introspector.",,,,,,,,,,,,,,,,,,,,,,28/Oct/11 07:14;papegaaij;0001-fix-NPE-in-requestlogger.patch;https://issues.apache.org/jira/secure/attachment/12501250/0001-fix-NPE-in-requestlogger.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,215063,,,2011-10-28 07:14:33.0,,,,,,0|i0k92f:,116286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RequestCycle listeners's ondetach() is ran before pages are detached, should be the other way around",WICKET-4181,12529126,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,27/Oct/11 19:25,27/Oct/11 21:14,13/Mar/19 23:17,27/Oct/11 21:14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,,,,,,,,0,,,,,,,request cycle listeners sometimes control resources used by the pages. these resources should still be available in page#detach() but currently this is called after all user-registered listener's detach() methods - it should be the other way around.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,214986,,,2011-10-27 19:25:32.0,,,,,,0|i0k92n:,116287,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebApplication.unmount(String) doesn't work if invoked from Application#init() (or IInitializer#init()),WICKET-4180,12529077,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,27/Oct/11 16:34,27/Oct/11 16:40,13/Mar/19 23:17,27/Oct/11 16:40,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"java.lang.IllegalArgumentException: Argument 'requestCycle' may not be null.
  at org.apache.wicket.util.lang.Args.notNull(Args.java:41)
  at org.apache.wicket.Application.fetchCreateAndSetSession(Application.java:1516)
  at org.apache.wicket.Session.get(Session.java:159)
  at org.apache.wicket.request.mapper.BufferedResponseMapper.getSessionId(BufferedResponseMapper.java:48)
  at org.apache.wicket.request.mapper.BufferedResponseMapper.getAndRemoveBufferedResponse(BufferedResponseMapper.java:58)
  at org.apache.wicket.request.mapper.BufferedResponseMapper.mapRequest(BufferedResponseMapper.java:85)
  at org.apache.wicket.request.mapper.CompoundRequestMapper.unmount(CompoundRequestMapper.java:193)
  at org.apache.wicket.protocol.http.WebApplication.unmount(WebApplication.java:374)
  at com.mycompany.WicketApplication.init(WicketApplication.java:22)
  at org.apache.wicket.Application.initApplication(Application.java:807)
  at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:346)
  at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:286)

BufferedResponseMapper tries to create a session in non-http thread.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,214937,,,2011-10-27 16:34:52.0,,,,,,0|i0k92v:,116288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong argument to request logger in DebugBar panel,WICKET-4151,12527915,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,20/Oct/11 12:23,27/Oct/11 14:14,13/Mar/19 23:17,27/Oct/11 14:14,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"While testing Wicket 1.5.2 I faced the following exception:

java.lang.IllegalArgumentException: copy.length must be at least 500
     at org.apache.wicket.util.lang.Args.isTrue(Args.java:137)
     at org.apache.wicket.protocol.http.AbstractRequestLogger.copyRequestsInOrder(AbstractRequestLogger.java:161)
     at org.apache.wicket.protocol.http.AbstractRequestLogger.getRequests(AbstractRequestLogger.java:147)
     at org.apache.wicket.devutils.inspector.RequestsPage$1.getObject(RequestsPage.java:90)
     at org.apache.wicket.devutils.inspector.RequestsPage$1.getObject(RequestsPage.java:88)
     at org.apache.wicket.Component.getDefaultModelObject(Component.java:1639)
     at org.apache.wicket.markup.html.list.PageableListView.getViewSize(PageableListView.java:154)
....

Steps to reproduce:
- start wicket-examples in DEVELOPMENT mode so that the devutils' DebugBar is displayed at the top-right corner of the page
- open any example and click on ""Inspector"" link from the debug bar
- click on ""All Sessions"" link at the top of the page
- click on ""Enable Request Recording""
- refresh the current page so that a record with the current session appears in the table at the bottom
- click on the session id link",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,92324,,,2011-10-20 12:23:57.0,,,,,,0|i0k95z:,116302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect URL for setResponsePage() within a Form#onSubmit( ),WICKET-4173,12528840,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aws1032,aws1032,26/Oct/11 09:33,27/Oct/11 13:21,13/Mar/19 23:17,27/Oct/11 13:21,1.5.1,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,,,,,,,,0,wicket,,,,,,"If the WebApplication uses IRequestCycleSettings.RenderStrategy.ONE_PASS_RENDER, the issue described and exemplified in the attached quickstart at

https://issues.apache.org/jira/browse/WICKET-3442

prevails. 

Clicking the link on /pageone results in this URL: /pageone?0-1.IFormSubmitListener-form",,,,,,,,,,,,,,,,,,,,,,26/Oct/11 10:12;aws1032;brokenform.tar.gz;https://issues.apache.org/jira/secure/attachment/12500856/brokenform.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-27 13:21:08.804,,,no_permission,,,,,,,,,,,214700,,,Thu Oct 27 13:21:08 UTC 2011,,,,,,0|i0k93r:,116292,,,,,,,,26/Oct/11 10:12;aws1032;The corresponding quickstart.,"27/Oct/11 13:21;mgrigorov;Fixed with r1189742.

From now on RequestCycle.setResponsePage(Class [, PageParameters]) will always require a redirect.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When resource responds with 404 custom error page rendering fails,WICKET-3599,12503513,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,akiraly,akiraly,06/Apr/11 13:33,26/Oct/11 13:05,13/Mar/19 23:17,09/Apr/11 16:26,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"I have a webapp where the 404 error page is rendered by wicket. The home page contains an image with a dynamic resource. When the resource responds with 404, wicket throws the following exception:

org.apache.wicket.DefaultExceptionMapper - Unexpected error occurred
org.apache.wicket.request.handler.ComponentNotFoundException: Could not find component 'foo' on page 'class wicket.NotFoundPage
	at org.apache.wicket.request.handler.PageAndComponentProvider.getComponent(PageAndComponentProvider.java:167)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.getComponent(ListenerInterfaceRequestHandler.java:81)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:142)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:715)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:138)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)

""foo"" is the id of the dynamic image on the HomePage, NotFoundPage is the 404 page. It seems wicket is mixing up the component hierarchy and the markup in this case.",,,,,,,,,,,,,,,WICKET-4168,,,,,,,09/Apr/11 15:58;mgrigorov;wicket-3599.patch;https://issues.apache.org/jira/secure/attachment/12475894/wicket-3599.patch,06/Apr/11 13:36;akiraly;wicket-404-page.zip;https://issues.apache.org/jira/secure/attachment/12475586/wicket-404-page.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-04-09 08:10:29.319,,,no_permission,,,,,,,,,,,204367,,,Sat Apr 09 16:26:14 UTC 2011,,,,,,0|i0kajj:,116525,,,,,,,,"06/Apr/11 13:36;akiraly;Attaching example maven project. Steps to repro:
1. Compile & deploy to servlet container
2. Visit http://localhost:8080/wicket-404-page/

This should result in an exception on the server side.

I see there was a similar issue not long ago: WICKET-3551.","09/Apr/11 08:10;mgrigorov;The problem is in org.apache.wicket.protocol.http.servlet.ServletWebRequest.getUrl(HttpServletRequest, String)
Here javax.servlet.http.HttpServletRequest.getRequestURI() returns ""/404"" and javax.servlet.http.HttpServletRequest.getQueryString() returns ""0-IResourceListener-foo"".
I'm still not sure why the query string is preserved by the web container (Jetty).",09/Apr/11 15:58;mgrigorov;A patch that fixes the problem.,09/Apr/11 16:26;mgrigorov;Fixed with r1090625.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setResponsePage() to mounted Page fails to redirect correctly,WICKET-3442,12498308,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,haploid,haploid,11/Feb/11 00:48,26/Oct/11 09:34,13/Mar/19 23:17,11/Feb/11 06:54,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"calling setResponsePage() within a Form#onSubmit( ) to a mounted Page will:

1.  Not redirect to the mounted URI
2.  Screw up path rewriting for all elements on the rendered page.

I have attached a quickstart zipfile in which I am able to reproduce the issue.   Here's a quick description of what happens:

PageOne.class is mounted to /pageone
PageTwo.class is mounted to /pagetwo

PageOne has a Form with a single setResponsePage( PageTwo.class ); in its onSubmit( );

When PageOne's form is submitted, instead of redirecting to /pagetwo, the page uri is something like /wicket/page?0-1.IFormSubmitListener-form

Any subsequent path references on the rendering of PageTwo are broken, since the browser thinks the relative path origin is /wicket/, whereas wicket likely thinks it's /
","Reproduced this on Jetty 6.1.23 on Sun JDK on Ubuntu, as well as the Quickstart Jetty on Sun JDK on Windows 7",,,,,,,,,,,,,,WICKET-4173,,,,,,,11/Feb/11 00:48;haploid;brokenform.zip;https://issues.apache.org/jira/secure/attachment/12470816/brokenform.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204229,,,Fri Feb 11 01:21:22 UTC 2011,,,,,,0|i0kay7:,116591,,,,,,,,11/Feb/11 00:48;haploid;Quickstart with reproducable test case,"11/Feb/11 01:21;haploid;As a followup comment to this issue, I found a workaround.

if you add any Form at all to the *target* page, wicket will function correctly.  By adding the following to my Base WebPage, the issue goes away completely:

add( new Form( ""kludgyhack"" ) );

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StoredResponsesMap not threadsafe,WICKET-4164,12528467,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,boschman,boschman,24/Oct/11 11:23,25/Oct/11 18:04,13/Mar/19 23:17,25/Oct/11 18:04,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"The StoredResponsesMap is based on the not so threadsafe LinkedHashMap. This map is filled from multiple threads by the WebPageRenderer, which can lead to the internal table property of hashmap going out of sync with the header property of linkedhashmap. As the hashmap entries are not gc'able this leads to out of memory exceptions.",,,,,,,,,,,,,,,,,,,,,,25/Oct/11 08:14;mgrigorov;WICKET-4164.patch;https://issues.apache.org/jira/secure/attachment/12500628/WICKET-4164.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-24 11:29:50.273,,,no_permission,,,,,,,,,,,214327,,,Tue Oct 25 10:15:09 UTC 2011,,,,,,0|i0k94n:,116296,,,,,,,,24/Oct/11 11:29;mgrigorov;Can you make it failing by using org.apache.wicket.protocol.http.StoredResponsesMapTest.heavyLoad() or completely new test method ?,"24/Oct/11 12:22;boschman;yes, just add
[code]
endLatch.await();
System.out.println(map.size());
[/code]

output: 500253 or 500602 or 500439 or ... 

but max entries is 1000, so map.size() should never be more than 1000.
","25/Oct/11 08:14;mgrigorov;Here is a patch that adds as minimum synchronization as I can imagine for this kind of map.

A better solution would be a mix of ConcurrentMap and LinkedHashMap's java.util.LinkedHashMap.removeEldestEntry(Entry<K, V>)

With this patch the performance of this map decreased 15 times","25/Oct/11 09:00;boschman;How did you test the performance of the map? My very naive approach of running the unittest a few times in eclipse and looking at the reported execution time of the heavyLoad test shows you actually made the performance better, not worse. The synchronized parts will block and decrease performance, but the maximum capacity of the underlying hashmap never grows beyond 1000. Which means a lot less very expensive rehashes.","25/Oct/11 09:13;mgrigorov;The old version of the test works with 10k iterations, the new one with 1k.
The old one ran for ~ 45secs, the new for ~27secs on my computer. 

old : 0.0045s per iteration
new: 0.027s per iteration
0.027 / 0.0045 = 6 times slower

Not 15 but still slower :-)","25/Oct/11 09:44;boschman;You also changed the test itself by using the CopyOnWriteArrayList, which seems to have a very big impact on the performance (changed it to 10k iterations and it is already running for minutes using the old StoredResponsesMap code...). My previous observation was based on the 'new' unittest with 100 threads and 1000 iterations against the old StoredResponsesMap and the new StoredResponsesMap. The old StoredResponsesMap took 15.1 - 15.2 seconds, while the new StoredResponsesMap took 14.8 - 15.0 seconds. Not a dramatic difference, but at least it doesn't seem 6 times slower to me.
Funny thing, using the CopyOnWriteArrayList in the test also makes the chances the initally reported threading issues occurs in the test and blowing up the map smaller.","25/Oct/11 09:55;mgrigorov;Yes, I forgot to test the old SRM with the CopyOnWriteArrayList in the test ...
Give it a try in your real app and let us know whether it is stable.
I also use it locally but I cannot load test it more at the moment.","25/Oct/11 10:15;boschman;Changed the CopyOnWriteArrayList to Collections.synchronizedList(new ArrayList<String>()) in the heavyLoad test.

Three run average based on 100 threads and 10k iterations:
old StoredResponsesMap: 34.299s
new StoredResponsesMap: 17.007s

So it seems we were previously benchmarking the CopyOnWriteArrayList instead of the StoredResponsesMap. So, you made the map twice as fast ;)

Unfortunately getting the code into our real app is a bit of a hassle... ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatePicker renders errorenous JavaScript in AjaxRequest,WICKET-3400,12496965,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,svenmeier,svenmeier,27/Jan/11 18:06,21/Oct/11 11:58,13/Mar/19 23:17,10/Feb/11 07:52,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-datetime,,,,,,,0,,,,,,,"For demonstration just start Wicket's ModalWindow example showing header contribution (org.apache.wicket.examples.ajax.builtin.modal.ModalPanel1).

Ajax debug:
ERROR: Wicket.Head.Contributor.processScript: TypeError: YAHOO.wicket is undefined: eval -> 
var e = Wicket.$('id8Dp'); if (e != null && typeof(e.parentNode) != 'undefined' && typeof(e.parentNode.parentNode != 'undefined')) e.parentNode.parentNode.removeChild(e.parentNode);YAHOO.wicket.id8DpJs.destroy(); delete YAHOO.wicket.id8DpJs;

This issue is probably caused by changes in revision 991033 (WICKET-2850). It seems there are curly braces missing in the JavaScript code.",,,,,,,,,,,,,,,WICKET-4159,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,97621,,,2011-01-27 18:06:51.0,,,,,,0|i0kb3b:,116614,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Image not showing if parent component is disabled,WICKET-4146,12527883,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,exl,exl,20/Oct/11 06:45,21/Oct/11 05:35,13/Mar/19 23:17,21/Oct/11 05:35,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,1,,,,,,,"Issue summary:
- In Wicket 1.4.9 (i.e. before we upgraded to Wicket 1.5.1) dynamic images will always display even if it was within a disabled component/container.
- After migrating to Wicket 1.5.1, this no longer holds as it seems that the image resource returns nothing when the parent component is disabled.

Desired use case:
- Have a form that I'd like to re-use between two roles - ""Admin"" and ""Read-only User"". That is, the form is enabled for an ""Admin"" (full permission to change things) and disabled for a ""Read-only User"" (not allowed to change anything).
- The form allows for an ID text field to be changed, which seeds the generation of a dynamic image to be displayed within the form next to the text field.
- Both roles should be allowed to see the image (i.e. regardless of whether the parent form is enabled).

Discussion thread in Nabble:
http://apache-wicket.1842946.n4.nabble.com/Wicket-1-5-1-image-resource-not-available-if-parent-component-is-disabled-td3869742.html

",Linux (Ubuntu Lucid) and Mac OSX 10.6,,,,,,,,,,,,,,,,,,,,,20/Oct/11 11:09;exl;imageTest.zip;https://issues.apache.org/jira/secure/attachment/12499846/imageTest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-21 05:33:30.495,,,no_permission,,,,,,,,,,,92285,,,Fri Oct 21 05:33:30 UTC 2011,,,,,,0|i0k967:,116303,,,,,,,,20/Oct/11 11:09;exl;Quickstart project that demonstrates the use case.,"21/Oct/11 05:33;ivaynberg;gah, this commit was tagged with WICKET-4149 :/  see here for the fix: http://svn.apache.org/viewvc?view=revision&revision=1187184",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in CachingResourceStreamLocator due to the search in parent's markup in Autolink code,WICKET-4152,12527921,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,20/Oct/11 12:42,20/Oct/11 15:28,13/Mar/19 23:17,20/Oct/11 12:46,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"Trying to open http://localhost:8080/mappers/en_US (Request Mapper examples) the following exception is thrown:


java.lang.NullPointerException
     at org.apache.wicket.util.resource.locator.caching.CachingResourceStreamLocator.locate(CachingResourceStreamLocator.java:114)
     at org.apache.wicket.request.resource.PackageResource.exists(PackageResource.java:442)
     at org.apache.wicket.markup.resolver.AutoLinkResolver$ResourceReferenceAutolink.<init>(AutoLinkResolver.java:583)
     at org.apache.wicket.markup.resolver.AutoLinkResolver$AbstractAutolinkResolverDelegate.newPackageResourceReferenceAutoComponent(AutoLinkResolver.java:113)
     at org.apache.wicket.markup.resolver.AutoLinkResolver$AnchorResolverDelegate.newAutoComponent(AutoLinkResolver.java:483)
     at org.apache.wicket.markup.resolver.AutoLinkResolver.resolveAutomaticLink(AutoLinkResolver.java:876)
     at org.apache.wicket.markup.resolver.AutoLinkResolver.resolve(AutoLinkResolver.java:808)
..

It is caused by my fix for WICKET-4141 from yesterday.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,92330,,,2011-10-20 12:42:03.0,,,,,,0|i0k95r:,116301,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatic Linking in base page broken,WICKET-4141,12527737,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,johan1,johan1,19/Oct/11 12:58,20/Oct/11 12:42,13/Mar/19 23:17,19/Oct/11 15:16,1.5.0,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"Automatic linking used in base pages is broken.

The attached quickstart application contains a base page wicket.bugs.autolink.page.base.BasePage which has a relative image reference:
   <img src=""theme/logo.png"" border=""1"" width=""50px"" height=""50px"" />
When accessing this page via http://localhost:8080/base the image is rendered as expected.
The generated HTML output is:
   <img src=""wicket/resource/wicket.bugs.autolink.page.base.BasePage/theme/logo-ver-1319028241918.png"" border=""1"" width=""50px"" height=""50px""/>

The application contains a second page wicket.bugs.autolink.page.home.HomePage extending the BasePage.

When accessing this page via http://localhost:8080/home the image inherited from the base page is not displayed.

The inherited image reference is rendered as:
   <img src=""theme/logo.png"" border=""1"" onclick=""window.location.href=&#039;theme/logo.png&#039;;return false;""/>
  => Problem 1: theme/logo.png is not autolinked anymore, it should point to wicket/resource/wicket.bugs.autolink.page.base.BasePage/theme/logo-ver-1319028241918.png
  => Problem 2: for some reasons a onclick event is rendered by Wicket 

I configured the Wicket app with:

	public void init()
	{
		super.init();

		getMarkupSettings().setAutomaticLinking(true);
		getResourceSettings().setParentFolderPlaceholder(""$up$"");

		mountPage(""/home"", HomePage.class);
		mountPage(""/base"", BasePage.class);
	}","Windows XP, Eclipse 3.7, Oracle JDK 6 ",,,,,,,,,,,,,,WICKET-4145,,,,WICKET-4152,,,19/Oct/11 12:59;johan1;WICKET-4141-autolink-bug.zip;https://issues.apache.org/jira/secure/attachment/12499675/WICKET-4141-autolink-bug.zip,19/Oct/11 15:00;bitstorm;WICKET-4141.patch;https://issues.apache.org/jira/secure/attachment/12499691/WICKET-4141.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-10-19 15:00:11.788,,,no_permission,,,,,,,,,,,89228,,,Wed Oct 19 17:45:17 UTC 2011,,,,,,0|i0k96n:,116305,,,,,,,,19/Oct/11 12:59;johan1;wicket quickstart app,19/Oct/11 15:00;bitstorm;That's my proposed patch. I've inserted all informations about markup container and markup stream inside class PathInfo.,"19/Oct/11 15:16;mgrigorov;Thanks Andrea, but I think mine solution is simpler :-) ",19/Oct/11 17:45;bitstorm;You are welcome! :),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatic Image Linking broken for images in base packages,WICKET-4126,12527032,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,johan1,johan1,13/Oct/11 14:50,19/Oct/11 13:20,13/Mar/19 23:17,19/Oct/11 06:41,1.5.0,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"Automatic linking seems to be broken when used in conjunction with base classes and referencing relative images located in a different package.

The attached quickstart application contains a base page wicket.bugs.autolink.page.base.BasePage whose HTML references an image located at <BasePage Package>/theme/logo.png: <img src=""theme/logo.png"" ...>
When accessing this page via http://localhost:8080/base the image is rendered as expected.

The application contains a second page wicket.bugs.autolink.page.home.HomePage extending the BasePage and that adds a second reference to this image via <img src=""../base/theme/logo.png"" ...>  => this kind of references used to work in Wicket 1.4
When accessing this page via http://localhost:8080/home none of the two images (the one inherited from the base page and the one added) is displayed.

The inherited image reference is rendered as:
   <img src=""theme/logo.png"" border=""1"" onclick=""window.location.href=&#039;theme/logo.png&#039;;return false;""/>
  => theme/logo.png seems not to be an auto link
  => I have no idea why an onclick event is rendered by Wicket

and the explicitly added image reference is rendered as
   <img src=""wicket/resource/wicket.bugs.autolink.page.home.HomePage/../base/theme/logo-ver-1318516450215.png"" />
  => accessing the URL http://localhot:8080/wicket/resource/wicket.bugs.autolink.page.home.HomePage/../base/theme/logo-ver-1318516450215.png results in:

WARN  - WicketObjects              - Could not resolve class [base]
java.lang.ClassNotFoundException: base
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:424)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:377)
	at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:242)
	at org.apache.wicket.application.AbstractClassResolver.resolveClass(AbstractClassResolver.java:110)
	at org.apache.wicket.util.lang.WicketObjects.resolveClass(WicketObjects.java:68)
	at org.apache.wicket.request.mapper.BasicResourceReferenceMapper.resolveClass(BasicResourceReferenceMapper.java:143)
	at org.apache.wicket.request.mapper.BasicResourceReferenceMapper.mapRequest(BasicResourceReferenceMapper.java:120)
	at org.apache.wicket.request.mapper.ParentPathReferenceRewriter.mapRequest(ParentPathReferenceRewriter.java:83)
	at org.apache.wicket.request.mapper.CompoundRequestMapper.mapRequest(CompoundRequestMapper.java:130)
	at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:179)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:204)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:251)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
","Windows XP, Eclipse 3.7, Oracle JDK 6",,,,,,,,,,,,,,,,,,,,,16/Oct/11 17:08;bitstorm;WICKET-4126(silly version).patch;https://issues.apache.org/jira/secure/attachment/12499210/WICKET-4126%28silly+version%29.patch,13/Oct/11 14:52;johan1;autolink-bug.zip;https://issues.apache.org/jira/secure/attachment/12498886/autolink-bug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-10-16 17:07:14.246,,,no_permission,,,,,,,,,,,85394,,,Wed Oct 19 13:20:29 UTC 2011,,,,,,0|i0k987:,116312,,,,,,,,14/Oct/11 17:31;johan1;This bug prevents us from migrating to wicket 1.5.x as it breaks all our pages.,"16/Oct/11 17:07;bitstorm;The first part of the issue (inherited image not displayed) happens inside  AutoLinkResolver.AbstractAutolinkResolverDelegate.newPackageResourceReferenceAutoComponent
Here we build a new MarkupStream but  we don't set it to the right index (it starts from index 0). Hence the following if condition always fails:

// However if the markup stream is a merged markup stream (inheritance), than we
				// need the class of the markup file which contained the tag.
				if ((markupStream.get() instanceof ComponentTag) &&
					(markupStream.getTag().getMarkupClass() != null))
				{
					clazz = markupStream.getTag().getMarkupClass();
				}


This didn't happen with Wicket 1.4 because we used the component stream ('container.getMarkupStream()')  without recreating a new one. I think we should pass the right index or the stream used by AutoLinkResolver.resolve, but I don't know how to do it in right way.

The patch I've attached is just a workaround for development purpose.

","17/Oct/11 11:32;bitstorm;@Johan
Regarding the second part of the issue (parent image not displayed), you have to specify in your application class what character sequence to use as parent folder placeholder:

getResourceSettings().setParentFolderPlaceholder(""../"");

You have to do this  also with Wicket 1.4 starting from version 1.4.18. The fact that you didn't need this code for earlier versions is actually a bug: WICKET-3650
","17/Oct/11 17:26;johan1;Andrea,

getResourceSettings().setParentFolderPlaceholder(""../"") did the trick for the second issue.

Thanks!",18/Oct/11 14:51;johan1;Instead of generating a non-working URL for the referenced image resource Wicket should throw a meaningful exception if the parentFolderPlaceholder is not set.,"18/Oct/11 18:55;bitstorm;I think you are right, we should at least write a log message. I got nothing against throwing an exception, but I'd like to have some feedback from other developers. In the meantime I'm preparing a patch for this.",19/Oct/11 06:41;ivaynberg;the img link in the base page should not be displayed - that is not a bug. the img tag does not have wicket:link around it so the relative image in the url is not made to be package-relative.,"19/Oct/11 08:54;bitstorm;@Igor

But in our application class we setted automatic link to true ( getMarkupSettings().setAutomaticLinking(true); ) so img links are considered as  autolink. See  method WicketLinkTagHandler.onComponentTag:


                // Only xml tags not already identified as Wicket components will be
		// considered for autolinking. This is because it is assumed that Wicket
		// components like images or all other kind of Wicket Links will handle
		// it themselves.
		// Subclass analyzeAutolinkCondition() to implement your own
		// implementation and register the new tag handler with the markup
		// parser through Application.newMarkupParser().
		if ((autolinking == true) && (analyzeAutolinkCondition(tag) == true))
		{
			// Mark it as autolink enabled
			tag.enableAutolink(true);

			// Just a dummy name. The ComponentTag will not be forwarded.
			tag.setId(AUTOLINK_ID);
			tag.setAutoComponentTag(true);
			tag.setModified(true);
			return tag;
		}


Furthermore the parent image is still rendered as a Link with an onclick event, and this should be a bug.   ",19/Oct/11 13:00;johan1;I created a separate JIRA with a modified quick start app describing the inherited image reference problem https://issues.apache.org/jira/browse/WICKET-4141,19/Oct/11 13:20;johan1;I also created a second JIRA requesting the throwing of a IllegalStateException if automatic linking to base page resources is used but the parentFolderPlaceholder is not specified https://issues.apache.org/jira/browse/WICKET-4143,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WizardStep$FormValidatorWrapper.isActiveStep(WizardStep.java) causes NullPointerException,WICKET-4121,12526630,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,forchel,forchel,11/Oct/11 09:46,18/Oct/11 06:48,13/Mar/19 23:17,14/Oct/11 07:19,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket-extensions,,,,,,,0,,,,,,,"Using the Wizard with a nested WizardModel (see RecursiveWizardModel implementation at the attached quickstart application) causes a NullPointerException. I was able to run the same test application with wicket 1.4.18 without any problems.

Caused by: java.lang.NullPointerException
        at org.apache.wicket.extensions.wizard.WizardStep$FormValidatorWrapper.isActiveStep(WizardStep.java:145)
        at org.apache.wicket.extensions.wizard.WizardStep$FormValidatorWrapper.getDependentFormComponents(WizardStep.java:109)
        at org.apache.wicket.markup.html.form.validation.FormValidatorAdapter.getDependentFormComponents(FormValidatorAdapter.java:47)
        at org.apache.wicket.markup.html.form.Form.validateFormValidator(Form.java:1782)
        at org.apache.wicket.markup.html.form.Form.validateFormValidators(Form.java:1828)
        at org.apache.wicket.markup.html.form.Form.validate(Form.java:1706)
        at org.apache.wicket.markup.html.form.Form.process(Form.java:773)
        at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:728)
        at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:670)",,,,,,,,,,,,,,,,,,,,,,12/Oct/11 09:26;svenmeier;WICKET-4121.patch;https://issues.apache.org/jira/secure/attachment/12498722/WICKET-4121.patch,11/Oct/11 09:48;forchel;wizardtest.zip;https://issues.apache.org/jira/secure/attachment/12498562/wizardtest.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-10-12 09:24:14.549,,,no_permission,,,,,,,,,,,58993,,,Fri Oct 14 07:19:57 UTC 2011,,,,,,0|i0k98v:,116315,,,,,,,,11/Oct/11 09:48;forchel;Added quickstart application. To run this application with wicket 1.4.18 just change the maven dependencies in pom.xml and the PageParameters import in HomePage.java.,"12/Oct/11 09:24;svenmeier;Background: In 1.5 handling of a step's IFormValidator has been migrated to the new onInitialize() feature. Now isActiveStep() is called which needs a reference to its owning wizard model.

The steps of your ""secondLevelModel"" are never initalized (i.e. init(IWizardModel) is never called), because this functionality is located in Wizard#init(IWizardModel) but the wizard never gets in contact to your nested model.

I'd prefer to move the relevant code from Wizard to WizardModel#reset(). IMHO this is a much better place for it.

It would be great if you'd be able to test the attached patch.",12/Oct/11 09:26;svenmeier;step initialization moved to wizard model,"12/Oct/11 11:18;forchel;I've tested the attached patch. Seems to be fixed and working although there is another problem with the RecursiveWizardModel and the ""cancel""-button in the attached quickstart application.","13/Oct/11 06:23;svenmeier;Well in RecursiveWizardModel#cancel() your stack of models is completely cleared, thus making this wizard model non-functional. Your HomePage has to do something in #onCancel(), e.g. set a new response page.","13/Oct/11 06:29;forchel;Yes, of course. Just wanted to mention, that the attached example is not a good one. I think, the bug is fixed. You can commit your changes. Thanks.",14/Oct/11 07:19;svenmeier;initialization is now done by wizardmodel itself,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""split-package"" problem for wicket bundles started in an osgi container",WICKET-3088,12475724,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,eikek,eikek,03/Oct/10 20:44,13/Oct/11 12:08,13/Mar/19 23:17,05/Jan/11 16:27,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,,,,,,,,0,,,,,,,"Referring to the thread in user mailing list: http://apache-wicket.1842946.n4.nabble.com/Wicket-1-5-and-OSGi-td2847734.html

There is a problem when the wicket bundles are started in an osgi envirionment because of split packages","Java 1.6.0_21-b06, wicket 1.5-M2.1,felix 3.0.2 (Linux (Ubuntu 32bit))",,,,,,,,,,,,,,,,,,,,,14/Oct/10 17:53;eikek;osgiquickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12457175/osgiquickstart.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-14 15:53:31.471,,,no_permission,,,,,,,,,,,85306,,,Thu Oct 13 12:08:53 UTC 2011,,,,,,0|i0kbtz:,116734,,,,,,,,"14/Oct/10 15:53;ivaynberg;can you provide a set of projects that reproduce this? hopefully maven managed with a simple StartThisBug class somewhere that starts up the container. none of us use osgi so setting up the environment will be the biggest problem. if we can run mvn eclipse:eclipse, import the projects into eclipse, and run StartThisBug we can start looking in the problem.","14/Oct/10 17:53;eikek;The ""osgiquickstart.tar.gz"" contains  a fresh osgi project built with pax-construct  (http://www.ops4j.org/projects/pax/construct/maven-pax-plugin/plugin-info.html).

quickstart:
1. unzip
2. cd into the new folder
3. mvn clean install pax:provision 

---

The pom.xml of the ""provision"" subproject contains all the dependencies that are loaded into OSGi container when using the pax:provision command.  I put all the wicket jars in there. If you go to the root pom you can set the wicket version. The easiest way to start the osgi container (afaik) is from command line using pax plugin:
  
      mvn clean install pax:provision

This starts up OSGi with a shell interface. You can see all bundles using

      felix:lb

command. 

The root pom contains the wicket.version property. If this is set to 1.4.x the OSGi container starts up fine with all wicket bundles active. If using 1.5-M2.1 it complains about unresolved packages (because of what I wrote in the mail).

Thank you!","17/Oct/10 09:27;jdonnerstag;Copied from the mail chain. IMO a good explanation of the problem and offering a solution: unique package name per ""project"".

------------------------
I just had a look at the wicket packages of 1.4.12 and 1.5-M2.1 and I
found some differences. For example, wicket 1.5 has a new artifact
""wicket-request"" and comparing the package structure there are some
changes, which are probably related to my problem:

wicket-1.4.12.jar:
org.apache
`-- wicket
    |-- authorization
    |   |-- Action.java
    |   |-- AuthorizationException.java
    |   |-- strategies
    |   |   |-- action
    |   |   |   |-- ActionAuthorizationStrategy.java
    |   |   |   `-- IActionAuthorizer.java
    |   |   |-- CompoundAuthorizationStrategy.java
    |   |   `-- page
    |   |       |-- AbstractPageAuthorizationStrategy.java
    |   |       `-- SimplePageAuthorizationStrategy.java
    |   |-- UnauthorizedActionException.java
    |   `-- UnauthorizedInstantiationException.java


wicket-auth-roles-1.4.12.jar:
org.apache
`-- wicket
   |-- authentication
   |   |-- AuthenticatedWebApplication.java
   |   |-- AuthenticatedWebSession.java
   |   |-- pages
   |   |   |-- SignInPage_fr.html
   `-- authorization
       `-- strategies
           `-- role
               |-- AbstractRoleAuthorizationStrategy.java
               |   |-- ActionPermissions.java
               `-- Roles.java

This looks good to OSGi as the classes are in disjoint packages in the
two bundles.


This changed in 1.5. There the structure looks like this:

wicket-1.5-M2.1.jar
org.apache
`-- wicket
    |-- authentication
    |   |-- IAuthenticationStrategy.java
    |   `-- strategy
    |       |-- DefaultAuthenticationStrategy.java
    |       `-- NoOpAuthenticationStrategy.java

wicket-auth-roles-1.5-M2.1.jar
org.apache
`-- wicket
    |-- authentication
    |   |-- AuthenticatedWebApplication.java
    |   |-- AuthenticatedWebSession.java
    |   |-- pages
    |   |   |-- SignInPage.html
    |   |   |-- SignInPage.java


The problem is the package org.apache.wicket.authentication now, because
the bundle wicket-1.5-M2.1 and wicket-auth-roles-1.5-M2.1 provide
classes from this package. The same refers to org.apache.wicket.request,
which is exported by wicket-request and wicket in 1.5. This leads to
problems in an OSGi environment. OSGi discourages those scenarios, but
still offers an solution for this. A (rather old) blog post on osgi.org
gives some hints on this:

http://www.osgi.org/blog/2006/04/misconceptions-about-osgi-headers.html

It probably gets to weird loading errors if two classes from the same
package want to access each others fields or methods with package access,
but come from a different classloader...

I'm no OSGi expert, so I don't know the right OSGi header that solves
this. Of course, a real solution would be to only have disjoint packages
:) I usually put the artifact name in my package name, to avoid any
clashes (in fact it makes sense in my module structure).
",29/Dec/10 05:24;ivaynberg;this should be fixed since we introduced a module that aggregates all deps into a single jar. please reopen if still broken.,29/Dec/10 09:01;mgrigorov;The problems with o.a.w.(authentication|authorization) are not solved.,"30/Dec/10 10:46;mgrigorov;Set ""Fix version"" to 1.5-M4.
We need to restructure wicket-auth-roles before RC1.",31/Dec/10 10:02;mgrigorov;Another problem to solve: the new 'three-in-one' package (wicket.jar) doesn't have OSGi entries in META-INF/MANIFEST.MF.,31/Dec/10 12:12;mgrigorov;All reported issues are fixed now.,"05/Jan/11 10:06;eikek;Hello,

I still found some unsolved issues:

1) wicket-core and wicket-request both export org.apache.wicket.request and org.apache.wicket.request.[handler|mapper]
2) wicket-core and wicket-util both export org.apache.wicket, org.apache.wicket.util.[crypt,io,lang,resource,string]

to 1)
For the package org.apache.wicket.request the core module only contains one class ClientInfo.java

For a short test I renamed the mentioned packages (core: util->utils, request->requests), moved ClientInfo to org.apache.wicket.request and it worked.

I think the easiest way to solve this is to include ""core"" in package names of wicket-core module, or to move util and request packages completely to the appropriate modules (and out of wicket-core).

this applies to rev 1055096.

Kind Regards,
Eike
","05/Jan/11 10:41;mgrigorov;Hi Eike,

Did you specify org.apache.wicket:wicket as a dependency to your project or you use org.apache.wicket:wicket-core ?

org.apache.wicket:wicket contains all classes from -core, -util and -request in one .jar. And its META-INF/MANIFEST.MF has OSGi headers for its packages, i.e. they should be fine.","05/Jan/11 11:01;eikek;Hi Martin,

yes, sorry... I used the three single jars instead. It works fine with the aggregate bundle org.apache.wicket:wicket.

thank you for your work!
Eike","13/Oct/11 09:19;peter.gardfjell@gmail.com;The org.apache.wicket:wicket module is no longer a valid OSGi bundle. 
As far as I can tell, from version 1.5-rc2 onwards it is simply a Maven project of packaging ""pom"" (that provides dependencies to the core Wicket modules).
Furthermore, I cannot seem to find a replacement bundle in the newer versions (1.5.1) of Wicket.
I would really like to see a composite jar (with a proper bundle manifest) that contains the core Wicket modules.
Should we reopen this issue?","13/Oct/11 09:26;mgrigorov;https://github.com/wicketstuff/core/tree/master/jdk-1.5-parent/wicket-bundle-parent 
http://repo1.maven.org/maven2/org/wicketstuff/wicketstuff-bundle/1.5.1/
does what you need.

For Wicket.next we plan to fix the problem with the packages and it should become more easier.","13/Oct/11 12:08;peter.gardfjell@gmail.com;Thanks Martin, I tried the wicketstuff bundle and it played nicely.",,,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester should use custom ServletWebRequest,WICKET-4123,12526809,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,forchel,forchel,12/Oct/11 08:02,12/Oct/11 13:11,13/Mar/19 23:17,12/Oct/11 13:11,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"See http://apache-wicket.1842946.n4.nabble.com/Custom-ServletWebRequest-and-BaseWicketTester-in-Wicket-1-5-tp3894285p3894285.html for a detailed description.
The BaseWicketTester should use the same settings like the used WebApplication e.g. WebSession, WebRequest and WebResponse. This works with a customized WebSession but not with overriden WebRequests (not tested for WebResponse). Instead a default ServletWebRequest implementation is used (see private method org.apache.wicket.util.tester.BaseWicketTester#newServletWebRequest()). Testing a page with the WicketTester, the following exception is thrown:

org.apache.wicket.WicketRuntimeException: Can't instantiate page using constructor 'public org.test.HomePage(org.apache.wicket.request.mapper.parameter.PageParameters)' and argument ''. Might be it doesn't exist, may be it is not visible (public).
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:196)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:97)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:47)
	at org.apache.wicket.DefaultMapperContext.newPageInstance(DefaultMapperContext.java:107)
	at org.apache.wicket.request.handler.PageProvider.getPageInstance(PageProvider.java:263)
	at org.apache.wicket.request.handler.PageProvider.getPageInstance(PageProvider.java:164)
	at org.apache.wicket.util.tester.BaseWicketTester$LastPageRecordingPageRendererProvider.get(BaseWicketTester.java:2534)
	at org.apache.wicket.util.tester.BaseWicketTester$LastPageRecordingPageRendererProvider.get(BaseWicketTester.java:2521)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:146)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:712)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:208)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:251)
	at org.apache.wicket.util.tester.BaseWicketTester.processRequest(BaseWicketTester.java:595)
	at org.apache.wicket.util.tester.BaseWicketTester.processRequest(BaseWicketTester.java:515)
	at org.apache.wicket.util.tester.BaseWicketTester.processRequest(BaseWicketTester.java:487)
	at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:1125)
	at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:1098)
	at org.test.TestHomePage.homepageRendersSuccessfully(TestHomePage.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:173)
	... 41 more
Caused by: java.lang.ClassCastException: org.apache.wicket.protocol.http.servlet.ServletWebRequest cannot be cast to org.test.WicketApplication$FooServletWebRequest
	at org.test.HomePage.getFooServletWebRequest(HomePage.java:35)
	at org.test.HomePage.<init>(HomePage.java:19)
	... 46 more

",,,,,,,,,,,,,,,,,,,,,,12/Oct/11 08:05;forchel;wickettester.zip;https://issues.apache.org/jira/secure/attachment/12498715/wickettester.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-12 13:11:03.2,,,no_permission,,,,,,,,,,,73866,,,Wed Oct 12 13:11:03 UTC 2011,,,,,,0|i0k98f:,116313,,,,,,,,12/Oct/11 08:05;forchel;Attached quickstart simple renders a test page and displays attributes of custom WebSession and custom WebRequest objects. The JUnit test is NOT running because of described problem.,"12/Oct/11 13:11;mgrigorov;I fixed this by using reflection to create the ServletWebRequest with WebApplication.newWebRequest().

For Wicket.next we should consider changing the visibility of this method to avoid using reflection.

BaseWicketTester#newServletWebResponse() cannot be improved this way because it needs to handle cookies and thus uses a specialization of ServletWebResponse.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileResourceStream returns unknown content type,WICKET-4119,12526446,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,forchel,forchel,10/Oct/11 13:51,10/Oct/11 14:48,13/Mar/19 23:17,10/Oct/11 14:48,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"See http://apache-wicket.1842946.n4.nabble.com/PackageResourceReference-and-Doctype-in-Markup-file-tp3889467p3889587.html

The response for FileResourceStreams returns an unknown content type for css- and image-files. Correct content types should be ""text/css"" and ""image/png"" (see also attached quickstart).",,,,,,,,,,,,,,,,,,,,,,10/Oct/11 13:55;forchel;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12498424/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-10 14:48:34.219,,,no_permission,,,,,,,,,,,56763,,,Mon Oct 10 14:48:34 UTC 2011,,,,,,0|i0k993:,116316,,,,,,,,10/Oct/11 13:55;forchel;Quicktstart application with custom ResourceStreamLocator with FileResourceStreams for locating resources.,"10/Oct/11 14:48;mgrigorov;Fixed with r1181006.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester#startComponentInPage and WicketTester#assertModelValue have inconsistent behavior.,WICKET-4112,12526011,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,splitshade,splitshade,06/Oct/11 07:54,10/Oct/11 12:27,13/Mar/19 23:17,10/Oct/11 12:27,1.5.0,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"I try the following (in Pseudocode):

tester = new WicketTester();
tester.startComponentInPage(new Label(""test"",""hello"");
tester.assertModelValue(""test"",""hello""); --> throws

java.lang.IllegalArgumentException: Component is not a container and so does not contain the path test.

Funny as it is, to make this work, you have to do the following assertion:

tester.assertModelValue("""", ""hello"");

The error lies in
public Component getComponentFromLastRenderedPage(String path,
                final boolean wantVisibleInHierarchy)
in Line: path = startComponent.getId() + "":"" + path; 

I will provide a patch this evening.",,,,,,,,,,,,,,,,,,,,,,06/Oct/11 21:30;splitshade;0001-WICKET-4122-WicketTester-uses-absolute-Path-to-refer.patch;https://issues.apache.org/jira/secure/attachment/12498073/0001-WICKET-4122-WicketTester-uses-absolute-Path-to-refer.patch,08/Oct/11 17:08;bitstorm;WICKET-4112.patch;https://issues.apache.org/jira/secure/attachment/12498319/WICKET-4112.patch,06/Oct/11 07:54;splitshade;wicket.zip;https://issues.apache.org/jira/secure/attachment/12497959/wicket.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-10-06 16:26:36.501,,,no_permission,,,,,,,,,,,49541,,,Mon Oct 10 12:27:20 UTC 2011,,,,,,0|i0k99j:,116318,,,,,,,,06/Oct/11 07:54;splitshade;Quickstart with a failing test,"06/Oct/11 16:26;bitstorm;IMHO we should consider to remove the following code

if (startComponent != null)
		{
			path = startComponent.getId() + "":"" + path;
		}




inside BaseWicketTester.getComponentFromLastRenderedPage(String path,final boolean wantVisibleInHierarchy). This method shouòd use an absolute path to retrieve component from page.","06/Oct/11 16:42;splitshade;I agree, this conflicts and was introduced in WICKET-1214, but I think, it could be safe to remove since
now we can use startComponentInPage which removes the indirection with ITestPanelSource, I will inspect on this.
Any recommendations?","06/Oct/11 21:26;splitshade;I spent some minutes to play around. I would be possible to reference tested components with their absolute paths (see the provided patch), but this would possibly break a whole lot of tests, that users just have fixed migrating to 1.5.

I'm not sure, what would be a good / better way to fix that.","06/Oct/11 22:09;bitstorm;Well, we could expand method 'startComponentInPage( component, pageMarkup)' adding a string parameter with the start component path. This parameter can be saved and used instead of 'startComponent'. Method 'startPanel' will pass panel id as start component path, while method 'startComponentInPage' will pass a null.
See provided patch (I didn't tested yet!).","07/Oct/11 06:49;splitshade;Well, could work (I did not investigate further), but it ""feels"" like a workaround. I´m not sure, whether this is a good idea. Other opinions?","07/Oct/11 07:40;bitstorm;I don't see it as a workaround, rather we are simply giving to method 'startComponentInPage' more informations. This kind of solution wouldn't break WICKET-1214 (no need to fix 'testLabel' assertions).  
Anyway there could be better solutions...",08/Oct/11 17:11;bitstorm;Improved patch. All tests went fine.,"10/Oct/11 10:52;mgrigorov;The problem is not completely solved.
org.apache.wicket.util.tester.BaseWicketTester.startComponentInPage(Class<C>, IMarkupFragment) uses the artificial ""testObject"" as id for the Component that will be instantiated from the passed Class.

I.e. if you do: startComponentInPage(MyPanel.class) then Wicket wont be aware how to find the components inside the Panel.","10/Oct/11 12:27;mgrigorov;Improved with r1180916.

Now BaseWicketTester keeps meta data about the started component like a flag that indicates whether the component is instantiated by Wicket or not and uses it internally to decide how to construct the component path.
It is transparent to the user - she always has to assert with: tester.assertXYZ(""herComponentId"", ...). 

@Andrea: thanks for your work on this!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutocompleteTextField after Submit does not work,WICKET-4109,12525775,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,almond,almond,05/Oct/11 09:16,07/Oct/11 08:16,13/Mar/19 23:17,07/Oct/11 08:16,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket-extensions,,,,,,,0,,,,,,,"I use an AutocompleteTextfield together with a submit-Button. After once submitting the content oft the AutocompleteTextField the parameter q is added to the URL. After that the autocompletion will only complete the parameter q in the url and not the parameter given by ajax.

I tracked the problem down to the callbackURL. 
It contains a pattern looking as follows: ....&q=<paramproducedbysubmit>&q=<paramproducedbyajaxautocomplete> 
The callbackurl is build of the parameter q and the extraction of parameters only accepts the first parameter
",,,,,,,,,,,,,,,,,,,,,,05/Oct/11 09:17;almond;autocompletebug.zip;https://issues.apache.org/jira/secure/attachment/12497770/autocompletebug.zip,06/Oct/11 17:53;svenmeier;wicket-4109.patch;https://issues.apache.org/jira/secure/attachment/12498036/wicket-4109.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-10-06 13:23:44.164,,,no_permission,,,,,,,,,,,46370,,,Fri Oct 07 08:16:21 UTC 2011,,,,,,0|i0k99z:,116320,,,,,,,,05/Oct/11 09:17;almond;a quickstart to reproduce the problem.,"06/Oct/11 13:23;svenmeier;IMHO PageProvider#getStoredPage(int) is the culprit:

			if (pageParameters != null)
			{
				storedPageInstance.getPageParameters().overwriteWith(pageParameters);
			}

This code writes the autocomplete query parameter ""q"" into the page's original parameters, although it was never involved in the creation of the page. In the following the page's url is always appended with ""q=..."".

I'm not sure why this 'overwriteWith' is called here at all. WDYT?","06/Oct/11 13:42;mgrigorov;Good catch, Sven!

This seems to be also the problem of https://github.com/wicketstuff/core/issues/64.

This override was there before the recent refactor but maybe it wasn't used in all cases.",06/Oct/11 17:53;svenmeier;Patch removing overwriteWith() for stored pages with adjusted tests.,"06/Oct/11 17:56;svenmeier;The attached path removes overwriteWith() for stored pages. Note the adjusted tests, the changes look a bit scary but I think they are correct: when a stored page is retrieved, its page parameters are not changed.

Martin, can you confirm my findings? Thanks.","07/Oct/11 06:59;mgrigorov;Yes, I think the patch is correct.
I also confirm that wicketstuff issue 64 is solved with it.",07/Oct/11 08:16;svenmeier;PageProvider no longer pushes PageParameters into previously stored pages.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using ajax to update a component that has an AbstractTransformerBehavior attached throws a ClassCastException,WICKET-4105,12525554,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bitstorm,bitstorm,03/Oct/11 17:37,05/Oct/11 09:38,13/Mar/19 23:17,05/Oct/11 09:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,,,,,,,,0,,,,,,,"Using ajax to update a component that has an AbstractTransformerBehavior attached throws a ClassCastException:

java.lang.ClassCastException:
org.apache.wicket.ajax.AjaxRequestTarget$AjaxResponse cannot be cast
to org.apache.wicket.request.http.WebResponse
      at org.apache.wicket.markup.transformer.AbstractTransformerBehavior.beforeRender(AbstractTransformerBehavior.java:68)

      at org.apache.wicket.Component.notifyBehaviorsComponentBeforeRender(Component.java:3421)
      at org.apache.wicket.Component.internalRender(Component.java:2344)
      at org.apache.wicket.Component.render(Component.java:2273)

      at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
      at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
      at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)

      at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
      at org.apache.wicket.markup.html.form.Form.onComponentTagBody(Form.java:1570)
      at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)

      at org.apache.wicket.Component.internalRenderComponent(Component.java:2515)
      at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
      at org.apache.wicket.Component.internalRender(Component.java:2345)

      at org.apache.wicket.Component.render(Component.java:2273)
      at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
      at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)

      at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
      at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:735)
      at org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy.renderAssociatedMarkup(AssociatedMarkupSourcingStrategy.java:76)

      at org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy.onComponentTagBody(PanelMarkupSourcingStrategy.java:112)
      at org.apache.wicket.Component.internalRenderComponent(Component.java:2515)
      at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)

      at org.apache.wicket.Component.internalRender(Component.java:2345)
      at org.apache.wicket.Component.render(Component.java:2273)
      at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:982)

      at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:796)
      at org.apache.wicket.ajax.AjaxRequestTarget.constructResponseBody(AjaxRequestTarget.java:676)
      at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:637)

      at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:712)
      at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
      at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)

      at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:208)
      at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:251)
      at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)

      at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
      at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
      at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)

      at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
      at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
      at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)

      at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
      at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
      at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)

      at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
      at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
      at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)

      at java.lang.Thread.run(Thread.java:619)
",,,,,,,,,,,,,,,,,,,,,,03/Oct/11 22:16;bitstorm;WICKET-4105.patch;https://issues.apache.org/jira/secure/attachment/12497555/WICKET-4105.patch,03/Oct/11 17:38;bitstorm;myproject.zip;https://issues.apache.org/jira/secure/attachment/12497495/myproject.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-10-04 07:48:57.469,,,no_permission,,,,,,,,,,,43833,,,Tue Oct 04 08:34:57 UTC 2011,,,,,,0|i0k9af:,116322,,,,,,,,03/Oct/11 17:38;bitstorm;run quickstart and click on 'update' link.,"03/Oct/11 22:16;bitstorm;Thee problem was introduced with commit 916364, when cast to WebRequest was introduced inside method 'beforeRender(Component component)'. I've reverted methods 'beforeRender(Component component)' and 'afterRender(final Component component)' to commit 895520 and this solves issue.
See attached patch.

PS: patch passes all unit tests.","04/Oct/11 07:48;svenmeier;I don't think we want to go back to StringResponse, as this way we'd lose some WebResponse features (e.g. encoding, headers).

Seems we have to check whether the transformation is happening on a WebResponse or a Response only. WDYT?","04/Oct/11 08:34;mgrigorov;I think Andrea's patch is OK.
The old headers will be obsolete after the transformation - the content length most probably will be different, the encoding may be changed as well, the content type too ...

I'd also like to add this as a test case to org.apache.wicket.markup.transformer.AbstractTransformerBehaviorTest. Otherwise next time again no tests will fail :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deprecate ISessionSettings#getPageFactory() and delegate it to Application#getPageFactory(),WICKET-4093,12525144,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,29/Sep/11 06:58,03/Oct/11 07:48,13/Mar/19 23:17,03/Oct/11 07:48,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"See http://markmail.org/thread/z3hqfxo64i5i362p.

ISessionSettings #set/getPageFactory is obsolete with 1.5 and should be removed for 1.6.
Until then it should be deprecated and delegate to Application#getPageFactory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,39350,,,2011-09-29 06:58:01.0,,,,,,0|i0k9bb:,116326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoLabelTextResolver fails to pick up locale changes in the session,WICKET-4102,12525437,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,cmenzel,cmenzel,01/Oct/11 15:41,01/Oct/11 16:41,13/Mar/19 23:17,01/Oct/11 16:41,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"When using <wicket:label key=""...""> AutoLabelTextResolver correctly picks up the localized message identified by the key. However, if the Session locale is changed, neither the printed label nor the FormComponent's label model get updated - both will still contain the initial message. This is inconsistent with the behavior of <wicket:message> and StringResourceModel. The principle of least surprise (and in my opinion, also that of highest usefulness ;-) ) suggests that AutoLabelTextResolver should dynamically get the localized string whenever it deals with something that can be localized. That includes the <wicket:label key=""...""> case mentioned above, as well as when using FormComponent#getDefaultLabel.

I have only tested this in trunk 1.5 (since it recently came up during a training I gave on Wicket 1.5). I suspect it also affects 1.4.x.",,,,,,,,,,,,,,,,,,,,,,01/Oct/11 15:46;cmenzel;0001-WICKET-4102-Make-sure-AutoLabelTextResolver-can-foll.patch;https://issues.apache.org/jira/secure/attachment/12497363/0001-WICKET-4102-Make-sure-AutoLabelTextResolver-can-foll.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,42931,,,Sat Oct 01 15:46:02 UTC 2011,,,,,,0|i0dbv3:,75851,,,,,,,,"01/Oct/11 15:46;cmenzel;This patch against trunk contains:

- a test that demonstrates the wrong behavior of AutoLabelTextResolver
- a fixed AutoLabelTextResolver that behaves correctly.

To fix the issue, I changed AutoLabelTextResolver to use a StringResourceModel when picking up a localized message via the key attribute. When it's using FormComponent#getDefaultLabel it now uses a LoadableDetachableModel to reliably pick up changes here. I also refactored the ""find the label content"" part of AutoLabelTextResolver#onComponentTag into a separate method to increase readability.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Improve wicket-ajax.js processScript method to not use XMLHttpRequest for loading <script src="""">",WICKET-4092,12525034,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,28/Sep/11 09:32,29/Sep/11 08:56,13/Mar/19 23:17,29/Sep/11 08:56,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"See http://markmail.org/thread/s25ryqyqvdq6xuzj for the whole discussion.

In short: Ajax response contains <header-contribution><script src=""http://some.other.domain/file.js""></script></header-contribution>. In wicket-ajax.js #processScript() method (~ line 1680) Wicket uses Wicket.Ajax.Request to load that file and then append it to <head> as <script> with text body instead of <script> with src attribute.

If the src location is not in the same domain as the current app then XMLHttpRequest sends OPTIONS request and if the remote server is not configured to allow cross origin requests then the request for that resource is silently ignored.

We need to investigate whether this can be improved by adding <script src=""...""> directly to the <head> and leave the browser to load the content.",,,,,,,,,,,,,,,WICKET-1623,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,34426,,,Thu Sep 29 08:56:51 UTC 2011,,,,,,0|i0k9bj:,116327,,,,,,,,29/Sep/11 08:56;mgrigorov;Improved with r1177227.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebRequest.getIfModifiedSinceHeader does not handle IllegalArgumentException,WICKET-4081,12524460,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,svieujot,svieujot,23/Sep/11 18:55,25/Sep/11 22:27,13/Mar/19 23:17,23/Sep/11 23:55,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"Blackberry If-Modified-Since date header sometimes has Tomcat's HttpServletRequest.getDateHeader( ""If-Modified-Since"" ) sending an IllegalArgumentException which crashed Wicket with HTTPStatus -1.

If the If-Modified-Since header can't be parsed, the best is to assume it is null instead of crashing.

To allow this, you can change the following code in org.apache.wicket.request.http.WebRequest :

	public final Time getIfModifiedSinceHeader()
	{
		return getDateHeader(""If-Modified-Since"");
	}

with :

	public final Time getIfModifiedSinceHeader()
	{
		try{
			return getDateHeader(""If-Modified-Since"");
		}catch(IllegalArgumentException iae){
			return null;
		}
	}

My stack trace is :
java.lang.IllegalArgumentException: Mo, 12 Sep 2011 20:22:18 GMT
	at org.apache.catalina.connector.Request.getDateHeader(Request.java:2025)
	at org.apache.catalina.connector.RequestFacade.getDateHeader(RequestFacade.java:681)
	at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getDateHeader(ServletWebRequest.java:214)
	at org.apache.wicket.request.http.WebRequest.getIfModifiedSinceHeader(WebRequest.java:102)
	at org.apache.wicket.request.resource.AbstractResource$ResourceResponse.dataNeedsToBeWritten(AbstractResource.java:302)
	at org.apache.wicket.request.resource.PackageResource.newResourceResponse(PackageResource.java:237)
	at org.apache.wicket.request.resource.AbstractResource.respond(AbstractResource.java:477)
	at org.apache.wicket.request.handler.resource.ResourceRequestHandler.respond(ResourceRequestHandler.java:77)
	at org.apache.wicket.request.handler.resource.ResourceReferenceRequestHandler.respond(ResourceReferenceRequestHandler.java:92)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:723)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:210)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com.seanergie.filter.persistence.SessionsManagerFilter.doFilter(SessionsManagerFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:185)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:405)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:269)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:515)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:300)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:636)

Request Header :
user-agent: BlackBerry9000/5.0.0.411 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/130
profile: http://www.blackberry.net/go/mobile/profiles/uaprof/9000_umts/5.0.0.rdf
referer: http://www.windsofdubai.com/winds/forecasts
if-modified-since: Mo, 12 Sep 2011 20:22:18 GMT
host: www.windsofdubai.com
cookie: __utmc=54148142; __utmb=54148142.3.10.1315926864; __utmz=54148142.1315920781.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utma=54148142.648980198.1315920781.1315920781.1315926864.2",Fedora 13x64 ; Tomcat 7.0.21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,3408,,,2011-09-23 18:55:23.0,,,,,,0|i0k9c7:,116330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Extended browser info gathering is broken,WICKET-4075,12523915,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,akiraly,akiraly,21/Sep/11 20:09,25/Sep/11 22:27,13/Mar/19 23:17,21/Sep/11 23:06,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"My patch for WICKET-3717 broke it because now && is encoded as &amp;&amp; in the html markup but wicket is wrapping that script in a CDATA block so browsers do not decode the entities, they report a js error instead.",,,,,,,,,,,,,,,,,,,,,,21/Sep/11 20:10;akiraly;WICKET-4075.patch;https://issues.apache.org/jira/secure/attachment/12495438/WICKET-4075.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,3414,,,Wed Sep 21 20:10:27 UTC 2011,,,,,,0|i0k9d3:,116334,,,,,,,,21/Sep/11 20:10;akiraly;Attaching fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket quickstart advertise HTTPS but it doesn't work when started with jetty:run,WICKET-4073,12523825,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mgrigorov,mgrigorov,21/Sep/11 07:55,25/Sep/11 22:27,13/Mar/19 23:17,24/Sep/11 21:55,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket-quickstart,,,,,,,0,,,,,,,"The pregenerated 'keystore' is put in src/test/resources and thus is not in the classpath when started with ""mvn jetty:run"". This leads to a broken link in the home page of the quickstart.
We should either move the keystore file or disable the link when HTTPS is not enabled. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-21 08:15:13.25,,,no_permission,,,,,,,,,,,3413,,,Wed Sep 21 15:07:09 UTC 2011,,,,,,0|i0k9db:,116335,,,,,,,,21/Sep/11 08:15;dashorst;Don't use the mvn jetty:run option...,"21/Sep/11 08:23;mgrigorov;In this case, I'm interested to hear Intellij/Netbeans user.
These IDEs make difference between sources and test classpaths and I expect the same problem if Intellij IDEA user starts the quickstart with Start.java.","21/Sep/11 08:33;dashorst;Start.java is in the src/test/java folder, so is test scoped... Shouldn't be a problem","21/Sep/11 15:07;ivaynberg;we can create a jetty config file that does the same as the java Start so it works with jetty:run...
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Errors reported from Form#onValidateModelObjects() are ignored,WICKET-4070,12523759,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,20/Sep/11 17:44,25/Sep/11 22:27,13/Mar/19 23:17,20/Sep/11 18:00,1.5.0,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,3412,,,2011-09-20 17:44:25.0,,,,,,0|i0k9dz:,116338,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form Input example fails when changing the language,WICKET-4072,12523824,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mgrigorov,mgrigorov,21/Sep/11 07:53,25/Sep/11 22:27,13/Mar/19 23:17,22/Sep/11 07:04,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,wicket-examples,,,,,,0,,,,,,,"Trying to change the language of http://localhost:8080/forminput example fails with:


Caused by: java.lang.ArrayIndexOutOfBoundsException: -1
	at java.util.ArrayList.remove(ArrayList.java:390)
	at org.apache.wicket.request.Url.resolveRelative(Url.java:884)
	at org.apache.wicket.markup.html.form.Form.dispatchEvent(Form.java:1028)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:699)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:670)
	... 37 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-22 07:05:18.98,,,no_permission,,,,,,,,,,,3416,,,Thu Sep 22 07:05:19 UTC 2011,,,,,,0|i0k9dj:,116336,,,,,,,,"21/Sep/11 08:21;mgrigorov;The following patch fixes the problem but the comment in Form.dispatchEvent() makes me uncertain. It says that the current Url should be 'wicket/page?...' but actually it is just ""?..."".


@@ -881,8 +881,10 @@
 	public void resolveRelative(final Url relative)
 	{
 		// strip the first non-folder segment
-		getSegments().remove(getSegments().size() - 1);
-
+		if (getSegments().size() > 0)
+		{
+			getSegments().remove(getSegments().size() - 1);
+		}
",22/Sep/11 07:05;ivaynberg;the patch was correct,22/Sep/11 07:05;ivaynberg;the patch was correct,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect work of  WicketFilter with UTF-8 urls through proxy_ajp_module and ajp connector,WICKET-2836,12462132,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,azarny,azarny,15/Apr/10 10:44,20/Sep/11 12:20,13/Mar/19 23:17,20/Sep/11 12:20,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,,,,,,,"Preconditions:

Working application on tomacat 5.5 with non SSL HTTP/1.1 connector , that has utf-8 encoded URLs
Connector configuration :     
<Connector port=""8080""     maxHttpHeaderSize=""8192""        URIEncoding=""UTF-8""            maxThreads=""400""                maxKeepAliveRequests=""100""               minSpareThreads=""25""                maxSpareThreads=""75""               enableLookups=""false""                redirectPort=""8443"" 
               acceptCount=""100""               connectionTimeout=""20000""                disableUploadTimeout=""true""                compression=""on""/>

Configured virtual host on apache http server:

Listen 81
NameVirtualHost *:81
<VirtualHost *:81>
   ServerName jewelry.npa.com
   <Proxy *>
     AddDefaultCharset utf-8
     Order deny,allow
     Allow from all
   </Proxy> 
   ProxyPass / ajp://jewelry.npa.com:8009/
   ProxyPassReverse / ajp://jewelry.npa.com:8009/
   AddDefaultCharset utf-8
</VirtualHost>

Configured ajp connector on tomcat 5.5
<Connector port=""8009""      useBodyEncodingForURI=""false""               maxHttpHeaderSize=""8192""                URIEncoding=""UTF-8""               maxThreads=""400"" 
               maxKeepAliveRequests=""100""               minSpareThreads=""25""                maxSpareThreads=""75""               enableLookups=""false"" 
               redirectPort=""8443""                acceptCount=""100""               connectionTimeout=""20000""                disableUploadTimeout=""true"" 
               compression=""on""        protocol=""AJP/1.3"" />


Problem:

All requests, that has utf-8 url and NOT served by wicket filter works ok. 

All requests, that has utf-8 url and served by wicket filter works incorrect, because of  encoding issue with ajp connector and incorect work of WicketFilter#getRelativePath(HttpServletRequest request) lines 590 - 594.

Explanation:

ajp module change the percent encoding (http://en.wikipedia.org/wiki/Percent-encoding)

Proposed fix:

Need to use request.getServletPath() instead of request.getRequestURI() to get the relativePath, because of  
HttpServletRequest sepecification http://java.sun.com/products/servlet/2.3/javadoc/javax/servlet/http/HttpServletRequest.html 
Please look at difference getServletPath returns DECODED value, but getRequestURI and getRequestURL - not.





","Apache 2.2 http server with configured proxy_ajp_module,  Tomcat 5.5, wicket 1.4.7",86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,11/Sep/10 13:01;azarny;wicket-2836.patch;https://issues.apache.org/jira/secure/attachment/12454372/wicket-2836.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-26 22:30:00.009,,,no_permission,,,,,,,,,,,17906,,,Tue Sep 20 12:20:07 UTC 2011,,,,,,0|i0kcfz:,116833,,,,,,,,"26/Aug/10 22:30;ivaynberg;request.getservletpath() wont work because it doesnt return enough information, also, there doesnt seem to be any other method we can use. perhaps you can consider your proxy not to mangle urls.","31/Aug/10 10:13;azarny;I am pretty sure, that  both methods (request.getServletPath() and request.getRequestURI() )  can be used to collect necessary information,  so this bug  can be fixed. ",31/Aug/10 15:36;ivaynberg;you are more then welcome to provide a patch.,"11/Sep/10 13:13;azarny;Patch attached, was tested on tests and reall applications. 
3 tests failed, but failures related to MockHttpServletRequest and some assumtions in test rather than changes in provided patch. Hope somebody more experienced in wicket that me can change it. During fixing this bug the WICKET-3032 was raised.",11/Sep/10 13:14;jdonnerstag;re-opened because patch has been provided.,15/Jul/11 13:50;mgrigorov;@Igor Azarny: I see you use Wicket 1.5 now (WICKET-3906). Do you experience the problem described here in 1.5 ?,"15/Jul/11 18:30;azarny;I found workaround to solve this mod_jk, that has ForwardURICompatUnparsed option - guess this info may be useful for others.
In any case i`ll let you know if this problem present in 1.5 when migration to 1.5 will be finished
",20/Sep/11 12:20;mgrigorov;WicketFilter is improved in 1.5.0 in respect to the problem described here.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RestartResponseAtInterceptPageException.InterceptData is never cleared,WICKET-4066,12523644,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mbrictson,mbrictson,20/Sep/11 00:36,20/Sep/11 08:50,13/Mar/19 23:17,20/Sep/11 08:50,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"RestartResponseAtInterceptPageException.InterceptData is supposed to be cleared after continueToOriginalDestination() is called. This is accomplished via RestartResponseAtInterceptPageException.MAPPER, which is registered in the SystemMapper.

However there seems to be a serious bug here. The MAPPER always returns a compatibilityScore of 0, and thus is never actually invoked. The InterceptData is thus never cleared. Furthermore, even if the MAPPER did return a Integer.MAX_VALUE score, it would still not be invoked in many scenarios, since other mappers in the SystemMapper are registered later and therefore have higher priority.

In practice, this can lead to very odd login behavior in Wicket applications (which is where RestartResponseAtInterceptPageException is typically used). For example, if the user clicks a ""login"" link they may end up on a totally unexpected page, due to stale InterceptData that is hanging around in the session.

I am attaching a quick start that demonstrates the problem, as well as a patch the fixes the compatibilityScore and moves the MAPPER to a higher priority in the SystemMapper.",,,,,,,,,,,,,,,,,,,,,,20/Sep/11 00:37;mbrictson;WICKET-4066-quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12495173/WICKET-4066-quickstart.tgz,20/Sep/11 00:37;mbrictson;WICKET-4066.patch.txt;https://issues.apache.org/jira/secure/attachment/12495174/WICKET-4066.patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-09-20 08:50:11.602,,,no_permission,,,,,,,,,,,60126,,,Tue Sep 20 08:50:11 UTC 2011,,,,,,0|i0k9e7:,116339,,,,,,,,20/Sep/11 00:37;mbrictson;Attaching quick start that demonstrates the problem of InterceptData not getting cleared.,20/Sep/11 00:37;mbrictson;Attaching patch for a possible solution.,"20/Sep/11 08:50;mgrigorov;Fixed.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StatelessForm + IndexedParamUrlCodingStrategy: URL path params are not url-encoded,WICKET-3800,12510467,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,armhold@cs.rutgers.edu,armhold@cs.rutgers.edu,15/Jun/11 16:38,19/Sep/11 09:59,13/Mar/19 23:17,19/Sep/11 09:59,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,,,,,,,"When using a StatelessForm on a page mounted with IndexedParamUrlCodingStrategy/MixedParamUrlCodingStrategy, parameters added to the URL path are not url-encoded.

It's actually coming from RequestCycle.urlFor().  There is a note on line 917 of that file indicating ""Do not encode values here. It is the encoder's job to do the endoding"". So perhaps I'm doing something wrong, but I'm surprised to see different behavior when the form is stateless.

Another user reported what I believe is probably the same issue here: 
http://apache-wicket.1842946.n4.nabble.com/StatelessForm-problem-Not-all-parameters-were-encoded-td1887698.html

In that thread Igor responded ""forms do not support indexed strategies since they need actual parameternames"", which frankly, I do not understand. I'm adding parameters like:

                PageParameters params = new PageParameters();
                params.add(""0"", input0.getModelObject());
                setResponsePage(HomePage.class, params);

and I assume that ""0"" qualifies as a named parameter.

I will attach a quickstart to demonstrate.


","embedded jetty, glassfish 3.1",,,,,,,,,,,,,,,,,,,,,23/Jun/11 13:21;mgrigorov;stateless-form-bug-1.5.tgz;https://issues.apache.org/jira/secure/attachment/12483591/stateless-form-bug-1.5.tgz,15/Jun/11 16:44;armhold@cs.rutgers.edu;stateless-form-bug.tar.gz;https://issues.apache.org/jira/secure/attachment/12482688/stateless-form-bug.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-23 13:21:21.726,,,no_permission,,,,,,,,,,,60221,,,Thu Jun 23 13:21:21 UTC 2011,,,,,,0|i0ka1b:,116443,,,,,,,,15/Jun/11 16:44;armhold@cs.rutgers.edu;quickstart project,"23/Jun/11 13:21;mgrigorov;I can recommend you to use Wicket 1.5.
Here is modified quickstart which shows that it works OK in 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parameter not decoded with setRedirect(true),WICKET-3981,12519654,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,newgro,newgro,22/Aug/11 08:50,17/Sep/11 18:59,13/Mar/19 23:17,17/Sep/11 18:59,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,,,,,,,"On a stateless form with a stateless link i can't get decoded parameters.

If i start the page with hardcoded parameter value ""Haushalt & Küche"" my page is called with expected encoded parameters in browser url.

If i click a link on that page redirecting to same page without setting redirect = true i get ""Haushalt & Küche/wicket:interface/:0:form:simplelink::ILinkListener::""
I would like to remove the wicket interface. So i set redirect true.

But then i get ""param/Haushalt%20&%20K%FCche"" in browser url after clicking the link.","Windows, JDK 1.6",,,,,,,,,,,,,,,,,,,,,22/Aug/11 08:52;newgro;bookmarkable-redirect.zip;https://issues.apache.org/jira/secure/attachment/12491188/bookmarkable-redirect.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60311,,,Thu Sep 01 15:18:04 UTC 2011,,,,,,0|i0k9lr:,116373,,,,,,,,22/Aug/11 08:52;newgro;Small quickstart reproducing the problem,"22/Aug/11 08:53;newgro;Sadly i couldn't get it to work with a test. I've added one but it is not reproducing the problem because clickLink is not delivering my page parameters,","01/Sep/11 14:58;newgro;Maybe this is related to https://issues.apache.org/jira/browse/WICKET-2348
I tested this behavior on Windows 7 (german) with the wicket-quickstart on jetty. The deployed application runs on a linux / Tomcat 6 with default-encoding set to UTF-8 (same as suggested by Igor in the ""related"" issue). There the problem is not appering.",01/Sep/11 15:18;newgro;I currently checked this against 1.5-RC7 and it's working there as expected. Both links show http://localhost:8080/MyPage.html/param/Haushalt & Küche as url.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling FormTester.select for DropDownChoice invokes onSelectionChanged with null argument,WICKET-3977,12519410,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,marcelc,marcelc,19/Aug/11 13:20,17/Sep/11 18:54,13/Mar/19 23:17,17/Sep/11 18:54,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,1,,,,,,,"I have a DropDownChoice which has a wantOnSelectionChangedNotifications that returns true, so that the onSelectionChanged is called when the selection changes.

In a unit test a selection is made for the dropdown using: formTester.select(""dropDown"", 0);

The FormTester sets the selected value for the dropdown as a post parameter in the current request and the calls BaseWicketTester#executeListener to process the request for the onSelectionChanged event.

In BaseWicketTester#executeListener however the the request post parameters previously set are ignored, by creating a new empty request:
MockHttpServletRequest request = new MockHttpServletRequest(application, httpSession, servletContext);

I guess either the current request should be used instead of new-ing one or the post parameters should be copied from the current request instance.","Linux Ubuntu 11.04, Java 1.6.0_26",,,,,,,,,,,,,,,,,,,,,24/Aug/11 08:01;marcelc;wicket3977.zip;https://issues.apache.org/jira/secure/attachment/12491448/wicket3977.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-08-23 15:00:01.806,,,no_permission,,,,,,,,,,,60312,,,Thu Sep 01 10:18:36 UTC 2011,,,,,,0|i0k9m7:,116375,,,,,,,,23/Aug/11 15:00;mgrigorov;Can you help us a bit by preparing a quickstart with the failure? Thanks !,"24/Aug/11 08:01;marcelc;I've added the sources for a page and unit test that reproduce the issue.

Also I've found a workaround (see unit test), but it's not very elegant.","01/Sep/11 10:18;madegroot;I'm struggling with the same issue.
I think every developer that uses Forms with Dropdowns (and writes good Unit tests) will face this issue.
@Marcel: Thanks for the (not very elegant) workaround. Hope this issue will be fixed soon.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Link crashes on Page Expiry,WICKET-3992,12520025,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,bht@actrix.gen.nz,bht@actrix.gen.nz,24/Aug/11 21:49,17/Sep/11 18:28,13/Mar/19 23:17,17/Sep/11 18:28,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,,,,,,,"It appears one cannot get a PageExpiredException when clicking on a link on the expired page.

Please refer to the attached testcase - navigate to ListPage and let it expire after > 1 minute. Then click on one of the links.

The perplexing part is that the links contain references to the menu page (not the list page as expected):

http://localhost:8080/myproject-1.0-SNAPSHOT/menu?wicket:interface=:0:detail::ILinkListener::","java version ""1.6.0_25""
Java(TM) SE Runtime Environment (build 1.6.0_25-b06)
Java HotSpot(TM) Client VM (build 20.0-b11, mixed mode, sharing)
",,,,,,,,,,,,,,,,,,,,,15/Sep/11 16:53;bitstorm;WICKET-3992.patch;https://issues.apache.org/jira/secure/attachment/12494647/WICKET-3992.patch,25/Aug/11 23:29;bht@actrix.gen.nz;myproject.zip;https://issues.apache.org/jira/secure/attachment/12491710/myproject.zip,24/Aug/11 21:50;bht@actrix.gen.nz;testcase.zip;https://issues.apache.org/jira/secure/attachment/12491555/testcase.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-08-25 11:20:02.973,,,no_permission,,,,,,,,,,,60315,,,Sat Sep 17 18:28:11 UTC 2011,,,,,,0|i0k9kn:,116368,,,,,,,,24/Aug/11 21:50;bht@actrix.gen.nz;Testcase,"25/Aug/11 11:20;mgrigorov;What exactly is the problem ?
You mount the MenuPage at /menu. The you use BookmarkablePageLink to a non-mounted ListPage so wicket uses /menu?wicket:bookmarkablePage=:com.mycompany.ListPage. In ListPage you have several Link which generate Urls with wicket:interface parameter with the ListPage id encoded in them. You wait for session expiration and then you click on such link, it tries to find ListPage by id to execute Link#onClick() but since the session has expired all its attributes are erased and there is no Wicket Session too, the disk store data for this expired session is removed too and the ListPage instance cannot be found. Thus you have PageExpiredException.
Everything is by design.","25/Aug/11 13:45;bht@actrix.gen.nz;Martin,

I should get PageExpiredException, and I agree with you 100%.

The problem is that I don't get PageExpiredException - I get this:

org.apache.wicket.WicketRuntimeException: unable to find component with path datatable:body:rows:1:cells:7:cell:select on stateless page [Page class = web.g1.handy.HandyHomePage, id = 0, version = 0] it could be that the component is inside a repeater make your component return false in getStatelessHint()

and other depending on which link I click.

I don't felt that I had to mount every page in the application because I understand that mounts are relatively expensive performance wise with a large number of mounted pages.

Do you get PageExpiredException after expiry?
","25/Aug/11 13:48;mgrigorov;With the attached application - yes, I see PageExpiredException.",25/Aug/11 23:29;bht@actrix.gen.nz;New quickstart,"25/Aug/11 23:41;bht@actrix.gen.nz;I have attached a new quickstart which is a little clearer, and wicket is mounted at /test.
It reproduces always when deployed on the latest version of GlassFish 3.1.1 which is what we use for development and production.

Would it be possible that you deploy this on GlassFish or may be you can run Jetty to run without problems?
In my case Start.java runs ok and I get the first pages but Jetty does not respond when I click on the link to the List page.

In my case, the GlassFIsh URL is:

http://localhost:8080/myproject-1.0-SNAPSHOT/test/

I click until I get to the list page. Then I reload because in some cases I get ;jsessionid in the URL.

The first link on the list page has the URL:

http://localhost:8080/myproject-1.0-SNAPSHOT/test/menu?wicket:interface=:0:detail::ILinkListener::

which after expiry crashes as follows:

org.apache.wicket.WicketRuntimeException: unable to find component with path detail on stateless page [Page class = com.mycompany.MenuPage, id = 0, version = 0] it could be that the component is inside a repeater make your component return false in getStatelessHint()
     at org.apache.wicket.request.target.component.BookmarkableListenerInterfaceRequestTarget.processEvents(BookmarkableListenerInterfaceRequestTarget.java:148)
","04/Sep/11 22:26;bitstorm;The new quick start gives the exception also under Tomcat. 
The problem seems to be related to BookmarkablePageRequestTargetUrlCodingStrategy registered by TestApplication.  
When we click link after session is expired, Wicket searches for target page analyzing link ref URL and it finds that a bookmarkable page (MenuPage) is mounted on link URL (/menu). 
At this point a new MenuPage is created and used as target page but link component path is not found.","15/Sep/11 16:52;bitstorm;A possible fix is to check inside 'WebRequestCycleProcessor.resolve' if 'requestParameters.getInterfaceName' is different from 'ILinkListener' before looking for mounted path.
I know this could seem more like a hack then a fix, but I didn't find a way to recognize when a link is clicked and session is expired. Anyway, this fix solves issue problem and passes all 1.4.x tests.

","17/Sep/11 18:28;ivaynberg;this usecase was taken into account when we were rewriting url handling in 1.5. in 1.4, unfortunately there is no good way to fix it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Versioned MixedParamHybridUrlCodingStrategy does not escape ""#""",WICKET-3950,12518084,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pekarna,pekarna,05/Aug/11 21:47,17/Sep/11 18:00,13/Mar/19 23:17,17/Sep/11 18:00,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,,,,,,,"I have this mount

        wicketApp.mount( new MixedParamHybridUrlCodingStrategy(""channelLog"", ChannelLogPage.class, new String[]{""name""}  ));

the name param may contain ""#"" which is properly escaped when not versioned -  /channelLog/%23%23wicket

When this page is versioned, this turns to be:

  http://localhost:8080/channelLog/.29##wicket.28
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-08-08 11:13:07.862,,,no_permission,,,,,,,,,,,60321,,,Mon Aug 08 11:13:07 UTC 2011,,,,,,0|i0k9nz:,116383,,,,,,,,"06/Aug/11 03:24;pekarna;Interesting Firefox bug: 
   http://localhost:8080/channelLog/%23jbossas
when a page from this is reloaded (F5), firefox changes url to
   http://localhost:8080/channelLog/#jbossas","08/Aug/11 11:13;mgrigorov;Works correctly in 1.5 with: 
mountPage(""p/#{name}"", SomePage.class);

and requested with
http://localhost:8080/p/na%23me

prints:
na#me

IUrlCodingStrategy and impls are removed in 1.5 so I guess they want be improved anymore in 1.4.x.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CheckBoxMultipleChoice does not respect isEnabled,WICKET-4059,12523301,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aka,aka,16/Sep/11 08:27,17/Sep/11 05:30,13/Mar/19 23:17,17/Sep/11 05:30,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"Since 1.5 CheckBoxMultipleChoice does not check if it is enabled when rendering the checkboxes. It only checks for AbstractChoice#isDisabled which always returns false. So it is not possible to disable this component in a form without overwriting AbstractChoice#isDisabled.

CheckBoxMultipleChoice#appendOptionHtml should also call isEnabledInHierarchy like it did in 1.4.X",,,,,,,,,,,,,,,,,,,,,,16/Sep/11 08:27;aka;checkboxmultiplechoice-disabled.zip;https://issues.apache.org/jira/secure/attachment/12494772/checkboxmultiplechoice-disabled.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60335,,,Fri Sep 16 08:27:37 UTC 2011,,,,,,0|i0k9ev:,116342,,,,,,,,16/Sep/11 08:27;aka;quickstart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CompressedResourceReference is unimplemented in Wicket 1.5,WICKET-3526,12501207,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,mbrictson,mbrictson,11/Mar/11 21:31,16/Sep/11 05:42,13/Mar/19 23:17,13/Apr/11 23:14,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"CompressedResourceReference in trunk is basically empty and has the comment ""TODO NG"". A quick search through the source leads me to believe that IResourceSettings#getDisableGZipCompression() is also unused.

In other words, gzipping of resources is not implemented in Wicket 1.5, whereas it was working fine in Wicket 1.4.x.

Part of me thinks that maybe this feature should be dropped, as compression makes more sense to handle at the servlet container or web server layer (e.g. mod_deflate). Thoughts?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-13 23:09:16.957,,,no_permission,,,,,,,,,,,60507,,,Fri Sep 16 05:42:27 UTC 2011,,,,,,0|i0a54v:,57105,,,,,,,,13/Apr/11 23:09;pete;Dropped it since practically all modern servers can do it...,"16/Sep/11 05:42;chrisc;In the migration page CompressedResourceReference is still listed as having a peer in the 1.5 release in the table ""List of renamed classes and methods"". It's entry should be (missing) or (removed) as it is actually not present in release 1.5.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leakage in browser with AbstractAjaxTimerBehavior,WICKET-4054,12523111,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,ebergner,ebergner,14/Sep/11 21:39,15/Sep/11 20:33,13/Mar/19 23:17,15/Sep/11 20:33,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"Adding an AbstractAjaxTimerBehavior to a page causes the browser (tested on Firefox and Chrome) to leak memory. More noticeable with a short update interval (I have been using 1 second). It is not as bad in the beginning, but gradually gets worse, eventually increasing memory usage by over 1MB per request.",,,,,,,,,,,,,,,,,,,,,,14/Sep/11 21:41;ebergner;timer-quickstart.rar;https://issues.apache.org/jira/secure/attachment/12494531/timer-quickstart.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-15 02:47:21.177,,,no_permission,,,,,,,,,,,60528,,,Thu Sep 15 13:31:33 UTC 2011,,,,,,0|i0k9fj:,116345,,,,,,,,"14/Sep/11 21:42;ebergner;Note sure if this is relevant:
http://pavel.kuzub.com/settimeout-memory-leak","15/Sep/11 02:47;pedrosans;Hi Emil, thanks for report the bug. I was able to simulate and fix it only at the trunk, not at 1.5.0 that is the promoted RC7. Can you test your app with the trunk and confirm that the memory leakage is gone?","15/Sep/11 13:31;ebergner;Hi Pedro, it's gone! That was quick! Thanks a lot.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
max-age header is set in milliseconds rather than seconds,WICKET-4051,12523009,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,papegaaij,papegaaij,14/Sep/11 08:02,14/Sep/11 12:38,13/Mar/19 23:17,14/Sep/11 12:38,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"According to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html the max-age in Cache-Control should be set in seconds, but WebResponse.enableCaching sets it in milliseconds. The attached patch fixes this.",,,,,,,,,,,,,,,,,,,,,,14/Sep/11 08:03;papegaaij;headerfix.diff;https://issues.apache.org/jira/secure/attachment/12494397/headerfix.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-14 12:38:18.636,,,no_permission,,,,,,,,,,,60659,,,Wed Sep 14 12:38:18 UTC 2011,,,,,,0|i0a553:,57106,,,,,,,,14/Sep/11 12:38;pete;thanks a lot for reporting ... fixed in trunk!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTree#updateTree(AjaxRequestTarget target) is invoked even when request is non-ajax,WICKET-4053,12523024,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,jamesmcintosh,jamesmcintosh,14/Sep/11 09:56,14/Sep/11 12:26,13/Mar/19 23:17,14/Sep/11 12:26,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"I came across an issue when trying to get Brix working in wicket 1.5.
It occurs when the Tree has: setLinkType(LinkType.REGULAR);

Caused by: java.lang.IllegalArgumentException: Argument 'target' may not be null.
	at org.apache.wicket.util.lang.Args.notNull(Args.java:39)
	at org.apache.wicket.markup.html.tree.AbstractTree.updateTree(AbstractTree.java:1138)
	at org.apache.wicket.markup.html.tree.LinkIconPanel.onNodeLinkClicked(LinkIconPanel.java:82)
	at org.apache.wicket.markup.html.tree.LinkIconPanel$1.onClick(LinkIconPanel.java:59)
	at org.apache.wicket.markup.html.tree.BaseTree$5.onClick(BaseTree.java:386)
	at org.apache.wicket.markup.html.link.Link.onLinkClicked(Link.java:187)

I only had a quick search across the wicket codebase to see if this method is called elsewhere

To fix LinkIconPanel line 82 should be
if (target != null) {
tree.updateTree(target);
}

BaseTree - line 294 also calls updateTree(target) with no null check.
	
	
",Wicket 1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-14 12:26:13.417,,,no_permission,,,,,,,,,,,60663,,,Wed Sep 14 12:26:13 UTC 2011,,,,,,0|i0a55b:,57107,,,,,,,,"14/Sep/11 12:26;pete;all occurences of updateTree(..) with possible null pointers should be fixed now in trunk.

thanks for reporting !",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
label's wicket:for does not work completely for Radios,WICKET-4048,12522904,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tapter,tapter,13/Sep/11 14:40,13/Sep/11 17:00,13/Mar/19 23:17,13/Sep/11 16:58,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"The new functionality with <label wicket:for=""...""> (See WICKET-1469) does not work completely for radio buttons, probably because the referenced Radio instance is no FormComponent but just a LabeledWebmarkupContainer.
The problem is in AutoLabelResolver, line 181:
if (component instanceof FormComponent) {...}
There should be a special case for Radios to get its associated RadioGroup first and use that as component to derive the CSS class from",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-13 16:58:43.474,,,no_permission,,,,,,,,,,,60744,,,Tue Sep 13 16:58:43 UTC 2011,,,,,,0|i0k9fr:,116346,,,,,,,,"13/Sep/11 16:58;ivaynberg;it doesnt really make sense to transfer required and error classes to the labels of the radios themselves, these are only relevant for the label of the radiogroup. i did, however, make it so that individual radio labels will get the 'disabled' class if the radio component itself is disabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PageExpiredException still thrown after handled by IRequestCycleListener,WICKET-4004,12520681,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bht@actrix.gen.nz,bht@actrix.gen.nz,30/Aug/11 04:00,13/Sep/11 08:25,13/Mar/19 23:17,31/Aug/11 12:15,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"In the attached quickstart, a simple AJAX form expires.
After expiry, the user clicks a button and a PageExpiredException is thrown.

onException() of an IRequestCycleListener handles it, but the framework still throws it so the handling of it does not work.

It appears this is caused by getRequestLoggerSettings().setRequestLoggerEnabled(true); but I am not sure.

This works fine in 1.4
","Wicket version: 1.5-RC7
java version ""1.6.0_25""
Java(TM) SE Runtime Environment (build 1.6.0_25-b06)
Java HotSpot(TM) Client VM (build 20.0-b11, mixed mode, sharing)
",,,,,,,,,,,,,,,,,,,,,30/Aug/11 04:01;bht@actrix.gen.nz;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12492197/quickstart.zip,30/Aug/11 21:13;bht@actrix.gen.nz;testcase1.4.zip;https://issues.apache.org/jira/secure/attachment/12492368/testcase1.4.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-08-30 14:27:33.216,,,no_permission,,,,,,,,,,,60780,,,Wed Aug 31 12:15:56 UTC 2011,,,,,,0|i0k9j3:,116361,,,,,,,,30/Aug/11 04:01;bht@actrix.gen.nz;Testcase,"30/Aug/11 14:27;mgrigorov;It is still possible.
The problem is that you use RequestLogger. It is executed at the end of the request and it tries to extract the page information, particularly its class, while having just its id, so it throws a new PageExpiredException which is too late to be handled.","30/Aug/11 17:59;bht@actrix.gen.nz;Hi Martin, thanks for evaluating.

Why is using RequestLogger a problem since 1.5? It wasn't in 1.4.

Why is this issue considered not a problem? For me it is. Page expiry is a big issue for users who are logged in invisibly by remember-me cookie. I really need to trace this, and in development mode, I have RequestLogger on all the time so I see things in context.

Can RequestLogger be fixed to handle the PageExpiredException? That would sound logical to me.","30/Aug/11 19:54;mgrigorov;What is the behavior of RequestLogger with PageExpiredException in 1.4 ? What does it logs for this request ?
Please attach similar quickstart for 1.4 so I can see what is the difference.

RequestLogger runs at the very end of the request cycle processing. The best we can do is to try/catch the request logger. It shouldn't break the request processing.","30/Aug/11 21:13;bht@actrix.gen.nz;Added a testcase for 1.4. RequestLogger entry is:

INFO: time=11562,event=null,response=PageRequest[org.apache.wicket.markup.html.pages.PageExpiredErrorPage(0)],sessionid=null,sessionsize=1086,activerequests=0,maxmem=518M,total=179M,used=93M

I think the reason for the difference could be that I found it easier in 1.4 to intercept PageExpiredException in WebRequestCycleProcessor#resolve(...).

Is that possible in 1.5, too?

Many thanks.","30/Aug/11 22:27;svenmeier;Maybe I didn't understand the problem correctly, but isn't this just a matter of catching PageExpiredException in RequestLogger#getListenerString) ?","31/Aug/11 12:15;mgrigorov;try/catch the logger message generation, log a warning if there a problem and return ""UNKNOWN"" as result.
Example: event={handler=ListenerInterfaceRequestHandler,pageClass=UNKNOWN}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SignInPanel prevents the page being Stateless when signing in with the ""rember me"" facility.",WICKET-3991,12519986,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svieujot,svieujot,24/Aug/11 16:12,13/Sep/11 08:25,13/Mar/19 23:17,31/Aug/11 11:14,1.5-RC6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket-auth-roles,,,,,,,0,,,,,,,"This worked fine with 1.5-RC5, so I think it is a regression.


	Start the webapp ( mvn clean jetty:run )

	Log-in with remember me checked.

	Stop the webapp

	restart it ( mvn clean jetty:run )

	The browser should re-log-on and wicket will throw a RuntimeException.
	If you refresh the browser, you are properly logged-on.

See the attached quickstart.",,,,,,,,,,,,,,WICKET-4045,,,,,WICKET-3965,,,24/Aug/11 16:13;svieujot;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12491503/quickstart.zip,26/Aug/11 22:34;svieujot;quickstart2.zip;https://issues.apache.org/jira/secure/attachment/12491845/quickstart2.zip,27/Aug/11 09:23;svieujot;quickstart3.zip;https://issues.apache.org/jira/secure/attachment/12491876/quickstart3.zip,30/Aug/11 20:27;svieujot;quickstart4.zip;https://issues.apache.org/jira/secure/attachment/12492360/quickstart4.zip,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-08-26 07:47:56.016,,,no_permission,,,,,,,,,,,60779,,,Wed Aug 31 11:09:36 UTC 2011,,,,,,0|i0k9kv:,116369,,,,,,,,"25/Aug/11 22:49;svieujot;This leads to another issue.
It seems there is now a loop in RequestHandlerStack.java:96
See the stacktrace below :

java.security.GeneralSecurityException: Signin error for toto
 at com.seanergie.authentication.WicketAuthenticatedWebSession.onFailedAuthentication(WicketAuthenticatedWebSession.java:88)
 at com.seanergie.authentication.WicketAuthenticatedWebSession.onFailedAuthentication(WicketAuthenticatedWebSession.java:84)
 at com.windsOfDubai.web.WebSession.onFailedAuthentication(WebSession.java:78)
 at com.seanergie.authentication.WicketAuthenticatedWebSession.authenticate(WicketAuthenticatedWebSession.java:74)
 at org.apache.wicket.authroles.authentication.AuthenticatedWebSession.signIn(AuthenticatedWebSession.java:65)
 at org.apache.wicket.authroles.authentication.panel.SignInPanel.signIn(SignInPanel.java:219)
 at org.apache.wicket.authroles.authentication.panel.SignInPanel.onBeforeRender(SignInPanel.java:127)
 at org.apache.wicket.Component.internalBeforeRender(Component.java:978)
 at org.apache.wicket.Component.beforeRender(Component.java:1012)
 at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1785)
 at org.apache.wicket.Component.onBeforeRender(Component.java:3775)
 at org.apache.wicket.Component.internalBeforeRender(Component.java:978)
 at org.apache.wicket.Component.beforeRender(Component.java:1012)
 at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1785)
 at org.apache.wicket.Component.onBeforeRender(Component.java:3775)
 at org.apache.wicket.Component.internalBeforeRender(Component.java:978)
 at org.apache.wicket.Component.beforeRender(Component.java:1012)
 at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1785)
 at org.apache.wicket.Component.onBeforeRender(Component.java:3775)
 at org.apache.wicket.Page.onBeforeRender(Page.java:823)
 at org.apache.wicket.Component.internalBeforeRender(Component.java:978)
 at org.apache.wicket.Component.beforeRender(Component.java:1012)
 at org.apache.wicket.Component.internalPrepareForRender(Component.java:2178)
 at org.apache.wicket.Page.internalPrepareForRender(Page.java:280)
 at org.apache.wicket.Component.render(Component.java:2265)
 at org.apache.wicket.Page.renderPage(Page.java:1035)
 at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:105)
 at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:224)
 at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:147)
 at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:719)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 
 ... 307 times the same line ...

 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
 at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:210)
 at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
 at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
 at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
 at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1330)
 at com.seanergie.filter.persistence.SessionsManagerFilter.doFilter(SessionsManagerFilter.java:44)
 at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1330)
 at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:484)
 at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
 at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:517)
 at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)
 at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:970)
 at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:414)
 at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)
 at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:904)
 at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
 at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
 at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
 at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
 at org.eclipse.jetty.server.Server.handle(Server.java:347)
 at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:439)
 at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:907)
 at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:562)
 at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)
 at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:43)
 at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:545)
 at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:43)
 at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)
 at java.lang.Thread.run(Thread.java:679)
","26/Aug/11 07:47;mgrigorov;Are you experiencing this problem with the quickstart too ?
The attached quickstart works OK here.","26/Aug/11 09:19;svieujot;First, there is still an exception in the current quickstart if you enter a wrong password :

ERROR - DefaultExceptionMapper     - Unexpected error occurred
java.lang.IllegalArgumentException: '[Page class = kmworks.quickstart.HomePage, id = 0, render count = 1]' claims to be stateless but isn't. Possible reasons: no stateless hint, statefull behaviors
	at org.apache.wicket.devutils.stateless.StatelessChecker.onBeforeRender(StatelessChecker.java:92)
	at org.apache.wicket.application.ComponentOnBeforeRenderListenerCollection$1.notify(ComponentOnBeforeRenderListenerCollection.java:38)
	at org.apache.wicket.application.ComponentOnBeforeRenderListenerCollection$1.notify(ComponentOnBeforeRenderListenerCollection.java:35)
	at org.apache.wicket.util.listener.ListenerCollection.notify(ListenerCollection.java:79)
	at org.apache.wicket.application.ComponentOnBeforeRenderListenerCollection.onBeforeRender(ComponentOnBeforeRenderListenerCollection.java:34)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:979)
	at org.apache.wicket.Component.beforeRender(Component.java:1012)
	at org.apache.wicket.Component.internalPrepareForRender(Component.java:2178)
	at org.apache.wicket.Page.internalPrepareForRender(Page.java:280)
	at org.apache.wicket.Component.render(Component.java:2265)
	at org.apache.wicket.Page.renderPage(Page.java:1035)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:105)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:182)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:147)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:719)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:210)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1330)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:484)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:517)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:970)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:414)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:904)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:347)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:439)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.content(HttpConnection.java:924)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:781)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:220)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:43)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:545)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:43)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)
	at java.lang.Thread.run(Thread.java:679)
","26/Aug/11 10:35;svieujot;The above stateless error is still there when the credentials are wrong.

But I can't reproduce the the RequestHandlerStack anymore.
I will check that but the problem seems to be gone.","26/Aug/11 10:44;mgrigorov;Fixed the failure with wrong credentials too.
Update to r1162058 and try again.","26/Aug/11 12:17;mgrigorov;Unfortunately now FileUploadField tests are broken because of the last change...
Need to reconsider.","26/Aug/11 13:17;svieujot;Well apart from those tests, it fixes the problem.
Thank you Martin !","26/Aug/11 22:33;svieujot;Ok, now I can reproduce the bug mentioned in the first comment.
I guess the reason I could do that is that I did some tests on another webapp on 127.0.0.1:8080, with different credentials.
And when I restart the quickstart, the remember me settings do not match and this leads to the error.

I modified the new quickstart (quickstart2.zip) also, but this might not be the source of the problem anyway.

The exception is :
HTTP ERROR 500

Problem accessing /wicket/bookmarkable/kmworks.quickstart.SignInErrorPage. Reason:

    Server Error

Caused by:

java.lang.StackOverflowError
	at org.apache.wicket.markup.MarkupFragment.get(MarkupFragment.java:138)
	at org.apache.wicket.markup.MarkupFragment.get(MarkupFragment.java:138)
	at org.apache.wicket.markup.MarkupFragment.get(MarkupFragment.java:138)
	at org.apache.wicket.markup.MarkupFragment.<init>(MarkupFragment.java:78)
	at org.apache.wicket.markup.MarkupStream.getMarkupFragment(MarkupStream.java:485)
	at org.apache.wicket.markup.MarkupFragment.find(MarkupFragment.java:157)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.getMarkup(DefaultMarkupSourcingStrategy.java:95)
	at org.apache.wicket.MarkupContainer.getMarkup(MarkupContainer.java:484)
	at org.apache.wicket.Component.getMarkup(Component.java:736)
	at org.apache.wicket.Component.internalRender(Component.java:2306)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.form.Form.onComponentTagBody(Form.java:1572)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:729)
	at org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy.renderAssociatedMarkup(AssociatedMarkupSourcingStrategy.java:76)
	at org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy.onComponentTagBody(PanelMarkupSourcingStrategy.java:112)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.Page.onRender(Page.java:904)
	at org.apache.wicket.markup.html.WebPage.onRender(WebPage.java:140)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.Page.renderPage(Page.java:1035)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:105)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:224)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:147)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:719)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
... same exception repeated until it dies.","26/Aug/11 22:37;svieujot;One more precision : As the quickstart2 immediately crashes now on my computer, I can't really test it more.
If it does not reproduce the error on your machine, one way to reproduce the error might be to sign in with the toto password and remember me checked ; stop the webapp ; change the hard coded ""toto"" password in the webapp and then restart the webapp.
I guess this would generate the same stack overflow when the ""remember me"" sign in kicks in.","27/Aug/11 09:23;svieujot;Add quickstart3 that also shows a PageExpired exception.
I am not sure this is linked to the same bug though.","27/Aug/11 09:24;svieujot;To see the PageException, run the unit tests : mvn clean test",28/Aug/11 17:54;mgrigorov;can you try now? ,"28/Aug/11 22:21;svieujot;I still get the stack overflow :

HTTP ERROR 500

Problem accessing /wicket/bookmarkable/kmworks.quickstart.SignInErrorPage. Reason:

    Server Error

Caused by:

java.lang.StackOverflowError
	at java.util.HashMap.put(HashMap.java:402)
	at org.apache.wicket.util.value.ValueMap.put(ValueMap.java:443)
	at org.apache.wicket.markup.parser.TagAttributes.put(TagAttributes.java:57)
	at org.apache.wicket.markup.parser.TagAttributes.put(TagAttributes.java:28)
	at org.apache.wicket.markup.parser.XmlTag.put(XmlTag.java:405)
	at org.apache.wicket.markup.ComponentTag.putInternal(ComponentTag.java:501)
	at org.apache.wicket.markup.ComponentTag.put(ComponentTag.java:487)
	at org.apache.wicket.markup.html.form.FormComponent.onComponentTag(FormComponent.java:1304)
	at org.apache.wicket.markup.html.form.CheckBox.onComponentTag(CheckBox.java:176)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2482)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.form.Form.onComponentTagBody(Form.java:1574)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:729)
	at org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy.renderAssociatedMarkup(AssociatedMarkupSourcingStrategy.java:76)
	at org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy.onComponentTagBody(PanelMarkupSourcingStrategy.java:112)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
	at org.apache.wicket.Page.onRender(Page.java:904)
	at org.apache.wicket.markup.html.WebPage.onRender(WebPage.java:140)
	at org.apache.wicket.Component.internalRender(Component.java:2341)
	at org.apache.wicket.Component.render(Component.java:2269)
	at org.apache.wicket.Page.renderPage(Page.java:1035)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:105)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:224)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:147)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:723)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
.... another few hundred of those.","28/Aug/11 22:38;svieujot;If it helps resolving the stack overflow I have with the quickstart3, here are my cookies :

Name: LoggedIn
Content: TISwiv_4tfmhVtd7lIWIM5ZeKrsT7BgHqqCGXnu5WOTEJw3k85VOzQ
Host: 127.0.0.1
Path: /
Send For: Any type of connection
Expires: Sun 25 Sep 2011 05:18:48 PM GST

Name: __utma
Content: 96992031.2130943675.1284332693.1314479019.1314481393.347
Host: 127.0.0.1
Path: /
Send For: Any type of connection
Expires: Tue 27 Aug 2013 02:59:36 AM GST

Name: __utmb
Content: 96992031.23.10.1314481393
Host: 127.0.0.1
Path: /
Send For: Any type of connection
Expires: Sun 28 Aug 2011 03:29:36 AM GST

Name: __utmz
Content: 96992031.1300645127.73.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)
Host: 127.0.0.1
Path: /
Send For: Any type of connection
Expires: Sun 26 Feb 2012 02:59:36 PM GST","30/Aug/11 20:27;svieujot;New quickstart generating the StackOverflowError.
To test : mvn clean test","31/Aug/11 09:58;mgrigorov;The problem in quickstart4 is solved in WICKET-4010 because the initial problem in this ticket is different (statelessness of pages).
Is there still a problem with the statelessness or we can close this ticket ?
If there is another problem then please open a new ticket.",31/Aug/11 11:09;svieujot;No I think the stateless problem is solved.,,,,,,,,,,,,,,,,,,,,,,
SignInPanel may lead to infinite redirects if there is rememberMe cookie with outdated data,WICKET-4010,12520899,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,31/Aug/11 09:56,13/Sep/11 08:25,13/Mar/19 23:17,31/Aug/11 10:02,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket-auth-roles,,,,,,,0,,,,,,,"quickstart4.zip from WICKET-3991 shows that having outdated ""RememberMe"" data in the cookie may lead to infinite loop: SignInPanel#onBeforeRender() -> signIn(oldCredentials) -> go to SignInPage -> try to load SignInPanel again.",,,,,,,,,,,WICKET-3991,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60785,,,2011-08-31 09:56:27.0,,,,,,0|i0k9if:,116358,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal Window is not shown in IE8,WICKET-3982,12519666,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,mishelle,mishelle,22/Aug/11 11:17,13/Sep/11 00:42,13/Mar/19 23:17,13/Sep/11 00:42,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,"On examples page http://wicketstuff.org/wicket/ajax/modal-window if you click on ""Show modal dialog with a page"" or ""Show modal dialog with panel"", no modal windows will be shown.","Win7, IE8",,,,,,,,,,,,WICKET-3847,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-08-22 15:02:36.775,,,no_permission,,,,,,,,,,,60824,,,Mon Sep 12 17:57:22 UTC 2011,,,,,,0|i0k9lj:,116372,,,,,,,,22/Aug/11 15:02;mgrigorov;In trunk it is better than 1.5-RC5.1 but still there is something wrong with Modal in Modal example.,12/Sep/11 14:54;mgrigorov;@Pedro: can you take a look here?,"12/Sep/11 17:57;pedrosans;Sure, I already simulated here a problem opening nestled modal windows. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MarkupContainer.toString(true) fails with MarkupNotFoundException if the call is made in the component constructor,WICKET-4016,12521030,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,01/Sep/11 09:10,12/Sep/11 14:20,13/Mar/19 23:17,12/Sep/11 14:20,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.MarkupContainer.toString(boolean) uses ""if (getMarkup() != null)"" to decide whether to write something for the markup but since recently Component#getMarkup() throws MarkupNotFoundException when there is no markup and doesn't return null.",,,,,,,,,,,,,,,,,,,,,,08/Sep/11 17:22;bitstorm;toStringComponentPatch.txt;https://issues.apache.org/jira/secure/attachment/12493625/toStringComponentPatch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-08 17:20:23.303,,,no_permission,,,,,,,,,,,60874,,,Mon Sep 12 14:20:46 UTC 2011,,,,,,0|i0k9hr:,116355,,,,,,,,"01/Sep/11 09:10;mgrigorov;The stack trace:

Caused by: org.apache.wicket.markup.MarkupNotFoundException: Can not determine Markup. Component is not yet connected to a parent. [WebMarkupContainer [Component id = c1]]
	at org.apache.wicket.Component.getMarkup(Component.java:731)
	at org.apache.wicket.MarkupContainer.toString(MarkupContainer.java:867)
	at org.apache.wicket.Component.<init>(Component.java:678)
	at org.apache.wicket.MarkupContainer.<init>(MarkupContainer.java:118)
	at org.apache.wicket.markup.html.WebMarkupContainer.<init>(WebMarkupContainer.java:49)
	at org.apache.wicket.markup.html.WebMarkupContainer.<init>(WebMarkupContainer.java:41)
	at com.mycompany.HomePage.<init>(HomePage.java:17)
...",01/Sep/11 09:14;mgrigorov;I suggest to move the entry for markup from MarkupContainer.toString(boolean) to Component.toString(boolean) and use 'markup' variable directly.,08/Sep/11 17:20;bitstorm;+1 for going with the proposed solution. I attach a possible patch.,"12/Sep/11 14:20;mgrigorov;Thanks Andrea!
I extended even more your patch + a test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MountedMapper.mapHandler ruins Links inside mounted pages appending parameters wicket-ajax and wicket-ajax-baseurl,WICKET-4038,12522440,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bitstorm,bitstorm,09/Sep/11 15:34,12/Sep/11 13:54,13/Mar/19 23:17,12/Sep/11 13:54,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"With the last commit n° 1166194 method mapHandler has been added to MountedMapper class in order to solve WICKET-4014. Unfortunately this method seems to ruin Link url inside mounted page (for example home page) if this page uses AJAX.
mapHandler modifies Link url appending parameters 'wicket-ajax' and 'wicket-ajax-baseur'l to it. In this way when we click Link we get an error from browser like this:

       "" This XML file does not appear to have any style information associated with it. The document tree is shown below.
      <ajax-response><redirect>wicket/page?41</redirect></ajax-response> ""

The error message is the same for Firefox and Chromium.
See attached quickstart.

Warning: as I'm writing this issue, Wicket snapshot is not affected yet by this bug, so you have to run quickstart with the last source from repository.",,,,,,,,,,,,,,,,,,,,,,09/Sep/11 20:25;pedrosans;WICKET-4038.patch;https://issues.apache.org/jira/secure/attachment/12493849/WICKET-4038.patch,10/Sep/11 17:12;bitstorm;ajaxParametersCopyFix.txt;https://issues.apache.org/jira/secure/attachment/12493915/ajaxParametersCopyFix.txt,09/Sep/11 15:35;bitstorm;issue.zip;https://issues.apache.org/jira/secure/attachment/12493789/issue.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-09-09 20:25:21.634,,,no_permission,,,,,,,,,,,60879,,,Mon Sep 12 13:54:35 UTC 2011,,,,,,0|i0k9gf:,116349,,,,,,,,"09/Sep/11 15:39;bitstorm;To run quickstart click on ""Show results"" and then on a link below.","09/Sep/11 20:25;pedrosans;My first impression debugging the quickstart is that all request parameters encoded to carry framework specific information should not be propagated across all the request cycle after get consumed by framework internals.
Goes attached a patch with this solution.

A simpler solution would be:
1 - tweak AbstractMapper to not encode internal flags in the URL. At encodePageParameters method for instance.
2 - simple not add them to PageParameter objects.

I don't know which is the best alternative of those.","10/Sep/11 17:11;bitstorm;Hi Pedro,

your patch solve problem and is conceptually right, but it breaks 4 test cases:
-InternalErrorCallsAjaxOnFailureTest
-PageProviderTest
-PageVersioningTest
-MultiRequestCycleListenerCallOrderTest

Why not simply remove ajax parameters directly inside MountedMapper (see attached patch)? 
",12/Sep/11 13:54;mgrigorov;I like Pedro's approach. I'm just not sure whether something else can break. That's why I put the check in UrlInfo to prevent the leakage of Ajax related parameters in the produced Urls.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ComponentStringResourceLoader must not include the index of repeater items in resource lookup but still resolve properties to them,WICKET-4032,12521453,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,nathan.messer,nathan.messer,06/Sep/11 13:54,08/Sep/11 13:58,13/Mar/19 23:17,08/Sep/11 13:58,1.4.18,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,1.5.1,,wicket,,,,,,,0,,,,,,,"Issue when using a StringResourceModel to lookup a resource for a component underneath a repeating view.

When a StringResourceModel is used by a component under a repeating view, the ComponentStringResourceLoader doesn't find the resource.

This seems to be a problem introduced by the fix for 3671.

In ComponentStringResourceLoader, getResourcePath excludes all AbstractRepeaters, however getComponentStack doesn't leading to the two being out of sync for the elements of the component hierarchy under the repeating view.

",,,,,,,,,,,,,,,,,,,,,,06/Sep/11 14:39;nathan.messer;resource-lookup.zip;https://issues.apache.org/jira/secure/attachment/12493157/resource-lookup.zip,06/Sep/11 16:32;nathan.messer;resource-lookup2.zip;https://issues.apache.org/jira/secure/attachment/12493173/resource-lookup2.zip,06/Sep/11 15:33;nathan.messer;resourceloadingissue.patch;https://issues.apache.org/jira/secure/attachment/12493166/resourceloadingissue.patch,06/Sep/11 15:30;nathan.messer;resourceloadingissue.patch;https://issues.apache.org/jira/secure/attachment/12493165/resourceloadingissue.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-09-06 16:00:55.927,,,no_permission,,,,,,,,,,,61911,,,Thu Sep 08 13:58:17 UTC 2011,,,,,,0|i0a55j:,57108,,,,,,,,06/Sep/11 14:39;nathan.messer;Quickstart that works in 1.4.17 but not in 1.4.18,06/Sep/11 14:40;nathan.messer;I've attached a quick-start that works in 1.4.17 but not in 1.4.18 to show the problem,"06/Sep/11 15:30;nathan.messer;Patch to fix the issue.
This excludes AbstractRepeaters from the component stack, unlike the getResourcePath method that excludes AbstractRepeaters children. This leaves the path hierachy sensible, in that it has no 0, 1 etc ids in it, but also leaves the component hierarchy so that components added as children of abstract repeaters can have property files that will be looked in for resources.",06/Sep/11 15:33;nathan.messer;Version of the patch with a license granted,06/Sep/11 16:00;pete;thanks for reporting... the problem is fixed in trunk ... please report if you still got issues,"06/Sep/11 16:35;nathan.messer;Unfortunately that doesn't fix the problem. It excludes components with a parent of AbstractRepeater from the component stack, not the AbstractRepeaters themselves.

This then means that if it is the child of the abstract repeater which has the associated properties file, it won't get checked.

I've attached another quickstart showing the problem.

The patch I've submitted does handle this case as well, although it may be that there are other problems with it I'm not aware of. 

The patch I submitted won't check if the AbstractRepeater itself has an associated properties file that may contain resources, which may be a problem.","06/Sep/11 20:24;pete;
I added a fix that resolves a resource key against AbstractRepeater and it's associated repeater items in the same manner.

For example in the following hierarchy

MyPage
  -- MyRepeater (id = ""repeater"")
    -- MyRepeaterItem (id = ""3"")
      -- MyWebMarkupContainer (id = ""container"")
 
the key = 'label' resolved against base component ""container"" will cause a lookup in that order

- MyPage.properties with key = ""repeater.container.label""
- MyRepeater.properties with key = ""container.label""
- MyRepeaterItem.properties with key = ""container.label""
- MyWebMarkupContainer.properties with key = ""label""

Please verify the fix and let me know if something is broken or missing ...
",06/Sep/11 20:52;pete;this seems to affect 1.5 also,"06/Sep/11 21:12;pete;fixed for 1.5 as well, please check and report any issues... thank you!",06/Sep/11 21:20;pete;leaving this issue open for a while to gather feedback if everything is okay,06/Sep/11 23:32;ivaynberg;can you add a unit test so we dont lose this functionality please,07/Sep/11 10:02;pete;@igor: done for 1.4 and 1.5,"08/Sep/11 13:07;nathan.messer;That works for our use cases, thanks Peter",08/Sep/11 13:58;pete;@Nathan: Thanks for reporting. We always want things to get better :-),,,,,,,,,,,,,,,,,,,,,,,,,
TextRequestHandler doesn't set Content-Length header,WICKET-4031,12521450,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,06/Sep/11 13:43,07/Sep/11 14:29,13/Mar/19 23:17,07/Sep/11 14:29,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,TextRequestHandler doesn't set Content-Length header and sends the content as chunked.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,62043,,,2011-09-06 13:43:40.0,,,,,,0|i0k9gn:,116350,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceMapper throws IllegalStateException when attempting to map a request to a URL ending in a empty segment (directory),WICKET-4020,12521164,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,jesselong,jesselong,02/Sep/11 09:18,06/Sep/11 14:01,13/Mar/19 23:17,06/Sep/11 14:01,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"ResourceMapper.mapRequest() calls ResourceMapper.removeCachingDecoration() which, throws IllegalStateException if the URL's last segment is an empty string.

URLs like: path/to/my/non/wicket/directory/ end in a empty segment. 

We must change the behaviour to not attempt to undecorate a URL ending in an empty segment.",When a ResourceMapper is mounted,,,,,,,,,,,,,,,,,,,,,02/Sep/11 09:20;jesselong;fix-WICKET-4020.patch;https://issues.apache.org/jira/secure/attachment/12492728/fix-WICKET-4020.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-06 14:01:33.899,,,no_permission,,,,,,,,,,,62205,,,Tue Sep 06 14:01:33 UTC 2011,,,,,,0|i0a55r:,57109,,,,,,,,02/Sep/11 09:20;jesselong;Patch to ResourceMapper and ResourceMapperTest,06/Sep/11 14:01;pete;thanks for reporting,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractLink does not detach body model,WICKET-4025,12521289,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,selckin,selckin,03/Sep/11 18:41,06/Sep/11 12:40,13/Mar/19 23:17,06/Sep/11 12:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,62216,,,2011-09-03 18:41:51.0,,,,,,0|i0k9h3:,116352,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page Lock on Browser Back Button after Page Expiry,WICKET-4009,12520871,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bht@actrix.gen.nz,bht@actrix.gen.nz,31/Aug/11 05:16,06/Sep/11 09:18,13/Mar/19 23:17,06/Sep/11 07:26,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"In the attached quickstart, after page expiry and browser back navigation, a server error occurs such as:

""failed to acquire lock to page 0, attempted for 1 minutes out of allowed 1 minute""
This appears to be related to request logging, but I have seen other strange errors without request logging such as

org.apache.wicket.request.handler.ComponentNotFoundException: Could not find component 'form' on page 'class web.page.ExpiredPage

also with browser history back navigation.

I have seen none of these errors in Wicket 1.4. I guess the reason for not having seen this before it that http cache headers are different in 1.5.
","Wicket version: 1.5-RC7
java version ""1.6.0_25""
Java(TM) SE Runtime Environment (build 1.6.0_25-b06)
Java HotSpot(TM) Client VM (build 20.0-b11, mixed mode, sharing)

Server: GlassFish 3.1.1",,,,,,,,,,,,,,,,,,,,,02/Sep/11 14:14;bitstorm;pageManagerPatch.txt;https://issues.apache.org/jira/secure/attachment/12492750/pageManagerPatch.txt,01/Sep/11 15:37;bitstorm;pageManagerPatch.txt;https://issues.apache.org/jira/secure/attachment/12492615/pageManagerPatch.txt,31/Aug/11 05:18;bht@actrix.gen.nz;quickStart.zip;https://issues.apache.org/jira/secure/attachment/12492419/quickStart.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-08-31 12:38:37.038,,,no_permission,,,,,,,,,,,62308,,,Tue Sep 06 09:18:08 UTC 2011,,,,,,0|i0k9in:,116359,,,,,,,,31/Aug/11 05:18;bht@actrix.gen.nz;Testcase,"31/Aug/11 12:38;mgrigorov;I can't reproduce the problem with this quickstart.
What's are the steps ?
I wait for more than a minute but then pressing back/forward just works.","31/Aug/11 13:05;bitstorm;Running quickstart with 'mvn jetty:run' I was able to reproduce the problem. But importing the project inside Eclipse and running it with Tomcat 6 and the last Wicket source everything went fine.

",31/Aug/11 13:11;bitstorm;Even running project with RC7 but with Tomcat I wasn't able to reproduce the problem.,"31/Aug/11 19:05;bht@actrix.gen.nz;Martin,

wait for one minute then press the button on the page, then after receiving the expired page, press the browser back button.

Andera,

I get this on GlassFish. To get started with it quickly, you may want to download NetBeans with Java EE support which includes GlassFish. Just open the quickstart directly in NetBeans and run it from the context menu. It will prompt you with a dialog on what server to run. At the first time, you must register the installed GlassFish.
","31/Aug/11 21:55;bitstorm;I've not tried GlassFish yet, but I've reproduced the problem under Eclipse with this plugin http://code.google.com/p/run-jetty-run/.
Jetty version is 7.4.2 ","01/Sep/11 09:37;bitstorm;PageAccessSynchronizer  associates page locks to a single thread. Tomcat, after session expiration,  continues to serve user requests with the same thread so PageAccessSynchronizer can assign previously  owned locks.
The problem arise with web server like Jetty which seems to assign to users a new thread after session expiration. In this scenario page locks previously owned by expired session are no more unlocked.

Possible solution:
-Associate locks to session id and not to thread. When session expires unlock all its locks.

What's your opinion about this Martin?
","01/Sep/11 11:07;mgrigorov;Isn't it much easier to modify 
org.apache.wicket.page.PageAccessSynchronizer.adapt(...).new PageManagerDecorator() {...}.getPage(int) to:

@Override
public IManageablePage getPage(int id)
{
   lockPage(id);
   IManageablePage page = super.getPage(id);
   if (page == null) {
      // this has to be in finally block
      unlockPage(id);
   }
   return page;
}

There is no unlockPage(int) but we can add it. No need to keep lock if there is no such page anymore.",01/Sep/11 12:22;bitstorm;Yes it' much easier :). I'm making some tests. If all goes well I will attach a first patch.,01/Sep/11 15:36;bitstorm;I've created a patch following Martin's idea and seems to work. I attached it so you can test it.,01/Sep/11 15:41;mgrigorov;In unloadPage(int) you should also check the thread like in unlockAllPages() because page id is session relative.,"02/Sep/11 14:12;bitstorm;ok, done. Tested with success on jetty 7.4.2 and GlassFish 3.1","02/Sep/11 14:54;bitstorm;Martin, I've got just a question. When I click ""back"" button and session is expired, method PageManagerDecorator.commitRequest() is not called right?  ","05/Sep/11 12:08;mgrigorov;Hm. Why not ?
Pressing back button makes a http request with older page id. If there is no such page in the page stores then null is returned by getPage(int) and PageExpiredException is thrown by PageProvider#getPageInstance(). This exception is catched by DefaultExceptionMapper and the configured IApplicationSettings#getPageExpiredErrorPage() is rendered. At the end of the request #commitRequest() should be called by RequestCycle#onDetach() (listeners.onDetach()) and PageExpiredErrorPage#onDetach() should be called (even twice - see WICKET-4012).","06/Sep/11 07:26;mgrigorov;Thanks, Andrea!","06/Sep/11 09:08;bitstorm;Thank to you Martin. I made my question about expired session because I wanted to understand how we ended up with a lock left assigned. 
FOR INFORMATION: With a little more debugging I've found that when session is expired but after commitRequest(), request logger asks for page class and getPage(id) is called. So the logger should be the one who left a lock occupied and caused the bug.




 ","06/Sep/11 09:18;mgrigorov;Thanks Andrea!
I just created WICKET-4029 to track that.",,,,,,,,,,,,,,,,,,,,,,
Component's onAfterRender() is called so many times as it is depth in the component tree + 1,WICKET-4012,12520974,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,31/Aug/11 20:53,05/Sep/11 14:41,13/Mar/19 23:17,05/Sep/11 14:41,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.Component.afterRender() calls org.apache.wicket.Component.onAfterRenderChildren() which for MarkupContainers calls afterRender() for its children.

So for code like:

 WebMarkupContainer comp1 = new WebMarkupContainer(""c1"");
        add(comp1);
        
        WebMarkupContainer comp2 = new WebMarkupContainer(""c2"");
        comp1.add(comp2);
        
        WebMarkupContainer comp3 = new WebMarkupContainer(""c3"") {

            @Override
            protected void onAfterRender() {
                super.onAfterRender();
                System.err.println(""called"");
            }
            
        };
        comp2.add(comp3);

you'll see ""called"" printed 4 times in a single request.

Additionally I think onAfterRenderChildren() should be called before onAfterRender() in Component.afterRender(). The flow should be first-in last-out: onBeforeRender > onBeforeRenderChildren > onAfterRenderChildren > onAfterRender,",,,,,,,,,,,,,,,,,,,,,,02/Sep/11 07:44;mgrigorov;WICKET-4012-afterRender.patch;https://issues.apache.org/jira/secure/attachment/12492724/WICKET-4012-afterRender.patch,01/Sep/11 15:56;mgrigorov;detachedTwice.patch;https://issues.apache.org/jira/secure/attachment/12492618/detachedTwice.patch,31/Aug/11 20:54;mgrigorov;wicket-4012.tar.gz;https://issues.apache.org/jira/secure/attachment/12492522/wicket-4012.tar.gz,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-09-01 08:08:47.397,,,no_permission,,,,,,,,,,,62679,,,Fri Sep 02 15:19:36 UTC 2011,,,,,,0|i0k9i7:,116357,,,,,,,,31/Aug/11 20:54;mgrigorov;A quickstart showing the problem,31/Aug/11 20:55;mgrigorov;I tried to add new request flag and call #afterRender() just once but then 4 tests failed. Needs some more investigation.,"01/Sep/11 06:57;mgrigorov;The same pattern is used for onDetach().

Modify the quickstart to:
WebMarkupContainer comp3 = new WebMarkupContainer(""c3"") {

            @Override
            protected void onAfterRender() {
                super.onAfterRender();
                System.err.println(""called"");
            }

            @Override
            protected void onDetach() {
                super.onDetach();
                System.err.println(""onDetach"");
            }
        };

And you'll see onDetach twice per request. Again the parent component calls onDetach for all its children and this call is recursive.

Is there a hidden purpose here ?",01/Sep/11 07:00;mgrigorov;In 1.4 both onAfterRender and onDetach are called just once per component. So this is definitely a bug.,01/Sep/11 07:30;mgrigorov;The reason for onDetach called twice is org.apache.wicket.request.handler.RenderPageRequestHandler.detach(IRequestCycle). It calls pageInstance.detach() and later org.apache.wicket.page.RequestAdapter.commitRequest() also calls page.detach().,"01/Sep/11 08:08;dashorst;The latter is because you can have many page instances scheduled during a request, and they all should be detached: hence RenderPageRequestHandler.detach().","01/Sep/11 08:13;mgrigorov;All scheduled pages are ""touched"" during their construction (see the call to init() at org.apache.wicket.Page.Page(PageParameters, IModel<?>)). At the end of the request all touched pages are detached in org.apache.wicket.page.RequestAdapter.commitRequest() and only the stateful ones are stored in the page stores.

I'd be grateful for some help with onAfterRender() problem.","01/Sep/11 09:32;mgrigorov;org.apache.wicket.ComponentTest.detachPage() should be improved too.
It checks whether onDetach() is called at least once, but it seems OK to be called 2+ times in a request.","01/Sep/11 15:56;mgrigorov;Attaching the patch for onDetach().
According to Igor we can ignore that because onDetach() is noop most of the time or just detaches some non-default models in the rare cases when it is used.
I'm attaching the patch just in case it may be needed some day. It should be cleaned if ever applied.","01/Sep/11 20:21;mgrigorov;The solution for the problem with onAfterRender() is to remove org.apache.wicket.MarkupContainer.onAfterRenderChildren().
There is no need of this method. Component.afterRender() is called right after internalRender() in Component.render().
Parent's afterRender() comes after its children afterRender() so there is no reason to call it again.

But now there are 4 tests for Enclosures which fail...","02/Sep/11 07:44;mgrigorov;Attaching a patch for onAfterRender() problem.
Now instead of calling onAfterRender() on the children components which normally already had executed this method we just set RENDERING_FLAG to false. This is needed because of two reasons:
1) this flag is being set even for invisible components (see org.apache.wicket.Component.internalRender(), line 2320 and the check in 2332)
2) in Ajax request Enclosure needs to update this flag for its child component. The specifics are not very clear to me.",02/Sep/11 15:19;ivaynberg;looks ok,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal window won't show in internet explorer document mode 8,WICKET-3847,12512300,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,sodasmile,sodasmile,30/Jun/11 09:33,30/Aug/11 06:28,13/Mar/19 23:17,30/Jun/11 13:47,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,ajax,modal,window,,,,"Plain modal window won't show after revision 1135146, WICKET-3782 Notifications before and after DOM node replacement (...) using Internet Explorer 9 in document mode quirks, 7 and 8. Works in document mode 9, Opera 11.11, Chrome 13.0.782.32 beta-m, Firefox 3.6.18 and 5.0

Seems like the lines:
var newElement = Wicket.$(element.id);
Wicket.Event.publish('/dom/node/added', newElement);
the 2nd time they run, element.id = """", which makes Wicket.$ (document.getElementById("""")) crash, and an ""ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: [object Error]"" is logged to the Wicket ajax debug window.

Quick workaround: Somewhere in your code, include the following script: 
<script type=""text/javascript"">
    oldFu = Wicket.$;

    Wicket.$ = function(arg) {
        if (arg == null || typeof(arg) == ""undefined"" || arg == """") {
            return null;
        }
        return oldFu(arg);
    }
</script>

Where the difference to the original $ function is the arg=="""" check",Internet Explorer <=8,,,,,,,,,,,,,,,,,,,,,30/Jun/11 09:39;sodasmile;mowi.zip;https://issues.apache.org/jira/secure/attachment/12484750/mowi.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-30 10:13:08.965,,,no_permission,,,,,,,,,,,63269,,,Fri Jul 01 09:07:45 UTC 2011,,,,,,0|i0k9xz:,116428,,,,,,,,"30/Jun/11 09:39;sodasmile;Plain simple page with link to modal window, with javascript ""patch"" for workaround.","30/Jun/11 10:13;mgrigorov;Hi,

Thanks for reporting!

My IE (Virtual Box) is broken right now and I cannot test it.
Can you test this fix:


--- wicket-core/src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(revision 1141410)
+++ wicket-core/src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(working copy)
@@ -359,6 +359,7 @@
  */
 Wicket.replaceOuterHtml = function(element, text) {	
 
+    var elementId = element.id;
     Wicket.Event.publish('/dom/node/removing', element);
 
 	if (Wicket.Browser.isIE() || Wicket.Browser.isOpera()) {		
@@ -374,7 +375,7 @@
         element.parentNode.replaceChild(fragment, element);
     }
     
-    var newElement = Wicket.$(element.id);
+    var newElement = Wicket.$(elementId);

Thanks!","30/Jun/11 11:37;sodasmile;Thanks for quick reply. The problem is not in the function itself. The element id is already """" when the element is passed in to the function. I'll dig a little deeper in the callstack and see what I can find.

What I can't quite seem to figure out is that where the call crashes is in wicket-ajax.js:51 where it does the ""document.getElementById(arg)"" in the Wicket.$ function, and arg is set to """". Stepping over this line in the IE debugger sends the control right back to wicket-ajax.js:1407 ""} catch (exception) {"", in the processEvaluation function, with exception set to ""Invalid procedure call or argument"".

However, when I try a plain html page with a javascript document.getElementById("""") it returns null and no exception.

I'll see what I can find.","30/Jun/11 11:51;sodasmile;The callstack leading up to the exception is:

wicket-ajax.js:378 replaceOuterHtml(element, text)
modal.js:356 createDom()
modal.js:646 show()
JScript global code: ""Wicket.Window.create(settings).show();
(... anonymous functions ...)
wicket-ajax.js:158 processNext()
wicket-ajax.js:168 notify()
(... anonymous functions ...)
wicket-ajax.js:158 processNext()
wicket-ajax.js:168 notify()
(... anonymous functions ...)
wicket-ajax.js:158 processNext()
wicket-ajax.js:168 notify()
(... anonymous functions ...)
wicket-ajax.js:158 processNext()
wicket-ajax.js:168 notify()
(...)

Running the same code in e.g. Chrome, the document.getElementById("""") returns null, which passes null as newElement into Wicket.Event.publish('/dom/node/added', newElement) which seems to handle the null newElement properly.","30/Jun/11 12:05;mgrigorov;It is new for me that modal.js uses Wicket.replaceOuterHtml().
I'll improve it soon.","30/Jun/11 13:47;mgrigorov;Fixed by adding 'id' attribute to the element that modal.js creates.

Thanks!","01/Jul/11 09:00;papegaaij;The workaround mentioned earlier did not work for us, so we came up with an alternative (just include this javascript somewhere after wicket-ajax):

// FIX voor WICKET-3847
var oldReplaceOuterHtmlIE;
if (!oldReplaceOuterHtmlIE) {
	oldReplaceOuterHtmlIE = Wicket.replaceOuterHtmlIE;
	var counter = 0;
	Wicket.replaceOuterHtmlIE = function(element, text) {
		if (!element.id) {
			element.id = 'blamijnid' + (counter++);
		}
		return oldReplaceOuterHtmlIE(element, text);
	}
}","01/Jul/11 09:07;sodasmile;Just a sidenote: 

What puzzled me was that when I did document.getElementById(""""); in IE8 in a ""controlled environment"", it returned null, no exception, but when the same line ran as part of the wicket-ajax.js it threw an exception. 

Doing a document.getElementById in javascript console in IE debugger returned something like: { native code }, whereas when I did the same call while in the wicket-ajax.js, it returned "" { ... } "" (literally three dots), although it sounds very strange, can it be that something redefines the getElementById?? ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unexpected order of head contributions,WICKET-3761,12509027,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,kgignatyev,kgignatyev,01/Jun/11 21:50,29/Aug/11 11:17,13/Mar/19 23:17,07/Jun/11 12:54,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"when markup uses w-head contribution for static scripts

<wicket:head>
   <script type=""text/javascript"" src=""http://link.from.markup/h.js"" ></script>
</wicket:head>
and then component adds something dynamically in renderHead
@Override
    public void renderHead(IHeaderResponse response) {
        super.renderHead(response);
        response.renderJavaScriptReference(""http://link.from.renderheadmethod/body.js"");
    }

the dynamic link comes first and therefore does not work, repro case attached

Expected: that programmatic contributions use after ones from markup 


",,,,,,,,,,,,,,,WICKET-4000,,,,,,,01/Jun/11 21:52;kgignatyev;w-head-contributions-order.zip;https://issues.apache.org/jira/secure/attachment/12481151/w-head-contributions-order.zip,07/Jun/11 12:55;mgrigorov;wicket-3761-quickstart-1.4.tgz;https://issues.apache.org/jira/secure/attachment/12481691/wicket-3761-quickstart-1.4.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-03 02:31:16.909,,,no_permission,,,,,,,,,,,63393,,,Tue Jun 07 12:55:11 UTC 2011,,,,,,0|i0ka4f:,116457,,,,,,,,03/Jun/11 02:31;ivaynberg;i dont think we specify this ordering anywhere....,"03/Jun/11 03:45;kgignatyev;I know, but I think it needs to be specified and I think that expected order is: markup contributions, then programmatic. That is expected because we start with markup and then augment it with code, for example replace attribute on a markup node. That creates implicit order: markup, then code.","04/Jun/11 15:59;ivaynberg;of course a simple counter example, which is very common is:

class mycomponent {
  renderhead(r) {
    js=""jquery.""+(app.inDevMode()?"""":""min."")+"".js"";
    r.renderjavascriptreference(js);
  }
}

<wicket:head>$(document).ready() { ... }</wicket:head>

in this example the markup depends on the correct version of main js to be contributed by code depending on what mode the application is launched.
    ","07/Jun/11 12:30;mgrigorov;I also don't see a reason for specific order but 1.4 first delivers the one from markup and then the one from .java.
I'll make it as in 1.4 ",07/Jun/11 12:54;mgrigorov;With r1132987 the markup contributes before the .java. This way it works as in 1.4.,07/Jun/11 12:55;mgrigorov;The same app for 1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A (stateless) page immediately disappears after the first render,WICKET-3965,12518872,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,15/Aug/11 11:44,28/Aug/11 17:18,13/Mar/19 23:17,15/Aug/11 15:19,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"Using setResponsePage(new SomeStatelessNonBookmarkablePage(aParameter)) renders the page but trying to reload the page in the browser fails with PageExpiredException.

The reason is that the page is stateless and thus it is not saved in the page stores. Since it was scheduled for render with setResponsePage(Page) method its Url is created by PageInstanceMapper (i.e. something like: wicket/page?1). An attempt to refresh such page fails with ""Page with id '1' is not found => PageExpiredException"".

Igor suggested to call 'page.setStatelessHint(false)' for all pages passed to PageProvider(IRequestablePage) constructor, i.e. such pages must be stored.
This solved the problem but exposed few more problems:
- MockPageManager (used in WicketTester) until now always touched/stored pages, no matter their statelessness
- org.apache.wicket.markup.html.internal.EnclosureTest.testRender10() was wrong for some unknown reason. All expectations against EnclosurePageExpectedResult_10-2.html should not have the enclosure rendered because ""input"" component is invisible",,,,,,,,,,,,,,,,,,,,,,15/Aug/11 12:57;mgrigorov;WICKET-3965.patch;https://issues.apache.org/jira/secure/attachment/12490426/WICKET-3965.patch,15/Aug/11 12:03;mgrigorov;WICKET-3965.patch;https://issues.apache.org/jira/secure/attachment/12490425/WICKET-3965.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-08-15 15:08:32.474,,,no_permission,,,,,,,,,,,63448,,,Mon Aug 15 15:19:04 UTC 2011,,,,,,0|i0k9n3:,116379,,,,,,,,"15/Aug/11 12:03;mgrigorov;Here is a patch with the new unit test and the proposed fixes.
The only failing test is org.apache.wicket.stateless.TemporarySessionTest.testSessionIsTemporary() because org.apache.wicket.Component.urlFor(Behavior, RequestListenerInterface) uses PageAndComponentProvider(Page) which makes the page stateful and binds the session.",15/Aug/11 12:57;mgrigorov;Here a patch that works for all old tests and the new test for this ticket.,15/Aug/11 12:57;mgrigorov;@Igor: please review.,15/Aug/11 15:08;ivaynberg;looks good,15/Aug/11 15:19;mgrigorov;Committed with r1157882.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"New Chrome merges text in replaceOuterHtml, breaking wicket-ajax",WICKET-3820,12511023,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,dretzlaff,dretzlaff,21/Jun/11 02:01,26/Aug/11 14:22,13/Mar/19 23:17,23/Jun/11 13:45,1.4.17,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC6,,wicket,,,,,,,0,,,,,,,"Chrome 13.0.782.24 beta changes the way ""element.outerHTML = text"" is handled in a way that breaks Wicket's AJAX rendering compared to Chrome 12.0.782.100 (stable).

Before the outerHTML assignment that replaces the DOM content, Wicket.replaceOuterHtmlSafari() grabs element.nextSibling. After the outerHTML assignment, it iterates through the new element siblings until the previous ""next"" is encountered. However, when the new text contains trailing whitespace, and the ""previous next"" is a text node, the new version of Chrome merges the two text nodes into a single text node, invalidating the iteration's termination condition. This eventually leads to a null reference, breaking subsequent Javascript/AJAX functionality.

Is it a good idea to simply add ""while (next.nodeType == 3) next = next.nextSibling;"" after the next assignment in Wicket.replaceOuterHtmlSafari? This just makes the ""previous next"" reference something other than a text node.",Chrome 13.0.782.24,,,,,,,,,,,,,,,,,,,,,21/Jun/11 02:13;dretzlaff;chromeajax.patch;https://issues.apache.org/jira/secure/attachment/12483234/chromeajax.patch,21/Jun/11 02:03;dretzlaff;chromeajax.zip;https://issues.apache.org/jira/secure/attachment/12483231/chromeajax.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-21 05:50:41.987,,,no_permission,,,,,,,,,,,63634,,,Fri Jul 29 00:32:20 UTC 2011,,,,,,0|i0ka0f:,116439,,,,,,,,"21/Jun/11 05:50;mgrigorov;Since recently Chrome is treated as Gecko in replaceOuterHtml(), not as Safari, so this shouldn't be a problem in RC5.
Can you test whether Safari fails with this problem ?",21/Jun/11 06:13;ivaynberg;it bit me earlier today. this is something we will need to fix in 1.4.18,"21/Jun/11 06:25;dretzlaff;It traces to this WebKit change: https://bugs.webkit.org/show_bug.cgi?id=52686

I can test in Safari tomorrow, but I think it's only a matter of time until Safari upgrades its WebKit as well.","21/Jun/11 17:05;dretzlaff;Safari 5.0.5 (current) has WebKit 533.21.1 and is OK.
Chrome 12.x (stable) has WebKit 534.3 and is OK.
Chrome 13.x (beta) has WebKit 535.1 and is broken.

Since Chrome 12.x was released 2011-06-07, and they release to stable about every 6 weeks, we probably have about 4 weeks before the change hits Chrome stable.

The Safari 5.1 developer preview uses WebKit 534.42 which does NOT contain the text-merge behavior, so Safari looks good for a while.","29/Jul/11 00:32;david.shepherdson;The release version of Safari 5.1 (on both Snow Leopard/10.6 and Lion/10.7) appears to include this text-merge change, meaning that Wicket's AJAX functionality breaks there too.

We'll patch our local Wicket accordingly, but for everybody else, how far away is 1.4.18 from release? :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Slovenian (sl) properties file is corrupted in 1.4.18,WICKET-3996,12520152,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,clampley@epoch.com,clampley@epoch.com,25/Aug/11 20:34,26/Aug/11 06:01,13/Mar/19 23:17,26/Aug/11 06:01,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,,,wicket,,,,,,,0,,,,,,,"INFO org.apache.wicket.resource.PropertiesFactory - Loading properties files from jar:file:/wicket-1.4.18.jar!/org/apache/wicket/Application_sl.properties
ERROR com.epoch.wicket.controls.DynamicPanel - Error building component: name                                                                                                                          
java.lang.IllegalArgumentException: Malformed \uxxxx encoding.                                                                                                                                         
at java.util.Properties.loadConvert(Properties.java:568)                                                                                                                                               
at java.util.Properties.load0(Properties.java:391)                                                                                                                                                     
at java.util.Properties.load(Properties.java:341)                                                                                                                                                      
at org.apache.wicket.resource.PropertiesFactory$PropertiesFilePropertiesLoader.loadProperties(PropertiesFactory.java:343)                                                                              
at org.apache.wicket.resource.PropertiesFactory$AbstractPropertiesLoader.load(PropertiesFactory.java:274)                                                                                              
at org.apache.wicket.resource.PropertiesFactory.load(PropertiesFactory.java:133)                                                                                                                       
at org.apache.wicket.resource.loader.ComponentStringResourceLoader.loadStringResource(ComponentStringResourceLoader.java:142)                                                                          
at org.apache.wicket.resource.loader.ClassStringResourceLoader.loadStringResource(ClassStringResourceLoader.java:65)                                                                                   
at org.apache.wicket.resource.loader.ComponentStringResourceLoader.loadStringResource(ComponentStringResourceLoader.java:248)                                                                          
at org.apache.wicket.resource.loader.ClassStringResourceLoader.loadStringResource(ClassStringResourceLoader.java:80)                                                                                   
at org.apache.wicket.Localizer.getStringIgnoreSettings(Localizer.java:241)                                                                                                                             
at org.apache.wicket.Localizer.getString(Localizer.java:313)                                                                                                                                           
at org.apache.wicket.Localizer.getString(Localizer.java:119)                                                                                                                                           
at org.apache.wicket.Component.getString(Component.java:1966)                                                                                                                                          
at org.apache.wicket.Component.getString(Component.java:1953)                                                                                                                                          
                                                                                                                                                                                                       ","Linux, Java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-08-26 06:01:54.337,,,no_permission,,,,,,,,,,,63662,,,Fri Aug 26 06:01:54 UTC 2011,,,,,,0|i0k9jz:,116365,,,,,,,,"26/Aug/11 06:01;svenmeier;corrected malformed \uxxxx encoding (was moved from MultiFileUploadField and already wrong there, see WICKET-3727)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MarkupNotFoundException when refreshing a component with AJAX inside a TransparentWebMarkupContainer,WICKET-3989,12519927,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,papegaaij,papegaaij,24/Aug/11 08:23,24/Aug/11 13:39,13/Mar/19 23:17,24/Aug/11 13:39,1.5-RC6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC7,,,wicket,,,,,,,0,,,,,,,"A component placed inside a TransparentWebMarkupContainer, added to its parent cannot be refreshed with AJAX. See quickstart.",,,,,,,,,,,,,,,,,,,,,,24/Aug/11 08:24;papegaaij;myproject.tar.gz;https://issues.apache.org/jira/secure/attachment/12491449/myproject.tar.gz,24/Aug/11 12:28;mgrigorov;wicket-3989.diff;https://issues.apache.org/jira/secure/attachment/12491471/wicket-3989.diff,24/Aug/11 12:05;papegaaij;wicket-3989.diff;https://issues.apache.org/jira/secure/attachment/12491470/wicket-3989.diff,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-08-24 11:49:05.681,,,no_permission,,,,,,,,,,,63883,,,Wed Aug 24 13:39:32 UTC 2011,,,,,,0|i0k9l3:,116370,,,,,,,,"24/Aug/11 08:36;papegaaij;The quickstart does work with RC5.1, so this is a regression.",24/Aug/11 11:26;papegaaij;A git bisect run shows that r1151831 for WICKET-3931 introduced this problem.,"24/Aug/11 11:49;mgrigorov;The problem lies in org.apache.wicket.markup.MarkupFragment.find(String). It stops looking for inner IMarkupElements if the component doesn't match and is not auto-component. I'll see how to make TransparentWebMarkupContainer's tag always auto, and what would that break.","24/Aug/11 12:28;mgrigorov;Update Emond's patch by extracting the common code in AbstractMarkupSourcingStrategy.

Now it seems only FragmentMarkupSourcingStrategy (FMSS) doesn't reuse that common code for free.

@Juergen: do you think that FMSS needs it too ?

I'll modify the quickstart to a unit test.",24/Aug/11 12:29;mgrigorov;I've heart Martijn is working on the test case too.,"24/Aug/11 13:39;dashorst;Assigned to RC 7, but fix should go into 1.5-RC6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding a SignInPanel to a page generates an additional call to the page's constructor,WICKET-3980,12519564,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svieujot,svieujot,21/Aug/11 20:08,23/Aug/11 17:07,13/Mar/19 23:17,23/Aug/11 14:47,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket-auth-roles,,,,,,,0,,,,,,,"See the attached quickstart : mvn test
The constructor of the page having a SignInPanel is called twice.",,,,,,,,,,,,,,,,,,,,,,21/Aug/11 20:09;svieujot;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12491109/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,64017,,,Tue Aug 23 17:07:07 UTC 2011,,,,,,0|i0k9lz:,116374,,,,,,,,23/Aug/11 17:07;svieujot;Thank you !,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"wicket:message attribute results in ""The component was rendered already"" error",WICKET-3972,12519249,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,barlabanov,barlabanov,18/Aug/11 07:08,20/Aug/11 20:21,13/Mar/19 23:17,19/Aug/11 07:37,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"Seems like there is a problem with generation of tag and component IDs when using wicket:message as an attribute for tags inside ListView.
The quickstart webapp is attached to this ticket. There are two pages in this webapp: HomePage with a ListView containing tags with wicket:message attribute and two tags with wicket:message attribute outside the ListView. If a user goes to the next page (SecondPage) using the link on HomePage and then goes back to HomePage using the link on SecondPage, the exception mentioned in the subject occurs.
Seems that the ID generation for tags and components is wrong: the ComponentTag-s are cached together with the corresponding Markup and then reused for later renderings. But the problem is, that those ComponentTag-s are mutable (at least in case of tags with wicket:message attribute) and their IDs are changed on every rendering and this produces ID conflicts when MarkupContainer.renderNext tries to find or create components corresponding to the tags.
Interesting is, that we can reproduce this bug only in DEVELOPMENT mode. In DEPLOYMENT mode everything seems to work. The solution would be to make ComponentTags immutable and do not allow to change them, but to create copies (there is mutable method in ComponentTag, which is used in some cases).","Linux Ubuntu, Tomcat 6, Java 6",,,,,,,,,,,,,,,,,,,,,18/Aug/11 07:09;barlabanov;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12490764/quickstart.zip,18/Aug/11 23:54;pete;wicket-message-index.patch;https://issues.apache.org/jira/secure/attachment/12490897/wicket-message-index.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-08-18 11:31:13.61,,,no_permission,,,,,,,,,,,64324,,,Sat Aug 20 20:21:52 UTC 2011,,,,,,0|i0k9mn:,116377,,,,,,,,"18/Aug/11 11:31;mgrigorov;This is a hard one to track the bug...
There are two stable wicket:message components and the other are dynamically generated depending on the request parameter value.
If I disable any of them then the app works, but otherwise the 'link' component is not rendered, component use check runs, and for some reason  during the rendering of the error page the error message gets replaced by ""wicket:message with id '..' was already rendered"".","18/Aug/11 17:57;pete;Short summary on what I found so far:

The problem lies within WicketMessageTagHandler, WicketMessageResolver and the behavior of Page.getAutoIndex().

When rendering HomePage for the 1st time WicketMessageResolver resolves the 'wicket:message' attributes and sets the component id of the affected components to '_message_attr_'. 

WicketMessageTagHandler will detect all component with '_message_attr_' and add an auto index. The auto index starts with zero when rendering begins and returns unique id's for dynamically creating unique component ids.

So after the first render we have the first input tag resolved with id = '_message_attr_4' (the one that causes the crash later). Now we redirect to SecondPage and return. Since the list view will create another tag with 'wicket:message' it will receive ''_message_attr' as temporary component id. Again WicketMessageTagHandler tries to assign an auto index (which starts with zero every new render). In this example it gets index = 4 by chance (unlucky!) which already exists so we get a duplicate component id.

The solution is probably to check if a component already exists when creating new component id's with auto index or to keep auto index incrementing over different page id's for the same page (however this will make stateless pages stateful).

I keep on investigating...
",18/Aug/11 18:14;pete;replace above 'component id' with 'tag id',"18/Aug/11 18:27;pete;For component tags that not necessarily relate to a wicket component (tag id <> component id) we need to place auto index somewhere else but not in page. I will attach a patch which puts the auto index right inside MarkupResourceStream. I think this is the technically right place. However I don't know if this is ugly or the way to solve it, so feedback is welcome...","18/Aug/11 19:01;jdonnerstag;I don't think your observations are completely right. *Handlers are executed while loading the markup and before the markup gets cached. They get re-used for multiple instances of typically (but necessarily) the same Components. The Page instance is not known. The main purpose of *Handlers are to identify tags which Wicket's render process must somehow handle.

*Resolvers are used during the render process to automatically create (or find/resolve) components which know how to handle the tag. Many *Resolvers create auto-components, which are typically transparent, and which are automatically removed again after the render process. They get re-created with the next render cycle. The Page is known during the render process. And because the page auto-index gets incremented, it should never happen that for the same page instance components with the same id are created.  I don't think we need some other mechanism. A *Resolver should never change the tag id, only the *Handler may.

The solution is much simpler. WicketMessageTagHandler.resolver() should not call tag.setId()


","18/Aug/11 23:54;pete;
@Jürgen: Thanks for the feedback :-)

I think the problem can be solved by not assigning a temporary component tag id ('_message_attr_') but a permanent one including a counter to the component tags with 'wicket:message' attribute.

currently we have the situation that 3 component tags with 'wicket:message' are located in the markup but only two of them get resolved on first render of HomePage

component tag#1 (id = '_message_attr_') -- invisible since list view is empty, so WicketMessageTagHandler#resolve() is not invoked and temporary id stays
component tag#2 (id = '_message_attr_3')
component tag#3 (id = '_message_attr_4')

-> go to SecondPage

-> go to HomePage with now visible ListView caused by page parameter

resolve now assigns a permanent id to the first component which will cause an identifier collision

component tag#1 (id = '_message_attr_4') -> new permanent id assigned, will refer to component that has been attached to component tag #3 recently
component tag#2 (id = '_message_attr_3') -> since the component tag has a related component resolve will not be invoked and the old id stays
component tag#3 (id = '_message_attr_4') -> since the component tag has a related component resolve will not be invoked and the old id stays; wicket will again render component that has accidentally already been rendered by component tag #1 and causes the 'component was already rendered' error


new patch included...","19/Aug/11 05:43;jdonnerstag;Unfortunately it doesn't work. I wish it would, since it's simple than what we need to do today. There are several issues with this approach:
- which counter do you want to use? A new handler is created with every markup. The Page is not available. May be the Session, but you don't want to create it for stateless apps. The App / MarkupFactory?
- You couldn't even use a counter per Handler if the Handler wouldn't get re-created, or use the resource stream or whatever, since the number scheme would only work if you can guarantee that the markup/Component is always used with the same Page only. But of course Components can be added to as many different Pages/Containers as you like. And every Page has a different sequence in which it loads its components. You inevitably will have clashes, except you choose an application scoped counter. But that is inpracticable, since it will overrun for large or busy apps, or apps which are in prod for a long time.
- Because of transparent containers you cannot assume the much smuch smaller scope of a container for possible clashes, but to be safe, the complete page.

Did you try if the quickstart provided by Sergiy works if you remove tag.setId(xx) from WicketMessageTagHandler.resolver()?  The invocation of tag.setId(xxx) should really not be there. 

I think the convention is fine. The issue is that we don't enforce it in the code.

",19/Aug/11 07:37;mgrigorov;Applied Juergen's suggestion. It solves the problem.,"20/Aug/11 08:39;pete;Wow, I was really surprised that just leaving off a single line will do the trick. Impressive!

At least I learned a lot more about handlers and resolvers, thanks guys!! :-)","20/Aug/11 20:02;barlabanov;thanks for the fix. Will wait till RC6 :).
Though I think, that making Markups immutable would be a more clean solution (requiring more code ;)). There is no real need to reassign tag ids on every page/component render. The mutability of markup is a potential source of future errors, since component markups and ComponentTag objects contained inside are reused multiple times in different requests resulting in race conditions like the one described in this bug report.","20/Aug/11 20:21;jdonnerstag;That is only partially true. The ComponentTag exposed to ""normal"" users via onComponentTag() etc. is a copy and can be modified without doing harm to the core. Handlers are already something for advanced users. But I accept that it'd be nice to throw an exception in cases like setId(). That should actually be easy to implement.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
TextTemplateResourceReference should be registered into the ResourceReferenceRegistry because otherwise the next request is served by PackageResourceReference,WICKET-3971,12519104,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,17/Aug/11 12:42,17/Aug/11 13:22,13/Mar/19 23:17,17/Aug/11 13:22,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"The title says it all.
If the TextTemplateResourceReference is not registered then BasicResourceReferenceMapper receives autocreated PackageResRef which doesn't make variable substitutions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,64804,,,2011-08-17 12:42:02.0,,,,,,0|i0k9mv:,116378,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PropertyModel/PropertyResolver breaks when using a List as the root object,WICKET-3929,12515026,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cmenzel,cmenzel,22/Jul/11 13:46,12/Aug/11 15:20,13/Mar/19 23:17,12/Aug/11 15:20,1.4.17,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,1.5-RC6,,wicket,,,,,,,0,,,,,,,"When using a java.util.List as the root target of a PropertyModel, and then using a property expression such as ""[0].someProperty"", PropertyResolver breaks rather badly, claiming that ""0].somePropert"" is not a valid property expression. Note the missing first and last characters.

This happens because it first replaces all opening ""["" with "".["", and thus we get a leading ""."" in the expression. That ""."" is then cut off, but the rest of the expression is suddenly treated as a single property name. A later step sees the leading ""["" and thinks the whole thing is just a map/list index, and so drops the leading ""["" and the last character (in the mistaken belief that the last character must be a ""]"".

To make a long story short: The whole thing is fixed by eating the leading dots before entering the main resolver loop. I'm attaching patches for 1.4.x and trunk(1.5).",,,,,,,,,,,,,,,,,,,,,,22/Jul/11 13:47;cmenzel;1.4.x-0001-fix-problem-with-List-as-the-target-of-a-property-mo.patch;https://issues.apache.org/jira/secure/attachment/12487436/1.4.x-0001-fix-problem-with-List-as-the-target-of-a-property-mo.patch,22/Jul/11 13:47;cmenzel;1.5-0001-fix-problem-with-List-as-the-target-of-a-property-mo.patch;https://issues.apache.org/jira/secure/attachment/12487437/1.5-0001-fix-problem-with-List-as-the-target-of-a-property-mo.patch,22/Jul/11 18:18;pedrosans;WICKET-3929.patch;https://issues.apache.org/jira/secure/attachment/12487460/WICKET-3929.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-07-22 18:18:00.971,,,no_permission,,,,,,,,,,,65181,,,Fri Aug 12 15:20:58 UTC 2011,,,,,,0|i0dbvb:,75852,,,,,,,,"22/Jul/11 13:47;cmenzel;These patches contain test cases for the described behavior, and a fix for PropertyResolver, for 1.4.x and trunk(1.5).","22/Jul/11 18:18;pedrosans;Hi Carl, in the PropertyResolver javadoc the property[index] or property[key] syntax is designed for properties. I'm attaching the test case working by removing some '[' and ']' s

Anyway I'm 1+ for the patch because it makes the resolver syntax more consistent by no differentiating the [index] in beginning of the expression from those in the middle.","22/Jul/11 20:53;cmenzel;Ah, I see. Well, it would be more obvious with my patch ;-)

I ran into this while working on my SafeModel implementation. I'd really like the more consistent syntax, because then I could have it work with lists without doing a special case for the first step. Thanks!","12/Aug/11 15:20;mgrigorov;The patches are applied.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestLogger generates log entries that are not parsable,WICKET-3919,12514592,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,dashorst,dashorst,19/Jul/11 13:48,11/Aug/11 15:11,13/Mar/19 23:17,11/Aug/11 15:11,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"The current (default) request logger generates logs that are not parsable by automated tools. The identifiers and values give many collisions with keywords, making it impossible to create an efficient ANTLR parser/lexer for it.

A couple of observations:
 - the log is not parsable due to inconsistent logging of log parts. For example [ResourceStreamRequestTarget[[]] generates an unbalanced number of brackets
 - some parts are joined by ',' and others are joined by ', ' (notice the extra whitespace)
 - it is not possible to retrieve parts of the logs because keywords, identifiers and values share the same namespace. A page parameter with name 'event' would choke a LL(x) parser since the lexer will render a keyword instead of a value

Possible solutions:
 - fix the current format to become consistent and parsable, by surrounding identifiers and values with single quotes and escaping single quotes inside the identifiers and values, and fixing other issues
 - render JSON instead of the current format (in my opinion best done in a separate JSonRequestLogger)
 - ???
",,,,,,,,,,,,,,,,,,,,,,25/Jul/11 23:10;dashorst;JsonAndImprovedRequestLogger.txt;https://issues.apache.org/jira/secure/attachment/12487773/JsonAndImprovedRequestLogger.txt,11/Aug/11 15:08;mgrigorov;JsonRequestLogger.java;https://issues.apache.org/jira/secure/attachment/12490120/JsonRequestLogger.java,20/Jul/11 22:44;bitstorm;RequestLoggerTest.java;https://issues.apache.org/jira/secure/attachment/12487228/RequestLoggerTest.java,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-07-20 22:43:55.237,,,no_permission,,,,,,,,,,,65460,,,Thu Aug 11 15:11:21 UTC 2011,,,,,,0|i0k9pb:,116389,,,,,,,,"20/Jul/11 22:43;bitstorm;Adopting JSON format is a good idea. Do you think we should create also an ""AbstractRequestLogger"" with common utility methods (like copyRequestsInOrder, objectCreated and so on)?

Since there's no test  for RequestLogger, I've created  a basic test case which can  be used to test logs generation. I've attached it to issue.
","25/Jul/11 23:10;dashorst;Run the patch against wicket-core, not tested yet.",27/Jul/11 13:25;bitstorm;I'm starting now writing some tests. I will post the test case as soon as possible (probably tomorrow),"27/Jul/11 13:42;mgrigorov;Since Martijn is in vacation it will be good if Emond (Martijn's colleague) also add some feedback about their experience so far.
","28/Jul/11 07:23;papegaaij;Unfortunately, I don't have the time at the moment to test the code. But in my opinion this is not the way to go. This approach has several major problems. First of all, writing loggers for different formatters is a lot of work, with lots of code duplication. Imagine you have to do this for other formats, such as XML or serialised objects as well. Second, it is very error prone. Escaping the strings for different formats is not a easy as it seems, and with formats like JSON you really have to watch things like commas. However, my major concern is that the logger has to know about every request handler that will ever be written.

I think the relation between the handlers and logger should be reversed. The handler should be responsible for providing the logger with information. This information should be structured in POJOs rather than flat strings. The logger is responsible for writing these objects to a stream in whatever format you like. You could even use Java Serialization.

I know it is too late for such a change to go in IRequestHandler in Wicket 1.5, therefore I propose the following solution:
For now, we fine tune these patches, and have them go in Wicket 1.5.
At some point in the near future (still 1.5, but probably after .0), we introduce a ILoggableRequestHandler and let all request handlers implement this interface. The current IRequestLogger infrastructure can still be used for this, especially with Martijn's patches, because they give access to the handlers themselves, rather than the logged strings.","28/Jul/11 10:30;bitstorm;I'm quite agree with you Emond, but I also think that this patch must be somehow tested with a test case which checks the generated logs. 

Since Wicket makes an heavy use of slf4j I'm trying to understand how to use a custom Logger to keep track of generated logs and test them against expected string format.
Has anyone experience of using custom slf4j Logger? ","28/Jul/11 11:10;mgrigorov;wicket-core tests use slf4j-log4j12 so you can rely on log4j for this test.
It will be tricky to include a second slfj4 impl. slf4j binds very early against the impl and even shows errors in the logs if you have more than one impl in the classpath.

But Emond's idea is to save the data in a POJO and then different IRequestLogger impls will pass that data to different serializers (JSON, XML, ...), and then the produced output will be either passed to slf4j or saved in a separate file (why not one per session?!). So testing the serialization is enough, no need to test saving in files, writing to stdout or anything like that. ","28/Jul/11 13:11;bitstorm;Sorry, I didn't specify that the test I meant is about Martijn's patch (file JsonAndImprovedRequestLogger.txt), if we decide to release it with Wicket 1.5. ",09/Aug/11 19:40;ivaynberg;lets not let this hold up the release. since request loggers are pluggable as long as the current impl has no major problems lets release it as is and later add the json one.,"11/Aug/11 15:08;mgrigorov;Attaching the updated request logger that logs the collected data in JSON format.
It hasn't been included in Wicket core until we decide how actually to log the data.  ","11/Aug/11 15:11;mgrigorov;With r1156643 I committed the patch provided by Martijn Dashorst with minor fixes and without JSON based request logger.
The updated JSON based logger is attached to the ticket and can be used by any user application. It wont be included in the distribution until we decide what will be the architecture. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some of the recent commits break junit tests in wicketstuff minis,WICKET-3940,12515844,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,akiraly,akiraly,30/Jul/11 15:12,08/Aug/11 15:31,13/Mar/19 23:17,08/Aug/11 15:31,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"Wicketstuff most of the time simply follows upstream changes but these ones seem to be unwanted side effects. The two failing tests:

1. o.w.minis.component.DefaultInvisibleFeedbackPanelTest.testVisibility()
This is the result of commit ""revision: 1151831, WICKET-3931 Component markup caching inconsistencies"", because if I remove the ""internalDetach();"" call in  o.a.w.Component.detach() the test in minis passes again (but o.a.w.markup.MarkupVariationTest.changeVariation() fails).

2. o.w.minis.behavior.apanel.TestRenderers.testListView()
This started to fail in my env at the same time as the other (yesterday) but I couldn't find the cause for it yet.


",,,,,,,,,,,,,,,,,,,,,,30/Jul/11 15:17;akiraly;WICKET-3940.patch;https://issues.apache.org/jira/secure/attachment/12488311/WICKET-3940.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-08-08 15:31:34.933,,,no_permission,,,,,,,,,,,65743,,,Mon Aug 08 15:31:34 UTC 2011,,,,,,0|i0k9of:,116385,,,,,,,,"30/Jul/11 15:17;akiraly;Attaching a unit test for the first point. I made this for wicket based on the original one from minis: DefaultInvisibleFeedbackPanelTest.testVisibility().

I think the real problem here is that  BaseWicketTester.startComponentInPage(C, IMarkupFragment) generates a page and a markup on the fly but the markup is now thrown away at the end of the request so rerendering the page fails.","30/Jul/11 15:55;akiraly;Ignore the second point. That test class does not match *Test.java pattern so it is not run by the standard maven build (like release or CI) only if run by hand from IDE (like I did). Probably it is broken for some time, it is not a wicket problem.",08/Aug/11 15:31;mgrigorov;Solved it by using special page that caches its markup even after its #detach().,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException: IOException cannot be cast to NotSerializableException,WICKET-3949,12518040,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pekarna,pekarna,05/Aug/11 14:55,08/Aug/11 11:23,13/Mar/19 23:17,08/Aug/11 11:23,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,1.5-RC6,,wicket,,,,,,,0,,,,,,,"I've a page which was throwing NotSerializableException. So I just naively added ""implements Serializable"", and this is what I get now:

{code}
16:53:26,922 ERROR [lang.Objects] Error serializing object class org.jboss.jawabot.plugin.logger.web._pg.ChannelLogPage [object=[Page class = org.jboss.jawabot.plugin.logger.web._pg.ChannelLogPage, id = 0, version = 0]]
java.lang.ClassCastException: java.io.IOException cannot be cast to java.io.NotSerializableException
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:129)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageSerializer.getPageReplacementObject(AbstractPageStore.java:285)
	at org.apache.wicket.Page.writeReplace(Page.java:1401)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeWriteReplace(ObjectStreamClass.java:1032)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1115)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158)
	at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1435)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:486)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:138)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:401)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
{code}

Before that, page rendering fails due to a NPE in my code.

{code}
16:53:26,808 ERROR [wicket.RequestCycle] Error attaching this container for rendering: [MarkupContainer [Component id = channelLogPanel]]
org.apache.wicket.WicketRuntimeException: Error attaching this container for rendering: [MarkupContainer [Component id = channelLogPanel]]
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1769)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3966)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:1066)
	at org.apache.wicket.Component.beforeRender(Component.java:1100)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1757)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3966)
	at org.apache.wicket.Page.onBeforeRender(Page.java:1550)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:1066)
	at org.apache.wicket.Component.beforeRender(Component.java:1100)
	at org.apache.wicket.Component.prepareForRender(Component.java:2292)
	at org.apache.wicket.Page.prepareForRender(Page.java:1540)
	at org.apache.wicket.Component.prepareForRender(Component.java:2329)
	at org.apache.wicket.Page.renderPage(Page.java:911)
	at org.apache.wicket.protocol.http.WebRequestCycle.redirectTo(WebRequestCycle.java:201)
	at org.apache.wicket.request.target.coding.HybridUrlCodingStrategy$HybridBookmarkablePageRequestTarget.respond(HybridUrlCodingStrategy.java:983)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:486)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:138)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:401)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: java.lang.NullPointerException
	at org.jboss.weld.environment.se.jpa.EntityManagerDelegate.createQuery(EntityManagerDelegate.java:125)
	at org.jboss.jawabot.plugin.logger.bus.ChannelLogManager.getEventsByCriteria(ChannelLogManager.java:36)
	at org.jboss.jawabot.plugin.logger.bus.org$jboss$weld$bean-classpath-ManagedBean-class_org$jboss$jawabot$plugin$logger$bus$ChannelLogManager_$$_WeldSubclass.getEventsByCriteria(org$jboss$weld$bean-classpath-ManagedBean-class_org$jboss$jawabot$plugin$logger$bus$ChannelLogManager_$$_WeldSubclass.java)
	at org.jboss.jawabot.plugin.logger.bus.ChannelLogManager.getEventsByCriteria(ChannelLogManager.java:26)
	at org.jboss.jawabot.plugin.logger.bus.org$jboss$weld$bean-classpath-ManagedBean-class_org$jboss$jawabot$plugin$logger$bus$ChannelLogManager_$$_WeldSubclass.getEventsByCriteria(org$jboss$weld$bean-classpath-ManagedBean-class_org$jboss$jawabot$plugin$logger$bus$ChannelLogManager_$$_WeldSubclass.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.interceptor.proxy.SimpleInterceptionChain.invokeNextInterceptor(SimpleInterceptionChain.java:114)
	at org.jboss.interceptor.proxy.InterceptorMethodHandler.executeInterception(InterceptorMethodHandler.java:133)
	at org.jboss.interceptor.proxy.InterceptorMethodHandler.invoke(InterceptorMethodHandler.java:112)
	at org.jboss.weld.bean.proxy.CombinedInterceptorAndDecoratorStackMethodHandler.invoke(CombinedInterceptorAndDecoratorStackMethodHandler.java:65)
	at org.jboss.jawabot.plugin.logger.bus.org$jboss$weld$bean-classpath-ManagedBean-class_org$jboss$jawabot$plugin$logger$bus$ChannelLogManager_$$_WeldSubclass.getEventsByCriteria(org$jboss$weld$bean-classpath-ManagedBean-class_org$jboss$jawabot$plugin$logger$bus$ChannelLogManager_$$_WeldSubclass.java)
	at org.jboss.jawabot.plugin.logger.web.IrcEventCriteriaLDM.load(IrcEventCriteriaLDM.java:40)
	at org.jboss.jawabot.plugin.logger.web.IrcEventCriteriaLDM.load(IrcEventCriteriaLDM.java:19)
	at org.apache.wicket.model.LoadableDetachableModel.getObject(LoadableDetachableModel.java:120)
	at org.apache.wicket.Component.getDefaultModelObject(Component.java:1724)
	at org.apache.wicket.markup.html.list.ListView.getViewSize(ListView.java:220)
	at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:511)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:131)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:1066)
	at org.apache.wicket.Component.beforeRender(Component.java:1100)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1757)
	... 36 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,65755,,,Fri Aug 05 20:16:45 UTC 2011,,,,,,0|i0k9o7:,116384,,,,,,,,"05/Aug/11 20:16;pekarna;<pre>
					catch (IOException e)
					{
						if (SerializableChecker.isAvailable())
						{
							new SerializableChecker((NotSerializableException)e).writeObject(obj);
</pre>

The ""non-serializability"" is likely caused by a CDI bean field.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE with RequestLogger enabled and Https,WICKET-3917,12514559,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,hok,hok,19/Jul/11 09:36,28/Jul/11 20:43,13/Mar/19 23:17,28/Jul/11 20:43,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"There is a wicket application with https enabled:

		setRootRequestMapper(new HttpsMapper(getRootRequestMapper(), new HttpsConfig()));

The RequestLogger is also enabled: 

		getRequestLoggerSettings().setRequestLoggerEnabled(true);

The bug can be reproduced by:
1. Try to access the page with ""localhost/h"" (deliberately excluding the https protocol prefix).
2. A NPE is thrown:

java.lang.NullPointerException
     at org.apache.wicket.protocol.http.RequestLogger.getRequestHandlerString(RequestLogger.java:532)
     at org.apache.wicket.protocol.http.RequestLogger.getDelegateString(RequestLogger.java:574)
     at org.apache.wicket.protocol.http.RequestLogger.getRequestHandlerString(RequestLogger.java:556)
     at org.apache.wicket.protocol.http.RequestLogger.logEventTarget(RequestLogger.java:513)
     at org.apache.wicket.protocol.http.RequestLoggerRequestCycleListener.registerHandler(RequestLoggerRequestCycleListener.java:119)
     at org.apache.wicket.protocol.http.RequestLoggerRequestCycleListener.onRequestHandlerResolved(RequestLoggerRequestCycleListener.java:64)
",,,,,,,,,,,,,,,,,,,,,,19/Jul/11 09:37;hok;quickstart.rar;https://issues.apache.org/jira/secure/attachment/12486985/quickstart.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-28 20:43:40.581,,,no_permission,,,,,,,,,,,66690,,,Thu Jul 28 20:43:40 UTC 2011,,,,,,0|i0k9pr:,116391,,,,,,,,"28/Jul/11 20:43;svenmeier;SwitchProtocolRequestHandler no longer implements IRequestHandlerDelegate, thus the request logger no longer stalls on null delegate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpsMapper and BookmarkablePageLink,WICKET-3380,12496576,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hok,hok,24/Jan/11 16:55,28/Jul/11 20:42,13/Mar/19 23:17,24/Jan/11 20:23,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"There is a wicket Application which is configured to use HttpsMapper. 
There are two page: TestPage and TestPage2. TestPage uses @RequireHttps, TestPage2 doesn't. Each page contains a BookmarkablePageLink to the other one. However in this configuration (one with @RequireHttps and one without) the links on the pages are pointing to the page they are added to - the link in TestPage links to TestPage itself (and not to TestPage2) and vice versa. When both of the pages use @RequireHttps or not using it at all the links work normally. ",,,,,,,,,,,,,,,,,,,,,,24/Jan/11 16:57;hok;quickstart.rar;https://issues.apache.org/jira/secure/attachment/12469176/quickstart.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-24 19:28:31.847,,,no_permission,,,,,,,,,,,66691,,,Thu Jul 28 20:42:04 UTC 2011,,,,,,0|i0kb5b:,116623,,,,,,,,"24/Jan/11 19:28;mgrigorov;The quickstart is not working.
First, I needed to specify the ports for the HttpsConfig - 8080 and 8443.
Then it failed with:


javax.net.ssl.SSLHandshakeException: Received fatal alert: bad_certificate
	at com.sun.net.ssl.internal.ssl.Alerts.getSSLException(Alerts.java:150)
	at com.sun.net.ssl.internal.ssl.Alerts.getSSLException(Alerts.java:117)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.recvAlert(SSLSocketImpl.java:1650)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:925)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1089)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1116)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1100)
	at org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnectorEndPoint.run(SslSocketConnector.java:640)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:595)

Can you provide a working one ?","24/Jan/11 19:37;mgrigorov;I made it working.
I'll debug it now.","24/Jan/11 20:23;mgrigorov;Fixed with r1062958.
Thanks!","28/Jul/11 20:42;svenmeier;Reverted to fix Wicket-3917, quickstart works fine here anyway.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component markup caching inconsistencies,WICKET-3931,12515245,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,25/Jul/11 11:18,28/Jul/11 13:14,13/Mar/19 23:17,28/Jul/11 13:14,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"In WICKET-3891 we found that Component#markup field is not being reset between requests. The problem is that this field is transient and it is null-ified only when the page is read from the second level page cache (see https://cwiki.apache.org/confluence/x/qIaoAQ). If the page instance is read from first level cache (http session) then its non-serialized version is used and the markup field value is still non-null.

In WICKET-3891 this looked like a minor issue with the markup caching in development mode but actually this problem is valid even in production mode.
See the attached application. When the panel's variation is changed every MarkupContainer inside still uses its old markup. ",,,,,,,,,,,,,,,,,,,,,,28/Jul/11 12:50;mgrigorov;WICKET-3931.patch;https://issues.apache.org/jira/secure/attachment/12488091/WICKET-3931.patch,27/Jul/11 11:06;mgrigorov;WICKET-3931.patch;https://issues.apache.org/jira/secure/attachment/12487961/WICKET-3931.patch,25/Jul/11 11:19;mgrigorov;variation.tgz;https://issues.apache.org/jira/secure/attachment/12487692/variation.tgz,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-07-25 15:48:44.076,,,no_permission,,,,,,,,,,,66727,,,Thu Jul 28 13:14:35 UTC 2011,,,,,,0|i0k9on:,116386,,,,,,,,25/Jul/11 11:19;mgrigorov;A quickstart showing the problem.,"25/Jul/11 11:24;mgrigorov;Index: wicket-core/src/main/java/org/apache/wicket/Component.java
===================================================================
--- wicket-core/src/main/java/org/apache/wicket/Component.java	(revision 1150368)
+++ wicket-core/src/main/java/org/apache/wicket/Component.java	(working copy)
@@ -3807,6 +3807,8 @@
 	 */
 	protected void onDetach()
 	{
+		markup = null;
+
 		setFlag(FLAG_DETACHING, false);
 	}

This fixes the problem. This way the markup is read from the MarkupCache at every request and it properly refreshes changes in DEV mode and changes in the component variation in DEPLOYMENT mode.
The 'markup' variable is still 'transient' just in case.","25/Jul/11 11:25;mgrigorov;Juergen, what do you think about this ?","25/Jul/11 15:48;jdonnerstag;I guess it is the easiest and cleanest solution:
pro: applies to all components (you can not miss one, even though it might not be needed)
pro: reduced memory footprint.
con: requires to load markup upon the next request. Though loading from MarkupCache is cheap. I don't expect any performance penalities.

I wonder if we need to make sure that not by accident the markup gets re-loaded after detach. E.g. if a user first calls super.detach()  but than uses getMarkup() for whatever reason in his onDetach(). Maybe it's better to cleanup the markup after onDetach() has been executed via iterating over the hierarchy again and calling setMarkup(null).

It'd be good to add test case as well. 
","26/Jul/11 11:54;mgrigorov;The tests for InlineEnclosure fail with this change.
I'll investigate.","27/Jul/11 11:06;mgrigorov;This is the best I was able to do so far.
Now InlineEnclosure has a logic to find its markup for Ajax requests.

The only problem is that now org.apache.wicket.markup.html.internal.AjaxEnclosureTest.testNestedInlineEnclosuresShouldToggleNormally() fails because all InlineEnclosures in a page have the same component id (InlineEnclosure-) and finding the markup is impossible.","27/Jul/11 20:16;jdonnerstag;First I was thinking that other components are affected as well, but only auto-components get their markup set via setMarkup(), which is why they don't need to know how to find their markup. But than I found this: 

MarkupContainer:
	void detachChildren()
	{
...
			// We need to keep InlineEnclosures for Ajax request handling.
			// TODO this is really ugly. Feature request for 1.5: change auto-component that
			// they don't need to be removed anymore.
			if (component.isAuto() && !(component instanceof InlineEnclosure))
			{
				children_remove(i);
			}

which makes me belief that the problem is limited to InlineEnclosure only. I think we have two options. Either the way it's implemented in your patch (InlineEnclosure implements getMarkup()) or InlineEnclosure gets a variable markup which is not reset. Any variation change has no effect on InlineEnclosure ajax upates anyway, since the markup will not be reloaded under any circumstances. 

Pseudo code: InlineEnclosure
  // avoid all the extra info which come with IMF implementations
  private String markup

  IMF getMarkup()
  {
     IMF markup = super.getMarkup();

     // resolver has set markup upon auto-component creation. Local markup not yet set => remember
     if (markup != null && this.markup == null)
     {
          this.markup = markup.toString()
     }
     // markup == null because of detach, but we have our local copy => use copy to set markup
     else if (markup == null && this.markup != null)
     {
        markup = Markup.of(this.markup)
        setMarkup(markup)
     }

     return markup
}","28/Jul/11 12:50;mgrigorov;Here is the final patch. All tests and the variation quickstart work.
I'll modify the quickstart to a unit test. ","28/Jul/11 13:14;mgrigorov;Submitted the fix with r1151831.
Re-worked a bit the previous version because MarkupFragment is not serializable.
Please review and comment if there is something wrong.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimpleTree example not working with CryptoMapper,WICKET-3514,12500626,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,linuxluigi,linuxluigi,07/Mar/11 13:42,27/Jul/11 12:02,13/Mar/19 23:17,27/Jul/11 12:02,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,wicket-examples,,,,,,0,wicket,,,,,,"Adding the following lines to WicketExampleApplication.java causes the SimpleTree example to break. There are no expand icons anymore and there is no way to expand the tree. Even the expand link will not work.

Add to WicketExampleApplication.java 

IRequestMapper cryptoMapper = new CryptoMapper(getRootRequestMapper(), this);
setRootRequestMapper(cryptoMapper);


Comment out in WicketExampleApplication.java 

//getSecuritySettings().setCryptFactory(new ClassCryptFactory(NoCrypt.class, ISecuritySettings.DEFAULT_ENCRYPTION_KEY));

Without the CryptoMapper everythings works fine.


",Ubuntu 10.04 and Wicket 1.5 latest trunk,,,,,,,,,,,,,,,,,,,,,26/Jul/11 21:58;svenmeier;crypto.diff;https://issues.apache.org/jira/secure/attachment/12487901/crypto.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-07 19:43:01.726,,,no_permission,,,,,,,,,,,66795,,,Wed Jul 27 07:16:25 UTC 2011,,,,,,0|i0kaq7:,116555,,,,,,,,07/Mar/11 19:43;mgrigorov;The problem is that CryptoMapper is configured as root mapper in the base application (WicketExampleApplication) and then AjaxApplication (the child application) adds several MountedMappers and thus makes CryptoMapper no more root one.,"07/Mar/11 20:11;mgrigorov;The problem with the missing image is the following:
without cryptomapper the url looks like: /ajax/tree/simple?0. The image is loaded from .css with: url(some.png), so it is resolved to: /ajax/tree/some.png.

with cryptomapper the url is: /ajax/?wicket=zxcvbnm, so the image url is resolved to: /ajax/some.png and cannot be found. ","08/Mar/11 08:20;linuxluigi;When placing the CryptoMapper code in the AjaxApplication (the child application) the error occurs as well except that the expand, collapse and switch links are working. I used the CryptoMapper Revision 1078894. ","08/Mar/11 18:28;mgrigorov;What error occurs ?
The only problem I see is that the image sprite can not be loaded and thus switch links have no image (+/-).","09/Mar/11 07:08;linuxluigi;Yes, you are right. But are there any chances/workaround to solve the icon problem or is it impossible because its url is defined in the css?","09/Mar/11 08:17;ivaynberg;we should see if we can tweak the mapper to keep the mount in the url, this way relative links will be preserved.","13/Mar/11 20:17;mgrigorov;The ""tweak"" here is easy:

Index: wicket-core/src/main/java/org/apache/wicket/request/mapper/CryptoMapper.java
===================================================================
--- wicket-core/src/main/java/org/apache/wicket/request/mapper/CryptoMapper.java	(revision 1081145)
+++ wicket-core/src/main/java/org/apache/wicket/request/mapper/CryptoMapper.java	(working copy)
@@ -90,6 +90,7 @@
 		Url encrypted = new Url();
 		String encryptedUrlString = getCrypt().encryptUrlSafe(url.toString());
 		encrypted.addQueryParameter(getCryptParameterName(), encryptedUrlString);
+		encrypted.getSegments().addAll(url.getSegments());
 		return encrypted;
 	}

but this way the whole point of encrypting is lost.
I can't see this working without some processing of the .css itself.",04/Apr/11 16:27;jesselong;This might help: https://bitbucket.org/jesselong/wicketstuff/src/tip/src/main/java/org/bitbucket/jesselong/wicketstuff/request/mapper/PatialCryptoRequestMapper.java,"30/May/11 16:08;mgrigorov;Re-worked CryptoMapper with the code from Jesse Long's Mercurial repo.
",26/Jul/11 21:51;svenmeier;Seems no longer to work with latest changes.,"26/Jul/11 21:58;svenmeier;Added test showing problem with image loaded relative to css and possible fix in CryptoMapper.
Note that I removed the additional path segment added for URLs without segments. Admittedly I don't know what this is good for, but it seems to work fine without.

Martin, could you take a look at this?","27/Jul/11 07:16;mgrigorov;Thanks, Sven!
I applied your improvements and test.",,,,,,,,,,,,,,,,,,,,,,,,,,,
CryptoMapper does not correctly decrypt URLs for the home page,WICKET-3926,12514873,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jesselong,jesselong,21/Jul/11 08:40,25/Jul/11 13:57,13/Mar/19 23:17,25/Jul/11 13:57,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"I proposed a solution for WICKET-3514, which I had been using myself. I didn't notice that it was incorporated into Wicket. This patch represents a bug fix I made to the new CryptoMapper which is not in Wicket.

Encrypted URLs for the home page (where the unencrypted URL is something like ""?4"" - no segments, just parameters) are not correctly decrypted.",N/A,,,,,,,,,,,,,,,,,,,,,21/Jul/11 08:43;jesselong;fix-WICKET-3926.patch;https://issues.apache.org/jira/secure/attachment/12487265/fix-WICKET-3926.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-25 13:57:54.068,,,no_permission,,,,,,,,,,,67006,,,Mon Jul 25 13:57:54 UTC 2011,,,,,,0|i0k9ov:,116387,,,,,,,,21/Jul/11 08:43;jesselong;Bugfix patch,25/Jul/11 13:57;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
in development mode Wicket stops picking up markup changes,WICKET-3891,12513851,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,kgignatyev,kgignatyev,12/Jul/11 21:36,25/Jul/11 11:25,13/Mar/19 23:17,21/Jul/11 20:07,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"I have wicket application running via mvn jetty:run under JRebel to facilitate code hotswap.

With 1.5RC5.1 Wicket does not pick markup changes unless I change requested version, and it still put version on URL even I have getPageSettings.setVersionPagesByDefault(false); , but that is a minor inconvenience.

More annoying that after awhile Wicket stops picking up changes in the markup of components used on my page. I mean that I can change markup for my components and it gets reflected upon page refresh (with requesting non existent version), but at some point it stops, changes to the markup of subcomponents are not picked up.

That forces me to restart application, which is major productivity killer....",OS X ,,,,,,,,,,,,,WICKET-3931,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-12 23:45:16.21,,,no_permission,,,,,,,,,,,67044,,,Tue Jul 19 12:23:29 UTC 2011,,,,,,0|i0k9sn:,116404,,,,,,,,12/Jul/11 23:45;robmcguinness;Is it similar to https://issues.apache.org/jira/browse/WICKET-3878?,12/Jul/11 23:51;ivaynberg;WICKET-3878 had to do with parent-child markup relationships. does all markup stop reloading for you after a while? does it do the same if you run without jrebel?,13/Jul/11 04:36;mgrigorov;A quickstart will help us debug it!,"13/Jul/11 16:48;kgignatyev;Did not try without JRebel as am so addicted to the tool :) however before RC5.1 all was working well therefore I think there is little reason to believe that JRebel causes this to happen.

Would it make sense to add something like 'flush markup cache' to the ajax debug panel that floats at the bottom of the screen in dev mode anyway? 

I wish I had time to recreate this behavior in a repro application - it takes awhile for that behavior to manifest. Is there anything helpful you can get from logs? I could enable them or add logging statement in relevant places in the source if that would be any help for you.","13/Jul/11 17:34;mgrigorov;Can you try with 1.5-SNAPSHOT ?
Recently we fixed something similar: WICKET-3878.","13/Jul/11 18:51;kgignatyev;Just compiled SNAPSHOT from trunk and tried: now that is easy to reproduce I think - markup refresh does not work at all.

I have this chain CorePage <- BaseDecoratedPage <- SubsectionBasePage<- SusectionRealPage1

so I am looking at SusectionRealPage1 that inherits markup from the above chain, and I am changing markup for its superclass  - SubsectionBasePage. The change does not get reflected when I refresh browser pointing at SusectionRealPage1, even if I manually specify new version number for the page - that used to help in RC5.1, see my comment above","13/Jul/11 19:07;mgrigorov;The problem is not in MarkupCache.
The problem seems to be that org.apache.wicket.page.PageStoreManager.SessionEntry doesn't get serialized and thus the transient field Page#markup is never null-ified, thus the markup cache is not asked at all.","13/Jul/11 19:22;mgrigorov;--- wicket-core/src/main/java/org/apache/wicket/Component.java	(revision 1145858)
+++ wicket-core/src/main/java/org/apache/wicket/Component.java	(working copy)
@@ -3807,6 +3807,10 @@
 	 */
 	protected void onDetach()
 	{
+		if (getApplication().usesDevelopmentConfig())
+		{
+			markup = null;
+		}
 		setFlag(FLAG_DETACHING, false);
 	}

This solves the problem but I'm not sure how it worked before.
The pages touched in one request are cached in the http session so that they are ready to use for the next request. On the next request the new touched pages override the previous ones. ","13/Jul/11 19:38;kgignatyev;applied, recompiled, does not help, still superclass markup changes are not reflected",13/Jul/11 19:40;mgrigorov;Please provide a quickstart with steps to reproduce.,"14/Jul/11 21:11;kgignatyev;Tried to create repro project, but cannot. Simple code works fine, but real project does not. However there are couple of things I have noticed: in real project I see version in the page URL even I have disabled it.

 override def init()  {
    super.init()
    getPageSettings.setVersionPagesByDefault(false)

Project is in Scala if that makes any difference for Wicket

And it does not pick up changes to the super class markup, if I update page's markupt then ALL the changes are picked up- in the superclass' markup and in the page's markup","19/Jul/11 00:15;kgignatyev;Here is the exception I saw in the log and after that W stopped picking up markup changes: 
<2011-07-18 15:54:42,502> ERROR [org.apache.wicket.util.thread.Task$1] - Unhandled exception thrown by user code in task ModificationWatcher (ModificationWatcher Task)
java.lang.NullPointerException
	at org.apache.wicket.markup.MarkupCache.removeMarkupWhereBaseMarkupIsNoLongerInTheCache(MarkupCache.java:201)
	at org.apache.wicket.markup.MarkupCache.removeMarkup(MarkupCache.java:149)
	at org.apache.wicket.markup.MarkupCache$1.onChange(MarkupCache.java:518)
	at org.apache.wicket.util.listener.ChangeListenerSet$1.notify(ChangeListenerSet.java:45)
	at org.apache.wicket.util.listener.ChangeListenerSet$1.notify(ChangeListenerSet.java:43)
	at org.apache.wicket.util.listener.ListenerCollection.notify(ListenerCollection.java:79)
	at org.apache.wicket.util.listener.ChangeListenerSet.notifyListeners(ChangeListenerSet.java:40)
	at org.apache.wicket.util.watch.ModificationWatcher$1.run(ModificationWatcher.java:158)
	at org.apache.wicket.util.thread.Task$1.run(Task.java:115)
	at java.lang.Thread.run(Thread.java:680)


At the time application had one page opened in one browser and that page has timer tasks that pings server for updates every second.
Hope that helps

","19/Jul/11 05:53;kgignatyev;The following changes fix problem for me:

Index: wicket-core/src/main/java/org/apache/wicket/Component.java
===================================================================
--- wicket-core/src/main/java/org/apache/wicket/Component.java	(revision 1148111)
+++ wicket-core/src/main/java/org/apache/wicket/Component.java	(working copy)
@@ -3807,6 +3807,10 @@
 	 */
 	protected void onDetach()
 	{
+		if (getApplication().usesDevelopmentConfig())
+	    {
+		markup = null;
+		}
 		setFlag(FLAG_DETACHING, false);
 	}
 
Index: wicket-core/src/main/java/org/apache/wicket/markup/MarkupCache.java
===================================================================
--- wicket-core/src/main/java/org/apache/wicket/markup/MarkupCache.java	(revision 1148111)
+++ wicket-core/src/main/java/org/apache/wicket/markup/MarkupCache.java	(working copy)
@@ -197,7 +197,7 @@
 				// Check if the markup associated with key has a base markup. And if yes, test
 				// if that is cached. If the base markup has been removed, than remove the derived
 				// markup as well.
-
+try{
 				MarkupResourceStream resourceStream = markup.getMarkupResourceStream()
 					.getBaseMarkupResourceStream();
 
@@ -213,7 +213,13 @@
 							markup.getMarkupResourceStream());
 					}
 				}
+			}catch(Exception e){
+				e.printStackTrace();
+				log.info(""kgi catch happened"");
+				iter.remove();
+				count++;
 			}
+			}
 		}
 	}
","19/Jul/11 12:23;mgrigorov;I think the proper fix for MarkupCache is:

--- wicket-core/src/main/java/org/apache/wicket/markup/MarkupCache.java	(revision 1148203)
+++ wicket-core/src/main/java/org/apache/wicket/markup/MarkupCache.java	(working copy)
@@ -198,19 +198,22 @@
 				// if that is cached. If the base markup has been removed, than remove the derived
 				// markup as well.
 
-				MarkupResourceStream resourceStream = markup.getMarkupResourceStream()
-					.getBaseMarkupResourceStream();
-
-				// Is the base markup available in the cache?
-				if ((resourceStream != null) && !isMarkupCached(resourceStream))
+				if (Markup.NO_MARKUP != markup)
 				{
-					iter.remove();
-					count++;
+					MarkupResourceStream resourceStream = markup.getMarkupResourceStream()
+						.getBaseMarkupResourceStream();
 
-					if (log.isDebugEnabled())
+					// Is the base markup available in the cache?
+					if ((resourceStream != null) && !isMarkupCached(resourceStream))
 					{
-						log.debug(""Removed derived markup from cache: "" +
-							markup.getMarkupResourceStream());
+						iter.remove();
+						count++;
+
+						if (log.isDebugEnabled())
+						{
+							log.debug(""Removed derived markup from cache: "" +
+								markup.getMarkupResourceStream());
+						}
 					}

I.e. if (markup != Markup.NO_MARKUP) then do the rest. This is the only way markup.getMarkupResourceStream() can return 'null'.",,,,,,,,,,,,,,,,,,,,,,,,,
o.a.w.pageStore.AsynchronousDataStore#getData() returns null if the StoreEntryRunnable is currently running,WICKET-3910,12514320,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,akiraly,akiraly,16/Jul/11 12:29,20/Jul/11 11:15,13/Mar/19 23:17,19/Jul/11 08:31,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"I am running ""mvn clean package"" on the command line and based on the jdk I get different results (reproducable).

With jdk6 the test fails and the following is logged:
ERROR - DiskDataStoreTest          - data[] should never be null
ERROR - DiskDataStoreTest          - Detected error number: 1
ERROR - DiskDataStoreTest          - data[] should never be null
ERROR - DiskDataStoreTest          - Detected error number: 2
Exception in thread ""Thread-22"" java.lang.NullPointerException
	at org.apache.wicket.page.persistent.disk.DiskDataStoreTest$Read1Runnable.run(DiskDataStoreTest.java:231)
	at java.lang.Thread.run(Thread.java:662)
Exception in thread ""Thread-42"" java.lang.NullPointerException
	at org.apache.wicket.page.persistent.disk.DiskDataStoreTest$Read2Runnable.run(DiskDataStoreTest.java:264)
	at java.lang.Thread.run(Thread.java:662)

With jdk5 everything goes fine and above message is not logged.

The datastore in the test is returning null in the Read1Runnable and Read2Runnable which is causing the NPE.","Hostspot 1.6.0_26, 1.5.0_22",,,,,,,,,,,,,,,,,,,,,18/Jul/11 20:00;akiraly;fix-WICKET-3910.patch;https://issues.apache.org/jira/secure/attachment/12486915/fix-WICKET-3910.patch,18/Jul/11 19:58;akiraly;modify-test-WICKET-3910.patch;https://issues.apache.org/jira/secure/attachment/12486913/modify-test-WICKET-3910.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-07-18 15:47:42.644,,,no_permission,,,,,,,,,,,67405,,,Wed Jul 20 11:15:58 UTC 2011,,,,,,0|i0k9qv:,116396,,,,,,,,"18/Jul/11 15:47;mgrigorov;The test fails at Apache Jenkins as well but I can't make it fail locally ...
I tried with Maven 2/3, JDK 1.5/6, en_US/bg_BG locales.","18/Jul/11 19:58;akiraly;Attaching a patch that modifies the test to fail more consistently (start reading threads before the saving ones).

Also note that junit can not handle well some aspects of multi thread tests: in this case an exception thrown in a runnable does not cause the junit test to fail. So I modified that too to store exception thrown in runnables and fail test in main test thread.","18/Jul/11 20:00;akiraly;Attaching a fix.

This is a timing issue in the AsynchronousDataStore (and I only had the luck that the two different jdk produced different timing in my env).

It seems that if the following happens the error is raised:
- SaveRunnable passes file to datastore (dataStore.storeData...)
- SaveRunnable puts file on the read1 queue (filesToRead1.add...)
- Read1Runnable reads the file from its queue
- Read1Runnable tries to get the data for the file from the dataSource but gets null, because the asynch thread for saving the data in the datastore is currently running so it is not on the asynch work queue anymore and the data is still not in the underlying datastore either.

So the fix adds a Set to Asynch data store to track all waiting, running runnables in one place.","19/Jul/11 08:28;mgrigorov;With this fix AsynchronousDataStore looks like its previous impl.
The previous impl was stable and it works even with your improvement in the test, so I'll revert to the previous impl.",19/Jul/11 08:31;mgrigorov;With r1148226 I reverted to the previous impl of AsynchronousDataStore.,20/Jul/11 11:13;bitstorm;Should we reopen WICKET-3876 ?,20/Jul/11 11:15;mgrigorov;There are no known problems at the moment. The problem in the 3876 has been fixed before introducing your impl.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal window does not show the right page ,WICKET-3892,12513915,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,alain_sillen,alain_sillen,13/Jul/11 12:31,19/Jul/11 17:26,13/Mar/19 23:17,15/Jul/11 12:06,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"1.5-RC5.1 is OK, I noticed it with version 1145888 on trunk.
When ModalWindow displays a page (panel is OK), it displays the home page instead of the right page.",version 1145888,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-13 12:37:32.876,,,no_permission,,,,,,,,,,,67527,,,Tue Jul 19 17:26:00 UTC 2011,,,,,,0|i0k9sf:,116403,,,,,,,,"13/Jul/11 12:37;mgrigorov;It is reproducible at http://localhost:8080/ajax/modal-window (i.e. wicket-examples).

@Pedro: is this related to the optimization about freezing the page in one place ?",14/Jul/11 12:42;mgrigorov;This problem should be fixed before RC6 release.,"19/Jul/11 17:26;pedrosans;Yes, this code originated at AjaxRequestTarget and RequestListenerInterface.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when requesting http://example.com/app/wicket/resource/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/,WICKET-3918,12514588,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,dashorst,dashorst,19/Jul/11 13:09,19/Jul/11 14:03,13/Mar/19 23:17,19/Jul/11 13:35,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"When requesting the following URL, the default caching strategy throws a NullPointerException and this is logged. This request is performed by some spider agent of Microsoft (trying to kill Wicket!) with user agent 'Microsoft Office Protocol Discovery':

Url=http://example.com/app/wicket/resource/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/

java.lang.NullPointerException: caching strategy must not return an empty filename
        at org.apache.wicket.request.mapper.BasicResourceReferenceMapper.mapRequest(BasicResourceReferenceMapper.java:102)
        at org.apache.wicket.request.mapper.ParentPathReferenceRewriter.mapRequest(ParentPathReferenceRewriter.java:83)
        at org.apache.wicket.request.mapper.CompoundRequestMapper.mapRequest(CompoundRequestMapper.java:129)
        at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:183)
        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:208)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:160)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:216)

A couple of points:
 - the exception should log which strategy caused the empty filename
 - the exception might want to log the requested URL for the resource
 - perhaps a NullPointerException is not the best exception to throw, but rather something that results in a 404 or a 403
 - maybe not even throwing an exception is the best way to handle this case, instead rely on the container or another mapper to take the lead?

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-19 13:13:26.053,,,no_permission,,,,,,,,,,,67544,,,Tue Jul 19 14:03:45 UTC 2011,,,,,,0|i0k9pj:,116390,,,,,,,,19/Jul/11 13:13;mgrigorov;+1 for more logging and let the next IRequestMapper to handle the request.,19/Jul/11 13:35;dashorst;Fixed by logging the mismatch at debug level and returning null from the mapRequest method to let another mapper try it,19/Jul/11 13:37;mgrigorov;There is the same problem in org.apache.wicket.request.mapper.BasicResourceReferenceMapper.mapHandler(IRequestHandler),19/Jul/11 14:03;dashorst;Also fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester doesn't changes from panel to page,WICKET-3913,12514415,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,ktotut,ktotut,18/Jul/11 10:27,19/Jul/11 12:14,13/Mar/19 23:17,19/Jul/11 12:14,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"I have a small panel with a form. The form sends a response to another page (not panel), when submitted.

I want to test the panel using WicketTester.startPanel():

    @Test
    public void testCreateStandardMessage() {

        tester.startPanel(NavigationHeaderPanel.class);

        tester.clickLink(""navigationHeader:createNewStandardMessage"");
        tester.assertRenderedPage(ComposeMailPage.class);

        tester.assertLabel(""createForm:stampLabel"", ""Standard"");
    }

I got an error on the last line: 

junit.framework.AssertionFailedError: path: 'testObject:createForm:stampLabel' does not exist for page: ComposeMailPage

As you see, WicketTester still prefixes the path with ""testObject:"", which shouldn't be for the response page. The path to the label (""createForm:stampLabel"") itself is right for the page.

The same was working in Wicket 1.4.x","Maven, Eclipse Helios",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-18 10:32:12.911,,,no_permission,,,,,,,,,,,67550,,,Mon Jul 18 10:47:36 UTC 2011,,,,,,0|i0k9qf:,116394,,,,,,,,"18/Jul/11 10:32;mgrigorov;Which version of Wicket ?

Please attach a quickstart application with the test case. It makes it easier for us to setup and debug it.","18/Jul/11 10:47;ktotut;Hi Martin, 
the version of Wicket added.

Currently no time for making a test app. I'll try to do it later today. 
The whole app would be 1 panel with a submit method, which calls
setResponsePage(ComposeMailPage.class) and the page to send response to.





",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SCRIPT tags in Ajax-Response are not evaluated in Chrome,WICKET-3912,12514382,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,barlabanov,barlabanov,17/Jul/11 20:06,19/Jul/11 08:10,13/Mar/19 23:17,19/Jul/11 08:10,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"if a JavaScript script tag is added to AjaxRequestTarget (by Behavior via JavaScriptUtils.writeJavaScript), it is not evaluated on Chrome browser. While debugging through wicket-ajax.js, it turns out, that replaceOuterHtmlSafari function is not called for Chrome, but the Gecko version gets executed instead (fall to ""} else /* GECKO */ {"" in Wicket.replaceOuterHtml). And the Gecko version does not do any special handling of SCRIPT tag, since Firefox does execute SCRIPT nodes added dynamically to the DOM. 
This behavior occurs since 1.5-RC5.1.
There is a quickstart webapp attached to this ticket. HomePage contains a Label with Behavior attached and an AjaxLink. Behavior add a JavaScript showing alert message. It is shown once the page is loaded and once the ajax link is clicked. In Chrome there is not alert message after clicking the ajax link.","Mac OS X 10.6.6, Chrome 12, Java 6, Tomcat 6",,,,,,,,,,,,,,,,,,,,,17/Jul/11 20:07;barlabanov;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12486776/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-19 08:04:36.909,,,no_permission,,,,,,,,,,,67568,,,Tue Jul 19 08:10:10 UTC 2011,,,,,,0|i0k9qn:,116395,,,,,,,,19/Jul/11 08:04;mgrigorov;Filed a RFE at http://code.google.com/p/chromium/issues/detail?id=89694.,19/Jul/11 08:10;mgrigorov;With r1148217 I changed it back so now Chromium is handled as Safari.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Encoding problem with POSTing a form with Ajax,WICKET-3908,12514261,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,balintkrivan,balintkrivan,15/Jul/11 18:16,19/Jul/11 07:15,13/Mar/19 23:17,18/Jul/11 09:00,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,1,ajax,encoding,form,,,,"The form is always posted using Ajax in UTF-8, but if you're using a different encoding in the DB or the HTML aswell, the string is ugly obviously. Wicket should convert from UTF-8 to the given encoding (detecting from getMarkupSettings().setDefaultMarkupEncoding(""...""); or getRequestCycleSettings().setResponseRequestEncoding(""...""); or an other settings parameter which could be given to wicket)

I'm attaching a quickstart project which demonstrate this issue by echoing back the string given to a textarea.",,,,,,,,,,,,,WICKET-1816,,,,,,WICKET-3914,,,15/Jul/11 20:48;akiraly;WICKET-3908.patch;https://issues.apache.org/jira/secure/attachment/12486678/WICKET-3908.patch,15/Jul/11 18:18;balintkrivan;myproject.tar.gz;https://issues.apache.org/jira/secure/attachment/12486654/myproject.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-07-15 20:48:38.279,,,no_permission,,,,,,,,,,,67573,,,Mon Jul 18 09:00:22 UTC 2011,,,,,,0|i0k9rb:,116398,,,,,,,,"15/Jul/11 18:18;balintkrivan;A simple form with textarea a submit button and a span. The content of the textarea is going to be echoed to the span using Label. The submit button is an AjaxButton so we're using Ajax to post the form. You should see strange chars (if you're not using ASCII) because of UTF-8 and ISO-8859-2 conflict.

Try to give this to the textarea: Árvíztűrő tükörfúrógép.",15/Jul/11 20:48;akiraly;A patch that solves the bug. For ajax requests wicket should always set UTF-8 as the request encoding because those are always sent with UTF-8.,16/Jul/11 08:07;balintkrivan;Confirmed. Thanks for providing the patch!,18/Jul/11 09:00;mgrigorov;Fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Encoding problem with JavaScriptRefrences,WICKET-3909,12514264,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,balintkrivan,balintkrivan,15/Jul/11 18:44,18/Jul/11 08:00,13/Mar/19 23:17,18/Jul/11 08:00,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,1,ajax,encoding,javascript,,,,"Let we have a javascript which contains some strings (which eventually should be appended to DOM), and let we have a page in different encoding from UTF-8, like ISO-8859-2. The anomaly is the following:
* If the encoding of the JS is UTF-8, then the Ajax query which injects the JS is working OK. The injected string looks like it should be, no magic chars. But if we don't use the JS from Ajax, but plain request, then the string is ugly because JS is in UTF-8, but the page is in ISO-8859-2.
* If the encoding of the JS is the same as the Page then the response of the Ajax request will be ugly, but the plain non-ajax will be OK.",,,,,,,,,,,,,,,,,,,,,,16/Jul/11 11:19;akiraly;WICKET-3909.patch;https://issues.apache.org/jira/secure/attachment/12486716/WICKET-3909.patch,15/Jul/11 18:47;balintkrivan;myproject.tar.gz;https://issues.apache.org/jira/secure/attachment/12486658/myproject.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-07-15 22:02:07.984,,,no_permission,,,,,,,,,,,67797,,,Mon Jul 18 08:00:31 UTC 2011,,,,,,0|i0k9r3:,116397,,,,,,,,"15/Jul/11 18:47;balintkrivan;The attached quickstart project shows the problem.
Steps to reproduce:
* Click the Show button. You should see Árvíztűrő tükörfúrógép.
* If you now refresh the browser you get doubled ugly chars.

If you change the sample.js encoding to ISO-8859-2, then:
* Click the Show button. You should see �rv�zt�r� t�k�rf�r�g�p.
* If you now refresh you should see Árvíztűrő tükörfúrógép.","15/Jul/11 22:02;akiraly;You have to specify the character encoding of the script file in the script tag with the charset attribute [1] if it differs from the page encoding. For example if I modify wicket to render all script tags with charset=""UTF-8"" attribute sour quickstart starts working.

Imho wicket has no way to figure out the encoding of js files but maybe o.a.w.markup.html.IHeaderResponse.renderJavaScript* methods could be enhanced with an optionl charset attribute to handle cases like this.

[1] W3School script@charset: http://www.w3schools.com/tags/att_script_charset.asp","16/Jul/11 07:53;balintkrivan;Thanks for pointing it out, could you throw some light on how to add charset to the tag?
Currently I'm having this:
response.renderJavaScriptReference(new JavaScriptResourceReference(TimeagoBehavior.class, ""jquery.timeago.js""));
I've digged myself into code and I didn't find any method or arg for this.",16/Jul/11 11:19;akiraly;Attaching patch that adds new renderJavaScriptReference() method variants so the charset can be specified. 2 tests for the new feature also included.,16/Jul/11 12:51;balintkrivan;I can confirm it solves the bug. Thanks for providing the patch!,"18/Jul/11 08:00;mgrigorov;The patch is applied.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AsynchronousDataStoreTest is failing randomly,WICKET-3900,12513986,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pedrosans,pedrosans,13/Jul/11 21:05,14/Jul/11 11:53,13/Mar/19 23:17,14/Jul/11 08:43,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"Error trace:
java.lang.NullPointerException
	at org.apache.wicket.pageStore.AsynchronousDataStore.removeData(AsynchronousDataStore.java:132)
	at org.apache.wicket.pageStore.AsynchronousDataStoreTest$RemovePageInSessionTask.r(AsynchronousDataStoreTest.java:132)
	at org.apache.wicket.pageStore.AsynchronousDataStoreTest$AbstractTask.run(AsynchronousDataStoreTest.java:86)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-14 08:43:37.934,,,no_permission,,,,,,,,,,,68056,,,Thu Jul 14 09:24:44 UTC 2011,,,,,,0|i0k9rr:,116400,,,,,,,,"14/Jul/11 08:43;mgrigorov;Fixed with r1146600.
This exception explains why the test blocked in WICKET-3893.",14/Jul/11 09:24;bitstorm;Good! Thank you Pedro!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"renderCSSReference doesn't work with mountPage(""/"")",WICKET-3897,12513940,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,fil512,fil512,13/Jul/11 15:55,14/Jul/11 08:09,13/Mar/19 23:17,14/Jul/11 08:09,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,css,mountPage,,,,,"response.renderCSSReference(new PackageResourceReference(BasePage.class, ""BasePage.css""));

will correctly render the css reference if the page is not mounted or if it is mounted to a location other than ""/"".  However if I mount the page to ""/"" using WebApplication.mountPage() then the css reference doesn't work.",Windows.  Java 6.  Jetty.,,,,,,,,,,,,,,,,,,,,,13/Jul/11 19:17;fil512;wicketbug3897.zip;https://issues.apache.org/jira/secure/attachment/12486351/wicketbug3897.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-13 16:09:54.852,,,no_permission,,,,,,,,,,,68068,,,Thu Jul 14 08:09:07 UTC 2011,,,,,,0|i0k9rz:,116401,,,,,,,,"13/Jul/11 16:09;mgrigorov;Try with latest 1.5-RC5.1. M3 is quite old.
The same use case is used a lot and it works. Please create a quickstart application with RC5.1 if it is still there and attach it to this ticket.","13/Jul/11 17:02;fil512;M3 is the latest version available on the Maven repository.

The Wicket repository listed on http://wicket.apache.org/start/download.html doesn't work.

Which maven repository can I point my pom to get RC5?
","13/Jul/11 17:24;fil512;OK, I am now using 1.5-SNAPSHOT from the repository at http://repository.apache.org/snapshots

and the problem persists.  renderCSSReference only works if I don't mount the page.  I did some more testing and discovered that the problem only occurs when mounting to ""/"".  I.e. mountPage(""test"", HomePage.class) works fine but mountPage(""/"", HomePage.class) fails.

Ken
","13/Jul/11 17:36;mgrigorov;http://repo1.maven.org/maven2/org/apache/wicket/wicket-core/

Please create a quickstart application that shows the problem.","13/Jul/11 19:17;fil512;As requested, attached is a quickstart that reproduces the bug.  Comment out the line below // FIXME to see the bug go away.","13/Jul/11 19:43;mgrigorov;This works by design.
With mountPage(""/"", SomePage.class) will add user-mapper which means it has priority over the system ones with the same compatibility score.
Both org.apache.wicket.request.mapper.BasicResourceReferenceMapper.getCompatibilityScore(Request) and org.apache.wicket.request.mapper.MountedMapper.getCompatibilityScore(Request) return 0 and the later wins because it is added by the user. Thus the request to http://localhost:8080/wicket/resource/com.kenstevens.wicketbug3897.wicket.HomePage/style-ver-1310585017000.css is handled by the user-added mapper.

Maybe we should make BasicResourceReferenceMapper.getCompatibilityScore(Request) return a higher value if the first two segments match the EncoderContext's namespace and resourceIdentifier ?!","13/Jul/11 19:53;fil512;Perhaps there's a simpler way to accomplish what I'm trying to do.  All I want is for my home page to be mapped to ""/"" and to be able to inherit my pages (including the home page) from a base class that has its own css.  What is the simplest way to do this?
","14/Jul/11 08:09;mgrigorov;Improved with r1146591.
Now BasicResourceReferenceMapper returns -1 if it doesn't match and +1 if it does.

For your use case you don't need to mount a page at ""/"". Any request to ""/"" will be handled by Application#getHomePage() anyway. The home page can extend from any other page and you don't have to do anything special about it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
INamedParameters and IIndexedParameters should not know about their implementations,WICKET-3896,12513937,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,13/Jul/11 14:58,13/Jul/11 15:00,13/Mar/19 23:17,13/Jul/11 14:58,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,68176,,,Wed Jul 13 15:00:27 UTC 2011,,,,,,0|i0k9s7:,116402,,,,,,,,13/Jul/11 15:00;mgrigorov;Mail discussion: http://markmail.org/thread/yln7abnbtl6azp4o,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add SharedResources.remove(String key) as it was present in 1.4.,WICKET-3890,12513835,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,asfernandes,asfernandes,12/Jul/11 19:02,13/Jul/11 09:12,13/Mar/19 23:17,13/Jul/11 09:12,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"This method has been removed, and now there is no way to unregister shared resources.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,68215,,,2011-07-12 19:02:29.0,,,,,,0|i0k9sv:,116405,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve synchronization in AsynchronousDataStore buffer structure,WICKET-3876,12512985,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,06/Jul/11 13:15,12/Jul/11 12:10,13/Mar/19 23:17,12/Jul/11 12:10,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"On heavy load we saw the following exception in the logs:

java.lang.NullPointerException
        org.apache.wicket.pageStore.AsynchronousDataStore.removeData(AsynchronousDataStore.java:192)
        org.apache.wicket.pageStore.DefaultPageStore.removePageData(DefaultPageStore.java:104)
        org.apache.wicket.pageStore.DefaultPageStore.unbind(DefaultPageStore.java:149)
        org.apache.wicket.page.PageStoreManager.sessionExpired(PageStoreManager.java:407)
        org.apache.wicket.Application.sessionUnbound(Application.java:474)
        org.apache.wicket.protocol.http.WebApplication.sessionUnbound(WebApplication.java:456)
        org.apache.wicket.session.HttpSessionStore$SessionBindingListener.valueUnbound(HttpSessionStore.java:415)
        org.apache.catalina.session.StandardSession.removeAttributeInternal(StandardSession.java:1788)
        org.apache.catalina.session.StandardSession.expire(StandardSession.java:866)
        org.apache.catalina.session.StandardSession.expire(StandardSession.java:740)
        org.apache.catalina.session.StandardSession.invalidate(StandardSession.java:1253)
        org.apache.catalina.session.StandardSessionFacade.invalidate(StandardSessionFacade.java:186)
        org.apache.wicket.session.HttpSessionStore.invalidate(HttpSessionStore.java:177)
        org.apache.wicket.Session.destroy(Session.java:492)
        org.apache.wicket.Session.invalidateNow(Session.java:504)
        org.apache.wicket.Session.detach(Session.java:645)
        org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:543)
        org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:477)
        org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:255)
        org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:160)
        org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:216)
....

The buffer structure ""entries"" may be emptied by one worker thread and tried to be emptied in another...

",,,,,,,,,,,,,,,,,,,,,,07/Jul/11 11:21;bitstorm;AsyncDataStore.java;https://issues.apache.org/jira/secure/attachment/12485570/AsyncDataStore.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-07 11:20:32.603,,,no_permission,,,,,,,,,,,68319,,,Tue Jul 12 12:10:43 UTC 2011,,,,,,0|i0k9u7:,116411,,,,,,,,"07/Jul/11 11:20;bitstorm;The line of code which throws the exception (AsynchronousDataStore.java:192) is relative to snapshot code o is exactly from RC5.1 version?

Anyway, I've implemented a version AsynchronousDataStore which makes extensive use of java.util.concurrent.ThreadPoolExecutor class to coordinate saving thread and queue. Using ThreadPoolExecutor you can delegate it synchronization's issues (it's a Java 5 class).
The code is much more simple and I've successfully tested id with DiskDataStoreTest. I've called it AsyncDataStore in order to easily switch between the current AsynchronousDataStore and my new class.

Can you give my class a chance :-)?","07/Jul/11 12:57;mgrigorov;The code looks OK.
I'll try it locally and if it is stable then I'll use it in our performance tests.",12/Jul/11 12:10;mgrigorov;The previous impl is replaced with Andrea's impl with r1145561. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setResponsePage in AjaxLink goes always to localhost:8080 instead to the right host and port,WICKET-3885,12513676,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,alain_sillen,alain_sillen,11/Jul/11 13:48,12/Jul/11 10:10,13/Mar/19 23:17,12/Jul/11 10:10,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"setResponsePage in an AjaxLink in Wicket 1.4 redirects with a relative path to the response page.
Wicket 1.5 takes the absolute path ""localhost:8080/path to the response page"" even when the host and port are different.
(e.g. with Apache2 a virtual host is created with server name www.mycompany.com, setResponce wil go to ""localhost:8080/path to page"" instead of  ""www.mycompany.com/path to page"")",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-11 14:37:14.999,,,no_permission,,,,,,,,,,,68330,,,Mon Jul 11 15:42:30 UTC 2011,,,,,,0|i0k9tb:,116407,,,,,,,,"11/Jul/11 14:37;mgrigorov;With 
=====================
Revision 915613 - (view) (download) (annotate) - [select for diffs] 
Modified Wed Feb 24 00:21:13 2010 UTC (16 months, 2 weeks ago) by knopp 
Original Path: wicket/trunk/wicket/src/main/java/org/apache/wicket/protocol/http/servlet/ServletWebResponse.java 
File length: 5846 byte(s) 
Diff to previous 912510 (colored)
RestartResponseOnInterceptPageException
Upgraded jetty
=====================

org.apache.wicket.protocol.http.servlet.ServletWebResponse.sendRedirect(String) have been changed to produce absolute url.
Commenting ""url = getAbsoluteURL(url);"" (line 244, in current trunk) fixes the problem. No tests fail.
By Servlet spec javax.servlet.http.HttpServletResponse.sendRedirect(String) should resolve any relative url passed to it.
For Ajax requests we return ""<ajax-response><redirect><![CDATA[THE URL HERE]]></redirect></ajax-response>"" and it works OK again.
I see no reason for this ""getAbsoluteURL(url)"" call.","11/Jul/11 15:42;ivaynberg;yes, seems weird indeed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clear Files.remove() behavior,WICKET-3875,12512983,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,06/Jul/11 13:06,11/Jul/11 10:04,13/Mar/19 23:17,11/Jul/11 10:04,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"Currently org.apache.wicket.util.file.Files.remove(File) can remove just normal files.
I just found that it is called with a folder parameter and since File.delete() cannot delete non-empty directory it starts waiting for 100ms and trying again 10 times.
This retry strategy is there for problems in Windows systems where the first removal attempt may fail and few millis later may succeed.

We should clear Files.remove() behavior because now it wastes 10*100ms trying to delete non-empty folder.
If I make the method able to delete files via recursion then it can almost block a thread if for some reason the files inside cannot be deleted (e.g. no permissions). In such case it will wait 1sec for each file.

The other solution is to check all callers and make sure that all callers always pass a file (not a folder).

The specific problem that I found is that DiskDataStore tries to delete org.apache.wicket.settings.IStoreSettings.getFileStoreFolder() but this folder contains file with name ""data"" inside and fails.",,,,,,,,,,,,,,,,,,,,,,08/Jul/11 14:20;mgrigorov;WICKET-3875.patch;https://issues.apache.org/jira/secure/attachment/12485742/WICKET-3875.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,68437,,,Mon Jul 11 10:04:12 UTC 2011,,,,,,0|i0k9uf:,116412,,,,,,,,"08/Jul/11 14:20;mgrigorov;Implement async removal of files via commons-upload FileCleaningTracker.

API Break: renamed org.apache.wicket.util.file.IFileUploadCleaner to org.apache.wicket.util.file.IFileCleaner since it is not used just for file uploads anymore. This class has been introduced in 1.5 so I don't expect many users of it.",11/Jul/11 10:04;mgrigorov;The proposed patch is committed with r1145102.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Reference to a non-existing images causes IllegalStateException ""ResourceResponse#setWriteCallback() must be set.""",WICKET-3880,12513274,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,almond,almond,08/Jul/11 15:02,11/Jul/11 08:23,13/Mar/19 23:17,11/Jul/11 08:23,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"A Page containing a PackageResourceReference to a nonexisting image fails with an Illegalstateexception. 

Debugging through the code reveals that hust before this exception a 404 HTTP Code ist set. This 404 gets hidden by the exception.

I could not script a unittest for this problem, but it is easily reproduced in my browsers (Firefox 4, IE 8). A page class and html will be attached

",,,,,,,,,,,,,,,,,,,,,,08/Jul/11 15:04;almond;BugPage.html;https://issues.apache.org/jira/secure/attachment/12485746/BugPage.html,08/Jul/11 15:04;almond;BugPage.java;https://issues.apache.org/jira/secure/attachment/12485745/BugPage.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,68588,,,2011-07-08 15:02:40.0,,,,,,0|i0k9tr:,116409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The wicket:enclosure attribute doesn't work properly,WICKET-3842,12512157,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,aditsu,aditsu,29/Jun/11 02:24,09/Jul/11 09:28,13/Mar/19 23:17,09/Jul/11 09:28,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,,,wicket,,,,,,,0,,,,,,,"When the hidden child becomes visible again, it fails to appear on the page. The same thing works correctly with the wicket:enclosure tag.

Example code:

public class TestPage extends WebPage {
	public TestPage() {
		final Label l = new Label(""msg"", ""hi"");
		add(l);
		add(new Link<Void>(""b"") {
			private static final long serialVersionUID = 1L;

			@Override
			public void onClick() {
				l.setVisible(!l.isVisible());
			}
		});
	}
}

TestPage.html:

<html xmlns:wicket>
<body>
<div wicket:enclosure=""msg""><span wicket:id=""msg""></span></div>
<input type=""button"" value=""Toggle"" wicket:id=""b"">
</body>
</html>
",,,,,,,,,,,,,,,,,,,,,,02/Jul/11 18:39;ivaynberg;patch.txt;https://issues.apache.org/jira/secure/attachment/12485067/patch.txt,03/Jul/11 14:25;jdonnerstag;wicket-1.4.x-3842.patch;https://issues.apache.org/jira/secure/attachment/12485088/wicket-1.4.x-3842.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-29 08:20:19.313,,,no_permission,,,,,,,,,,,68677,,,Mon Jul 04 07:48:17 UTC 2011,,,,,,0|i0k9yf:,116430,,,,,,,,29/Jun/11 08:20;mgrigorov;No problems in 1.5.,29/Jun/11 12:16;aditsu;Is it going to be fixed in 1.4?,"02/Jul/11 18:39;ivaynberg;attaching a patch with a failing unit test, dont have time right now to fix the actual problem...",03/Jul/11 12:12;mgrigorov;The test is added to 1.5.x to protect from regressions.,03/Jul/11 13:36;jdonnerstag;this has been fixed in 1.5 with WICKET-3833,03/Jul/11 13:44;mgrigorov;It's not fixed in 1.4.x.,03/Jul/11 14:25;jdonnerstag;The patch requires changes which are allowed in 1.4 only to fix severe bugs. On the other hand inline enclosures have only been added recently to 1.4. I suggest to apply the patch.,03/Jul/11 17:11;ivaynberg;+1 to apply,04/Jul/11 07:48;mgrigorov;+1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringResourceModel doesn't handle correctly resources containing a single quote,WICKET-3837,12511653,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,fdonckels,fdonckels,27/Jun/11 14:48,06/Jul/11 20:34,13/Mar/19 23:17,06/Jul/11 20:34,1.4.17,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,1,localization,,,,,,"When you have property values like these ones:
Let's play!
Let's play under the {0}

The value is not handled properly and the final string values of the resource model become:
Lets play!
Lets play in the {0}
Whereas the same resource, when used in a wicket:message tag or loaded through component.getResource(..) gets replaced correctly.
[the first one is really relevant for wicket:message tags]

I can have the proper behaviour if I double the quote (because of the internal call to MessageFormat), but in that case, the 2 quotes show when the wicket:message tag is used for that resource.

This is problematic for multiple reasons:
- the behaviour is not consistent
- I can't reuse the same resource in different situations
- I'd have to keep a registry of when a translated resource is used with a StringResourceModel and when it's used 'normally' and would have to make the company which translates our applications of the situation so that they could double the quotes when appropriate. This is unmanageable.
",,,,,,,,,,,,,,,,,,,,,,28/Jun/11 07:46;fdonckels;WICKET-3837.patch;https://issues.apache.org/jira/secure/attachment/12484405/WICKET-3837.patch,03/Jul/11 16:10;jdonnerstag;wicket-3837.patch;https://issues.apache.org/jira/secure/attachment/12485090/wicket-3837.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-28 09:23:19.951,,,no_permission,,,,,,,,,,,68954,,,Wed Jul 06 20:34:31 UTC 2011,,,,,,0|i0k9z3:,116433,,,,,,,,27/Jun/11 15:02;fdonckels;Added test case,"28/Jun/11 07:46;fdonckels;There was a typo in the previous test patch, this one is correct","28/Jun/11 09:23;bitstorm;Actually is not a Wicket issue but is the standard behavior of  java.text.MessageFormat class. Single quote is a special character and is removed from final string.
I've googled a little around but it seems that there's no easy solution. 

Two possible solutions are:
-use ` character instead of ' 
-write a custom MessageFormat and use it in Wicket.","28/Jun/11 09:26;fdonckels;Yes, it's the behaviour of MessageFormat, but the problem is that Wicket is not consistent. Sometimes it uses message format, sometimes not (for the easy case).","28/Jun/11 09:39;mgrigorov;AFAIK only StringResourceModel uses both Wicket's property models and MessageFormat's placeholders. Even its javadoc says that it is the ""mighty resource model"" which should be used when more complex replacements and formatting are needed.

wicket:message is just resource lookup without formatting and replacements.","28/Jun/11 09:46;fdonckels;I'd use ResourceModel if it fit the requirements. There's no middle ground between ResourceModel and StringResourceModel.
","03/Jul/11 16:10;jdonnerstag;To me the following info from Frédéric is important and should be fixed one way or the other

I'd have to keep a registry of when a translated resource is used with a StringResourceModel and when it's used 'normally' and would have to make the company which translates our applications of the situation so that they could double the quotes when appropriate. This is unmanageable. 

How to explain users that if the value contains {}, but not ${}, than quotes outside the {} must be escaped.

I've attached a patch which tries to fix the problem by properly escaping the string.",06/Jul/11 08:31;mgrigorov;Looks OK,06/Jul/11 20:34;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Feedback message should be handled the same way everywhere.,WICKET-3868,12512736,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,lhunath,lhunath,04/Jul/11 19:06,06/Jul/11 12:17,13/Mar/19 23:17,05/Jul/11 19:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC6,,,,,,,,,0,,,,,,,"Feedback messages are Serializables.  While I personally don't agree with that (since users want to see a String, not a Serializable object), it is the way it is.  However, that means we should be careful that the feedback message object is handled the same way everywhere.

For instance, FeedbackPanel.newMessageDisplayComponent(String, FeedbackMessage) does a toString() on it, while AjaxEditableLabel.onError(AjaxRequestTarget) casts it to String if it's a String and pretends it's not there if it's not.

Presumably, the latter is not the intended way of using the message, and it should be corrected to act like the former.

I believe it raises the issue of danger with using the wrong type of object very well, though.  It opens the road for bugs like this one, where your feedback message that isn't a message isn't handled properly because the framework assumes it's a message.  IMO, we should make it a String and the user should put whatever their toString would generate in a feedback message, instead of the object itself.  KISS.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,68983,,,Wed Jul 06 12:17:37 UTC 2011,,,,,,0|i0k9vj:,116417,,,,,,,,"04/Jul/11 19:10;lhunath;Alternatively, if we don't want to keep it simple, perhaps we should go down the road of renderers.  Where a renderer is a strategy to convert the feedback message to a String.  There would be a default renderer that does toString, and everybody that wants to use the feedback message should consistently go through the registered renderer for the feedback message object's type.  That would close this bug too, since then the message would be handled the same way everywhere.",06/Jul/11 12:17;lhunath;No room for further discussion about whether we're doing the right thing?  toString() was never intended for use in a localized context.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiFileUploadField internationalisation does not work,WICKET-3727,12507694,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,svenmeier,steve.swinsburg,steve.swinsburg,19/May/11 01:02,06/Jul/11 11:31,13/Mar/19 23:17,06/Jul/11 11:31,1.4.15,1.4.16,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC6,,wicket,,,,,,,0,i18n,internationalization,wicket,,,,"We are having an issue setting some properties to override the default text for the MultiFileUploadField component. As per the docs, we have set the following in our local properties file:

org.apache.wicket.mfu.caption.unlimited=Ficheros:
org.apache.wicket.mfu.caption.limited=Ficheros (m\u00E1ximo ${max}): 
org.apache.wicket.mfu.delete=Borrar

however they are not being overridden. We know our properties file is working because we can override other properties, like:

workphone.PhoneNumberValidator = N\u00FAmero de tel\u00E9fono no v\u00E1lido

and those come up correctly.


I have reproduced this in a quickstart. ",,,,,,,,,,,,,,,,,,,,,,19/May/11 06:06;mgrigorov;myproject.tgz;https://issues.apache.org/jira/secure/attachment/12479725/myproject.tgz,19/May/11 01:06;steve.swinsburg;myproject.zip;https://issues.apache.org/jira/secure/attachment/12479704/myproject.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-05-19 06:05:32.751,,,no_permission,,,,,,,,,,,69019,,,Wed Jul 06 11:31:01 UTC 2011,,,,,,0|i0ka7j:,116471,,,,,,,,19/May/11 01:06;steve.swinsburg;Quickstart to reproduce attached. The label works but not the MultiUploadFieldComponent.,"19/May/11 06:05;mgrigorov;The problem here is that MultiFileUploadField provides several MultiFileUploadField_ab_CD.properties and MultiFileUploadField.properties (default). The first IStringResourceLoader that is attempted is ComponentStringResourceLoader and if the locale is one of the provided by Wicket it will be used, but when there is no such resource bundle (like es_ES in this case) it falls back to MultiFileUploadField.properties and uses the values from this bundle. The resource loading doesn't even try the other IStringResourceLoaders and that's why MyApplication_es.properties is never tried.

The only workaround is to extend MultiFileUploadField and provide MyMFUF_es_ES.properties",19/May/11 06:06;mgrigorov;Attach the quickstart with the workaround.,"24/May/11 11:57;mgrigorov;To solve this problem we should re-work the way we traverse the configured IStringResourceLoaders.
Currently the first IStringResourceLoader is asked for XYZ_es_ES.properties bundle and if it is not found then XYZ.properties is used.
To fix it we should ask all IStringResourceLoader for _es_ES.properties, check for the key in them and finally ask them again for .properties. I.e. First try with MultiFileUploadField_es_ES.properties, then with MyApplication_es_ES.properties and finally fallback to MultiFileUploadField.properties and MyApplication.properties.
Opinions? ",31/May/11 14:30;pedrosans;1+ to change the check sequence giving priority to locale bundles,22/Jun/11 13:37;jdonnerstag;In the past we had several discussions on the list and various jira issues were raised. Everybody seemed to have a different opinion (and use case) on the right sequence. We eventually settled on what is now implemented. I'm a little bit hesitant to open the discussion again. I'd much rather simplify the implementation to make changing the order more easy.,06/Jul/11 07:55;svenmeier;Couldn't we just move the default messages of MultiFileUploadField_*.properties into Application_*.properties?,"06/Jul/11 08:11;mgrigorov;Yes, this will solve this kind of problems.
We can move the properties for all components provided by Wicket in Application.properties.
The component properties in the user app will still have precedence.","06/Jul/11 11:31;svenmeier;MultipleFileUploadField can now be easily i18ned, any change to resource loading should be discussed in a separate issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestLogger#getRequests throws concurrentmodificationexceptions when used,WICKET-3874,12512949,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,dashorst,dashorst,06/Jul/11 09:04,06/Jul/11 09:05,13/Mar/19 23:17,06/Jul/11 09:05,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"The getRequests() method of the request logger doesn't work at all. It returns a synchronized list which is wrapped in a unmodifiable list. The contents of the list is linked list, so whenever you are iterating over the unmodifiable list, the request logger is updating the underlying linked list—causing ConcurrentModificationExceptions.

At topicus we worked around this by using a rounded buffer in the request logger instead of the linked list. This implementation brings improved statistics to the request logger, such as average request times across the monitored interval and requests per minute.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69029,,,2011-07-06 09:04:35.0,,,,,,0|i0k9un:,116413,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Patch, junit test to clean up markup files",WICKET-3816,12510761,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,akiraly,akiraly,18/Jun/11 14:05,06/Jul/11 05:57,13/Mar/19 23:17,21/Jun/11 13:06,1.5-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,wicket-auth-roles,wicket-datetime,wicket-devutils,wicket-examples,wicket-extensions,,0,,,,,,,"I made a patch to fix some warnings, typos, missing close tags, inconsistencies and a few encoding error in wicket's markup files. This is similar to WICKET-3717 but this time I also made a junit test to automate the checks during build.",,,,,,,,,,,WICKET-3717,,,,,,,,,,,18/Jun/11 14:09;akiraly;WICKET-3816-fix.patch;https://issues.apache.org/jira/secure/attachment/12483043/WICKET-3816-fix.patch,06/Jul/11 05:38;akiraly;WICKET-3816-test-examples.patch;https://issues.apache.org/jira/secure/attachment/12485373/WICKET-3816-test-examples.patch,18/Jun/11 14:18;akiraly;WICKET-3816-test.patch;https://issues.apache.org/jira/secure/attachment/12483045/WICKET-3816-test.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-06-21 13:06:01.939,,,no_permission,,,,,,,,,,,69084,,,Wed Jul 06 05:57:17 UTC 2011,,,,,,0|i0ka0v:,116441,,,,,,,,"18/Jun/11 14:09;akiraly;Attaching 2 patches.

One contains a new junit test implemented similarly as how the license tests are organised in wicket.

The other patch contains the fixes for the found xml errors.","18/Jun/11 14:18;akiraly;Cosmetic change to one of the patches,",21/Jun/11 13:06;pedrosans;thanks,06/Jul/11 05:38;akiraly;I forgot to add the test for the examples module. I am attaching it now. Please apply this one too.,06/Jul/11 05:57;mgrigorov;Applied. Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MarkupContainer.removeAll() does not detach models recursively,WICKET-3872,12512857,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,pedrosans,pedrosans,05/Jul/11 13:57,05/Jul/11 20:59,13/Mar/19 23:17,05/Jul/11 20:59,1.4.17,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC6,,wicket,,,,,,,0,,,,,,,ML thread at: http://markmail.org/message/ybdfd2ts4i3j2b72,,,,,,,,,,,,,,,,,,,,,,05/Jul/11 14:35;pedrosans;WICKET-3872.patch;https://issues.apache.org/jira/secure/attachment/12485282/WICKET-3872.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-05 19:38:21.99,,,no_permission,,,,,,,,,,,69104,,,Tue Jul 05 19:40:30 UTC 2011,,,,,,0|i0k9uv:,116414,,,,,,,,05/Jul/11 14:35;pedrosans;patch for 1.5,05/Jul/11 19:38;mgrigorov;Looks OK.,05/Jul/11 19:40;mgrigorov;But it is not fixed in 1.4 as Igor thought. Or at least doesn't use the same fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceStreamRequestHandler should use content-disposition attachment when filename is set,WICKET-3871,12512852,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,dashorst,dashorst,05/Jul/11 13:15,05/Jul/11 15:14,13/Mar/19 23:17,05/Jul/11 15:14,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"The ResourceStreamRequestHandler sets the filename and documents its use as ""sets the content-disposition header"". By default the content disposition type is ""inline"". The combination of setting the filename with type inline is not very useful.

With IE on XP this will result in strange errors where documents are viewed as zip files, etc, but also with ""normal"" browsers, this will result in the downloaded file to be rendered in the browser window. Wicket 1.4 provided the filename with content disposition ""attached"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69122,,,Tue Jul 05 15:14:19 UTC 2011,,,,,,0|i0k9v3:,116415,,,,,,,,"05/Jul/11 15:14;dashorst;Fixed by checking if the contentdisposition was set, and if not, determine the disposition by checking if the filename was set (in that case use attachment, else use inline)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redirecting to the home page after binding the session leads to Wicket creating an invalid URL,WICKET-3841,12512153,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,mbrictson,mbrictson,29/Jun/11 01:08,05/Jul/11 14:56,13/Mar/19 23:17,30/Jun/11 15:40,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"This issue is demonstrated in the attached quickstart.

Consider a stateless page that contains a form. When the user loads this page, a servlet session does not yet exist.

Now, in the onSubmit() of the form, call Session.get().bind(). This forces a servlet session to be created. The response to the form submission will thus contain a session cookie, and if a redirect is performed the URL will be rewritten to include a jsessionid.

A problem occurs when a redirect to the home page is performed in this scenario. Wicket responds with a Location header that looks like this:

Location: http://localhost:8080;jsessionid=cck8jr4b1vdtd5h7a17qv9bn

If I'm not mistaken this is an invalid URL. There should be a forward-slash between 8080 and ;jsessionid.

Safari on the Mac reports the following error:

""Safari can't open the page ""http://localhost:8080;jsessionid=cck8jr4b1vdtd5h7a17qv9bn/"" because Safari can't connect to the server ""localhost"".

If you then press the reload button in Safari, the error changes to:

""Safari can't open the page ""http://localhost:8080;jsessionid=cck8jr4b1vdtd5h7a17qv9bn/"" because the page's address isn't valid.""

Other browsers, like Firefox 5.0, seem to automatically correct Wicket's mistake and do not report an error.",Mac Safari 5.0.5,,,,,,,,,,,,,,,,,,,,,29/Jun/11 01:09;mbrictson;WICKET-3841-quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12484585/WICKET-3841-quickstart.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-29 06:48:36.292,,,no_permission,,,,,,,,,,,69124,,,Tue Jul 05 14:56:42 UTC 2011,,,,,,0|i0a573:,57115,,,,,,,,"29/Jun/11 06:48;mgrigorov;jsessionid is set by the web container with HttpServletResponse#encodeURL().
Which web container do you use ?","29/Jun/11 07:16;ivaynberg;did we tack on the / to the end though? if it was us, the code responsible needs to be more careful about jsessionid in the url","29/Jun/11 09:23;mgrigorov;The quickstart works OK here on Chrome 14.x, FF5, Opera 11.50. I have no Mac/Safari.

At org.apache.wicket.protocol.http.servlet.ServletWebResponse.sendRedirect(String) Wicket produces ""http://localhost:8080"" then it passes it to HttpServletResponse.encodeURL() which returns ""http://localhost:8080;jsessionid=t1qm9o128635l3olsv7fix4l"".
This is Jetty 7.3.0 from the quickstart.",29/Jun/11 09:36;mgrigorov;Tomcat 7.0.12 does the same.,"29/Jun/11 16:23;mbrictson;To answer Martin's question: I was using the jetty:run with the quickstart, which is version 7.3.0.v20110203. The problem also occurs with jetty:run version 6.1.26.

This defect also affects Mobile Safari. Using Safari on an iPhone 4 with iOS 4.2.8: ""Safari cannot open the page because the server cannot be found."" The same error also appears on iPad with iOS 4.3.3.","30/Jun/11 15:01;pete;(Got an mac with OS X and could reproduce the problem)

the ;jsessionid is appended by 

   HttpServletResponse#encodeRedirectURL(url).

I guess the problem is that in an url like

   http://localhost;jsessionid=1drwhjjzkfl9w1e8i5fwpwx6ax

the ;jsessionid is placed right after the hostname without an explicit path. So webkit seems to take the ;jsessionid part for the path of the page

try

  http://localhost;x

and get the same error as mentioned by Matt.

However once we have an query string

  http://localhost?foo=bar;jsessionid=1drwhjjzkfl9w1e8i5fwpwx6ax
 
webkit does not complain.","30/Jun/11 15:08;mgrigorov;>  http://localhost?foo=bar;jsessionid=1drwhjjzkfl9w1e8i5fwpwx6ax 
is not valid in this case.
; can be used as replacement of & as a separator for the key/values

to be proper it should look like:   http://localhost/;jsessionid=1drwhjjzkfl9w1e8i5fwpwx6ax?foo=bar

It seems to be a problem in the web containers (Tomcat and Jetty are tested). The browsers try to fix it: http://localhost:8080/;jsessionid=1drwhjjzkfl9w1e8i5fwpwx6ax 
i.e. move ;jsessionid=.. after '/'","30/Jun/11 15:17;pete;@Martin: You are right, actually the url looks like

   http://localhost/;jsessionid=a95s72vg5h4fiyqauh8sj1al?bla=123

 did not verify it before :-(

So Webkit only fails to fix the url in the case we redirect to '.' without query string",30/Jun/11 15:27;pete;patch comittted ... please confirm it's working or broken ...,"30/Jun/11 15:36;pete;these browsers work for me on OS X 10.6.8:

- Safari 5.0.5
- Chrome 12.0.742.112
- Firefox 4.0.1
- Firefox 5.0
","30/Jun/11 15:39;pete;test seem to be ok so far, closing the ticket","05/Jul/11 14:56;mgrigorov;Tomcat 7 will be improved for 7.0.18. See http://marc.info/?t=130934589600002&r=1&w=2 for the discussion.
Jetty 7 bug report at: https://bugs.eclipse.org/bugs/show_bug.cgi?id=351199",,,,,,,,,,,,,,,,,,,,,,,,,,,
Restore the functionality for unmounting already mounted IRequestMappers from 1.4,WICKET-3870,12512843,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,05/Jul/11 12:01,05/Jul/11 12:04,13/Mar/19 23:17,05/Jul/11 12:04,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"In 1.4 it is possible to unmount all pages for a given path.
The OSGi users from PAX-Wicket use this functionality to ""clean the path"" for pages coming in new bundles and auto-mounted by PAX framework.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69137,,,Tue Jul 05 12:04:22 UTC 2011,,,,,,0|i0k9vb:,116416,,,,,,,,05/Jul/11 12:04;mgrigorov;Implemented with r1143015.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Components inside an invisible <wicket:enclosure> are still rendered,WICKET-3833,12511390,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mbrictson,mbrictson,23/Jun/11 18:32,03/Jul/11 10:42,13/Mar/19 23:17,03/Jul/11 10:42,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"Consider this example:

<wicket:enclosure child=""invisible"">
  This entire enclosure should be hidden.
  <p wicket:id=""invisible""></p>
  <p wicket:id=""shouldntrendereither""></p>
</wicket:enclosure>

If the ""invisible"" component is indeed invisible, then the entire enclosure is also invisible. Furthermore this implies that none of the components within the enclosure will be rendered. However this is not the case. Even though the ""shouldntrendereither""
component is in the same enclosure and therefore should not be rendered, Wicket attempts to render it.

This was not the case in Wicket 1.4.x.

See the attached quickstart.

This is a serious problem for two reasons:

1. For performance, it does not make sense to render components, and therefore potentially load model objects from the database, etc. if those components are ultimately not being displayed.

2. In my experience, <wicket:enclosure> is used to hide components that would otherwise fail to render, due to non-existent data or unauthorized access. Pages that have been built under the assumption that hidden components are not rendered (a very reasonable assumption) may now fail with exceptions in Wicket 1.5.",,,,,,,,,,,,,,,,,,,,,,24/Jun/11 04:41;mbrictson;WICKET-3833-2-quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12483667/WICKET-3833-2-quickstart.tgz,23/Jun/11 18:33;mbrictson;WICKET-3833-quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12483626/WICKET-3833-quickstart.tgz,24/Jun/11 08:50;jdonnerstag;wicket-3833-2.patch;https://issues.apache.org/jira/secure/attachment/12483682/wicket-3833-2.patch,23/Jun/11 21:38;jdonnerstag;wicket-3833.patch;https://issues.apache.org/jira/secure/attachment/12483645/wicket-3833.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-06-23 21:38:34.521,,,no_permission,,,,,,,,,,,69350,,,Fri Jun 24 18:19:36 UTC 2011,,,,,,0|i0k9zj:,116435,,,,,,,,23/Jun/11 21:38;jdonnerstag;Please find the patch attached. I did not change the test results yet for you to review the difference and judge the impact.,"24/Jun/11 04:40;mbrictson;Thanks for the quick turnaround.

The patch does indeed resolve the problem in the original quickstart. If a component is made invisible via setVisible(false), the entire enclosure is hidden and none of the child components are rendered. So this is correct.

However if I change the scenario slightly such that the component is made invisible due to isRenderAllowed() == false (i.e. because of an IAuthorizationStrategy), the problem still occurs. The other child components are still rendered. Furthermore, in this scenario the enclosure itself is not being hidden, which is an even bigger problem.

I'm attaching another quickstart for the isRenderAllowed() == false scenario.",24/Jun/11 08:07;mgrigorov;We don't use Enclosure in our app so I can't test nothing more than Wicket's tests and examples.,24/Jun/11 08:50;jdonnerstag;fixed the 2nd use case and added test cases,"24/Jun/11 09:12;mgrigorov;Looks OK to me.

Does InlineEnclosure have the same problems ? ","24/Jun/11 11:05;jdonnerstag;Yes, InlineEnclosure is a subclass of Enclosure",24/Jun/11 18:19;mbrictson;The latest patch works great for me. Thanks for the fix!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE with wicket:enclosure attribute and hierarchy mismatch,WICKET-3843,12512158,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aditsu,aditsu,29/Jun/11 02:32,02/Jul/11 17:34,13/Mar/19 23:17,02/Jul/11 17:34,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,,,wicket,,,,,,,0,,,,,,,"Please refer to the example code:

public class TestPage extends WebPage {
	public TestPage() {
		add(new WebMarkupContainer(""d""));
		add(new Label(""msg"", ""hi""));
	}
}

TestPage.html:

<html xmlns:wicket>
<body>
<div wicket:id=""d"">
<div wicket:enclosure=""msg""><span wicket:id=""msg""></span></div>
</div>
</body>
</html>

The label is wrongly added to the page instead of the ""d"" container, but I am expecting wicket to show a nice error message instead of this:

java.lang.NullPointerException
	at org.apache.wicket.markup.html.internal.InlineEnclosure.onAfterRenderChildren(InlineEnclosure.java:81)
	at org.apache.wicket.Component.afterRender(Component.java:1039)
	at org.apache.wicket.MarkupContainer.onAfterRenderChildren(MarkupContainer.java:1805)
	at org.apache.wicket.Component.afterRender(Component.java:1039)
	at org.apache.wicket.MarkupContainer.onAfterRenderChildren(MarkupContainer.java:1805)
	at org.apache.wicket.Component.afterRender(Component.java:1039)
	at org.apache.wicket.Page.renderPage(Page.java:936)
[...]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-29 08:17:15.974,,,no_permission,,,,,,,,,,,69389,,,Wed Jun 29 12:17:15 UTC 2011,,,,,,0|i0k9y7:,116429,,,,,,,,"29/Jun/11 08:17;mgrigorov;Works OK in 1.5.
The exception is :

org.apache.wicket.WicketRuntimeException: Could not find child with id: msg in the wicket:enclosure
     at org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:270)
     at org.apache.wicket.markup.html.internal.Enclosure.getChildComponent(Enclosure.java:249)
     at org.apache.wicket.markup.html.internal.Enclosure.onInitialize(Enclosure.java:134)
     at org.apache.wicket.Component.fireInitialize(Component.java:916)
....",29/Jun/11 12:17;aditsu;Is it going to be fixed in 1.4?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem scavenging sessions with Jetty and Wicket 1.5,WICKET-3855,12512470,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,asfernandes,asfernandes,01/Jul/11 14:25,01/Jul/11 15:14,13/Mar/19 23:17,01/Jul/11 15:14,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"When Jetty starts and see some invalid persisted session, it tries to unbound it. But Wicket then start to throw errors.

I suppose there is a need to use ThreadContext.set(this) in some place like Application.sessionUnbound.

------------------------
 Problem scavenging sessions

org.apache.wicket.WicketRuntimeException: There is no application attached to current thread Timer-0
	at org.apache.wicket.Application.get(Application.java:229) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.DefaultPageManagerProvider.getStoreSettings(DefaultPageManagerProvider.java:78) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.DefaultPageManagerProvider.newDataStore(DefaultPageManagerProvider.java:67) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.DefaultPageManagerProvider.get(DefaultPageManagerProvider.java:52) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.DefaultPageManagerProvider.get(DefaultPageManagerProvider.java:36) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.Application.internalGetPageManager(Application.java:1328) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.Application.sessionUnbound(Application.java:473) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.protocol.http.WebApplication.sessionUnbound(WebApplication.java:445) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.apache.wicket.session.HttpSessionStore$SessionBindingListener.valueUnbound(HttpSessionStore.java:415) [wicket-core-1.5-RC5.1.jar:1.5-RC5.1]
	at org.mortbay.jetty.servlet.AbstractSessionManager$Session.unbindValue(AbstractSessionManager.java:1129) [jetty-6.1.11.jar:6.1.11]
	at org.mortbay.jetty.servlet.AbstractSessionManager$Session.doInvalidate(AbstractSessionManager.java:969) [jetty-6.1.11.jar:6.1.11]
	at org.mortbay.jetty.servlet.AbstractSessionManager$Session.timeout(AbstractSessionManager.java:928) [jetty-6.1.11.jar:6.1.11]
	at org.mortbay.jetty.servlet.HashSessionManager.scavenge(HashSessionManager.java:269) [jetty-6.1.11.jar:6.1.11]
	at org.mortbay.jetty.servlet.HashSessionManager.access$000(HashSessionManager.java:44) [jetty-6.1.11.jar:6.1.11]
	at org.mortbay.jetty.servlet.HashSessionManager$2.run(HashSessionManager.java:213) [jetty-6.1.11.jar:6.1.11]
	at java.util.TimerThread.mainLoop(Timer.java:512) [na:1.6.0_26]
	at java.util.TimerThread.run(Timer.java:462) [na:1.6.0_26]
------------------------
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-01 15:14:24.478,,,no_permission,,,,,,,,,,,69467,,,Fri Jul 01 15:14:24 UTC 2011,,,,,,0|i0k9xj:,116426,,,,,,,,01/Jul/11 15:14;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove usage of System.gc() in Wicket code,WICKET-3851,12512321,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,30/Jun/11 13:02,30/Jun/11 13:27,13/Mar/19 23:17,30/Jun/11 13:27,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.util.file.Files.remove(File) calls System.gc() when a file cannot be removed for any reason.
This call popped up in our performance tests.

I suggest to try to delete the file at most N times and if it still not deleted then log a warning and schedule it for deletion when the JVM exists (java.io.File.deleteOnExit())",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69623,,,Thu Jun 30 13:27:58 UTC 2011,,,,,,0|i0k9xr:,116427,,,,,,,,30/Jun/11 13:27;mgrigorov;Files.remove() was the only place where System.gc() has been used.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestLogger doesn't log incoming event and outgoing page,WICKET-3832,12511375,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,dashorst,dashorst,23/Jun/11 15:48,30/Jun/11 12:58,13/Mar/19 23:17,30/Jun/11 12:58,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"The requestlogger currently doesn't log the incoming request and the outgoing page, which it did in 1.4.x (and earlier). This is due to

getRequestLogger().logEventTarget(handler);
getRequestLogger().logResponseTarget(handler);

not being called. This results in log entries like:

[2011-06-22 11:43:20,836] [TP-Processor6] RequestLogger | time=12,event=null,response=null,sessioninfo=...

which isn't saying much, and making every presentation I gave on the RequestLogger, and chapter 14 from WiA look foolish :)
",,,,,,,,,,,,,,,,,,,,,,27/Jun/11 13:15;mgrigorov;wicket-3832.patch;https://issues.apache.org/jira/secure/attachment/12483948/wicket-3832.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-23 15:58:41.814,,,no_permission,,,,,,,,,,,69626,,,Thu Jun 30 12:58:05 UTC 2011,,,,,,0|i0k9zr:,116436,,,,,,,,"23/Jun/11 15:48;dashorst;I'd like to solve this issue, but the handlers are a bit opaque for me as to how they relate to events and responses. Giving pointers on where to hook into Wicket would be awesome. I'm currently toying with RequestCycleListener, but not sure if that will solve my issues.",23/Jun/11 15:58;mgrigorov;See https://cwiki.apache.org/confluence/display/WICKET/RequestCycle+in+Wicket+1.5,"23/Jun/11 17:20;ivaynberg;request handlers are not that opaque. they implement interfaces that expose their underbelly. eg: IPageRequestHandler, IComponentRequestHandler.

in the name of better logging why dont we create a IIntrospectableRequestHandler { Map<String,Object> introspect(); }

the logger can then check if a request handler implements this and get the key/value pairs (or some other format) of details and log them. if the handler does not implement this interface the logger can show a warning.

what would be interesting if perhaps we allowed the return data to be a tree of key/value pairs - like json. and then collect and render it in the debugbar.","24/Jun/11 09:21;dashorst;My issue is identifying the page that was the target of the incoming event, and the page that was rendered as the final response. This way we have 1.4 parity in functionality.

I agree that we should strive to improve our request logging and exposing more detail. What we are more interested in rather than the guts is how long the event part took and how long the rendering part. So from the start of the request until the end of onClick for example, and from the end of onClick to the end of request. That would make identifying the slow pages/requests much easier. Now it is hard to discern whether the event handler was slow or the page construction/rendering.","24/Jun/11 16:49;ivaynberg;using a request cycle listener:

the target page can be identified by examining the first handler resolved - ie the first call to onRequestHandlerResolved()

the result page can be identified as the last ipagerequesthandler set - so the last call to onRequestHandlerResolved() where handler is an ipagrequesthandler
",25/Jun/11 02:05;mgrigorov;This is what the wiki page I mentioned in my earlier comment does.,27/Jun/11 13:15;mgrigorov;This should get you started.,"29/Jun/11 10:23;dashorst;There were a couple more issues with the request logger implementation. It used getPage() to log the page class and page id: causing page instantiations at wrong times. This has been remedied by requiring an extra method to provide the page id (if present). The page instantiation caused problems with the Swarm/Wasp security framework.

Further more the request logger now logs the requested URL as well.",30/Jun/11 12:58;dashorst;Solved,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxSubmitLink does not respect its getForm(),WICKET-3840,12512143,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,28/Jun/11 22:13,28/Jun/11 22:34,13/Mar/19 23:17,28/Jun/11 22:34,1.4.17,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC6,,,,,,,,,0,,,,,,,"the ajax form submit behavior used by AjaxSubmitLink does not use link's getForm(), instead it uses its own; therefore when overridden on the link the link and the behavior are out of sync with regard to which form should be submitted.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69817,,,2011-06-28 22:13:30.0,,,,,,0|i0k9yn:,116431,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In wicket 1.5 urlFor returns incorrect string for package mounted pages,WICKET-3838,12511683,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,asfernandes,asfernandes,27/Jun/11 19:52,28/Jun/11 13:39,13/Mar/19 23:17,28/Jun/11 13:39,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"Attached two quickstart projects for 1.4 and 1.5.

Then access http://localhost:8080/app/Page1 and see 1.5 returns wrong address.",,,,,,,,,,,,,,,,,,,,,,28/Jun/11 09:07;mgrigorov;it-works.tgz;https://issues.apache.org/jira/secure/attachment/12484412/it-works.tgz,28/Jun/11 10:53;asfernandes;myproject2.zip;https://issues.apache.org/jira/secure/attachment/12484420/myproject2.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-28 09:06:02.295,,,no_permission,,,,,,,,,,,69850,,,Tue Jun 28 13:39:00 UTC 2011,,,,,,0|i0k9yv:,116432,,,,,,,,"28/Jun/11 09:06;mgrigorov;The produced relative URL is different than 1.4 but it resolves to the same absolute URL.
See the modified attachement.","28/Jun/11 09:07;mgrigorov;A modified quickstart for 1.5 that shows a link instead of label.
Clicking on this link opens Page2.

Everything works as expected.","28/Jun/11 10:53;asfernandes;Martin, you were right about they being different but still right.

But my example was not good.

This new one shows what's really wrong. It's related to nested classes.",28/Jun/11 13:39;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
regression on strategy to integrate cas authentication,WICKET-3836,12511649,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,thomasfr,thomasfr,27/Jun/11 13:48,27/Jun/11 16:18,13/Mar/19 23:17,27/Jun/11 15:32,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket-auth-roles,,,,,,,0,cas,strategy,wicket,,,,"yes, It happens in org.apache.wicket.request.handler.PageProvider.getPageInstance() ,
but not for the WelcomePage, but the redirection page (RedirectPage).
the CASPageAuthorizationStrategy as we are not authentified a org.apache.wicket.RestartResponseAtInterceptPageException with in parameter an instance of RedirectPage.
On the second call of PageProvider.getPageInstance, the pageId is of 0, an all other parameters are nulls.

The run seems quite different on 1.5-RC4.2 version - There is only one call of the method PageProvider.getPageInstance() and it come after the CASPageAuthorizationStrategy.isPageAuthorized

Le 27/06/2011 11:24, Martin Grigorov a écrit :
> Put a breakpoint in
> org.apache.wicket.request.handler.PageProvider.getPageInstance() and
> see what happens.
> It seems the test tries to retrieve a page from the page store by id
> but there is no such.
>
> On Mon, Jun 27, 2011 at 12:20 PM, Thomas Franconville
> <tfranconville@tetraedge.com>  wrote:
>> Hi,
>>
>> Upgrading wicket from 1.5-RC4.2 to 1.5-RC5.1  make my Junit Test down with
>> the error 'Page expired'
>>
>> /**
>>   * Simple test using the WicketTester
>>   */
>> public class TestHomePage
>> {
>>     private WicketTester tester;
>>
>>     @Before
>>     public void setUp()
>>     {
>>         tester = new WicketTester(new MyApplication());
>>     }
>>
>>     @Test
>>     public void homepageRendersSuccessfully()
>>     {
>>         //start and render the test page
>>         tester.startPage(WelcomePage.class);
>>
>>         //assert rendered page class
>>         tester.assertRenderedPage(RedirectPage.class);
>>     }
>> }
>>
>> My application use a CASPageAuthorizationStrategy inspired of
>> http://www.lunikon.net/2009/11/24/integrating-cas-and-wicket/
>>
>>
>> Kind Regards
>>
>> Thomas
","jdk1.6
cas
unit test",,,,,,,,,,,,,,,,,,,,,27/Jun/11 13:49;thomasfr;CasWicket.zip;https://issues.apache.org/jira/secure/attachment/12483952/CasWicket.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-27 13:53:57.201,,,no_permission,,,,,,,,,,,69894,,,Mon Jun 27 15:22:29 UTC 2011,,,,,,0|i0k9zb:,116434,,,,,,,,27/Jun/11 13:49;thomasfr;quickstart maven app - version to change into the pom,27/Jun/11 13:53;mgrigorov;Failing unit test is not that critical.,"27/Jun/11 15:22;mgrigorov;The problem is that RedirectPage is not versioned, and thus never goes to the page stores.
I improved similar problem with Error pages in WICKET-3759.

Explanation: since the page is not versioned it is never stored. By using RedirectPolicy.ALWAYS_REDIRECT we instruct WebPageRenderer to use Redirect_To_RENDER strategy, but this strategy expects that the page is stored. The solution is to use AUTO_REDIRECT policy and let WebPageRenderer decide which render strategy to use. This way it will use the recommended redirect_to_buffer strategy and render the page markup from StoredResponsesMap (BufferedResponseMapper).

The fix is coming.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component loses state after replace another one,WICKET-3827,12511251,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pedrosans,pedrosans,22/Jun/11 15:54,24/Jun/11 13:51,13/Mar/19 23:17,23/Jun/11 18:37,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"After WICKET-3197 we set the replacement component 'output markup id' flag to be the same as the replaced component [1]. IMO we can't change the component state set by users in benefit of the component being replaced as it can lead to unexpected behaviors like AJAX links or buttons not working. I'm sending a quickstart to exemplify.

1- Component#setMarkupId(Component comp)",,,,,,,,,,,,,,,,,,,,,,22/Jun/11 15:56;pedrosans;WICKET-3827-markup-id.zip;https://issues.apache.org/jira/secure/attachment/12483455/WICKET-3827-markup-id.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-23 14:07:59.902,,,no_permission,,,,,,,,,,,70108,,,Thu Jun 23 18:25:50 UTC 2011,,,,,,0|i0k9zz:,116437,,,,,,,,"23/Jun/11 14:07;mgrigorov;--- wicket-core/src/main/java/org/apache/wicket/Component.java	(revision 1138875)
+++ wicket-core/src/main/java/org/apache/wicket/Component.java	(working copy)
@@ -2812,7 +2812,6 @@
 
 		generatedMarkupId = comp.generatedMarkupId;
 		setMetaData(MARKUP_ID_KEY, comp.getMetaData(MARKUP_ID_KEY));
-		setOutputMarkupId(comp.getOutputMarkupId());
 	}

solve it.
All tests pass.
I think it is safe.","23/Jun/11 17:10;ivaynberg;i do not think it is safe

suppose

class Page {
  Component foo;

  public Page() {
    add(foo=new Label(""foo"").setOutputMarkupId(true);
    add(new ajaxlink(""link"") { onclick(target) { Label bar=new Label(foo.getid()).setOutputMarkupId(true); foo.replaceWith(bar); foo=bar; target.add(foo);  }}

this simple case will fail to work

first foo is created with an autogenerated unique id ID0, it is rendered <div id=""ID0"">
next we create bar which gets a newly generated id ID6. we replace foo with bar and add bar to the ajax request target. this will fail because wicket will be looking for a node with ID6 and will not find it. this is why the code is there - to keep this from happening.","23/Jun/11 18:25;mgrigorov;Why ID6 ? The markupId is transferred with the previous two lines. Just the 'outputMarkup' flag is not transferred, but trying to add it to ART will tell you immediately that you need to set it explicitly.
In 1.4 it behaves the same way.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTree.updateTree() method not works,WICKET-3818,12510979,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mishelle,mishelle,20/Jun/11 16:43,23/Jun/11 13:36,13/Mar/19 23:17,23/Jun/11 13:36,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"If for a tree update we call AbstractTree.updateTree() method without parameters, the data in tree doesn't update. If we call AbstractTree.updateTree(AjaxRequestTarget target) method - the data updates correctly. The reason is in getting target in AbstractTree.updateTree() method. It's supposed that abstractRequestTarget is  getRequestCycle().getActiveRequestHandler(), but actually abstractRequestTarget is getRequestCycle().getRequestHandlerScheduledAfterCurrent(). 
May be instead of  getRequestCycle().getActiveRequestHandler() we must call AbsractRequestTarget.get() in AbstractTree.updateTree() method to get the correct target? 

In quickstart project you'll see 3 trees, the first - updates with passed as parameter in onClick() target, the second - updates with target AbsractRequestTarget.get(), the third doesn't updates, because  AbstractTree.updateTree() called.    ","Win 7, FF",,,,,,,,,,,,,,,,,,,,,20/Jun/11 16:45;mishelle;project.rar;https://issues.apache.org/jira/secure/attachment/12483171/project.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-23 13:36:32.764,,,no_permission,,,,,,,,,,,70173,,,Thu Jun 23 13:36:32 UTC 2011,,,,,,0|i0ka0n:,116440,,,,,,,,20/Jun/11 16:45;mishelle;quickstart project added,23/Jun/11 13:36;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ModalWindow does not work in Opera 11.10 and MSIE 6,WICKET-3615,12504241,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,minarikv,minarikv,14/Apr/11 08:38,20/Jun/11 09:18,13/Mar/19 23:17,13/May/11 02:42,1.4.10,1.4.15,1.4.17,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket-extensions,,,,,,,2,,,,,,,"ModalWindow does not work properly in Opera 11.10 (and 11.01). Instead of window content, browser's error page is displayed (""Internal communication error: Check that the address is spelled correctly, or try searching for the site."" There is ""http:///"" in the search bar of the error page.) In the error console there is the following message:

---------------
[4/14/2011 10:25:44] JavaScript - http://wicketstuff.org/wicket14/ajax/modal-window.0;jsessionid=C7287377789A7518B81C198CA3D1CE0D
Event thread: load
Uncaught exception: ReferenceError: Security error: attempted to write protected variable
Error thrown at line 414, column 0 in <anonymous function: onload>() in http://wicketstuff.org/wicket14/ajax/resources/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/modal.js:
    this.content.contentWindow.name = this.settings.iframeName;
called via Function.prototype.apply() from unknown location in <anonymous function: Function.prototype.bind>() in http://wicketstuff.org/wicket14/ajax/resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js:
    /* no source available */
---------------

Example in which the error occurs (after clicking the link to open the modal window):
http://wicketstuff.org/wicket14/ajax/modal-window

I tried also other versions of Wicket (1.5-RC3, 1.4.15, and 1.4.10) - with the same result.

Similar situation is with MSIE 6 under some circumstances. If it uses a local proxy server, you get to MSIE's error page ""The page cannot be displayed"" with ""http:///"" in the address bar. If proxy server is disabled (by unchecking ""Automatically detect settings"" in Options/LAN settings; or when connecting the notebook in another network with no proxy server), the content of the modal window displays as expected.
",,,,,,,,,,,,,,,,,,,,,,16/Apr/11 18:26;akiraly;fix-WICKET-3615.patch;https://issues.apache.org/jira/secure/attachment/12476533/fix-WICKET-3615.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-16 18:26:30.636,,,no_permission,,,,,,,,,,,70858,,,Mon Jun 20 09:18:32 UTC 2011,,,,,,0|i0kahz:,116518,,,,,,,,"16/Apr/11 18:26;akiraly;Attaching patch to fix issue.

Tested with Chrome 10, FF 4, IE6, 8, 9, Opera 11.",17/Apr/11 15:38;jdonnerstag;applied to 1.5.,"13/May/11 02:42;ivaynberg;closing, looks like Juergen applied the fix already.","01/Jun/11 14:01;jcompagner;why is this also not applied to 1.4?
to big of a risk? Or can i apply it to 1.4 also?","03/Jun/11 09:48;mgrigorov;Please do if you need it in 1.4.x.
We are trying to release 1.5.0 and soon after it freeze 1.4.x and do only security fixes in it because as you know it is time-consuming to support several branches.","07/Jun/11 12:46;gabi.boros;the patch seems to fix the error page, but there is still a problem in opera 11 :
the mouse cursor is wrong inside the dialog, it is set to the resize cursor.
you can see this here : http://wicketstuff.org/wicket/ajax/modal-window and show a modal
dialog with panel","07/Jun/11 13:06;mgrigorov;It is a bug in Opera.
Open Dragonfly and see that 
""div.wicket-modal div.w_content_1"" sets ""cursor: auto"" but Opera ignores it.

Not sure this can be workarounded somehow. I tried with IE hack - !important - but it doesn't help.",20/Jun/11 09:18;jcompagner;also applied it to 1.4.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Patch to clean up markup files,WICKET-3717,12507282,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,akiraly,akiraly,15/May/11 15:58,18/Jun/11 14:05,13/Mar/19 23:17,16/May/11 18:45,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,wicket-auth-roles,wicket-datetime,wicket-devutils,wicket-examples,wicket-extensions,,0,,,,,,,"I made a patch to fix some warnings, typos, missing close tags, inconsistencies and a few encoding error in wicket's markup files.",,,,,,,,,,,,,,,,,,,,,,15/May/11 16:00;akiraly;WICKET-3717.patch;https://issues.apache.org/jira/secure/attachment/12479267/WICKET-3717.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-16 18:45:09.504,,,no_permission,,,,,,,,,,,70993,,,Mon May 16 18:45:09 UTC 2011,,,,,,0|i0ka8f:,116475,,,,,,,,"15/May/11 16:00;akiraly;Attaching patch.

As the markup files change, the expected test results need to be regenerated for tests to pass.","16/May/11 18:45;mgrigorov;Improved with r1103832.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"xmlns:wicket=""http://wicket.apache.org"" rendered for each panel",WICKET-3812,12510690,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,dashorst,dashorst,17/Jun/11 16:35,18/Jun/11 08:56,13/Mar/19 23:17,18/Jun/11 08:56,1.5-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5.1,,,wicket,,,,,,,0,,,,,,,"The markup for rendered pages including a Panel now suddenly renders xmlns:wicket=""http://wicket.apache.org"", making the markup invalid. See below for a piece of our markup, and further below for a test that exhibits this behavior.

<div id=""modalWindowContainer40""><!-- MARKUP FOR nl.topicus.cobra.web.components.modal.ModalWindowContainer BEGIN -->
<div id=""id141"" xmlns:wicket=""http://wicket.apache.org"" style=""display:none""><!-- MARKUP FOR nl.topicus.cobra.web.components.modal.CobraModalWindow$InternalModalWindow BEGIN -->
 
<!-- MARKUP FOR nl.topicus.cobra.web.components.modal.CobraModalWindow$InternalModalWindow END --></div><div id=""id242"" xmlns:wicket=""http://wicket.apache.org"" style=""display:none""><!-- MARKUP FOR nl.topicus.cobra.web.components.modal.CobraModalWindow$InternalModalWindow BEGIN -->
 
<!-- MARKUP FOR nl.topicus.cobra.web.components.modal.CobraModalWindow$InternalModalWindow END --></div>
<!-- MARKUP FOR nl.topicus.cobra.web.components.modal.ModalWindowContainer END --></div>
</div>


	/**
	 * Tests whether rendering a component, it doesn't show the xmlns:wicket namespace.
	 */
	@Test
	public void renderingEmptyPanelDoesntShowWicketXmlns()
	{
		WicketTester tester = new WicketTester();
		tester.startPanel(EmptyPanel.class);
		assertFalse(""Should not contain xmlns:wicket"",
			tester.getLastResponseAsString().contains(""xmlns:wicket""));
	}
",,,,,,,,,,,,,,,WICKET-2874,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-17 18:16:56.248,,,no_permission,,,,,,,,,,,71005,,,Sat Jun 18 08:56:24 UTC 2011,,,,,,0|i0ka13:,116442,,,,,,,,17/Jun/11 18:16;jdonnerstag;It's possibly linked with WICKET-2874 (Copy attributes from wicket:panel to source tag) which was introduced with 1.5-RC1. Martjin though mentioned it used to work with 1.5RC4.2,18/Jun/11 08:56;jdonnerstag;Disabled the copy-attributes feature and made it optional. See TagUtils.copyAttributes() and AssociatedMarkupSourcingStrategy.onComponentTag(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Localizer.get() should be static,WICKET-3814,12510724,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,bruno.borges,bruno.borges,17/Jun/11 21:31,18/Jun/11 08:13,13/Mar/19 23:17,18/Jun/11 08:13,1.5-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,org.apache.wicket.Localizer offers a get() method but it is not static.,,,,,,,,,,,,,,,,,,,,,,17/Jun/11 21:32;bruno.borges;Localizer.patch;https://issues.apache.org/jira/secure/attachment/12482992/Localizer.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-18 08:13:45.728,,,no_permission,,,,,,,,,,,71007,,,Sat Jun 18 08:13:45 UTC 2011,,,,,,0|i0a59b:,57125,,,,,,,,"18/Jun/11 08:13;pete;Thanks for reporting, Bruno",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component's markup cannot be found in Ajax requests if the parent is transparent,WICKET-3719,12507336,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mgrigorov,mgrigorov,16/May/11 08:18,15/Jun/11 14:10,13/Mar/19 23:17,05/Jun/11 18:20,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"When TransparentWebMarkupContainer is used an inner markup container cannot find its markup on Ajax updates.
The problem seems to be caused by the fact that ComponentResolvers#resolve() is not executed and since there is transparent container involved Markup.find(String) cannot find the markup for non-transparent markup containers.
I'll commit a disabled test case that shows the problem. ",,,,,,,,,,,,,,,,,,,,,,16/May/11 11:15;mgrigorov;WICKET-3719.patch;https://issues.apache.org/jira/secure/attachment/12479310/WICKET-3719.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-03 20:38:55.722,,,no_permission,,,,,,,,,,,71190,,,Sun Jun 05 13:43:06 UTC 2011,,,,,,0|i0ka87:,116474,,,,,,,,"16/May/11 08:27;mgrigorov;The test case is org.apache.wicket.markup.html.TransparentWebMarkupContainerTest.bug_testAjaxUpdate(), remove 'bug_' from the method name to be able to start it.",16/May/11 11:15;mgrigorov;A patch that solves the problem,"16/May/11 11:16;mgrigorov;Hi Juergen,

Can you please review the fix in the attached patch?
Thanks!","18/May/11 07:44;mgrigorov;Set the ""Fix version"" to 1.5 RC5 so we wont forget it.","03/Jun/11 20:38;jdonnerstag;I enabled the test case but don't get any error. All tests including testAjaxUpdate() are successful. Could you please verify and either update the test case or close it. Thanks.
","05/Jun/11 13:43;mgrigorov;With r1132403 I modified the test case so now it reproduces the problem again.
Now it uses custom PageManager that clones the stored page so that it loses its ""private transient Markup markup"" and later clicking the Ajax link will fail to find the ajax-updated component with:


org.apache.wicket.markup.MarkupNotFoundException: Markup not found for Component: [TransparentWithAjaxUpdatePanel [Component id = panel]]
	at org.apache.wicket.Component.internalRender(Component.java:2382)
	at org.apache.wicket.Component.render(Component.java:2342)
	at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:941)
	at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:755)
	at org.apache.wicket.ajax.AjaxRequestTarget.constructResponseBody(AjaxRequestTarget.java:645)
	at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:601)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:717)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
	at org.apache.wicket.util.tester.BaseWicketTester.processRequest(BaseWicketTester.java:548)
	at org.apache.wicket.util.tester.BaseWicketTester.processRequest(BaseWicketTester.java:490)
	at org.apache.wicket.util.tester.BaseWicketTester.processRequest(BaseWicketTester.java:462)
	at org.apache.wicket.util.tester.BaseWicketTester.executeBehavior(BaseWicketTester.java:935)
	at org.apache.wicket.util.tester.BaseWicketTester.clickLink(BaseWicketTester.java:1574)
	at org.apache.wicket.markup.html.TransparentWebMarkupContainerTest.testAjaxUpdate(TransparentWebMarkupContainerTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:243)
	at junit.framework.TestSuite.run(TestSuite.java:238)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tree doesn't update correctly,WICKET-3449,12498905,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,lotos,lotos,17/Feb/11 15:47,14/Jun/11 20:37,13/Mar/19 23:17,14/Jun/11 20:37,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket,,,,,,,0,,,,,,,"When we add a first child to the root node junction link (near the root) doesn't appear in the tree. 
This bug easily can be reproduced with the next piece of code.


TestPage.html 

<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:wicket=""http://wicket.apache.org/dtds.data/wicket-xhtml1.4-strict.dtd"">
<body>
<table>
    <tr>        <td>            <div wicket:id=""tree""></div>        </td>    </tr>
    <tr>        <td>            <input type=""submit"" wicket:id=""addChild"" class=""btn btnStd"" />        </td>    </tr>
</table>
</body>
</html>

TestPage.java

public class TestPage extends WebPage {
    public TestPage() {
        final DefaultMutableTreeNode root = new DefaultMutableTreeNode(""root"");

        final DefaultTreeModel treeModel = new DefaultTreeModel(root);
        final BaseTree tree = new LinkTree(""tree"", treeModel);

        add(tree);
        tree.getTreeState().expandNode(root);

        AjaxLink addButton = new AjaxLink(""addChild"") {
            public void onClick(AjaxRequestTarget ajaxRequestTarget) {
                DefaultMutableTreeNode child = new DefaultMutableTreeNode(""child"");
                root.add(child); // it doesn't matter how we add this child
                treeModel.insertNodeInto(child, root, 0);
                tree.updateTree(ajaxRequestTarget);
            }
        };
        add(addButton);
    }
}","tomcat 6.0.26, win 7",,,,,,,,,,WICKET-2886,,,,WICKET-2886,,,,,,,18/Feb/11 12:11;lotos;3.jpg;https://issues.apache.org/jira/secure/attachment/12471392/3.jpg,14/Jun/11 19:38;pedrosans;WICKET-3449.patch;https://issues.apache.org/jira/secure/attachment/12482585/WICKET-3449.patch,18/Feb/11 08:17;lotos;quickStart.zip;https://issues.apache.org/jira/secure/attachment/12471376/quickStart.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-02-17 16:22:03.57,,,no_permission,,,,,,,,,,,71245,,,Tue Jun 14 19:38:12 UTC 2011,,,,,,0|i0kaxr:,116589,,,,,,,,17/Feb/11 16:02;lotos;fix for WICKET-2886 doesn't cover WICKET-3449,"17/Feb/11 16:22;mgrigorov;Can you please test with latest 1.4.x ?
There were some fixes in Tree component lately.
Please create a quickstart application that reproduces the problem.",17/Feb/11 16:45;lotos;It's also actual for version 1.4.15,18/Feb/11 08:17;lotos;QuickStart project,"18/Feb/11 10:14;mgrigorov;Adding nodes works fine with 1.4-SNAPSHOT and 1.5-SNAPSHOT.
Cannot reproduce the problem.",18/Feb/11 12:11;lotos;There is no '-' sign near the root node,"18/Feb/11 12:42;mgrigorov;I'm not expert in Swing but if you add ""treeModel.nodeChanged(root);"" right after treeModel.insertNodeInto(child, root, 0); call the collapse link is updated.","18/Feb/11 12:46;mgrigorov;treeModel.nodeStructureChanged() also solves your problem:

             public void onClick(AjaxRequestTarget ajaxRequestTarget) { 
                 DefaultMutableTreeNode child = new DefaultMutableTreeNode(""child""); 
                 root.add(child); // it doesn't matter how we add this child 
                 treeModel.nodeStructureChanged(root);
                 tree.updateTree(ajaxRequestTarget); 
             } ","18/Feb/11 12:59;lotos;You a definitely not an expert in Swing. It's not fair to call nodeStructureChanged in this case.
This is a java doc for the method:
     /**
      * Invoke this method if you've totally changed the children of
      * node and its childrens children...  This will post a
      * treeStructureChanged event.
      */
It must work without nodeStructureChanged(...).","05/Apr/11 08:18;lotos;Martin, this issue is not fixed. Please, reopen.","05/Apr/11 08:22;mgrigorov;Please add more information.
Calling the method I suggested fixes the problem.","05/Apr/11 11:42;lotos;Martin, if you go back to WICKET-2886, you'll see that the problem with junction link was not only with ROOT. There was the fix for that issue. Unfortunately, that fix doesn't cover current issue. You propose to use nodeChanged() method, but it looks like a hot fix. Sure, this way works, but it's rather strange to use nodeChanged() only for the case when you add first child to the root. I don't doubt this issue must be fixed internally in the wicket framework.

I suppose the problem is in 

AbstractTree.java

public final void treeNodesInserted(TreeModelEvent e)
{
              ...
	// parentNode now has children for the first time, so we may need to invalidate
	// grandparent so that parentNode's junctionLink gets rebuilt with a plus/minus link
	Object grandparentNode = getParentNode(parentNode);
	// not invalidating if the grandparent is a not presented root
	if (!(getParentNode(grandparentNode) == null && isRootLess()))
	{
		invalidateNodeWithChildren(grandparentNode);
	}
	...
}

In our case 'parentNode' is ROOT and 'grandparentNode' is null. So invalidateNodeWithChildren() does nothing.",14/Jun/11 19:38;pedrosans;Invalidating parent node even if it is a root - without a grandparent,,,,,,,,,,,,,,,,,,,,,,,,,,
ModalWindow shows 'Page Expired',WICKET-3793,12510329,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,oele,oele,14/Jun/11 16:18,14/Jun/11 17:05,13/Mar/19 23:17,14/Jun/11 17:05,1.5-M1,1.5-M2.1,1.5-M3,1.5-RC1,1.5-RC2,1.5-RC3,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket-extensions,,,,,,,0,,,,,,,A simple ModalWindow containing a WebPage opened by an AjaxLink shows 'Page Expired' instead of the desired page contents. Downgrading to 1.4.17 makes the problem disappear. See the attached quickstart. ,Ubuntu 11.04; Netbeans 7; Glassfish 3.1; sun-java6-jdk ,,,,,,,,,,,,,,,,,,,,,14/Jun/11 16:50;pedrosans;WICKET-3793.patch;https://issues.apache.org/jira/secure/attachment/12482566/WICKET-3793.patch,14/Jun/11 16:19;oele;modalwindow_expire.zip;https://issues.apache.org/jira/secure/attachment/12482563/modalwindow_expire.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-06-14 16:50:45.592,,,no_permission,,,,,,,,,,,71270,,,Tue Jun 14 17:05:14 UTC 2011,,,,,,0|i0ka1j:,116444,,,,,,,,14/Jun/11 16:19;oele;the quickstart. ,14/Jun/11 16:50;pedrosans;Testing if page is stateless because an statefull URL can't hit it in page store since no stateless page are held there.,"14/Jun/11 17:05;pedrosans;Committing without the test for anonymous class, if it is needed the request mapper will be a better place.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket:border: inconsistency between add() and remove(),WICKET-3702,12506898,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alankila,alankila,11/May/11 19:46,14/Jun/11 14:59,13/Mar/19 23:17,14/Jun/11 14:59,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"Assuming c1 is a Border and c2 is some component, the following sequence crashes with duplicate addition:

c1.add(c2);
c1.remove(c2);
c1.add(c2);

The reason for this is that remove() doesn't remove the object from the bodycontainer. The sequence can be made to work by changing the middle line to:

c1.getBodyContainer().remove(c2);

That remove() doesn't look the component from the same container as add() adds it to, seems to violate the principle of least astonishment. Unfortunately the Component structure manipulation API has more methods, such as swap(), size(), get(), etc. which are final, and can't be overridden by Border as they are. It could be best to force all users to use c1.getBodyContainer().add() instead of c1.add(), because consistent operation is probably easier to deal with in the long run than behavior that conforms to initial assumptions but has flaws elsewhere.

This ticket suggests removing the overload of add() and documenting the difference in migration guide.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,14/Jun/11 12:29;mgrigorov;wicket-3702.patch;https://issues.apache.org/jira/secure/attachment/12482550/wicket-3702.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-23 18:55:01.897,,,no_permission,,,,,,,,,,,71284,,,Tue Jun 14 14:59:55 UTC 2011,,,,,,0|i0ka9b:,116479,,,,,,,,"23/May/11 18:55;mgrigorov;add() is made this way because it is more convenient for the user to add child components to the border body. Most of the time the Border itself adds the components in the ""border area"". The other methods are not made this way because they are not so often used. 
The javadoc will be updated.","23/May/11 19:26;ivaynberg;actually there was a request to make add() behave normally for borders
clients can use border.addtobody() instead of add()

this is to make things more consistent. if i add() something i should be able to remove() it and see it in iterator() and size()","24/May/11 05:45;mgrigorov;Define ""behave normally for borders"".
Also take into account the last few comments at https://issues.apache.org/jira/browse/WICKET-2494",27/May/11 05:10;ivaynberg;the problem is consistency. we either forward all related methods or none.,"27/May/11 05:17;ivaynberg;thinking more about this...

it would be trivial to forward all the necessary methods. a tweak to markupcontainer with an extra layer of indirection is all it would take. however, if we do this it will make using borders to the user seem consistent, but it will make our own framework code inconsistent.

it is easy enough to forward add(), remove(), size(), iterator() - most others are written in terms of these. however, do we forward visitChildren()? we would have to to make the experience consistent for user, but by doing those we will make our internal framework code inconsistent. for example - our internal framework code now will not see components added to the actual border - just like the client wont.

esentially we are creating a portal for the client: OUTSIDE->?->?->BODY and letting user manipulate the body from the outside, skipping the layer in-between. but by making it consistent we also make the layer in-between inaccessible to our own code.

so the question is: what has the bigger impact. how many usecases exist where the user needs to treat the border without knowing it is a border vs how many usecases exist where we traverse components without needing to know what kind of component it is....i think the latter are much more prevalent.

long story short, i was wrong in WICKET-2494","27/May/11 07:28;mgrigorov;A test is failing: org.apache.wicket.extensions.markup.html.repeater.data.table.DataTableTest.test_1()

The problem is that
org.apache.wicket.extensions.markup.html.repeater.data.table.HeadersToolbar.newSortableHeader(String, String, ISortStateLocator)
can return a border or non-border and the client code cannot know that it has to use .addToBody() instead of .add().","07/Jun/11 11:27;mgrigorov;We have to decide what to do here.
Removing 'final' from add(), get(), remove(), ... will be the best from user point of view, but it is not the best for the framework.

For those who don't know what is the problem now: if the method signature says ""returns Component"" but the implementation actually returns a Border then following calls to component.add() will do the wrong thing, it will add to the border itself, not to its body.

Maybe AWT is not the best example but there Container class doesn't forbid overriding add(), remove(), ...","14/Jun/11 12:29;mgrigorov;A patch that removes final from add(), remove(), replace, addOrReplace() and size(). This way Border can override them and delegate them to the respective getBodyContainer().xyz().

All unit tests pass. My application also uses Borders and all seems OK.","14/Jun/11 14:55;pedrosans;+1 for Martin's patch. Some times it is good to look at AWT API because they probably went through component API design questions like us. JFrame for instance required to get the content panel to add a new component in begining [1]. But its JFrame#add/remove/etc/Impl got changed to delegate to content panel.
frame.getContentPanel().add(newComp) --> frame.add(newCompo)
I see some similarities here.

1 - http://weblogs.java.net/blog/hansmuller/archive/2005/11/jframeadd_conte.html",14/Jun/11 14:59;ivaynberg;giving up on fixing this properly for now. add and remove are now in sync but iterator/size/get are not.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax behaviors are failing in stateless pages,WICKET-3764,12509146,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,heri,heri,03/Jun/11 00:37,10/Jun/11 14:09,13/Mar/19 23:17,10/Jun/11 14:09,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"Stateless ajax behaviors are not working in stateless pages in 1.5-RC4.2. I verified it with the stateless demo project of Martin Grigorov (https://github.com/martin-g/wicket-stateless), when changing the dropdown on the start page an exception is thrown (clicking the increment link causes a similar exception): 

org.apache.wicket.behavior.InvalidBehaviorIdException: Cannot find behavior with id: 0 on component: [DropDownChoice [Component id = c]]

At first glance the reason may be located in org.apache.wicket.Behaviors.getBehaviorById() which does not create the ID list if missing (getBehaviorsIdList(false) in line 286 instead of getBehaviorsIdList(true)), because this error does not occur when getBehaviorId() was manually called in the page constructor to force creation of the list.",,,,,,,,,,,,,,,,,,,,,,03/Jun/11 13:29;mgrigorov;WICKET-3764.patch;https://issues.apache.org/jira/secure/attachment/12481339/WICKET-3764.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-03 13:29:14.225,,,no_permission,,,,,,,,,,,71441,,,Fri Jun 10 14:09:18 UTC 2011,,,,,,0|i0ka3z:,116455,,,,,,,,"03/Jun/11 13:29;mgrigorov;Here is the proposed patch.
The only needed call is ""getBehaviorId(behavior)"" in #internalAdd(Behavior). Everything else is optimization.

The drawback is that now we add BehaviorIdList to the data of each component with a behavior, non-lazy.
If this is OK then we just need to regenerate the expected html for few tests.","10/Jun/11 04:43;ivaynberg;the patch defeats the point of optimization and the point of really being stateless. i think the hit by removing this optimization will be too great.

instead, ajax behaviors should call component.getbehaviorid(this) in bind to force the creation of the id when they are added to the component. but that fix is outside of wicket.

i suppose what we can do is provide behavior#isstateless() which can do the above if true, but im not sure of the value...martin if you want to implement isstateless() go ahead but you will still need to tweak your stateless behaviors to override that and return true.",10/Jun/11 06:49;ivaynberg;i implemented behavior#isstateless fwiw,10/Jun/11 07:28;mgrigorov;I'll change later my github project and test it. If everything is OK I'll move it to wicketstuff/core and change the resolution of this ticket.,"10/Jun/11 13:55;mgrigorov;Looking at it I see we already have getStatelessHint(Component) there.
This can be used too.
Let's see...","10/Jun/11 14:09;mgrigorov;Using getStatelessHint() works.
All Ajax behaviors provided by Wicket are stateful already.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session MetaData changes aren't synchronized and don't call dirty(),WICKET-3779,12509625,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dretzlaff,dretzlaff,08/Jun/11 18:45,10/Jun/11 09:24,13/Mar/19 23:17,10/Jun/11 04:46,1.4.17,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket,,,,,,,0,,,,,,,Session#getMetaData and Session#setMetaData should be synchronized. Session#setMetaData should call dirty().,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-10 06:46:10.479,,,no_permission,,,,,,,,,,,71457,,,Fri Jun 10 09:24:32 UTC 2011,,,,,,0|i0ka27:,116447,,,,,,,,"10/Jun/11 06:46;mgrigorov;What about 1.4.x ?
Should I port it ?",10/Jun/11 09:24;mgrigorov;The fix is ported to 1.4.x with r1134250.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Strings#escapeMarkup() creates invalid XML for control characters,WICKET-3766,12509165,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svenmeier,svenmeier,03/Jun/11 09:36,07/Jun/11 07:44,13/Mar/19 23:17,07/Jun/11 07:44,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,,,wicket,,,,,,,0,escape,unicode,xml,,,,"Most C0 control characters are invalid in XML:

  http://en.wikipedia.org/wiki/Valid_characters_in_XML

Besides 0x09, 0x0a and 0x0d all other control characters below 0x20 have to be escaped, see attached patch.

Currently model objects containing these characters and being rendered (e.g. via labels) will lead to Ajax response failures.",,,,,,,,,,,,,,,,,,,,,,03/Jun/11 09:37;svenmeier;escapeControlCharacters.diff;https://issues.apache.org/jira/secure/attachment/12481317/escapeControlCharacters.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-03 09:44:36.364,,,no_permission,,,,,,,,,,,71839,,,Fri Jun 03 10:34:46 UTC 2011,,,,,,0|i0ka3j:,116453,,,,,,,,03/Jun/11 09:37;svenmeier;escaping control characters,03/Jun/11 09:44;mgrigorov;This is fixed in trunk several months ago. It wasn't ported to 1.4.x to not compromise its stability. I guess it proved to be stable and can be ported now.,"03/Jun/11 10:34;svenmeier;Sorry, I wasn't aware of this change in 1.5. Please backport it to 1.4.x.

BTW the encoding is a little too strict: 0x09, 0x0a and 0x0d need not to be encoded. IMHO it would be nicer to humans to read the markup if they stayed like they are, i.e. not encoded.","03/Jun/11 10:34;svenmeier;Sorry, I wasn't aware of this change in 1.5. Please backport it to 1.4.x.

BTW the encoding is a little too strict: 0x09, 0x0a and 0x0d need not to be encoded. IMHO it would be nicer to humans to read the markup if they stayed like they are, i.e. not encoded.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PropertyRenderableColumn/PropertyTreeColumn add support for ConverterLocator (patch included),WICKET-3752,12508805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,manthos,manthos,31/May/11 07:55,05/Jun/11 09:59,13/Mar/19 23:17,03/Jun/11 02:30,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-extensions,,,,,,,0,,,,,,,"PropertyRenderableColumn/PropertyTreeColumn do have her own IConverter without supporting ConverterLocator from Application. 

Attached patch supports ConverterLocator from Application without (expected) impact to current implementations.

Side note:
IMO the converter things should be changed to work more like in Component (getConverter method with class type parameter (or node as parameter, so getConverter could be overridden and return Converter per node data), no setter etc...) but this would be a major impact for existing implementations. But if you agree you could already implement and deprecate current getConverter/setConverter. How ever, attached patch contains nothing regarding to a redesign...
",,,,,,,,,,,,,,,,,,,,,,31/May/11 07:56;manthos;converter.patch;https://issues.apache.org/jira/secure/attachment/12480914/converter.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-03 02:30:47.294,,,no_permission,,,,,,,,,,,71925,,,Sun Jun 05 09:57:44 UTC 2011,,,,,,0|i0ka5b:,116461,,,,,,,,31/May/11 08:28;manthos;additional comment to side note: ...PropertyRenderableColumn/PropertyTreeColumn could implement IConverterLocator,"03/Jun/11 02:30;ivaynberg;lets wait to refactor until 1.6, too late now.","05/Jun/11 09:57;manthos;Agree. I've created a new issue for this, so this fix (and documentation) can be separated from further refactoring...
Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wickettag contents aren't skipped when trying to find markup in 1.5,WICKET-3725,12507624,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,selckin,selckin,18/May/11 15:14,03/Jun/11 21:16,13/Mar/19 23:17,03/Jun/11 21:16,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"The attached quick start, fails to render the components inside the fragment, because it will pick the <span wicket:id=""text""> instead of the fragment as markup.
I believe the id are only required to be unique ""per level"", so this should work and it should properly find the <wicket:fragment wicket:id=""text"">. 
This also worked fine in 1.4",,,,,,,,,,,,,,,,,,,,,,18/May/11 15:14;selckin;fragment-bug.rar;https://issues.apache.org/jira/secure/attachment/12479602/fragment-bug.rar,19/May/11 08:54;selckin;fragment-skipping.patch;https://issues.apache.org/jira/secure/attachment/12479742/fragment-skipping.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-05-19 19:24:32.346,,,no_permission,,,,,,,,,,,72129,,,Fri Jun 03 21:16:42 UTC 2011,,,,,,0|i0ka7r:,116472,,,,,,,,"19/May/11 08:54;selckin;This patch fixes my issue, but i'm not sure if the change is ""correct"". It does not cause any wicket tests to fail
","19/May/11 19:24;mgrigorov;The javadoc of org.apache.wicket.markup.IMarkupFragment.find(String) is misleading.
As far as I know this method should return the markup of a component in a MarkupStream or null if it cannot find it. The index in the markupstream is not related (anymore).",03/Jun/11 21:16;jdonnerstag;patch applied. Thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
INullAcceptingValidator behavior seems broken in 1.5-RC4.2,WICKET-3767,12509168,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,akarypid,akarypid,03/Jun/11 10:07,03/Jun/11 16:38,13/Mar/19 23:17,03/Jun/11 16:38,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"As discussed in this forum thread:
http://apache-wicket.1842946.n4.nabble.com/INullAcceptingValidator-behavior-tp3570352p3570352.html

It appears that Wicket no longer calls INullAcceptingValidator intances when the validatable value is null.

Wicket wraps validators  as behaviors, using the adapter pattern. The adapter class (org.apache.wicket.validation.ValidatorAdapter) implements  the interface IValidator<T>. This ""hides"" the case where the actual validator is an INullAcceptingValidator. Therefore, when going through a component's attached validators, the code of org.apache.wicket.markup.html.form.FormComponent will never call INullAcceptingValidators when the value is null.
",N/A,,,,,,,,,,,,,,,,,,,,,03/Jun/11 11:37;akarypid;FixNullValidation.patch;https://issues.apache.org/jira/secure/attachment/12481325/FixNullValidation.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,72157,,,Fri Jun 03 11:37:14 UTC 2011,,,,,,0|i0ka3b:,116452,,,,,,,,03/Jun/11 11:37;akarypid;The attached patch seems to fix things.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
throw new RestartResponseAtInterceptPageException is not serializable,WICKET-3758,12508946,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alain_sillen,alain_sillen,01/Jun/11 11:54,03/Jun/11 02:11,13/Mar/19 23:17,03/Jun/11 02:11,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"throw new RestartResponseAtInterceptPageException 

gives:

org.apache.wicket.RestartResponseAtInterceptPageException
ERROR - Error serializing object class org.apache.wicket.markup.html.pages.ExceptionErrorPage [object=[Page class = org.apache.wicket.markup.html.pages.ExceptionErrorPage, id = 1, render count = 1]]
org.apache.wicket.util.io.SerializableChecker$WicketNotSerializableException: 
Unable to serialize class: org.apache.wicket.request.flow.ResetResponseException$ResponseResettingDecorator
Field hierarchy is:
  1 [class=org.apache.wicket.markup.html.pages.ExceptionErrorPage, path=1]
    private final java.lang.Throwable org.apache.wicket.markup.html.pages.ExceptionErrorPage.throwable [class=org.apache.wicket.RestartResponseAtInterceptPageException]
      private final org.apache.wicket.request.IRequestHandler org.apache.wicket.request.RequestHandlerStack$ReplaceHandlerException.replacementRequestHandler [class=org.apache.wicket.request.flow.ResetResponseException$ResponseResettingDecorator] <----- field that is not serializable",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,72197,,,2011-06-01 11:54:34.0,,,,,,0|i0ka4n:,116458,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NumberTextField does not work with lists,WICKET-3762,12509052,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,kgignatyev,kgignatyev,02/Jun/11 02:38,03/Jun/11 01:57,13/Mar/19 23:17,03/Jun/11 01:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"When I use NumberTextField to edit values in the list of integers form submission fails with 
Last cause: null
WicketMessage: Exception 'java.lang.NullPointerException' occurred during validation org.apache.wicket.validation.validator.RangeValidator 

TextField works fine for list of Strings, so form 1 does not work, form2 works fine.  Expectation is that form 1 works, repro case attached

 ArrayList ints = new ArrayList(Arrays.asList(1,2,3,4));
    ArrayList strings = new ArrayList(Arrays.asList(""1"",""2"",""3"",""4""));

    public ArrayList getInts() {
        return ints;
    }

    public void setInts(ArrayList ints) {
        this.ints = ints;
    }

    public ArrayList getStrings() {
        return strings;
    }

    public void setStrings(ArrayList strings) {
        this.strings = strings;
    }


        Form f = new Form(""editor"", new CompoundPropertyModel(this));
        ListView ints = new ListView(""ints"") {

            @Override
            protected void populateItem(ListItem listItem) {
                listItem.add( new NumberTextField<Integer>(""v"", (IModel<Integer>) listItem.getDefaultModel(),Integer.class));
            }
        };
        f.add(ints);
        add(f);

        Form f2 = new Form(""editor2"", new CompoundPropertyModel(this));
        ListView strs = new ListView(""strings"") {

            @Override
            protected void populateItem(ListItem listItem) {
                listItem.add( new TextField(""v"", listItem.getDefaultModel()));
            }
        };
        f2.add(strs);
        add(f2);

",,,,,,,,,,,,,,,,,,,,,,02/Jun/11 02:38;kgignatyev;w-int-list-editor.zip;https://issues.apache.org/jira/secure/attachment/12481184/w-int-list-editor.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,72199,,,2011-06-02 02:38:09.0,,,,,,0|i0ka47:,116456,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestLogger was renamed to DummyRequestLogger,WICKET-3755,12508839,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,dashorst,dashorst,31/May/11 15:18,31/May/11 15:31,13/Mar/19 23:17,31/May/11 15:20,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,wicket-devutils,,,,,,0,,,,,,,RequestLogger was renamed to DummyRequestLogger for no apparent reason. Clients typically depend on the classname of the requestlogger when parsing log files. This should be reversed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204490,,,Tue May 31 15:31:30 UTC 2011,,,,,,0|i0ka4v:,116459,,,,,,,,31/May/11 15:20;dashorst;Fixed by undoing the rename,"31/May/11 15:31;dashorst;If you're running into this issue, add two lines to your log4j.xml file: one for the RequestLogger, and one for DummyRequestLogger, and let them output RequestLogger instead of %C{1} or %c{1}. This way downstream parsers will still see the right format.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scalability issue with PageAccessSynchronizer,WICKET-3740,12508284,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mgrigorov,mgrigorov,25/May/11 07:54,29/May/11 22:50,13/Mar/19 23:17,26/May/11 07:55,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"Class org.apache.wicket.page.PageAccessSynchronizer uses a global lock (org.apache.wicket.page.PageAccessSynchronizer.semaphore) that is needed e.g. when a new instance of a Page is created or when an instance of a page is retrieved, The lock is global and becomes quickly contented. When testing with two parallel threads, about 20% of all statistical stack samples waited for the lock, with four parallel threads about 50%.

The stack waiting for the lock is

at org.apache.wicket.page.PageAccessSynchronizer.lockPage(PageAccessSynchronizer.java:119)
at org.apache.wicket.page.PageAccessSynchronizer$1.getPage(PageAccessSynchronizer.java:187)

called either by

at org.apache.wicket.Page.dirty(Page.java:327)

as part of the Page ctor, or by

at org.apache.wicket.DefaultMapperContext.getPageInstance(DefaultMapperContext.java:117)

when retrieving page.


Some threads' stacks:

waiting on (a java.lang.Object@0xHEXADDR)
at org.apache.wicket.page.PageAccessSynchronizer.lockPage(PageAccessSynchronizer.java:119)
at org.apache.wicket.page.PageAccessSynchronizer$1.getPage(PageAccessSynchronizer.java:187)
at org.apache.wicket.DefaultMapperContext.getPageInstance(DefaultMapperContext.java:117)
at org.apache.wicket.request.handler.PageProvider.getPageInstance(PageProvider.java:246)
at org.apache.wicket.request.handler.PageProvider.getPageInstance(PageProvider.java:159)
at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.getPage(ListenerInterfaceRequestHandler.java:89)
at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:141)
at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:718)
at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212)
at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:138)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
....
at java.lang.Object.wait(Native Method)

waiting on (a java.lang.Object@0xHEXADDR) at org.apache.wicket.page.PageAccessSynchronizer.lockPage(PageAccessSynchronizer.java:119)
at org.apache.wicket.page.PageAccessSynchronizer$1.touchPage(PageAccessSynchronizer.java:194)
at org.apache.wicket.Page.dirty(Page.java:327)
at org.apache.wicket.Page.init(Page.java:770)
at org.apache.wicket.Page.<init>(Page.java:223)
at org.apache.wicket.Page.<init>(Page.java:202)
at org.apache.wicket.markup.html.WebPage.<init>(WebPage.java:99)
at x.y.z.page.base.Page.<init>(Page.java:100)
at x.y.z.page.base.ControllerBasedPage.<init>(ControllerBasedPage.java:41)
....
at java.lang.Object.wait(Native Method)

waiting on (a java.lang.Object@0xHEXADDR) at org.apache.wicket.page.PageAccessSynchronizer.lockPage(PageAccessSynchronizer.java:119)
at org.apache.wicket.page.PageAccessSynchronizer$1.touchPage(PageAccessSynchronizer.java:194)
at org.apache.wicket.Page.dirty(Page.java:327)
at org.apache.wicket.Page.init(Page.java:770)
at org.apache.wicket.Page.<init>(Page.java:223)
at org.apache.wicket.Page.<init>(Page.java:202)
at org.apache.wicket.markup.html.WebPage.<init>(WebPage.java:99)
at x.y.z.page.base.Page.<init>(Page.java:100)
at x.y.z.page.base.ControllerBasedPage.<init>(ControllerBasedPage.java:41)
at x.y.z.page.NavigationAndContent.<init>(NavigationAndContent.java:43)
at x.y.z.page.MailDetail.<init>(MailDetail.java:84)
x.y.z.page.login.Login.<init>-wicket.Page.<init>-wicket.page.PageAccessSynchronizer.lockPage-WAIT_FOR_LOCK

at java.lang.Object.wait(Native Method)

waiting on (a java.lang.Object@0xHEXADDR) at org.apache.wicket.page.PageAccessSynchronizer.lockPage(PageAccessSynchronizer.java:119)
at org.apache.wicket.page.PageAccessSynchronizer$1.touchPage(PageAccessSynchronizer.java:194)
at org.apache.wicket.Page.dirty(Page.java:327)
at org.apache.wicket.Page.init(Page.java:770)
at org.apache.wicket.Page.<init>(Page.java:223)
at org.apache.wicket.Page.<init>(Page.java:202)
at org.apache.wicket.markup.html.WebPage.<init>(WebPage.java:99)
at x.y.z.page.base.Page.<init>(Page.java:100)
at x.y.z.page.login.Login.<init>(Login.java:23)
.....
at java.lang.Object.wait(Native Method)

waiting on (a java.lang.Object@0xHEXADDR) at org.apache.wicket.page.PageAccessSynchronizer.lockPage(PageAccessSynchronizer.java:119)
at org.apache.wicket.page.PageAccessSynchronizer$1.touchPage(PageAccessSynchronizer.java:194)
at org.apache.wicket.Page.dirty(Page.java:327)
at org.apache.wicket.Page.init(Page.java:770)
at org.apache.wicket.Page.<init>(Page.java:223)
at org.apache.wicket.Page.<init>(Page.java:202)
....
at java.lang.Object.wait(Native Method)

at org.apache.wicket.page.PageAccessSynchronizer.lockPage(PageAccessSynchronizer.java:119)
at org.apache.wicket.page.PageAccessSynchronizer$1.touchPage(PageAccessSynchronizer.java:194)
at org.apache.wicket.Page.dirty(Page.java:327)
at org.apache.wicket.Page.init(Page.java:770)
at org.apache.wicket.Page.<init>(Page.java:223)
at org.apache.wicket.Page.<init>(Page.java:202)
.....

","JMeter, Tomcat",,,,,,,,,,,,,,,,,,,,,25/May/11 20:00;mgrigorov;WICKET-3740.patch;https://issues.apache.org/jira/secure/attachment/12480450/WICKET-3740.patch,25/May/11 19:59;mgrigorov;WICKET-3740.patch;https://issues.apache.org/jira/secure/attachment/12480449/WICKET-3740.patch,25/May/11 13:31;mgrigorov;WICKET-3740.patch;https://issues.apache.org/jira/secure/attachment/12480409/WICKET-3740.patch,25/May/11 08:00;mgrigorov;WICKET-3740.patch;https://issues.apache.org/jira/secure/attachment/12480377/WICKET-3740.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-05-26 07:29:31.713,,,no_permission,,,,,,,,,,,204483,,,Thu May 26 07:57:52 UTC 2011,,,,,,0|i0ka5z:,116464,,,,,,,,"25/May/11 08:00;mgrigorov;A suggested patch.
Instead of using the global lock (semaphore variable) use the respective PageLock instance.

PageAccessSynchronizerTest passes. I'll update the ticket when we have the new results from JMeter .",25/May/11 12:00;mgrigorov;The next problem is that 'locks' map uses as a key the page id while it should be sessionId+pageId because the pageId is session relative.,25/May/11 13:31;mgrigorov;Attach a patch that additionally moves PageAccessSynchronizer from Application to Session so the pages are synchronized per the session which created their id. ,"25/May/11 19:43;mgrigorov;Some more work is needed.
Don't bother to review for now.","25/May/11 19:59;mgrigorov;Better impl.
","26/May/11 07:29;ivaynberg;gah, of course its going to have a problem. the fact that it uses a global semaphor is not the problem as it is notified every time a thread releases a lock. the problem is that i wrote this in mind with the idea that page ids were going to be unique across sessions. i guess neither matej nor i got around to actually implementing it. since all sessions start with page id zero there will always be contention because separate sessions are still blocked because they want the same id.

of course, the problem with your patch is that it wont work in the real world since the page synchronizer is not serializable, and it is tricky to make it serializable.

however, i do think its easier to make it serializable than making page ids unique across sessions - those numbers will grow quickly, or making sure every call to synchronizer also includes the session id.

i am using your patch as a base and adding serialization. hopefully it will work :/",26/May/11 07:38;mgrigorov;Passing sessionId has problems. I tried it but the problem was that in the beginning (lock page) it starts with a temporary session that has no id (== null) and at the end (commitRequest) is may be bound thus the id has meaningful value. But even for temporary session you can't differentiate one temporary session than another.,"26/May/11 07:52;ivaynberg;working around server's session id is easy, we can simply have our own uuid we create in our own session. but, passing it around makes the code ugly. anyways, im done with the current way of doing it. code incoming. go ahead and profile it. reopen the issue if something is still broken.","26/May/11 07:57;ivaynberg;oh, and btw, im going to bed - so you get to fix the bugs :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester checkUsability is called before the request has started,WICKET-3471,12499453,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,papegaaij,papegaaij,23/Feb/11 09:16,27/May/11 14:51,13/Mar/19 23:17,27/May/11 14:51,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket,,,,,,,0,,,,,,,"For example, when clicking a link, the checkUsability method is called with the link before RequestCycle.onBeginRequest has been called. This causes tests to fail when, for example, the link has a security check that requires the request cycle. I've created a quickstart that demonstrates the problem.",,,,,,,,,,,,,,,,,,,,,,24/Feb/11 14:08;pedrosans;WICKET-3471.patch;https://issues.apache.org/jira/secure/attachment/12471835/WICKET-3471.patch,24/Feb/11 12:18;dashorst;WICKET-3471.patch;https://issues.apache.org/jira/secure/attachment/12471828/WICKET-3471.patch,23/Feb/11 09:17;papegaaij;quickstart.tar.bz2;https://issues.apache.org/jira/secure/attachment/12471709/quickstart.tar.bz2,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-02-23 10:04:46.252,,,no_permission,,,,,,,,,,,204256,,,Fri May 27 14:51:44 UTC 2011,,,,,,0|i0kavj:,116579,,,,,,,,"23/Feb/11 10:04;mgrigorov;This usecase is a bit strange to me - a component is enabled only when there is a request.
checkUsability() is there to prevent usage of (e.g. clicking on) disabled/invisible components. In real environment the browser cannot fire event on such component.
I am not sure your use case can be supported in WicketTester. We either need to remove the whole check or make this method protected so you can override it locally to support your need.","23/Feb/11 10:21;papegaaij;Of course, we do not use the check I used for the quickstart, it only serves to demonstrate the problem. In our application we set up a context in onBeginRequest and tear it down in onEndRequest. This context is required for some of the security checks to be performed. For example, this context contains the organisation the current user belongs to and one of the security checks verifies that the link targets a page that is part of a module that is active for that organisation. This security check currently fails, because the organisation has not yet been set on the context.","24/Feb/11 08:58;mgrigorov;I really don't see a way to move checkUsability() inside the request cycle. There is no information about the component/behavior at that point (it gets resolved at later point when it is too late to make the check and actually is inside Wicket core core, not WicketTester).

As I said earlier I see two solutions:
1) make it 'protected' so you can override it to do what you need if needed
2) remove it completely

I prefer 1).
checkUsability() may not be perfect and doesn't cover all cases but seems to be good enough for most of them.

Other opinions ?  ","24/Feb/11 12:18;dashorst;This fixes our issues, discovers a hidden bug in our test cases, and checks for usability (not-hidden, nor disabled) in even more places","24/Feb/11 13:42;dashorst;A possible way to address this is to proxy the requestcycle and perform the check after onBeginRequest. Problem is that the component to check is not always known in the code paths...

Looking at this it seems wickettester is a big pain in the behind: a big giant tangled mess.",24/Feb/11 13:44;dashorst;*The* big question in my opinion is why doesn't Wicket throw an exception from inside core when an invisible/disabled component receives an event during wickettester processing? Why is that checkUsability necessary?,"24/Feb/11 14:08;pedrosans;Hi Martjin, iirc it was add because the core was failing in to refuse execute behaviors in not enabled/disable behaviors. But it is fixed now and I'm 1+ to bring this check responsibility back to core request processing. Initial investigations shows that we can remove the checkUsability from clickLink and executeAjaxEvent methods. Sending the patch with tests.",24/Feb/11 14:33;dashorst;Just as a reminder to myself: need to revert r140505 in our svn repository when this issue is resolved.,"24/Feb/11 19:26;mgrigorov;Hi,

I have a question for the patch.
Test 'testBehaviorOnDisabledComponentAllowed()' allows execution of Ajax behavior on disabled component. The next test 'testClickOnDisableAjaxLinkNotAllowed()' checks that clicking on disabled AjaxLink is not allowed. AjaxLink is just a Link with AjaxEventBehavior(""onclick"").
It looks to me that both methods contradict to each other. What I'm missing ?","24/Feb/11 19:45;pedrosans;AjaxLink has an AjaxEventBehavior that do not override Behavior#canCallListenerInterface, so invoking the behavior when its component is not enabled is not allowed, this is the default policy. TestBehaviorDisabledComponentAllowed override the canCallListenerInterface to allow the use case at 'testBehaviorOnDisabledComponentAllowed()'",27/May/11 14:51;mgrigorov;Made the method protected so it can be suppressed when the user app really needs this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when AbstractResource writes in response of some type other than WebResponse,WICKET-3649,12505338,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pedrosans,pedrosans,27/Apr/11 18:29,27/May/11 14:46,13/Mar/19 23:17,27/May/11 14:46,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,Some times is usefull to write the resource in ByteArrayResponse to access the response bytes latter. An use case is ThumbnailImageResource accessing the wrapped resource image to first resize it and than write in response.,,,,,,,,,,,,,,,,,,,,,,01/May/11 00:59;pedrosans;WICKET-3649-refactoring-fix-test.patch;https://issues.apache.org/jira/secure/attachment/12477888/WICKET-3649-refactoring-fix-test.patch,27/Apr/11 18:31;pedrosans;WICKET-3649.patch;https://issues.apache.org/jira/secure/attachment/12477569/WICKET-3649.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-05-03 08:55:48.314,,,no_permission,,,,,,,,,,,204411,,,Tue May 03 08:55:48 UTC 2011,,,,,,0|i0kadr:,116499,,,,,,,,"01/May/11 00:59;pedrosans;Same fix moving header setup code to ResourceResponse and test case preventing the bug.

IMO AbtratctResource is just an API to request handlers objects and all response setup code makes more sense inside ResourceResponse. The attached patch do not move cache headers setup to it since this change would involve API break.","03/May/11 08:55;mgrigorov;Running the new test in Maven fails with:


Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.071 sec <<< FAILURE!
testThumbnailImageResource(org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResourceTest)  Time elapsed: 1.067 sec  <<< ERROR!
java.lang.IllegalArgumentException: Unknown image type 0
        at java.awt.image.BufferedImage.<init>(BufferedImage.java:492)
        at org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource.getScaledImageInstance(ThumbnailImageResource.java:158)
        at org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource.getImageData(ThumbnailImageResource.java:91)
        at org.apache.wicket.request.resource.DynamicImageResource$1.writeData(DynamicImageResource.java:156)
        at org.apache.wicket.request.resource.AbstractResource.respond(AbstractResource.java:524)
        at org.apache.wicket.request.handler.resource.ResourceRequestHandler.respond(ResourceRequestHandler.java:77)
....

In Eclipse it passes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester doesn't treat SubmitLink and AjaxSubmitLink correctly,WICKET-3711,12507160,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,cmenzel,cmenzel,13/May/11 18:26,27/May/11 12:21,13/Mar/19 23:17,27/May/11 12:21,1.4.17,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,,,wicket,,,,,,,0,,,,,,,"We ran into a testing issue with FormTester. When using a SubmitLink or AjaxSubmitLink it does not properly collect and use the values for the various form fields. The problem appears to be with a very inconsistent handling of ""parametersForNextRequest"" and MockServletRequest's parameter map. I did not completely manage to take it apart, frankly, it's a mess. I have a set of patches against 1.4.17 that introduce a test for this and also fix the problem. The fix is a bit hackish, but it works and does not break anything else.",,,,,,,,,,,,,,,,,,,,,,24/May/11 18:30;cmenzel;0001-added-test-for-FormTester-SubmitLink-problem.patch;https://issues.apache.org/jira/secure/attachment/12480297/0001-added-test-for-FormTester-SubmitLink-problem.patch,13/May/11 18:28;cmenzel;0001-added-test-for-FormTester-SubmitLink-problem.patch;https://issues.apache.org/jira/secure/attachment/12479148/0001-added-test-for-FormTester-SubmitLink-problem.patch,24/May/11 18:30;cmenzel;0002-fix-formtester-not-providing-correct-form-request-pa.patch;https://issues.apache.org/jira/secure/attachment/12480298/0002-fix-formtester-not-providing-correct-form-request-pa.patch,13/May/11 18:28;cmenzel;0002-fix-formtester-not-providing-correct-form-request-pa.patch;https://issues.apache.org/jira/secure/attachment/12479149/0002-fix-formtester-not-providing-correct-form-request-pa.patch,24/May/11 18:30;cmenzel;0003-fixed-ajaxsubmitlink-testing.-hackish.patch;https://issues.apache.org/jira/secure/attachment/12480299/0003-fixed-ajaxsubmitlink-testing.-hackish.patch,13/May/11 18:28;cmenzel;0003-fixed-ajaxsubmitlink-testing.-hackish.patch;https://issues.apache.org/jira/secure/attachment/12479150/0003-fixed-ajaxsubmitlink-testing.-hackish.patch,26/May/11 14:14;mathilde.pellerin;quickstart_FormTesterIssue.tar.gz;https://issues.apache.org/jira/secure/attachment/12480546/quickstart_FormTesterIssue.tar.gz,,7.0,,,,,,,,,,,,,,,,,,,2011-05-24 15:06:57.842,,,no_permission,,,,,,,,,,,204462,,,Fri May 27 12:21:24 UTC 2011,,,,,,0|i0dbwf:,75857,,,,,,,,13/May/11 18:28;cmenzel;A series of patches. The first one introduces a (failing) test for FormTester's behavior with SubmitLinks. The second and third fix the issue for SubmitLinks and AjaxSubmitLinks.,"13/May/11 18:29;cmenzel;These patches are not optimal, but are the best I can do right now. I'm currently negotiating for some time to spend on overhauling all of WicketTester, since it really needs some love.","24/May/11 15:06;mgrigorov;The good news is that the test case works OK in 1.5.
The bad news is that the patch has merge conflicts in 1.4.x.  ",24/May/11 15:11;mgrigorov;The test case is committed in 1.5.x with r1127108.,24/May/11 18:30;cmenzel;Rebased the patches against most recent 1.4.x. Should apply cleanly now.,"26/May/11 14:14;mathilde.pellerin;In attachment, you will find a quickstart which reproduce the problem that I had about wicketTester and error messages. Follow the link above to see discussion about this problem on mailing list :
http://markmail.org/message/vkaoprbbnp5gjzb4",27/May/11 12:21;mgrigorov;Thanks for the patches!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractSingleSelectChoice tries to convert the input using the id generated by IChoiceRenderer,WICKET-3745,12508476,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pedrosans,pedrosans,26/May/11 21:00,27/May/11 06:41,13/Mar/19 23:17,27/May/11 06:41,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"If one set a type for an AbstractSingleSelectChoice component, it will start to get error because the input being converted to model type was not generated by the converter, but by the IChoiceRenderer.",,,,,,,,,,,,,,,,,,,,,,26/May/11 21:04;pedrosans;WICKET-3745.patch;https://issues.apache.org/jira/secure/attachment/12480584/WICKET-3745.patch,26/May/11 21:03;pedrosans;WICKET-3745.zip;https://issues.apache.org/jira/secure/attachment/12480582/WICKET-3745.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-05-27 05:04:58.55,,,no_permission,,,,,,,,,,,204486,,,Fri May 27 06:41:45 UTC 2011,,,,,,0|i0ka5r:,116463,,,,,,,,26/May/11 21:03;pedrosans;Quickstart reproducing the problem,26/May/11 21:04;pedrosans;possible fix,"26/May/11 21:15;pedrosans;@devs, I think AbstractSingleSelectChoice needs to tweak the input to be understood by convertes ( my last patch ). I'm just not sure if this is a good idea, because we can't know for sure who will parse the input since one can override the FormComponent#convertInput method.","27/May/11 05:04;ivaynberg;hrm. what is the usecase for setting a type on a choice component? like you have mentioned - there is no type converstion that is happening here, instead it uses a simple lookup from choice renderer. if anything, we should make calling settype() on it throw an exception.",27/May/11 06:41;ivaynberg;thought about it some more. the only clear way i see to make this better is to make settype() throw an exception when called on a component that uses an ichoicerenderer.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket-datetime datepicker fails to display calendar with js error in calendar.js:3225 in IE8,WICKET-3739,12508230,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,24/May/11 18:52,27/May/11 06:16,13/Mar/19 23:17,24/May/11 20:59,1.4.17,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket-datetime,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-27 05:26:01.224,,,no_permission,,,,,,,,,,,204482,,,Fri May 27 06:16:49 UTC 2011,,,,,,0|i0ka67:,116465,,,,,,,,24/May/11 18:52;ivaynberg;upgrading from current 2.7 to latest 2.9 fixes js problems in calendar.js,24/May/11 19:28;ivaynberg;noep. upgrading doesnt help. unrolled the upgrade.,24/May/11 19:29;ivaynberg;going to check in a localized fix.,27/May/11 05:26;akiraly;Wicket 1.5 is using yui 2.8.2r1 while 1.4 is on yui 2.7.0. With the latest fix on 1.5 now the calendar.js from 2.7.0 (with some modifications I guess) is mixed into the 2.8.2r1 variant. Was this intended? Will this not cause any problems?,"27/May/11 05:43;ivaynberg;this was unintentioanl, i didnt think 1.5's yui was upgraded and didnt bother to check. my bad.",27/May/11 06:16;ivaynberg;fix re-applied to the proper calendar version,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using render strategy ONE_PASS_RENDER fails for Ajax requests,WICKET-3617,12504354,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,15/Apr/11 09:25,24/May/11 15:33,13/Mar/19 23:17,24/May/11 15:33,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"I have an application which has two pages. Page A has an AjaxLink which makes some checks and either sets some error feedback and stays on the same page (e.g. login page with ""Invalid user"" error) or if everything is OK then redirects to page B (via setResponsePage(B.class)).
The problem comes when the current render strategy is ONE_PASS_RENDER. In this case no matter that fromUrl and toUrl are different and the request is Ajax the current code directly writes the page markup to the response.
I think it should trigger a redirect instead.
I am not sure whether it should be redirect to render or to buffer ...",,,,,,,,,,,,,,,,,,,,,,15/Apr/11 09:38;mgrigorov;WICKET-3617.tgz;https://issues.apache.org/jira/secure/attachment/12476442/WICKET-3617.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-13 02:43:59.991,,,no_permission,,,,,,,,,,,204382,,,Tue May 24 15:33:54 UTC 2011,,,,,,0|i0kahj:,116516,,,,,,,,15/Apr/11 09:38;mgrigorov;A quickstart,"13/May/11 02:43;ivaynberg;it should simple be a window.location('url to the page')

how that is handled on the return trip is up to the strategy.",24/May/11 15:33;mgrigorov;Improved with r1127118.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SHOW_NO_EXCEPTION_PAGE responding with HTTP status 500 is overwritten by redirect,WICKET-3520,12500902,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,svenmeier,svenmeier,09/Mar/11 15:54,24/May/11 14:44,13/Mar/19 23:17,24/May/11 14:44,1.4.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket,,,,,,,0,,,,,,,"If the application is configured with SHOW_NO_EXCEPTION_PAGE as unexpectedExceptionDisplay, an exception thrown while submitting a form should result in an HTTP 500 status.
Since the request is already marked as a redirect in AbstractListenerInterfaceRequestTarget#onProcessEvents(), the 500 status is overwritten with status 200 when the redirect is handled afterwards.",,,,,,,,,,,,,,,,,,,,,,09/Mar/11 15:56;svenmeier;SHOW_NO_EXCEPTION_PAGE.zip;https://issues.apache.org/jira/secure/attachment/12473152/SHOW_NO_EXCEPTION_PAGE.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-24 14:11:36.381,,,no_permission,,,,,,,,,,,204298,,,Tue May 24 14:44:34 UTC 2011,,,,,,0|i0kapr:,116553,,,,,,,,09/Mar/11 15:56;svenmeier;Quickstart showing the problem.,24/May/11 14:11;mgrigorov;Fixed in 1.5 with r1127064.,24/May/11 14:44;mgrigorov;Fixed in 1.4.x with r1127094.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
onInitialize() is not called before StatelessForm.onSubmit(),WICKET-3562,12502526,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mbrictson,mbrictson,27/Mar/11 23:38,24/May/11 13:09,13/Mar/19 23:17,24/May/11 13:09,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"I have a StatelessForm that has initialization code in onInitialize(). When my form is submitted, the onSubmit() method is invoked before onInitialize() is called. This results in a NullPointerException since the form has not yet had a chance to initialize its instance variables.

I expect that onInitialize() will be called before any listener method is invoked.

I believe this bug is due to the change in Page.onInitialize() introduced in r1085649.

Quickstart attached.",,,,,,,,,,,,,,,,,,,,,,27/Mar/11 23:39;mbrictson;WICKET-3562-quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12474743/WICKET-3562-quickstart.tgz,04/Apr/11 19:03;mgrigorov;WICKET-3562.patch;https://issues.apache.org/jira/secure/attachment/12475398/WICKET-3562.patch,15/Apr/11 07:54;papegaaij;quickstart.tar.bz2;https://issues.apache.org/jira/secure/attachment/12476434/quickstart.tar.bz2,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-04-04 19:03:08.262,,,no_permission,,,,,,,,,,,204334,,,Tue May 24 13:09:46 UTC 2011,,,,,,0|i0kan3:,116541,,,,,,,,04/Apr/11 19:03;mgrigorov;A patch that fixes the problem,"13/Apr/11 19:55;pete;@Martin: I think just initializing the component might not be enough since the referred component might rely on an parent component or the page ifself that needs proper initialization, too. I added initialisation for stateless pages in the request listener interface. place take a look at #1091898.","15/Apr/11 07:53;dashorst;Reopened, papegaaij will attach a quickstart",15/Apr/11 07:55;mgrigorov;The unit test added for this ticket passes even without the fix in RequestListenerInterface#internalInvoke(),"15/Apr/11 07:56;papegaaij;The attached quickstart produces a stacktrace when the 'Click here!' link is clicked. The HomePage is instantiated, the TestPanel is added, but onInitialize is never called on this panel.","15/Apr/11 08:24;mgrigorov;The second problem is also fixed.
I'm leaving the ticket open to fix the previous test and add a new one for the second case (Emond's quickstart).","13/May/11 08:05;mgrigorov;Apparently WicketTester doesn't support stateless pages. The lastRenderedPage is cached after creation and is never reconstructed for the execution of component listeners.
At this point this ticket cannot be tested with WicketTester.","24/May/11 13:09;mgrigorov;Closing as fixed in RC4.2.
WicketTester doesn't support testing stateless pages.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Quickstart for 1.5-RC4.2 fails with some reference to 1.5-rc2,WICKET-3704,12506972,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,dashorst,dashorst,12/May/11 12:19,24/May/11 12:45,13/Mar/19 23:17,24/May/11 12:45,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket-quickstart,,,,,,,0,,,,,,,"Martijn-Dashorsts-MacBook-Pro:eduarte dashorst$ mvn archetype:generate -DarchetypeGroupId=org.apache.wicket -DarchetypeArtifactId=wicket-archetype-quickstart -DarchetypeVersion=1.5-RC4.2 -DgroupId=com.mycompany -DartifactId=myproject -DinteractiveMode=false
[INFO] Scanning for projects...
Downloading: http://repo-onderwijs.topicus.local/artifactory/repo/org/apache/maven/plugins/maven-metadata.xml
Downloading: http://repo-onderwijs.topicus.local/artifactory/repo/org/codehaus/mojo/maven-metadata.xml
Downloaded: http://repo-onderwijs.topicus.local/artifactory/repo/org/apache/maven/plugins/maven-metadata.xml (9 KB at 1.2 KB/sec)
Downloaded: http://repo-onderwijs.topicus.local/artifactory/repo/org/codehaus/mojo/maven-metadata.xml (18 KB at 2.2 KB/sec)
Downloading: http://repo-onderwijs.topicus.local/artifactory/repo/org/apache/maven/plugins/maven-archetype-plugin/maven-metadata.xml
Downloaded: http://repo-onderwijs.topicus.local/artifactory/repo/org/apache/maven/plugins/maven-archetype-plugin/maven-metadata.xml (820 B at 0.5 KB/sec)
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Stub Project (No POM) 1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> maven-archetype-plugin:2.0:generate (default-cli) @ standalone-pom >>>
[INFO] 
[INFO] <<< maven-archetype-plugin:2.0:generate (default-cli) @ standalone-pom <<<
[INFO] 
[INFO] --- maven-archetype-plugin:2.0:generate (default-cli) @ standalone-pom ---
[INFO] Generating project in Batch mode
[INFO] Archetype repository missing. Using the one from [org.apache.wicket:wicket-archetype-quickstart:1.5-rc2] found in catalog remote
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11.736s
[INFO] Finished at: Thu May 12 14:18:21 CEST 2011
[INFO] Final Memory: 7M/81M
[INFO] ------------------------------------------------------------------------
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-24 12:45:46.916,,,no_permission,,,,,,,,,,,204456,,,Tue May 24 12:45:46 UTC 2011,,,,,,0|i0ka93:,116478,,,,,,,,"24/May/11 12:45;mgrigorov;Fixed with r1127014.

See http://jira.codehaus.org/browse/ARCHETYPE-351",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The Url's query parameters are not properly URL encoded,WICKET-3721,12507366,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,16/May/11 13:49,24/May/11 12:23,13/Mar/19 23:17,24/May/11 12:23,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"If page parameter has a value with special characters like ' then it is rendered as it is in the produced markup and is only XML encoded but never URL encoded.
This causes broken html for example in the case when a Link is attached to a non- a|area|link tag:


<html><body><span wicket:id=""link"" onclick=""var win = this.ownerDocument.defaultView || this.ownerDocument.parentWindow; if (win == window) { window.location.href=&#039;bookmarkable/org.apache.wicket.MockPageWithLink?urlEscapeNeeded=someone&#039;s+ba+parameter&#039;; } ;return false""></span></body></html>

Notice that &#039; after 'someone' closes the location.href string too early and breaks the app.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204469,,,Mon May 16 14:09:07 UTC 2011,,,,,,0|i0ka7z:,116473,,,,,,,,16/May/11 14:00;mgrigorov;I added a failing test case for this: org.apache.wicket.markup.html.link.BookmarkablePageLinkTest.bug_testCustomParametersWithSpecialCharacters() ,"16/May/11 14:09;mgrigorov;The problem is in UrlEncoder line 177 (dontNeedEncoding.set('\'');).
As it is now this character is not encoded for all types (QUERY, PATH and FULL). Need to investigate why this is the case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
npe in StoredResponsesMap,WICKET-3736,12508041,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,francois,francois,23/May/11 10:21,23/May/11 10:57,13/Mar/19 23:17,23/May/11 10:57,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"While doing some load testing with with a small prog using Apache httpclient  (45 threads, only the get requests were done)  

I got this error

17:59:22.086 ERROR [""http-bio-8080""-exec-1]   DefaultExceptionMapper -  108 - Unexpected error occurred
java.lang.NullPointerException: null
	at org.apache.wicket.protocol.http.StoredResponsesMap$Value.access$000(StoredResponsesMap.java:37) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.protocol.http.StoredResponsesMap.removeEldestEntry(StoredResponsesMap.java:73) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at java.util.LinkedHashMap.addEntry(LinkedHashMap.java:410) ~[na:1.6.0_22]
	at java.util.HashMap.put(HashMap.java:385) ~[na:1.6.0_22]
	at org.apache.wicket.protocol.http.StoredResponsesMap.put(StoredResponsesMap.java:95) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.protocol.http.WebApplication.storeBufferedResponse(WebApplication.java:723) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.handler.render.WebPageRenderer.storeBufferedResponse(WebPageRenderer.java:73) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:258) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:139) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:718) ~[wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63) ~[wicket-request-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96) ~[wicket-request-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212) [wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253) [wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:138) [wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194) [wicket-core-1.5-RC4.2.jar:1.5-RC4.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.12]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.12]


via jmx I could see that only 45 sessions were there
and that the PeakNumberOfActiveRequests was also 45.


","linux 2.6.32 
tomcat 7.12
jdk 1.6.0.22 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-23 10:57:07.744,,,no_permission,,,,,,,,,,,204480,,,Mon May 23 10:57:07 UTC 2011,,,,,,0|i0ka6f:,116466,,,,,,,,"23/May/11 10:57;mgrigorov;Fixed with r1126429.

The test that reproduced it is @Ignore'd because it takes ~30 secs.
More info about the problem can be find at http://www.javaspecialists.eu/archive/Issue062.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
extremely slow performance in development mode,WICKET-3730,12507798,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,kgignatyev,kgignatyev,19/May/11 18:57,20/May/11 14:15,13/Mar/19 23:17,20/May/11 14:15,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"I just finished migrating application to 1.5 and it became VERY unresponsive and slow in development mode. In -deployment- it is OK.

No changes were made to backend services, only necessary Wicket API use changes related to request cycle.


=======================
Below is the originals bug: WICKET-3194

Hello, 
I had a problem with slow loading of pages and response to ajax requests. After some debugging I traced the problem to be that wicket constantly tries: 

DEBUG - UrlResourceStream          - cannot convert url: jar:file:/C:/Users/hok/.m2/repository/org/apache/wicket/wicket/1.5-M3/wicket-1.5-M3.jar!/org/apache/wicket/markup/html/wicket-event.js to file (URI is not hierarchical), falling back to the inputstream for polling 
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/markup/html/wicket-event_en_US.js' on path [folders = [], webapppaths: []] 
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/markup/html/wicket-event_en_US.js' using classloader sun.misc.Launcher$AppClassLoader@cac268 

and this happens because that by default (or at least I think so) wicket adds timestamp on the resources - ResourceSettings.setUseTimestampOnResources(true) and every resource is read from the jar files on every request. When a resource is in a jar file a java.lang.IllegalArgumentException: URI is not hierarchical is thrown in the UrlResourceStream constructor and a lot of attempts are made to load the jar file through different loaders. In my case this led to a slow response times. 
After disabling timestamp on resources (ResourceSettings.setUseTimestampOnResources(false)) the problem disappears and the performance is fine. However in the javadoc of setUseTimestampOnResources: 

Enabling timestamps on resources will inject the last modification time of the resource into the filename (the name will look something like 'style-ts1282915831000.css' where the large number is the last modified date in milliseconds and '-ts' is a prefix to avoid conflicts with filenames that already contain a number before their extension. * 

Since browsers and proxies use the filename of the resource as a cache key the changed filename will not hit the cache and the page gets rendered with the changed file.

In this case this useful functionality is lost. Is it possible to have ""the best of both worlds""? Thanks.

This issue is raised from the discussion:
http://apache-wicket.1842946.n4.nabble.com/IResourceSettings-setUseTimestampOnResources-true-and-performance-td3057946.html

To observe the performance improvement, please change
getResourceSettings().setUseTimestampOnResources(true);
to
getResourceSettings().setUseTimestampOnResources(false);
in TestApplication. It's most obvious when you press Refresh All link and observe the time for the refresh in both cases

","OS X, java 1.6",,,,,,,,,,WICKET-3194,,,,,,,,,,,19/May/11 19:56;kgignatyev;ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12479822/ASF.LICENSE.NOT.GRANTED--screenshot-1.jpg,19/May/11 19:30;kgignatyev;ASF.LICENSE.NOT.GRANTED--screenshot-visualvm.jpg;https://issues.apache.org/jira/secure/attachment/12479820/ASF.LICENSE.NOT.GRANTED--screenshot-visualvm.jpg,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-05-19 19:26:41.987,,,no_permission,,,,,,,,,,,204474,,,Fri May 20 14:15:27 UTC 2011,,,,,,0|i0ka7b:,116470,,,,,,,,"19/May/11 19:26;mgrigorov;Another thing that slows down is org.apache.wicket.settings.def.ResourceSettings.getResourceStreamLocator().
It caches only in DEPLOYMENT mode.",19/May/11 19:27;mgrigorov;Our app is also relatively big but I cannot say it is extremely slow in DEV mode.,"19/May/11 19:33;kgignatyev;I have attached visual-vm screenshot, and the the 12 seconds accumulated - that is only ONE page request was performed. In W 1.4 in dev mode the request took about a second.",19/May/11 19:56;kgignatyev;CPU profiling was focused on Wicket package only,20/May/11 07:49;mgrigorov;The problem here is that org.apache.wicket.request.resource.caching.AbstractResourceCachingStrategy.getLastModified(ResourceReference) uses RequestCycle as holder of the cache for resourceReference->lastModifiedTime. Thus it is recreated for each request and helps only in the case when the same resource is decorated several times in one request. An improvement here is to move the cache on application level and add logic to ModificationWatcher to clean the entry for each modified resource.,"20/May/11 08:10;mgrigorov;The next problem is that ModificationWatcher actually doesn't watch for ResourceReferences' resources and cannot clean this cache.
I don't see much value in this cache as it is now (RequestCycle scope). It would help only if the same ResRef is contributed by several components.
And I don't see differences in the configuration of the IResourceCachingStrategy for DEPLOYMENT and DEVELOPMENT mode, so the actual improvement is in CachingResourceStreamLocator which is used only in DEPLOYMENT mode.

As an improvement I suggest to use RequestCycle cache for DEV mode and Application for DEPLOY mode and decide whether to use CachingResourceStreamLocator always. The downside of using CachingResourceStreamLocator in DEV mode is that the user app may have a typo in the name of the resource and this will be cached as a miss, then the developer may fix it and she will have to restart the app to see the fix ...",20/May/11 08:29;pete;+1 for caching on application level in deployment mode,20/May/11 10:14;pete;I added some optimization for retrieving the last modified timestamp on urls that point to local jar files. This will not solve this issue in general but eventually makes things a little faster (WICKET-3732),20/May/11 12:50;pete;I also reworked the logic of UrlResourceStream: for retrieving last modified timestamps it should be noticeably faster now,20/May/11 14:15;mgrigorov;With r1125410 it should be the same in DEV and DEPLOY modes.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PackageResourceReference.lookupStream(IResourceStreamLocator, Locale, String, String) creates wrong PackageResourceReference.StreamInfo",WICKET-3731,12507852,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,20/May/11 08:54,20/May/11 14:14,13/Mar/19 23:17,20/May/11 14:14,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.request.resource.PackageResourceReference.lookupStream(IResourceStreamLocator, Locale, String, String) asks the IResourceStreamLocator to find the IReqourceStream with these parameters but this locator may return a ResourceReference with a weaker Key, e.g. ignored Locale: the lookup is for (Some.class, ""some.css"", Locale.US) but the result is (Some.class, ""some.css"").

StreamInfo should use the returned IResourceStream's settings (locale, style, variation) instead of the searched ones.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204475,,,Fri May 20 14:14:57 UTC 2011,,,,,,0|i0ka73:,116469,,,,,,,,20/May/11 08:56;mgrigorov;Fixed with r1125284.,20/May/11 09:20;mgrigorov;Autolink seems to have the same problem.,"20/May/11 09:26;mgrigorov;/wicket-core-1.5-SNAPSHOT/src/test/java/org/apache/wicket/markup/html/link/AutolinkPageExpectedResult_1.html expects generated URLs like:
<link href=""../resource/org.apache.wicket.markup.html.link.AutolinkPage_1/test3.css?de_DE-myStyle""/>

How this resource should be actually styled/localized ?! The locale and the style are not part of the filename anymore and the only way to do something meaningful is to use a shared resource mounted at this location and return dynamic response based on the request parameters. But this is not the idea of <wicket:link>.",20/May/11 14:14;mgrigorov;Fixed with r1125410.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IResourceSettings.setUseTimestampOnResources(true) and performance,WICKET-3194,12480862,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,hok,hok,24/Nov/10 21:06,19/May/11 18:57,13/Mar/19 23:17,24/Nov/10 23:38,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"Hello, 
I had a problem with slow loading of pages and response to ajax requests. After some debugging I traced the problem to be that wicket constantly tries: 

DEBUG - UrlResourceStream          - cannot convert url: jar:file:/C:/Users/hok/.m2/repository/org/apache/wicket/wicket/1.5-M3/wicket-1.5-M3.jar!/org/apache/wicket/markup/html/wicket-event.js to file (URI is not hierarchical), falling back to the inputstream for polling 
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/markup/html/wicket-event_en_US.js' on path [folders = [], webapppaths: []] 
DEBUG - ResourceStreamLocator      - Attempting to locate resource 'org/apache/wicket/markup/html/wicket-event_en_US.js' using classloader sun.misc.Launcher$AppClassLoader@cac268 

and this happens because that by default (or at least I think so) wicket adds timestamp on the resources - ResourceSettings.setUseTimestampOnResources(true) and every resource is read from the jar files on every request. When a resource is in a jar file a java.lang.IllegalArgumentException: URI is not hierarchical is thrown in the UrlResourceStream constructor and a lot of attempts are made to load the jar file through different loaders. In my case this led to a slow response times. 
After disabling timestamp on resources (ResourceSettings.setUseTimestampOnResources(false)) the problem disappears and the performance is fine. However in the javadoc of setUseTimestampOnResources: 

Enabling timestamps on resources will inject the last modification time of the resource into the filename (the name will look something like 'style-ts1282915831000.css' where the large number is the last modified date in milliseconds and '-ts' is a prefix to avoid conflicts with filenames that already contain a number before their extension. * 

Since browsers and proxies use the filename of the resource as a cache key the changed filename will not hit the cache and the page gets rendered with the changed file.

In this case this useful functionality is lost. Is it possible to have ""the best of both worlds""? Thanks.

This issue is raised from the discussion:
http://apache-wicket.1842946.n4.nabble.com/IResourceSettings-setUseTimestampOnResources-true-and-performance-td3057946.html

To observe the performance improvement, please change
getResourceSettings().setUseTimestampOnResources(true);
to
getResourceSettings().setUseTimestampOnResources(false);
in TestApplication. It's most obvious when you press Refresh All link and observe the time for the refresh in both cases

","Windows 7, java 1.6",,,,,,,,,,,,,,,,,,,,,24/Nov/10 21:08;hok;quickstart.rar;https://issues.apache.org/jira/secure/attachment/12460398/quickstart.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-24 23:37:22.029,,,no_permission,,,,,,,,,,,204005,,,Wed Nov 24 23:37:22 UTC 2010,,,,,,0|i0a5af:,57130,,,,,,,,24/Nov/10 21:08;hok;Attached quickstart,"24/Nov/10 23:37;pete;Fixed in trunk.

The 'last modified timestamp' is now looked up just once and cached in the meta data of the current request cycle. Negative lookups (timestamp = null) are cached, too.

I also added some testing stuff for timestamped urls in the test suite.

@ivan: Your sample now runs with normal speed. Please test and reopen the issue in case something is still broken / wrong /slow / missing.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session is invalidated more than once because Session.sessionInvalidated is not reset,WICKET-3690,12506600,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,09/May/11 12:38,16/May/11 15:02,13/Mar/19 23:17,10/May/11 07:10,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.Session.detach() invalidates the http session and null-ifies the sessionStore but doesn't reset 'sessionInvalidated' variable and later if a new session store is created (e.g. during commitRequest [1]) then this new session store is again destroyed at the end.

1.
Thread [qtp1917759555-26] (Suspended (breakpoint at line 80 in RequestAdapter))	
	PersistentPageManager$PersitentRequestAdapter(RequestAdapter).bind() line: 80	
	PersistentPageManager$PersitentRequestAdapter.getSessionEntry(boolean) line: 339	
	PersistentPageManager$PersitentRequestAdapter.storeTouchedPages(List<IManageablePage>) line: 373	
	PersistentPageManager$PersitentRequestAdapter(RequestAdapter).commitRequest() line: 185	
	PersistentPageManager(AbstractPageManager).commitRequest() line: 94	
	PageAccessSynchronizer$1(PageManagerDecorator).commitRequest() line: 68	
	PageAccessSynchronizer$1.commitRequest() line: 203	
	Application$2.onDetach(RequestCycle) line: 1522	
	RequestCycleListenerCollection$3.notify(IRequestCycleListener) line: 100	
	RequestCycleListenerCollection$3.notify(Object) line: 95	
	RequestCycleListenerCollection(ListenerCollection<T>).reversedNotify(Iterator<T>, INotifier<T>) line: 121	
	RequestCycleListenerCollection(ListenerCollection<T>).reversedNotify(INotifier<T>) line: 112	
	RequestCycleListenerCollection.onDetach(RequestCycle) line: 94	
	RequestCycle.onDetach() line: 547	
	RequestCycle.detach() line: 479	
	RequestCycle.processRequestAndDetach() line: 257	
	WicketFilter.processRequest(ServletRequest, ServletResponse, FilterChain) line: 138	
	WicketFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 194	
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204444,,,Tue May 10 07:10:19 UTC 2011,,,,,,0|i0kaan:,116485,,,,,,,,"10/May/11 07:10;mgrigorov;Fixed with r1101345.
Now Session#detach() is called once - at the end of RequestCycle#onDetach(), after the RequestCycleListener's #onDetach();",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IE 8 report error when opening the 'Access Denied' or 'Internal Error' page,WICKET-3566,12502611,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,pedrosans,pedrosans,28/Mar/11 17:40,16/May/11 13:59,13/Mar/19 23:17,16/May/11 13:59,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,1,,,,,,,"The error message:
""Cannot view XML input using style sheet. Please correct the error and then click the Refresh button, or try again later.""
the '>' charactere was expected. Error while procesing the resource: 'http://www.w3.org/TR/html4/loose.dtd'

To reproduce the error opening the Internal Error page go to:
http://localhost:8080/velocity/wicket/bookmarkable/org.apache.wicket.examples.velocity.DynamicPage

And to reproduce when opening the Access Denied page go to authorization example
http://localhost:8080/authorization
select user 'pam'
click 'go to internal admin page, protected with Wicket meta data '","IE 8, can't reproduce on Chrome",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-31 17:15:56.879,,,no_permission,,,,,,,,,,,204337,,,Mon May 16 13:52:31 UTC 2011,,,,,,0|i0kamn:,116539,,,,,,,,"31/Mar/11 17:01;pedrosans;This problem was introduced by WICKET-2639, fixed by WICKET-2721, than reintroduced by WICKET-3008
IE is a bit weird, just pointing out declaration sequences that I tested here:

prolog | apache header | doctype | html = error
prolog | doctype | html  > apache header = page renders OK but apache header inside the html tag is weird
prolog | doctype | html  = page renders OK, we have the prologe, but the apache header is gone
apache header | doctype | html = page renders OK, but we removed the prologe  <-- I chose this declaration sequence to fix this problem on IE",31/Mar/11 17:15;mgrigorov;Can you try also : prolog | doctype | apache header | html ?,31/Mar/11 21:11;pedrosans;problematic also :/,"01/Apr/11 01:05;pedrosans;prolog | doctype | apache header | html = problematic
prolog | apache header | html = OK - doctype removed
apache header | doctype | html = OK - prolog removed","21/Apr/11 16:42;pedrosans;Just changing my opinion, I vote for: prolog | doctype | html > apache header
since those pages can be exposed to some XML validation latter without problems.",13/May/11 02:05;ivaynberg;if its causing problems just remove the apache header and add it as an exception to the test that checks,"16/May/11 13:52;pedrosans;Same problem in SignInPage
http://markmail.org/message/r72oy7la2pnqmvuo",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WicketTester.startComponent(Class, Markup) doesn't deliver the contributed response to the headers",WICKET-3700,12506854,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,11/May/11 14:12,11/May/11 21:18,13/Mar/19 23:17,11/May/11 21:18,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"There is a regression from RC3 with starting a Panel. The header contribution is not in the ""lastRenderedPageAsString"".
See attached test case.",,,,,,,,,,,,,,,,,,,,,,11/May/11 14:13;mgrigorov;wicket-3700-testcase.tgz;https://issues.apache.org/jira/secure/attachment/12478823/wicket-3700-testcase.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204453,,,Wed May 11 21:18:54 UTC 2011,,,,,,0|i0ka9j:,116480,,,,,,,,"11/May/11 14:13;mgrigorov;A testcase showing the problem.
Change the version to 1.5-RC3 in pom.xml and it will work as expected.","11/May/11 19:21;mgrigorov;The problem comes from the fact that the MarkupResourceStream has no componentInfo at MarkupParser, line 169 (because the markup is set manually with page.setMarkup(Markup.of(""some markup here""))) and HtmlHeaderSectionHandler is not used. Even if it was used then the provided markup has neither <head> nor <body> and later in WebPage.validateHeaders() it dumps an error describing that.",11/May/11 21:18;mgrigorov;Fixed with r1102095.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileUploadField no longer updates model in wicket 1.5,WICKET-3698,12506736,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,selckin,selckin,10/May/11 16:16,10/May/11 19:00,13/Mar/19 23:17,10/May/11 19:00,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"If you pass a model to the FileUploadField constructor, it is no longer updated when the form is submitted, this worked in wicket 1.4.
See attached diff for a test case",,,,,,,,,,,,,,,,,,,,,,10/May/11 16:33;selckin;fileupload-test-2.patch;https://issues.apache.org/jira/secure/attachment/12478708/fileupload-test-2.patch,10/May/11 16:17;selckin;fileuploadfield-test.patch;https://issues.apache.org/jira/secure/attachment/12478707/fileuploadfield-test.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-05-10 19:00:35.352,,,no_permission,,,,,,,,,,,204451,,,Tue May 10 19:00:35 UTC 2011,,,,,,0|i0ka9r:,116481,,,,,,,,10/May/11 16:17;selckin;test case update,"10/May/11 16:29;selckin;Actually bad test, because it's allowed be to nulled out again after the onSubmit(), i'll make a new one",10/May/11 16:33;selckin;correct test,10/May/11 19:00;mgrigorov;With r1101597 FileUploadField accepts ListModel and the feature is re-introduced.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Usage of JavaScriptCompressor by resources other than PackageTextTemplates is lost!,WICKET-3675,12506391,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hielkehoeve,hielkehoeve,06/May/11 09:56,10/May/11 11:49,13/Mar/19 23:17,10/May/11 11:49,1.5-M1,1.5-M2.1,1.5-M3,1.5-RC1,1.5-RC2,1.5-RC3,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,compression,javascript,resource,,,,"With the refactoring of ResourceReferences, Resources and ResourceStreams it seems that the JavaScriptCompressor is no longer used for resources other than a PackageTextTemplate.  In Wicket 1.4 it used to be in JavascriptPackageResource but seeing as this class is gone the JavaScriptCompressor is no longer used.

There should be either a subclass of PackageResource which uses the JavaScriptCompressor or a way to intercept the length and the bytes which are written to the stream in PackageResource line 327.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-06 13:34:57.154,,,no_permission,,,,,,,,,,,204432,,,Tue May 10 11:49:53 UTC 2011,,,,,,0|i0kabj:,116489,,,,,,,,"06/May/11 13:34;mgrigorov;I improved the area with r1100209.
Please check the change in the ""Subversion Commits"" tab and give feedback whether there is something more to improve.",06/May/11 14:51;hielkehoeve;While I was checking out sources to make a patch you already made exactly what I wanted :) Fixed!,"06/May/11 15:14;mgrigorov;I'll try to add some tests and then I'll close the ticket.
Help is welcome!",10/May/11 11:49;mgrigorov;Tests have been added with r1101417.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session.getPageMaps is not thread safe.,WICKET-3668,12506268,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,gelrad,gelrad,05/May/11 10:20,10/May/11 04:01,13/Mar/19 23:17,10/May/11 04:01,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,,,wicket,,,,,,,0,wicket,,,,,,"Session.getPageMaps first gets all attributes names, then it add all pageMaps with a name of a pageMap.

But another thread with the same session might remove the attribute in the time between the get attribues names and the get of the attribute.
So the result will include a null object that will throw null pointer in the sort.

The senario is basicly related to previous bug where pageMap was created for link with popup (So pageMap would exceed max level and massive removal of pageMaps).
But this could still happen, and should be easy to fix (Just don't add a null pageMap to the list)...",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204428,,,2011-05-05 10:20:49.0,,,,,,0|i0kac7:,116492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in PersistentPageManager.SessionEntry.writeObject(ObjectOutputStream) when using embedded Tomcat,WICKET-3691,12506605,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,09/May/11 13:23,09/May/11 13:24,13/Mar/19 23:17,09/May/11 13:24,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"We try to use embedded Tomcat for some of our tests and sporadically it fails with NullPointerException like the one below.
It seems none of the methods that initialize 'pages' variable is called before session persistence and thus 'pages' is null in writeObject.

Exception unloading sessions to persistent storage
java.lang.NullPointerException
	at org.apache.wicket.page.PersistentPageManager$SessionEntry.writeObject(PersistentPageManager.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400)
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204445,,,2011-05-09 13:23:19.0,,,,,,0|i0kaaf:,116484,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebPage cannot find the head container if TransparentWebMarkupContainer is associated with <html>,WICKET-3688,12506572,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,09/May/11 08:35,09/May/11 08:43,13/Mar/19 23:17,09/May/11 08:43,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,If a page uses TransparentWebMarkupContainer to set some attributes to the <html> tag then org.apache.wicket.markup.html.WebPage.validateHeaders() cannot find the HtmlHeaderContainer because it expects to find it at the first level of children tree.,,,,,,,,,,,,,,,,,,,,,,09/May/11 08:39;mgrigorov;wicket-3688.tgz;https://issues.apache.org/jira/secure/attachment/12478574/wicket-3688.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204443,,,Mon May 09 08:43:03 UTC 2011,,,,,,0|i0kaav:,116486,,,,,,,,"09/May/11 08:39;mgrigorov;A quickstart demonstrating the problem.

A log message similar to:
ERROR - WebPage                    - You probably forgot to add a <body> or <head> tag to your markup since no Header Container was 
found but components were found which want to write to the <head> section.
<link rel=""stylesheet"" type=""text/css"" href=""someCss"" />


ERROR - WebPage                    - ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
is logged.","09/May/11 08:43;mgrigorov;Fixed with r1100915.

No test case is added because I cannot assert whether the log message is logged or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Selection remains after removing collapsed node in the tree.,WICKET-3328,12495497,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lotos,lotos,13/Jan/11 14:36,04/May/11 08:07,13/Mar/19 23:17,04/May/11 08:07,1.4.14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket,,,,,,,0,,,,,,,"If we fire 'node removed event' in the tree, it deselects only node which is currently shown (not under collapsed parent).

There are two use cases which show correct and incorrect behavior.

Step 1: expand ROOT
Step 2: expand SUBTREE
Step 3: select LEAF
Step 4: press 'Print Selection'
Result 4: 'Selected Node: LEAF'
Step 5: press 'Delete SUBTREE'
Step 6: press 'Print Selection'
Result 6: 'Selected Node: --NO SELECTION--'

This behavior is correct.

Step 1: expand ROOT
Step 2: expand SUBTREE
Step 3: select LEAF
Step 4: press 'Print Selection'
Result 4: 'Selected Node: LEAF'
-------------------------------------
Step 5: collapse SUBTREE
------------------------------------- 
Step 6: press 'Delete SUBTREE'
Step 7: press 'Print Selection'
Result 7: 'Selected Node: LEAF'

'LEAF' is still selected, but there is no such node in the tree model.

Use the code below to reproduce the bug.

Test.html

<html>
<body>
    <div wicket:id=""tree""></div>

    <input type=""button"" wicket:id=""printSelection"" value=""Print Selection"">
    <input type=""button"" wicket:id=""delete"" value=""Delete 'SUBTREE'"">
    <br>Selected Node:
    <b><span wicket:id=""selection""></span></b>
</body>
</html>

Test.java

public class Test extends WebPage {
    private DefaultMutableTreeNode subTree;

    public Test() {
        final LinkTree tree = new LinkTree(""tree"", createTreeModel());
        add(tree);

        final Label selection = new Label(""selection"");

        add(new AjaxLink(""printSelection"") {
            @Override
            public void onClick(AjaxRequestTarget target) {
                Collection<Object> selectedNodes = tree.getTreeState().getSelectedNodes();
                String selectionString = ""--NO SELECTION--"";
                if (selectedNodes.size() > 0) {
                    selectionString = selectedNodes.iterator().next().toString();
                }
                selection.setDefaultModel(new Model<String>(selectionString));
                target.addComponent(selection);
            }
        });

        add(new AjaxLink(""delete"") {
            @Override
            public void onClick(AjaxRequestTarget target) {
                DefaultTreeModel treeModel = (DefaultTreeModel) tree.getModelObject();
                if(subTree != null) {
                    treeModel.removeNodeFromParent(subTree);
                    subTree = null;
                }
                tree.updateTree();
            }
        });

        selection.setOutputMarkupId(true);
        add(selection);
    }

    protected TreeModel createTreeModel() {
        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(""ROOT"");
        subTree = new DefaultMutableTreeNode(""SUBTREE"");
        DefaultMutableTreeNode leaf = new DefaultMutableTreeNode(""LEAF"");
        rootNode.add(subTree);
        subTree.add(leaf);
        return new DefaultTreeModel(rootNode);
    }
}","tomcat  6.0.26, win 7",,,,,,,,,,,,,,,,,,,,,05/Apr/11 07:28;lotos;3328.flv;https://issues.apache.org/jira/secure/attachment/12475463/3328.flv,04/Apr/11 14:00;lotos;quickStart.ZIP;https://issues.apache.org/jira/secure/attachment/12475367/quickStart.ZIP,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-02-18 12:31:36.514,,,no_permission,,,,,,,,,,,204132,,,Tue Apr 05 07:28:32 UTC 2011,,,,,,0|i0kb9z:,116644,,,,,,,,"18/Feb/11 12:31;mgrigorov;All you need to do is to change 
tree.updateTree(); 
to
tree.updateTree(target); 
in delete link's onClick and the second scenario works too.","04/Apr/11 13:57;lotos;Solutions with changing tree.updateTree() to tree.updateTree(target) doesn't work. Generally speaking i don't see a big difference between this methods.

Please, reopen the issue.",04/Apr/11 14:00;lotos;add quick start,"04/Apr/11 14:20;mgrigorov;I just tried it again and the second scenario above works as expected. At step 7 I got : Selected Node: --NO SELECTION--
I would close the ticket again as ""cannot reproduce"" but I'll leave it to other devs to check it as well. Maybe it is something related to the system environment...",05/Apr/11 07:28;lotos;attach video,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
accept-encoding is not a valid attribute for form elements,WICKET-3663,12506063,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,papegaaij,papegaaij,03/May/11 13:37,03/May/11 17:33,13/Mar/19 23:17,03/May/11 17:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,This should probably be 'accept-charset'. See patch.,,,,,,,,,,,,,,,,,,,,,,03/May/11 13:38;papegaaij;encoding-charset.diff;https://issues.apache.org/jira/secure/attachment/12478054/encoding-charset.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-03 17:33:33.991,,,no_permission,,,,,,,,,,,204424,,,Tue May 03 17:33:33 UTC 2011,,,,,,0|i0kacv:,116495,,,,,,,,03/May/11 17:33;mgrigorov;Fixed with r1099147.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in ResourceStreamResource when lastModifiedTime is null,WICKET-3665,12506066,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,papegaaij,papegaaij,03/May/11 14:32,03/May/11 17:30,13/Mar/19 23:17,03/May/11 17:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"When stream.lastModifiedTime() is null (which is the case for many streams), ResourceStreamResource will throw a NullPointerException at line 93. The attached patch fixes this.",,,,,,,,,,,,,,,,,,,,,,03/May/11 14:33;papegaaij;npe-fix.diff;https://issues.apache.org/jira/secure/attachment/12478058/npe-fix.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-03 17:30:55.72,,,no_permission,,,,,,,,,,,204426,,,Tue May 03 17:30:55 UTC 2011,,,,,,0|i0kacn:,116494,,,,,,,,"03/May/11 17:30;mgrigorov;Improved with r1099146.
Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractMarkupParser.removeComment() goes in endless loop when the comment is multi line,WICKET-3648,12505302,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,27/Apr/11 12:52,28/Apr/11 14:25,13/Mar/19 23:17,28/Apr/11 14:25,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"A markup like:
 <!--[if lt IE 8 ]>
            <style></style>
            <script src=""js/ie7.js""></script>
        <![endif]-->

and the application is configured with: getMarkupSettings().setStripComments(true);

makes AbstractMarkupParser#removeComment(String) to enter in endless loop.",,,,,,,,,,,,,WICKET-3500,,,,,,,,,27/Apr/11 14:20;mgrigorov;WICKET-3648.patch;https://issues.apache.org/jira/secure/attachment/12477539/WICKET-3648.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204410,,,Thu Apr 28 14:25:25 UTC 2011,,,,,,0|i0kadz:,116500,,,,,,,,27/Apr/11 12:54;mgrigorov;Тhe problem is that there is an inner tag and the RawMarkup for the opening comment has no knowledge about the closing tag.,"27/Apr/11 13:16;mgrigorov;I added a unit test demonstrating the problem:
org.apache.wicket.markup.MarkupParserTest.wicket3648testCommentsWithNestedElements()

Remove the prefix ""wicket3648"" to run it.","27/Apr/11 14:20;mgrigorov;A patch fixing the problem.
Please review.","27/Apr/11 14:35;mgrigorov;This specific bug is fixed but stripping comments causes IE conditional comments to become broken/cut.
It would be good to test WICKET-3433 with getMarkupSettings().setStripComments(true);",27/Apr/11 14:52;mgrigorov;Link with WICKET-3500. Seems to be the very same problem. It has been fixed only in 1.4.x,28/Apr/11 14:25;mgrigorov;Fixed with r1097472.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Method AbstractMarkupParser.removeComment() causes an endless loop,WICKET-3500,12500377,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,geju@inasys.de,geju@inasys.de,03/Mar/11 22:53,27/Apr/11 14:52,13/Mar/19 23:17,09/Mar/11 04:33,1.4.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,,,wicket,,,,,,,0,,,,,,,"The last change (see WICKET-3277) of method AbstractMarkupParser.removeComment() in Wicket 1.4.16 causes an endless loop if the markup contains conditional comments for IE. 

For example, the following string causes a loop in method removeComment()

rawMarkup = ""\r\n      <!--[if IE 6]>\r\n        ""

According to the following code snippet 

	private String removeComment(String rawMarkup)
	{
		int pos1 = rawMarkup.indexOf(""<!--"");
		while (pos1 != -1)
		{
			int pos2 = rawMarkup.indexOf(""-->"", pos1 + 4);
			final StringBuilder buf = new StringBuilder(rawMarkup.length());
			if (pos2 != -1)
			{
			...
			}
			pos1 = rawMarkup.indexOf(""<!--"", pos1);
		}
		return rawMarkup;
	}

one can see that pos1 remains unchanged if pos2 == -1.

The previous version in Wicket 1.4.15 doesn't have this defect. As a workaround set StripComments to false.

",,,,,,,,,,,,,,,,,,,,,,06/Mar/11 05:52;pedrosans;WICKET-3500-2.patch;https://issues.apache.org/jira/secure/attachment/12472769/WICKET-3500-2.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-04 02:28:19.188,,,no_permission,,,,,,,,,,,204280,,,Sun Mar 06 05:52:38 UTC 2011,,,,,,0|i0kas7:,116564,,,,,,,,"04/Mar/11 02:28;pedrosans;Avoiding endless loop by throwing an exception, since the parser is failing due an unclosed comment tag","04/Mar/11 13:46;geju@inasys.de;The causing html snippet is

      <!--[if IE 6]>
        <link rel=""stylesheet"" type=""text/css"" href=""ie-buggy.css"" />
      <![endif]--> 

The closing comment tag is in a separate line. I don't know why the pull parser splits this to separate chunks. This happens even in case of

<!--[if IE 6]><link rel=""stylesheet"" type=""text/css"" href=""ie-buggy.css"" /><![endif]--> 

The first ""rawMarkup"" remains ""<!--[if IE 6]>"" leading to the endless loop.


","05/Mar/11 21:16;pedrosans;last patch was bad, I'm working on a new one",06/Mar/11 05:52;pedrosans;Patch for 1.4. At 1.5 it is depending on WICKET-3433 because conditional comments will be parsed to a comment type an not to RawMarkup.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatePicker issues with locale medium date format,WICKET-3598,12503418,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jrogoznicki,jrogoznicki,05/Apr/11 16:27,27/Apr/11 08:27,13/Mar/19 23:17,21/Apr/11 14:30,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket-datetime,,,,,,,1,,,,,,,"DateTextField as follows: DateTextField d = new DateTextField(id, model, new StyleDateConverter(""M-"",false));

Case 1:
- en-US locale
- for example DatePicker insert 04 rather than Apr in DateTextField, even though pattern clearly says MMM

Case 2:
- pl-PL locale
- 2010-10-25 is in the DateTextField
- DatePicker opens on April 2031 rather than October 2010

I believe the problem lies in wicket-date.js, in functions substituteDate and parseDate.

I know this might be duplicate of WICKET-2427 and WICKET-2375, but apparently this hasn't been properly fixed yet.",,,,,,,,,,,,,,,,,,,,,,18/Apr/11 20:25;akiraly;fix-WICKET-3598-1-locale.patch;https://issues.apache.org/jira/secure/attachment/12476647/fix-WICKET-3598-1-locale.patch,19/Apr/11 11:42;akiraly;fix-WICKET-3598-2-js-date-format-parse.patch;https://issues.apache.org/jira/secure/attachment/12476721/fix-WICKET-3598-2-js-date-format-parse.patch,12/Apr/11 16:10;bitstorm;issue3598.zip;https://issues.apache.org/jira/secure/attachment/12476131/issue3598.zip,21/Apr/11 13:52;akiraly;unit-WICKET-3598-1-locale.patch;https://issues.apache.org/jira/secure/attachment/12477005/unit-WICKET-3598-1-locale.patch,19/Apr/11 11:42;akiraly;wicket-3598.zip;https://issues.apache.org/jira/secure/attachment/12476722/wicket-3598.zip,,,,5.0,,,,,,,,,,,,,,,,,,,2011-04-05 18:31:45.677,,,no_permission,,,,,,,,,,,204366,,,Wed Apr 27 08:27:10 UTC 2011,,,,,,0|i0kajr:,116526,,,,,,,,05/Apr/11 18:31;mgrigorov;can you provide an application that shows the problems? thanks!,09/Apr/11 18:48;mgrigorov;I haven't tried to reproduce the problem but I remember similar issues because the user used Java's DateFormat symbols for the pattern while actually the calendar expects its own ones (JavaScript). Check YUI Calendar to see whether they are the same as Java's ones.,"12/Apr/11 16:09;bitstorm;hi!

I've attached a quickstart which shows the problems. As soon as I can I will investigate further.",12/Apr/11 16:11;bitstorm;If you wanna test my quickstart just run jetty via Maven as usual . ,"18/Apr/11 20:25;akiraly;I am confirming that there are bugs in DatePicker & co. I just tried to reproduce this and already found 2. I used 1.5 so 1.4 is not the only affected branch.

1. I am attaching fix-WICKET-3598-1-locale.patch (against 1.5 trunk): o.a.w.datetime.StyleDateConverter is not honoring locale settings when converting Date to String. It is an easy fix the same modification is already present in the PatternDateConverter sibling class.

2. I am attaching a slightly modified example project (because I could not reproduce with the original): wicket-3598.zip. Steps to repro (assuming the fix for the first bug was applied):

- compile, deploy it to servlet container
- go to homepage. You should see ""Oct 25, 2010"" in the textfield
- open datepicker and just click on the selected/highlighted date (it should be Oct 25, 2010). The value in the textfield will change to ""10 25, 2010"" which is not correct

As far as I see the bug behind this is the following:
- YUI Calendar does not deal with date patterns at all
- wicket-date.js is doing the converting in parseDate (String -> Date) and substituteDate (Date -> String).
- wicket-date.js can only deal with the number formats (S- style) and not with the others (M-, L-, F-).





","19/Apr/11 11:42;akiraly;Attaching second patch against 1.5 trunk (fix-WICKET-3598-2-js-date-format-parse.patch) that adds date formatting/parsing to wicket-date.js for the missing styles: M-, L-, F-.

Probably both patches can easily be backported to 1.4 too however the second patch changes some js function signatures in wicket-date.js so if that qualifies for API break then it is a no go.

Attaching the example app I used for testing the two patches (wicket-3598.zip).

I tested most combinations of the followings:
locale: US, German, Hungarian
style: S-, M-, L-, F-
browsers: Chrome 10, FF 4, IE 6, 8, 9, Opera 11.10",21/Apr/11 13:52;akiraly;Attaching a patch with a unit test about the first bug. Fails with trunk passes with first fix.,"21/Apr/11 14:30;mgrigorov;Attila's patches are applied to 1.5.x.
The first one is small so I don't mind to port it to 1.4.x, but the second one is rather big and I don't want to compromise 1.4.x stability at this point.
There are several other improvements in wicket-datetime which are only in 1.5.x anyway. ","27/Apr/11 08:27;jrogoznicki;Sorry 'bout not posting the quickstart before and not really helping you with this, I just had LOTS of work to do. Thank you for fixing the bug, I might check the fix later.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component#getMarkupId() throws exceptions when not added to page yet,WICKET-3647,12505212,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,dashorst,dashorst,26/Apr/11 15:56,26/Apr/11 16:04,13/Mar/19 23:17,26/Apr/11 16:04,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"When retrieving the markup ID for a component that has not yet been added to a page, Wicket currently throws an exception telling that the markup could not be found, or that the markup type (in case the component was added to a Panel) could not be determined. In 1.4, Wicket would generate a markup ID in these cases.

Proposed solution: to first see if a markup ID has been either generated or set (using setOutputMarkupId), and then returning that, or if no ID was yet available *and* the component has been added to a Page: use the ID from the markup, or if the component has not been added to a Page nor a markup ID: generate the ID.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204409,,,Tue Apr 26 16:04:20 UTC 2011,,,,,,0|i0kae7:,116501,,,,,,,,"26/Apr/11 16:04;dashorst;I've fixed this issue with a good solution that doesn't break any unit tests. Juergen, could you verify I didn't break any promises about markup ID's? See the unit tests I've committed with this issue for the assumed contract.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inline Javascript evaluated is executed before head contributions are loaded,WICKET-3473,12499464,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jbloemendal,jbloemendal,23/Feb/11 09:57,26/Apr/11 15:28,13/Mar/19 23:17,26/Apr/11 15:28,1.4.15,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC4,,wicket,,,,,,,1,,,,,,,"When a script added to the head loads an external script firefox postpones processing of the following script added to the head. This is a problem, because wicket assumes that head contributions are loaded immediately. So if for example a library is used as a head contribution it will not be loaded for it's actual usage.",Firefox 3.6.13,,,,,,,,,WICKET-3612,,,,,,,,,,,,18/Apr/11 13:15;mgrigorov;WICKET-3473.patch;https://issues.apache.org/jira/secure/attachment/12476608/WICKET-3473.patch,13/Apr/11 19:39;pedrosans;WICKET-3473.patch;https://issues.apache.org/jira/secure/attachment/12476277/WICKET-3473.patch,23/Feb/11 10:38;jbloemendal;WICKET-3473.patch;https://issues.apache.org/jira/secure/attachment/12471724/WICKET-3473.patch,23/Feb/11 09:59;jbloemendal;WICKET-3473_firefox.tar.gz;https://issues.apache.org/jira/secure/attachment/12471718/WICKET-3473_firefox.tar.gz,23/Feb/11 10:16;jbloemendal;WICKET-3473_quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12471721/WICKET-3473_quickstart.tar.gz,,,,5.0,,,,,,,,,,,,,,,,,,,2011-02-23 10:08:13.197,,,no_permission,,,,,,,,,,,204257,,,Mon Apr 18 13:15:36 UTC 2011,,,,,,0|i0kavb:,116578,,,,,,,,23/Feb/11 09:59;jbloemendal;This is standalone firefox issue demonstration,"23/Feb/11 10:08;mgrigorov;Can you give more details ?
The attached ""project"" has no a single line of Wicket code and it is not clear how Wicket is involved.",23/Feb/11 10:16;jbloemendal;The quickstart demonstrates the described issue. ,23/Feb/11 10:38;jbloemendal;Patch is created for wicket 1.4.15,"13/Apr/11 19:39;pedrosans;Append post call handler and notify function from FunctionExecuter to after javascript to be add in header is not working in 1.5.
Basically there are no guarantees of the successfully execution of the script to be add in header, and the notify function may not be called.
The described issue can be fixed by executing post handlers in another thread after set the new header. The attached patch also add try/catch statements to Wicket.Head.addJavascript to turn visible possible exceptions.",18/Apr/11 13:15;mgrigorov;Attach even more cleaned version of Pedro's patch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"UrlRenderer should not always add ""."" to url",WICKET-3641,12505136,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,akiraly,akiraly,25/Apr/11 20:39,26/Apr/11 06:05,13/Mar/19 23:17,26/Apr/11 06:05,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"The fix in WICKET-3337 introduced a bug: now an url to a resource can be rendered differently if the base url changes.
In practice this means that some js files can end up twice in a page DOM.
First with the page load:
""wicket/resource/org.apache.wicket.markup.html.WicketEventReference/wicket-event-ts1303754909421.js""
and
""wicket/resource/org.apache.wicket.ajax.WicketAjaxReference/wicket-ajax-ts1303754909421.js""
Secondly after an ajax event two ""new"" js gets loaded:
""./wicket/resource/org.apache.wicket.markup.html.WicketEventReference/wicket-event-ts1303754909421.js""
and
""./wicket/resource/org.apache.wicket.ajax.WicketAjaxReference/wicket-ajax-ts1303754909421.js""",,,,,,,,,,,,,,,,,,,,,,25/Apr/11 20:41;akiraly;WICKET-3641.patch;https://issues.apache.org/jira/secure/attachment/12477333/WICKET-3641.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-26 06:05:24.591,,,no_permission,,,,,,,,,,,204403,,,Tue Apr 26 06:05:24 UTC 2011,,,,,,0|i0kaf3:,116505,,,,,,,,"25/Apr/11 20:41;akiraly;Attaching patch made for trunk.

Some tests with expected rendered result html need to be updated to pass.",26/Apr/11 06:05;mgrigorov;Fixed with r1096668.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't write session to disk with tomcat : Servlet is destroyed before serialization,WICKET-3470,12499428,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,segfaultmaker,segfaultmaker,23/Feb/11 00:26,19/Apr/11 07:33,13/Mar/19 23:17,18/Mar/11 20:59,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,2,persistent,session,storage,tomcat,,,"Hi,

When I stop my tomcat, I have the following error :
GRAVE: Exception au déchargement des sessions vers le stockage persistant (persistent storage)
java.lang.IllegalStateException: PageManager for application wicket not registered.
	at lm.lbx.application.PersistentPageManager$SessionEntry.getPageStore(PersistentPageManager.java:86)
	at lm.lbx.application.PersistentPageManager$SessionEntry.writeObject(PersistentPageManager.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.catalina.session.StandardSession.writeObject(StandardSession.java:1561)
	at org.apache.catalina.session.StandardSession.writeObjectData(StandardSession.java:1004)
	at org.apache.catalina.session.StandardManager.doUnload(StandardManager.java:528)
	at org.apache.catalina.session.StandardManager.unload(StandardManager.java:469)
	at org.apache.catalina.session.StandardManager.stop(StandardManager.java:678)
	at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4875)
	at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1106)
	at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1106)
	at org.apache.catalina.core.StandardEngine.stop(StandardEngine.java:468)
	at org.apache.catalina.core.StandardService.stop(StandardService.java:604)
	at org.apache.catalina.core.StandardServer.stop(StandardServer.java:788)
	at org.apache.catalina.startup.Catalina.stop(Catalina.java:662)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:629)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)

After a little digging, it's because tomcat first unload the servlet mapping and destroy the servlet, and then, ask for serialization. I'm not sure it's a wiket bug, tell me if i have to report it against tomcat.
Here is the trace of the destroy :

Thread [main] (Suspended (breakpoint at line 357 in PersistentPageManager))	
	PersistentPageManager.destroy() line: 357	
	PageAccessSynchronizer$1(PageManagerDecorator).destroy() line: 86	
	LibellexApplication(Application).internalDestroy() line: 658	
	LibellexApplication(WebApplication).internalDestroy() line: 470	
	WicketFilter.destroy() line: 456	
	ApplicationFilterConfig.release() line: 357	
	StandardContext.filterStop() line: 4106	
	StandardContext.stop() line: 4869	
	StandardHost(ContainerBase).stop() line: 1106	
	StandardEngine(ContainerBase).stop() line: 1106	
	StandardEngine.stop() line: 468	
	StandardService.stop() line: 604	
	StandardServer.stop() line: 788	
	Catalina.stop() line: 662	
	Catalina.start() line: 629	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	Method.invoke(Object, Object...) line: not available	
	Bootstrap.start() line: 289	
	Bootstrap.main(String[]) line: 414	

And the trace requesting serialization :

Thread [main] (Suspended (breakpoint at line 83 in PersistentPageManager$SessionEntry))	
	PersistentPageManager$SessionEntry.getPageStore() line: 83	
	PersistentPageManager$SessionEntry.writeObject(ObjectOutputStream) line: 197	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	Method.invoke(Object, Object...) line: not available	
	ObjectStreamClass.invokeWriteObject(Object, ObjectOutputStream) line: not available	
	ObjectOutputStream.writeSerialData(Object, ObjectStreamClass) line: not available	
	ObjectOutputStream.writeOrdinaryObject(Object, ObjectStreamClass, boolean) line: not available	
	ObjectOutputStream.writeObject0(Object, boolean) line: not available	
	ObjectOutputStream.writeObject(Object) line: not available	
	StandardSession.writeObject(ObjectOutputStream) line: 1561	
	StandardSession.writeObjectData(ObjectOutputStream) line: 1004	
	StandardManager.doUnload() line: 528	
	StandardManager.unload() line: 469	
	StandardManager.stop() line: 678	
	StandardContext.stop() line: 4875	
	StandardHost(ContainerBase).stop() line: 1106	
	StandardEngine(ContainerBase).stop() line: 1106	
	StandardEngine.stop() line: 468	
	StandardService.stop() line: 604	
	StandardServer.stop() line: 788	
	Catalina.stop() line: 662	
	Catalina.start() line: 629	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	Method.invoke(Object, Object...) line: not available	
	Bootstrap.start() line: 289	
	Bootstrap.main(String[]) line: 414	

Well at this time, a simple dirty hack is to bypass destroy chain to avoid  removal of app from managers properties of class PersistentPageManager. But I would like to have a real clean solution.","Windows 7 x64
apache-tomcat-6.0.32-windows-x86
(Running from Eclipse view, Faceted project)",14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-23 08:58:08.256,,,no_permission,,,,,,,,,,,204255,,,Sat Mar 19 19:52:09 UTC 2011,,,,,,0|i0kavr:,116580,,,,,,,,"23/Feb/11 08:58;mgrigorov;Yes, I'm interested to hear what Tomcat developers think about this.
The problem is in StandardContext.stop() - it destroys the filter at line 4869 and later at line 4875 it tries to serialize the data.

I remember Peter Ertl reported similar bug for Jetty which has been fixed in their 7.1.x series - http://jira.codehaus.org/browse/JETTY-1266.",23/Feb/11 09:43;segfaultmaker;I submitted it to tomcat team : https://issues.apache.org/bugzilla/show_bug.cgi?id=50819,23/Feb/11 15:47;markt;The Tomcat developers think this is a Wicket bug. Sessions should not be expired in the Servlet.destroy() method. See section SRV.2.3.4 of the Servlet 2.5 specification for the reason why.,"23/Feb/11 16:08;markt;Re-reading this, I see the Tomcat bug referred to a Servlet whereas Wicket is actually using a Filter. That does change things since the the Servlet specification is less clear on the Filter lifecycle. However, having re-read the section SRV.6 of both the Servlet 2.5 and Servlet 3.0 specifications it appears that containers have a fair amount of leeway in how they initialise and destroy filters. For example, from reading the spec it appears to be specification compliant (although performance would be truly awful) to create and destroy filters per request.

Since the specification offers no guidance on the correct ordering then I am not inclined to change the order for the benefit of a single application. There may well be other applications that depend on the current ordering. Regardless of what applications exist or don't exist that depend on a particular order, if the specification does not define an order then an application should not depend on an order.

I think Wicket would be better off using a ServletContextListener. From section 11.3.4 of the Servlet 3.0. spec ""On application shutdown, listeners are notified in reverse order to their declarations with notifications to session listeners preceding notifications to context listeners. Session listeners must be notified of session invalidations prior to context listeners being notified of application shutdown."". That should ensure the ordering that Wicket requires.","23/Feb/11 19:32;mgrigorov;SefFault can you please create a quickstart application that reproduces the problem and describe the steps to reproduce it.
","23/Feb/11 19:46;segfaultmaker;Basically starting from maven quickstart archetype, make the application inherit from AuthenticatedWebApplication with a dumb session implementation which inherit AuthenticatedWebSession and have a member field.

Start Tomcat
Login on wicket app
Stop Tomcat

I'll made the quickstart application tomorrow, but it's probably reproducible on a wicket session example.","24/Feb/11 21:18;segfaultmaker;Ok, well, my simple test app with session don't raise this bug.... I'll do more investigation this weekend to provide you a test case, sorry not much time before","25/Feb/11 12:06;bitstorm;I've got the same problem after migrating my project from Wicket 1.4.x to 1.5. rc2. When tomcat restart inside Eclipse I get "": PageManager for application wicket not registered. "".
My dev. environment is: Eclispe 3.6, tomcat 6.0.32 on Ubuntu 10.04 64 bit.","27/Feb/11 15:05;mgrigorov;The problem is easy reproducible with wicket-examples.war.
1. Deploy it at Tomcat (I used Tomcat 7.0.8)
2. Play a bit with ""authorization"" example
3. Stop Tomcat
4. The exception is logged in logs/catalina.out

Using ServletContextListener will solve the problem but this would mean that each user application should add this <listener>.
With Servlet API 3.0 it is possible to do it in code with ServletContext.addListener() but this is only for 3.0.

I remember Matej didn't call pageManager.destroy() in Application.internalDestroy() and I added this at one point (Maybe he knew about this problem). If we remove this call again then the only problem I see is that there is no one to clean the static org.apache.wicket.page.PersistentPageManager.managers without using a listener.
Other ideas ?","27/Feb/11 16:40;segfaultmaker;Thanks for reproduction case.

First, I don't know much about servlet api, no more about wicket init mechanism, so I might say stupid things.

To my mind, it's a good idea to map Wicket-App lifecyle to a Servlet lifecycle, not only at destroying time, but at loading time too, because there is no clue about when it will be instantiate, and this make wicket very ""container implementation dependent"". I can't think about concrete case by now to support this idea, but it make sense to me.

I don't see what is the problem with the need to add a <listener> for each app. There is no other way which maintain compatibility with Servlet2.5 ; wicket is just before a brand new release, good time to add this in migration guide, no ? 

"" the only problem I see is that there is no one to clean the static org.apache.wicket.page.PersistentPageManager.managers"" <= maybe a stupid question, but how does this behave in case of many context reloading (for example in developpement mode), is this cleaned up by container ? or this will end up with a PermGen space error ?","28/Feb/11 16:01;mgrigorov;Set ""Fix Version"" to 1.5.0 because we need to solve that before releasing 1.5 final.",28/Feb/11 16:04;mgrigorov;See also http://apache-wicket.1842946.n4.nabble.com/Re-Null-pointer-exception-on-GAE-with-your-initializer-demo-td3328173.html for similar problem in GAE environment (Jetty 6.x).,"17/Mar/11 21:44;mgrigorov;In a brainstorm session in IRC between me and ivaynberg here is our proposal for this problem:

Background:

Servlet containers deserialize persisted sessions before initializing the Servlet Filters (there is a problem reported that GAE (Jetty 6.x) fails to deserialize persisted session because there is no org.apache.wicket.page.PersistentPageManager for an application with name ""XYZ"").
The problem described in this ticket is similar but in the opposite direction: Tomcat destroys WicketFilter and then tries to persist the sessions and PersistentPageManager is no more available. 
Also by Servlet specification the container can destroy a Servlet (it is not clear for Filter but Tomcat manages them the same way) at any time without stopping the whole application and later re-initialize them again. 


Proposed solution:

We need a ServletContextListener (SCL) that will setup the PageManager before the start of WicketFilter and stop it after its destroy.
This SCL will be put in web-fragment.xml in wicket-core.jar and will be used for free for all users which use Servlet 3.0 complaint web containers. Servlet 2.x users will have to add it manually in their web.xml files.

We would like to avoid parsing of web.xml so the SCL to be able to find the name of the Filter and the name of the Application class the setup will look like:

for Application:
        <context-param>
		<param-name>wicket-app-filterName1</param-name>
		<param-value>com.mycompany.MyApp</param-value>
	</context-param>

       <filter>
		<filter-name>wicket-app-filterName1</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
	</filter>


for ApplicationFactory:
        <context-param>
		<param-name>wicket-app-factory-filterName2</param-name>
		<param-value>com.mycompany.MyAppFactory</param-value>
	</context-param>

       <filter>
		<filter-name>wicket-app-factory-filterName2</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
	</filter>

Here 'wicket-app-' and 'wicket-app-factory-' are special prefixes! SCL will iterate over all context parameters and all starting with these special prefixes will be processed.
Later when WicketFilter is being initialized it will parse its filterName like it does it currently and will find its application/applicationFactory class from the servlet context parameters. 

The same logic will be applied for WicketServlet.

Specific parameters like wicket.configuration, or Guice module names, etc. will still be in filter's <init-param>.

Opinions?","18/Mar/11 20:58;mgrigorov;Cross link the ticket with the discussion in dev@:
http://apache-wicket.1842946.n4.nabble.com/HEADS-UP-A-change-in-web-xml-setup-is-required-td3385721.html.

The outcome is that there is no need to create new ServletContextListener. The Page serialization don't need to convert to/from SerializedPage when the Application stops/starts. See the link above for more details.",18/Mar/11 20:59;mgrigorov;Fixed with r1083061,19/Mar/11 19:52;pedrosans;I'm working on a test case for this,,,,,,,,,,,,,,,,,,,,,,,
"Interaction betwen IAjaxRegionMarkupIdProvider, renderPlaceholderTag and visibility",WICKET-3563,12502559,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pjackson,pjackson,28/Mar/11 10:21,18/Apr/11 18:16,13/Mar/19 23:17,18/Apr/11 18:16,1.4.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket,,,,,,,1,,,,,,,"I've just discovered what I think is a bug with
IAjaxRegionMarkupIdProvider. We are using it on a Behavior that provides
a border to form components (label, mandatory marker, etc), which for
the most part works great.

We have encountered a problem when toggling the visibility of a form
component with this behavior via ajax. 

The component is first sent out visible and the markup is all correct.

A change elsewhere on the page causes the component to be set to not
visible and redrawn via ajax. The ajax response contains a tag with a
markupid generated via renderPlaceholderTag. This does not take into
account the  IAjaxRegionMarkupIdProvider behaviour.

Another change happens on the page causing the component to become
visible, and the ajax replace can't happen because the component with
the correct markupId is not present.
",,,,,,,,,,,,,,,,,,,,,,28/Mar/11 10:22;pjackson;fix-WICKET-3563.patch;https://issues.apache.org/jira/secure/attachment/12474767/fix-WICKET-3563.patch,28/Mar/11 10:22;pjackson;markupid.zip;https://issues.apache.org/jira/secure/attachment/12474766/markupid.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204335,,,Mon Mar 28 10:23:07 UTC 2011,,,,,,0|i0kamv:,116540,,,,,,,,"28/Mar/11 10:23;pjackson;I have uploaded a quickstart showing the issue and a patch to the wicket-1.4.x branch that fixes the problem.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket do not test the 'buffer response' property in IRequestCycleSettings when creating the WebResponse in WebApplication,WICKET-3621,12504510,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pedrosans,pedrosans,18/Apr/11 05:27,18/Apr/11 12:58,13/Mar/19 23:17,18/Apr/11 12:58,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,Wicket always create a buffered response. In 1.4 is was configurable.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-18 12:58:45.411,,,no_permission,,,,,,,,,,,204385,,,Mon Apr 18 12:58:45 UTC 2011,,,,,,0|i0kagn:,116512,,,,,,,,18/Apr/11 12:58;mgrigorov;Fixed with r1094553.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IResponseFilter cannot change buffer contents,WICKET-3620,12504493,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,papegaaij,papegaaij,17/Apr/11 17:17,18/Apr/11 05:40,13/Mar/19 23:17,18/Apr/11 05:40,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"Changes to the responseBuffer, passed to an IResponseFilter, are not picked up, nor are newly created AppendingStringBuffer (return value of the method). Both callers of the method invoke it with a copy of the buffer and ignore return values (BufferedWebResponse line 145 and AjaxRequestTarget line 687).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204384,,,2011-04-17 17:17:21.0,,,,,,0|i0kagv:,116513,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DateField is broken,WICKET-3569,12502665,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,jimlars,jimlars,29/Mar/11 06:48,13/Apr/11 21:16,13/Mar/19 23:17,13/Apr/11 21:16,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.extensions.yui.calendar.DateField 
When submitting form with empty date field (null date in model), the model is set to current date.

dateField.getModelObject() return currentDate
dateField.getDate() returns null.

This is a major problem ie in a CompoundPropertyModel where all null dates will be set to currentDate.

Using a DateTextField and adding a DatePicker to this, does not have same problem.






",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-30 13:59:07.293,,,no_permission,,,,,,,,,,,204339,,,Wed Mar 30 13:59:07 UTC 2011,,,,,,0|i0aodj:,60222,,,,,,,,"30/Mar/11 13:59;bitstorm;I think that this behavior is due to the following code lines from class DateTimeField.java

      @Override
	protected void convertInput()
	{
		try
		{
			// Get the converted input values
			Date dateFieldInput = dateField.getConvertedInput();
			Integer hoursInput = hoursField.getConvertedInput();
			Integer minutesInput = minutesField.getConvertedInput();
			AM_PM amOrPmInput = amOrPmChoice.getConvertedInput();

			// Default with ""now""
			if (dateFieldInput == null)
			{
				dateFieldInput = new Date();
			}


but I don't know why ""now"" was chosen as default value.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redirect to Buffer makes one redirect too much,WICKET-3611,12504165,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,13/Apr/11 11:46,13/Apr/11 19:33,13/Mar/19 23:17,13/Apr/11 19:33,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"It seems the default redirect strategy makes one redirect more than needed.
Here is the scenario: there is a page A with a (non-ajax) link that sets page B as response page (setResponsePage(B.class).

In 1.4 this leads to two http requests: 
- one to the A's link listener
- and another redirecting to page B

In 1.5 there are three:
- one to the A's link listener
- another redirecting to page B
- and yet another one again redirecting to B

With ""redirect to render"" strategy in both versions just two requests are issued.",,,,,,,,,,,,,,,,,,,,,,13/Apr/11 11:59;mgrigorov;wicket-3611.tgz;https://issues.apache.org/jira/secure/attachment/12476232/wicket-3611.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204378,,,Wed Apr 13 19:33:46 UTC 2011,,,,,,0|i0kai7:,116519,,,,,,,,13/Apr/11 11:59;mgrigorov;A quickstart that shows the behavior in 1.4.,"13/Apr/11 13:41;mgrigorov;I didn't check how 1.4 actually decides when to redirect but here is the behavior in 1.5 and I find it correct:
- clicking the link leads to link's listener interface (ILinkListener) where we set a new response page (B) - thus the first redirect (to B's mount point or /wicket/bookmarkable/...)
- the second request has currentUrl == ""B's mount path"" and targetUrl again B's mount path. Page B is stateless so there is no really need to redirect (for stateful pages a redirect to ?pageInfo is needed) but since this is Redirect_To_Buffer the page is not written in the response directly and thus the second redirect. The third request is handled by BufferedResponseMapper.


What bothers me is why the redirect strategies don't care about the request method - GET or POST ?","13/Apr/11 19:33;mgrigorov;Re-open it after a talk with Igor in IRC.
There is no need to redirect to buffer if fromUrl and toUrl are the same.",13/Apr/11 19:33;mgrigorov;Fixed with r1091894.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket-ajax.js replaceOuterhtmlIE() fails when the page title has to be updated with Ajax,WICKET-3606,12503903,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,11/Apr/11 08:00,12/Apr/11 17:11,13/Mar/19 23:17,12/Apr/11 15:19,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket,,,,,,,0,,,,,,,"If the page title is a component in the hierarchy, i.e.
.html:
<title wicket:id=""title"">...</title>
.java:
final Label title = new Label(""title"", someModel);

and we try to update the 'title' with Ajax then replaceOuterhtmlIE() will fail when trying to set title's element outerHTML to """" (line 284) because outerHTML is read-only for title and several other elements (http://msdn.microsoft.com/en-us/library/aa752326(v=vs.85).aspx).",IE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-11 11:39:02.508,,,no_permission,,,,,,,,,,,204373,,,Tue Apr 12 17:11:31 UTC 2011,,,,,,0|i0kain:,116521,,,,,,,,"11/Apr/11 11:39;pedrosans;Hi Martin, some times removing the component from DOM, recreate it, add in DOM again works. If it is not the case, Wicket can warn on console a message explaining that the title component will not be replaced.","11/Apr/11 11:41;mgrigorov;Hi Pedro.

I use locally this patch:


Index: wicket-core/src/main/java/org/apache/wicket/ajax/wicket-ajax.js
===================================================================
--- wicket-core/src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(revision 1090954)
+++ wicket-core/src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(working copy)
@@ -206,7 +206,12 @@
 			Wicket.Log.error(""Wicket.replaceOuterHtmlIE: "" + e + "": eval -> "" + script);
 		}
 		return;
-	}  
+	} else if (element.tagName == ""TITLE"") {
+		// match the text between the tags 
+		var titleText = />(.*?)</.exec(text)[1];
+		document.title = titleText;
+		return;
+	}
 	
 	var parent = element.parentNode;
 	var tn = element.tagName;
@@ -276,7 +281,9 @@
 	if(element.style.backgroundImage)
 		element.style.backgroundImage = """";
 	parent.removeChild(element);
-	element.outerHTML = """";	
+	try {
+		element.outerHTML = """";
+	} catch (ignore) {}
 	element = """";

and it solves the problem.
I welcome for better solutions!","11/Apr/11 11:54;pedrosans;And if Wicket provided a title component, improving framework abstraction of HTML?

class Title extends WebComponent{
public void updateAsynchronously(target){
target.appendJavaScript(""document.title = '""+getModelValue()+""';"");
}}","11/Apr/11 11:55;isammoc;Is using ""=="" ok ?
Don't we have to use equals method instead ?

More with the subject, is it allways in upper case ?","11/Apr/11 11:59;mgrigorov;@Pedro: this is OK, but what to do when the user does like I pasted above? currently wicket-ajax.js just breaks for IE.
We will have to explain in the mailing lists or close tickets here with: use Title component instead of <title wicket:id>

@Isammoc: this is Javascript, not Java.",11/Apr/11 12:45;pedrosans;User can always extend Wicket and ignore its abstractions in benefit of his own style. But isn't his responsibility to address possible problems in this case?,"11/Apr/11 12:52;mgrigorov;I am not sure you understood me.

What will happen if the user uses:
.html: 
<title wicket:id=""title"">...</title> 
.java: 
final Label title = new Label(""title"", someModel); 

instead of o.a.w.markup.html.Title, the new component that you suggest (e.g. because she doesn't know about it)
?

Answer: she will face the problem this ticket is about.","11/Apr/11 12:59;isammoc;Perhaps put in javadoc what kind of tag Label can handle ?
Like span, div, input, etc... but not title.

Why not redirect with a @see tag to the new Title component ?

2011/4/11 Martin Grigorov (JIRA) <jira@apache.org>

","11/Apr/11 13:28;pedrosans;Yes, I'm not against maintain this error followed by a warning explaining that title tag can't be touched in DOM, and rather than try to re-render the title component by adding it in AJAX request target, user needs to respond the javascript line changing the title text.",12/Apr/11 05:34;ivaynberg;i like martin's patch that checks if the dom elementis <title> and uses js to update it. its clean and transparent.,12/Apr/11 15:19;mgrigorov;Improved with r1091451 (trunk) and r1091458 (1.4.x).,"12/Apr/11 15:24;pedrosans;Transparency is good, tweak the replaceOuterHtmlIE to do other than 'replace outer html' gave me the impression of 'protecting' user from the HTML world, rather than provide a correspondent abstraction.
Thinking better, we are already doing it: making third complexity transparent to Wicket users. In the checkbox#setRequerid thread on ML, community voted forward a behavior that makes transparent the HTTP weirdness.","12/Apr/11 17:11;ivaynberg;it is still replacing the other html. its just that it needs to do it in a special way when it comes to the [title] tag. it is already handling other special cases such as replacing [tr]s, etc.",,,,,,,,,,,,,,,,,,,,,,,,,,
EnclosureContainer should honor relevantChild.determineVisibility,WICKET-3586,12503132,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,sludwig,sludwig,01/Apr/11 13:31,09/Apr/11 13:36,13/Mar/19 23:17,09/Apr/11 13:36,1.4.16,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC3,,wicket,,,,,,,0,core,visibility,,,,,"The EnclosureContainer calls isVisible() on the relevant child Component to determine whether the content should be visible or not.

However, in the Component API, visibility is not only defined by isVisible(). There are also the methods isVisibilityAllowed() and isRenderAllowed(). The method determineVisibility() is a summary and yields the overall result whether a Component should be visible or not.

The EnclosureContainer should honor relevantChild.determineVisibility().


In our project a problem occurs because on the relevantChild, we use setVisibilityAllowed(false) to make it invisible, but the EnclosureContainer, or should I say its other contents, remain visible, which we did not expect.
",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-09 13:36:58.526,,,no_permission,,,,,,,,,,,204355,,,Sat Apr 09 13:36:58 UTC 2011,,,,,,0|i0kal3:,116532,,,,,,,,09/Apr/11 13:36;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket frame example shows empty frames,WICKET-3573,12502707,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,pedrosans,pedrosans,29/Mar/11 12:37,04/Apr/11 19:37,13/Mar/19 23:17,04/Apr/11 19:37,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket-examples,,,,,,,0,,,,,,,"Simple to reproduce, just open http://localhost:8080/frames/",Reproduced both in IE and Chrome,,,,,,,,,,,,,,,,,,,,,01/Apr/11 13:34;pedrosans;WICKET-3573.patch;https://issues.apache.org/jira/secure/attachment/12475219/WICKET-3573.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-01 14:21:10.245,,,no_permission,,,,,,,,,,,204342,,,Mon Apr 04 19:35:06 UTC 2011,,,,,,0|i0kalz:,116536,,,,,,,,"01/Apr/11 13:34;pedrosans;Frame sources in the wicket examples were hardcoded in the HTML. IMO we were missing a core component for frames, so I'm trying to resolve this ticket introducing the Frame component.",01/Apr/11 14:21;dashorst;I'd rather we deprecate the usage of frames altogether. They're not part of HTML5 as well.,"02/Apr/11 00:18;pedrosans;What about we remove frames example? Also an option. I will change the patch to use ExampleFrame instead of Frame and commit, after we decide about maintain the example.","03/Apr/11 11:03;mgrigorov;No one needed Frame until now so I think we can live without it.
I vote for ExampleFrame in wicket-examples that will be used just for this example.","04/Apr/11 19:35;pedrosans;Fixed with r1088743
As using ExampleFrame component the example are working, we can close this ticket. 
About deprecate the usage of frames, we can simple drop everything under org.apache.wicket.examples.frames package. I have no objections.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ResourceLink uses the wrong PageMap, if used as a PopupLink",WICKET-3575,12502713,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,osiefart,osiefart,29/Mar/11 13:34,04/Apr/11 12:28,13/Mar/19 23:17,04/Apr/11 12:28,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket,,,,,,,0,PageMap,Popup,ResourceLink,,,,"If a ResourceLink is used with PopupSettings (in our case a custom PdfPopupLink) the target page is created in the main pagemap (name=null) and not in the pagemap from the PopupSettings. This is caused by not calling the isLinkClicked()-Method from the onResourceRequested()-Method in the ResourceLink-Class. The PageMap-Name is not set to the RequestParameters and so wicket uses the main pagemap.

If using an AccessStackPageMap the WebRequestCycleProcessor will now ignore every AjaxRequest from the original page, because the original page is no longer on top of the access stack.

Solution: calling onLinkClicked() instead of onClick in onResourceRequested()-Method of the ResourceLink","Mac Os / Windows, tomcat 5.5, Java 5",900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204344,,,2011-03-29 13:34:13.0,,,,,,0|i0kalr:,116535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AppendingStringBuffer.append(StringBuilder, int, int) interprets length as stopIndex",WICKET-3588,12503151,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,almond,almond,01/Apr/11 16:26,03/Apr/11 17:06,13/Mar/19 23:17,03/Apr/11 17:06,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"I got a StringIndexOutOfBoundsException while submitting Ajax from Wicket. It points to AppendingStringBuffer:508.

The method StringBuilder.getChar expects the arguments (startIndex, stopIndex, buffer, count)
AppendingStringBuilder provides (startIndex, length, buffer, count) => better use startIndex + length instead of length",any,,,,,,,,,,,,,,,,,,,,,01/Apr/11 16:27;almond;stacktrace.txt;https://issues.apache.org/jira/secure/attachment/12475235/stacktrace.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-03 17:06:29.841,,,no_permission,,,,,,,,,,,204357,,,Sun Apr 03 17:06:29 UTC 2011,,,,,,0|i0kakn:,116530,,,,,,,,01/Apr/11 16:27;almond;Attachment is the stacktrace indicating the exception,03/Apr/11 17:06;mgrigorov;Fixed with r1088337.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InspectorPage's RequestPage doesn't properly print the collected data,WICKET-3587,12503134,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,01/Apr/11 13:32,01/Apr/11 13:35,13/Mar/19 23:17,01/Apr/11 13:35,1.4.17,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket-devutils,,,,,,,0,,,,,,,"RequestsPage has the following code:
item.add(new Label(""alteredObjects"", new Model<String>(rd.getAlteredObjects()))).setEscapeModelStrings(false);

while it should be
item.add(new Label(""alteredObjects"", new Model<String>(rd.getAlteredObjects())).setEscapeModelStrings(false));

i.e. the label should not escape its model object.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204356,,,2011-04-01 13:32:30.0,,,,,,0|i0kakv:,116531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mapping ResourceReferences to Urls is slow,WICKET-3511,12500583,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mbrictson,mbrictson,06/Mar/11 22:00,31/Mar/11 16:13,13/Mar/19 23:17,31/Mar/11 16:13,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,1,,,,,,,"PackageResourceReference is often used for stylesheets and JavaScript resources, many of which can appear on a typical page (WicketAjaxReference is one common example). Every time the page is rendered, these resources are mapped to urls in order to build the appropriate <link href=""...""> or <script src=""...""> tags.

The trouble is that this mapping process is extremely inefficient. To map a ResourceReference to a url, ResourceReference#getLastModified() must be consulted for FilenameWithTimestampResourceCachingStrategy, and ResourceReference#getUrlAttributes() is called to append appropriate query parameters.

In PackageResourceReference, both of these methods delegate to the very expensive PackageResourceReference#lookupStream(), which makes several attempts to locate the underlying file or classpath item using various permutations of locale, style, and variation. Each of these attempts involves I/O. The default ResourceStreamLocator, which does the actual file and classpath queries, does no caching whatsoever.

On a trivial Wicket page containing 7 total PackageResourceReferences for images, stylesheets and JavaScript files, the average response time in my tests was 211 ms. The vast majority of that time was spent in ResourceStreamLocator, due to the expensive steps described above.

It seems that putting caching at the ResourceStreamLocator would be extremely beneficial. I am attaching a simple implementation. With caching enabled in ResourceStreamLocator, the response time of my test page dropped from 211 ms to 49 ms.
",,,,,,,,,,,,,,,,,,,,,,06/Mar/11 22:00;mbrictson;CachingResourceStreamLocator.java;https://issues.apache.org/jira/secure/attachment/12472790/CachingResourceStreamLocator.java,10/Mar/11 07:13;mgrigorov;WICKET-3511.patch;https://issues.apache.org/jira/secure/attachment/12473242/WICKET-3511.patch,09/Mar/11 19:03;mgrigorov;WICKET-3511.patch;https://issues.apache.org/jira/secure/attachment/12473174/WICKET-3511.patch,08/Mar/11 19:45;mgrigorov;WICKET-3511.patch;https://issues.apache.org/jira/secure/attachment/12473032/WICKET-3511.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-03-08 19:45:30.001,,,no_permission,,,,,,,,,,,204291,,,Thu Mar 31 16:13:08 UTC 2011,,,,,,0|i0kaqn:,116557,,,,,,,,"08/Mar/11 19:45;mgrigorov;Here is a bit lighter version from me.
Indeed the Wicket tests run 10 secs less here.
If my patch doesn't take away the benefit for your app then I'll update the javadoc and commit it.

Thanks!","08/Mar/11 20:21;mbrictson;Martin, I tested your patch and it yields the same performance benefit. Looks good to me. Thanks!","08/Mar/11 23:19;ivaynberg;i think it may make more sense to handle this outside the hierarchy of IResourceStreamLocator, something like IResourceStreamCache that would have its own getter/setter.

otherwise all custom resource stream locators would have to wrap themselves in caching decorators or build caching on their own, which seems a waste since caching is very much orthogonal in this case.","09/Mar/11 19:03;mgrigorov;A better implementation which may be used with any kind of IResourceStreamLocator implementation.


org.apache.wicket.settings.def.ResourceSettings.getResourceStreamLocator() is called from many places and introducing IResourceStreamCache would not be that simple.

What do you think ?","09/Mar/11 19:46;ivaynberg;i guess we can live with it in 1.5. i dont think many people implement custom ones anyways...we should add a big javadoc to the setter letting people know to wrap their stuff in the caching decorator. also i think settings should keep a copy of the original so that get will return the naked one, not the caching decorator one.","09/Mar/11 19:57;ivaynberg;of course the above doesnt make sense, unless we add another getter...not sure. might be too much. i think the javadoc should be enough.","09/Mar/11 20:00;mbrictson;Martin, I don't think your latest patch accomplishes what I was originally setting out to do with the cache. The most time consuming operations are the multiple calls that PackageResourceReference makes to locate(Class<?>, String, String, String, Locale, String, boolean). For the sake of discussion let's call that method ""complex locate"". By subclassing ResourceStreamLocator and overriding the simpler locate(Class<?>, String) (let's call it ""simple locate"", we are taking advantage of the fact that ResourceStreamLocate internally delegates to the simple locate method in order to implement the complex one.

So for example, calling the complex locate may internally involve many calls to the simple locate. By overriding the simple locate and putting caching there, we therefore get caching for both methods.

However this approach (that is, putting caching on just the simple locate()) will not work as a decorator pattern. Therefore the decorator needs to implement caching for both the simple and complex locate method in order to be effective.","09/Mar/11 20:04;mbrictson;Also, I should point out that adding caching like this may frustrate developers running their app in development mode: they might not be able to add localized resources to the app on the fly, since those resources could already be cached as ""not found"". They will potentially need to restart the app in order to flush the cache and pick up new resources.

Perhaps we should only apply the decorator in deployment mode?",10/Mar/11 01:13;pete;+1 for the disabling in development mode,10/Mar/11 07:13;mgrigorov;A patch that uses the caching only in deployment mode.,"10/Mar/11 07:21;mgrigorov;Matt, I see my mistake. Indeed the caching doesn't work with my latest patch. I'll think it.","10/Mar/11 19:23;mgrigorov;See r1080326 in trunk.
If you think it is ok then we may port it to 1.4.x too.","10/Mar/11 19:53;mgrigorov;Oh, working late is not very productive.
Caching misses is broken. Will improve it soon.","10/Mar/11 20:25;ivaynberg;im wondering why this isnt a problem in 1.4, maybe that already has caching in place that we lost with the rewrite of this portion of code. if you have time to research i would love to know the details.","13/Mar/11 19:15;mgrigorov;With r1081200 the broken caching for misses is fixed.

Matt can you verify that everything is as supposed now ?
Also can you make the same measurements for Wicket 1.4. I guess we need to merge this improvement there as well.
Thanks!","14/Mar/11 17:55;mbrictson;Martin, I tested your latest changes in trunk and they work great.

I don't think this needs to be merged into Wicket 1.4.x since the performance isn't a problem there. From what I can tell, ResourceReferences in Wicket 1.4. are resolved and cached upon first access, which minimizes the number of times ResourceStreamLocator is used.",31/Mar/11 16:13;mgrigorov;Close as fixed in RC3 which will be announced soon.,,,,,,,,,,,,,,,,,,,,,,
Wrong exception type when readResolve fails.,WICKET-3548,12502153,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lhunath,lhunath,23/Mar/11 09:32,27/Mar/11 20:04,13/Mar/19 23:17,27/Mar/11 20:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,,,,,,,,0,,,,,,,"When readResolve in LazyInitProxyFactory fails because the type cannot be found, it dumps the real exception (ClassNotFoundException) and instead throws another one:

				throw new InvalidClassException(type, ""could not resolve class ["" + type +
					""] when deserializing proxy"");

The InvalidClassException is an invalid exception to throw in this case.  Ref. the JavaDoc for this exception:

 * Thrown when the Serialization runtime detects one of the following
 * problems with a Class.
 * <UL>
 * <LI> The serial version of the class does not match that of the class
 *      descriptor read from the stream
 * <LI> The class contains unknown datatypes
 * <LI> The class does not have an accessible no-arg constructor
 * </UL>

The error is not caused by the type class being outdated, containing unknown datatypes or having no no-arg constructor.  The developer is mislead into thinking the problem is actually something else.

Additionally, the real cause is masked and the real exception (found in ""e""), is thrown away.  Instead, this method should throw a RuntimeException passing e as the cause.  Perhaps RuntimeException itself or an InvalidStateException.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-27 08:46:15.521,,,no_permission,,,,,,,,,,,204320,,,Sun Mar 27 10:19:39 UTC 2011,,,,,,0|i0kao7:,116546,,,,,,,,"27/Mar/11 08:46;mgrigorov;The fix broke the build and several tests.
Needs another implementation.","27/Mar/11 10:19;mgrigorov;org.apache.wicket.util.lang.Objects.resolveClass(String) is used only by LazyInitProxyFactory in 1.4 and thus there are no breaks.
In 1.5 WicketObjects.resolveClass(String, Application) is used from many other places and throwing the exception breaks the build and many tests.
I reverted the change in 1.5 and implemented it another way.
@Igor: please review and either close the ticket, or add a comment or modify it. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultJavascriptCompressor broken jquery v1.5.1 minified file,WICKET-3519,12500896,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dutrieux,dutrieux,09/Mar/11 14:48,27/Mar/11 06:17,13/Mar/19 23:17,27/Mar/11 06:17,1.4.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,wicket,,,,,,,1,javascript,jquery,wicket,,,,"Hello,

The DefaultJavascriptCompressor broken jquery v1.5.1 Minified file:

text/javascript"",""*"":""*/*""},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:""responseXML"",text:""responseText""},converters:{""* text"":a.String,""text html"":!0,""text json"":d.parseJSON,""text xml"":d.parseXML}},ajaxPrefilter:bM(bH),ajaxTransport:bM(bI),ajax:function(a,c){function v(a,c,l,n){if(r!==2){r=2,p&&clearTimeout(p),o=b,m=n||"""",u.readyState=a?4:0;var q,t,v,w=l?bP(e,u,l):b,x,y;if(a>=200&&a<300||a===304){if(e.ifModified){if(x=u.getResponseHeader(""Last-Modified""))d.lastModified[k]=x;if(y=u.getResponseHeader(""Etag""))d.etag[k]=y}if(a===304)c=""notmodified"",q=!0;else try{t=bQ(e,w),c=""success"",q=!0}catch(z){c=""parsererror"",v=z}}else{v=c;if(!c||a)c=""error"",a<0&&(a=0)}u.status=a,u.statusText=c,q?h.resolveWith(f,[t,c,u]):h.rejectWith(f,[u,c,v]),u.statusCode(j),j=b,s&&g.trigger(""ajax""+(q?""Success"":""Error""),[u,e,q?t:v]),i.resolveWith(f,[u,c]),s&&(g.trigger(""ajaxComplete"",[u,e]),--d.active||d.event.trigger(""ajaxStop""))}}typeof a===""object""&&(c=a,a=b),c=c||{};var e=d.ajaxSetup({},c),f=e.context||e,g=f!==e&&(f.nodeType||f instanceof d)?d(f):d.event,h=d.Deferred(),i=d._Deferred(),j=e.statusCode||{},k,l={},m,n,o,p,q,r=0,s,t,u={readyState:0,setRequestHeader:function(a,b){r||(l[a.toLowerCase().replace(bD,bE)]=b);return this},getAllResponseHeaders:function(){return r===2?m:null},getResponseHeader:function(a){var c;if(r===2){if(!n){n={};while(c=bt.exec(m))n[c[1].toLowerCase()]=c[2]}c=n[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){r||(e.mimeType=a);return this},abort:function(a){a=a||""abort"",o&&o.abort(a),v(0,a);return this}};h.promise(u),u.success=u.done,u.error=u.fail,u.complete=i.done,u.statusCode=function(a){if(a){var b;if(r<2)for(b in a)j[b]=[j[b],a[b]];else b=a[u.status],u.then(b,b)}return this},e.url=((a||e.url)+"""").replace(bs,"""").replace(bx,bK[1]+""//""),e.dataTypes=d.trim(e.dataType||""*"").toLowerCase().split(bB),e.crossDomain||(q=bF.exec(e.url.toLowerCase()),e.crossDomain=q&&(q[1]!=bK[1]||q[2]!=bK[2]||(q[3]||(q[1]===""http:""?80:443))!=(bK[3]||(bK[1]===""http:""?80:443)))),e.data&&e.processData&&typeof e.data!==""string""&&(e.data=d.param(e.data,e.traditional)),bN(bH,e,c,u);if(r===2)return!1;s=e.global,e.type=e.type.toUpperCase(),e.hasContent=!bw.test(e.type),s&&d.active++===0&&d.event.trigger(""ajaxStart"");if(!e.hasContent){e.data&&(e.url+=(by.test(e.url)?""&"":""?"")+e.data),k=e.url;if(e.cache===!1){var w=d.now(),x=e.url.replace(bC,""$1_=""+w);e.url=x+(x===e.url?(by.test(e.url)?""&"":""?"")+""_=""+w:"""")}}if(e.data&&e.hasContent&&e.contentType!==!1||c.contentType)l[""Content-Type""]=e.contentType;e.ifModified&&(k=k||e.url,d.lastModified[k]&&(l[""If-Modified-Since""]=d.lastModified[k]),d.etag[k]&&(l[""If-None-Match""]=d.etag[k])),l.Accept=e.dataTypes[0]&&e.accepts[e.dataTypes[0]]?e.accepts[e.dataTypes[0]]+(e.dataTypes[0]!==""*""?"", */*; q=0.01"":"""")

become :

text/javascript"",""*"":""**; q=0.01"":"""")

I think is due to the /* ...  */ on the javascript file and is interpreted by stripCommentsAndWhitespace as a comment.

Best regards

",windows 7 x64,,,,,,,,,,,,,,,,,,,,,21/Mar/11 19:04;rabam;JQueryCompressionTest.java;https://issues.apache.org/jira/secure/attachment/12474214/JQueryCompressionTest.java,09/Mar/11 14:49;dutrieux;jquery-1.5.1.min.js;https://issues.apache.org/jira/secure/attachment/12473132/jquery-1.5.1.min.js,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-03-15 07:13:59.329,,,no_permission,,,,,,,,,,,204297,,,Fri Mar 25 22:44:46 UTC 2011,,,,,,0|i0kapz:,116554,,,,,,,,15/Mar/11 07:13;mgrigorov;Why you are trying to minify a minified file in first place ?,"21/Mar/11 18:42;rabam;Hi there,

we also experienced this problem with Wicket 1.4.15.
We found out that the JavascriptStripper did not recognize the regular expression in the boolean expression (xx && !/!=/) which is used in jquery-1.5.1 prior to the comment which is described above.

Actually the regular expression is recognized at the second slash. Therefore the parsing breaks because the regex is not terminated correctly and ugly things happen (like the expression getting terminated by ""*/*"". A much more shorter example would be:

   var test = function () {
   var c = ""!="";
    /* from jquery 1.5.1 */
    if ( !l.match.PSEUDO.test(c) && !/!=/.test(c)) {
       alert(""/something bad will happen */* "");
   }

     var importantFunction = function () {alert(""really important function "")}
   /*
     This code will be stripped
   */

}

 Result of the stripping is:

 var test = function () {
var c = ""!="";

if ( !l.match.PSEUDO.test(c) && !/!=/.test(c)) {
       alert(""/something bad will happen *
}

My idea is to modify the stripper to recognize the regular expression that way.

diff --git a/wicket-core/src/main/java/org/apache/wicket/util/string/JavaScriptStripper.java b/wicket-core/src/main/java/org/apache/wicket/util/string/JavaScriptStripper.java
index d31ae36..10b1aa6 100644
--- a/wicket-core/src/main/java/org/apache/wicket/util/string/JavaScriptStripper.java
+++ b/wicket-core/src/main/java/org/apache/wicket/util/string/JavaScriptStripper.java
@@ -130,7 +130,7 @@ public class JavaScriptStripper
                                                        continue;
                                                }
                                                if (tmp == '=' || tmp == '(' || tmp == '{' || tmp == ':' || tmp == ',' ||
-                                                       tmp == '[' || tmp == ';')
+                                                       tmp == '[' || tmp == ';'  || tmp == '!')
                                                {
                                                        state = REG_EXP;
                                                        break;

",21/Mar/11 19:02;rabam;Junit Test which will fail according to this issue,21/Mar/11 19:04;rabam;Test which will fail according to this issue,"25/Mar/11 22:44;rabam;Could someone please look at this thing here, because i think it's a major thing which should be fixed soon and easily. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mounting @RequireHttps-annotated page after HttpsMapper instantiation ignores @RequireHttps annotation,WICKET-3560,12502453,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zwiep,zwiep,26/Mar/11 13:32,27/Mar/11 05:20,13/Mar/19 23:17,27/Mar/11 05:20,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,,,,,,,,0,,,,,,,"Attached quickstart.

Create a page, annotate it with @RequireHttps
First instantiatie HttpsMapper
Then mount the page.

As a result, the page will not be recognized as an annotated page - links will render to http, and no redirection will take place when accessing.


The workaround is simple, just instantiate the HttpsMapper last - maybe this is not a bug..
However a warning or a check would help a lot. Maybe it shouldn't happen at all, and this is really a bug. 








",,,,,,,,,,,,,,,,,,,,,,26/Mar/11 13:33;zwiep;httpsswitcher.tar.gz;https://issues.apache.org/jira/secure/attachment/12474701/httpsswitcher.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-27 05:20:53.522,,,no_permission,,,,,,,,,,,204332,,,Sun Mar 27 05:20:53 UTC 2011,,,,,,0|i0kanb:,116542,,,,,,,,27/Mar/11 05:20;ivaynberg;added note to javadoc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component#onInitialize is broken for Pages,WICKET-3218,12491908,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,cmenzel,cmenzel,02/Dec/10 17:55,26/Mar/11 05:46,13/Mar/19 23:17,26/Mar/11 05:45,1.4.14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"As first mentioned at http://mail-archives.apache.org/mod_mbox/wicket-dev/201012.mbox/%3C1291238699.1749.1408166705@webmail.messagingengine.com%3E , I think the current (Wicket 1.4.14) implementation of Component#onInitialize is broken for Pages. Pages get initialized as soon as the first component is added, which is correct. But this usually happens within the constructor of the page, which means that the page object isn't fully initialized yet. The entire point of having onInitialize, however, is to be able to do further work once all constructors have run. See https://github.com/duesenklipper/wicket-oninitialize for a quickstart that demonstrates the problem.

Pedro Santos suggested in the above thread to just switch the entire object construction to onInitialize. I don't think this is a good idea, because
1) it is completely counter-intuitive
2) it is not always realistic to have an entire class hierarchy not using the constructor just because a subclass somewhere might want to use onInitialize
3) it is inconsistent with onInitialize behavior for all other (non-Page) components. Here I can easily mix work in the constructor with onInitialize.

I propose the following patch:
- override onInitialize in Page and make it final, so Pages can't use this any more. This should not cause any unnecessary breaking, since currently it's not working for pages anyway.
- introduce Page#onPageInitialize to provide a safe alternative to onInitialize
- make a special case for Page in Component's beforeRender to fire Page#onPageInitialize if necessary

Yes, this is a bit of special casing for Page, but there's quite a lot of that needed for Page anyway. I think the impact of this should be minimal.

My page includes documentation and a new testcase that verifies the new behavior. I modified the old ComponentInitializationTest to reflect the fact that Page doesn't get onInitialize any more.",,,,,,,,,,,,,,,,,,,,,,03/Dec/10 13:02;cmenzel;0001-delay-oninitialize-until-just-before-onconfigure.patch;https://issues.apache.org/jira/secure/attachment/12465231/0001-delay-oninitialize-until-just-before-onconfigure.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-03 02:05:47.517,,,no_permission,,,,,,,,,,,204029,,,Sat Mar 26 05:46:13 UTC 2011,,,,,,0|i0dbwn:,75858,,,,,,,,02/Dec/10 17:56;cmenzel;A patch against Wicket 1.4.14 that does what I outlined in the bug description. Includes appropriate test cases.,03/Dec/10 02:05;ivaynberg;removed patch - no good - parent should be initialized before child - patch broke that for pages.,"03/Dec/10 12:47;cmenzel;Ok, you are right about that. I missed that. After your comment on the dev list that the whole initialization thing could be moved back to before configure(), I started on a different patch. The main concern for me is still that I need to be able to have an initialize step that is guaranteed to run after the constructors.","03/Dec/10 13:02;cmenzel;A new attempt at resolving this.

I moved the call to initialize() into internalBeforeRender(), since unlike configure() this can't be triggered by framework users.

Components that are added before the Page itself has been initialized now are now simply initialized with the cascading fireInitialize() when the Page gets its initialize call. Components that are added after that will be initialized by Page#componentAdded.
This way the initialization order is guaranteed to follow the component hierarchy.

IMO, this restores a consistent and intuitive behavior for onInitialize for *all* components including Pages, without breaking any existing code.

I adjusted ComponentInitializationTest to always use tester.startPage, since initialization is no longer triggered by add(). The tests that still made sense in this light still work. testPropagation was removed, since there is no immediate propagation anymore, and eventual propagation down the component tree is included in testInitializationOrder.

One thing I'm not so happy about: I needed to distinguish between ""already initialized"" and ""currently initializing"" to delay initialization for components that are added in an onInitialize method. To do that I needed a new flag FLAG_INITIALIZING. Unfortunately the int space for flags was exhausted, so I had to turn Component#flags into a long.

The cost of this is 4 extra bytes. I'm not sure whether that is acceptable. If not, it could probably be replaced with a single extra boolean in Component, which would reduce the cost but not eliminate it.","17/Dec/10 16:03;ivaynberg;fixed in 1.5. leaving in 1.4.x because making it final can break backwards compat.

i made the decision to make the method final in page. i think this makes more sense then delaying the call because by the time the page's constructor is finished the page should be initialized, eg code like this is commong

EditUserPage page=new EditUserPage(user); page.switchToAddressEditMode();

switchToAddressEditMode() may depend on certain components being added to the hierarchy and if they are added in oninitialize() which is delayed the method may fail.

thus, the principle of least surprise dictates we make it final in page.","26/Jan/11 16:10;szabolcs;Hi Igor and Carl,
I think this issue is really a misunderstanding of the onInitialize concept, as it was a really needed feature. This was the reason I switched to 1.5-M3, and then BANG! in RC1 this is broken. Let me explain how to use it in the right way, and then my use case for which this is much needed.
USAGE
As you have pointed out, onInitialize gets called at the first time when a component gets added to the Page, or - if this doesn't happen in the constructor then - in the render phase (internalPrepareForRender method) at latest. Well, if you add any component to the page in the constructor then onInitialize is really not of much use, actually in this case it's better not to use it all. However if you start making pages as I do, then it becomes a joy to work with.

The solution is simple: Don't add any component to the Page in the constructor, use onInitialize for that purpose. If you advocate this as a best practice then the use cases stated below will be much easier to make than without the onInitialize (and using only constructor).

The constructor is anyway best suited only for setting up models, performing (some or all of the) service calls and other things needed to ensure that the given Page is the one to show to the user, without going into costly component additions to the Page.

USE CASES
- In my current project we have a common base page from which all other pages subclasses and so we share a common layout, some common panels and common functionality in all pages. However once in a while it might be needed to hide or replace one of the common panels in only one page but leave it as common in all of the others. If you only could do this in the constructor then that will be a really pain. The reason in short is that irrespective of whether you use overriden ""panel adder methods"" or any other solution you are still in object construction phase and that puts quite a few restrictions on variable initialization order. I know, I did it, and there are only hacking workarounds for this. On the other hand, onInitialize is a super elegant way to use overriden methods or any cool OO technique since you are not constrained any more by the ""Construction phase"".

- An other use case is that the user is doing stuff on any page, it can be anything. Irrespective of what he/she is doing, something is happening in the background, perhaps by an other user's action. The next time the first user is refreshing this page or going to another page, I want the user to be notified, in a common way, in a common code. This can be also achieved without onInitialize with more or less hacking (especially when we want the user notified when staying on the same page), but with onInitialize this is a much cleaner. The reason is that prepareForRender (which by the way also got final, why?) precedes onInitialize and so it is possible to do this check there.

FINAL/NON-FINAL :) THOUGHTS
Sorry for getting so long, my only point is that onInitialize (and prepareForRender) not being final was one of the great achievements of 1.5 (backported into 1.4, or was it the other way around?). There were really use cases for this, especially the avoidance of the Java Object Construction Phase limitations (and the possibility of not having ugly big constructors :)). Sure this can be misused or used wrongly as a lot of other things in Wicket, but this is not a reason to limit the good usage of this. You can put it in the javadoc, that only use onInitialize when you don't do add operations in the constructor. Actually I would also ask what's the point of onInitialize anywhere else than for Pages? At least I could live without it anywhere else, but not for Pages.
I hope you will change both methods back to non-final. If not, then I will have to revert to 1.4 and possibly never use 1.5, which would be a sad thing.","26/Jan/11 16:22;ivaynberg;the problem with leaving onInitialize() open in pages is that its way too easy to make the mistake and add something in the constructor and have really wonky  unpredictable initialization order results like you mentioned. almost all our users are used to adding things in the constructor and unfortunately we have to protect our users from themselves.

prepareForRender() is final because it should not be used, there is onBeforeRender() which should be used as a callback.

as far as oninitialize() in non-pages, this is extremely useful. sounds like your app is built mostly with pages. a lot of the apps i work on have very dynamic UIs and are built almost exclusively with panels and panel swapping. in these cases panels act as pages.

your usecases can be achieved like this:

1) in onconfigure() do a simple check: if (get(""panel1"") instanceof baepanel) { replace(new specializedpanel(""panel1""));}

2) you can do the same thing in onConfigure() or onBeforeRender()

","26/Jan/11 20:08;szabolcs;Thanks for the quick reply. The point is yours with my second use case, that's fine with onConfigure. However I have still a problem with onInitialize. If it remains final as in RC1, then for Pages there's no other way to do initialization than in the constructor, right? All other Components can have this nice feature, but not Pages. Why? If you really want to protect users, then a much nicer solution would have been NOT to initialize Pages when components get added, but only before the render phase. I understand that most situations could be solved with a panel replace maybe in onConfigure, but IMHO this is kind of a hack compared to a nice OO solution that actually are very widespread in Wicket elsewhere. And what makes Wicket lightyears ahead of JSP, JSF and Co.

If you still insist on the current solution, would it be not possible to add an extra initialize method for Pages that gets called guaranteed only once, and guaranteed not while the constructor is running (probably before the render phase like now)? For me this would be essential, and I can hopefully show another use case of mine for this purpose:
On some pages there might be an important form working with session-bound data that we want to protect even when the user navigates away via some link other than submit or cancel. Imagine a shopping cart page where the user can set the quantities but if he abruptly clicks on a featured product in the sidebar I want to store all the quantity changes he has made in the cart. A very efficient solution can be done with AjaxFormSubmitBehavior, that I add to each link on each panel on such Pages. However each Panel must be made aware of this important form at creation or initialization time. Since my panels get added in my common base Page, without onInitialize the only nice way to pass this form to it is through the super constructor call, however the form is definitely not available in the first line of the constructor where super(...) is. Of course workarounds can be made, as I have made one myself that included an extra Page-managed initialized attribute and some extra glues, but onInitialize was really a super nice solution to this problem. I am open to other suggestions, but probably not leaving Pages as orphans that don't have a chance for nice initialization outside of a Java Constructor would make Wicket more concistent.","05/Mar/11 19:42;selckin;Would just like to say, i would really like it if onInitialize would keep being available in pages.","05/Mar/11 19:44;lhunath;The solution is really simple.  Stop with the inconsistencies, stop with allowing constructor-created components everywhere, always.  That's the whole reason onInitialize was introduced.

This issue deals with the fact that things go wrong when onInitialize isn't used properly.  And instead of making your users do the right thing, you break your API consistency, ludicrous.

put an assert in add() that forbids its usage during construction.  You never want people adding components to their page during construction.  Ever.  Teach your userbase how to do it right, and make it part of the ""upgrade-to-1.5"" learning curve.

Pages should behave the same way as any component as far as component hierarchy construction is concerned, there's absolutely no sense to confusing your users and breaking that consistency.

Re: your example:
EditUserPage page=new EditUserPage(user); page.switchToAddressEditMode(); 

switchToAddressEditMode() shouldn't be doing anything at all with components.  None of your methods should with the exception of rarely replacing a component in a wicket on* method.  Instead, everything that you want to do with regards to modifying how and what your component renders should preferably be toggled with models or state that gets checked in onConfigure.

If you want to protect your users from themselves and not sacrifice your API to suit the idiots, then tell them they're doing it wrong with a runtime exception.","06/Mar/11 17:56;ivaynberg;@Maarten, a change like that will break every single application and library written so far. Worse, it will break it with a runtime exception. you make a lot of assumptions in your message which core committers would not agree with, you have the luxury of viewing this from a single application's point of view - we do not.

But, even if we do not agree with you we always listen to the community. Go ahead and start a vote on the user list to introduce this change, and explain how applications and libraries would have to be migrated. Dont forget to explain how people should carry over constructor parameters in fields, etc, so child components that have easy access to them now can access them once they are created in onInitialize().

If it doesnt fly you can still do what you want, as you have yourself clearly explained, by putting that code in onConfigure().","06/Mar/11 19:52;lhunath;Firstly, I apologize for the strong language.  Upon re-reading my own comment, I should've left out certain nonfactual keywords and worded things a bit differently.

I agree that breakage at runtime is not ideal.  OTOH, breakage when migrating to 1.5 is inevitable and completely expected by all developers.  Additionally, I'm sure there will be plenty of other areas where migration issues will only surface at runtime.  In this particular case, the issue will become clear as soon as the application is launched for the first time and the fix is trivial, unless developers are doing other nasty stuff that should really be fixed whether or not it causes immediate bugs or only rare side-effects.  That, IMO, excuses the exception I propose as acceptable.

Might I also indicate that the current resolution is also not backwards compatible and forces everyone that currently consistently uses onInitialize in their pages as well as in their other components, to move their perfectly good code into a different structure.  Why not force this change on another set of people, where it will actually do more good?  Just because the other group is larger?  I think, for the sake of the future health of your framework, it's important that you can make unpopular decisions that benefit a clean and consistent API.","06/Mar/11 22:37;ivaynberg;currently people can migrate their apps from 1.4 to 1.5 in about a day or two. but this change would take many days as every single page and component would have to be touched. further complications come from the fact that users will have to wait for all the non-core libraries used in their applications to be upgraded as well since this is a world-breaking change. i think such change is better suited for wicket 2.0 instead of a minor version release...but like i said, start a vote/discussion thread to get the community feedback.","08/Mar/11 01:11;chrisc;+1 for onInitialize being overridable in pages. A 'post constructor' initialize method is available in just about every GUI framework I've ever worked on OWL, MFC, .net, AWT, Swing, Echo. Wicket is the first one I've ever used that encourages the dangerous practice of adding child components while the parent is only 'partially constructed' (ie. in a super class constructor).

I discussed this back in the old days ('07) in the context of a problem with getVariation() that was overridden and hence caused problems when being called during construction. The specific case of getVariation() was fixed but I still feel that the onInitialize is a very good idea. With sufficient documentation it won't be a problem for the newbies and anyone whose ever used any other GUI framework will embrace it.

http://apache-wicket.1842946.n4.nabble.com/Lifecycle-issue-with-getVariation-td1928017.html","23/Mar/11 09:46;lhunath;I think the result of the community call for input on this issue was:

 - Don't throw exception on add() from constructors,
 - Don't make onInitialize() final,
 - Don't run onInitialize() on componentAdded in Pages

Shall we resolve the issue this way?","26/Mar/11 05:46;ivaynberg;initial cascade is now delayed just prior to first render of the page. however, once the page has been initialized further component initialization will happen on immediate availability of the page just like it does now.",,,,,,,,,,,,,,,,,,,,,,,
RequestLogger doesn't dump its collected data at the end of the request,WICKET-3556,12502321,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,24/Mar/11 20:45,24/Mar/11 20:48,13/Mar/19 23:17,24/Mar/11 20:48,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,,,,,,,,0,,,,,,,"From an email in users@:


Enabling with getRequestLoggerSettings().setRequestLoggerEnabled(true) doesnt show any requests.

Seems that the Application.logEventTarget and Application.logResponseTarget are never invoked at all from the wicket-core,
nevertheless the get overridden in WebApplication???
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204328,,,Thu Mar 24 20:48:13 UTC 2011,,,,,,0|i0kanr:,116544,,,,,,,,24/Mar/11 20:48;mgrigorov;Fixed with r1085131.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<wicket:enclosure> results in MarkupException when used with multiple <wicket:child>,WICKET-3512,12500585,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,robinshine,robinshine,07/Mar/11 00:20,24/Mar/11 20:30,13/Mar/19 23:17,24/Mar/11 20:08,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,,,,,,,,0,,,,,,,"Put below simple pages into a Wicket web application:

TestPage1.html:

<html>
	<head>
		<title>title</title>
	</head>
	<body>
		<div wicket:id=""test1""></div>
		<wicket:child></wicket:child>
	</body>
</html>

TestPage1.java:

package com.example.test;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.basic.Label;

public class TestPage1 extends WebPage {

	public TestPage1() {
		add(new Label(""test1"", ""test1""));
	}
}

TestPage2.html:

<wicket:extend>
	<wicket:enclosure child=""test2"">
		<div wicket:id=""test2""></div>
	</wicket:enclosure>
	<wicket:child></wicket:child>
</wicket:extend>

TestPage2.java:

package com.example.test;

import org.apache.wicket.markup.html.basic.Label;

public class TestPage2 extends TestPage1 {
	
	public TestPage2() {
		add(new Label(""test2"", ""test2""));
	}

}

TestPage3.html:

<wicket:extend>
	<wicket:enclosure child=""test3"">
		<div wicket:id=""test3""></div>
	</wicket:enclosure>
</wicket:extend>

TestPage3.java:


package com.example.test;

import org.apache.wicket.markup.html.basic.Label;

public class TestPage3 extends TestPage2 {
	
	public TestPage3() {
		add(new Label(""test3"", ""test3""));
	}

}


Here TestPage3 extends TestPage2, and TestPage2 extends TestPage1. Both TestPage2.html and TestPage3.html contains a <wicket:enclosure> tag. Now mount TestPage3 and access it, below errors will be generated:

Message: The component [Component id = test2] was rendered already. You can render it only once during a render phase. Class relative path: org.apache.wicket.markup.html.basic.Label:test2

Root cause:

org.apache.wicket.markup.MarkupException: The component [Component id = test2] was rendered already. You can render it only once during a render phase. Class relative path: org.apache.wicket.markup.html.basic.Label:test2
	 at org.apache.wicket.Page.componentRendered(Page.java:299)
	 at org.apache.wicket.Component.rendered(Component.java:2570)
	 at org.apache.wicket.Component.internalRender(Component.java:2377)
	 at org.apache.wicket.Component.render(Component.java:2301)
	 at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1415)
         ...

This error won't occur if <wicket:enclosure> is removed from one of the page. ",,,,,,,,,,,,,,,,,,,,,,24/Mar/11 13:22;pedrosans;WICKET-3512-2.patch;https://issues.apache.org/jira/secure/attachment/12474498/WICKET-3512-2.patch,22/Mar/11 19:49;pedrosans;WICKET-3512.patch;https://issues.apache.org/jira/secure/attachment/12474331/WICKET-3512.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-03-22 15:23:28.063,,,no_permission,,,,,,,,,,,204292,,,Thu Mar 24 19:19:53 UTC 2011,,,,,,0|i0kaqf:,116556,,,,,,,,"22/Mar/11 15:23;pedrosans;Initial investigation shows that AbstractMarkupFilter has an counter variable giving the same value to both enclosure components.

the markup loader load TestPage3.html
the parser create the ""enclosure_1""
the markup loader load TestPanel2.html, create a new set of filters, the counter is created again having its initial value
the parser create the ""enclosure_1"" again

Changing EnclosureHandler or WicketTagIdentifier to assign different wicket ids fix the problem. But I still don't know why, I see nested components with identical wicket ids working all the time.","22/Mar/11 16:25;pedrosans;Rendering the TransparentWebMarkupContainer for the wicket:extend tag in TestPage3.html, ComponentResolvers return the parent Enclosure component, since in the hierarchy we have now an instance of IComponentResolver ( the TransparentWebMarkupContainer created to the wicket:child tag in TestPage2.html ). So the same enclosure get rendered twice, generating this bug.

Relevant stack trace:

TransparentWebMarkupContainer.resolve(MarkupContainer, MarkupStream, ComponentTag) line: 50
          --> TransparentWebMarkupContainer created to the wicket:child tag in TestPage2.html is a resolver, he know who is the ""_enclosure1"" because its parent has an homonym child, and return it to be rendered twice
ComponentResolvers.resolveByComponentHierarchy(MarkupContainer, MarkupStream, ComponentTag) line: 111	
ComponentResolvers.resolve(MarkupContainer, MarkupStream, ComponentTag, ComponentResolvers$ResolverFilter) line: 54	
TransparentWebMarkupContainer(MarkupContainer).renderNext(MarkupStream) line: 1407	
           --> TransparentWebMarkupContainer for the wicket:extend tag in TestPage3.html trying to render ""_enclosure1"". As there are no such child, the resolvers are called.","22/Mar/11 19:01;jdonnerstag;Pedro is spot on. The root cause is the ""counter"" in AMF. The counter must be Page unique. Unfortunately the Page is not available. The Session is but I don't like that the numbers (ID) are growing very fast. Instead of Page we might use RequestCycle instead, but RequestCycle has no counter yet. Adding that counter to RC shouldn't be a big deal I think.","22/Mar/11 19:39;pedrosans;The main cause is also that TransparentWebMarkupContainer is resolving its parent's children components to their grandchildren even when its parent container declared an homonymous component in markup, meaning that he is the one who wants to render the component, and that it should not be resolved to grandchildren. I'm preparing an patch fixing and exposing this bug with another test case.
","22/Mar/11 20:15;pedrosans;Who ultimately set the Enclosure id is the EnclosureHandler, he knows the page and can use its auto index.

- return new Enclosure(tag.getId(), tag.getAttribute(EnclosureHandler.CHILD_ATTRIBUTE));
+ return new Enclosure(tag.getId() + container.getPage().getAutoIndex(), tag.getAttribute(EnclosureHandler.CHILD_ATTRIBUTE));

MarkupInheritanceResolver is already assemblying this kind of id, if both changes are OK I think we are done.
Add RC as a markup parser dependence implies that we could not use it outside wicket lifecyle, test cases do it all the time.","23/Mar/11 22:15;jdonnerstag;I played a bit with your patches and tests. 

I think using page.getAutoIndex() is the right approach. The id will always be page unique and MarkupContainer.autoAdd() will make sure the markup gets assigned.

on your additional test case, it actually works fine when java and markup are like they should be. But when users forgot to add one of the labels, like you deliberately did in your test cases, than wicket will throw an exception ""has already been rendered"" instead of ""component not found"". Clearly giving the wrong hint to the user. That's what the TWMC patch is about. It would not be needed for Wicket to render properly.

Page.wasRendered should be final and the javadoc should mention that it's a Wicket internal API which should not be used by users (=> contract or behavior might change in the futur releases)","24/Mar/11 13:22;pedrosans;In a very unlikely scenario involving user declaring the same wicket id generated by WicketTagIdentifier to its own components just above a TWMC enclosing wicket tags to be resolved, user will be able to break our renderer because the page auto index improvement is not enough. 
I'm sending the patch again with the API improvement, thanks Juergen, plus more test cases exposing this problem fixed in TWMC.",24/Mar/11 19:19;jdonnerstag;looks good. feel free and commit.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LazyInitProxyFactory using Class.forName(clazz) rather than Thread.currentThread().getContextClassLoader().loadClass(type),WICKET-3503,12500405,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bf65,bf65,04/Mar/11 07:50,23/Mar/11 10:17,13/Mar/19 23:17,05/Mar/11 18:33,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,,,,,,,,0,spring,,,,,,"LazyInitProxyFactory using Class.forName(clazz) rather than Thread.currentThread().getContextClassLoader().loadClass(type)

I believe it is a problem because my base WebApplication class is in a jar rather than the web application classes directory.  Example

ProjectA
  com.bf.app
      ProjectApplication extends MyBaseWebApplication

  com.bf.bean
      @Component(""myBean"")
      MySpringBean
             @Autowired
              private MyCommonBean; 

  com.bf.page
      MyWicketPage with @SpringBean

  pom.xml depends on ProjectB



Project B
  com.bf.app
      MyBaseWebApplication extends WebApplication

  com.bf.bean
      @Service(""myCommonBean"")
      MyCommonBean




ERROR - RequestCycle               - Could not deserialize object using `org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory` object factory
java.lang.RuntimeException: Could not deserialize object using `org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory` object factory
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:435)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:234)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:735)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:310)
	at org.apache.wicket.Session.getPage(Session.java:774)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.resolveRenderedPage(AbstractRequestCycleProcessor.java:458)
	at org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:144)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1310)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:486)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:319)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:859)
	at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:574)
	at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1527)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.InvalidClassException: com.bf.MySpringBean; could not resolve class [com.bf.MySpringBean] when deserializing proxy
	at org.apache.wicket.proxy.LazyInitProxyFactory$ProxyReplacement.readResolve(LazyInitProxyFactory.java:236)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:413)
	... 23 more
","wicket 1.4.15, spring 3.0",,,,,,,,,,,,,,,,,,,,,05/Mar/11 18:50;bf65;wicket-bug.zip;https://issues.apache.org/jira/secure/attachment/12472756/wicket-bug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-04 07:56:11.479,,,no_permission,,,,,,,,,,,204283,,,Sat Mar 05 19:00:45 UTC 2011,,,,,,0|i0karr:,116562,,,,,,,,04/Mar/11 07:56;mgrigorov;Can you please create a quickstart application that reproduces the problem ?,"04/Mar/11 16:47;mgrigorov;I changed locally LazyInitProxyFactory to:

-			Class<?> clazz;
-			try
+			final Class<?> clazz = WicketObjects.resolveClass(type);
+			if (clazz == null)
 			{
-				clazz = Class.forName(type);
-			}
-			catch (ClassNotFoundException e)
-			{
 				throw new InvalidClassException(type, ""could not resolve class ["" + type +
 					""] when deserializing proxy"");

and all tests pass.

WicketObjects.resolveClass(type) uses DefaultClassResolver under the hood and it uses :

ClassLoader loader = Thread.currentThread().getContextClassLoader();
if (loader == null)
{
   loader = DefaultClassResolver.class.getClassLoader();
}
clazz = Class.forName(classname, false, loader);

So I believe the change is for good and will solve your problem.
The only thing that stops me to commit it is that I had similar modular application and we had no problems. The only difference was that the application uses Guice instead of Spring.
","05/Mar/11 04:55;bf65;Hi Martin,
Thanks for looking at it so quickly.    I can try to put together a quickstart.    How do I do that?
The problem only occurred when it had a version of the current page and I hit the back button.
so when the wicket url was like http://tico.bfapps.appspot.com/?wicket:interface=:2:1:::
it had to have a second number after the first number and then i hit the back button
Let me know
Thanks

",05/Mar/11 18:33;ivaynberg;i think its safe to mark this as fixed with the latest change,"05/Mar/11 18:50;bf65;This was the project setup that I was using, but I cannot replicated the problem on a small scale.

The steps to build these projects are:
mvn install ui-parent
mvn install ui
mvn package deployable
mvn package deployable2

deploy the war files in deployable, deployable2 to tomcat 6.0

Steps to reproduce:
1. click ok button to get to the tabs page
2. click to change tabs a couple of times and then hit the back button
3. serialization exception is supposed to occur but I couldnt get it to happen with these projects.   there must be some other interaction that is not captured by this example.

","05/Mar/11 18:51;mgrigorov;Igor, if you mean the diff in my comment above then - it is not yet committed. The changelist is on my dev machine.
Either commit it or I'll do it tomorrow.",05/Mar/11 19:00;ivaynberg;committed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autocomplete component doesn't work if the cookies are disabled,WICKET-3547,12502028,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,22/Mar/11 08:27,22/Mar/11 09:41,13/Mar/19 23:17,22/Mar/11 09:41,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,wicket-extensions,,,,,,0,,,,,,,"The autocomplete component doesn't work at all if the cookies are disabled. Easy reproducible with wicket-examples (http://localhost:8080/ajax/autocomplete;jsessionid=someSessionId)

The generated callback url doesn't have the jsessionid encoded.",Browser or web container with disabled cookies,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204319,,,Tue Mar 22 09:41:48 UTC 2011,,,,,,0|i0kaof:,116547,,,,,,,,22/Mar/11 09:41;mgrigorov;Fixed with r1084114,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in WicketFilter startup with following StringIndexOutOfBoundsException,WICKET-3544,12501851,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,andi5,andi5,19/Mar/11 01:49,20/Mar/11 17:43,13/Mar/19 23:17,20/Mar/11 17:43,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"We noticed spurious problems with the startup of a Wicket application and some requests (to /wicket, if /wicket/* is the filter url-mapping) always throwing a StringIndexOutOfBoundsException.
The only way to fix this was to redeploy the app.

It seems this is due to a race condition in WicketFilter when determining the filterPathLength.

The attached patch contains a fix and also a test case. Feel free to apply the parts you like.
",,,,,,,,,,,,,,,,,,,,,,19/Mar/11 01:50;andi5;filter-path-length.patch;https://issues.apache.org/jira/secure/attachment/12474054/filter-path-length.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-20 17:43:36.124,,,no_permission,,,,,,,,,,,204316,,,Sun Mar 20 17:43:36 UTC 2011,,,,,,0|i0kaov:,116549,,,,,,,,19/Mar/11 01:50;andi5;Patch and test case,"20/Mar/11 17:43;mgrigorov;Fixed with r1083519.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zero based NavigatorLabel,WICKET-3486,12499941,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alder,alder,28/Feb/11 16:09,08/Mar/11 08:07,13/Mar/19 23:17,08/Mar/11 08:07,1.5-M1,1.5-M2.1,1.5-M3,1.5-RC1,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,,,,,,,,0,NavigatorLabel,,,,,,"after WICKET-2816 NavigatorLabel.getFrom() now zero based
please return ""+1"" in this method:

public int getFrom() {
	if (getOf() == 0) {
		return 0;
	}
	return pageable.getCurrentPage() * pageable.getItemsPerPage(); <------------------------ +1
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204268,,,2011-02-28 16:09:52.0,,,,,,0|i0katz:,116572,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceMapper doesn't work: mapHandler() always returns null,WICKET-3506,12500484,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mbrictson,mbrictson,04/Mar/11 23:04,08/Mar/11 07:56,13/Mar/19 23:17,08/Mar/11 07:56,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"ResourceMapper#mapHandler uses the following code test whether a particular ResourceReferenceRequestHandler should be mapped:

// see if request handler addresses the resource we serve
if (resourceReference.getResource().equals(handler.getResource()) == false)
{
	return null;
}

Unfortunately this if statement always evaluates to true and thus null is returned.

The problem is that IResource implementations do not provide an equals() method. In practice this means that the default Object#equals() implementation is used, which nearly always results in false for the equality test.

I see two possible solutions:

1. Implement equals() for all IResource classes.

2. Compare the ResourceReference objects instead, which already have a meaningful equals() implementation. In other words:


// see if request handler addresses the resource we serve
if (resourceReference.equals(handler.getResourceReference()) == false)
{
	return null;
}

I'm attaching a quickstart that illustrates this bug.",,,,,,,,,,,,,,,,,,,,,,04/Mar/11 23:06;mbrictson;quickstart-WICKET-3506.tgz;https://issues.apache.org/jira/secure/attachment/12472720/quickstart-WICKET-3506.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204286,,,Fri Mar 04 23:06:05 UTC 2011,,,,,,0|i0karj:,116561,,,,,,,,04/Mar/11 23:06;mbrictson;Quickstart illustrating the bug.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2xStatelessForm growing url when there is error validation ,WICKET-3438,12498121,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dutrieux,dutrieux,09/Feb/11 13:26,06/Mar/11 10:21,13/Mar/19 23:17,18/Feb/11 16:30,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,,,wicket,,,,,,,0,,,,,,,"Hello,

I have a strange problem with 2xStatelessForm :

I would like a stateless application with 2 StatelessForm and with somes required validators on form :

public class HomePage extends WebPage {

        private static final long serialVersionUID = 1L;

    public HomePage(final PageParameters parameters) {
        super(parameters);
        setVersioned(false);
        Form form1 = new StatelessForm(""form1"") {
            @Override
            protected void onSubmit() {
                setResponsePage(ResultPage.class);
            }
        };
        form1.add(new TextField<String>(""input1"").setRequired(true));
        add(form1);

        Form form2 = new StatelessForm(""form2"") {
            @Override
            protected void onSubmit() {
                setResponsePage(ResultPage.class);
            }
        };
        form2.add(new TextField<String>(""input1"").setRequired(true));
        add(form2);
    }
}

The problem is when I submit alternatively each form (I don't fill the Textfield required intentionally), the url growing like this :

1st submit : http://localhost:8080/Wicket-Test/HomePage.html?wicket:interface=:0:form2::IFormSubmitListener::
2nd submit : http://localhost:8080/Wicket-Test/HomePage.html?form22_hf_0=&wicket:interface=:0:form1::IFormSubmitListener::
3th submit : http://localhost:8080/Wicket-Test/HomePage.html?form22_hf_0=&form12_hf_0=&wicket:interface=:0:form2::IFormSubmitListener::
4th submit : http://localhost:8080/Wicket-Test/HomePage.html?form22_hf_0=&form22_hf_0=&form12_hf_0=&wicket:interface=:0:form1::IFormSubmitListener::
...

Is there a solution to solve this problem ?

Best regards

Duto",,,,,,,,,,,,,,,WICKET-1912,,,,WICKET-3507,,,11/Feb/11 21:30;pedrosans;WICKET-3438-nested-forms.patch;https://issues.apache.org/jira/secure/attachment/12470903/WICKET-3438-nested-forms.patch,09/Feb/11 16:53;pedrosans;WICKET-3438.patch;https://issues.apache.org/jira/secure/attachment/12470689/WICKET-3438.patch,18/Feb/11 00:40;pedrosans;WICKET-3438.zip;https://issues.apache.org/jira/secure/attachment/12471349/WICKET-3438.zip,09/Feb/11 13:27;dutrieux;Wicket-test.rar;https://issues.apache.org/jira/secure/attachment/12470674/Wicket-test.rar,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-02-09 16:04:37.664,,,no_permission,,,,,,,,,,,204225,,,Fri Feb 18 03:17:52 UTC 2011,,,,,,0|i0kaz3:,116595,,,,,,,,09/Feb/11 16:04;pedrosans;we need to remove the input name parameter from page parameters before render the response,"09/Feb/11 16:40;dutrieux;I think I can't do that because the PageParameter is final.

Could you please give sample code of solution Pedro ?","09/Feb/11 16:53;pedrosans;Hi Olivier, the last comment was to other devs. The problem is that Wicket is giving an statefull id tho the hidden field, and stateless pages get recreated all the time. The form processing is already removing request parameters avoiding them from get encoded in the form action, so the fix for this ticket is just use an stateless id for the hidden field. I'm sending an patch, if I'm not missing anything we can commit.","10/Feb/11 10:38;dutrieux;I test your patch Pedro and that's work perfectly.

Best regards","10/Feb/11 15:08;pedrosans;This problems only happens at 1.4 because it is considering post parameters as page parameters, 1.5 does not:
At AbstractBookmarkableMapper#mapRequest --> PageParameters pageParameters = urlInfo.getPageParameters();","10/Feb/11 19:47;ivaynberg;there is a small problem with the patch. form id may not be unique for embedded forms. however, this is highly unlikely - two forms where one is embedded in another or both are embedded sharing the same id. still, a better approach may be to use the page-relative path to the form as the id. committing the patch for now, pedro if you have time can you tweak it?","11/Feb/11 00:14;hudson;Integrated in Apache Wicket 1.4.x #426 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/426/])
    ","11/Feb/11 01:59;pedrosans;Sure, I will have time tomorrow, then it can go to RC2","11/Feb/11 21:19;pedrosans;I tried without success to reproduce this possible problem with nested forms, then I just realise that only the root form write the hidden field on response, so the committed fix should be just fine.","11/Feb/11 21:30;pedrosans;Ok, but getHiddenFieldId is an public method, maybe someone or some component is relying on distinct ids for different nesting levels. Sending the tweak.","18/Feb/11 00:40;pedrosans;The related bug happens on nested forms when you click alternately on their submit links. I'm sending the quickstart showing the problem, I'm working to fix it","18/Feb/11 02:06;pedrosans;The refactored code needs to be merged into 1.5, it is late here, I will do it tomorow","18/Feb/11 03:17;hudson;Integrated in Apache Wicket 1.4.x #447 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/447/])
    - preventing the submit link input name from being encoded in form action
- removing duplicated code in AbstractSubmitLink
- hidden input name changed to be root form relative
Issue: WICKET-3438
",,,,,,,,,,,,,,,,,,,,,,,,,,
Entering huge strings in TextFields causes IllegalStateExceptions not caught by the Framework,WICKET-3498,12500301,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,ghartner,ghartner,03/Mar/11 13:14,04/Mar/11 10:02,13/Mar/19 23:17,04/Mar/11 10:02,1.4.15,1.4.16,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,,,wicket,,,,,,,0,"IllegalStateException,",Jetty,ServletWebRequest,,,,"We were testing a signin mechanism and entered a huge amount of chars in ""username"" and ""password"" fields contained by a form. (more than 200.000 chars) This results in an IllegalStateException thrown by Jetty, which is ok from my point of view. The problem is that the full exception stack trace (!!!) is shown to the client => the resulting execution leaves the scope of Wicket framework, which can't handle the exception correctly. Error Page and Stack Trace for Jetty 6 and Wicket 1.4.15:

HTTP ERROR 500

Problem accessing /login/wicket:interface/:0:loginPanel:signInForm::IFormSubmitListener::. Reason:

    Form too large3791446>200000

Caused by:

java.lang.IllegalStateException: Form too large3791446>200000
	at org.mortbay.jetty.Request.extractParameters(Request.java:1561)
	at org.mortbay.jetty.Request.getParameter(Request.java:859)
	at org.apache.wicket.protocol.http.servlet.ServletWebRequest.<init>(ServletWebRequest.java:83)
	at org.apache.wicket.protocol.http.WebApplication.newWebRequest(WebApplication.java:675)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:424)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)
	at {filter}
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)
	at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)
	at org.mortbay.jetty.security.SslSocketConnector$SslConnection.run(SslSocketConnector.java:713)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)

We suggest an easy fix: catch the IllegalStateException in line 83 of org.apache.wicket.protocol.http.servlet.ServletWebRequest and just log an error (please check whether it really has to be an error to be logged). In effect no ajaxHeader will be read and an Wicket's Internal Error page will be shown:

Possible solution in Wicket 1.4.15, 1.4.17 (didn't check 1.4.16), ServletWebRequest, line 83:
		try
		{
			if (Strings.isEmpty(ajaxHeader))
				ajaxHeader = httpServletRequest.getParameter(""wicket:ajax"");
		}
		catch (IllegalStateException exception)
		{
			log.error(""IllegalStateException occured reading \""wicket:ajax\""-Parameter: "" +
				exception.getMessage());
		}

Please consider checking Wicket 1.5. I just checked ServletWebRequest, which has been refactored apparently. Line 214 (Enumeration<String> e = httpServletRequest.getHeaders(name);) may be critical, as well as methods protected Map<String, List<StringValue>> generatePostParameters() and getQueryParameters(). Couldn't check that by now. Please let me know, if you want me to analyze that error more intensely and suggest a fix in Wicket 1.5. We consider that bug as ""Major"" or ""Critical"", as the whole Servlet Container StackTrace is potentially displayed.",Wicket 1.4.x/Spring/Jetty 6,18000,18000,,0%,18000,18000,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-03 17:55:33.151,,,no_permission,,,,,,,,,,,204278,,,Fri Mar 04 10:02:45 UTC 2011,,,,,,0|i0kasn:,116566,,,,,,,,03/Mar/11 17:55;mgrigorov;Can you confirm that you run Wicket in PRODUCTION mode ?,"04/Mar/11 09:29;ghartner;You mean ""deployment"" mode, right? I checked both configurations (development AND deployment) => happens in both. The StackTrace and the error page aren't written by wicket. ","04/Mar/11 09:32;mgrigorov;Yes, I reproduced it.
It happens only in Jetty 6. In Jetty 7 it just says ""Server Error 500"" and the stacktrace is only in the logs.
I'll improve Wicket now.
Thanks! ","04/Mar/11 10:02;mgrigorov;Improved in 1.4.x with r1077860.

It appeared that Wicket 1.5.x handles better this by postponing the read to headers/parameters after WebRequest's constructor. So it is not related to Jetty version.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Url.setCharset always set ""UTF-8""",WICKET-3492,12500173,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,alder,alder,02/Mar/11 12:32,02/Mar/11 15:03,13/Mar/19 23:17,02/Mar/11 15:03,1.5-M1,1.5-M2.1,1.5-M3,1.5-RC1,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,,,,,,,,0,Url,,,,,,"Url.setCharset always set ""UTF-8"", correct version:
private void setCharset(final Charset charset)
{
	if (charset == null)
	{
		charsetName = ""UTF-8"";
	}
	else
	{
		charsetName = charset.name();
	}
	_charset = null;
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-02 15:03:53.459,,,no_permission,,,,,,,,,,,204273,,,Wed Mar 02 15:03:53 UTC 2011,,,,,,0|i0katb:,116569,,,,,,,,"02/Mar/11 15:03;mgrigorov;Fixed with r1076238.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in PersistentPageManager's page cache,WICKET-3483,12499847,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,27/Feb/11 08:57,28/Feb/11 15:17,13/Mar/19 23:17,27/Feb/11 08:58,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"From a private email to me by a user:

Hi,

I'm trying to use your gae-initializer to get your test application working on GAE. I'm using version 1.5-rc2 of wicket and your initializer. Using GAE sdk 1.4.2.

I'm getting the same problem the person on the 1.5-rc1 release page was getting, and I can't get around it.

The homepage loads, but the other page throws the same null pointer exception he was getting:

java.lang.NullPointerException
    at org.apache.wicket.page.PersistentPageManager$SessionEntry.findPage(PersistentPageManager.java:117)
....


--------------------------------

The problem is that org.apache.wicket.page.PersistentPageManager.SessionEntry.addPage(IManageablePage) adds even 'null' pages.",Google AppEngine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-27 18:05:21.777,,,no_permission,,,,,,,,,,,204265,,,Mon Feb 28 15:17:29 UTC 2011,,,,,,0|i0kauf:,116574,,,,,,,,27/Feb/11 08:58;mgrigorov;Fixed with r1075008.,"27/Feb/11 18:05;per@hamburg.de;Hi Martin,

while I think it's good to fix the NPE, I doubt that this is the real problem. Why is the page null in the first place? This happens all the time after all. When using it in production, my pagemap contains no serialised pages (they were all null), and when I then get transferred to a different node (use the always-on-feature and you get transferred often), my new node lacks the page history, and i run into page expired a lot.

I am tempted to think that returning ""false"" in PageManager.isReplicated() is to blame, it should probably be overridden to ""true"". However, then deserialisation on GAE onto fresh nodes fails altogether for other reasons :-)

Have you got a production wicket 1.5 application running on App Engine? If so, are you using the always-on-feature yet?
","27/Feb/11 18:31;mgrigorov;Hi,

I don't have applications running on GAE. I find GAE too restrictive for web applications.
I created a GAE account some time ago just to test Wicket 1.5.

""I am tempted to think that returning ""false"" in PageManager.isReplicated() is to blame, it should probably be overridden to ""true"""".
Which PageManager do you mean ?
IPageManager has no such method.
IDataStore has one and the recommended implementation for GAE (see gae-initializer, it uses HttpSessionDataStore) returns ""true"". 
DiskDataStore, the default one for Wicket apps, doesn't support replication.

gae-initializer is hosted at GitHub - https://github.com/wicketstuff/core/tree/master/jdk-1.5-parent/gae-initializer-parent  ","28/Feb/11 15:17;per@hamburg.de;Sorry, I was mistaken in the isReplicated() quote above. It's been two weeks. I will now start over again with a really simple quickstart to nail this bug, since Wicket 1.4 on GAE is starting to get annoying (Multi-Tab support being broken). Will update with proper stacktraces and better-worded error reports.

Since you mentioned it: I think GAE is awesome, and in combination with Wicket it is like coding in heaven for me :-) GAE takes care of all the deployment/staging/logging/etc stuff, Wicket let's me focus on the features (instead of on technical details). So I can move really fast by using them both in combination. The only thing that's restrictive on GAE is the datastore -- it's simply not SQL. But I've been able to build a pretty complex application (for employee performance review and 360 degree feedback) on GAE now, with hundreds of beta users, and I haven't run into any other restrictions so far. What were you thinking was too restrictive? Maybe I can give you some hint. :-)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Referrer Leaking with ExternalLink,WICKET-3469,12499408,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hjaekel,hjaekel,22/Feb/11 21:26,27/Feb/11 10:13,13/Mar/19 23:17,27/Feb/11 10:13,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,wicket,,,,,,,0,,,,,,,"When Cookies are turned off, the jsessionid is included in the URL of the wicket application, e.g. http://localhost:8080/wicket-app/;jsessionid=03A529631FB1B9BA35556EA02519DF99?x=cOa8p3ycZvK*eAoEOzxHjg

ExternalLink renders links like <a href=""http://www.google.de/"">Google</a> 

When the user clicks on such an external link, the browser puts the current URL (including the session id) into the Referrer HTTP header. This is an security issue. Instead, the ExternalLink should use a redirect to open the external url.",,,,,,,,,,,,,,,,,,,,,,22/Feb/11 21:54;pedrosans;WICKET-3469.zip;https://issues.apache.org/jira/secure/attachment/12471664/WICKET-3469.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-22 21:43:50.849,,,no_permission,,,,,,,,,,,204254,,,Sun Feb 27 10:13:32 UTC 2011,,,,,,0|i0kavz:,116581,,,,,,,,"22/Feb/11 21:43;dashorst;If you need a redirect, use a normal Link component instead. ExternalLink does exactly what it is designed to do: render a <a href=""""> for a normal URL.

You could add a attributemodifier to add a noreferrer tag to the link. See http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#link-type-noreferrer","22/Feb/11 21:52;pedrosans;I know that it is not up to the framework to strip that encoded session id, but would be nice if it is possible, reopening just to attach the quickstart I used to understand the issue","22/Feb/11 22:15;ivaynberg;i dont see how this can happen at all. the url given to the link is not rewritten anywhere using HttpServletResponse#encodeURL, it is rendered raw. so what appends the jsessionid to it? at least in the quickstart pedro attached this is not reproduced...","22/Feb/11 22:18;ivaynberg;nevermind, i see. i think martijn is correct, if you do not want to show the referer - which will contain jsessiond, use a normal link and redirect to the external url.",22/Feb/11 22:25;jthomerson;jsessionid is appended by the container - we can't control it,"22/Feb/11 22:38;hjaekel;If you see ExternalLink just as a class for rendering a simple anchor link, you are correct. ExternalLink does exactly what it is supposed to do.

I was thinking of ExternalLink as the recommended way of including links to external URLs into an application. The compnent reference says: ""External links take you outside the scope of Wicket. They can come in handy when you keep your links e.g. in a database."" But the usage of ExternalLink for external links cannot be recommendet because it is possible that the jsessionid is leaked to the external site. So maybe wicket should offer a secure way of including external links into an application. Using normal Links and creating the redirects in the application code is just a workaround. Using noreferrer is HTML5, which is still a draft.","23/Feb/11 08:07;mgrigorov;I tend to agree with Holger.
With the current impl of ExternalLink Wicket provides a component which is vulnerable (session hijacking thru referer) in certain circumstances (disabled cookies).
A real fix would be to reimplement ExternalLink to normal Link which redirects in its onClick(). If this is not acceptable then we can at least mention this possible problem in the javadoc and add 'rel=""noreferrer""' attribute so at least new browsers can help preventing this security hole.",23/Feb/11 08:07;mgrigorov;Reopening to add javadoc at least.,"23/Feb/11 08:40;dashorst;-1 to serverside events with this component. That would break so many applications that would not be funny.

External link is nothing more than providing your markup with URLs from Java code. Similar to just having a <a href=""http://google.com""> in your markup. We are not going to fix those as well, nor webmarkupcontainers that have an attribute modifier to provide a href attribute, nor webmarkupcontainers that override onComponentTag and put a href attribute.

","23/Feb/11 08:48;mgrigorov;Javadoc explaining the possible problem and solution is added with r1073642 (1.4.x) and r1073641 (trunk).
rel=""noreferrer"" attribute is not added by default. It can be provided by the user application at any time.","23/Feb/11 16:27;ivaynberg;fwiw this is not going to work either:

 <p>
+ * <strong>Note</strong>: in the case when the support for cookies in the browser is disabled the
+ * user's jsessionid will leak in the 'Referrer' header after clicking this link. If this is a
+ * problem for the application then better use {@link Link} which redirects to the new URL using
+ * {@link RedirectToUrlException}.

the referer will then have the ;jsessionid=ABCD/?wicket:interface=.... url

in order to truly fix this one would have to redirect to a shared stateless resource that performs the redirect to the link url

so a link has to redirect to /wicket/resource/my-redirect-resource?url=my-final-destination
letting the resource there perform the final redirect and making sure that the above url does not have jsessionid in it by either building the url to it manually or not passing it through response.encodeurl() method.

this is not trivial, but its also not unique to wicket. all java applications have to do this dance if they dont want jsessionid in their urls.",23/Feb/11 16:59;mgrigorov;Reopen to update the javadoc,27/Feb/11 10:13;mgrigorov;The javadoc is updated with Igor's comment.,,,,,,,,,,,,,,,,,,,,,,,,,,
StringResourceStream has null lastModified time,WICKET-3187,12480716,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,23/Nov/10 19:23,23/Feb/11 08:16,13/Mar/19 23:17,23/Feb/11 08:14,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,1.5-RC3,,wicket,,,,,,,0,,,,,,,"From users@ :

...it fails with a NPE in (ResourceStreamResource.java line 72), because it seems is always expecting that any IResourceStream implementation set the lastModifiedTime in the underlying stream before calling dataNeedsToBeWritten....",,,,,,,,,,,,,,,,,,,,,,22/Feb/11 22:58;frankbille;WICKET-3187.patch;https://issues.apache.org/jira/secure/attachment/12471667/WICKET-3187.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-22 22:58:10.758,,,no_permission,,,,,,,,,,,203999,,,Wed Feb 23 08:14:09 UTC 2011,,,,,,0|i0kblj:,116696,,,,,,,,"23/Nov/10 19:26;mgrigorov;Fixed with r1038292.
Now every instance of AbstractStringResourceStream has Time.now() as initial value for lastModified at construction time.",22/Feb/11 22:58;frankbille;The fix for this issue causes the CssTemplate to fail on construction time. See the attached unit test.,"23/Feb/11 08:14;mgrigorov;Fixed with r1073630.
Thanks Frank!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
onremove() in RefreshingView.onPopulate,WICKET-3455,12499064,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,benediktrothe,benediktrothe,18/Feb/11 16:51,19/Feb/11 20:12,13/Mar/19 23:17,19/Feb/11 19:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,,,,0,,,,,,,"file a bug with a quickstart. onremove() should be called on all
removed components.

-igor

On Fri, Feb 18, 2011 at 5:38 AM, Benedikt Rothe <benedikt.rothe@qleo.de> wrote:
> > Hi
> >
> > Are the existing children of a RepeatingView/RefreshingView being informed,
> > when
> > the View is newly populated (RefreshingView.onPopulate).
> >
> > I'd like to clean some internal references in this case.
> > I tried:
> > - aChild.onRemove is not called in this situation
> > - aChild.setParent(null) is called. I treid to override setParent it. But
> > setParent is private.
> >
> > Any suggestions?
> > Benedikt
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-19 20:12:17.947,,,no_permission,,,,,,,,,,,204240,,,Sat Feb 19 20:12:17 UTC 2011,,,,,,0|i0kaxb:,116587,,,,,,,,"19/Feb/11 20:12;hudson;Integrated in Apache Wicket 1.4.x #450 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/450/])
    Issue: WICKET-3455
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Value exchange in a wicket:message throws an exception,WICKET-3454,12499038,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,newgro,newgro,18/Feb/11 13:40,19/Feb/11 13:39,13/Mar/19 23:17,19/Feb/11 13:39,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"i tried to exchange values in a <wicket:message> like described in wiki <https://cwiki.apache.org/WICKET/wickets-xhtml-tags.html#Wicket%27sXHTMLtags-Elementwicket:message>.
But i get an exception:
ERROR - RequestCycle               - No get method defined for class:
class org.apache.wicket.markup.resolver.MarkupInheritanceResolver$TransparentWebMarkupContainer expression: vat1value
org.apache.wicket.WicketRuntimeException: No get method defined for class:
class org.apache.wicket.markup.resolver.MarkupInheritanceResolver$TransparentWebMarkupContainer expression: vat1value
at org.apache.wicket.util.lang.PropertyResolver.getGetAndSetter(PropertyResolver.java:488)
at org.apache.wicket.util.lang.PropertyResolver.getObjectAndGetSetter(PropertyResolver.java:330)
at org.apache.wicket.util.lang.PropertyResolver.getObjectAndGetSetter(PropertyResolver.java:237)
...

Maybe it's caused by usage of border. I've debugged a bit, but could get a real glue.

I added a quick start with test case.",Windows 7 jdk 1.6_20,,,,,,,,,,,,,,,,,,,,,18/Feb/11 13:41;newgro;innercomponentwicketmessage.zip;https://issues.apache.org/jira/secure/attachment/12471397/innercomponentwicketmessage.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-19 12:55:53.521,,,no_permission,,,,,,,,,,,204239,,,Sat Feb 19 12:55:53 UTC 2011,,,,,,0|i0kaxj:,116588,,,,,,,,18/Feb/11 13:41;newgro;Quickstart for issue 3454,"19/Feb/11 12:55;jdonnerstag;Thanks. Fixed in 1.5

In case you are not planning to add components to the Border (compared to the BorderBody, like in your quickstart), a behavior such as MCB might be easier to 
use for you: http://wicket.apache.org/apidocs/1.4/org/apache/wicket/markup/html/border/MarkupComponentBorder.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxLazyLoadPanel doesn't render correctly after form submit,WICKET-3318,12495098,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,flavius17,flavius17,10/Jan/11 03:26,16/Feb/11 18:14,13/Mar/19 23:17,16/Feb/11 06:51,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,,,,,,,,0,,,,,,,"This occurs on a page with an AjaxLazyLoadPanel and a form.

If the form is submitted and the back button is used, the initial
page will not load the results of the AjaxLazyLoadPanel, but rather
display the busy indicator indefinitely.

",Windows,,,,,,,,,,,,,,,,,,,,,10/Jan/11 03:27;flavius17;AjaxLazyLoadPanel.zip;https://issues.apache.org/jira/secure/attachment/12467863/AjaxLazyLoadPanel.zip,10/Jan/11 11:47;pedrosans;WICKET-3318.patch;https://issues.apache.org/jira/secure/attachment/12467882/WICKET-3318.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-01-10 11:47:31.642,,,no_permission,,,,,,,,,,,204123,,,Wed Feb 16 18:14:04 UTC 2011,,,,,,0|i0kbb3:,116649,,,,,,,,10/Jan/11 03:27;flavius17;QuickStart to demonstrate the problem.  Read the ReadMe_1st.,"10/Jan/11 11:47;pedrosans;After lazy initialize the component, the AjaxLazyLoadPanel behavior mark itself as disabled and do not respond to further requests, even if they are targeting the behavior. IMO those BehaviorRequestTarget should be responded in order to respect back button.
Sending the patch plus test case coverage","10/Jan/11 12:45;pedrosans;Another solution would be disable the page caching, the HomePage on quickstart can override the setHeaders for instance:

    @Override
    protected void setHeaders(WebResponse response) {
        response.setHeader(""Pragma"", ""no-cache"");
        response.setHeader(""Cache-Control"", ""no-cache, no-store, max-age=0, must-revalidate"");
    }

Doing so, when back button get pressed the cached page will not try to invoke an already invoked behavior. Instead a new page version will be created.","16/Feb/11 18:14;hudson;Integrated in Apache Wicket 1.4.x #443 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/443/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session may not be replicated if the response page has not be modified,WICKET-3298,12494434,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mgrigorov,mgrigorov,02/Jan/11 10:41,16/Feb/11 06:28,13/Mar/19 23:17,16/Feb/11 06:28,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"Session#dirty property is not taken into account anymore and this could lead to non-replicated session in some cases.
For example if the user application adds a feedback message to the Session, or if the Session style/locale is changed and in the same time the response page is not touched (i.e. has no hierarchy changes) then the Wicket Session will not be stored in the http session and thus will not be replicated.

See http://apache-wicket.1842946.n4.nabble.com/WebSession-dirty-td3166933.html for more details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204105,,,2011-01-02 10:41:44.0,,,,,,0|i0kbdb:,116659,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invoking getParameter() on HttpServletRequest throws IllegalStateException,WICKET-3406,12497087,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wolfftw,wolfftw,28/Jan/11 18:33,16/Feb/11 04:01,13/Mar/19 23:17,16/Feb/11 04:01,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"ServletWebRequest reads the post parameters from entity body rather than using getParameterMap and/or getParamteterNames method as indicated by ServletAPI:

""If the parameter data was sent in the request body, such as occurs with an HTTP POST request, then reading the body directly via getInputStream() or getReader() can interfere with the execution of this method.""

IMO, trying to distinguish the get (query) parameters from the post parameters in the new Wicket request API is problematic.  The servlet API does not differentiate in terms of the parameter's source and programmers are therefore not inclined to handle them differently.  Within Wicket 1.4..x, the PageParameters object passed to a page's constructor contained parameters from both sources, now it no longer does, which will require that the user handle posted parameters separately - which is confusing. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-11 19:00:07.036,,,no_permission,,,,,,,,,,,204199,,,Mon Feb 14 23:29:09 UTC 2011,,,,,,0|i0kb2n:,116611,,,,,,,,11/Feb/11 19:00;mgrigorov;Duplicate of WICKET-3405,"14/Feb/11 15:39;wolfftw;Sorry, but this is not a duplicate of 3405.  If user retrieves HttpServletRequest, e.g. within a page constructor, and attempts to read parameters, because of how parameters are read by ServletWebRequest (via reader), an IllegalStateException will be thrown by HttpServletRequest.",14/Feb/11 15:43;mgrigorov;Please create a quickstart against 1.5-SNAPSHOT that reproduces the problem and attach it to this ticket.,14/Feb/11 23:29;wolfftw;What's a quickstart?  If you can send me a link to instructions I will try and carve out some time.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1.5 equivalant of protected void WebRequestCycle.onRequestTargetSet(IRequestTarget requestTarget) is mising from AbstractRequestCycleListener,WICKET-3415,12497504,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zhoozhoo,zhoozhoo,02/Feb/11 20:44,14/Feb/11 18:11,13/Mar/19 23:17,14/Feb/11 18:11,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,There is not method equivalent to WebRequestCycle.onRequestTargetSet(IRequestTarget requestTarget) in AbstractRequestCycleListener. ,"Window XP SP 3, JDK 1.5.0_22, Eclipse 3.6.1, Tomcat 5.5.31",,,,,,,,,,,,,,,,,,,,,14/Feb/11 11:06;pedrosans;WICKET-3415.patch;https://issues.apache.org/jira/secure/attachment/12470989/WICKET-3415.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-07 17:53:30.838,,,no_permission,,,,,,,,,,,204208,,,Mon Feb 14 18:11:57 UTC 2011,,,,,,0|i0kb1r:,116607,,,,,,,,"07/Feb/11 17:53;pedrosans;Request cycle on 1.5 maintain an stack of executions of request handlers, that is managed by RequestHandlerStack.
the patch:
- add those callback to IRequestCycleListener:
onRequestHandlerResolved
onExceptionRequestHandlerResolved
onRequestHandlerScheduled
- removes RequestHandlerStack from the RequestCycle hierarchy, since is it an object rather used by the RequestCycle than a parent of
- pulling executor API from RequestHandlerStack to IRequestHandlerExecutor interface
- add asserting lines in RequestCycleListenerTest to cover the new callbacks",14/Feb/11 17:58;mgrigorov;+1 for the patch.,14/Feb/11 18:11;ivaynberg;patch applied,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilterToolbar is broken in 1.5-SNAPSHOT,WICKET-3426,12497758,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,michael.ocleirigh,michael.ocleirigh,05/Feb/11 18:11,14/Feb/11 16:31,13/Mar/19 23:17,14/Feb/11 16:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-extensions,,,,,,,0,,,,,,,"A user reported an issue on wicketstuff-core phonebook.  As part of solving that issue I found a bug in FilterToolbar in wicket-extensions that throws a markup not found exception on rendering the component.

This is because the FilterToolbar was using getId() but its id is now handled differently.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204217,,,Sat Feb 05 19:11:36 UTC 2011,,,,,,0|i0kb0f:,116601,,,,,,,,"05/Feb/11 18:19;michael.ocleirigh;I've committed a patch for this bug into my fork of the wicket repository:

https://github.com/mocleiri/wicket/commit/e6a69c0ec9f51c80e0c8abb495ff3e0ba9ccb7ba

","05/Feb/11 19:11;michael.ocleirigh;I did some more digging and have found the true cause of the phonebook bug.  The wicket-extensions FilterForm now internally creates the focus tracking components instead of users having to do so in wicket 1.4.

The patch I offered looks exactly like how the FilterToolbar is implemented in wicket 1.4-SNAPSHOT.  I assume that FilterToolbar was changed due to refactoring so the full fix may have to take that into account.

This is the stack trace that is seen when running the phonebook example with the current 1.5-SNAPSHOT (without my patch applied):

org.apache.wicket.markup.MarkupException: Unable to find component with id 'filter' in [WebMarkupContainer [Component id = 1]]. This means that you declared wicket:id=filter in your markup, but that you either did not add the component to your page at all, or that the hierarchy does not match.
[markup = file:/home/mike/git/wicket/wicket-extensions/target/classes/org/apache/wicket/extensions/markup/html/repeater/data/table/filter/FilterToolbar.html
<span wicket:id=""filters"">
			<td wicket:id=""filter"" class=""filter-td"">[filter]</td>
		</span>, index = 2, current =  '<td wicket:id=""filter"" class=""filter-td"">' (line 42, column 4)]
	at org.apache.wicket.markup.MarkupStream.throwMarkupException(MarkupStream.java:536)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1437)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1537)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1512)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1466)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:69)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2502)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1475)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.markup.repeater.AbstractRepeater.renderChild(AbstractRepeater.java:110)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onRender(AbstractRepeater.java:97)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1537)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1512)
	at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:695)
	at org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy.onComponentTagBody(PanelMarkupSourcingStrategy.java:60)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2502)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1475)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.markup.repeater.AbstractRepeater.renderChild(AbstractRepeater.java:110)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onRender(AbstractRepeater.java:97)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1537)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1512)
	at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:695)
	at org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy.onComponentTagBody(PanelMarkupSourcingStrategy.java:60)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2502)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1475)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1537)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1512)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1466)
	at org.apache.wicket.markup.html.form.Form.onComponentTagBody(Form.java:1546)
	at org.apache.wicket.extensions.markup.html.repeater.data.table.filter.FilterForm.onComponentTagBody(FilterForm.java:68)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:69)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2502)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1475)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1537)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1512)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1466)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:69)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2502)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1475)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1537)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1512)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1466)
	at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:69)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2502)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1475)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1537)
	at org.apache.wicket.Page.onRender(Page.java:1054)
	at org.apache.wicket.Component.internalRender(Component.java:2366)
	at org.apache.wicket.Component.render(Component.java:2294)
	at org.apache.wicket.Page.renderPage(Page.java:1203)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:145)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:253)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:139)
	at org.apache.wicket.request.RequestHandlerStack.executeRequestHandler(RequestHandlerStack.java:84)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:205)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:247)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:138)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:923)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:547)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FLAG_INHERITABLE_MODEL and default model change,WICKET-3413,12497467,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,amorozov,amorozov,02/Feb/11 14:37,13/Feb/11 12:11,13/Mar/19 23:17,13/Feb/11 11:03,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,,,,0,,,,,,,"The issue is about correctness of Component#setDefaultModel (Component#setModelImpl) method behavior. I expect that the flag FLAG_INHERITABLE_MODEL should be checked there and turned off in case if new model is not a IComponentInheritedModel. 

Let check the next code:
public MyPanel(String id) {
 super(id);
  ...
  form.setModel(new CompoundPropertyModel(this));
  DropDownChoice ddc = new DropDownChoice(""variant"", Arrays.ofList(...)) {    // p1
    @Override
    protected void onInitialize() {
       super.onInitialize();
       setModel(new DefaultingWrapModel(getModel(), Model.of(""default value""));            // p2
    }
  };
  ddc.setNullValid(false);
  ddc.setRequired(true);
  form.add(ddc);
  ...
}

In the (p1) the DDC will initialize with CompoundPropertyModel and the FLAG_INHERITABLE_MODEL will be turned on soon by the first invocation of FormComponent#getModel().

 In the (p2) we wrap the DDC model with the model which provide the default value (DefaultingWrapModel implements IWrapModel). So we change the model, but the FLAG_INHERITABLE_MODEL is still turned on. On the Component#detach() event, the method Component#setModelImpl(null) will be invoked for the ddc and the DefaultingWrapModel instance will be lost:

		// reset the model to null when the current model is a IWrapModel and
		// the model that created it/wrapped in it is a IComponentInheritedModel
		// The model will be created next time.
		if (getFlag(FLAG_INHERITABLE_MODEL))
		{
			setModelImpl(null);
			setFlag(FLAG_INHERITABLE_MODEL, false);
		}

I think that such behavior is unexpected.

http://apache-wicket.1842946.n4.nabble.com/1-4-15-FLAG-INHERITABLE-MODEL-and-default-model-change-td3252093.html","Ubuntu 10.10/md64 JDK 1.6u23 x64
",,,,,,,,,,,,,,,,,,,,,08/Feb/11 14:01;amorozov;fix-WICKET-3413.patch;https://issues.apache.org/jira/secure/attachment/12470593/fix-WICKET-3413.patch,08/Feb/11 14:01;amorozov;test-WICKET-3413.patch;https://issues.apache.org/jira/secure/attachment/12470592/test-WICKET-3413.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-02-13 11:03:51.014,,,no_permission,,,,,,,,,,,204206,,,Sun Feb 13 12:11:48 UTC 2011,,,,,,0|i0kb1z:,116608,,,,,,,,13/Feb/11 11:03;mgrigorov;Improved with r1070211 (1.4.x) and r1070210 (trunk).,"13/Feb/11 12:11;hudson;Integrated in Apache Wicket 1.4.x #436 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/436/])
    WICKET-3413 FLAG_INHERITABLE_MODEL and default model change

reset 'inherited model' flag if model changed and a new one is not IComponentInheritedModel
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validation Error on AjaxEditableLabel causes ajax calls in loop on Chrome Browser,WICKET-3361,12496289,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mboillod,mboillod,21/Jan/11 15:19,13/Feb/11 11:11,13/Mar/19 23:17,13/Feb/11 10:24,1.4.15,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket-extensions,,,,,,,0,,,,,,,"On Chrome, the component AjaxEditableLabel causes an infinite ajax call's loop if there is an validation error on the input.

The attached project shows this bug (Enter ""false"" to reproduce the bug, and tape any key to stop it).

On Firefox, everithing is OK.",Windows 7 - Chrome 8,,,,,,,,,,,,,,,,,,,,,21/Jan/11 15:21;mboillod;test-ajax.zip;https://issues.apache.org/jira/secure/attachment/12468976/test-ajax.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-13 10:24:45.215,,,no_permission,,,,,,,,,,,204160,,,Sun Feb 13 11:11:54 UTC 2011,,,,,,0|i0kb6n:,116629,,,,,,,,21/Jan/11 15:21;mboillod;quickstart  project which reproduces this issue,13/Feb/11 10:24;mgrigorov;Fixed with r1070202 (1.4.x) and r1070203 (trunk),"13/Feb/11 11:11;hudson;Integrated in Apache Wicket 1.4.x #435 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/435/])
    WICKET-3361 Validation Error on AjaxEditableLabel causes ajax calls in loop on Chrome Browser

Do not re-render the AjaxEditableLabel's editor upon error. Just select and focus on it.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RememberMe doesn't remember me,WICKET-3412,12497453,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,linuxluigi,linuxluigi,02/Feb/11 11:18,13/Feb/11 09:21,13/Mar/19 23:17,13/Feb/11 09:21,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-auth-roles,,,,,,,0,wicket,,,,,,When remember me is checked a cookie with crypted username and password should be set I think. But no cookie was set. So when the browser is closed and opened again I was asked again for username and password. ,I used wicket-examples authentication3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-13 09:21:42.122,,,no_permission,,,,,,,,,,,204205,,,Sun Feb 13 09:21:42 UTC 2011,,,,,,0|i0kb27:,116609,,,,,,,,13/Feb/11 09:21;mgrigorov;Fixed with r1070197.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Url interception doesn't work if the ""intercepting"" page is stateless",WICKET-3339,12495712,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,16/Jan/11 15:58,11/Feb/11 19:41,13/Mar/19 23:17,11/Feb/11 19:41,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"wicket-examples -> authentication2 is broken.

The problem is that trying to request Home page (""/"") is not allowed for not authenticated users and the security strategy intercepts the request and renders Sign2 page (""wicket/bookmarkable/org.apache.wicket.examples.authentication2.SignIn2"") and later WebPageRenderer directly renders Sign2 page in the current response because this page is stateless (redirect_to_xyz is not used for stateless pages).
The final problem is that the relative urls in the page are broken because they were calculated against ""wicket/bookmarkable/org.apache.wicket.examples.authentication2.SignIn2"" but the browser still uses ""/"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-25 11:12:26.519,,,no_permission,,,,,,,,,,,204141,,,Fri Feb 11 19:41:18 UTC 2011,,,,,,0|i0kb8f:,116637,,,,,,,,"17/Jan/11 09:16;mgrigorov;Set ""Fix version"" to 1.5-RC1 because we need to fix this ticket before releasing 1.5-RC1",18/Jan/11 10:55;mgrigorov;Fixed with r1060302,"25/Jan/11 11:12;dashorst;This breaks (existing) expectations about when a redirect happens. REDIRECT_* should always redirect after a post IMO, regardless of whether the rendered page is stateless or not.

In my program, I perform a setResponsePage(FooPage.class, new PageParameters()) in a form submit (POST) of a login page. At the end of the request, the page is rendered directly but no redirect has happened. This is weird, since I expected a redirect. Furthermore, the resulting markup doesn't contain correct resource links.

Request URL:http://localhost:8080/wicket/page?5-1.IFormSubmitListener-form
Request Method:POST
Status Code:200 OK
Request Headers


<!DOCTYPE html>
<html xmlns:wicket>
<head>
	<meta charset=""utf-8"">
	<link rel=""stylesheet"" type=""text/css"" href=""style/style.css"" media=""screen"" title=""no title"" charset=""utf-8""/>
</head>
<body>

The response is still at URL:  http://localhost:8080/wicket/page?5-1.IFormSubmitListener-form

Somehow the href for the style does not reflect the relative path necessary for both the current URL (under /wicket/page) nor (should it work, the redirect URL, under /lunch/vandaag).

","25/Jan/11 11:35;mgrigorov;As we discussed for stateless pages there may be no Session and therefore no session id and redirect_to uses a map on Application level.
The check for ""is there a stored response for this url on a stateless page"" will may fail because the session id may be different if there is no bound session so far.

Anyway, this is not the correct ticket to reopen. The one you need is WICKET-3239.",25/Jan/11 16:43;ivaynberg;maybe instead of rediret to buffer we can handle this with redirect to render.,"11/Feb/11 19:41;mgrigorov;As I already said this ticket didn't introduce any problem.

The described problem should be fixed with this commit:

Author: ivaynberg
Date: Fri Feb 11 06:54:43 2011
New Revision: 1069685

URL: http://svn.apache.org/viewvc?rev=1069685&view=rev
Log:

Issue: WICKET-3442",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
onselect script is not called for AutoCompleteTextField,WICKET-3437,12498112,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wroczniak,wroczniak,09/Feb/11 10:51,11/Feb/11 08:23,13/Mar/19 23:17,11/Feb/11 07:24,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket-extensions,,,,,,,1,wicket,,,,,,"Each autcomplete result displayed by AutoCompleteTextField can have 'onselect' script which 
is called when result is selected.
This method is not called when results are rendered as table.
",,,,,,,,,,,,,,,,,,,,,,09/Feb/11 10:56;wroczniak;patch.patch;https://issues.apache.org/jira/secure/attachment/12470666/patch.patch,09/Feb/11 10:54;wroczniak;wicketAutocompletBug-1.0.war;https://issues.apache.org/jira/secure/attachment/12470665/wicketAutocompletBug-1.0.war,09/Feb/11 11:08;wroczniak;wicketAutocompletBug.zip;https://issues.apache.org/jira/secure/attachment/12470667/wicketAutocompletBug.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-02-11 08:23:04.535,,,no_permission,,,,,,,,,,,204224,,,Fri Feb 11 08:23:04 UTC 2011,,,,,,0|i0kazb:,116596,,,,,,,,"09/Feb/11 10:54;wroczniak;Example of two autocomplete fields.
One render results as list, second as table",09/Feb/11 10:56;wroczniak;proposed changes,"11/Feb/11 08:23;hudson;Integrated in Apache Wicket 1.4.x #427 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/427/])
    Issue: WICKET-3437
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CryptoMapper jumping into directory,WICKET-3425,12497753,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zwiep,zwiep,05/Feb/11 15:00,11/Feb/11 07:33,13/Mar/19 23:17,11/Feb/11 07:33,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,RequestMapper,,,,,,"Add this to the application init:

        setRootRequestMapper(new CryptoMapper(getRootRequestMapper(), this));

Next request the homepage, this results in ""page"":

Directory: /

WEB-INF/ 4096 bytes Feb 5, 2011 2:44:45 PM
logo.png 12244 bytes Feb 5, 2011 2:44:45 PM
style.css 1312 bytes Feb 5, 2011 2:44:45 PM


Will attach a quickstart. 




","ubuntu 10.04.1 amd64 / 1.5-RC1 / 1.5-SNAPSHOT

",,,,,,,,,,,,,,,,,,,,,05/Feb/11 15:07;zwiep;cryptomapper.tar.gz;https://issues.apache.org/jira/secure/attachment/12470366/cryptomapper.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204216,,,2011-02-05 15:00:54.0,,,,,,0|i0kb0n:,116602,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POST fails if request.getParameter called by ServletFilter,WICKET-3405,12497081,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mikeseawa,mikeseawa,28/Jan/11 16:47,10/Feb/11 07:58,13/Mar/19 23:17,10/Feb/11 07:58,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"1.5-RC1 implementation of the ServletWebRequest generatePostParameters method that calls request.getReader().

The result is that the POST fails in both jetty and Tomcat.

The ServletWebRequest.generatePostParameters method implementation attempts to handle this situation with a try catch that catchs IOException. If an IOException is thrown with the request.getReader() call then it uses request.getParameter() to get the POST parameters. However, in both jetty and tomcat 6, it is not an IOException that is thrown but an IllegalStateException.","linux
jdk 1.6.0_11
jetty 7.2.2.v20101205
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-10 07:58:36.812,,,no_permission,,,,,,,,,,,204198,,,Thu Feb 10 07:58:36 UTC 2011,,,,,,0|i0kb2v:,116612,,,,,,,,10/Feb/11 07:58;ivaynberg;we will now catch Exception instead,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in wicket-ajax.js when trying to log debug messages to js console,WICKET-3427,12497790,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zwiep,zwiep,06/Feb/11 11:44,10/Feb/11 07:13,13/Mar/19 23:17,10/Feb/11 07:13,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,,,,,,,,0,,,,,,,"sometimes these errors pop-up:

ERROR - RequestCycle               - Error during processing error message
java.lang.IllegalStateException: Current ajax request is missing the base url header or parameter
	at org.apache.wicket.util.lang.Checks.notNull(Checks.java:37)

and when this happens, the ajax debug window shows
ERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element
ERROR: Wicket.Ajax.Call.failure: Error while parsing response: console is not defined

and when trying to hit another ajax element, this shows up:
INFO: Channel busy - postponing...



I'll be attaching a quickstart -- however I cannot reproduce the problem via the wickettester. It just happens when clicking around in the browser. Sometimes it just works, but more often the error shows up after clicking links only 2 times.

It seems to be related to having ajax components INSIDE the components which are triggered through the event mechanism.





",ubuntu 10.04.1 amd64 ,,,,,,,,,,,,,,,,,,,,,06/Feb/11 11:48;zwiep;eventsandajax.tar.gz;https://issues.apache.org/jira/secure/attachment/12470394/eventsandajax.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-10 04:06:33.454,,,no_permission,,,,,,,,,,,204218,,,Thu Feb 10 04:06:33 UTC 2011,,,,,,0|i0kb07:,116600,,,,,,,,"10/Feb/11 04:06;ivaynberg;seems to only be broken in FireFox, works in IE and Chrome
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IRequestCycleListener: RequestCycle.get() is null inside onBeginRequest,WICKET-3428,12497840,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,daniel.soneira,daniel.soneira,07/Feb/11 12:32,10/Feb/11 03:53,13/Mar/19 23:17,10/Feb/11 03:53,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"I expect the request cycle that is supplied as an argument to onBeginRequest to be the same as RequestCycle.get.

== == == CODE == == ==

    @Override
    public void onBeginRequest(RequestCycle cycle) {
        Session session = Session.get(); // throws IllegalArgumentException
        if (session.getMetaData(REDIRECTED_JSESSIONID) == null) {
            logger.debug(""first application request - redirecting to loading page"");
            session.setMetaData(REDIRECTED_JSESSIONID, Boolean.TRUE);
            String url = getServletRequestContextPath() + ""/"" + cycle.getRequest().getUrl();
            throw new RestartResponseException(newLoadingPage(url));
        }
    }
== == == == == == == ==


== == == STACK TRACE == == ==

java.lang.IllegalArgumentException: Argument 'requestCycle' may not be null.
    at org.apache.wicket.util.lang.Args.notNull(Args.java:37)
    at org.apache.wicket.Application.fetchCreateAndSetSession(Application.java:1436)
    at org.apache.wicket.Session.get(Session.java:154)
    at com.joynit.tuv.common.view.request.SessionIdRemoveListener.onBeginRequest(SessionIdRemoveListener.java:30)

... [snipped -other part is not relevant]

== == == == == == == == == == ==",,,,,,,,,,,,,,,,,,,,,,07/Feb/11 13:46;pedrosans;WICKET-3428.patch;https://issues.apache.org/jira/secure/attachment/12470450/WICKET-3428.patch,07/Feb/11 12:33;daniel.soneira;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12470439/quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-02-07 13:46:50.535,,,no_permission,,,,,,,,,,,204219,,,Mon Feb 07 13:46:50 UTC 2011,,,,,,0|i0kazz:,116599,,,,,,,,07/Feb/11 12:33;daniel.soneira;added quickstart,07/Feb/11 13:46;pedrosans;Patch just moving the call to the request cycle listener out the utility method that don't have the RC set in the thread local variable,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switching from HttsRequired page to http page with forms in both pages,WICKET-3407,12497100,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,hok,hok,28/Jan/11 21:10,10/Feb/11 01:05,13/Mar/19 23:17,10/Feb/11 01:05,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"There are two pages TestPage (homepage, HttsRequired) and TestPage2 (http only). 
TestPage2 contains empty form:

	add(new Form<Void>(""form""));


TestPage contains a form with a single submit button:

Form<String> form = new Form<String>(""form"", new Model<String>()) {

        private static final long serialVersionUID = 7401870238638554392L;

	@Override
	protected void onSubmit() {
		setResponsePage(TestPage2.class);
	}
};
add(form);

When the form is submitted a NullPointerException is throw during the render of TestPage2:

java.lang.NullPointerException
     at org.apache.wicket.markup.html.form.Form.onComponentTag(Form.java:1400)
     at org.apache.wicket.Component.internalRenderComponent(Component.java:2473)
     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1475)
     at org.apache.wicket.Component.internalRender(Component.java:2366)
..................

This exception is thrown in TestPage2's form in the method onComponentTag on line 1400:

     String url = getActionUrl().toString();

because getActionUrl() returns null. Debugging getActionUrl leads to RequestCycle->mapUrlFor and there requestMapper.mapHandler(handler); fails to map the handler. The ""handler"" variable is of type SwitchProtocolRequestHandler.

This can be reproduced with the attached quickstart. It's using the default ports (80 and 443) and a self-signed certificate (hope there are no problems with it).",1.5-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,28/Jan/11 21:11;hok;quickstart.rar;https://issues.apache.org/jira/secure/attachment/12469700/quickstart.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204200,,,2011-01-28 21:10:58.0,,,,,,0|i0kb2f:,116610,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpServletResponse is No Longer Accessible via 1.5 API,WICKET-3399,12496961,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wolfftw,wolfftw,27/Jan/11 17:31,27/Jan/11 18:36,13/Mar/19 23:17,27/Jan/11 17:58,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"After migrating from 1.4.x to 1.5 RCI, a breaking change was encountered.  I used to be able to access the servlet response object via:

getWebRequestCycle().getWebResponse().getHttpServletResponse();

And after migrating, expected to be able to use:

((ServletWebResponse)getResponse()).getHttpServletResponse();

But I get  a ClassCastException because ServletWebResponse is wrapped a couple of times, i.e. by BufferedWebResponse and then again by HeaderBufferingWebResponse.  And ... these wrapper classes do not provide an API to access the original wrapped response, i.e. the HttpServletResponse.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-27 17:58:37.77,,,no_permission,,,,,,,,,,,204194,,,Thu Jan 27 18:36:14 UTC 2011,,,,,,0|i0kb3j:,116615,,,,,,,,27/Jan/11 17:58;ivaynberg;see Response.getContainerResponse(),"27/Jan/11 18:09;wolfftw;Thanks.  For the sake of consistency, you might want to add Request.getContainerRequest() .  And ... deprecate ServletWebResponse and ServletWebRequest as they no longer serve a purpose.","27/Jan/11 18:11;ivaynberg;yeah, was just thinking about Request.getContainerRequest() 

ServletWebResponse and request are the classes that actually delegate calls to the container objects, so they very much serve a purpose :)","27/Jan/11 18:23;wolfftw;sorry.  i meant deprecate the methods getHttpServletResponse and getHttpServletRequest rather than deprecating the class itself.  or ... remove them altogether, which would force us (the users) to use the new methods you're creating.  all other methods in these two classes are overriding methods on super, i.e. the only reason users would cast to ServletWebRequest or ServletWebResponse would be to get the container request/response.","27/Jan/11 18:36;ivaynberg;yeah. that makes sense. done.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect casts to AuthenticatedWebSession in AuthenticatedWebApplication class,WICKET-3388,12496728,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,von_zeppelin,von_zeppelin,25/Jan/11 21:26,26/Jan/11 16:59,13/Mar/19 23:17,26/Jan/11 16:59,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-auth-roles,,,,,,,0,,,,,,,"After resolving bug WICKET-2971, several methods in AuthenticatedWebApplication still contain casts to AuthenticatedWebSession instead of casts to AbstractAuthenticatedWebSession. It makes AuthenticatedWebApplication not reusable with custom implementations of AbstractAuthenticatedWebSession class. Several cosmetic changes in code and javadoc should be done.",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,25/Jan/11 21:30;von_zeppelin;patch.patch;https://issues.apache.org/jira/secure/attachment/12469335/patch.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-26 16:59:59.858,,,no_permission,,,,,,,,,,,204184,,,Wed Jan 26 16:59:59 UTC 2011,,,,,,0|i0kb4f:,116619,,,,,,,,25/Jan/11 21:30;von_zeppelin;Patch with fixes,26/Jan/11 16:59;ivaynberg;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax headercontribution does not handle resourcereference id's,WICKET-3378,12496533,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,24/Jan/11 13:13,24/Jan/11 13:37,13/Mar/19 23:17,24/Jan/11 13:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"For example:
* create a Behavior, which will add some JavaScript reference in it's renderHead (the reference has an own id, so wicket could prevent duplications)
* create an invisible component and add this behavior to it
* make that component visible with ajax
* the new script tag will look something like this:
<script id="""" src_=""./wicket/resource/com.mycompany.HomePage/demo-ts1295874265000.js"">alert('hello');</script>

Note here:
* the id attribute is empty. (Why set id attribute if it's content is empty?)
* there is no type=""text/javascript"" attribute which is a required attribute.",,,,,,,,,,,,,,,,,,,,,,24/Jan/11 13:14;aldaris;wicket-3378.tar.gz;https://issues.apache.org/jira/secure/attachment/12469147/wicket-3378.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-24 13:37:20.501,,,no_permission,,,,,,,,,,,204175,,,Mon Jan 24 13:37:20 UTC 2011,,,,,,0|i0kb5j:,116624,,,,,,,,24/Jan/11 13:14;aldaris;Check out the attached quickstart application with Firebug for an example.,"24/Jan/11 13:15;aldaris;This is happening with 1.5-SNAPSHOT, but probably with 1.5-RC1 too.",24/Jan/11 13:37;mgrigorov;Fixed with r1062767,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket-Guice integration fails - can't find application attached to current thread,WICKET-3358,12496183,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mzganiacz,mzganiacz,20/Jan/11 21:39,24/Jan/11 00:16,13/Mar/19 23:17,23/Jan/11 06:37,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,,,wicket-guice,,,,,,,0,,,,,,,"Simply by starting new project from wicket archetype, then adding a dependency to guice 2.0 and wicket-guice 1.4.8 and providing the guice module through web.xml to GuiceComponentInjector one can get the exception when starting jetty:
org.apache.wicket.WicketRuntimeException: There is no application attached to current thread main
	at org.apache.wicket.Application.get(Application.java:179)
	at org.apache.wicket.injection.web.InjectorHolder.setInjector(InjectorHolder.java:88)
	at org.apache.wicket.guice.GuiceComponentInjector.<init>(GuiceComponentInjector.java:102)
	at org.apache.wicket.guice.GuiceWebApplicationFactory.createApplication(GuiceWebApplicationFactory.java:177)
	at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:701)
	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:713)
...


","Windows 7, JSDK 1.6.21, Maven 3.0.3",,,,,,,,,,,,,,,,,,,,,20/Jan/11 21:42;mzganiacz;wicketBugDemo.rar;https://issues.apache.org/jira/secure/attachment/12468898/wicketBugDemo.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-23 16:53:13.881,,,no_permission,,,,,,,,,,,204157,,,Mon Jan 24 00:16:50 UTC 2011,,,,,,0|i0kb73:,116631,,,,,,,,"20/Jan/11 21:42;mzganiacz;Maven project where bug can be reproduced.
When wicket version changed to 1.4.7 everything works ok.
Bug affects versions 1.4.8 to 1.4.15",23/Jan/11 16:53;ivaynberg;doesnt need to be fixed in 1.5,"24/Jan/11 00:16;hudson;Integrated in Apache Wicket 1.4.x #398 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/398/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve JavaScriptPackageResource#toString() to show filename instead of default Object#toString(),WICKET-3135,12478438,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dashorst,dashorst,27/Oct/10 09:46,24/Jan/11 00:16,13/Mar/19 23:17,23/Jan/11 06:41,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,,,wicket,,,,,,,1,,,,,,,"For seeing the difference between normal page requests (and ajax requests) and resource request, the requestlogger needs to output the actual filename of the resource. This allows for a top 10 most requested resources...",,,,,,,,,,,,,,,,,,,,,,01/Nov/10 22:52;sverre_boschman;fix-WICKET-3135.patch;https://issues.apache.org/jira/secure/attachment/12458590/fix-WICKET-3135.patch,01/Nov/10 22:48;sverre_boschman;test-WICKET-3135.patch;https://issues.apache.org/jira/secure/attachment/12458588/test-WICKET-3135.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-31 18:18:28.075,,,no_permission,,,,,,,,,,,203953,,,Mon Jan 24 00:16:49 UTC 2011,,,,,,0|i0kbpz:,116716,,,,,,,,31/Oct/10 18:18;mgrigorov;Fixed with r1029437 in 1.4.x and r1029441 in 1.5.x,"01/Nov/10 00:17;hudson;Integrated in Apache Wicket 1.4.x #242 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/242/])
    ","01/Nov/10 00:28;hudson;Integrated in Apache Wicket 1.5.x #476 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/476/])
    ","01/Nov/10 22:48;sverre_boschman;Actually it is not the toString() from JavascriptPackageResource that is causing the problem for the requestlogger. It is the toString() from the underlying resourcestream.

Two output examples of the requestlogger:
[ResourceStreamRequestTarget[resourceStream=org.apache.wicket.markup.html.JavascriptPackageResource$2@3796a671,fileName=null]
[ResourceStreamRequestTarget[resourceStream=jar:file://wickext/resources/auto/ui.autocomplete.css,fileName=null]

Both resources are served by a ResourceStreamRequestTarget, which does a resourceStream.toString() to generate the requestlog output in its own toString() method. The FilteringResourceStream and CompressingResourceStream used for the javascript resources do not implement a toString() and are responsible for the stream hashcode in the requestlogger.

Added unittest example.",01/Nov/10 22:52;sverre_boschman;Added a patch with an override of toString() like getLocale() and lastModifiedTime() for both Compressed and Filtering streams. ,02/Nov/10 07:59;dashorst;Patch provided by developer,"28/Nov/10 02:51;jthomerson;removing fix versions since this was reopened, which must mean that it's not fixed in these versions","24/Jan/11 00:16;hudson;Integrated in Apache Wicket 1.4.x #398 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/398/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
forminput examle: switching locales does not have the desired effect.,WICKET-3363,12496350,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ehillenius,ehillenius,21/Jan/11 22:51,22/Jan/11 22:43,13/Mar/19 23:17,22/Jan/11 22:43,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-examples,,,,,,,0,,,,,,,localization in the forminput example does not appear to be working. See: http://screencast.com/t/xxZFfUzi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-22 09:00:19.895,,,no_permission,,,,,,,,,,,204162,,,Sat Jan 22 22:43:38 UTC 2011,,,,,,0|i0kb6f:,116628,,,,,,,,"22/Jan/11 09:00;jdonnerstag;This is how it used to be (see http://www.wicket-library.com/wicket-examples/forminput/wicket/bookmarkable/org.apache.wicket.examples.forminput.FormInput?8)

    <form class=""inputForm"" id=""id1"" method=""post"" action=""wicket/page?6-7.IFormSubmitListener-inputForm""><div style=""width:0px;height:0px;position:absolute;left:-100px;top:-100px;overflow:hidden""><input type=""hidden"" name=""id1_hf_0"" id=""id1_hf_0"" /></div>
 	 <div>
		Locale:
		<select onchange=""document.getElementById(&#039;id1_hf_0&#039;).value=&#039;./page?6-7.IOnChangeListener-inputForm-localeSelect&#039;;document.getElementById(&#039;id1&#039;).submit();"" name=""localeSelect"">
<option selected=""selected"" value=""0"">Englisch</option>

And this is how it looks like now
    <form class=""inputForm"" id=""id22"" method=""post"" action=""../page?8-1.IFormSubmitListener-inputForm""><div style=""width:0px;height:0px;position:absolute;left:-100px;top:-100px;overflow:hidden""><input type=""hidden"" name=""id22_hf_0"" id=""id22_hf_0"" /></div>
 	 <div>
		Locale:
		<select onchange=""document.getElementById('id22_hf_0').value='page?8-1.IOnChangeListener-inputForm-localeSelect';document.getElementById('id22').submit();"" name=""localeSelect"">
<option value=""0"">Englisch</option>

There are obvious differences in form action which I think are ok, but also select onchange. These changes seem to cause the difference.",22/Jan/11 15:16;mgrigorov;With r1062172 the problem is fixed.,"22/Jan/11 15:18;mgrigorov;Igor, can you take a look at Url.java, line 780. It has the following code:

// process any ../ segments in the relative url
while (!relative.getSegments().isEmpty() && 			("""".equals(relative.getSegments().get(0))

I think this check for """" is wrong and should be removed.
I added the correct check for "".."".","22/Jan/11 22:43;ivaynberg;yeah, seems rather strange that it was checking for an empty string, i removed the old check.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ITab.getPanel() should be able to return Panel or Fragment; not just Panel,WICKET-3359,12496195,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jdonnerstag,jdonnerstag,20/Jan/11 23:02,21/Jan/11 19:16,13/Mar/19 23:17,21/Jan/11 19:16,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"> Findings (I can also create jira issues for all of them, just let me know):
> 1) based on Migration Guide 1.5, TabbedPanel improvement:
> 'ITab.getPanel() now returns WebMarkupContainerWithAssociatedMarkup instead
> of Panel so it is now possible to create tabs using Fragments or Panels
> rather then just Panels.'
>
> WebMarkupContainerWithAssociatedMarkup does not exists anymore and
> ITab.getPanel() returns Panel again. so it is no longer possible to use
> Fragments directly.
>

I kind try to fix that. There was no test case (or example) and from
the name getPanel() it wasn't obvious to me that Fragments can also be
an option. And you are right WebMarkupContainerWithAssociatedMarkup is
gone lately. The return type should than probably be
WebMarkupContainer as Panel or Fragment are now merely ""mixins"". A
Jira issue for that with a testcase or quickstart would be great.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204158,,,2011-01-20 23:02:15.0,,,,,,0|i0kb6v:,116630,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The password field in Authentication1 wicket example is not visible in html5 browsers ,WICKET-3356,12496166,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,20/Jan/11 19:21,20/Jan/11 19:21,13/Mar/19 23:17,20/Jan/11 19:21,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-examples,,,,,,,0,,,,,,,"The password input field has an attribute hidden=""1"" which causes the field to be not visible in browsers which support html5 forms (Google Chrome and Firefox 4.x)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204155,,,Thu Jan 20 19:21:40 UTC 2011,,,,,,0|i0kb7b:,116632,,,,,,,,20/Jan/11 19:21;mgrigorov;Fixed with r1061181,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UploadProgressbar doesn't work when nested in ModalWindow (using IE 8.0.7600),WICKET-3307,12494586,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,paul ms,paul ms,04/Jan/11 12:17,17/Jan/11 14:46,13/Mar/19 23:17,17/Jan/11 14:46,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket,wicket-extensions,,,,,,0,,,,,,,"When a UploadProgressbar is nested in a ModalWindow you cannot upload anything, due to a JavaScript Problem while using IE 8.  Firefox, Chrome, etc. are fine.
IE says: Unknown Runtimeerror
In Debugmode I can narrow it down to progressbar.js, Line 31 

For reproduction I attached a quickstart.

Thanks
","Window 7, 32 Bit, IE 8",,,,,,,,,,,,,,,,,,,,,13/Jan/11 18:28;pedrosans;WICKET-3307.patch;https://issues.apache.org/jira/secure/attachment/12468274/WICKET-3307.patch,04/Jan/11 15:02;paul ms;myproject.rar;https://issues.apache.org/jira/secure/attachment/12467424/myproject.rar,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-01-04 14:05:48.755,,,no_permission,,,,,,,,,,,204114,,,Mon Jan 17 14:40:41 UTC 2011,,,,,,0|i0kbc7:,116654,,,,,,,,"04/Jan/11 14:05;pedrosans;Hi Paul, I think u miss upload the quickstart, the one attached do not use
UploadProgressbar


","04/Jan/11 15:03;paul ms;You're right, took the wrong quickstart.","04/Jan/11 18:01;pedrosans;looks like IE fails attributing a new string to the innerHTML variable of newly created DOM component, testing it here using the String#replace javascript function and is working fine, I will test in another browsers also.","04/Jan/11 20:11;pedrosans;Replace function just return a new string, any attributions try to innerHTML
throw an exception, still studding an solution. Any one had this problem
before?




-- 
Pedro Henrique Oliveira dos Santos
","05/Jan/11 17:07;pedrosans;I found this blog entry: http://domscripting.com/blog/display/99
I will try some DOM manipulation - add/replace an label - rather than attribute a new innerHTML string.","07/Jan/11 00:28;hudson;Integrated in Apache Wicket 1.4.x #373 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/373/])
    ","10/Jan/11 17:18;pedrosans;Actually in the Paul quickstart the progress bar was inside an root form inside the modal panel. ModalWindow is not designed to contain top level forms, and the resulting HTML when opening the modal window is an form tag inside another.

If we fix it by adding an form higher in the hierarchy, the quickstart stop working.","13/Jan/11 16:06;pedrosans;New patch detecting if there is an ModalWindow in the hierarchy. But in order to the progress bar work nicely, nested forms in ModalWindow needs to be submitted by an AJAX submit component.","13/Jan/11 18:28;pedrosans;same patch, just code clean up","17/Jan/11 14:40;hudson;Integrated in Apache Wicket 1.4.x #389 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/389/])
    Detecting if there is an ModalWindow in the hierarchy to bind the JavaScript to the correct form.
Issue: WICKET-3307
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TextField shows HTML entities instead of UTF-8 characters,WICKET-3330,12495526,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,13/Jan/11 18:46,16/Jan/11 12:28,13/Mar/19 23:17,14/Jan/11 09:25,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"It looks like that for some reason now the TextFields (at least, could be other FormComponents too) shows HTML entities instead of UTF-8 characters. See the attached quickstart for example.",,,,,,,,,,,,,,,,,,,,,,13/Jan/11 19:46;pedrosans;WICKET-3330.patch;https://issues.apache.org/jira/secure/attachment/12468286/WICKET-3330.patch,13/Jan/11 18:48;aldaris;wicket-3330.tar.gz;https://issues.apache.org/jira/secure/attachment/12468278/wicket-3330.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-01-13 19:46:37.849,,,no_permission,,,,,,,,,,,204134,,,Fri Jan 14 09:25:38 UTC 2011,,,,,,0|i0kb9j:,116642,,,,,,,,13/Jan/11 18:48;aldaris;Simple sample project.,13/Jan/11 19:46;pedrosans;Patch just seting the escape model string property to false by default. I think this would be the correct fix.,13/Jan/11 21:07;mgrigorov;I broke it with another change. Will be fixed tomorrow,"13/Jan/11 21:42;akiraly;Only slightly related but it seems there is an other inconsistency. Different escaping is used when there are field errors and when not.

To reproduce:
Add a string min length validator (with 10 length) to the ""field"" textfield in Péters quickstart
Load up page in browser and type in this (WITH quotes): 'áé<&>' (its short only 7 chars) and post.
Note that now the ""áé"" characters will not get escaped but the other characters will. If you send more than 10 characters everything will be escaped as in the original example.

The reasons seems to be in markup.html.form.FormComponent.getValue(): there is an if that is based on the errors in some way.
If there was an error Strings.escapeMarkup(rawInput) (its like Strings.escapeMarkup(rawInput, false, false)) is called.
If there was no error Strings.escapeMarkup(modelString, false, true) is called in Component.getDefaultModelObjectAsString(Object).
That last boolean parameter decides if unicode characters need escaping or not. Next to disabling model string escaping by default this should be fixed too (I am for not escaping unicode parameters).",14/Jan/11 09:25;mgrigorov;Fixed with r1058909,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Quickstart project should depend on slf4j 1.6.1,WICKET-3329,12495523,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,13/Jan/11 18:42,16/Jan/11 12:28,13/Mar/19 23:17,14/Jan/11 09:43,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-quickstart,,,,,,,0,,,,,,,"The quickstart in trunk depends on 1.5.8, but wicket-core depends on 1.6.1, and this two version doesn't fit together resulting in nice stacktraces while running Start.java.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-13 19:00:18.743,,,no_permission,,,,,,,,,,,204133,,,Fri Jan 14 09:43:20 UTC 2011,,,,,,0|i0kb9r:,116643,,,,,,,,"13/Jan/11 19:00;pedrosans;slf4j dependency has compile scope in Wicket pom, how about remove it from the quickstart pom file?","14/Jan/11 09:41;mgrigorov;wicket-core/pom.xml specifies slf4j-api. The user application (in this case the quickstart app) needs to provide slf4j implementation (in the quickstart case - slf4j-log4j + log4j itself). Other apps may prefer to work with LogBack or java.util.logging, or anything else.",14/Jan/11 09:43;mgrigorov;Fixed with r1058915,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DropDownChoice with wantOnSelectionChangedNotifications fails without Form,WICKET-3331,12495532,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,13/Jan/11 19:33,16/Jan/11 12:28,13/Mar/19 23:17,14/Jan/11 10:05,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"If you have a DDC without a form, then in onSelectionChanged the new selection will be always null. As soon as you put a Form around the DDC, it just starts to work.
Although the HTML 4 DTD does not allow a select tag outside a form, Wicket supported this behaviour, and this feature also worked with 1.5-M3 too.
See the attached project showing that the newSelection is null if the DDC is not inside a form.",,,,,,,,,,,,,,,,,,,,,,13/Jan/11 19:36;aldaris;wicket-3331.tar.gz;https://issues.apache.org/jira/secure/attachment/12468285/wicket-3331.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-14 10:05:48.581,,,no_permission,,,,,,,,,,,204135,,,Fri Jan 14 10:05:48 UTC 2011,,,,,,0|i0kb9b:,116641,,,,,,,,13/Jan/11 19:36;aldaris;Quickstart project demonstrating the problem.,14/Jan/11 10:05;mgrigorov;Fixed with r1058922,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when reloading updated markup in development mode,WICKET-3336,12495678,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,wboyce@panix.com,wboyce@panix.com,15/Jan/11 16:17,16/Jan/11 03:25,13/Mar/19 23:17,15/Jan/11 16:38,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"11:15:29.504 [ModificationWatcher Task] ERROR org.apache.wicket.util.thread.Task - Unhandled exception thrown by user code in task ModificationWatcher
java.lang.NullPointerException: null
	at org.apache.wicket.markup.MarkupCache.removeMarkup(MarkupCache.java:151) [wicket-1.5-M3.jar:1.5-M3]
	at org.apache.wicket.markup.MarkupCache$1.onChange(MarkupCache.java:469) [wicket-1.5-M3.jar:1.5-M3]
	at org.apache.wicket.util.listener.ChangeListenerSet$1.notify(ChangeListenerSet.java:44) [wicket-util-1.5-M3.jar:1.5-M3]
	at org.apache.wicket.util.listener.ChangeListenerSet$1.notify(ChangeListenerSet.java:42) [wicket-util-1.5-M3.jar:1.5-M3]
	at org.apache.wicket.util.listener.ListenerCollection.notify(ListenerCollection.java:78) [wicket-util-1.5-M3.jar:1.5-M3]
	at org.apache.wicket.util.listener.ChangeListenerSet.notifyListeners(ChangeListenerSet.java:39) [wicket-util-1.5-M3.jar:1.5-M3]
	at org.apache.wicket.util.watch.ModificationWatcher$1.run(ModificationWatcher.java:162) [wicket-util-1.5-M3.jar:1.5-M3]
	at org.apache.wicket.util.thread.Task$1.run(Task.java:115) [wicket-util-1.5-M3.jar:1.5-M3]
	at java.lang.Thread.run(Thread.java:680) [na:1.6.0_22]
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-15 16:38:23.3,,,no_permission,,,,,,,,,,,204138,,,Sun Jan 16 03:25:22 UTC 2011,,,,,,0|i0kb8v:,116639,,,,,,,,15/Jan/11 16:17;wboyce@panix.com;Just saw this in the log and thought I should report it.  I didn't investigate it.,15/Jan/11 16:38;jdonnerstag;thanks,"16/Jan/11 03:25;jthomerson;assigning fix version (all fixed / resolved issues should have one)
assigning to 1.5-rc1 (despite being shown as ""released"") since that will be rebuilt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Ajax submit  link does not show busy indicator under IE,WICKET-3321,12495218,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,wroczniak,wroczniak,11/Jan/11 08:32,14/Jan/11 10:47,13/Mar/19 23:17,13/Jan/11 16:37,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket,,,,,,,0,,,,,,,"When form is sumbitted via link inside form then busy indicator is not shown under IE.
The problem occurs only when form was earlier refreshed via ajax.",,,,,,,,,,,,,,,,,,,,,,11/Jan/11 09:13;wroczniak;ajaxIndicatorBugIE.tar.gz;https://issues.apache.org/jira/secure/attachment/12467987/ajaxIndicatorBugIE.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-11 08:36:04.051,,,no_permission,,,,,,,,,,,204126,,,Fri Jan 14 10:47:18 UTC 2011,,,,,,0|i0kban:,116647,,,,,,,,11/Jan/11 08:36;mgrigorov;Please provide quickstart application with steps to reproduce.,11/Jan/11 09:13;wroczniak;Use cases how to reproduce are described on start page.,"12/Jan/11 00:26;hudson;Integrated in Apache Wicket 1.4.x #383 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/383/])
    ",14/Jan/11 10:47;wroczniak;Thanks for a quick response.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableMultilineLabel generates invalid HTML,WICKET-3319,12495148,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pparson,pparson,10/Jan/11 17:26,10/Jan/11 20:39,13/Mar/19 23:17,10/Jan/11 19:35,1.4.14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket-extensions,,,,,,,0,,,,,,,"When using an AjaxEditableMultilineLabel, the generated markup looks like:

<span onclick=""[...]"">
<p>1st paragraph</p>
<p>2nd paragraph</p>
</span>

This is invalid according to HTML spec (block elements (p) are not allowed within inline elements (span)).

AjaxEditableMultilineLabel should be using a <div> element instead of the <span>.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-10 20:39:20.892,,,no_permission,,,,,,,,,,,204124,,,Mon Jan 10 20:39:20 UTC 2011,,,,,,0|i0kbav:,116648,,,,,,,,"10/Jan/11 20:39;hudson;Integrated in Apache Wicket 1.4.x #379 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/379/])
    WICKET-3319 AjaxEditableMultilineLabel generates invalid HTML

Replace <span> with <div> for AjaxEditableMultilineLabel's MultiLineLabel

merge r1057326 from trunk
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to add nodes to an empty rootless Tree (e.g. LinkTree),WICKET-3309,12494913,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,gabriel.bucher,gabriel.bucher,07/Jan/11 06:46,10/Jan/11 05:39,13/Mar/19 23:17,07/Jan/11 16:34,1.4.13,1.4.14,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket,,,,,,,0,,,,,,,"2 scenarios which adding new nodes (via ajax) to a rootless Tree is not working as expected.
the node is getting added to the treemodel but non is displayed.

1) adding a node to the rootnode. the newly added node is not displayed.
2) the rootless tree already has a node. if you add additional nodes to the root node, they will be displayed (compare to 1), if you add an additional node to one of the added nodes, the complete tree will disappear.

see attached quickstart",,,,,,,,,,,,,,,,,,,,,,07/Jan/11 13:25;pedrosans;WICKET-3309.patch;https://issues.apache.org/jira/secure/attachment/12467720/WICKET-3309.patch,07/Jan/11 06:49;gabriel.bucher;quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12467706/quickstart.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-01-07 13:25:50.029,,,no_permission,,,,,,,,,,,204116,,,Mon Jan 10 05:39:09 UTC 2011,,,,,,0|i0kbbz:,116653,,,,,,,,"07/Jan/11 13:25;pedrosans;Testing for not presented root nodes, avoiding then from get added to the dirty list, and making sure that inserted nodes on it get add to the list of nodes to be created on DOM.","07/Jan/11 16:34;pedrosans;Problem 1 fix: asserting that AbstractTree#treeNodesInserted adds the new item to the dirtyItemsCreateDOM, since there is no parent node at client to be recreated.

Problem 2 fix: asserting that AbstractTree#treeNodesInserted don't add an not presented root node to the AJAX response by invalidating it.","08/Jan/11 00:18;hudson;Integrated in Apache Wicket 1.4.x #376 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/376/])
    ",10/Jan/11 05:39;gabriel.bucher;thanks Pedro for the ultrafast fix... works perfect,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SimpleDateFormat-s should be created with Locale defined in constructor,WICKET-3301,12494446,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,akiraly,akiraly,02/Jan/11 15:38,08/Jan/11 19:44,13/Mar/19 23:17,08/Jan/11 19:44,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,wicket-datetime,,,,,,0,,,,,,,"The wicket-core junit test o.a.w.util.time.TimeTest.test() fails on computers where the default locale strings for ""Am/pm marker"" is not am/pm. The reason for this is that wicket uses SimpleDateFormat(String pattern) constructor instead of SimpleDateFormat(String pattern, Locale locale) in a lot of places and so the system default locale is used.

I think for consistent results wicket should always specify a locale and not depend on the system default.",,,,,,,,,,,,,,,,,,,,,,02/Jan/11 15:50;akiraly;WICKET-3301.patch;https://issues.apache.org/jira/secure/attachment/12467285/WICKET-3301.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204108,,,Sun Jan 02 15:50:14 UTC 2011,,,,,,0|i0kbd3:,116658,,,,,,,,"02/Jan/11 15:50;akiraly;Attaching patch that fixes some of the creations of SimpleDateFormat-s.

Fixed in:
o.a.w.extensions.yui.calendar.AbstractCalendar: deleted the instances. They were not used and as SimpleDateFormat is not thread safe having it in public static final variables was not good anyway.

o.a.w.util.time.AbstractTime and o.a.w.util.time.Time: these classes are using SimpleDateFormat in a static way (static variable or method) so I added Locale.ENGLISH to the constructors.

With the patch all tests pass including o.a.w.util.time.TimeTest.test().

What the patch does not fix but I think should be done (but it needs decision on the wicket team side):
o.a.w.validation.validator.DateValidator.MaximumValidator.variablesMap(IValidatable<Date>)
o.a.w.validation.validator.DateValidator.MinimumValidator.variablesMap(IValidatable<Date>)
o.a.w.validation.validator.DateValidator.RangeValidator.variablesMap(IValidatable<Date>)
o.a.w.extensions.yui.calendar.DatePicker.configure(Map<String, Object>, IHeaderResponse, Map<String, Object>)
o.a.w.devutils.inspector.LiveSessionsPage
o.a.w.devutils.inspector.RequestsPage

These are not static usages and because of this maybe they should use the client locale.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endless recursion if LoadableDetachableModel.load throws exception,WICKET-3302,12494456,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wboyce@panix.com,wboyce@panix.com,02/Jan/11 21:29,05/Jan/11 03:38,13/Mar/19 23:17,04/Jan/11 16:41,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket,,,,,,,0,,,,,,,"I don't know if there's any easy fix for this, but here's what happens:

1. Component subclass overrides isVisible with a new implementation that depends on the current model state.

2. The model is a LoadableDetachableModel.

3. On the initial render, the load method of the LoadableDetachableModel throws a RuntimeException for whatever reason.  (In my case I was trying to throw a AbortWithHttpErrorCodeException.)

4. This gets caught in Component.getDefaultModelObject:

    log.error(""Error while getting default model object for Component: "" + this.toString(true));

5.  The toString method that's invoked from the exception handler prints the component's state, including its visibility.

6.  In order to resolve the visibility state, toString has to call isVisible--the same method that initially caused the exception.

7.  The isVisible method again throws an exception, etc.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-04 11:46:12.385,,,no_permission,,,,,,,,,,,204109,,,Wed Jan 05 03:38:53 UTC 2011,,,,,,0|i0kbcv:,116657,,,,,,,,"02/Jan/11 21:44;wboyce@panix.com;Maybe a good solution would be to have Component.toString catch any exceptions that occur during the rendering of the string and fall back on emitting just the component ID plus ""caught TheBigException while retrieving component details.""","04/Jan/11 11:46;pedrosans;Hi Willis, even if you throw an exception at the LDM#load method, it has the 'attached' flag that will prevent an second load try, preventing your described issue. Where did you throw the AbortWithHttpErrorCodeException? Can you provide an test case?","04/Jan/11 13:13;wboyce@panix.com;I know that it's supposed to work that way because I read about people having this problem before.  I did some more investigation and discovered that the exception from LDM.load is only the instigator.  The cause of the recursion is that after the first invocation of the Component's isVisible method, which calls LDM.load and generates the exception, subsequent calls generate NPE, because the LDM.getObject now returns null.  The recursion continues until either we blow the stack or run out of heap.  Since this happens in less than a second normally, it sort of looks like the exception has worked and has aborted the page render, but the requested status code never gets sent back to the browser.

I think that catching exceptions in Component.toString would be a good idea and would resolve this issue and many future issues.  Throwing an exception from the getDefaultModelObject method for any reason (whether it's due to LDM.load or from some custom model code) leaves the component's model in an unknown state, which means that any call to any non-final method of Component might generate an exception, which in turn will lead to the stack and/or heap being blown.

I guess you could say ""well it's the programmer's responsibility to check for a null model,"" but this seems unreasonable in light of the circumstances:

1.  The programmer is throwing an exception from LDM.load specifically because he doesn't want to deal with having a null model.  If the code was prepared to deal with a null model, then the programmer could just return null from LDM.load and let the page render and/or handle the condition in some other manner.

2.  If the programmer has thrown AbortWithHttpErrorCodeException, then he reasonably expects the request to *abort*, not to call additional component methods.  There is no compelling reason why Wicket can't just set the HTTP status and commit the response.

3.  The method that is leading to the recursion is a *diagnostic* method (toString), not one that's part of Wicket's core logic.  The programmer should not have to add ""if (model != null) ..."" throughout his code merely to support a log message.  If Wicket wants to print some diagnostics about a component with a known-bad model, then it should handle the potential exceptions.  The programmer, who has tried to avoid working with a bad model by thrown an exception from LDM.load, should not have to write defensive code anyway to support Component, which is choosing to continue to invoke methods on itself despite the model having failed to initialize.

W





","04/Jan/11 14:51;akiraly;As I see there was a change in wicket in 1.4.10 (see [1]) so the new prefered way is to override onConfigure() (which is called only once) and set visibility from there instead of overriding isVisible() (which is called several times). Guess if the visibility controlling logic is in onConfigure() there is no endless recursion.

[1]: http://wicket.apache.org/2010/08/11/wicket-1.4.10-released.html","04/Jan/11 16:41;ivaynberg;Attila is correct, onConfigure() is a better place to do this. However, I added the guard anyways to be on the safe side.","04/Jan/11 17:22;hudson;Integrated in Apache Wicket 1.4.x #367 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/367/])
    Issue: WICKET-3302
","04/Jan/11 17:23;pedrosans;@Willis: ""subsequent calls generate NPE"" where? can you copy past the relevant stack trace?","05/Jan/11 03:36;wboyce@panix.com;Pedro--the NPE is in my component's isVisible method.  In a roundabout way the isVisible method eventually invokes a method on the object returned from LDM.getObject.
","05/Jan/11 03:38;wboyce@panix.com;Igor--thanks for addressing this.  onConfigure does sound like a good solution, and I'll start using it (wasn't aware of it until now!) but unless isVisible (and any other Component method invoked during exception processing) becomes final, there's always the chance of someone providing an implementation that uses the uninitialized model.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set an request parameter on Wicket tester do not add it in the request URL,WICKET-3272,12493601,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,pedrosans,pedrosans,18/Dec/10 17:56,04/Jan/11 10:31,13/Mar/19 23:17,04/Jan/11 10:31,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"When submitting an form, the parameters set in request do not get appended to the URL query string.
Initial impression is that UrlRender should append query parameters in the base URL on relatives URL.",,,,,,,,,,,,,,,,,,,,,,23/Dec/10 19:46;mgrigorov;WICKET-3272-AbstractComponentMapper.patch;https://issues.apache.org/jira/secure/attachment/12466912/WICKET-3272-AbstractComponentMapper.patch,03/Jan/11 19:51;pedrosans;WICKET-3272-test-fix-2.patch;https://issues.apache.org/jira/secure/attachment/12467355/WICKET-3272-test-fix-2.patch,23/Dec/10 14:23;pedrosans;WICKET-3272-test-fix.patch;https://issues.apache.org/jira/secure/attachment/12466887/WICKET-3272-test-fix.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-12-23 19:43:04.447,,,no_permission,,,,,,,,,,,204080,,,Tue Jan 04 10:31:24 UTC 2011,,,,,,0|i0kbfb:,116668,,,,,,,,"23/Dec/10 14:23;pedrosans;Problem 1: AbstractComponentMapper is relying on the fact that the first query parameters is the one that will correctly resolve the PageComponentInfo. It is not a good idea to trust on this sequence since the ULR query parameters string can be assembled in a different way.
Problem 2: MockHttpServletRequest is losing the query parameters set by WicketTester user when set an URL. Users parameters set on request to be tested should be maintained since their tests can depend on it.

Maybe those problems are not rely a problem. But if so, how can those tests attached work?","23/Dec/10 19:43;mgrigorov;Patch review:
Do you really mean ""set""Parameter() in MockHttpServletRequest ?
This way any parameter with more than one value will be lost all values but the last one.","23/Dec/10 19:46;mgrigorov;Here is improved version of your improvement in AbstractComponentMapper.
This way we will try all parameters without value when trying to create PageComponentInfo.","24/Dec/10 11:38;pedrosans;Thank u Martin, your implementation is more robust, we should use it.
I want to review the parameters restoration in MockHttpServletRequest to
don't miss any multi valuated query parameter, and create an test case for
this situation also.





-- 
Pedro Henrique Oliveira dos Santos
","02/Jan/11 16:57;mgrigorov;Pedro, I added the improvement in AbstractComponentMapper. Needed to touch this code when working on other issues.","03/Jan/11 19:51;pedrosans;I found another bug testing multi values query parameters: MockHttpServletRequest#getQueryString wasn't append more than one query parameter to the query string. Sending the patch again.
@Martin, setParameter when decoding an URL at MockHttpServletRequest#setURL was introducing the described bug also, thanks for notice!","04/Jan/11 09:19;mgrigorov;The new patch looks OK.
Just StringValue#equals() I think is not correct. It should not depend on StringValue#hashCode(). Hashcode collisions are not something uncommon. Better directly check for equality the locale and the text.",04/Jan/11 10:31;pedrosans;committed with the StringValue#equals changed to test the text and locale,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlAttributes are encoded incorrectly when style is null but variation is not,WICKET-3297,12494416,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,akiraly,akiraly,01/Jan/11 21:47,02/Jan/11 16:24,13/Mar/19 23:17,02/Jan/11 16:24,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"AbstractResourceReferenceMapper.encodeResourceReferenceAttributes() method generates the same ""-foo"" output for these two different inputs: {locale = null, style = ""foo"", variation = null} and {locale = null, style = null, variation = ""foo""}.
For the second input it should generate ""--foo"" (double dash prefix).",,,,,,,,,,,,,,,,,,,,,,01/Jan/11 21:48;akiraly;WICKET-3297.patch;https://issues.apache.org/jira/secure/attachment/12467263/WICKET-3297.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-02 16:24:48.299,,,no_permission,,,,,,,,,,,204104,,,Sun Jan 02 16:24:48 UTC 2011,,,,,,0|i0kbdj:,116660,,,,,,,,01/Jan/11 21:48;akiraly;Attaching patch with fix and new test case.,"02/Jan/11 16:24;mgrigorov;The patch is applied with r1054424.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Patch to update Hungarian localization,WICKET-3287,12494168,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,akiraly,akiraly,28/Dec/10 09:38,28/Dec/10 10:31,13/Mar/19 23:17,28/Dec/10 10:31,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,wicket-extensions,,,,,,0,,,,,,,"I am attaching a patch to correct some errors in the Hungarian properties.

The main issue was that some messages said that the minimum and maximum values are not valid inputs.
There were some typos and some unfinished translations too.

Patch is against trunk (r1053283).",,,,,,,,,,,,,,,,,,,,,,28/Dec/10 09:39;akiraly;WICKET-3287.patch;https://issues.apache.org/jira/secure/attachment/12467032/WICKET-3287.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-28 10:31:12.522,,,no_permission,,,,,,,,,,,204094,,,Tue Dec 28 10:31:12 UTC 2010,,,,,,0|i0kbdz:,116662,,,,,,,,28/Dec/10 09:39;akiraly;Attaching patch.,28/Dec/10 10:31;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't generate 1.5-SNAPSHOT project with the quickstart command,WICKET-3268,12493589,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,18/Dec/10 14:54,27/Dec/10 11:42,13/Mar/19 23:17,27/Dec/10 11:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-quickstart,,,,,,,0,,,,,,,"Currently the command on Wicket site (http://wicket.apache.org/start/quickstart.html) is not working with 1.5-SNAPSHOT, because the archetype plugin does not care about the remoteRepositories parameter (http://maven.apache.org/archetype/maven-archetype-plugin/generate-mojo.html). Instead it will always generate 1.5-M3 quickstart. (at least this is the behavior with Maven 3.0.1)

The solution is to use the following command:
mvn archetype:generate -DarchetypeGroupId=org.apache.wicket -DarchetypeArtifactId=wicket-archetype-quickstart -DarchetypeVersion=1.5-SNAPSHOT -DgroupId=com.mycompany -DartifactId=myproject -DinteractiveMode=false -DarchetypeRepository=http://wicketstuff.org/maven/repository/

note the extra -DinteractiveMode=false parameter, which can speed up the projectgeneration. ;)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-19 10:39:44.82,,,no_permission,,,,,,,,,,,204076,,,Mon Dec 27 11:42:33 UTC 2010,,,,,,0|i0kbfr:,116670,,,,,,,,"19/Dec/10 10:39;mgrigorov;Everything is working here.
I tried with and without -DinteractiveMode=false and it generates a project with dependency to 1.5-SNAPSHOT without any problems.
I deleted locally ~/.m2/repository/org/apache/wicket/wicket-archetype-quickstart and it was downloaded from http://wicketstuff.org/maven/repository/org/apache/wicket/wicket-archetype-quickstart/1.5-SNAPSHOT/wicket-archetype-quickstart-1.5-SNAPSHOT.jar.

Please reopen with more details if you still have the problem.","19/Dec/10 13:37;mgrigorov;May I ask someone with working jekyll to touch the mvn lines in our docs and replace -DremoteRepositories with -DarchetypeRepository.

jekyll stopped working locally with my version of Ruby (1.9.1).


Index: start/quickstart.md
===================================================================
--- start/quickstart.md	(revision 1050846)
+++ start/quickstart.md	(working copy)
@@ -42,7 +42,8 @@
 		else
 			cmd = 'mvn archetype:generate -DarchetypeGroupId=org.apache.wicket -DarchetypeArtifactId=wicket-archetype-quickstart -DarchetypeVersion=' + version + ' -DgroupId=' + groupId + ' -DartifactId=' + artifactId;						
 
-		if (version.match(/.*SNAPSHOT/)) cmd += ' -DremoteRepositories=http://wicketstuff.org/maven/repository/';
+		if (version.match(/.*SNAPSHOT/)) cmd += ' -DarchetypeRepository=http://wicketstuff.org/maven/repository/';
+		cmd += ' -DinteractiveMode=false';
 		document.getElementById(""cmdLine"").value = cmd;
 	}
 </script>


Additionally I added the property 'interactiveMode=false' that will save the user two questions.",27/Dec/10 11:42;mgrigorov;Fixed with r1053047.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ModalWindow title not visible,WICKET-3279,12493939,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hok,hok,23/Dec/10 00:50,26/Dec/10 16:51,13/Mar/19 23:17,26/Dec/10 16:51,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,,,,0,,,,,,,The title of a Modal window is not shown.,Any,,,,,,,,,,,,,,,,,,,,,23/Dec/10 00:51;hok;quickstart.rar;https://issues.apache.org/jira/secure/attachment/12466852/quickstart.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-26 16:51:11.785,,,no_permission,,,,,,,,,,,204086,,,Sun Dec 26 16:51:11 UTC 2010,,,,,,0|i0kben:,116665,,,,,,,,23/Dec/10 00:51;hok;Attached quickstart,26/Dec/10 16:51;mgrigorov;Fixed with r1052913,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DropDownChoice no selection value,WICKET-3278,12493896,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hok,hok,22/Dec/10 16:07,26/Dec/10 16:24,13/Mar/19 23:17,26/Dec/10 16:24,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"This problem came from this topic:
http://apache-wicket.1842946.n4.nabble.com/DropDownChoice-no-selection-value-td3160661.html

I've noticed that the method AbstractSingleSelectChoice.getNoSelectionValue() returns the value for no selection. In AbstractSingleSelectChoice.getDefaultChoice(final Object selected) on line 314: 
      return ""\n<option selected=\""selected\"" value=\""\"">"" + option + ""</option>""; 

and on line 296: 
      buffer.append("" value=\""\"">"").append(option).append(""</option>""); 

In those cases the null value option has empty value attribute. Wouldn't it be more consistent for this option to have the ""value"" attribute with the result provided from getNoSelectionValue()?",Any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-26 16:24:19.754,,,no_permission,,,,,,,,,,,204085,,,Sun Dec 26 16:24:19 UTC 2010,,,,,,0|i0kbev:,116666,,,,,,,,"26/Dec/10 16:24;mgrigorov;Fixed with r1052911.
Will not merge to 1.4 because applications may depend on the current value ("""").",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IResponseFilter doesn't work in 1.5,WICKET-3280,12493970,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,23/Dec/10 12:21,26/Dec/10 11:22,13/Mar/19 23:17,26/Dec/10 11:22,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,In current 1.5-SNAPSHOT there are no callers of org.apache.wicket.settings.IRequestCycleSettings.getResponseFilters() and thus filters are never executed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204087,,,Sun Dec 26 11:22:27 UTC 2010,,,,,,0|i0kbef:,116664,,,,,,,,26/Dec/10 11:22;mgrigorov;Fixed with r1052875,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -AbstractMarkupParser doesn't remove Comments correctly,WICKET-3277,12493849,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,funkattack,funkattack,22/Dec/10 09:44,23/Dec/10 19:13,13/Mar/19 23:17,22/Dec/10 10:49,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,,,,,,,,,,0,,,,,,,"AbstractMarkupParser removeComment(...) doesn't remove Comments correctly

if two html comments stand to close together <!-- foo --> <!-- bar -->
foo will be removed but not bar.

see:

https://github.com/mafulafunk/wicketComments

git@github.com:mafulafunk/wicketComments.git",,,,,,,,,,,WICKET-3222,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-22 10:49:17.122,,,no_permission,,,,,,,,,,,204084,,,Thu Dec 23 19:13:39 UTC 2010,,,,,,0|i0kbf3:,116667,,,,,,,,"22/Dec/10 09:45;funkattack;May we see this patch in 1.4.x too?
","22/Dec/10 09:50;funkattack;the patch

https://github.com/mafulafunk/wicket/commit/4eceed452d3695d12f27c535f2da158ba77a67c5",22/Dec/10 10:49;jdonnerstag;patch applied to 1.4,"22/Dec/10 11:18;hudson;Integrated in Apache Wicket 1.4.x #351 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/351/])
    fixed CLONE -AbstractMarkupParser doesn't remove Comments correctly.
Issue: WICKET-3277
",23/Dec/10 19:13;jthomerson;changed fix version to 1.4.16 since fix committed after 1.4.15 release was cut (and being voted on),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractMarkupParser doesn't remove Comments correctly,WICKET-3222,12492005,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,funkattack,funkattack,03/Dec/10 17:06,22/Dec/10 09:44,13/Mar/19 23:17,03/Dec/10 18:42,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,,,,,,,,0,,,,,,,"AbstractMarkupParser removeComment(...) doesn't remove Comments correctly

if two html comments stand to close together <!-- foo --> <!-- bar -->
foo will be removed but not bar.

see:

https://github.com/mafulafunk/wicketComments

git@github.com:mafulafunk/wicketComments.git",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-03 18:42:17.016,,,no_permission,,,,,,,,,,,204033,,,Fri Dec 03 18:42:17 UTC 2010,,,,,,0|i0kbin:,116683,,,,,,,,03/Dec/10 18:42;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in PageParameters toString method,WICKET-3270,12493591,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,18/Dec/10 15:35,18/Dec/10 18:14,13/Mar/19 23:17,18/Dec/10 18:14,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"PageParameters toString method doesn't check for null for 'indexedParameters' and 'namedParameters'. If the copy  constructor checks for it, then the toString method should check too.",,,,,,,,,,,,,,,,,,,,,,18/Dec/10 15:36;aldaris;wicket-3270.tar.gz;https://issues.apache.org/jira/secure/attachment/12466537/wicket-3270.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-18 18:14:09.839,,,no_permission,,,,,,,,,,,204078,,,Sat Dec 18 18:14:09 UTC 2010,,,,,,0|i0kbfj:,116669,,,,,,,,18/Dec/10 15:36;aldaris;Simple project demonstrating the issue. (DefaultExceptionMapper tries to call the toString on RuntimeException),18/Dec/10 18:14;mgrigorov;Fixed with r1050689.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error page mappings in web.xml not working in 1.5,WICKET-3267,12493588,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jthomerson,jthomerson,18/Dec/10 14:28,18/Dec/10 17:54,13/Mar/19 23:17,18/Dec/10 17:54,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"Opening this as a placeholder for more information.  For the original report, see https://issues.apache.org/jira/browse/WICKET-3259?focusedCommentId=12972762&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12972762

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-18 17:54:01.393,,,no_permission,,,,,,,,,,,204075,,,Sat Dec 18 17:54:01 UTC 2010,,,,,,0|i0kbfz:,116671,,,,,,,,18/Dec/10 17:54;mgrigorov;Fixed with r1050681,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form with UploadProgressBar and AjaxButton doesn't submit,WICKET-3202,12491468,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,hok,hok,27/Nov/10 23:23,15/Dec/10 01:52,13/Mar/19 23:17,15/Dec/10 00:57,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.15,1.5-RC1,,wicket,wicket-extensions,,,,,,0,,,,,,,"There is a Form and a FIleUploadField and UploadProgressBar in it. The form is submitted via AjaxButton. If the user tries to upload a file, nothing happens (at least nothing on the server side). If the UploadProgressBar is removed from the form everything works fine. This behavior can be observed in the attached quickstart. Thanks.","Windows 7, java 1.6",,,,,,,,,,,,,,,,,,,,,13/Dec/10 16:07;pedrosans;WICKET-3202-using-iframe.patch;https://issues.apache.org/jira/secure/attachment/12466144/WICKET-3202-using-iframe.patch,10/Dec/10 17:01;pedrosans;WICKET-3202-using-wicket-ajax.patch;https://issues.apache.org/jira/secure/attachment/12466002/WICKET-3202-using-wicket-ajax.patch,09/Dec/10 18:41;pedrosans;WICKET-3202.patch;https://issues.apache.org/jira/secure/attachment/12465928/WICKET-3202.patch,27/Nov/10 23:24;hok;quickstart.rar;https://issues.apache.org/jira/secure/attachment/12464791/quickstart.rar,,,,,4.0,,,,,,,,,,,,,,,,,,,2010-11-28 22:37:57.352,,,no_permission,,,,,,,,,,,204013,,,Wed Dec 15 01:52:39 UTC 2010,,,,,,0|i0kbk7:,116690,,,,,,,,"28/Nov/10 22:37;ivaynberg;cannot reproduce with current snapshot. you are also missing this in the application class:


+
+       @Override
+       protected WebRequest newWebRequest(HttpServletRequest servletRequest,
+                       String filterPath) {
+               return new UploadWebRequest(servletRequest, filterPath);
+       }

","08/Dec/10 11:16;paul ms;Have you tried using IE or another Browser? 
I had the same Problem while using IE. Using other Browsers like Firefox, Chrome, etc. it works fine, just IE doesn't do anything with the Uploadprogressbar present and a Ajax-Submit.
This problem also occurs while using a AjaxSubmitLink.",09/Dec/10 11:40;pedrosans;The wicket-ajax.js is calling form.submit() when the user click at an ajax button. But it is not executing the UploadProgressBar submit callback registered for the form element. I'm trying to find a good solution yet.,"09/Dec/10 18:41;pedrosans;I'm sending a patch fixing the bug for IE 7, 8, chrome and firefox
On safari only the ajax submit button/link works, the regular submit button only present the progress bar but do not update the state.
I tested the quickstart at WICKET-3181 and the progress bar is presented and updated correctly, the problem is that the bytes uploaded info do not get updated. So the progress bar keep presenting 0% of <size>MB completed.

Patch fix:
- the UploadStatusResource was retuning an state with incorrect value for remainingTimeString varible
- the progressbar.js was not hiding the status bar when there wasn't UploadInfo at UploadWebRequest (can happen if user did not use the UploadWebRequest as the Application WebRequest)
- use the onsubmit callback instead of submit because the wicket-ajax.js use the submit method to submit the multipart form. Doing so the registered submit callback was not get called. Use Wicket.Event.fire to trigger the form submit do not work on IE, so register the callback at the submit is problematic.","10/Dec/10 17:01;pedrosans;I noticed that Chrome and Safari do not process the AJAX request to update the progress bar during the data upload. So it is also important to submit the form using an AJAX submit component that will submit the form targeting an created iframe in the page DOM (wicket-ajax.js do that).
So I'm sending an new patch explaing it on the javadoc and using the Wicket JavaScript AJAX API (solving the problem of wicket-event.js using the Wicket.$ function).
I tested on IE 6,7,8, Safari, Chrome, Firefox, only on Safari and Chrome the regular form submit don't update the progress bar (expected). But even not presenting the progress on the UploadProgressBar, Chrome shows an progress status at the window bottom.",10/Dec/10 17:08;ivaynberg;iirc normal form submits should have a working progress bars...,"10/Dec/10 17:14;pedrosans;Even for Chrome and Safari? OK, I will study then a little more.","10/Dec/10 19:06;pedrosans;Looks like a bug in webkit based browser [1]. We can continue having the progress bar updated sending AJAX requests in an created iframe. I will give a try.

1: http://stackoverflow.com/questions/3185238","13/Dec/10 16:07;pedrosans;Patch using an iframe to do the asynchronous progress bar update. Tested on IE 6,7,8, Fireforx, Safari, Chrome. Working for AJAX and regular submit.",13/Dec/10 16:24;mgrigorov;Looks good.,"15/Dec/10 01:52;hudson;Integrated in Apache Wicket 1.4.x #328 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/328/])
    using an iframe to do the asynchronous progress bar update
Issue: WICKET-3202
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"for stateless pages wicket complains with ""The Buffered response should be handled by BufferedResponseRequestHandler""",WICKET-3239,12492627,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,pete,pete,07/Dec/10 15:30,13/Dec/10 19:20,13/Mar/19 23:17,13/Dec/10 19:20,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,,,,,,,,0,,,,,,,"when initially rendering a __stateless__ page I get

  ""The Buffered response should be handled by BufferedResponseRequestHandler""

it's logged by WebPageRenderer#respond(cycle) in line 185 in trunk.

I don't know if this really is worth a warning, maybe we can just remove it.

There's also method

  WebPageRenderer#enableRedirectForStatelessPage()

which seems to be somehow involved (and still contains a TODO which probably should be resolved before 1.5.0)

I would like to fix it for myself but don't know much about the background of that warning.",,,,,,,,,,,,,,,,,,,,,,10/Dec/10 15:59;mgrigorov;WICKET-3239.patch;https://issues.apache.org/jira/secure/attachment/12465994/WICKET-3239.patch,09/Dec/10 16:32;mgrigorov;WICKET-3239.patch;https://issues.apache.org/jira/secure/attachment/12465920/WICKET-3239.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-12-07 15:52:47.886,,,no_permission,,,,,,,,,,,204049,,,Mon Dec 13 19:20:04 UTC 2010,,,,,,0|i0kbhb:,116677,,,,,,,,"07/Dec/10 15:52;mgrigorov;The warning is there to show that BufferedResponseRequestHandler didn't handle this request for some reason.
BufferedResponseRequestHandler didn't handle it because it uses the session id as part of the key in the map of stored responses in Application. Since the page is stateless the session id is always different ...
I have no idea how to fix it for now. I'll need to debug it.","09/Dec/10 16:32;mgrigorov;I don't see a reason why to redirect for stateless page, so I think we can remove org.apache.wicket.request.handler.render.WebPageRenderer.enableRedirectForStatelessPage() completely.
But I don't have experience with stateless components so I may miss something.

Here is a patch that fixes the problem if this redirect is really needed. It just needs to introduce a constant for ""stateless-"" somewhere.",10/Dec/10 15:59;mgrigorov;Cleaner patch.,11/Dec/10 09:16;mgrigorov;Fixed with r1044601,"11/Dec/10 19:43;mgrigorov;Reopening the ticket because the current solution has a problem - concurrent usage of the application will break because the key used for stored responses is not unique per session and if two or more users work on the same stateless page then the first one that reads it from the storedResponses will also remove it and then the request will be re-processed.

The first possible solution that comes to my mind is to pass a special parameter with unique value in the URL when redirecting and use that value as part of the key.",12/Dec/10 06:51;ivaynberg;create an http session and use its id. just because you are stateless doesnt mean you cant create the session. very little overhead if you create it and dont store anything in it.,"13/Dec/10 19:20;mgrigorov;With r1045317 Wicket no more redirects after processing a stateless page.

When the page is stateless there is no bound session and there is no easy/nice way to construct a key to store the response in Application#storedResponses map. Since there is no session id, we can use a custom url parameter with temporary id that can be used in the constructed key, e.g. wicket:statelessid=asdfgh but this way the URL for all stateless pages gets ""uglier"". Another solution is to use a cookie to bring that key but it wont work when cookies are disabled.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE with nested property models,WICKET-3253,12493058,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,tbergman,tbergman,13/Dec/10 11:17,13/Dec/10 13:17,13/Mar/19 23:17,13/Dec/10 12:44,1.4.14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.15,1.5-RC1,,wicket,,,,,,,0,,,,,,,"After updated from 1.4.8 to 1.4.14 I got this bug.

The problem is with nested property models where the ""top"" model has a null model object that is bound to a TextField. You get a NPE when the page is rendered. There is a quick workaround by overriding getOjbectClass() on the property model.

I provide a running example of the problem.",,,,,,,,,,,,,,,,,,,,,,13/Dec/10 11:19;tbergman;wicket-property-model-bug.zip;https://issues.apache.org/jira/secure/attachment/12466130/wicket-property-model-bug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-13 13:17:07.031,,,no_permission,,,,,,,,,,,204062,,,Mon Dec 13 13:17:07 UTC 2010,,,,,,0|i0kbgn:,116674,,,,,,,,"13/Dec/10 13:17;hudson;Integrated in Apache Wicket 1.4.x #324 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/324/])
    - Preventing the attempt to resolve the property class for a null target at AbstractPropertyModel
- Test asserting that there is no problem in working with an AbstractPropertyModel targeting an IObjectClassAwareModel not initialized with an known class.
Issue: WICKET-3253
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester can't create new sessions,WICKET-3212,12491759,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,01/Dec/10 14:40,02/Dec/10 17:00,13/Mar/19 23:17,02/Dec/10 17:00,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"It looks like currently there is no way to create a new session (e.g. execute Application#newSession through WicketTester).
My test case would be something like this:
* create a session
* set a configuration option with a form
* invalidate session
* create new session
* assert that the session#getStyle now returns something else

In wicket-1.4 this was possible with WicketTester#createRequestCycle, but that is gone now.

Workaround: create a new WicketTester, which will force to create a new session.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-02 17:00:39.289,,,no_permission,,,,,,,,,,,204023,,,Thu Dec 02 17:00:39 UTC 2010,,,,,,0|i0kbjb:,116686,,,,,,,,02/Dec/10 17:00;mgrigorov;Fixed with r1041454,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester fails if multipart form is not submitted with a file,WICKET-3211,12491758,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,aldaris,aldaris,01/Dec/10 14:23,02/Dec/10 01:50,13/Mar/19 23:17,02/Dec/10 00:59,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"If you have a form with a fileuploadfield, and you try to test it, then if you don't submit a file with the form, the submit fails with this exception:
Caused by: java.lang.IllegalStateException: ServletRequest does not contain multipart content. One possible solution is to explicitly call Form.setMultipart(true), Wicket tries its best to auto-detect multipart forms but there are certain situation where it cannot.
        at org.apache.wicket.protocol.http.servlet.MultipartServletWebRequestImpl.<init>(MultipartServletWebRequestImpl.java:118)
        at org.apache.wicket.protocol.http.servlet.MultipartServletWebRequestImpl.<init>(MultipartServletWebRequestImpl.java:86)
        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.newMultipartWebRequest(ServletWebRequest.java:378)
        at org.apache.wicket.markup.html.form.Form.handleMultiPart(Form.java:1379)

See the attached quickstart (TestHomePage.java) for more details.
Note: this type of submit works flawlessly with browser.",,,,,,,,,,,,,,,,,,,,,,01/Dec/10 14:24;aldaris;wicket-3211.tar.gz;https://issues.apache.org/jira/secure/attachment/12465044/wicket-3211.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-02 00:59:01.469,,,no_permission,,,,,,,,,,,204022,,,Thu Dec 02 01:50:13 UTC 2010,,,,,,0|i0aohj:,60240,,,,,,,,01/Dec/10 14:24;aldaris;Quickstart demonstrating the issue.,"02/Dec/10 00:59;pete;fixed in trunk.

please test like crazy and give feedback :-)",02/Dec/10 01:50;aldaris;I've tried a few testcases and all of them seemed to work. Thanks for the quick fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong text encoding when receiving multipart forms data,WICKET-3210,12491748,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,adriankaminski,adriankaminski,01/Dec/10 12:41,02/Dec/10 01:03,13/Mar/19 23:17,02/Dec/10 01:03,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"There is problem with getting data from multipart forms in proper encoding (e.g. UTF-8). When user puts his national characters in such form,  he gets them messed - more descriptive information: http://www.mail-archive.com/users@wicket.apache.org/msg58119.html",,,,,,,,,,,,,,,,,,,,,,01/Dec/10 14:18;aldaris;wicket-3210.tar.gz;https://issues.apache.org/jira/secure/attachment/12465042/wicket-3210.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-01 13:47:21.229,,,no_permission,,,,,,,,,,,204021,,,Thu Dec 02 01:03:26 UTC 2010,,,,,,0|i0aohz:,60242,,,,,,,,01/Dec/10 13:47;mgrigorov;Provide quickstart application please,"01/Dec/10 14:18;aldaris;Simple quickstart reproducing the issue. Even if the form does not have fileuploadfield, and the setmultipart is called with true, it messes up the encoding.
Note: I tried to create a failing testcase, but it didn't failed, so check the quickstart with a browser.","02/Dec/10 00:26;aldaris;It looks like Pete just fixed this with r1041223, or at least the quickstart started to work with trunk.","02/Dec/10 01:03;pete;@major peter: yeah, stomped over that when working on WICKET-3211 (which is fixed, too, btw). after some deep investigation with help of Igor we added ""accept-encoding"" to multipart/form-data encoded forms and use the application response-request encoding. This should keep encoding consistent between response and subsequent request and avoid garbled text :-)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UploadProgressBar does not show up on nested forms,WICKET-3181,12480517,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alecswan,alecswan,21/Nov/10 00:24,28/Nov/10 00:15,13/Mar/19 23:17,22/Nov/10 01:20,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,1.5-RC1,,wicket,,,,,,,0,,,,,,,"UploadProgressBar implementation adds onsubmit event handler on the form the bar is associated with. However, if the form is nested in another form, then Wicket replaces the inner form with a <div>. A DIV does not support onsubmit event handler which prevents the progress bar from showing up.","Java 6, Tomcat 6",,,,,,,,,,,,,,,,,,,,,21/Nov/10 00:56;alecswan;wicket.zip;https://issues.apache.org/jira/secure/attachment/12460119/wicket.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-28 00:15:47.762,,,no_permission,,,,,,,,,,,203993,,,Sun Nov 28 00:15:47 UTC 2010,,,,,,0|i0kblr:,116697,,,,,,,,"21/Nov/10 00:56;alecswan;Just add the following line in you Wicket Application.init() method:
mount(new HybridUrlCodingStrategy(""3181"", WicketJira3181.class));

After that use http://localhost:8080/3181 to access the page. Adjust the URL as needed.","28/Nov/10 00:15;hudson;Integrated in Apache Wicket 1.4.x #295 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/295/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getMarkupId() can be used only if the component's markup is attached,WICKET-3197,12480925,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mgrigorov,mgrigorov,25/Nov/10 16:16,27/Nov/10 09:58,13/Mar/19 23:17,27/Nov/10 09:58,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"With change r1037139 Component#getMarkupImpl() first tries to get the markup id from the component's markup.
If the markup is not available/attached yet for this component the call ends with :
org.apache.wicket.markup.MarkupException: Can not determine Markup. Component is not yet connected to a parent. [Component id = label]
",,,,,,,,,,,,,,,,,,,,,,25/Nov/10 16:16;mgrigorov;wicket-3197.tgz;https://issues.apache.org/jira/secure/attachment/12460457/wicket-3197.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-27 08:33:06.254,,,no_permission,,,,,,,,,,,204008,,,Sat Nov 27 08:33:06 UTC 2010,,,,,,0|i0kbkv:,116693,,,,,,,,25/Nov/10 16:16;mgrigorov;quickstart app,"27/Nov/10 08:33;jdonnerstag;The problem actually is that the component already is detached when addOrReplace() copies the markup ID to the new component. Copying / retrieving means we first try to read the markup to find the id. Since it's already detached the error occurs. IMO the right solution is a hidden copy method Component.setMarkupId(Component)

Juergen",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UploadProgressBar shows up on the wrong nested form,WICKET-3191,12480827,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alecswan,alecswan,24/Nov/10 17:26,25/Nov/10 04:15,13/Mar/19 23:17,25/Nov/10 04:15,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,,,,0,,,,,,,"This issue is related to JIRA 3181, which has already been fixed.

Given two nested upload forms, upload initiated from the first form shows progress bar in the second form. So, if the second form happens to be hidden (setVisible(false)), then the upload progress bar does not show up at all.","Java 6, Tomcat 6 ",,,,,,,,,,,,,,,,,,,,,24/Nov/10 17:28;alecswan;wicket.zip;https://issues.apache.org/jira/secure/attachment/12460383/wicket.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-25 04:15:28.997,,,no_permission,,,,,,,,,,,204003,,,Thu Nov 25 04:15:28 UTC 2010,,,,,,0|i0kblb:,116695,,,,,,,,24/Nov/10 17:28;alecswan;This quickstart is built on top of JIRA 3181 quickstart.,"25/Nov/10 04:15;ivaynberg;i fixed it but not all the way. now all progress bars in the root form will show up. this makes sense because files chosen in all upload fields will be uploaded even if they are not in the nested form that triggered the root form's submit. this is a limitation in html, not sure how much more we can fix this.

in order to fix it completely we would have to define boundaries of nested forms in javascript and figure out which progress bar is in which nested form. but that will require significant modifications to the core which would need to go into a different issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Radio uuid is calculated wrongly for heavy instalations.,WICKET-3175,12480140,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mikel,mikel,16/Nov/10 20:05,24/Nov/10 02:22,13/Mar/19 23:17,16/Nov/10 20:57,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,1.5-RC1,,wicket,,,,,,,0,,,,,,,"On big page's autoIndex for Page is getting bigger. Autoindex is used for radio buttons to identify its value (return ""radio"" + uuid).
Uuid is a short primitive type and when its bigger then 32767 it become negative. Its a problem for radio button getValue code which looks like this:

	public String getValue()
	{
		if (uuid < 0)
		{
			uuid = getPage().getAutoIndex();
		}
		return ""radio"" + uuid;
	}

In such case new uuid is set and we will get an error after submit this radio:

""WicketMessage: submitted http post value [radio-32768] for RadioGroup component [0:form:radioGroup] is illegal because it does not contain relative path to a Radio componnet. Due to this the RadioGroup component cannot resolve the selected Radio component pointed to by the illegal value. A possible reason is that componment hierarchy changed between rendering and form submission.""

Problem can be solved by changing short primitive type to Short object and checking its not null instead of <0.

",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,16/Nov/10 20:07;mikel;WICKET-3175.patch;https://issues.apache.org/jira/secure/attachment/12459728/WICKET-3175.patch,16/Nov/10 20:06;mikel;radioproblem.tgz;https://issues.apache.org/jira/secure/attachment/12459727/radioproblem.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-11-16 20:24:23.282,,,no_permission,,,,,,,,,,,203987,,,Wed Nov 24 02:22:24 UTC 2010,,,,,,0|i0kbm7:,116699,,,,,,,,16/Nov/10 20:06;mikel;quickstart,16/Nov/10 20:07;mikel;patch,16/Nov/10 20:24;pete;@michael: So you really have more thant 32767 items on a single page?,"16/Nov/10 20:46;mikel;@peter: its not a matter of number items on page. You can have 10 radio in list view which is refreshed via ajax. On each refresh, radio buttons will be recreated (it can be recreated on different cirumstances for e.g addOrReplace). User is working couple of hours on page, sessionTimeout is set to high value. Page autoIndex will not stop to grow.","16/Nov/10 21:25;mmakundi;Hi!

This is very urgent problem in our production. We have a PAGE with multiple TABBED PANELS. User can stay on SINGLE PAGE for  LONG TIME, many times even WHOLE DAY. This 32767 ITEM BOUNDARY will hit users approximately after FOUR HOURS.

So it is a real issue.",16/Nov/10 21:49;ivaynberg;and WRITING things in CAPITALS always SEEMS to HELP. ESPECIALLY when you can FIX it in a PRIVATE BRANCH YOURSELF if it is SOOOO URGENT.,"24/Nov/10 02:22;jthomerson;The following two SVN commits were actually for this issue.  They were accidentally flagged for the wrong issue (3167):

http://svn.apache.org/viewvc?rev=1035811&view=rev
http://svn.apache.org/viewvc?rev=1035809&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
executeAjaxEvent in WicketTester works although Component is not enabled,WICKET-3164,12479805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,fkleinko,fkleinko,12/Nov/10 15:33,21/Nov/10 11:38,13/Mar/19 23:17,21/Nov/10 10:50,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,1.5-RC1,,wicket,,,,,,,0,,,,,,,"When Component is disabled the executeAjaxEvent still works. Because it's not checking if Component is enabled.
But the event attribute is not rendered to the component if it's disabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-14 18:46:53.543,,,no_permission,,,,,,,,,,,203977,,,Sun Nov 21 11:38:12 UTC 2010,,,,,,0|i0kbnb:,116704,,,,,,,,"12/Nov/10 15:44;fkleinko;executeAjaxEvent can be something like

{code}
Component component = getComponentFromLastRenderedPage(componentPath);
Component component = getComponentFromLastRenderedPage(componentPath);
TagTester tagTester = tester.getTagById(component.getMarkupId());
if(tagTester.getAttribute(event) == null) {
	throw new RuntimeException(""component should be enabled to execute ajax event"");
}
{code}

// other things that are happening in executeAjaxEvent",14/Nov/10 18:46;mgrigorov;Checks added with r1035045 (1.4.x) and r1035041/1035044 in 1.5/trunk,"15/Nov/10 00:27;hudson;Integrated in Apache Wicket 1.4.x #266 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/266/])
    ","15/Nov/10 00:39;hudson;Integrated in Apache Wicket 1.5.x #516 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/516/])
    ","15/Nov/10 19:07;mgrigorov;I'd like to add checks in all ""action"" methods.",21/Nov/10 10:50;mgrigorov;With r1037409 (1.4.x) and r1037411 (trunk) such checks are added also for #executeAllTimerBehaviors() and #submitAjaxFormSubmitBehavior().,"21/Nov/10 11:27;hudson;Integrated in Apache Wicket 1.4.x #281 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/281/])
    WICKET-3164 executeAjaxEvent in WicketTester works although Component is not enabled

Add additional checks for 'enabled' and 'visible' component before executing WicketTester's #executeAllTimerBehaviors() and #submitAjaxFormSubmitBehavior()
","21/Nov/10 11:38;hudson;Integrated in Apache Wicket 1.5.x #539 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/539/])
    WICKET-3164 executeAjaxEvent in WicketTester works although Component is not enabled

Add additional checks for 'enabled' and 'visible' component before executing WicketTester's #executeAllTimerBehaviors() and #submitAjaxFormSubmitBehavior()

merge r1037409 from 1.4.x
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No Application in the thread when the web server destroys WicketFilter,WICKET-3168,12479879,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,13/Nov/10 19:37,20/Nov/10 15:37,13/Mar/19 23:17,20/Nov/10 14:44,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"Playing with Wicket 1.5 + Google AppEngine I saw this exception after modifying appengine-web.xml:

WARNING: EXCEPTION 
org.apache.wicket.WicketRuntimeException: There is no application attached to current thread Timer-2
	at org.apache.wicket.Application.get(Application.java:250)
	at org.apache.wicket.Session.get(Session.java:154)
	at org.apache.wicket.page.DefaultPageManagerContext.getSessionAttribute(DefaultPageManagerContext.java:63)
	at org.apache.wicket.pageStore.memory.HttpSessionDataStore.getPageTable(HttpSessionDataStore.java:130)
	at org.apache.wicket.pageStore.memory.HttpSessionDataStore.destroy(HttpSessionDataStore.java:116)
	at org.apache.wicket.pageStore.DefaultPageStore.destroy(DefaultPageStore.java:66)
	at org.apache.wicket.page.PersistentPageManager.destroy(PersistentPageManager.java:374)
	at org.apache.wicket.page.PageManagerDecorator.destroy(PageManagerDecorator.java:86)
	at org.apache.wicket.Application.internalDestroy(Application.java:839)
	at org.apache.wicket.protocol.http.WebApplication.internalDestroy(WebApplication.java:440)
	at org.apache.wicket.protocol.http.WicketFilter.destroy(WicketFilter.java:437)
	at org.mortbay.jetty.servlet.FilterHolder.destroyInstance(FilterHolder.java:127)
	....

I.e. the asynchronous thread that destroys WicketFilter has no ThreadContext thread local and thus this exception.

I see two problems/solutions:
1) HttpSessionDataStore should have noop #destroy() - the Application is being destroyed, so all its http sessions will be deleted and there is no need to clean the special attribute which stores session's pages
2) WicketFilter#destroy() can set/unset the application in ThreadContext, so other functionality in all #destroy() methods will have access to the Application via Application.get()

Any objections ?",,,,,,,,,,,,,,,,,,,,,,14/Nov/10 15:33;mgrigorov;WICKET-3168.patch;https://issues.apache.org/jira/secure/attachment/12459560/WICKET-3168.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-13 19:50:29.431,,,no_permission,,,,,,,,,,,203980,,,Sat Nov 20 15:37:04 UTC 2010,,,,,,0|i0kbmv:,116702,,,,,,,,"13/Nov/10 19:50;ivaynberg;can this be related to WICKET-3011, a bad jetty version that runs GAE?","13/Nov/10 20:05;mgrigorov;Yes and No.
Yes - GAE runs on Jetty. I guess older than the fixed one.
No - currently WicketFilter#destroy() stack trace has no Application in the thread local, in WICKET-3011 org.apache.wicket.session.HttpSessionStore.SessionBindingListener.valueUnbound(HttpSessionBindingEvent) (i.e. Application#sessionUnbound()) will have no Application.get().
Only Application.get(String) will work because HttpSessionStore has 'applicationKey' member.

In this ticket even Application.get(String) is not available for :

	getPageManager().destroy();
	getSessionStore().destroy();

in Application#internalDestroy() because 

		applicationKeyToApplication.remove(getApplicationKey());

is called before them.
I think we should move that line at the bottom of #internalDestroy() too.",14/Nov/10 15:33;mgrigorov;This is what I mean expressed in code.,16/Nov/10 07:14;ivaynberg;if everything is being destroyed with this patch then lets commit it.,20/Nov/10 14:44;mgrigorov;The patch is committed with r1037227,"20/Nov/10 15:37;hudson;Integrated in Apache Wicket 1.5.x #534 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/534/])
    WICKET-3168 No Application in the thread when the web server destroys WicketFilter

Set the current Application in the ThreadContext local during WicketFilter#destroy() call.
This way all destroyable objects can use the application if they need it.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Correctness of tests is order dependent, ThreadContext.detach not always called",WICKET-3178,12480388,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,emberson,emberson,18/Nov/10 23:18,19/Nov/10 00:55,13/Mar/19 23:17,18/Nov/10 23:25,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"I have my own build/test env for Wicket and the order in which tests are 
executed are not necessarily the same as the order that Maven drives
the tests in the standard test env.

If you can manage to run only the tests
org.apache.wicket.request.cycle.RequestCycleListenerTest testBasicOperations
followed by test 
org.apache.wicket.request.mapper.BasicResourceReferenceMapperTest testDecode1
the BasicResourceReferenceMapperTest test will fail because it
requires that the ThreadContext have NO application, but the
RequestCycleListenerTest does not have a tearDown method
that calls ThreadContext.detach (nor does it use the BaseWicketTester
with its tearDown method) so it leaves an application in the ThreadContext.
Also, BasicResourceReferenceMapperTest does not use the
BaseWicketTester which calls detach in its constructor.

The solution is to add the following to BasicResourceReferenceMapperTest

protected void setUp() { org.apache.wicket.ThreadContext.detach(); }

In my test env it is simply two lines in a property file to have only the above
two tests execute (and in the order specified). Don't know how to do that in 
Maven.",My own build env which uses Ant.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-18 23:25:09.325,,,no_permission,,,,,,,,,,,203990,,,Fri Nov 19 00:55:36 UTC 2010,,,,,,0|i0kblz:,116698,,,,,,,,18/Nov/10 23:25;ivaynberg;added proper cleanup in request cycle listener test,"19/Nov/10 00:55;hudson;Integrated in Apache Wicket 1.5.x #527 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/527/])
    detach
Issue: WICKET-3178
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
isVisibleInHierarchy() possibly unnecessarily checks children whose parents are invisible?,WICKET-3166,12479862,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mmakundi,mmakundi,13/Nov/10 12:09,17/Nov/10 17:29,13/Mar/19 23:17,17/Nov/10 17:29,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,1.5-RC1,,,,,,,,,0,,,,,,,"Hi!

See attached quickstart with junit test reproducing the bug. See also patch proposal.

I have a page with two panels:

page.form.add(panel1);
page.form.add(panel2);

in some situations panel1 is not visible.

However, a form submit event will visit all formcomponents of panel1 via:

       at org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrder(FormComponent.java:400)
       at org.apache.wicket.markup.html.form.Form.visitFormComponentsPostOrder(Form.java:1209)
       at org.apache.wicket.markup.html.form.Form.inputChanged(Form.java:1403)
       at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:865)

This results in a crash because panel1 components are not prepared to
be invoked via isvisible when the panel itself is not visible.

I wonder if the component.isVisibleInHierarchy could be changed as
follows, to first check parent visibility:

 public final boolean isVisibleInHierarchy()
 {
   Component component = this;
   while (component != null)
   {
     Component componentParent = component.getParent();

     if (((componentParent == null) ||
componentParent.isVisibleInHierarchy()) &&
component.determineVisibility())
     {
       component = componentParent;
     }
     else
     {
       return false;
     }
   }
   return true;
 }

Similar change could/should maybe be possible also for isEnabledInHierarchy ?",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,13/Nov/10 12:10;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12459523/Wicket-Quickstart.zip,13/Nov/10 12:14;mmakundi;diff.txt;https://issues.apache.org/jira/secure/attachment/12459524/diff.txt,17/Nov/10 02:46;pedrosans;test-WICKET-3166.patch;https://issues.apache.org/jira/secure/attachment/12459763/test-WICKET-3166.patch,17/Nov/10 10:42;pedrosans;test-for-unnecessary-calls-WICKET-3166.patch;https://issues.apache.org/jira/secure/attachment/12459785/test-for-unnecessary-calls-WICKET-3166.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2010-11-14 10:23:40.195,,,no_permission,,,,,,,,,,,203978,,,Wed Nov 17 17:29:06 UTC 2010,,,,,,0|i0kbn3:,116703,,,,,,,,13/Nov/10 12:10;mmakundi;junit test case to Reproduce the issue.,"13/Nov/10 12:14;mmakundi;Fix patch proposal, few lines at  Component.isVisibleInHierarchy only.","14/Nov/10 10:23;hudson;Integrated in Apache Wicket 1.5.x #511 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/511/])
    ","14/Nov/10 20:01;mmakundi;Hi!

The fix I proposed does fix the probelm at hand but it makes page rendering tremendeously slow due to the recursion:


Component componentParent = component.getParent(); 

is a recursive call that will be called O(n^n) times in hierarcy. 


Something else must be proposed to fix this? The isEnabledInHierarchty uses a caching mechanism. Maybe this will also need to cache the ""isparentvisible"" at each level thus avoiding O(n^n) recursion.

Any suggestions how to speed it up?

**
Maritin","14/Nov/10 20:08;mmakundi;Hah..

actually there is an unnecessary recursion in the proposal. The while-loop is no longer needed if parent is already called.

**
Martin","14/Nov/10 20:15;mmakundi;New fix proposal:


  public final boolean isVisibleInHierarchy()
  {
    Component componentParent = getParent();
    
    return ((componentParent == null) || componentParent.isVisibleInHierarchy()) && determineVisibility();
  }
","15/Nov/10 00:27;hudson;Integrated in Apache Wicket 1.4.x #266 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/266/])
    ","15/Nov/10 01:47;hudson;Integrated in Apache Wicket 1.4.x #267 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/267/])
    meh. this caching will probably slow things down. and it can be difficult to find all the places in code where caching should be invalidated. lets hold off until it is a hotspot.
Issue: WICKET-3166
caching for isVisibleInHieararchy()
Issue: WICKET-3166
","15/Nov/10 02:17;hudson;Integrated in Apache Wicket 1.5.x #517 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/517/])
    meh. this caching will probably slow things down. and it can be difficult to find all the places in code where caching should be invalidated. lets hold off until it is a hotspot.
Issue: WICKET-3166
caching for isVisibleInHieararchy
Issue: WICKET-3166
","15/Nov/10 05:30;mmakundi;1. THIS SOLUTION WORKS

:::
 public final boolean isVisibleInHierarchy()
  {
    Component componentParent = getParent();
    
    return ((componentParent == null) || componentParent.isVisibleInHierarchy()) && determineVisibility();
  }

:::

2. CACHING HOWEVER DOES NOT. I tried making and using metaData -key for visibility but it broke rendering in our production app. ","16/Nov/10 23:13;pedrosans;The currently isVisibleInHierarchy implementation has two recursion simple base cases:
- parent == null
- !parent.isVisibleInHierarchy()
Following this logic, the recursion will always stack up calls until test the component graph root node.
Why don't only change the mentioned form visitor to don't go deeper in components that are not visible?
HtmlHeaderContainer already has an similar iterator in the renderHeaderSections method.",16/Nov/10 23:21;mmakundi;I think changing the form visitor is a totally different topic of its own.,"17/Nov/10 01:21;pedrosans;My suggested fix would involve in not visiting form components in post order, which is no a good idea.
Martin, the FormComponent#visitComponentsPostOrderHelper method defines how deep the visitor should go testing: IFormVisitorParticipant#processChildren. How about implementing the IFormVisitorParticipant interface at the mentioned panel1, and return false when it is not visible?","17/Nov/10 02:46;pedrosans;Patch restoring the is enabled/visible in hierarchy method;
Changing the Form#isMultiPart to don't traversal deeper in not visible/enable component hierarchy, plus test case exposing an preventing this;
Martin, please take a look at how I used the IFormVisitorParticipant on the test case. See if it can help u.","17/Nov/10 03:43;ivaynberg;i am thinking we should revert this in 1.4.x branch because it may potentially break existing apps.

in 1.5.x we should leave it as it is and add caching like we do for isenabledinhierarchy().

when it comes to visibility and enableness it is better to ask the parent first. the contract is that the child cant be visible/enabled if the parent is not, so it makes sense to ask the parent first in case there is code in child that depends on the parent.
","17/Nov/10 06:17;mmakundi;The original isvisibleinhierarcy was breaking our production application (attached test case). 

The slightly improved isvisibleinhierarcy first checks parent visibility, this is ok and works currently ok in our experience (is applied to our production environment since monday; no errors).",17/Nov/10 07:02;ivaynberg;@pedro: post-order is there for a reason. we need to have form-workflow stepped on children invoked before parents so formcomponentpanels work. not sure if we need post order on multipart stuff.,"17/Nov/10 10:42;pedrosans;Sending the test that I would like to see passing.
@Igor I don't think so. On currently impl. the anyEmbeddedMultipart[0] is only assigned to true. If for some reason it needed to respect some very special children rule, we would see some false assignment also.",17/Nov/10 17:29;ivaynberg;caching added to 1.5 branch.,,,,,,,,,,,,,,,,,,,,
SmartLinkLabel failing to process email with +,WICKET-3174,12480121,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,brillpappin,brillpappin,16/Nov/10 15:13,16/Nov/10 19:36,13/Mar/19 23:17,16/Nov/10 16:33,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,1.5-RC1,,wicket-extensions,,,,,,,0,,,,,,,"Using SmartLinkLabel with an email address that includes a ""+"" generates a link only on the right-most part of the address.

Example:
- my+test@example.com
Will generate a link like:
- my+<a href=""mailto:test@example.com"">test@example.com@pappin.ca</a>

THe addition of the ""+"" char is a valid email address format.

","Java 6, Tomcat 6",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,16/Nov/10 15:24;brillpappin;DefaultLinkParserEmailPlusTest.java;https://issues.apache.org/jira/secure/attachment/12459703/DefaultLinkParserEmailPlusTest.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-16 17:44:36.444,,,no_permission,,,,,,,,,,,203986,,,Tue Nov 16 19:36:34 UTC 2010,,,,,,0|i0kbmf:,116700,,,,,,,,16/Nov/10 15:24;brillpappin;Attached a unit test to verify the fix.,16/Nov/10 15:26;brillpappin;This can be fixed at the same time as WICKET-2067.,"16/Nov/10 17:44;hudson;Integrated in Apache Wicket 1.5.x #519 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/519/])
    Issue: WICKET-3174
","16/Nov/10 19:36;hudson;Integrated in Apache Wicket 1.4.x #273 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/273/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -HttpsRequestCycleProcessor causes HttpSession to be created,WICKET-2903,12465833,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tino,tino,01/Jun/10 07:15,15/Nov/10 21:42,13/Mar/19 23:17,26/Aug/10 21:36,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,,,,,,,,1,,,,,,,"The HttpsRequestCycleProcessor has the following code:

	public IRequestTarget resolve(RequestCycle rc, RequestParameters rp)
	{
		// we need to persist the session before a redirect to https so the session lasts across
		// both http and https calls.
		Session.get().bind();

		IRequestTarget target = super.resolve(rc, rp);
		return checkSecure(target);
	}

The Session.get().bind() causes an HttpSession to be created even if the target page is stateless.  In our application all our pages are https and our login page is stateless.  Because the session is created anyway, we are now exposed to a DoS attack.

I don't really see why a HttpSession needs to be forced here.  If the page is stateful, then a session will be created anyway.  If the current page is stateless but the user had already navigated stateful pages, then a session will be present again.  Is there a scenario where it is important to for the session creation?   Can a mechanism be provided that will disable this behaviour?",,,,,,,,,,,WICKET-2629,,,,,,,,WICKET-3173,,,25/Jul/10 15:58;mgrigorov;WICKET-2903.patch;https://issues.apache.org/jira/secure/attachment/12450414/WICKET-2903.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-07-25 15:58:07.344,,,no_permission,,,,,,,,,,,203748,,,Thu Sep 09 19:10:53 UTC 2010,,,,,,0|i0kc93:,116802,,,,,,,,"01/Jun/10 07:18;tino;Since we try to do without a HttpSession as long as possible we would like to have the possibility to change this default behavior.
Overwriting of the ""resolve""-method isn't the solution since ""super.resolve(...)"" will create the session as well.","25/Jul/10 15:58;mgrigorov;Attach a possible patch.
Added a flag in the HttpsConfig with which the user can configure whether she wants to bind the session or not before going secure (https).","03/Aug/10 19:55;mgrigorov;There is a high risk with that patch.
If the session is not bound before redirecting to https then the jsessionid for the https request will be completely new and from there on back button support will be broken.
In completely stateless application (like described here) this probably is not a problem. But it is high risk for any other application.","26/Aug/10 21:28;ivaynberg;the scenario why this code was added:

* the user is browsing your application which is all stateless until login
* then they go to your login page which redirects to https
* they login and you create a session with id 550 for them and stuff their user id into the session, which is how your app tracks whether they are logged in or not
* user is redirected to their landing page which is not secure
* user is all of a sudden logged out - wtf?

the answer is that the session that was created during login with id 550 was created during an https request and tomcat will markup it as ""secure"". only requests on the https protocol will see this session. requests coming on http will create a new session - which will not have the user id stored - so the user will be effectively logged out as soon as going to any http page.

now if the session was created before the https request it will be preserved and https requests will use it - so everything works transparently.

a large class of applications, perhaps the largest, does not sandbox the user into https pages after login. usually, only the login page and a key few others are server over https. so the default is set up to make the code work for these applications.

i will apply martin's patch which will allow the creation of session to be toggled, but youve been warned.","26/Aug/10 22:15;hudson;Integrated in Apache Wicket 1.4.x #125 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/125/])
    Issue: WICKET-2903
","09/Sep/10 19:10;hudson;Integrated in Apache Wicket 1.5.x #316 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/316/])
    WICKET-2903 CLONE -HttpsRequestCycleProcessor causes HttpSession to be created
WICKET-3016 Port to 1.5

Port to 1.5 the https config flag whether to bind the Session before going https or not.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Various issues in wicket-examples 1.5.x,WICKET-3114,12477649,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mgrigorov,mgrigorov,18/Oct/10 15:56,15/Nov/10 16:48,13/Mar/19 23:17,15/Nov/10 16:48,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,wicket-examples,,,,,,0,,,,,,,"Here is a list of some issues found by Igor while playing with 1.5 wicket-examples:

* wicket package mounter produces // in url: http://localhost:8080/wicket-examples/niceurl//my/mounted/package/
^ FIXED

* ajax links example - failure handler is not invoked, instead error is reported
MG: ^^ which demo exactly is this ?

* ajax upload example: text field is always null?
MG: ^^ all upload demos work OK here

* ajax modal window - page window does not repaint result
^ FIXED - example was passing around pages instead of page references

* ajax onchange example does not work
MG: ^^Seems to work fine on FF and Google Chrome
IV: ^ FIXED - this was fixed with my recent url refactor

* ajax rating example seems slow
MG: ^^Seems OK on FF3.6 and Chrome

More information about each one will be added when the respective issue is investigated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-19 16:50:36.875,,,no_permission,,,,,,,,,,,203937,,,Sun Nov 14 15:43:24 UTC 2010,,,,,,0|i0kbrr:,116724,,,,,,,,"19/Oct/10 16:50;hudson;Integrated in Apache Wicket 1.5.x #421 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/421/])
    WICKET-3114

Update the explanation of PackageMapper usage in the examples
fixed package mapper
Issue: WICKET-3114
","21/Oct/10 07:53;hudson;Integrated in Apache Wicket 1.5.x #432 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/432/])
    WICKET-3114 fix example. do not pass a page instance to another page, instead use page reference
","25/Oct/10 20:20;pedrosans;* ajax links example - failure handler is not invoked, instead error is reported
MG: ^^ which demo exactly is this ?

at: http://localhost:8080/wicket-examples/ajax/links

Looks like the the failure handler at IAjaxCallDecorator is designed to be evaluated on javascript exceptions, not on java ones. For instance, if some one appends an problematic javascript at the ajax request target:
target.appendJavascript(""var a=1/0;"");
If the application exceptions settings has the unexpected exception display property as SHOW_EXCEPTION_PAGE, makes sense return the exception page.","14/Nov/10 15:43;mgrigorov;Do you still experience these problems ?
Here all of the issues are gone.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can not create cookies,WICKET-3161,12479758,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,istoykov,istoykov,11/Nov/10 23:02,14/Nov/10 10:23,13/Mar/19 23:17,13/Nov/10 12:17,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"Hi,

I'm migrating to wicket 1.5-M3 and I've encountered a problem. I can not create cookies (I presume that I can't delete them either).
I've looked through the source code and this is what I found:

I add the cookie to the response and I end up with a nice HeaderBufferingWebResponse which contains BufferedWebResponse$AddCookieAction.
But then redirectTo(Url, RequestCycle) from WebPageRenderer class is called. Here is the method:
        
       private void redirectTo(Url url, RequestCycle requestCycle)
	{
		WebResponse response = (WebResponse)requestCycle.getResponse();
		String relativeUrl = requestCycle.getUrlRenderer().renderUrl(url);
		response.reset();
		response.sendRedirect(relativeUrl);
	}
response.reset(); - removes all actions from the request.
So after this method my request has got only BufferedWebResponse$SendRedirectAction.","Windows 7, Intel i7",,,,,,,,,,,,,,,,,,,,,12/Nov/10 10:37;istoykov;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12459432/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-11-12 08:18:32.576,,,no_permission,,,,,,,,,,,203974,,,Sun Nov 14 10:23:40 UTC 2010,,,,,,0|i0aojj:,60249,,,,,,,,"12/Nov/10 08:18;mgrigorov;Hi Ivaylo,

Which render strategy do you use in your application ? (do you use getRequestCycleSettings().setRenderStragegy())

The purpose of the Action's is to cache the actual behavior for the response after the redirect. I.e. you set a cookie to the response, at the end of the request cycle this response is saved in org.apache.wicket.protocol.http.WebApplication.storeBufferedResponse(String, Url, BufferedWebResponse), then a redirect (without the cookie) is being made, and when the redirect comes back org.apache.wicket.request.mapper.BufferedResponseMapper.hasBufferedResponse(Url) will see there is a cached response and will use it without re-doing the whole request cycle processing, and now the cookie action will be executed.

This code has been changed between 1.5-M2.1 and M3 so it indeed could be broken.
Can you create a quickstart application so we can debug it more easily ?
Thanks!","12/Nov/10 10:36;istoykov;Hi Martin,

I don't set a render strategy, so I should be using REDIRECT_TO_BUFFER which is the default.
I'm attaching a quickstart.","13/Nov/10 09:36;pete;Removing reset() will not change anything

The set-cookie action gets lost when redirecting_to_buffer to redirect to a clean url after invoking the link listener, in WebPageRenderer in approx. line 123 in trunk


		// keep the original response
		final Response originalResponse = requestCycle.getResponse();

		// buffered web response for page 
   **** (the set-cookie action in originalResponse, which is of type HeaderBufferingWebResponse, is dropped here) ****
		BufferedWebResponse response = new BufferedWebResponse((WebResponse)originalResponse);

		// keep the original base URL
		Url originalBaseUrl = requestCycle.getUrlRenderer().setBaseUrl(targetUrl);

copying originalResponse over to response does not copy over the set cookie action.

still investigating further on this...","13/Nov/10 12:17;pete;I am confident that this issue is fixed but I am not very happy about the solution. Please feel free to improve it or send me feedback.

I also added a test case in wicket source to test for existance of cookies that were set during a link listener event.

General question to wicket devs: Is it ok to ""resolve issue"" if I am not happy with a solution but the issue is fixed?
","13/Nov/10 12:54;hudson;Integrated in Apache Wicket 1.5.x #507 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/507/])
    WICKET-3161: added missing apache license headers
WICKET-3161: improve naming
WICKET-3161: added test case
WICKET-3161: cookies that are set during a buffered web response will not be transferred over redirecting. 

The solution to this issue is not what I consider pretty so please take time to review and feel free to improve it.

Sorry for the last commit message (I intended to create a path but was clicking too fast)

The previous commit is part of WICKET-3161
","14/Nov/10 10:23;hudson;Integrated in Apache Wicket 1.5.x #511 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/511/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session causing memory leak after WICKET-3108,WICKET-3160,12479739,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pedrosans,pedrosans,11/Nov/10 18:59,14/Nov/10 07:20,13/Mar/19 23:17,14/Nov/10 07:20,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,,,wicket,,,,,,,0,,,,,,,"Session has a not transient variable storing used pagemaps causing memory leak. Pagemap objects are already maintained by the session store object.
Please see more info at https://issues.apache.org/jira/browse/WICKET-3108",,,,,,,,,,,,,,,,,,,,,,11/Nov/10 19:55;pedrosans;fix-WICKET-3108-memory-leak.patch;https://issues.apache.org/jira/secure/attachment/12459375/fix-WICKET-3108-memory-leak.patch,13/Nov/10 01:34;pedrosans;fix-test-WICKET-3160-cleanup.patch;https://issues.apache.org/jira/secure/attachment/12459512/fix-test-WICKET-3160-cleanup.patch,12/Nov/10 13:11;pedrosans;fix-test-WICKET-3160-maintainingLruSequence.patch;https://issues.apache.org/jira/secure/attachment/12459449/fix-test-WICKET-3160-maintainingLruSequence.patch,11/Nov/10 22:34;pedrosans;fix-test-WICKET-3160.patch;https://issues.apache.org/jira/secure/attachment/12459398/fix-test-WICKET-3160.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203973,,,Sat Nov 13 01:34:03 UTC 2010,,,,,,0|i0kbnj:,116705,,,,,,,,11/Nov/10 22:34;pedrosans;Patch with the same fix using the Lock type instead of Object plus the test case.,12/Nov/10 13:11;pedrosans;patch maintaining the LRU sequence at the getPageMaps method plus test cases,"12/Nov/10 20:35;pedrosans;Please don't apply the patch yet, I will clean up it a bit.","13/Nov/10 01:34;pedrosans;patch only adding the page map name on the list, and not wrapping it with attributeForPageMapName method (I don't know why I was doing it at the first place).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing xml headers in localized SignIn pages,WICKET-3140,12478615,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,observer,observer,28/Oct/10 19:51,01/Nov/10 00:17,13/Mar/19 23:17,31/Oct/10 17:22,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,,,wicket-auth-roles,,,,,,,0,,,,,,,"Something goes wrong in page rendering in SignInPage_ru.html 
Take a look at attached screenshot: while fields displayed correctly, title and H1 header are not 

Situation may be corrected if we put xml header in html. Same goes for every localized page in auth-roles. 
I attached new version too. ",,,,,,,,,,,,,,,,,,,,,,28/Oct/10 19:55;observer;SignInPage_ru.html;https://issues.apache.org/jira/secure/attachment/12458273/SignInPage_ru.html,28/Oct/10 19:55;observer;signin_ru.png;https://issues.apache.org/jira/secure/attachment/12458272/signin_ru.png,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-31 17:22:51.4,,,no_permission,,,,,,,,,,,97092,,,Mon Nov 01 00:17:48 UTC 2010,,,,,,0|i0kbpb:,116713,,,,,,,,28/Oct/10 19:55;observer;Problem and solution,"31/Oct/10 17:22;mgrigorov;Fixed with r1029424 in 1.4.x.
1.5-SNAPSHOT already had the <?xml ... ?> processing instruction.","01/Nov/10 00:17;hudson;Integrated in Apache Wicket 1.4.x #242 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/242/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"On multipart form, sendRedirect() with PageParameters are not working",WICKET-3141,12478655,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,f_levente,f_levente,29/Oct/10 11:31,01/Nov/10 00:17,13/Mar/19 23:17,31/Oct/10 16:57,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.14,1.5-RC1,,wicket,,,,,,,0,,,,,,,"On a multipart form, calling setResponsePage(Class, PageParameters) will not redirect to the requested page. 
In the wicket ajax debug the following error appears:

INFO: focus set on save3
INFO: Invoking pre-call handler(s)...
ERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element
INFO: Invoking post-call handler(s)...
INFO: Invoking failure handler(s)...

and in Firefox Error Console the following error appears:

Error: not well-formed
Source File: http://localhost:8080/sample/?wicket:interface=:0:form:save::IActivePageBehaviorListener:0:1&wicket:ignoreIfNotActive=true&wicket:ajax=true
Line: 1, Column: 87
Source Code:
<ajax-response><redirect>../?wicket:bookmarkablePage=:problem.sample.SecondPage&param1=value1&param2=value2</redirect></ajax-response>

The problem is, that the URL from the response XML are not xml encoded.",,,,,,,,,,,,,,,,,,,,,,29/Oct/10 11:33;f_levente;sample.zip;https://issues.apache.org/jira/secure/attachment/12458322/sample.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-31 16:57:22.906,,,no_permission,,,,,,,,,,,203958,,,Mon Nov 01 00:17:47 UTC 2010,,,,,,0|i0kbp3:,116712,,,,,,,,29/Oct/10 11:33;f_levente;Attached a sample application.,31/Oct/10 16:57;mgrigorov;Fixed with r1029411 (1.5-SNAPSHOT) and r1029412 (1.4.x),"31/Oct/10 17:31;hudson;Integrated in Apache Wicket 1.5.x #473 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/473/])
    WICKET-3141 On multipart form, sendRedirect() with PageParameters are not working

Wrap the 'redirect to' URL in the Ajax response in CDATA to be able to handle properly unencoded XML
","01/Nov/10 00:17;hudson;Integrated in Apache Wicket 1.4.x #242 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/242/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No Exception page are rendered when using ajax,WICKET-3143,12478677,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nino,nino,29/Oct/10 17:18,31/Oct/10 17:31,13/Mar/19 23:17,30/Oct/10 05:26,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"When using ajax no exception page are rendered if an exception occurs.

Just start the quickstart here : https://issues.apache.org/jira/browse/WICKET-3142

And select something ind the dropdown",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-30 05:26:27.78,,,no_permission,,,,,,,,,,,203960,,,Sun Oct 31 17:31:20 UTC 2010,,,,,,0|i0kbon:,116710,,,,,,,,30/Oct/10 05:26;ivaynberg;error page is shown by default. ajax failure handlers can be enabled via iexceptionsettings.setAjaxErrorHandlingStrategy(INVOKE_FAILURE_HANDLER),"30/Oct/10 23:31;hudson;Integrated in Apache Wicket 1.5.x #470 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/470/])
    ","31/Oct/10 17:31;hudson;Integrated in Apache Wicket 1.5.x #473 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/473/])
    WICKET-3143 No Exception page are rendered when using ajax

Extend the test with checks for the different values of AjaxErrorStrategy.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Localizer cache does not include style in cache key when no component is given,WICKET-3119,12477753,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,picknick,picknick,19/Oct/10 15:11,21/Oct/10 00:20,13/Mar/19 23:17,20/Oct/10 19:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"Localizer uses a cache internally to cache the results of getString() methods. The getCacheKey() method creates the key for the cache entries:

getCacheKey(final String key, final Component component, final Locale locale, final String style, final String variation)

When a null component is given, this method creates a cache key from the key param and the locale param, but does not include the style param. When switching between styles, this leads to unexpected behavior.

I'll attach a patch with test cases.",,,,,,,,,,,,,,,,,,,,,,19/Oct/10 15:13;picknick;localizer.patch;https://issues.apache.org/jira/secure/attachment/12457557/localizer.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-20 16:36:58.959,,,no_permission,,,,,,,,,,,203940,,,Thu Oct 21 00:20:34 UTC 2010,,,,,,0|i0kbrb:,116722,,,,,,,,19/Oct/10 15:13;picknick;Patch with unit tests,"20/Oct/10 16:36;ivaynberg;not sure what version of wicket you are using, but in 1.4.x and 1.5.x getcachekey() looks like this:

{code}
			buffer.append(""-"").append(component.getLocale());
			buffer.append(""-"").append(component.getStyle()); <=======
			cacheKey = buffer.toString();
{code}","20/Oct/10 18:54;picknick;That's the code when a component is given. I meant the code when no component is given (a couple of lines below that):

{code}
else
		{
			// locale is guaranteed to be != null
			cacheKey += ""-"" + locale.toString();
		}
{code}",20/Oct/10 19:07;ivaynberg;ahha. next time please provide a patch that applies cleanly.,"20/Oct/10 20:24;hudson;Integrated in Apache Wicket 1.5.x #427 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/427/])
    Issue: WICKET-3119
","21/Oct/10 00:20;hudson;Integrated in Apache Wicket 1.4.x #219 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/219/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockSessionStore doesn't bind sessions properly,WICKET-3123,12477880,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,20/Oct/10 15:35,20/Oct/10 16:26,13/Mar/19 23:17,20/Oct/10 15:50,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"Binding a Session in MockSessionStore doesn't set its 'id' and thus later calls to #isTemporary() returns ""true"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-20 16:26:23.744,,,no_permission,,,,,,,,,,,203944,,,Wed Oct 20 16:26:23 UTC 2010,,,,,,0|i0kbqn:,116719,,,,,,,,20/Oct/10 15:50;mgrigorov;Fixed with r1025621,"20/Oct/10 16:26;hudson;Integrated in Apache Wicket 1.5.x #426 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/426/])
    WICKET-3123 MockSessionStore doesn't bind sessions properly

Actually it appeared that the session is inproperly bound for tests.
All later calls to store.lookup(session) always return true and thus a session id is never created
WICKET-3123 MockSessionStore doesn't bind sessions properly

Add an ignored unit test that shows the problem
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractHttpSessionStore.bind throws null pointer exception,WICKET-3120,12477789,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ec,ec,19/Oct/10 21:55,19/Oct/10 23:13,13/Mar/19 23:17,19/Oct/10 22:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,,,,,,,,,,0,,,,,,,"The method gets a n HttpSession, but does not check for null before it uses it.

	HttpSession httpSession = getHttpSession(webRequest);
	// register an unbinding listener for cleaning up
	String applicationKey = application.getApplicationKey();
	httpSession.setAttribute(""Wicket:SessionUnbindingListener-"" + applicationKey,
	... ...

The method getHttpSession is allowed to return null and most other places in the code check for null before using the session.

Stack trace:
Oct 19, 2010 9:39:30 PM org.apache.wicket.RequestCycle onExceptionLoop
SEVERE: unexpected exception when handling another exception: null
java.lang.NullPointerException
	at org.apache.wicket.protocol.http.AbstractHttpSessionStore.bind(AbstractHttpSessionStore.java:144)
	at org.apache.wicket.Session.bind(Session.java:422)
	at org.apache.wicket.Page.onBeforeRender(Page.java:1537)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:1071)
	at org.apache.wicket.Component.beforeRender(Component.java:1105)
	at org.apache.wicket.Component.prepareForRender(Component.java:2292)
	at org.apache.wicket.Page.prepareForRender(Page.java:1521)
	at org.apache.wicket.Component.prepareForRender(Component.java:2329)
	at org.apache.wicket.Page.renderPage(Page.java:892)




",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-19 23:13:59.092,,,no_permission,,,,,,,,,,,203941,,,Tue Oct 19 23:13:59 UTC 2010,,,,,,0|i0kbr3:,116721,,,,,,,,"19/Oct/10 23:13;hudson;Integrated in Apache Wicket 1.4.x #215 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/215/])
    Issue: WICKET-3120
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEventBehavior#onEvent is invoked on disabled behavior,WICKET-3098,12476762,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,linuxroot,linuxroot,07/Oct/10 11:59,18/Oct/10 23:25,13/Mar/19 23:17,14/Oct/10 17:52,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"Security bug  AjaxEventBehavior#onEvent is invoked on disabled behavior. It should not be - it is really dangerous, can you fix it.

I think it is security bug.",,,,,,,,,,,,,,,,,,,,,,10/Oct/10 18:41;pedrosans;BehaviorRequestTarget.java.patch;https://issues.apache.org/jira/secure/attachment/12456809/BehaviorRequestTarget.java.patch,18/Oct/10 21:49;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12457486/patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-07 13:06:48.742,,,no_permission,,,,,,,,,,,203924,,,Mon Oct 18 23:25:37 UTC 2010,,,,,,0|i0kbtb:,116731,,,,,,,,07/Oct/10 13:06;mgrigorov;It should be easy to fix. But why it is so serious problem ?,"07/Oct/10 14:22;linuxroot;Yes, it is easy to fix.

It should be in the same way as on all other places.
Because if something is disabled, it should be inaccessible.

The AjaxFormSubmitBehavior is more dangerous. And it extends this class.
Disabled behavior can start the form processing. And I think it is dangerous.",10/Oct/10 18:41;pedrosans;An path preventing the disable behavior call at the request target,"14/Oct/10 17:52;ivaynberg;good catch, thanks","14/Oct/10 19:11;hudson;Integrated in Apache Wicket 1.4.x #204 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/204/])
    ","14/Oct/10 19:25;hudson;Integrated in Apache Wicket 1.5.x #402 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/402/])
    ","18/Oct/10 14:48;pedrosans;Why silent return the call rather then throw page expired exception? The only use case that I can imagine now is:
- add an enabled component +  ajax behavior
- processing some ajax request, disable the component and don't add it to target
Result: page is presenting an expired component state, the current one is disable.","18/Oct/10 15:09;ivaynberg;a more likely scenario is that the user overrode isenabled() on the component or behavior, and at the time of the callback it returns false. another one is that the client messed around with the url and change the behavior index.

anyways, it is handled just like a click on a disabled component.",18/Oct/10 21:49;pedrosans;an test case preventing the bug plus a missing else clause :),"18/Oct/10 23:00;ivaynberg;fxed, thanks.","18/Oct/10 23:25;hudson;Integrated in Apache Wicket 1.5.x #419 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/419/])
    Issue: WICKET-3098
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxLink.onClick() -> setResponsePage(...) redirects to wrong url,WICKET-3086,12475477,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,gabriel.bucher,gabriel.bucher,30/Sep/10 05:56,17/Oct/10 08:43,13/Mar/19 23:17,14/Oct/10 06:07,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,,,,,,,,0,,,,,,,"see attached quickstart.tar.gz (wicket 1.5-SNAPSHOT)

quickstart contains 2 test pages (Test1Page and Test2Page) which contains a AjaxLink which simple sets the response page in its onClick method to the ResultPage.

Test1Page's url is: http://localhost:8080/wicket/bookmarkable/com.mycompany.Test1Page
which results in after clicking on the ajax link: http://localhost:8080/wicket/bookmarkable/bookmarkable/com.mycompany.ResultPage

Test2Page is mounted and it's url is: http://localhost:8080/test2
which results in after clicking on the ajax link: http://localhost:8080/bookmarkable/com.mycompany.ResultPage


the WebPageRenderer.redirectTo(..) tries to create a relative url... which will be rendered related to the current request...
for both above cases the current request is e.g. http://localhost:8080/wicket/page?6-1.IBehaviorListener.0-ajaxLink


in the WebPageRenderer.redirectTo(..) to create the
",,,,,,,,,,,,,,,,,,,,,,08/Oct/10 04:03;gabriel.bucher;3086.patch;https://issues.apache.org/jira/secure/attachment/12456664/3086.patch,30/Sep/10 05:56;gabriel.bucher;quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12455973/quickstart.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-13 22:58:11.776,,,no_permission,,,,,,,,,,,203915,,,Sun Oct 17 08:43:47 UTC 2010,,,,,,0|i0kbuf:,116736,,,,,,,,"08/Oct/10 03:50;gabriel.bucher;some more examples where the setResponsePage(..) / redirect fails:
- http://wicketstuff.org/wicket/ajax/links  (the last 2)
- http://wicketstuff.org/wicket/ajax/upload  (Ajax Submit)
- http://wicketstuff.org/wicket/ajax/todo-list  (Ajax Back link)","08/Oct/10 04:03;gabriel.bucher;please review attached patch.

used for verification quickstart, wicket-example links and 'mvn test'","13/Oct/10 22:58;pete;Fixed in trunk.

Please verify!

Thanks Gabriel :-)","14/Oct/10 01:11;hudson;Integrated in Apache Wicket 1.5.x #397 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/397/])
    ",14/Oct/10 02:43;ivaynberg;working on a cleaner patch,"14/Oct/10 16:42;hudson;Integrated in Apache Wicket 1.5.x #400 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/400/])
    ","15/Oct/10 06:29;hudson;Integrated in Apache Wicket 1.5.x #405 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/405/])
    ",17/Oct/10 08:43;gabriel.bucher;thanks Peter and Igor... works perfect.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nested fragments markup not found,WICKET-3079,12474988,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,hok,hok,24/Sep/10 00:19,14/Oct/10 16:42,13/Mar/19 23:17,14/Oct/10 15:46,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"I have the following markup:

<body>
<wicket:extend>
	<span wicket:id=""FragmentA_container""></span>

	<wicket:fragment wicket:id=""FragmentA"">
		<span wicket:id=""FragmentB_container""></span>

		<wicket:fragment wicket:id=""FragmentB"">
			<span wicket:id=""child_component"">
		</wicket:fragment>
	</wicket:fragment>	
</wicket:extend>
</body>

FragmentA is added to the page it has added a child of type FragmentB. Also, FragmentB's markup is defined inside FragmetnA. 
In the Java code, when FragmentB is added to FragmentA, FragmentA is specified as markup provider for FragmentB.

In this case wicket throws an exception:
Markup not found for Component: [ [Component id = child_component]]

I have experienced this behavior in several occasions and I've noticed that if a fragment's markup is defined inside another fragment this exception is thrown. The problem occurs because the Fragment.getMarkup(final Component child) method returns null. This worked in wicket 1.4.9.
","Windows, Jetty 7",,,,,,,,,,,,,,,,,,,,,24/Sep/10 18:08;hok;fragments_test.rar;https://issues.apache.org/jira/secure/attachment/12455506/fragments_test.rar,25/Sep/10 16:50;mgrigorov;fragments_test.tgz;https://issues.apache.org/jira/secure/attachment/12455565/fragments_test.tgz,08/Oct/10 19:49;jdonnerstag;wicket-3079.patch;https://issues.apache.org/jira/secure/attachment/12456722/wicket-3079.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-09-24 06:23:10.834,,,no_permission,,,,,,,,,,,203908,,,Thu Oct 14 16:42:34 UTC 2010,,,,,,0|i0kbv3:,116739,,,,,,,,24/Sep/10 06:23;jdonnerstag;Please attach a testcase or quickstart,"24/Sep/10 18:08;hok;Added modified HelloWorld example, which uses fragments.",25/Sep/10 16:50;mgrigorov;Attach a quickstart with fixed wicket:ids. The attached by Ivan has some typos.,"03/Oct/10 09:08;mgrigorov;Juergen, you closed it as ""Fixed"" for 1.5-M3 but I didn't see any commits related to this. Is it possible that your svn client failed to commit it without you notice it?",03/Oct/10 12:03;jdonnerstag;Got a new laptop and and forgot my password. Already sent an email to infra to reset,"03/Oct/10 12:12;mgrigorov;Ok, close the ticket again when you are able to commit the fix. ",08/Oct/10 19:49;jdonnerstag;until I have access again,14/Oct/10 15:46;ivaynberg;committed on juergen's behalf,"14/Oct/10 16:42;hudson;Integrated in Apache Wicket 1.5.x #400 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/400/])
    Issue: WICKET-3079
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CharSetUtil.getEncoding fails with an IndexOutOfBoundsException,WICKET-3084,12475383,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jajans,jajans,29/Sep/10 07:28,14/Oct/10 00:24,13/Mar/19 23:17,13/Oct/10 19:36,1.4.0,1.4.1,1.4.10,1.4.11,1.4.12,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4.7,1.4.8,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket-extensions,,,,,,,0,,,,,,,"We are experiencing some problems in CharSetUtil.getEncoding(). When used, we see the following stacktrace appear:

java.lang.IndexOutOfBoundsException: Index: 4, Size: 0
	at java.util.ArrayList.add(ArrayList.java:367)
	at org.apache.wicket.extensions.util.encoding.CharSetMap.<init>(CharSetMap.java:238)
	at org.apache.wicket.extensions.util.encoding.CharSetUtil.initialize(CharSetUtil.java:72)
	at org.apache.wicket.extensions.util.encoding.CharSetUtil.getEncoding(CharSetUtil.java:102)

As I understand the code in CharSetMap, it looks like the construction of the encodings array list fails. The paths it tries to load encoding map files from yield exceptions causing the array list to remain empty.

See attached quickstart for a sample.",Windows XP; Wicket 1.4.x.,,,,,,,,,,,,,,,,,,,,,29/Sep/10 07:29;jajans;charsetutil-jira3084.zip;https://issues.apache.org/jira/secure/attachment/12455905/charsetutil-jira3084.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-13 22:53:21.936,,,no_permission,,,,,,,,,,,203913,,,Thu Oct 14 00:24:05 UTC 2010,,,,,,0|i0kbun:,116737,,,,,,,,29/Sep/10 07:29;jajans;Wicket quickstart project with a JUnit that fails due to the described behaviour.,"13/Oct/10 22:53;hudson;Integrated in Apache Wicket 1.5.x #395 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/395/])
    ","14/Oct/10 00:24;hudson;Integrated in Apache Wicket 1.4.x #200 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/200/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No exceptionpage on exceptions during ajax,WICKET-3101,12476841,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,nino,nino,08/Oct/10 09:30,13/Oct/10 19:46,13/Mar/19 23:17,13/Oct/10 19:00,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"start the quickstart and wait to see error occuring in console, ajax just stops in browser (nothing is indicating the error)",,,,,,,,,,,,,,,,,,,,,,08/Oct/10 15:31;mgrigorov;WICKET-3101.patch;https://issues.apache.org/jira/secure/attachment/12456710/WICKET-3101.patch,08/Oct/10 09:31;nino;ajaxbug.zip;https://issues.apache.org/jira/secure/attachment/12456690/ajaxbug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-08 15:31:55.435,,,no_permission,,,,,,,,,,,203927,,,Wed Oct 13 19:46:41 UTC 2010,,,,,,0|i0kbt3:,116730,,,,,,,,"08/Oct/10 15:31;mgrigorov;@Devs: please review this patch.
The quickstart works with this patch. All tests pass but I don't feel comfortable to commit it without review.",13/Oct/10 19:00;mgrigorov;Fixed with r1022239,"13/Oct/10 19:46;hudson;Integrated in Apache Wicket 1.5.x #393 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/393/])
    WICKET-3101 No exceptionpage on exceptions during ajax

Allow HeaderBufferingWebResponse#reset() to actually reset the undelying buffer ignoring whether there is something already in or not.
This way now it is possible to call #sendRedirect() after writing some bytes in the buffer.

reviewed-by: ivaynberg
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Nullpointer when inserting [i.e. moving] a node in a TreeTable (AbstactTree, treeNodesInserted)",WICKET-2888,12465348,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,robau,robau,25/May/10 08:15,06/Oct/10 20:45,13/Mar/19 23:17,20/Sep/10 21:19,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,wicket-extensions,,,,,,0,abstracttree,treetable,,,,,"A have a simple tree:

root
-c1
--cc1
-c2
--cc2
-c3

I want to move c3 from parent root to parent c2. This works when the treenode c2 is not expanded, i.e. cc2 is not shown. When c2 is expanded, the action results in a nullPointerException in treeNodesInserted. The cause of the nullPointer is:

parentItem.getChildren() <-- returns null, but in line 845 the parentItem.getChildren().add() is called, thus the nullPointer.

Any hints?

my piece of tree manipulation code:

               table.getTreeTable().modelChanging();

                DefaultTreeModel model = (DefaultTreeModel) table.getTreeTable().getDefaultModelObject();

                DefaultMutableTreeNode parent = (DefaultMutableTreeNode) myNode.getParent();

                // getIndexOfChild returns -1 if either of th nodes == null
                int myIndex = model.getIndexOfChild( parent, myNode );
                if ( myIndex < 1 ) // 0 or -1
                {
                    return;
                }

                DefaultMutableTreeNode previousSibling = (DefaultMutableTreeNode) model.getChild( parent, myIndex - 1 );

                model.removeNodeFromParent( myNode );

                //insert the node as last
                model.insertNodeInto( myNode, previousSibling, model.getChildCount( previousSibling ) );

                table.getTreeTable().modelChanged();","On Linux, AMD64",,,,,,,,,,,,,,,,,,,,,05/Oct/10 13:48;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12456381/patch.txt,09/Sep/10 20:02;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12454230/patch.txt,09/Sep/10 17:11;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12454216/patch.txt,08/Sep/10 19:22;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12454140/patch.txt,30/Aug/10 10:03;robau;tree-quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12453409/tree-quickstart.tar.gz,,,,5.0,,,,,,,,,,,,,,,,,,,2010-08-27 02:40:28.726,,,no_permission,,,,,,,,,,,203733,,,Wed Oct 06 20:45:49 UTC 2010,,,,,,0|i0aok7:,60252,,,,,,,,27/Aug/10 02:40;ivaynberg;please provide a quickstart,27/Aug/10 14:19;robau;What is that & how can I make one? ,"27/Aug/10 15:11;ivaynberg;go to http://wicket.apache.org/start/quickstart.html
copy the maven command line
execute it

it will create a basic project

add the changes that reproduce your problem to that project

run mvn clean to clean it
zip it
attach it

reopen the issue when its done","30/Aug/10 10:03;robau;Goto the mounted page /edittree

Error path:
- Expand 'root' and 'c2'
- Click '>' next to c3. It should become a child of c2, but gives an error

Same functionality, other tree state:
- Expand only'root'
- Click '>' next to c3. It should become a child of c2, it does.

",30/Aug/10 10:03;robau;I attached a quickstart.,"08/Sep/10 19:14;pedrosans;Moving an node from the tree last position makes that the tree component marks the new last node as dirty, since it's visualization will change, from ""-"" to ""L"" (see AbstractTree#markTheLastButOneChildDirty).
At the rob described case, after remove the last node, it is added to the new last node as an child.
The problem was that treeNodesInserted method marks the new last node as dirty and recreate it, at the same time it marks the old last node to DOM creation because it was inserted at some node.
Then at ""onTargetRespond"" method, the new recreated last node will receive new TreeItem children. In the next step, the method will try to send the DOM creation script for the old last tree node. But it was already recreated, and has no parent at the time (the parent was correctly setted on the new last node children only).
I was able to fix this bug only by coordinating the execution sequence and maintain the dirty components list updated. (sending an patch)

",08/Sep/10 19:22;pedrosans;I did some refactoring to simplify the debug.,"08/Sep/10 21:31;pete;@pedro: your patch fixes the NPE but will not update the ajax tree in that case

start the quickstate - expand 'root' - select 'c3' - click '>' - expand 'c2' - select 'c3' - press '<' 

BUMMER!

'c3' is moved but not rendered in the tree :-(","09/Sep/10 11:58;pedrosans;I miss that: updating an tree item using ajax at the time this component don't exist at the browser, since it was not created via javascript by an postponed method, generate the problem you described.
I'm thinking about encapsulate this create/update html logic inside the TreeItem class and leave the AbstractTree just assembling those items. I mean: maintain record of what TreeNode objects are dirty, and not what TreeItem are. Then program TreeItem for detect dirty state and respond with the creation javascript.","09/Sep/10 15:32;pedrosans;Actually the method wasn't postponed, because the ""Wicket.Tree.createElement"" call is prepended at the ajax target. To your described use case work without undo the NPE correction, the response need to be:

<component>c2 html to be replaced</component>
<evaluate>create c3 javascript that has the ""afterId"" parameter equals to the c2 component rendered at the last step</evaluate>
","09/Sep/10 17:11;pedrosans;To fix both errors, the update dirty items logic needs to disconsider children that already will to be re-rendered by their parents.","09/Sep/10 20:02;pedrosans;The bug fix without the refactoring stuff, easier to understand what I did",20/Sep/10 21:19;pete;Integrated in current 1.4.x and 1.5.x. Please verify thoroughly ! :-),"20/Sep/10 22:12;hudson;Integrated in Apache Wicket 1.5.x #343 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/343/])
    WICKET-2888
",05/Oct/10 13:48;pedrosans;An test case to prevent this bug,"06/Oct/10 19:06;mgrigorov;The tests are committed in both 1.4.x and trunk.
Thanks Pedro!","06/Oct/10 20:20;hudson;Integrated in Apache Wicket 1.4.x #190 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/190/])
    WICKET-2888 Nullpointer when inserting [i.e. moving] a node in a TreeTable (AbstactTree, treeNodesInserted)

Add tests provided by Pedro Santos
","06/Oct/10 20:45;hudson;Integrated in Apache Wicket 1.5.x #384 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/384/])
    WICKET-2888 Nullpointer when inserting [i.e. moving] a node in a TreeTable (AbstactTree, treeNodesInserted)

Add tests provided by Pedro Santos
",,,,,,,,,,,,,,,,,,,,,
Form inside ModalWindow causes 'Submit Button not visible' exception in parent page's form,WICKET-3087,12475654,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,bitstorm,bitstorm,01/Oct/10 19:14,06/Oct/10 20:45,13/Mar/19 23:17,06/Oct/10 18:57,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,wicket-extensions,,,,,,0,,,,,,," We've got a page with a wicket form and just one submit button. When we press return key in a form field the form is submitted
with no problem. Inside form we have one link that opens a ModalWindow via ajax.
This window contains another wicket form which is submitted by a IndicatingAjaxButton.

The problem comes when we hit return key on parent page's form after we've opened and closed ModalWindow. In this case we get the following exception:

""org.apache.wicket.WicketRuntimeException: Submit Button <window's button name>
is not visible"".

It seems that even if we have closed window, its submit button is still be active. 
",Problem seems affect Firefox (ver 3.6.10) and Opera (ver 10.62). Chrome it's ok (ver. 6).,,,,,,,,,,,,,,,,,,,,,01/Oct/10 19:25;bitstorm;BugQuickStart.zip;https://issues.apache.org/jira/secure/attachment/12456156/BugQuickStart.zip,04/Oct/10 12:25;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12456283/patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-04 12:09:21.238,,,no_permission,,,,,,,,,,,203916,,,Wed Oct 06 20:45:48 UTC 2010,,,,,,0|i0kbu7:,116735,,,,,,,,01/Oct/10 19:25;bitstorm;Quickstart Eclipse project. To reproduce bug see instructions inside page.,"04/Oct/10 12:09;pedrosans;The modal window close method just sends to browser an javascript that closes the modal window, but maintain it's component html.
There is even some javascript on this close callback that reattach the component DOM on it's original parent.
I just can't see a good reason to maintain this invisible component DOM, since when user invoke the modal show method, it will to be rebuild anyway. In fact this is causing the stated problem. The user type the ""enter"" key at an form field, and the form visitor looking for the submit button reach an invisible button: the same button at the hidden modal window component DOM, that was listed in the submitted form parameters.",04/Oct/10 12:25;pedrosans;IMO the javascript codification to restore the component DOM should be removed as well. Let me know if I'm going in the right direction.,"06/Oct/10 18:57;mgrigorov;Fixed.
Thanks for the patch Pedro!

Looking at Firebug HTML console the DOM entries for the modal window are completely cleaned now. I think there is nothing more to do.","06/Oct/10 20:20;hudson;Integrated in Apache Wicket 1.4.x #190 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/190/])
    WICKET-3087 Form inside ModalWindow causes 'Submit Button not visible' exception in parent page's form

Update the DOM for the modal window content when closing it - remove the content.
","06/Oct/10 20:45;hudson;Integrated in Apache Wicket 1.5.x #384 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/384/])
    WICKET-3087 Form inside ModalWindow causes 'Submit Button not visible' exception in parent page's form

Update the DOM for the modal window content when closing it - remove the content.

merge r1005201 from 1.4.x
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken AbstarctCalendar dependency,WICKET-3083,12475189,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,kiakimov,kiakimov,27/Sep/10 12:48,27/Sep/10 19:30,13/Mar/19 23:17,27/Sep/10 15:41,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket-datetime,,,,,,,0,,,,,,,"org.apache.wicket.extensions.yui.calendar.AbstractCalendar
method contributeDependencies
add(HeaderContributor.forJavaScript(YuiLib.class, ""yahoo-dom-event/yahoo-dom-event.js""));

there is no yahoo-dom-event directory, just yahoodomevent

so AbstractCalendar fails with js error on
YAHOO.namespace(""wicket"");
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-27 19:30:55.53,,,no_permission,,,,,,,,,,,203912,,,Mon Sep 27 19:30:55 UTC 2010,,,,,,0|i0kbuv:,116738,,,,,,,,"27/Sep/10 19:30;hudson;Integrated in Apache Wicket 1.5.x #367 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/367/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileUploadException is masked behind WicketRuntimeException and not handled by a Form,WICKET-3078,12474978,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,hok,hok,23/Sep/10 21:13,25/Sep/10 18:24,13/Mar/19 23:17,25/Sep/10 15:42,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,wicket-extensions,,,,,,0,,,,,,,"I have a org.apache.wicket.markup.html.form.Form fileUploadForm, which has:
    fileUploadForm.setMultiPart(true);
    fileUploadForm.setMaxSize(Bytes.kilobytes(150));

When the form is submitted with a file larger than 150K the following methods are called:
    fileUploadForm -> handleMultiPart -> ServletWebRequest.newMultipartWebRequest((Bytes maxsize) and inside it

		try
		{
			return new MultipartRequest(getHttpServletRequest(), getFilterPrefix(), maxsize);
		}
		catch (FileUploadException e)
		{
			throw new WicketRuntimeException(e);
		}

When the file size exceeds the maximum allowed a FileUploadException is thrown, however it is immediately caught and ""masked"" in a WicketRuntimeException. Inside the handleMultiPart method of the Form there is a catch block for FileUploadException, but the original exception is no longer of type FileUploadException and in this case the form fails to handle it. The result is that instead of an error message informing the user of exceeded limit a wicket stack trace page is displayed. 

I'm not sure if this is part of wicket or wicket-extensions, because it involves classes from the both modules.
","Widnows, Jetty 7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-25 15:42:26.083,,,no_permission,,,,,,,,,,,203907,,,Sat Sep 25 18:24:19 UTC 2010,,,,,,0|i0kbvb:,116740,,,,,,,,"25/Sep/10 15:42;mgrigorov;Fixed with r1001242.
1.4.x works fine.","25/Sep/10 17:24;hudson;Integrated in Apache Wicket 1.5.x #361 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/361/])
    WICKET-3078 FileUploadException is masked behind WicketRuntimeException and not handled by a Form

Clean the handling of FileUploadException when creating MultipartServletWebRequest. Do not wrap it in WicketRuntimeException and then check the cause
","25/Sep/10 18:24;hudson;Integrated in Apache Wicket 1.5.x #362 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/362/])
    WICKET-3078 FileUploadException is masked behind WicketRuntimeException and not handled by a Form

Cleanup UploadWebRequest.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlUtils.isRelative returns false if URL parameter contains an absolute URL,WICKET-3076,12474937,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgottschalk,mgottschalk,23/Sep/10 14:56,25/Sep/10 18:24,13/Mar/19 23:17,25/Sep/10 17:13,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"I have a page that gets a return path for a back link as a parameter. A link to this page looks like this:

./mypage?return=http://example.com

In WebRequestCodingStrategy.encode, this URL is returned by pathForTarget.
Then it is checked whether this URL is relative using UrlUtils.isRelative. The URL is apparently relative, but UrlUtils.isRelative returns false, since the check contains:

(url.indexOf(""://"") < 0

this is false for the above example. Thus, an incorrect path is returned by WebRequestCodingStrategy.encode (relative path resolution does not take place).

A fix for the problem would be to check for 

!(url.startsWith(""http://"") || url.startsWith(""https://""))

Or, if other protocols should also be supported, a regular expression like ""^[^/?]*://"" should work. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-25 17:13:13.448,,,no_permission,,,,,,,,,,,203905,,,Sat Sep 25 18:24:18 UTC 2010,,,,,,0|i0kbvr:,116742,,,,,,,,25/Sep/10 17:13;mgrigorov;Fixed with r1001273 (1.4.x) and r1001275 (trunk),"25/Sep/10 18:24;hudson;Integrated in Apache Wicket 1.5.x #362 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/362/])
    WICKET-3076 UrlUtils.isRelative returns false if URL parameter contains an absolute URL

Use regular expression to check whether the passed url string starts with 'scheme://'
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreditCardValidator throws NumberFormatException on non-numeric characters.,WICKET-3074,12474895,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,clampley@epoch.com,clampley@epoch.com,23/Sep/10 02:19,25/Sep/10 18:24,13/Mar/19 23:17,25/Sep/10 17:36,1.4.11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"CreditCardValidator mishandles strings with alpha characters in them. See the stacktrace below. It should call error() instead of throwing a NumberFormatException if IValidatable.getValue() contains non-numeric characters. 

org.apache.wicket.WicketRuntimeException: Exception 'java.lang.NumberFormatException: For input string: ""ll22""' occurred during validation org.apache.wicket.validation.validator.Cred                                                                                                                                                                                                                                       
itCardValidator on component 1:CCForm:CreditCardPanel:cardnum                                                                                                                                                                                                                                                                                                                                                                 
 at org.apache.wicket.markup.html.form.FormComponent.validateValidators(FormComponent.java:1622)                                                                                                                                                                                                                                                                                                                              
 at org.apache.wicket.markup.html.form.FormComponent.validate(FormComponent.java:1201)                                                                                                                                                                                                                                                                                                                                        
 at org.apache.wicket.markup.html.form.Form$23.validate(Form.java:2161)                                                                                                                                                                                                                                                                                                                                                       
 at org.apache.wicket.markup.html.form.Form$ValidationVisitor.formComponent(Form.java:173)                                                                                                                                                                                                                                                                                                                                    
 at org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrderHelper(FormComponent.java:441)                                                                                                                                                                                                                                                                                                               
 at org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrderHelper(FormComponent.java:428)                                                                                                                                                                                                                                                                                                               
 at org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrderHelper(FormComponent.java:428)                                                                                                                                                                                                                                                                                                               
 at org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrder(FormComponent.java:400)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.markup.html.form.Form.visitFormComponentsPostOrder(Form.java:1233)                                                                                                                                                                                              
 at org.apache.wicket.markup.html.form.Form.validateComponents(Form.java:2153)                                                                                                                                                                                                                                                                                                                                                
 at org.apache.wicket.markup.html.form.Form.validate(Form.java:2133)                                                                                                                                                                                                                                                                                                                                                          
 at org.apache.wicket.markup.html.form.Form.process(Form.java:1005)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.markup.html.form.Form.process(Form.java:955)                                                                                                                                                                                                                                                          
 at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:920)Sep 22 15:15:52 dpxnu0 logger:  at sun.reflect.GeneratedMethodAccessor101.invoke(Unknown Source)                                                                                                                                                                                                                                                    
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)                                                                                                                                                                                                                                                                                                                                     
 at java.lang.reflect.Method.invoke(Method.java:597)                                                                                                                                                                                                                                                                                                                                                                          
 at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:182)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.request.target.component.listener.ListenerInterfaceRequestTarget.processEvents(ListenerInterfaceRequestTarget.java:73)                                                                                                                                                           
 at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
 at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:317)                                                                                                                                  
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)                                                                                                                                                                                                                                                                                                                         
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)                                                                                                                                                                                                                                                                                                                                 
 at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)                                                                                                 
 at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)                                                                                                                                                                                                                         
 at org.apache.catalina.ha.tcp.ReplicationValve.invoke(ReplicationValve.java:347)                                                                                                                                                                                                                                                                                                                                             
 at org.apache.catalina.ha.session.JvmRouteBinderValve.invoke(JvmRouteBinderValve.java:227)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)                                                                                                                                                                                                                     
 at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:291)                                                                                                                                                                                                                                               
 at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:769)Sep 22 15:15:52 dpxnu0 logger:  at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:698)                                                                                                                                                                                                                                          
 at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:891)                                                                                                                                                                                                                                                                                                                                         
 at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:690)Sep 22 15:15:52 dpxnu0 logger:  at java.lang.Thread.run(Thread.java:619)                                                                                                                                                                                                                                                                
Caused by: java.lang.NumberFormatException: For input string: ""ll22""                                                                                                                                                                                                                                                                                                                                                          
 at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)                                                                                                                                                                                                                                                                                                                                             
 at java.lang.Integer.parseInt(Integer.java:449)                                                                                                                                                                                                                                                                                                                                                                              
 at java.lang.Integer.parseInt(Integer.java:499)                                                                                                                                                                                                                                                                                                                                                                              
 at org.apache.wicket.validation.validator.CreditCardValidator.isJCB(CreditCardValidator.java:366)                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                              ",Linux,,,,,,,,,,,,,,,,,,,,,23/Sep/10 21:52;clampley@epoch.com;CreditCardValidator.patch;https://issues.apache.org/jira/secure/attachment/12455431/CreditCardValidator.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-25 17:36:40.46,,,no_permission,,,,,,,,,,,203903,,,Sat Sep 25 18:24:17 UTC 2010,,,,,,0|i0kbw7:,116744,,,,,,,,23/Sep/10 21:52;clampley@epoch.com;I have attached a patch which should take care of this issue.,25/Sep/10 17:36;mgrigorov;Fixed.,"25/Sep/10 18:24;hudson;Integrated in Apache Wicket 1.5.x #362 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/362/])
    WICKET-3074 CreditCardValidator throws NumberFormatException on non-numeric characters.

Mark the validation as failed if the passed credit card number has non digit characters
WICKET-3074 CreditCardValidator throws NumberFormatException on non-numeric characters.

Fix a typo.
No functional changes
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester does not preserve the form component values when submitting with AjaxSubmitLink,WICKET-3053,12474318,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,peathal,peathal,16/Sep/10 20:17,22/Sep/10 11:20,13/Mar/19 23:17,22/Sep/10 09:25,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"See this thread:
http://apache-wicket.1842946.n4.nabble.com/Url-parameters-removed-onClick-wrong-url-encoding-td2541831.html

Again you can take a legup project (with Guice 2.0) and substitute the wicket versions -> the test 

tester.assertModelValue(""text"", ""sayHello"");

will fail: expected:<sayHello> but was:<Hello null>",,,,,,,,,,,,,,,,,,,,,,19/Sep/10 09:25;mgrigorov;WICKET-3053.patch;https://issues.apache.org/jira/secure/attachment/12454970/WICKET-3053.patch,17/Sep/10 09:47;peathal;wicket-bug2-setter-injection.zip;https://issues.apache.org/jira/secure/attachment/12454835/wicket-bug2-setter-injection.zip,16/Sep/10 20:24;peathal;wicket-bug2.zip;https://issues.apache.org/jira/secure/attachment/12454798/wicket-bug2.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-09-17 07:54:28.847,,,no_permission,,,,,,,,,,,203887,,,Wed Sep 22 11:20:17 UTC 2010,,,,,,0|i0kbxr:,116751,,,,,,,,"16/Sep/10 20:24;peathal;attached quickstart. Just replace wicket version with 1.4.9 and you can see that it is passing.

1.5-M2.1 is now failing with:
expected:<Goodbye Bob> but was:<Goodbye null>

strange","17/Sep/10 07:54;mgrigorov;It seems it is a problem in WicketTester, not in Guice.
The application itself works OK.","17/Sep/10 09:44;peathal;The issue in the provided quick start must be a different issue :-) (ajax form stuff or sth.)

I'll attach the 'correct' bug, which appeared in the real application. There setter for the injection is never called and results in a NullPointerException. (the field injection seem to work)",17/Sep/10 09:47;peathal;'correct' bug where setter injection fails,"17/Sep/10 11:37;mgrigorov;Setter injection is not supported in 1.5.
We decided to remove that functionality in 1.5.
Use field injection instead.","19/Sep/10 09:25;mgrigorov;A patch for BaseWicketTester that preserves the form components' values when AjaxSubmitLink is clicked.
@Wicket devs: please review.","20/Sep/10 06:56;peathal;> Setter injection is not supported in 1.5. We decided to remove that functionality in 1.5. 

uha, why that? is it really a good idea to support only parts of guice? is it difficult to implement or too much work?","20/Sep/10 08:27;mgrigorov;There is no need to support it. Wicket-Spring have never supported this feature and no one ever needed it. The same can be done with field injection, so there is no need to support more code in our codebase.
In 1.5 the code related to that logic is in wicket-ioc and it is shared between wicket-spring and wicket-guice.",22/Sep/10 09:25;mgrigorov;Fixed with r999827.,"22/Sep/10 11:20;hudson;Integrated in Apache Wicket 1.5.x #350 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/350/])
    WICKET-3053 WicketTester does not preserve the form component values when submitting with AjaxSubmitLink

Serialize the form components' values in the request post parameters when clicking AjaxSubmitLink
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The new mappers ignore single query parameter with empty value,WICKET-3067,12474710,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,21/Sep/10 15:41,21/Sep/10 20:14,13/Mar/19 23:17,21/Sep/10 20:14,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"Making request like http://host:port/?paramName= will result in empty PageParameters.
The problem is in org.apache.wicket.request.mapper.AbstractMapper.extractPageParameters(Request, int, IPageParametersEncoder) because it skips the first parameter if its value is empty.
This is made because most of the time this is the PageComponentInfo part of the URL.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203899,,,Tue Sep 21 20:14:38 UTC 2010,,,,,,0|i0kbwv:,116747,,,,,,,,21/Sep/10 20:14;mgrigorov;Fixed with r999588.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Whole page returns 404 when resource cannot be found,WICKET-3061,12474581,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,rbaranga,rbaranga,20/Sep/10 10:44,21/Sep/10 18:30,13/Mar/19 23:17,20/Sep/10 16:20,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,,,wicket,,,,,,,0,,,,,,,Adding a HeaderContributor through CSSPackageResource.getHeaderContribution() with a ResourceReference that points to a missing file to an app that has setAddLastModifiedTimeToResourceReferenceUrl to true causes the whole page to return 404 instead of linking the resource which shoud then return a 404.,,,,,,,,,,,,,,,,,,,,,,20/Sep/10 10:45;rbaranga;myproject.zip;https://issues.apache.org/jira/secure/attachment/12455031/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-20 16:20:41.778,,,no_permission,,,,,,,,,,,203895,,,Tue Sep 21 18:30:39 UTC 2010,,,,,,0|i0kbxb:,116749,,,,,,,,20/Sep/10 10:45;rbaranga;quickstart to simulate issue,"20/Sep/10 16:20;mgrigorov;Fixed in 1.4.x.
1.5.x works fine without modifications.","21/Sep/10 18:30;hudson;Integrated in Apache Wicket 1.4.x #173 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/173/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HomePageMapper ignores request to '/' with query string parameters,WICKET-3065,12474670,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,21/Sep/10 08:09,21/Sep/10 17:12,13/Mar/19 23:17,21/Sep/10 15:34,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"Issue a request to http://host:port/contextpath/?something
Wicket will log an error message like:
ERROR - RequestCycle               - Unable to execute request. No suitable RequestHandler found. URL=?something

I think the reason is in HomePageMapper which maps to the configured home page only if there are no query parameters.

HomePageMapper.java:
{code}
public IRequestHandler mapRequest(Request request)
	{
		if (request.getUrl().getSegments().size() == 0 &&
			request.getUrl().getQueryParameters().size() == 0)
		{
			return new RenderPageRequestHandler(new PageProvider(getContext().getHomePageClass()));
		}
		else
		{
			return null;
		}
	}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-21 17:12:07.576,,,no_permission,,,,,,,,,,,203898,,,Tue Sep 21 17:12:07 UTC 2010,,,,,,0|i0kbx3:,116748,,,,,,,,21/Sep/10 15:34;mgrigorov;Fixed with r999466.,"21/Sep/10 17:12;hudson;Integrated in Apache Wicket 1.5.x #347 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/347/])
    WICKET-3065 HomePageMapper ignores request to '/' with query string parameters

Add unit tests for :
- /
- /?name=value
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket does not redirect to InternalErrorPage when an error occurs in Ajax processing,WICKET-3058,12474531,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,mgrigorov,mgrigorov,19/Sep/10 15:58,20/Sep/10 22:12,13/Mar/19 23:17,20/Sep/10 20:09,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"If an exception is thrown during processing of Ajax request then Wicket just logs the exception and responds with the error page in the Ajax response, instead of redirecting to the error page.",,,,,,,,,,,,,,,,,,,,,,19/Sep/10 15:59;mgrigorov;wicket-3058.tgz;https://issues.apache.org/jira/secure/attachment/12454976/wicket-3058.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-20 20:09:35.001,,,no_permission,,,,,,,,,,,203892,,,Mon Sep 20 22:12:56 UTC 2010,,,,,,0|i0aokf:,60253,,,,,,,,20/Sep/10 20:09;pete;Your quickstart is working now. Please verify thoroughly. Thanks :-),"20/Sep/10 22:12;hudson;Integrated in Apache Wicket 1.5.x #343 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/343/])
    WICKET-3058: In case of ajax force DefaultExceptionMapper to do a full redirect to the error page. Additionally, fix lookup of current page in case of ajax.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when deleting a TreeNode with visible children,WICKET-3057,12474488,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mikehefner,mikehefner,18/Sep/10 19:11,19/Sep/10 16:41,13/Mar/19 23:17,19/Sep/10 15:46,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,wicket-extensions,,,,,,0,,,,,,,"When using an org.apache.wicket.extensions.markup.html.tree.Tree, deleting a currently selected TreeNode that has been expanded so that its children are visible causes a NullPointerException.

In AbstractTree.treeNodesRemoved(), each of the deleted node's children is passed to DefaultTreeState.selectNode() to ensure that they are deselected. A flaw in the logic of that method caused the deleted node to be invalidated and mistakenly marked for rendering. When the deleted node is rendered, it no longer has a parent node, causing the NullPointerException on the line:
		TreeNode parent = node.getParent();

My fix was to correct the logic in DefaultTreeState.selectNode() so that passing in a currently unselected node for deselection does not affect the currently selected node. Thus, the deleted node is not invalidated and is not rendered.

Stack Trace:

java.lang.NullPointerException
at org.apache.wicket.extensions.markup.html.tree.DefaultAbstractTree.isNodeLast(DefaultAbstractTree.java:622)
at org.apache.wicket.extensions.markup.html.tree.DefaultAbstractTree.access$0(DefaultAbstractTree.java:620)
at org.apache.wicket.extensions.markup.html.tree.DefaultAbstractTree$1.onComponentTagBody(DefaultAbstractTree.java:310)
at org.apache.wicket.Component.renderComponent(Component.java:2686)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1538)
at org.apache.wicket.Component.render(Component.java:2517)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1440)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1603)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1527)
at org.apache.wicket.Component.renderComponent(Component.java:2686)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1538)
at org.apache.wicket.markup.html.tree.AbstractTree$TreeItem.onRender(AbstractTree.java:215)
at org.apache.wicket.Component.render(Component.java:2517)
at org.apache.wicket.Component.renderComponent(Component.java:2627)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:853)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:682)
at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:592)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:317)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
at java.lang.Thread.run(Thread.java:613)

Complete stack:

org.apache.wicket.WicketRuntimeException: Exception in rendering component: [MarkupContainer [Component id = indent]]
at org.apache.wicket.Component.renderComponent(Component.java:2725)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1538)
at org.apache.wicket.Component.render(Component.java:2517)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1440)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1603)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1527)
at org.apache.wicket.Component.renderComponent(Component.java:2686)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1538)
at org.apache.wicket.markup.html.tree.AbstractTree$TreeItem.onRender(AbstractTree.java:215)
at org.apache.wicket.Component.render(Component.java:2517)
at org.apache.wicket.Component.renderComponent(Component.java:2627)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:853)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:682)
at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:592)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
","Mac OS X 10.4.11, Firefox 3.6.10",,,,,,,,,,,,,,,,,,,,,18/Sep/10 19:14;mikehefner;WICKET-3057-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12454951/WICKET-3057-Quickstart.zip,18/Sep/10 19:14;mikehefner;WICKET-3057-fix.patch;https://issues.apache.org/jira/secure/attachment/12454952/WICKET-3057-fix.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-09-19 15:46:13.618,,,no_permission,,,,,,,,,,,203891,,,Sun Sep 19 16:41:52 UTC 2010,,,,,,0|i0kbxj:,116750,,,,,,,,18/Sep/10 19:14;mikehefner;attached Quickstart and patch,"19/Sep/10 15:46;mgrigorov;The patch is applied with slight improvements.
Thanks!","19/Sep/10 16:34;hudson;Integrated in Apache Wicket 1.4.x #167 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/167/])
    WICKET-3057 NPE when deleting a TreeNode with visible children
","19/Sep/10 16:41;hudson;Integrated in Apache Wicket 1.5.x #338 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/338/])
    WICKET-3057 NPE when deleting a TreeNode with visible children
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redirect page in Ajax callback broken.,WICKET-3048,12474172,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,monzonj,monzonj,15/Sep/10 11:46,19/Sep/10 15:20,13/Mar/19 23:17,17/Sep/10 07:54,1.5-M1,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,,,,,,,,0,,,,,,,"Hi.

In Wicket 1.4.x is possible to redirect to a new page during an AJAX request by using Component.setResponsePage(Class).

For instance:

        form.add(new AjaxButton(""myButton"", form) {
            @Override
            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {
                 setResponsePage(MockPage.class); //Redirect to another page
            }

            @Override
            protected void onError(final AjaxRequestTarget target, final Form<?> form) {
                throw new RuntimeException(""Uh oh!"");
            }
        });


However, this seems to be broken in Wicket 1.5.x. The ajax response contains the body of the page to redirect, but Wicket fails to really redirect and instead it prints ERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-15 12:06:30.2,,,no_permission,,,,,,,,,,,203882,,,Sun Sep 19 15:20:08 UTC 2010,,,,,,0|i0aokn:,60254,,,,,,,,15/Sep/10 12:06;mgrigorov;For reference see https://issues.apache.org/jira/browse/WICKET-2691 and https://issues.apache.org/jira/browse/WICKET-2667.,15/Sep/10 22:40;pete;should be fixed now. Please verify.,"16/Sep/10 07:15;mgrigorov;I don't see the commit for wicket-ajax.js. So I guess it is not fixed yet.
There is a quickstart application in the second reference ticket in my previous comment.","16/Sep/10 08:24;pete;The response header ""Ajax-Location"" is already handled in wicket-ajax.js. But you are right, the <ajax-response><redirect> is not handled so far.","16/Sep/10 11:36;hudson;Integrated in Apache Wicket 1.5.x #331 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/331/])
    ",17/Sep/10 07:54;pete;fixed wicket-ajax.js,"18/Sep/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #334 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/334/])
    WICKET-3048 Format the code

No functional change.
WICKET-3048: added missing javascript part
","19/Sep/10 15:20;hudson;Integrated in Apache Wicket 1.5.x #337 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/337/])
    WICKET-3048 Make the constants 'private' again. They are not needed for now from the classes which inherit them
WICKET-3048 Redirect page in Ajax callback broken.

Pass a reference to the WebRequest when creating WebResponse.
1) wicket-examples > Dates were failing with ""o.m.jetty.Request: STREAMING"" while ServletWebRequest was trying to read the POST parameters via Request's _Reader_
2) Now ServletWebResponse can use the passed WebRequest to check whether this is Ajax request. No code duplication (#isAjax())
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
if-modified-since checking is not working in AbstractResource,WICKET-2996,12471829,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,17/Aug/10 18:15,17/Sep/10 14:49,13/Mar/19 23:17,17/Aug/10 18:37,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"In AbstractResource the if-modified-since header is not working correctly

the servlet container seems not to deliver if-modified-since in milliseond precision

so a if-modified-since timestamp like 1281787899123 will be cut off to 1281787899000.

there was already a counter-measure in wicket-1.4 which seems to be missing in 1.5.

wicket-1.4:

WicketFilter, v 1.4.10, line 330ff:

				if (ifModifiedSince < (lastModified / 1000 * 1000))   
					{
						// If the servlet mod time is later, call doGet()
						// Round down to the nearest second for a proper compare
						// A ifModifiedSince of -1 will always be less
						maybeSetLastModified(httpServletResponse, lastModified);
						doGet(httpServletRequest, httpServletResponse);
					}
	

This kind of rounding ( / 1000 * 1000) is missing in 1.5 so the if-modified-since check eventually fails. 

Patch is included.
",,,,,,,,,,,,,,,,,,,,,,17/Aug/10 18:15;pete;fix-if-modified-since.patch;https://issues.apache.org/jira/secure/attachment/12452298/fix-if-modified-since.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-18 21:25:25.818,,,no_permission,,,,,,,,,,,203833,,,Wed Aug 18 21:25:25 UTC 2010,,,,,,0|i0kc27:,116771,,,,,,,,"18/Aug/10 21:25;hudson;Integrated in Apache Wicket 1.5.x #247 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/247/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Modal window titles need to be marked up as such, for accessibility",WICKET-2932,12468508,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,steve.swinsburg,steve.swinsburg,04/Jul/10 06:10,17/Sep/10 14:49,13/Mar/19 23:17,25/Aug/10 03:57,1.3.1,1.3.2,1.3.3,1.3.4,1.3.5,1.3.6,1.3.7,1.4.0,1.4.1,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4.7,1.4.8,1.4.9,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,1.4-RC2,1.4-RC3,1.4-RC4,1.4-RC5,1.4-RC6,1.4-RC7,,,,,,,,,,1.5-M2.1,,,wicket-extensions,,,,,,,0,,,,,,,The modal windows are not accessible to screen readers. The titles of the window should be announced to give the contents of the window some context. This is as simple as changing the 'span' that contains the window title to a 'h3' and ensuring the styles are appropriate to match.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-25 05:14:53.095,,,no_permission,,,,,,,,,,,203772,,,Wed Aug 25 05:14:53 UTC 2010,,,,,,0|i0kc73:,116793,,,,,,,,"25/Aug/10 05:14;hudson;Integrated in Apache Wicket 1.5.x #265 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/265/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form#getMaxSize - unsupported in the inner forms,WICKET-2931,12468437,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,linuxroot,linuxroot,02/Jul/10 14:05,17/Sep/10 14:49,13/Mar/19 23:17,25/Aug/10 05:34,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"Form#getMaxSize() ignores the fact that the form can be inner.

If you have inner form, and this form has multipart and maxsize. Only the multipart flag is accepted. The maxSize will be determined by the parent form ~ null value.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-05 19:04:35.777,,,no_permission,,,,,,,,,,,203771,,,Wed Aug 25 06:16:39 UTC 2010,,,,,,0|i0kc7b:,116794,,,,,,,,05/Jul/10 19:04;martin-g;Please provide a quickstart application.,"25/Aug/10 06:16;hudson;Integrated in Apache Wicket 1.5.x #266 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/266/])
    form#getmaxsize() support for nested forms
Issue: WICKET-2931
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Return the possibility to create custom WebRequest/WebResponse per Application,WICKET-3038,12473619,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,08/Sep/10 20:08,17/Sep/10 14:49,13/Mar/19 23:17,09/Sep/10 19:40,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"In Wicket 1.4 there is org.apache.wicket.protocol.http.WebApplication.newWebRequest(HttpServletRequest) and org.apache.wicket.protocol.http.WebApplication.newWebResponse(HttpServletResponse). These are removed in current 1.5 code and there is no way to use org.apache.wicket.extensions.ajax.markup.html.form.upload.UploadWebRequest for example.

See wicket-examples > upload.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-10 23:20:40.951,,,no_permission,,,,,,,,,,,203872,,,Fri Sep 10 23:20:40 UTC 2010,,,,,,0|i0kbyn:,116755,,,,,,,,09/Sep/10 19:40;mgrigorov;The methods are returned back in 1.5 with r995546 and r995555,"10/Sep/10 23:20;hudson;Integrated in Apache Wicket 1.5.x #322 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/322/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.request.Url.QueryParameter is not Serializable,WICKET-3013,12472541,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,hok,hok,25/Aug/10 22:46,17/Sep/10 14:49,13/Mar/19 23:17,27/Aug/10 07:14,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,1,,,,,,,"An exception is thrown when wicket attempts to serialize org.apache.wicket.request.Url, because QueryParameter class does not implement Serializable. 
I have tried replacing Url.class file in my environment's wicket-request-1.5-M1.jar with custom built Url with Serializable QueryParameter class and the problem disappears. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203849,,,2010-08-25 22:46:13.0,,,,,,0|i0kc0v:,116765,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Success handler not called when redirecting with Ajax,WICKET-2958,12469926,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lletourn,lletourn,22/Jul/10 15:24,17/Sep/10 14:49,13/Mar/19 23:17,27/Aug/10 06:48,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"We put an ajax indicator on our page. This adds the wicket.show('indicator') method before the call to wicketAjaxGet.
To the wicketAjaxGet a success and failure handler are attached that call the wicket.hide methods.

We have a button that redirects to a file, so the page doesn't change. The browser just pops up a file download dialog. The thing is that the ajax indicator isn't removed.

There are no calls to successHandler or failureHandler for redirects only for loadedCalls.

I attached a patch that adds a call to the successHandler after the this.done() when a redirect is asked for. In most of the cases the successHandler is an empty function.",,,,,,,,,,,,,WICKET-1987,,,,,,,,,22/Jul/10 15:25;lletourn;wicket-ajax.patch;https://issues.apache.org/jira/secure/attachment/12450180/wicket-ajax.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-28 18:27:40.814,,,no_permission,,,,,,,,,,,203797,,,Sat Aug 28 18:27:40 UTC 2010,,,,,,0|i0kc53:,116784,,,,,,,,22/Jul/10 15:25;lletourn;The patch to the issue,22/Jul/10 15:25;lletourn;They are similar problems.,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax responses do not update DOM correctly on Opera,WICKET-2851,12463161,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,petras,petras,27/Apr/10 23:20,17/Sep/10 14:49,13/Mar/19 23:17,27/Aug/10 03:59,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,ajax,dom,opera,,,,"Having following example:

========= HTML ==========
<table>
	<tr><td><button wicket:id=""btnShowHide"">Show/Hide</button></td></tr>
	<tr wicket:id=""hidingContainer""><td>something goes here...</td></tr>
</table>

========= PAGE ==========
final Component hidingContainer;
this.add(hidingContainer = new WebMarkupContainer(""hidingContainer"").setOutputMarkupId(
		true).setOutputMarkupPlaceholderTag(true).setVisible(true));
				
this.add(new AjaxFallbackLink<Void>(""btnShowHide""){

	@Override
	public void onClick(AjaxRequestTarget target) {
		hidingContainer.setVisible(!hidingContainer.isVisible());
		target.addComponent(hidingContainer);
	}
});


On Opera browser it works well only once. Afterwards it is not possible to show/hide hidingContainer.

Ajax response doesn't update hidingContainer's DOM properly. Response is correct, however after replacing existing html code with an incomming html the TR tag looses its ID attribute. Hence the following Ajax response fails to update the TR tag and throws error:
ERROR: Wicket.Ajax.Call.processComponent: Component with id [[hidingContainer4]] a was not found while trying to perform markup update. 

This problem occurs only when hidingContainer is in a TR tag. If replaced with <p>, everything works like a charm.

It must be a bug in the Opera browser but maybe there is any workaround that may get it work.","This issue affects just Opera, my tested version is 10.52.

Other browsers I tested but are not affected by the issue: Firefox 3.6.3, IE 8.0, Chrome 4.1.249.1059.
Application was deployed on Apache Tomcat 5.5.28 and Jetty 6.1.6.
Everything runs on MS Win 7 Ultimate x64.",,,,,,,,,,,,,,,,,,,,,27/Apr/10 23:24;petras;test.zip;https://issues.apache.org/jira/secure/attachment/12443019/test.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-28 18:27:43.45,,,no_permission,,,,,,,,,,,203697,,,Sat Aug 28 18:27:43 UTC 2010,,,,,,0|i0kce7:,116825,,,,,,,,27/Apr/10 23:25;petras;I've found an issue that also describes similar problems with Opera browser. See WICKET-2246,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to launch StartExamples from IDEA (eventually other IDE's as well),WICKET-3014,12472607,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,26/Aug/10 15:01,17/Sep/10 14:49,13/Mar/19 23:17,26/Aug/10 19:48,1.4.10,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-examples,,,,,,,0,,,,,,,"When trying to run

  org.apache.wicket.examples.StartExamples

as a Java application trough my IDE (using IntelliJ IDEA) the class loader complains that it can't find the jetty JARs.

Exception in thread ""main"" java.lang.NoClassDefFoundError: org/mortbay/jetty/HandlerContainer
Caused by: java.lang.ClassNotFoundException: org.mortbay.jetty.HandlerContainer
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)

These JARs are using maven scope 'provided' which means the container has to provide the JARs. As you might expect IDEA has no jetty JARs in the classpath when running a class. An easy fix is to move StartExamples from src/main/java to src/test/java so the dependencies are found.

Patch for 1.4 and 1.5 will follow.
","OS X, java 6, IDEA",,,,,,,,,,,,,,,,,,,,,26/Aug/10 15:03;pete;wicket-1_4.patch;https://issues.apache.org/jira/secure/attachment/12453129/wicket-1_4.patch,26/Aug/10 15:03;pete;wicket-1_5.patch;https://issues.apache.org/jira/secure/attachment/12453130/wicket-1_5.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-26 20:15:54.667,,,no_permission,,,,,,,,,,,203850,,,Fri Aug 27 00:19:13 UTC 2010,,,,,,0|i0kc0n:,116764,,,,,,,,"26/Aug/10 20:15;hudson;Integrated in Apache Wicket 1.4.x #124 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/124/])
    WICKET-3014
","27/Aug/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #269 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/269/])
    WICKET-3014
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CheckGroupSelector ignores disabled-state in Check,WICKET-3018,12472695,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,robau,robau,27/Aug/10 14:17,17/Sep/10 14:49,13/Mar/19 23:17,27/Aug/10 23:43,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"I have a list with Checks, in a CheckGroup. Some of the Checks are disabled (gray in html). I also have a CheckGroupSelector. When clicking the CheckGroupSelector, the disabled Checks are also modified. I expect them to be left alone. 

The javascript in the CheckGroupSelector is IMHO incorrect:

it contains:

		for(var i=0;i<cb.length;i++) 
		{ 
			cb[i].checked=this.checked; 
		} 

and should be:

		for(var i=0;i<cb.length;i++) 
		{ 
			if (!cb[i].disabled)
			{
				cb[i].checked=this.checked; 
			}
		} 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-28 18:27:41.763,,,no_permission,,,,,,,,,,,203854,,,Sat Aug 28 18:27:41 UTC 2010,,,,,,0|i0kc0f:,116763,,,,,,,,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when requesting for non-page class ,WICKET-2993,12471646,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,15/Aug/10 18:02,17/Sep/10 14:49,13/Mar/19 23:17,15/Aug/10 18:15,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.request.mapper.BookmarkableMapper tries to instantiate Page even for classes which are not Page.
Requesting http://localhost:8080/wicket/bookmarkable/com.mycompany.Pojo fails with:

ERROR - DefaultExceptionMapper     - Unexpected error occurred
java.lang.ClassCastException: com.mycompany.Pojo
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:155)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:59)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:43)
	at org.apache.wicket.Application$2.newPageInstance(Application.java:1425)
	at org.apache.wicket.request.handler.PageProvider.getPageInstance(PageProvider.java:259)
	at org.apache.wicket.request.handler.PageProvider.getPageInstance(PageProvider.java:160)
	at org.apache.wicket.request.handler.render.WebPageRenderer.getPage(WebPageRenderer.java:59)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:131)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:232)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:147)
	at org.apache.wicket.request.RequestHandlerStack.executeRequestHandler(RequestHandlerStack.java:84)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:217)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:135)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:188)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157) 
        .....",Any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-15 19:08:30.744,,,no_permission,,,,,,,,,,,203830,,,Tue Aug 17 00:14:25 UTC 2010,,,,,,0|i0kc2v:,116774,,,,,,,,15/Aug/10 18:15;mgrigorov;Fixed with r985727.,"15/Aug/10 19:08;hudson;Integrated in Apache Wicket 1.5.x #239 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/239/])
    WICKET-2993 ClassCastException when requesting for non-page class

Create a request handler only if the resolved class is assignable to Page.class
","17/Aug/10 00:14;hudson;Integrated in Apache Wicket 1.5.x #245 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/245/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DatePicker fail with ""firstDate is undefined"" when an out of range date is written in the textfield",WICKET-2941,12469047,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mimah35,mimah35,12/Jul/10 09:31,17/Sep/10 14:48,13/Mar/19 23:17,31/Aug/10 05:52,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-datetime,,,,,,,1,,,,,,,"When a DatePicker is configured with a range (mindate and maxdate) and the user enter a date out of the range in the textfield and click on the datepicker icon there is an javascript error and the calendar don't pop up.

There is a ""firstDate is undefined"" in this javascript method (line with widget.cfg.setProperty)
Wicket.DateTime.showCalendar = function(widget, date, datePattern) {
  if (date) {
    date = Wicket.DateTime.parseDate(datePattern, date);
    if (!isNaN(date)) {
      widget.select(date);
      firstDate = widget.getSelectedDates()[0];
      widget.cfg.setProperty(""pagedate"", (firstDate.getMonth() + 1) + ""/"" + firstDate.getFullYear());
      widget.render();
    }
  }
  widget.show();
} 

To fix the issue you can test the firstDate value after getSelectedDates call. YUI Calendar return undefined value when the selected date is out of the range.",,,,,,,,,,,,,,,,,,,,,,12/Jul/10 09:58;mimah35;patch.txt;https://issues.apache.org/jira/secure/attachment/12449229/patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-31 06:13:21.254,,,no_permission,,,,,,,,,,,203780,,,Tue Aug 31 07:12:23 UTC 2010,,,,,,0|i0kc6n:,116791,,,,,,,,12/Jul/10 09:58;mimah35;Proposed patch,"31/Aug/10 06:13;hudson;Integrated in Apache Wicket 1.4.x #135 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/135/])
    WICKET-2941
","31/Aug/10 07:12;hudson;Integrated in Apache Wicket 1.5.x #280 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/280/])
    WICKET-2941
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add IRequestMapper that can mount all pages in a package,WICKET-2989,12471636,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,15/Aug/10 09:24,17/Sep/10 14:48,13/Mar/19 23:17,16/Aug/10 19:09,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"In Wicket 1.4 it is possible to mount all pages in a package via org.apache.wicket.protocol.http.WebApplication.mount(String, PackageName).
Currently there is no replacement for this functionality in Wicket 1.5",Any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-15 18:11:31.415,,,no_permission,,,,,,,,,,,203827,,,Tue Aug 17 00:14:25 UTC 2010,,,,,,0|i0kc3b:,116776,,,,,,,,"15/Aug/10 18:06;mgrigorov;It appears that this is actually supported out of the box thru org.apache.wicket.request.mapper.BookmarkableMapper which is added by default.
This mapper creates something like REST API for all classes in the application.
I.e. if there is a Page class com.example.MyPage then it is reachable at http://localhost:8080/wicket/bookmarkable/com.example.MyPage.
It has a bug currently that it tries to create a page even for classes which do not extend Page - WICKET-2993.",15/Aug/10 18:11;aldaris;Can this tweaked somehow to use Class#simpleName instead of FQDN? (like the old one),"15/Aug/10 18:32;mgrigorov;It looks to be easy to do.
Take a look at org.apache.wicket.request.mapper.BookmarkableMapper.parseRequest(Request).
You need to replace the usage of 'getContext().getBookmarkableIdentifier()' with 'mountPath' and the FQN with the simple name. Do the same in #buildUrl() and you are done.
Give it a try and attach it to the ticket.",15/Aug/10 18:33;mgrigorov;Re-open the ticket to add a mapper that behaves exactly as in 1.4,16/Aug/10 19:09;mgrigorov;Implemented with r986100.,"17/Aug/10 00:14;hudson;Integrated in Apache Wicket 1.5.x #245 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/245/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with date headers on error pages,WICKET-3031,12473321,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pete,ivaynberg,ivaynberg,04/Sep/10 21:02,17/Sep/10 14:48,13/Mar/19 23:17,05/Sep/10 19:38,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,,,,,,,,0,,,,,,,"when an error page is displayed the error below occurs. use quickstart in WICKET-3030 or any other way to cause an error to reproduce


ERROR - RequestCycle               - Error during processing error message
java.lang.IllegalStateException: Header was already written to response!
	at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.checkHeader(HeaderBufferingWebResponse.java:62)
	at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.setDateHeader(HeaderBufferingWebResponse.java:131)
	at org.apache.wicket.protocol.http.BufferedWebResponse$SetDateHeaderAction.invoke(BufferedWebResponse.java:193)
	at org.apache.wicket.protocol.http.BufferedWebResponse.writeTo(BufferedWebResponse.java:439)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:203)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:147)
	at org.apache.wicket.request.RequestHandlerStack.executeRequestHandler(RequestHandlerStack.java:84)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:276)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:285)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:232)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:258)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:135)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:188)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:295)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:841)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:639)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-05 19:38:00.45,,,no_permission,,,,,,,,,,,203866,,,Sun Sep 05 20:12:01 UTC 2010,,,,,,0|i0aol3:,60256,,,,,,,,"05/Sep/10 19:38;pete;@Igor: When the form of the sample you mentioned is submitted and the submit listener is invoked a render page action is scheduled for execution after current. While processing the form submit an exception is caught and the exception handler is mapped. The error page handler is getting processed. Since exception handlers do not redirect anymore by default (to keep the current url visible) the error page is rendered directly under the same url. After the error page was rendered and sent to the client the previous page handler is still queued for rendering. Once rendering starts again you get:

  java.lang.IllegalStateException: Header was already written to response! 

Fix: Before executing the error page, clear any scheduled request handlers. There is no reason to render anything after(!) an error page.

See class RequestCycle, line 274 (commit #992874) for change

","05/Sep/10 20:12;hudson;Integrated in Apache Wicket 1.5.x #299 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/299/])
    WICKET-3031
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
continueToOriginalDestination does not work with mountBookmarkablePage and AjaxLink,WICKET-2911,12466565,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ckuehne,ckuehne,09/Jun/10 13:52,17/Sep/10 14:48,13/Mar/19 23:17,27/Aug/10 07:12,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,continueToOriginalDestination,mountBookmarkablePage,wicket,,,,"I ran into the problem when I used @AuthorizeInstantiation annotations to protect ajax components from unauthorized instantiation. I reproduced without the use of a authorization strategy as follows: 

in HomePage

add(new AjaxLink<Void>(""ajaxLink"") {
			@Override
			public void onClick(AjaxRequestTarget target) {
				throw new RestartResponseAtInterceptPageException(RedirectPage.class);
			}
		});

In RedirectPage.class

public void onSubmit() {
				super.onSubmit();
				continueToOriginalDestination();
			}

If I first click the link in HomePage and then in submit the form in the RedirectPage I get

ERROR - WicketFilter               - closing the buffer error
java.lang.NullPointerException
	at org.mortbay.jetty.Response.sendRedirect(Response.java:397)...

(When I use it with mvn jetty:run I get a ""No context on this server matched or handled this request."" after the submit)

This happens only when I use a AjaxLink and mount the HomePage (mountBookmarkablePage(""/mounted/path"", HomePage.class);)

With a non-ajax link or unmounted pages it works fine.

I will attach a Quickstart.zip. Run in Eclipse to see the ""ERROR - WicketFilter               - closing the buffer error""
 


","Java 1.5, Jetty 6.1.4",,,,,,,,,,,,,,,,,,,,,09/Jun/10 13:54;ckuehne;redirectproblem.zip;https://issues.apache.org/jira/secure/attachment/12446691/redirectproblem.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-27 07:12:27.072,,,no_permission,,,,,,,,,,,203754,,,Fri Aug 27 07:12:27 UTC 2010,,,,,,0|i0kc7z:,116797,,,,,,,,"09/Jun/10 13:54;ckuehne;Run in eclipse to see ""ERROR - WicketFilter               - closing the buffer error
java.lang.NullPointerException
	at org.mortbay.jetty.Response.sendRedirect(Response.java:397""","27/Aug/10 07:12;ivaynberg;this is fixed in 1.5, but even so, intercept urls are not really supported during ajax requests. the best we can do during an ajax request is to redirect back to the page that caused the intercept redirect in the first place. unlike during a normal request, we cannot invoke the component action  because we have no ajax pipeline on the clientside that can properly handle the response.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester.submit does not work with AjaxButtons,WICKET-2783,12459044,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,e90tony,e90tony,14/Mar/10 01:01,17/Sep/10 14:48,13/Mar/19 23:17,28/Aug/10 00:27,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"FormTester.submit on an AjaxButton (AjaxFallbackButton) does not cause the button's onSubmit function to run, nor the form's process function to run.",,,,,,,,,,,,,,,,,,,,,,14/Mar/10 09:56;martin-g;wicket-2783.tgz;https://issues.apache.org/jira/secure/attachment/12438745/wicket-2783.tgz,15/Mar/10 22:14;e90tony;wicket-ajax-submit-bug.zip;https://issues.apache.org/jira/secure/attachment/12438867/wicket-ajax-submit-bug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-03-14 09:56:52.618,,,no_permission,,,,,,,,,,,203636,,,Sat Aug 28 18:27:40 UTC 2010,,,,,,0|i0kcjb:,116848,,,,,,,,"14/Mar/10 09:56;martin-g;See attached project. It seems to work ok.

If the attached project misses something then please provide one that fails.","15/Mar/10 22:14;e90tony;It seems the workaround per the attachment is to use executeAjaxEvent with onClick instead of FormTester.submit(). Although, another issue comes up this way:

If I override the Form's process function to disable components (say to disable some component's validators based on what the submitting button is), those components are still enabled and unfortunately validators still run for them. I've attached a quickstart which shows this issue.

The AjaxFallbackButton's onSubmit println ""Submitted - successful!"" only shows up when running through a normal browser. Through WicketTester, the onSubmit never runs since the form's process throws errors on the RequiredTextField - even if in that form process, RequiredTextField is explicitly disabled.","15/Mar/10 22:30;e90tony;Also want to add that moving the TextField disable (this.textField.setEnabled(false)) outside of the MyForm process function and into the constructor makes the unit test work. So somehow, dynamically setting the TextField.setEnabled(false) inside process doesn't work in WicketTester for ajax onclick submits, but works fine in the browser and normal unit test submits (non-ajax).","28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxRequestTarget.get returns null within AjaxLink#onClick,WICKET-3001,12471916,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,daniel.soneira,daniel.soneira,18/Aug/10 16:22,17/Sep/10 14:48,13/Mar/19 23:17,20/Aug/10 23:11,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"Code:
--------------------------
...
new AjaxLink<Void>(""link"") {
    @Override
    public void onClick(AjaxRequestTarget target) {
        feedback(""link clicked"");
    }
}

public void feedback(String message) {
     info(message);
     AjaxRequestTarget target = AjaxRequestTarget.get();
     if (target != null) {
         target.addComponent(get(""feedback""));
     }
}
...
-------------------------- 

In previous versions of Wicket this code worked.
Now target is null and therefore the feedback panel is not re-rendered.
Debugging AjaxRequestTarget.get shows that the active request handler is a ListenerInterfaceRequestHandler with an AjaxRequestTarget as next ""scheduled"" handler. 
",,,,,,,,,,,,,,,,,,,,,,18/Aug/10 18:48;pete;lookup-art.patch;https://issues.apache.org/jira/secure/attachment/12452431/lookup-art.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-18 18:48:15.297,,,no_permission,,,,,,,,,,,203837,,,Sat Aug 21 00:12:42 UTC 2010,,,,,,0|i0kc1r:,116769,,,,,,,,"18/Aug/10 18:48;pete;wicket looks up the current request handler on the stack with

			if (requestCycle.getActiveRequestHandler() instanceof AjaxRequestTarget)

but the current request handler during onClick is still ListenerInterfaceRequestHandler.

The AjaxRequestTarget that we want instead is scheduled for execution on the request handler stack.

So I guess we just have to include a test if the scheduled handler is AjaxRequestTarget and return it.

suggested patch included, please check first (I am still not that deep into request handling in 1.5.x) !!!!","21/Aug/10 00:12;hudson;Integrated in Apache Wicket 1.5.x #252 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/252/])
    AjaxRequestTarget.get returns null within AjaxLink#onClick
Issue: WICKET-3001
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockHttpServletResponse does not save Session cookies (maxAge = -1),WICKET-2863,12464072,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pojo,pojo,09/May/10 03:32,17/Sep/10 14:48,13/Mar/19 23:17,31/Aug/10 06:25,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"The WicketTester does not save cookies that have an age of -1 (the default if you do not set a maxAge). These cookies should be treated as session cookies and should be deleted when the browser exits (or in this case, when the WicketTester browsing session is thrown away). This used to work in 1.4.1, but fails to work in 1.4.8. I believe that the fix introduced by WICKET-2630 causes this behavior.

The description in WICKET-2630 only quotes part of the javadoc for Cookies. The actual javadoc (http://java.sun.com/javaee/6/docs/api/javax/servlet/http/Cookie.html#setMaxAge%28int%29) reads:

A positive value indicates that the cookie will expire after that many seconds have passed. Note that the value is the maximum age when the cookie will expire, not the cookie's current age.

A negative value means that the cookie is not stored persistently and will be deleted when the Web browser exits. A zero value causes the cookie to be deleted. ",,,,,,,,,,,,,,,WICKET-2630,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-31 06:25:08.823,,,no_permission,,,,,,,,,,,203709,,,Tue Aug 31 06:25:08 UTC 2010,,,,,,0|i0kcc7:,116816,,,,,,,,"31/Aug/10 06:25;ivaynberg;looks like this was already resolved by Juergen

*948918	5/27/10 10:32 AM	3	jdonnerstag	fixed WICKET-2863 MockHttpServletResponse does not save Session cookies (maxAge = -1) Issue: WICKET-2863
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Application addRenderHeadListener causing error ,WICKET-2944,12469265,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,vineetsemwal,vineetsemwal,14/Jul/10 16:06,17/Sep/10 14:48,13/Mar/19 23:17,11/Aug/10 18:57,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"
when i try to use addrenderheaderlistener in application  with header contributor using methods other than renderonloadjavascript and
 renderOnDomReadyJavascript,i get the  exception as ajaxrequesttarget expects 

 ""Only methods that can be called on IHeaderResponse outside renderHead() are renderOnLoadJavascript and renderOnDomReadyJavascript

attaching a quickstart that shows the behavior where ajaxselfupdatingtimer is  used. 

exception as follows :-

Only methods that can be called on IHeaderResponse outside renderHead() are renderOnLoadJavascript and renderOnDomReadyJavascript
org.apache.wicket.WicketRuntimeException: Only methods that can be called on IHeaderResponse outside renderHead() are renderOnLoadJavascript and renderOnDomReadyJavascript
	at org.apache.wicket.ajax.AjaxRequestTarget$AjaxHeaderResponse.checkHeaderRendering(AjaxRequestTarget.java:872)
	at org.apache.wicket.ajax.AjaxRequestTarget$AjaxHeaderResponse.renderJavascriptReference(AjaxRequestTarget.java:915)
	at com.mycompany.WicketApplication$1.renderHead(WicketApplication.java:28)
	at org.apache.wicket.Application.notifyRenderHeadListener(Application.java:1250)
	at org.apache.wicket.markup.html.internal.HeaderResponse.<init>(HeaderResponse.java:56)
	at org.apache.wicket.ajax.AjaxRequestTarget$AjaxHeaderResponse.<init>(AjaxRequestTarget.java:951)
	at org.apache.wicket.ajax.AjaxRequestTarget.getHeaderResponse(AjaxRequestTarget.java:1018)
	at org.apache.wicket.ajax.AbstractAjaxTimerBehavior.respond(AbstractAjaxTimerBehavior.java:163)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:286)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:479)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:312)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:923)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:547)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
",wicket 1.4.9 jetty 6.1.4,,,,,,,,,,,,,,,,,,,,,14/Jul/10 16:07;vineetsemwal;quickie.jar;https://issues.apache.org/jira/secure/attachment/12449465/quickie.jar,08/Aug/10 16:20;mgrigorov;wicket-2944.patch;https://issues.apache.org/jira/secure/attachment/12451521/wicket-2944.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-08 14:13:56.381,,,no_permission,,,,,,,,,,,203783,,,Wed Aug 11 20:14:15 UTC 2010,,,,,,0|i0kc6f:,116790,,,,,,,,14/Jul/10 16:09;vineetsemwal;btw i really don't know if it's a bug or not ;),14/Jul/10 16:12;vineetsemwal;the issue is also discussed in http://apache-wicket.1842946.n4.nabble.com/Application-addRenderHeadListener-causing-error-tp1853690p2281057.html,"08/Aug/10 14:13;mgrigorov;As the exception message says currently AjaxRequestTarget$AjaxHeaderResponse.renderJavascriptReference() and few other methods throw exception if they are not called within org.apache.wicket.ajax.AjaxRequestTarget.respondHeaderContribution(Response, Component).

I see two solutions:
# instead of throwing an exception just log a debug message that this call is no-op for AjaxRequestTarget$AjaxHeaderResponse when called for application listeners
Pros:
* no such ""strange"" exceptions during Ajax calls
Cons:
* none
# support these methods to be called for application listeners
Pros:
* no exceptions
Cons:
* there is no need to support them. These methods already have been called for the page (non-ajax) request and there is no need to make <header-contribution> for them which will be discarded.

I'm going to implement solution 1 if there are no better ideas.","08/Aug/10 16:20;mgrigorov;Patch for option 1 above.
Please review it.",11/Aug/10 18:57;mgrigorov;Fixed with r984528 in 1.4.x and r984532 in trunk.,"11/Aug/10 19:11;hudson;Integrated in Apache Wicket 1.5.x #218 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/218/])
    WICKET-2944 Application addRenderHeadListener causing error

Do not throw exception for HeaderResponse listeners during Ajax request processing.
Log a debug message and ignore the call.

merge r984528 from 1.4.x
","11/Aug/10 20:14;hudson;Integrated in Apache Wicket 1.4.x #86 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/86/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpsRequestChecker inadvertently instantiates page when checking for annotation,WICKET-3024,12472775,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,28/Aug/10 12:56,17/Sep/10 14:48,13/Mar/19 23:17,31/Aug/10 15:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,,,,,,,,0,,,,,,,"when checking for https the page class unnecessarily instantiated which will cause premature execution of the page constructor. In my case I threw a redirect which was not handled properly. So this issue not only a matter on efficiency but also erroneous.

patch follows in a sec.",,,,,,,,,,,,,,,,,,,,,,31/Aug/10 15:48;pete;https-test-case.patch;https://issues.apache.org/jira/secure/attachment/12453522/https-test-case.patch,28/Aug/10 12:57;pete;https.patch;https://issues.apache.org/jira/secure/attachment/12453351/https.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-31 00:50:15.878,,,no_permission,,,,,,,,,,,203860,,,Tue Aug 31 16:12:19 UTC 2010,,,,,,0|i0kbzr:,116760,,,,,,,,"31/Aug/10 00:50;hudson;Integrated in Apache Wicket 1.5.x #279 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/279/])
    ","31/Aug/10 15:48;pete;the test case was broken as it still relied on HttpsRequestChecker calling getPage() which is wrong.

Patch for fixing test case is attached.","31/Aug/10 16:12;hudson;Integrated in Apache Wicket 1.5.x #281 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/281/])
    fixed test
Issue: WICKET-3024
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket 1.5M1 tarball is incomplete,WICKET-2994,12471653,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rla,rla,15/Aug/10 21:11,17/Sep/10 14:48,13/Mar/19 23:17,24/Aug/10 07:22,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,,,,,,,,0,,,,,,,"I downloaded full distribution of 1.5M1 in tar.gz package but it's missing some wicket parts, including wicket-util and wicket-request.

I add output from command line to include details about my environment and why I think this is a bug:

My environment:

bash-3.1$ java -version
java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b06)
Java HotSpot(TM) Client VM (build 17.0-b16, mixed mode, sharing)

bash-3.1$ mvn -version
Apache Maven 2.2.1 (r801777; 2009-08-06 22:16:01+0300)
Java version: 1.6.0_21
Java home: /usr/lib/java/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"" version: ""2.6.34.1"" arch: ""i386"" Family: ""unix""

I'm building in the src directory:

bash-3.1$ pwd
/home/raivo/Downloads/apache-wicket-1.5-M1/src

Building with package command:

bash-3.1$ mvn package
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).
Project ID: unknown
Reason: Could not find the model file '/home/raivo/Downloads/apache-wicket-1.5-M1/src/wicket-util'. for project unknown

So there are missing at least wicket-util and wicket-request from src. Additionally, jars containing the compiled code of these are missing under lib directory.","Slackware Linux 13.0, Sun JDK 6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-25 01:10:06.774,,,no_permission,,,,,,,,,,,203831,,,Wed Aug 25 01:10:06 UTC 2010,,,,,,0|i0kc2n:,116773,,,,,,,,"25/Aug/10 01:10;hudson;Integrated in Apache Wicket 1.5.x #262 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/262/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stack Overflow in getBeanDefinition()'s of SpringBeanLocator and AnnotProxyFieldValueFactory,WICKET-3033,12473386,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mvgrootel,mvgrootel,06/Sep/10 13:56,17/Sep/10 14:48,13/Mar/19 23:17,07/Sep/10 00:58,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.12,1.5-M2.1,,wicket-spring,,,,,,,0,,,,,,,"The getBeanDefinition() in org.apache.wicket.spring.SpringBeanLocator and org.apache.wicket.spring.injection.annot.AnnotProxyFieldValueFactory will result in a Stack Overflow if a parent-context exists.

Offending code
{code}
private BeanDefinition getBeanDefinition(ConfigurableListableBeanFactory beanFactory,
			String name)
{
	[....]

	BeanFactory parent = beanFactory.getParentBeanFactory();
	if (parent != null && parent instanceof ConfigurableListableBeanFactory)
	{
		return getBeanDefinition(beanFactory, name);
	}

	[....]
}
{code}

As you can see it always calls the getBeanDefinition() with the same arguments resulting in a stack overflow. That specific return statement should call the getBeanDefinition of the parent and therefore should be:

{code}
	return getBeanDefinition((ConfigurableListableBeanFactory) parent, name);
{code}

I'll include a quick start to reproduce the error for the AnnotProxyFieldValueFactory and a patch to solve it for both.",,,,,,,,,,,,,,,,,,,,,,06/Sep/10 14:36;mvgrootel;WICKET3033_getBeanDefinition.patch;https://issues.apache.org/jira/secure/attachment/12453945/WICKET3033_getBeanDefinition.patch,06/Sep/10 13:59;mvgrootel;getBeanBug.tar.gz;https://issues.apache.org/jira/secure/attachment/12453944/getBeanBug.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-09-07 01:13:18.086,,,no_permission,,,,,,,,,,,203868,,,Tue Sep 07 03:25:14 UTC 2010,,,,,,0|i0kbyv:,116756,,,,,,,,06/Sep/10 13:59;mvgrootel;This is the quickstart to reproduce the bug.,06/Sep/10 14:36;mvgrootel;The patch that fixes this bug.,"07/Sep/10 01:13;hudson;Integrated in Apache Wicket 1.5.x #304 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/304/])
    WICKET-3033
","07/Sep/10 03:25;hudson;Integrated in Apache Wicket 1.4.x #148 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/148/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form.MULTIPART_HINT is not cleared correctly with nested forms,WICKET-2933,12468531,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alexgrant,alexgrant,05/Jul/10 03:25,17/Sep/10 14:48,13/Mar/19 23:17,25/Aug/10 04:29,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,4,,,,,,,"I have a page that looks like this
* Page
** Form
*** Wizard (contains another Form)
**** StepOne - contains a FileUploadField
**** StepTwo - has no FileUploadField

(The outer form is there because I have some controls outside the wizard that needed to submit the wizard too).

Because I have been using Ajax ModalDialogs, it has been important to get Form.multipart set correctly (otherwise they don't submit back correctly). So I override Wizard.onActiveStepChanged and checked to see if the new wizard step contained a FileUploadField, and set Form.setMultiPart accordingly. However, this only clears Form.MULTIPART_HARD, Form.MULTIPART_HINT is left untouched.

When I step from StepOne to StepTwo, the inner form still has MULTIPART_HINT set as it contained a FileUploadField last render. Then the outer form's onRender fires, which clears MULTIPART_HINT, then the outer form's onComponentTag fires. When it checks isMultiPart(), it evaluates to true as the nested Form still returns true from its MULTIPART_HINT, and therefore tag.put(""enctype"", ""multipart/form-data""); is executed. After that, the inner form's onRender fires which clears its MULTIPART_HINT.

When I try to submit StepTwo, the html has enctype=""multipart/form-data"", so it does a multipart submit. But wicket is not expecting a multipart submit so it doesn't find any of the submitted form data, and cannot determine which button is pressed, and loses all the form content.",,,,,,,,,,,,,,,,,,,,,,05/Jul/10 03:26;alexgrant;WICKET-2933-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12448663/WICKET-2933-quickstart.zip,08/Jul/10 20:52;alexgrant;WICKET-2933-with-Exception.zip;https://issues.apache.org/jira/secure/attachment/12449003/WICKET-2933-with-Exception.zip,08/Jul/10 04:46;alexgrant;WICKET-2933-with-Exception.zip;https://issues.apache.org/jira/secure/attachment/12448950/WICKET-2933-with-Exception.zip,06/Jul/10 07:41;martin-g;wicket-2933.tar.gz;https://issues.apache.org/jira/secure/attachment/12448748/wicket-2933.tar.gz,,,,,4.0,,,,,,,,,,,,,,,,,,,2010-07-05 18:56:04.559,,,no_permission,,,,,,,,,,,42102,,,Wed Aug 25 21:24:16 UTC 2010,,,,,,0|i0kc6v:,116792,,,,,,,,05/Jul/10 03:26;alexgrant;Attached quickstart - WICKET-2933-quickstart.zip,"05/Jul/10 03:29;alexgrant;I have workaround for this, but it is super-ugly. I overrode Wizard.onActiveStepChanged and used reflection to set Form.multiPart
","05/Jul/10 18:56;martin-g;If I understand correctly you want to submit either of the forms at any time and both of them have to know what is the current multiPart state.
If this is the case then the following patch in your app code should be enough:


--- src/main/java/bugs/HomePage.java	2010-07-05 20:46:02.126710839 +0200
+++ src/main/java/bugs/HomePage.java.new	2010-07-05 20:46:36.638708382 +0200
@@ -16,7 +16,7 @@
 public class HomePage extends WebPage {
 
     public HomePage() {
-        Form<?> form = new Form(""form"");
+        final Form<?> form = new Form(""form"");
         add(form);
 
         WizardModel wizardModel = new WizardModel();
@@ -35,7 +35,9 @@
 
             @Override
             public void onActiveStepChanged(IWizardStep newStep) {
-                getForm().setMultiPart(getChildOfType((WizardStep) newStep, FileUploadField.class) != null);
+               boolean isMulti = getChildOfType((WizardStep) newStep, FileUploadField.class) != null;
+               getForm().setMultiPart(isMulti);
+               form.setMultiPart(isMulti);
                 super.onActiveStepChanged(newStep);
             }
         };

i.e. update 'multiPart' for both forms.","05/Jul/10 20:43;alexgrant;Thanks for the suggestion. I just tried it, but it didn't work. The page still renders with enctype=""multipart/form-data"" even though both Forms have setMultiPart(false) as the inner form still has Form.multiPart = MULTIPART_HINT when the outer form renders onComponentTag.","06/Jul/10 07:41;martin-g;Can you try with wicket-2933.tar.gz ? This is with the modified HomePage.java.
In the page with StepOne wizard tab/panel I can see :
* <script type=""text/javascript"" id=""org.apache.wicket.markup.html.form.Form.form8.metadata""><!--/*--><![CDATA[/*><!--*/
Wicket.Forms[""form8""]={multipart:true};  // <- this is the inner form
/*-->]]>*/</script>

* <form wicket:id=""form"" id=""form9"" method=""post"" action=""?wicket:interface=:1:form::IFormSubmitListener::"" enctype=""multipart/form-data""> // <-this is the outer form

* <div wicket:id=""form"" class=""wicketExtensionsWizardForm"" id=""form8""> // <-this is the inner form

Going to StepTwo shows:
* no more <script> with Wicket.Forms
* outer form: <form wicket:id=""form"" id=""form2"" method=""post"" action=""?wicket:interface=:0:form::IFormSubmitListener::"">
* inner form is the same

Can you modify the application so that it fails when the condition is wrong? Currently I can browse it all without any failure. ","08/Jul/10 04:42;alexgrant;Sorry about the delay in responding.

I added the following code to HomePage.java, overriding the newForm method in Wizard

            @Override
            protected <E> Form<E> newForm(String id) {
                return new Form<E>(id) {
                    @Override
                    protected void onSubmit() {
                        // Note only the outer form knows its submitted button, the inner form has no idea.
                        if (form.findSubmittingButton() == null) {
                            throw new RuntimeException(""Form submitted, but no button detected."");
                        }
                    }
                };
            }

My StepTwo has this in the outer form (note the enctype attribute)

<form wicket:id=""form"" id=""form9"" method=""post"" action=""?wicket:interface=:2:form::IFormSubmitListener::"" enctype=""multipart/form-data"">

I got the 1.0-SNAPSHOT from the repository by adding http://wicketstuff.org/maven/repository to my pom.xml, so it I don't know if it's the exact same snapshot you're using.",08/Jul/10 04:46;alexgrant;WICKET-2933-with-Exception.zip is your .tar.gz file updated with the changes you requested (as described above).,"08/Jul/10 19:03;martin-g;Running the app here I can see enctype attribute _only_ in StepOne.

What is the relation between the multiPart problem and the check for submitting button ?

The nested form cannot find its submitting button because of this check in org.apache.wicket.markup.html.form.Form.findSubmittingButton():
if ((form != null) && (form.getRootForm() == Form.this)) 
i.e. only the root form can find its submitting button.
I don't know what is the reason for that check.","08/Jul/10 20:36;alexgrant;That is very odd.

When they multipart problem actually occurs, the HTML has enctype=""multipart/form-data"" and therefore the browser does a multipart submit. But the Wicket java code is expecting a standard non-multipart submit and therefore cannot find any of the form submit data, including the button parameter (wizard:form:buttons:next = Next >) and thus cannot determine which button was pressed.","08/Jul/10 20:37;alexgrant;It's not a browser issue - I have tested Chrome 5, Firefox 3.6 and IE 8 and they all exhibit the same behaviour.","08/Jul/10 20:52;alexgrant;The version of WICKET-2933-with-Exception.zip I attached previously included my copy of the target folder, which meant just doing mvn jetty:run was actually running the wrong code. Instead of throwing an Exception it was just printing to the console. Here's a clean version.","08/Jul/10 20:58;alexgrant;I got a colleague at work to try it and he got the same problem I did.
If it matters, I'm running java 1.6.0_18 on Windows 7.","08/Jul/10 21:34;alexgrant;If I attach a debugger and put breakpoints in Form.onRender, Form.onComponentTag, Form.isMultiPart (inside the Visitor where it sets isMultiPart = true), I see the following behaviour when rendering StepTwo

(outer) Form.onRender - clears this.multiPart
(outer) Form.onComponentTag 
	- isMultiPart() returns true as inner form as multiPart = 2 (MULTIPART_HINT)
	- sets enctype=""multipart/formdata""
(inner) Form.onRender - clears this.multiPart","19/Jul/10 15:45;g-butcher;Alex, I found exactly the same problem.

Here my correction :
* in Form.java :
{quote}
private boolean isMultiPart() {
        if (multiPart != 0) {
            return true;
        }

        final boolean[] anyEmbeddedMultipart = new boolean[] { false };
        visitChildren(Form.class, new IVisitor<Form>() {
            public Object component(Form form) {
                boolean isMultiPart = false;

                if (form.isVisibleInHierarchy() && (form.multiPart != 0)) {
                    isMultiPart = true;
                }

                if (isMultiPart == true) {
                    anyEmbeddedMultipart[0] = true;
                    return STOP_TRAVERSAL;
                }
                return CONTINUE_TRAVERSAL;
            }
        });

        visitFormComponents(new FormComponent.AbstractVisitor() {
            @Override
            public void onFormComponent(FormComponent<?> formComponent) {
                if (formComponent.isVisibleInHierarchy() && formComponent.isMultiPart()) {
                    anyEmbeddedMultipart[0] = true;
                }
            }
        });

        return anyEmbeddedMultipart[0];
    }
{quote}
and
{quote}
protected void onRender(final MarkupStream markupStream) {
        super.onRender(markupStream);
    }
{quote}

* In my use case, I don't need wizard, but modal windows ... I need the following correction in ModalWindow.java to get it works :
{quote}
private class WindowClosedBehavior extends AbstractDefaultAjaxBehavior {
        private static final long serialVersionUID = 1L;

        @Override
        protected void respond(AjaxRequestTarget target) {
            ////////////////////////////////////////
            //GBI WICKET-2933
            //add :
            getContent().setVisible(false);
            ////////////////////////////////////////
            shown = false;
...
{quote}

I think this modification in modal window can correct other bugs .... What do you think ?
","19/Jul/10 20:08;alexgrant;Hi Guillaume,

I'm afraid I'm a Wicket user rather than a Wicket developer. I only know bits and pieces of the internals where I've had to find out due to a Wicket bug or a misunderstanding on my part, so I don't know if your changes are likely to correct other bugs. I would, however, be wary about changing Form so it doesn't use MULTIPART_HINT. I assume that was added for a reason.

Martin, who initially posted above, has just been promoted to core team member, so hopefully he will have time to help us.

Alex",19/Aug/10 01:50;alexgrant;This error is still present in Wicket 1.4.10,"25/Aug/10 04:29;ivaynberg;tested with

WICKET-2933-with-Exception.zip	2010-07-08 04:52 PM	Alex Grant	23 kB

be sure to remove any explicit calls to form#setmultipart(), wicket will now correctly calculate this for you","25/Aug/10 05:12;hudson;Integrated in Apache Wicket 1.4.x #118 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/118/])
    Form.MULTIPART_HINT is not cleared correctly with nested forms
Issue: WICKET-2933
","25/Aug/10 05:14;hudson;Integrated in Apache Wicket 1.5.x #265 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/265/])
    Form.MULTIPART_HINT is not cleared correctly with nested forms
Issue: WICKET-2933
","25/Aug/10 21:24;alexgrant;Thank you very much! Ever since Ajax file uploads were introduced Form.setMultiPart has been a constant source of problems for me, so I'm really glad I don't need to set it explicitly any more.",,,,,,,,,,,,,,,,,,,
DropDownChoice onSelectionChanged with setResponsePage causes weird exceptions,WICKET-2985,12471507,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aldaris,aldaris,13/Aug/10 08:23,17/Sep/10 14:48,13/Mar/19 23:17,13/Aug/10 22:40,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"If you have a DDC with wantOnSelectionChanged, and the onSelectionChanged is redirecting to the same page (just now it has pageparameters too), then it will produce 'pageClass' may not be null message. I think if this DDC is not on the homepage, then this error will somehow involve the homepage too.
See the attached quickstart.",,,,,,,,,,,,,,,,,,,,,,13/Aug/10 08:25;aldaris;wicket-2985.tar.gz;https://issues.apache.org/jira/secure/attachment/12452005/wicket-2985.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-14 08:13:27.353,,,no_permission,,,,,,,,,,,203823,,,Sat Aug 14 08:13:27 UTC 2010,,,,,,0|i0kc3r:,116778,,,,,,,,"13/Aug/10 08:25;aldaris;Simple quickstart to reproduce the problem.
Note: the commented out parts are for wicket 1.4, and they were working without a problem.","14/Aug/10 08:13;hudson;Integrated in Apache Wicket 1.5.x #232 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/232/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"All exceptions are handled by RequestCycle and no longer ""visible"" to WicketTester",WICKET-3022,12472719,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jdonnerstag,jdonnerstag,27/Aug/10 18:00,17/Sep/10 14:48,13/Mar/19 23:17,28/Aug/10 17:51,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"Exceptions during render will no longer be detected by WicketTester, since RequestCycle handles them all. Which is ok for normal processing, but bad for WicketTester. We somehow need to make WicketTester aware of thrown exceptions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-27 18:37:11.721,,,no_permission,,,,,,,,,,,203858,,,Sat Aug 28 18:43:21 UTC 2010,,,,,,0|i0kc07:,116762,,,,,,,,"27/Aug/10 18:37;ivaynberg;i thought i already had support for this baked in there, i think tester installed its own exception mapper....dont remember off the top of my head but it used to work","27/Aug/10 18:56;jdonnerstag;you did, but the rethrown exceptions are again caught, logged and a http error response is created.  To test it, change any of the test case to throw e.g. a MarkupException. The test will be executed with success but shouldn't.","27/Aug/10 19:48;ivaynberg;ah yes, maybe i broke it when i added the exception-loop handling....","27/Aug/10 19:50;ivaynberg;we can probably just move the exception loop handling into the exceptionmapper itself. it sucks because then users have to implement it in their own mappers, but oh well. maybe what we can do is make it a decorator and decorate the default with it, that way users can easily do that as well.",27/Aug/10 20:02;jdonnerstag;Locally I changed processRequest() to processRequest(boolean) and used the flag to enable/disable exception handling. By default it is false. WicketTester uses the existing flag BaseWicketTester.exposeException. This way everything remains where it is. And it can easily be enabled and disabled for testing.,"28/Aug/10 18:43;hudson;Integrated in Apache Wicket 1.5.x #272 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/272/])
    fixed WICKET-3022: All exceptions are handled by RequestCycle and no longer ""visible"" to WicketTester
Issue: WICKET-3022
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redeploy in jetty 7 fails,WICKET-3006,12472022,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,19/Aug/10 16:19,17/Sep/10 14:48,13/Mar/19 23:17,20/Aug/10 22:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"2010-08-19 18:14:33.499:WARN::EXCEPTION 
org.apache.wicket.WicketRuntimeException: There is no application attached to current thread Thread-1
	at org.apache.wicket.Application.get(Application.java:237)
	at org.apache.wicket.markup.MarkupCache.<init>(MarkupCache.java:84)
	at org.apache.wicket.markup.MarkupFactory.getMarkupCache(MarkupFactory.java:133)
	at org.apache.wicket.Application.internalDestroy(Application.java:886)
	at org.apache.wicket.protocol.http.WebApplication.internalDestroy(WebApplication.java:416)
	at org.apache.wicket.protocol.http.WicketFilter.destroy(WicketFilter.java:350)
	at org.eclipse.jetty.servlet.FilterHolder.destroyInstance(FilterHolder.java:106)
	at org.eclipse.jetty.servlet.FilterHolder.doStop(FilterHolder.java:85)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.servlet.ServletHandler.doStop(ServletHandler.java:165)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:105)
	at org.eclipse.jetty.security.SecurityHandler.doStop(SecurityHandler.java:348)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:105)
	at org.eclipse.jetty.server.session.SessionHandler.doStop(SessionHandler.java:123)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:105)
	at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:675)
	at org.eclipse.jetty.webapp.WebAppContext.doStop(WebAppContext.java:425)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStop(HandlerCollection.java:183)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStop(HandlerCollection.java:183)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:105)
	at org.eclipse.jetty.server.Server.doStop(Server.java:285)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.util.thread.ShutdownThread.run(ShutdownThread.java:124)
","jetty 7, debian, java 6",,,,,,,,,,,,,,,,,,,,,19/Aug/10 16:29;pete;fix-jetty-error.patch;https://issues.apache.org/jira/secure/attachment/12452542/fix-jetty-error.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-21 00:12:44.353,,,no_permission,,,,,,,,,,,203842,,,Sat Aug 21 00:12:44 UTC 2010,,,,,,0|i0kc13:,116766,,,,,,,,19/Aug/10 16:29;pete;patch attached,"21/Aug/10 00:12;hudson;Integrated in Apache Wicket 1.5.x #252 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/252/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormComponent#inputChanged does not properly check enabled/disabled status of the component,WICKET-2935,12468631,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,cmenzel,cmenzel,06/Jul/10 13:29,17/Sep/10 14:47,13/Mar/19 23:17,25/Aug/10 08:10,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"We noticed this when we had a panel that contains a number of CheckBox components. Some of these CheckBoxes were checked, the underlying model boolean was true. The panel itself was set to disabled (isEnabled returned false), which correctly caused the checkboxes to be rendered with the attribute disabled=""disabled"". On a form submit, however, the previously checked boxes were rendered unchecked. Only the internal state of the CheckBox and the rendered HTML changed - the model value was not touched.

After some debugging, I discovered the problem in FormComponent#inputChanged. That method only checks for isEnabled(), not isEnabledInHierarchy(). Since the CheckBox components themselves were enabled, they were accepting input. The browser, on the other hand, did not send anything, since the checkboxes were marked as disabled. This caused the CheckBox to receive null as its input, which it interprets as false/unchecked. The model was not affected since FormModelUpdateVisitor correctly checks isEnabledInHierarchy().

Solution: FormComponent#inputChanged needs to call isEnabledInHierarchy instead of isEnabled.",,,,,,,,,,,,,,,WICKET-2934,,,,,,,06/Jul/10 13:32;cmenzel;0002-fixed-FormComponent-erroneously-generating-empty-raw.patch;https://issues.apache.org/jira/secure/attachment/12448780/0002-fixed-FormComponent-erroneously-generating-empty-raw.patch,06/Jul/10 13:31;cmenzel;formdisabled-checkbox-quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12448779/formdisabled-checkbox-quickstart.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-07-06 20:09:28.541,,,no_permission,,,,,,,,,,,203774,,,Wed Aug 25 09:12:45 UTC 2010,,,,,,0|i0dbxb:,75861,,,,,,,,"06/Jul/10 13:31;cmenzel;A quickstart demonstrating this issue. The home page of this application shows a disabled but checked checkbox. If Wicket 1.4.9 is used, after pressing submit the check mark of the checkbox disappears, even though there should be no change.","06/Jul/10 13:32;cmenzel;A patch against Wicket 1.4.9 that will fix this issue. It changes FormComponent#inputChanged as proposed in the description, and adds a unit test that verifies the new, correct behavior.",06/Jul/10 13:33;cmenzel;Please note that the unit test provided in the patch will only work correctly if the FormTester bug described in WICKET-2934 is fixed.,"06/Jul/10 13:35;cmenzel;WICKET-2934 is related (and really required), since it hides this problem in unit tests.",06/Jul/10 20:09;jdonnerstag;fixed in 1.4; not yet tested/applied in 1.5,"06/Jul/10 21:10;hudson;Integrated in Apache Wicket 1.4.x #29 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/29/])
    fixed WICKET-2934 FormTester creates parameters in mock request even for disabled form components
fixed WICKET-2935 FormComponent#inputChanged does not properly check enabled/disabled status of the component
Issue: WICKET-2934
","25/Aug/10 09:12;hudson;Integrated in Apache Wicket 1.5.x #267 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/267/])
    Issue: WICKET-2935
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax requests increment page version when they should not,WICKET-2988,12471634,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aldaris,aldaris,15/Aug/10 08:08,17/Sep/10 14:47,13/Mar/19 23:17,21/Aug/10 06:08,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"If you have a form like this:
<form wicket:id=""form"">
    <input type=""text"" wicket:id=""name"" />
    <div wicket:id=""wmc"">
        <select wicket:id=""chooser"" />
    </div>
    <input type=""submit"" value=""Save"" />
</form>

The ListChoice component is updated via OnChangeAjaxBehavior on the TextField. When you submit this form, the validation for 'chooser' will fail, because it can't find it's model.",,,,,,,,,,,,,,,,,,,,,,15/Aug/10 08:11;aldaris;wicket-2988.tar.gz;https://issues.apache.org/jira/secure/attachment/12452116/wicket-2988.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-21 07:13:25.628,,,no_permission,,,,,,,,,,,203826,,,Sat Aug 21 07:13:25 UTC 2010,,,,,,0|i0kc3j:,116777,,,,,,,,"15/Aug/10 08:11;aldaris;This quickstart project demonstrates the problem. I've tried to create a test case for this, but it was working for some reason, I couldn't find a way to reproduce this with a test, only with a browser.
So basically open homepage -> type 'aaaa' in textfield, click on one of the new listchoice item and submit the form.
This project is working on 1.4.10 without a problem.","21/Aug/10 07:13;hudson;Integrated in Apache Wicket 1.5.x #254 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/254/])
    Issue: WICKET-2988
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket Quickstart not working,WICKET-2984,12471506,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,aldaris,aldaris,13/Aug/10 07:59,17/Sep/10 14:47,13/Mar/19 23:17,13/Aug/10 18:32,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket-quickstart,,,,,,,0,,,,,,,"mvn archetype:create -DarchetypeGroupId=org.apache.wicket -DarchetypeArtifactId=wicket-archetype-quickstart -DarchetypeVersion=1.5-M1 -DgroupId=com.mycompany -DartifactId=myproject
...
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error creating from archetype

Embedded error: The META-INF/maven/archetype.xml descriptor cannot be found.
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-13 08:03:26.261,,,no_permission,,,,,,,,,,,203822,,,Fri Aug 13 18:32:51 UTC 2010,,,,,,0|i0kc3z:,116779,,,,,,,,13/Aug/10 08:03;ivaynberg;as a quick workaround generate a 1.4 quickstart and change wicket.version in pom to 1.5-M1,13/Aug/10 18:32;mgrigorov;Fixed with r985317.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebApplication#mountBookmarkablePage with unicode path not works.,WICKET-3032,12473367,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,azarny,azarny,06/Sep/10 08:07,13/Sep/10 00:11,13/Mar/19 23:17,12/Sep/10 09:40,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.12,,,wicket,,,,,,,0,,,,,,,"404 error if bookmarkable page mounted with unicode path.


   protected void init() {
        getMarkupSettings().setDefaultMarkupEncoding(""UTF-8"");
        mountBookmarkablePage(""/страница2"", Page2.class);   // Will not works because of unicode path
   }


Need changes in AbstractRequestTargetUrlCodingStrategy constructor mountPath must be encoded. ","Win XP, Tomcat 5.5, Java 1.6",86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,06/Sep/10 08:14;azarny;3032.zip;https://issues.apache.org/jira/secure/attachment/12453926/3032.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-12 09:40:44.908,,,no_permission,,,,,,,,,,,203867,,,Mon Sep 13 00:11:13 UTC 2010,,,,,,0|i0kbz3:,116757,,,,,,,,"06/Sep/10 08:14;azarny;Attached application to reproduce this bug. The Page 3 link , from attached application, will non works.","12/Sep/10 09:40;mgrigorov;Fixed with r996277 in Wicket 1.4.x.
Works fine already in Wicket 1.5.","13/Sep/10 00:11;hudson;Integrated in Apache Wicket 1.4.x #159 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/159/])
    WICKET-3032 WebApplication#mountBookmarkablePage with unicode path not works.

Use IRequestCycleSettings#getResponseRequestEncoding() to encode the mount path for url coding strategies
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect decode parameters in AbstractRequestTargetUrlCodingStrategy#decodeParameters,WICKET-2793,12459865,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,azarny,azarny,22/Mar/10 15:24,28/Aug/10 18:27,13/Mar/19 23:17,28/Aug/10 06:00,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,,,,0,encoding,,,,,,"In case of  utf-8 url (see example below) created ValueMap in AbstractRequestTargetUrlCodingStrategy#decodeParameters is incorrect. 
Each key-value pair contains not decoded key and decoded value.

Proposed fix - line no 171 in AbstractRequestTargetUrlCodingStrategy#decodeParameters
parameters.add(pairs[i], value);
shall be 
parameters.add(urlDecodePathComponent(pairs[i]), value);
 
Changes locally tested on 1.4.7 version - no failed test.  But I am not sure is AbstractRequestTargetUrlCodingStrategy covered by test cases.
And works correctly on tomcat.



URL in browser

http://jewelry.npa.com:8080/ws/shop/category/Браслеты/Колір_металу/Белый/Вставка/Бриллиант/Розмір/19.5/brand/Enigma/Проба/750/Матеріал/Золото/price/USD-31-60/Колір_вставки/Белый

URL in Tomcat
http://jewelry.npa.com:8080/ws/shop/category/%D0%91%D1%80%D0%B0%D1%81%D0%BB%D0%B5%D1%82%D1%8B/%D0%9A%D0%BE%D0%BB%D1%96%D1%80_%D0%BC%D0%B5%D1%82%D0%B0%D0%BB%D1%83/%D0%91%D0%B5%D0%BB%D1%8B%D0%B9/%D0%92%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0/%D0%91%D1%80%D0%B8%D0%BB%D0%BB%D0%B8%D0%B0%D0%BD%D1%82/%D0%A0%D0%BE%D0%B7%D0%BC%D1%96%D1%80/19.5/brand/Enigma/%D0%9F%D1%80%D0%BE%D0%B1%D0%B0/750/%D0%9C%D0%B0%D1%82%D0%B5%D1%80%D1%96%D0%B0%D0%BB/%D0%97%D0%BE%D0%BB%D0%BE%D1%82%D0%BE/price/USD-31-60/%D0%9A%D0%BE%D0%BB%D1%96%D1%80_%D0%B2%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B8/%D0%91%D0%B5%D0%BB%D1%8B%D0%B9","Java 1.5, Tomcat 5.5",86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-28 18:27:38.381,,,no_permission,,,,,,,,,,,203645,,,Sat Aug 28 18:27:38 UTC 2010,,,,,,0|i0kcif:,116844,,,,,,,,22/Mar/10 16:46;azarny;The same mistake during url encode. See #appendValue line 113,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken link to Wicket Extensions Examples Pages,WICKET-2880,12464832,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,cartel,cartel,18/May/10 21:55,27/Aug/10 06:39,13/Mar/19 23:17,27/Aug/10 06:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,,,,0,,,,,,,The wicket extensions examples area cannot be accessed by the link: http://wicket.apache.org/docs/wicket-1.3.2/wicket-extensions/,All web browsers.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-25 14:49:51.358,,,no_permission,,,,,,,,,,,203725,,,Fri Aug 27 06:39:11 UTC 2010,,,,,,0|i0kcbr:,116814,,,,,,,,25/May/10 14:49;jdonnerstag;yes. That is because only the latest version is published is online available as you can see here http://wicket.apache.org/docs/. And the latest version is 1.3.7. All Wicket-Extension classes are included under that link. There is no separate wicket-extensions folder.,"25/May/10 15:02;cartel;Thanks for the feedback Juergen, but I think you misunderstood the bug report.

Let me phrase it in a different way. 

There used to be an area on the wicket.apache.org website where a developer could go and access code samples and examples of how to use the wicket extension APIs that was usually accessed by the link http://wicket.apache.org/docs/wicket-1.3.2/wicket-extensions/.

The link is now not working and so developers like myself who used to go the samples area for code references can't now do so.

Can you please investigate the absence of the wicket extensions code samples and examples area on the wicket.apache.org website?

Thanks.",27/Aug/10 06:39;ivaynberg;the link is available under examples/live-action,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removed page might revive when push back-button,WICKET-2827,12461415,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vmi,vmi,07/Apr/10 15:18,26/Aug/10 23:11,13/Mar/19 23:17,26/Aug/10 22:42,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,,,,0,,,,,,,"Hi.

The removed page might revive.
This is caused in the following conditions:
1) ""getPageMap().remove(this)"" or ""getPageMap().remove()"" on onXXX() handler. (e.g. Link#onClick())
2) Screen transition using ""setResponsePage(NextPage.class)"".
3) Push back-button on NextPage.
4) The removed page revive.

This cause is as follows:
a) When NextPage is displayed, the removed page remains in  ""org.apache.wicket.protocol.http.SecondLevelCacheSessionStore.SecondLevelCachePageMap.lastPage"".
b) When the removed page is re-displayed by back-button, SecondLevelCachePageMap.get(int, int) revive the page by lastPage.

The problem doesn't happen when use ""setResponsePage(new NextPage())"" instead of ""setResponsePage(NextPage.class)"".
Because ""lastPage"" is overwritten by the instance of NextPage.

It is my patch as follows:

Index: src/main/java/org/apache/wicket/protocol/http/SecondLevelCacheSessionStore.java
===================================================================
--- src/main/java/org/apache/wicket/protocol/http/SecondLevelCacheSessionStore.java	(revision 930858)
+++ src/main/java/org/apache/wicket/protocol/http/SecondLevelCacheSessionStore.java	(working copy)
@@ -348,6 +348,7 @@
 			{
 				getStore().removePage(sessionId, getName(), -1);
 			}
+			lastPage = null;
 		}
 
 		/**
@@ -361,6 +362,9 @@
 			{
 				getStore().removePage(sessionId, getName(), entry.getNumericId());
 			}
+			if (lastPage instanceof Page && ((Page) lastPage).getPageMapEntry() == entry) {
+				lastPage = null;
+			}
 		}
 
 		private IPageStore getStore()
","Windows XP SP3 (32bit), Java 6.0 update 19, and Tomcat 6.0.20",,,,,,,,,,,,,,,,,,,,,07/Apr/10 15:35;vmi;expire-test.zip;https://issues.apache.org/jira/secure/attachment/12441048/expire-test.zip,07/Apr/10 15:35;vmi;removepage.patch;https://issues.apache.org/jira/secure/attachment/12441047/removepage.patch,07/Apr/10 17:17;vmi;removepage2.patch;https://issues.apache.org/jira/secure/attachment/12441058/removepage2.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-08-26 23:11:40.619,,,no_permission,,,,,,,,,,,203674,,,Thu Aug 26 23:11:40 UTC 2010,,,,,,0|i0kcgf:,116835,,,,,,,,"07/Apr/10 15:56;vmi;Oh, my patch doesn't work for ""getPageMap().remove()"" ...",07/Apr/10 17:17;vmi;for only PageMap#remove(Page),"26/Aug/10 23:11;hudson;Integrated in Apache Wicket 1.4.x #126 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/126/])
    Issue: WICKET-2827
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListMultipleChoice: updateModel method looses the value submitted from the select control ,WICKET-2811,12460740,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,avodonosov,avodonosov,30/Mar/10 21:18,26/Aug/10 00:29,13/Mar/19 23:17,26/Aug/10 00:29,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,1,,,,,,,"ListMultipleChoice looses the value submitted from client in certain conditions. 

This is because the collection returned by getConvertedInput() is passed to model.setObject(); and later, when the model is modified, converted input is affected too. (see ListMultipleChoice.java, line 344 in svn revision 929271).

Simple page reproducing this bug under wicket 1.4.6 is attached.

Key points in the code, required to reproduce the problem:

1. The Form component is wrapped by a Border component
2. The model used flor ListMultipleChoice initially returns null from the getObject() method. 

To see the error open the attached page in browser, select something in the list, press Submit.

Resulting message in the feedback panel will be: ""submitted values: []"", i.e. the  the submit handler sees empty list in the model.

Expected: submit handler must see list of the values selected in the list by user.


The reason of the error:


1. Method Form.internalUpdateFormComponentModels() in Wicket 1.4.6 calls 
    ListMultipleChoice.updateModel() two times when the form is wrapped by a border:

    private void internalUpdateFormComponentModels()
    {
        FormComponent.visitComponentsPostOrder(this, new FormModelUpdateVisitor(this));

        MarkupContainer border = findParent(Border.class);
        if (border != null)
        {
            FormComponent.visitComponentsPostOrder(border, new FormModelUpdateVisitor(this));
        }
    }

2. On the first call of the ListMultipleChoice.updateModel the result of getConvertedInput() 
    is stored in the model (line 344).
    Now model and getConvertedInput() share the same collection.
    On the second call, the collection retrieved from model is cleared (line 326), and 
    then getConvertedInput() is used again (but now it returns the empty collection) 


314 public void updateModel()
315 {
316     Collection<T> selectedValues = getModelObject();
317     if (selectedValues != null)
318     {
...
326         selectedValues.clear();
327         selectedValues.addAll(getConvertedInput());
...
340     }
341     else
342     {
343         selectedValues = getConvertedInput();
344         setDefaultModelObject(selectedValues);
345     }
346 }


I would suggest to not share the collection between getConvertedInput() and the model:


343     selectedValues = getConvertedInput();
        selectedValues = new ArrayList<T>(selectedValues);
344     setDefaultModelObject(selectedValues);
",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,30/Mar/10 21:19;avodonosov;ListMultiBugPage.html;https://issues.apache.org/jira/secure/attachment/12440280/ListMultiBugPage.html,30/Mar/10 21:19;avodonosov;ListMultiBugPage.java;https://issues.apache.org/jira/secure/attachment/12440279/ListMultiBugPage.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-25 22:30:32.648,,,no_permission,,,,,,,,,,,203661,,,Thu Aug 26 00:29:16 UTC 2010,,,,,,0|i0kch3:,116838,,,,,,,,"25/Aug/10 22:30;mikehefner;Bug was fixed on 4/2/10 in ListMultipleChoice.java revision # 930432
",26/Aug/10 00:29;ivaynberg;thanks for the heads up,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@RequireHttps not switching to https when setting response page to non-bookmarkable page,WICKET-2799,12460190,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,giannidoe,giannidoe,25/Mar/10 06:00,25/Aug/10 01:10,13/Mar/19 23:17,02/Apr/10 20:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,,,,,,,0,,,,,,,"When navigating to a @RequireHttps annotated page using setResponsePage(new HttpsAnnotatedPage()); the redirection to https does not occur, see mailing list for full description:
http://old.nabble.com/%40RequireHttps---forms-misbehaving-ts26845496.html
Using ""setRedirect(true);"" does not seem to have any effect.
",,,,,,,,,,,,,,,,,,,,,,25/Mar/10 06:02;giannidoe;httpstest.zip;https://issues.apache.org/jira/secure/attachment/12439754/httpstest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-02 20:11:15.099,,,no_permission,,,,,,,,,,,203650,,,Wed Aug 25 01:10:06 UTC 2010,,,,,,0|i0kchz:,116842,,,,,,,,25/Mar/10 06:02;giannidoe;Quickstart to illustrate issue.,"02/Apr/10 20:11;ivaynberg;fixed, you no longer need the manual call to setredirect(true), remove that.","25/Aug/10 01:10;hudson;Integrated in Apache Wicket 1.5.x #262 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/262/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MarkupCache's modification listener fails with 'no Application in this thread' error,WICKET-2992,12471645,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,mgrigorov,mgrigorov,15/Aug/10 17:53,15/Aug/10 20:17,13/Mar/19 23:17,15/Aug/10 19:02,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"Start the quickstart application in debug mode in Eclipse and edit HomePage.html fails with:


ERROR - Task                       - Unhandled exception thrown by user code in task ModificationWatcher
org.apache.wicket.WicketRuntimeException: There is no application attached to current thread ModificationWatcher Task
	at org.apache.wicket.Application.get(Application.java:237)
	at org.apache.wicket.markup.MarkupCache.removeMarkup(MarkupCache.java:170)
	at org.apache.wicket.markup.MarkupCache$1.onChange(MarkupCache.java:461)
	at org.apache.wicket.util.listener.ChangeListenerSet.notifyListener(ChangeListenerSet.java:35)
	at org.apache.wicket.util.listener.ChangeListenerSet.notifyListener(ChangeListenerSet.java:27)
	at org.apache.wicket.util.listener.ListenerSet.notifyListeners(ListenerSet.java:62)
	at org.apache.wicket.util.watch.ModificationWatcher$1.run(ModificationWatcher.java:162)
	at org.apache.wicket.util.thread.Task$1.run(Task.java:115)
	at java.lang.Thread.run(Thread.java:595)
",Any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-15 20:17:06.965,,,no_permission,,,,,,,,,,,203829,,,Sun Aug 15 20:17:06 UTC 2010,,,,,,0|i0kc33:,116775,,,,,,,,"15/Aug/10 20:17;hudson;Integrated in Apache Wicket 1.5.x #240 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/240/])
    fixed: MarkupCache's modification listener fails with 'no Application in this thread' error
Issue: WICKET-2992
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make CheckGroupSelector Ajax friendly,WICKET-2844,12462697,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,martin-g,martin-g,21/Apr/10 18:51,28/Jul/10 00:13,13/Mar/19 23:17,27/Jul/10 18:42,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.markup.html.form.CheckGroupSelector changes the 'checked' property of the controlled checkboxes. The following patch modifies it to use .click() to change the state so this way if there is AjaxFormChoiceComponentUpdatingBehavior added to the CheckGroup it will fire for all checkboxes which state is changed.


- ""']; if (cb!=null) { if (!isNaN(cb.length)) { for(var i=0;i<cb.length;i++) { cb[i].checked=this.checked; } } else { cb.checked=this.checked; } }"");
+ ""']; if (cb!=null) { if (!isNaN(cb.length)) { for(var i=0;i<cb.length;i++) { if (cb[i].checked != this.checked) {cb[i].click();} } } else { cb.checked=this.checked; } }"");",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-27 18:42:06.298,,,no_permission,,,,,,,,,,,203690,,,Wed Jul 28 00:13:46 UTC 2010,,,,,,0|i0kcf3:,116829,,,,,,,,27/Jul/10 18:42;mgrigorov;Fixed with r979800 in trunk and r979801 in 1.4.x,"27/Jul/10 19:16;hudson;Integrated in Apache Wicket 1.4.x #64 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/64/])
    WICKET-2844 Make CheckGroupSelector Ajax friendly

Use checkbox.click() instead of checkbox.checked=bool.
#click() will trigger any registered event listeners (e.g. registered by AjaxFormChoiceComponentUpdatingBehavior)

port r979800 from trunk
","28/Jul/10 00:13;hudson;Integrated in Apache Wicket 1.5.x #177 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/177/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot substitute RelativePathPrefixHandler,WICKET-2881,12464878,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,bht@actrix.gen.nz,bht@actrix.gen.nz,19/May/10 09:14,27/Jul/10 08:08,13/Mar/19 23:17,27/Jul/10 08:08,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,0,,,,,,,"In IPageSettings

Get the (modifiable) list of IComponentResolvers.
List<IComponentResolver> getComponentResolvers();

This looks very useful and easy indeed, and in Application.init() one can find and remove
RelativePathPrefixHandler and replace it with a different AbstractMarkupFilter implementation e.g. XRelativePathPrefixHandler.

But even while the List.remove(Object o) returns true, and the handler appears to be removed, it is still active.

I don't know why and what holds on to it or what creates a new RelativePathPrefixHandler.

If I add my XRelativePathPrefixHandler, it is not used.

Consider
public class MarkupParser
public final void appendMarkupFilter(final IMarkupFilter filter)
{
    appendMarkupFilter(filter, RelativePathPrefixHandler.class);
}

So RelativePathPrefixHandler seems to be something special and I am afraid of other potential complications in case replacement would work.

Can Wicket be fixed to make a replacement as easy as it appears to be?


",All,,,,,,,,,,,,,,,,,,,,,25/May/10 16:44;bht@actrix.gen.nz;DirectoryStructure.gif;https://issues.apache.org/jira/secure/attachment/12445470/DirectoryStructure.gif,25/May/10 16:45;bht@actrix.gen.nz;HomePage.html;https://issues.apache.org/jira/secure/attachment/12445472/HomePage.html,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-05-24 17:43:01.337,,,no_permission,,,,,,,,,,,203726,,,Mon Jul 19 00:36:51 UTC 2010,,,,,,0|i0kcbj:,116813,,,,,,,,"24/May/10 17:43;jdonnerstag;Hi Bernard,

RelativePathPrefixHandler implements WicketFilter and IComponentResolver, which indicates that it serves two purposes.
1) WicketFilter: for Wicket, markup consists of text and wicket relevant tags .Most of the different WicketFilters identify wicket relevant tags e.g. such as that have ""wicket"" namespace in either tag name or any of the attributes and add WicketTag and ComponentTag objects to the internal representation of the markup. Other WicketFilters e.g. identify HTML tags with missing close tags and virtually add the close tag to markup.
2) IComponentResolvers: when you design your application, you have to make sure that the markup matches your component hierarchy. Under the cover however Wicket automatically adds (usually transparent) components to manage internals.  IComponentResolver will help Wicket either to find the right component (transparent resolver) or to automatically create (transparent) components when needed.

Because RelativePathPrefixHandler serves 2 purposes, it gets registered as WicketFilter with the MarkupParser (see MarkupParser and MarkupParserFactory) and as IComponentFilter with the Application. 

There is no rules which states that each WicketFilter must have a corresponding IComponentResolver, which is why there are two separate lists. Most of these pairs are actually in separate classes, with RelativePathPrefixHandler being an exception.

From what you've written I assume you want to replace the IComponentResolver portion of RelativePathPrefixHandler  and not the WicketFilter part.

The IComponentResolver list is actually less dependent on the correct sequence of resolvers, so that it should be possible to remove existing one's and add new one's. Actually you don't need to remove existing ones if the new one comes before the old one in the list.","25/May/10 08:26;bht@actrix.gen.nz;Hi Juergen,

Thanks very much for your explanation. I think I don't understand all of it well enough yet to achieve my goal. I want to change wicket behavior so that it removes any ""../"" tokens that may exist in pages in custom resource folders for better HTML editing support. I thought I could achieve that by adding very little code in RelativePathPrefixHandler as follows:
	/**
	 * Behavior that adds a prefix to src, href and background attributes to make them
	 * context-relative
	 */
	public static final IBehavior RELATIVE_PATH_BEHAVIOR = new AbstractBehavior()
	{
		private static final long serialVersionUID = 1L;

		@Override
		public void onComponentTag(Component component, ComponentTag tag)
		{
			IRequestCodingStrategy coder = RequestCycle.get()
				.getProcessor()
				.getRequestCodingStrategy();

			// Modify all relevant attributes
			for (int i = 0; i < attributeNames.length; i++)
			{
				String attrName = attributeNames[i];
				String attrValue = tag.getAttributes().getString(attrName);


				if ((attrValue != null) && (attrValue.startsWith(""/"") == false) &&
					(attrValue.indexOf("":"") < 0) && !(attrValue.startsWith(""#"")))
				{
                    // Change start
                    // Remove any ""../"" tokens that may exist in pages in custom
                    // resource folders for better HTML editing.
                    int lastIndex = attrValue.lastIndexOf(""../"");
                    if (lastIndex >= 0)
                    {
                        attrValue = attrValue.substring(lastIndex + 3);
                    }
                    // Change end
					tag.getAttributes().put(attrName, coder.rewriteStaticRelativeUrl(attrValue));
				}
			}
		}
	};

How can I do this without changing Wicket source code?

Many thanks.
","25/May/10 14:45;jdonnerstag;could please provide your directory structure and a sample markup file. I'm a bit suprised that (only) you need to modify the path for better editing support. Obviously you do things different than others.

Please see here (http://www.mkyong.com/wicket/how-do-change-the-html-file-location-wicket/) as well

Juergen","25/May/10 16:40;bht@actrix.gen.nz;Hi Juergen,

Thanks very much again for the additional information. In principle, I had already implemented what you are suggesting, with info from http://cwiki.apache.org/WICKET/control-where-html-files-are-loaded-from.html

As you can see from my attached directory structure and sample markup file, my HTML file structure matches the Java package structure, so I don't need a new ResourceStreamLocator, only the part resourceSettings.addResourceFolder(""wicket"");

where ""wicket"" matches web.xml filter-mapping so that the the filter mapping hides the ""wicket""  folder from direct web access.

I don't want to distract too much from my goal which is to code resource URLs that are resolved offline, and therefore something with the effect of the suggested change in RelativePathPrefixHandler. BTW the suggested change does not look as if it would have a functional impact on normal Wicket behavior.

I need support for this otherwise I don't know how to get HTML refactoring across all HTML files.

In other words being able to ""Control where HTML files are loaded from"" is only half of what I need.",25/May/10 16:44;bht@actrix.gen.nz;screen shot of directory structures java and markup,25/May/10 16:45;bht@actrix.gen.nz;Sample markup file,"25/May/10 16:50;jdonnerstag;ResourceFinder will do the trick.

http://cwiki.apache.org/WICKET/control-where-html-files-are-loaded-from.html ","25/May/10 18:26;bht@actrix.gen.nz;Hi Juergen,

Why are you quoting back to me the URL that I have already provided?

I already know that part and that does not do the trick as you write.

I don't think that you understand what needs to happen.

ResourceStreamLocator if its name can be trusted locates the resource for Wicket consumption which is what I have already achieved without it.

But it dos not alter the paths of resources that this resource references, and that only the browser is interested, such as images and style sheets. 

That is done by RelativePathPrefixHandler otherwise why then do we need RelativePathPrefixHandler? I don't get it. The name RelativePathPrefixHandler, if it can be trusted, again, says it all.

",19/Jun/10 12:15;erikvanoosten;[WICKET-1974] provides an alternative way to get rid of relative paths.,"18/Jul/10 06:53;bht@actrix.gen.nz;Erik,

Thanks for the idea. The purpose of this is to get a functional local editing environment which is not possible with absolute URLs.","18/Jul/10 17:50;jdonnerstag;I'll try it again.If you want to change the behavior which eventually gets attached to the component and which modifies the path, than
1) you need to copy RelativePathPrefixHandler (yes, sorry. That's how it currently works). 
2) remove ""implements IComponentResolver"" and the resolve() method. You will not need it.
3) modify the behavior within MyRelativePathPrefixHandler as you like
4) Define a class MyMarkupParserFactory which extends MarkupParserFactory
5) subclass MarkupParserFactory.newMarkupParser() to add your own implementation of RelativePathPrefixHandler  (see MarkupParserFactory javadoc). Your own MyRelativePathPrefixHandler  will be added before the original RelativePathPrefixHandler and thus ""replace it"".
6) register your MyMarkupParserFactory with IMarkupSettings via setMarkupParserFactory(IMarkupParserFactory()

Juergen","19/Jul/10 00:36;bht@actrix.gen.nz;Thanks Juergen.

Your suggestion works. The outcome is that we get complete separation of  concerns between HTML markup and Java source code which is a great step forward.

Previously this was not possible where one would have to either break resource links at design time or break the association between markup and java files which in both cases is terrible for tooling.

Now I can think of writing an IDE plugin that lets me switch between markup and HTML with a keystroke.

There are plugins that do this, but they work on the assumption that markup is in the same directory as the Java files. That is a special use case scenario - most useful for components such as used in the framework itself, where markup is managed by the Java developer who writes the framework.",,,,,,,,,,,,,,,,,,,,,,,,,,,
"""markupStream"" field in MarkupException breaks Exception's Serializable contract.",WICKET-2966,12470141,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lhunath,lhunath,26/Jul/10 07:39,27/Jul/10 00:13,13/Mar/19 23:17,26/Jul/10 10:20,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,0,,,,,,,"{code}
        private org.apache.wicket.markup.MarkupStream org.apache.wicket.markup.MarkupException.markupStream [class=org.apache.wicket.markup.MarkupStream] <----- field that is not serializable
{code}

Exceptions have the contract of being serializable.  That means, all their fields have to be serializable; otherwise you break that contract.  I think for Wicket especially, it is important to respect and honor that contract.  Therefore, MarkupException (or any other Wicket exceptions) should not contain any non-serializable objects in their fields.  Either the markupException field should become transient or it should be replaced with a serializable view of it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-26 11:10:36.583,,,no_permission,,,,,,,,,,,203805,,,Tue Jul 27 00:13:03 UTC 2010,,,,,,0|i0kc4f:,116781,,,,,,,,"26/Jul/10 11:10;hudson;Integrated in Apache Wicket 1.4.x #62 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/62/])
    fixed: ""markupStream"" field in MarkupException breaks Exception's Serializable contract.
Issue: WICKET-2966
","27/Jul/10 00:13;hudson;Integrated in Apache Wicket 1.5.x #175 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/175/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding a component in Component#onInitialize() leads to StackOverflowError,WICKET-2961,12470085,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mgrigorov,mgrigorov,24/Jul/10 17:35,25/Jul/10 15:08,13/Mar/19 23:17,24/Jul/10 17:44,1.4.10,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,0,,,,,,,"Adding a component in Page#onInitialize() leads to StackOverflowError:

 at org.apache.wicket.MarkupContainer.addedComponent(MarkupContainer.java:978)
     at org.apache.wicket.MarkupContainer.add(MarkupContainer.java:168)
     at org.apache.wicket.examples.WicketExamplePage.onInitialize(WicketExamplePage.java:67)
     at org.apache.wicket.Component.initialize(Component.java:970)
     at org.apache.wicket.MarkupContainer.initialize(MarkupContainer.java:992)
     at org.apache.wicket.Page.componentAdded(Page.java:1130)
     at org.apache.wicket.MarkupContainer.addedComponent(MarkupContainer.java:978)
     at org.apache.wicket.MarkupContainer.add(MarkupContainer.java:168)
     at org.apache.wicket.examples.WicketExamplePage.onInitialize(WicketExamplePage.java:67)
     at org.apache.wicket.Component.initialize(Component.java:970)
     at org.apache.wicket.MarkupContainer.initialize(MarkupContainer.java:992)
     at org.apache.wicket.Page.componentAdded(Page.java:1130)
     at org.apache.wicket.MarkupContainer.addedComponent(MarkupContainer.java:978)
     at org.apache.wicket.MarkupContainer.add(MarkupContainer.java:168)
     at org.apache.wicket.examples.WicketExamplePage.onInitialize(WicketExamplePage.java:67)
     at org.apache.wicket.Component.initialize(Component.java:970)
     at org.apache.wicket.MarkupContainer.initialize(MarkupContainer.java:992)
     at org.apache.wicket.Page.componentAdded(Page.java:1130)
     at org.apache.wicket.MarkupContainer.addedComponent(MarkupContainer.java:978)
     at org.apache.wicket.MarkupContainer.add(MarkupContainer.java:168)
     at org.apache.wicket.examples.WicketExamplePage.onInitialize(WicketExamplePage.java:67)
     at org.apache.wicket.Component.initialize(Component.java:970)
     at org.apache.wicket.MarkupContainer.initialize(MarkupContainer.java:992)
     at org.apache.wicket.Page.componentAdded(Page.java:1130)
     at org.apache.wicket.MarkupContainer.addedComponent(MarkupContainer.java:978)
     at org.apache.wicket.MarkupContainer.add(MarkupContainer.java:168)
     at org.apache.wicket.examples.WicketExamplePage.onInitialize(WicketExamplePage.java:67)
     at org.apache.wicket.Component.initialize(Component.java:970)
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-25 09:10:56.02,,,no_permission,,,,,,,,,,,203800,,,Sun Jul 25 15:08:57 UTC 2010,,,,,,0|i0kc4n:,116782,,,,,,,,24/Jul/10 17:44;mgrigorov;Fixed with r978909 in trunk and r978910 in 1.4.x,"25/Jul/10 09:10;hudson;Integrated in Apache Wicket 1.5.x #168 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/168/])
    ","25/Jul/10 15:08;hudson;Integrated in Apache Wicket 1.4.x #58 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/58/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebApplication.onSessionDestroyed no longer invoked by anybody,WICKET-2956,12469857,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jdonnerstag,jdonnerstag,21/Jul/10 20:49,25/Jul/10 15:08,13/Mar/19 23:17,25/Jul/10 09:08,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,,,,0,,,,,,,WebApplication.onSessionDestroyed no longer invoked by anybody,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-25 09:08:43.893,,,no_permission,,,,,,,,,,,203795,,,Sun Jul 25 15:08:48 UTC 2010,,,,,,0|i0kc5j:,116786,,,,,,,,25/Jul/10 09:08;mgrigorov;Fixed with r979008.,"25/Jul/10 09:10;hudson;Integrated in Apache Wicket 1.5.x #168 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/168/])
    WICKET-2956 WebApplication.onSessionDestroyed no longer invoked by anybody

Return the correct session attribute prefix if the passed Request is an instance of WebRequest.
WICKET-2956 WebApplication.onSessionDestroyed no longer invoked by anybody

Javadoc fixes.
WICKET-2956 WebApplication.onSessionDestroyed no longer invoked by anybody

Javadoc fixes.
","25/Jul/10 15:08;hudson;Integrated in Apache Wicket 1.5.x #170 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/170/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Textarea ignores first line in case of blank line,WICKET-2812,12460793,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rutgerpuntnet,rutgerpuntnet,31/Mar/10 09:08,25/Jul/10 09:10,13/Mar/19 23:17,23/Jul/10 15:52,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,,,,0,blank_line,textarea,,,,,"When the content of a textarea starts with an empty line, this line disappears when it is placed in the html.
This is a known problem with the html textarea element.
<textarea>test</textarea> will result in the same as:
<textarea>
test</textarea>
Meaning that the first newline in the textarea is ignored. In case of opening a page with a textarea with a leading blank line, this line will be removed when the form is submitted again.

See for similar issues in the apache jira STR-1366 and BEEHIVE-1005

A possible solution is to change the following method in org.apache.wicket.markup.html.form.TextArea in something like:
  protected final void onComponentTagBody(final MarkupStream markupStream, final ComponentTag openTag) {
    checkComponentTag(openTag, ""textarea"");
    String value = getValue();
    if (value != null && value.startsWith(""\n"")) {
      value = ""\n"" + value;
    } else if (value != null && value.startsWith(""\r\n"")) {
      value = ""\r\n"" + value;
    } else if (value != null && value.startsWith(""\r"")) {
      value = ""\r"" + value;
    }
    replaceComponentTagBody(markupStream, openTag, value);
}",IE6 / FF3.6 / Opera9,,,,,,,,,,,,,,,,,,,,,23/Jul/10 13:27;ews;TextArea.java.patch;https://issues.apache.org/jira/secure/attachment/12450308/TextArea.java.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-31 16:23:28.648,,,no_permission,,,,,,,,,,,203662,,,Sun Jul 25 09:10:58 UTC 2010,,,,,,0|i0kcgv:,116837,,,,,,,,"31/Mar/10 16:23;ivaynberg;fix for 1.5, cannot change in 1.4 as it will change existing behavior",23/Jul/10 13:27;ews;Patch as suggested above,"25/Jul/10 09:10;hudson;Integrated in Apache Wicket 1.5.x #168 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/168/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exceptions raised in overridden sessionDestroyed() event (of WebApplication class) are completely swallowed by the session-store classes without even logging anything,WICKET-2946,12469391,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mfarhans,mfarhans,15/Jul/10 23:02,25/Jul/10 09:10,13/Mar/19 23:17,21/Jul/10 20:45,1.3.6,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,,,wicket,,,,,,,0,,,,,,,"A week ago our production server was being pounded continuously for days by the msnbot. Since all our wicket-pages, including LoginPage, are currently stateful in nature, each hit would result in session-store directory getting created (as per the default DiskPageStore session implementation). This also at one time came to a point, where the number of session-folders exceeded 32k sub-directory limit, of linux-kernel, often resulting in some (valid) existing users session getting expired suddenly.

Digging into the problem revealed that there was a semantic error in our MyCustomApplication.sessionDestroyed() event, where a NullPointer Exception was getting raised, but since framework session-store (DiskPageStore) class was completely swallowing the exceptions raised, it took us quite a while to identify, what could have been a very obvious NPE, had it been at least logged by the catch() block. So if we could modify the catch block to at least log e.getMessage(), whenever an exception is raised.? that would save a lot of time of developers in such exceptional scenarios.


",Redhat Linux 4. JDK 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-22 07:15:48.164,,,no_permission,,,,,,,,,,,203785,,,Sun Jul 25 09:10:56 UTC 2010,,,,,,0|i0kc67:,116789,,,,,,,,"22/Jul/10 07:15;hudson;Integrated in Apache Wicket 1.4.x #53 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/53/])
    WICKET-2946

Catch just Exception, not Throwable
","25/Jul/10 09:10;hudson;Integrated in Apache Wicket 1.5.x #168 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/168/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamically adding component via an IComponentResolver fails within an enclosure for versions after 1.4.1,WICKET-2882,12464962,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jthomerson,chrisc,chrisc,19/May/10 22:52,04/Jul/10 17:11,13/Mar/19 23:17,24/May/10 07:13,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4.7,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,,,wicket,,,,,,,0,,,,,,,"We have been using an IComponentResolver implementation for a long time to allow the inclusion of certain panels to be determined by the markup. Some panels are included inside enclosures and some are not. Both cases worked fine in wicket 1.4.1 but in versions 1.4.2 and later a 'Tag expected' error occurs if the component is wrapped inside a wicket enclosure.

A quickstart example has been included to demonstrate the problem.","Tomcat 6.x, Java 6, Windows or Linux",,,,,,,,,,,,,,,,,,,,,19/May/10 22:53;chrisc;enclosurebug.zip;https://issues.apache.org/jira/secure/attachment/12444997/enclosurebug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-25 00:17:07.732,,,no_permission,,,,,,,,,,,203727,,,Sun Jul 04 17:11:17 UTC 2010,,,,,,0|i0kcbb:,116812,,,,,,,,19/May/10 22:53;chrisc;Quickstart to reproduce the problem.,"25/May/10 00:17;hudson;Integrated in Apache Wicket 1.5.x #65 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/65/])
    ","04/Jul/10 15:10;hudson;Integrated in Apache Wicket 1.5.x #127 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/127/])
    fixed WICKET-2882: IComponentResolver usage with Enclosure
Issue: WICKET-2882
",04/Jul/10 17:11;jdonnerstag;verifed in 1.5 (trunk) => working correctly,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketSessionFilter still broken: you can only locate or create sessions in the context of a request cycle,WICKET-2902,12465745,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lhunath,lhunath,30/May/10 20:29,26/Jun/10 03:17,13/Mar/19 23:17,26/Jun/10 02:18,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,1,,,,,,,"Ever since 1.4.8 (see WICKET-2778 and WICKET-2858) WicketSessionFilter has been broken for me.  This basically breaks my wicket application completely as I rely on servlets being able to access my wicket session.  For that reason, I think Critical or Blocker is a fair priority for this issue.

In 1.4.9 I get the following while reverting to 1.4.7 it works as expected:

{code}
java.lang.IllegalStateException: you can only locate or create sessions in the context of a request cycle
        at org.apache.wicket.Session.findOrCreate(Session.java:208)
        at org.apache.wicket.Session.get(Session.java:252)
        at com.lyndir.lhunath.snaplog.webapp.SnaplogSession.get(SnaplogSession.java:78)
        at com.lyndir.lhunath.snaplog.webapp.servlet.ImageServlet.doGet(ImageServlet.java:117)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
        at com.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:216)
        at com.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:141)
        at com.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:93)
        at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:63)
        at org.apache.wicket.protocol.http.servlet.WicketSessionFilter.doFilter(WicketSessionFilter.java:150)
        at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:129)
        at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:59)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:363)
        at com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:129)
        at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:59)
        at com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:122)
        at com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:110)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1139)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:378)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:535)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:865)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
{code}",,,,,,,,,,,,,,,,,,,,,,22/Jun/10 11:56;kbhushansharma;SessionFilterTest.zip;https://issues.apache.org/jira/secure/attachment/12447694/SessionFilterTest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-30 21:21:39.429,,,no_permission,,,,,,,,,,,203747,,,Sat Jun 26 03:17:13 UTC 2010,,,,,,0|i0kc9b:,116803,,,,,,,,"30/May/10 20:31;lhunath;<noise>
(And why doesn't {code} work?)
</noise>","30/May/10 21:21;jeremy@wickettraining.com;Please attach a quickstart that demonstrates this issue.

On Sun, May 30, 2010 at 3:31 PM, Maarten Billemont (JIRA)



-- 
Jeremy Thomerson
http://www.wickettraining.com
","31/May/10 13:28;drzewo;I am experiencing somewhat similar behavior, which surfaced during upgrade from 1.4.7 to 1.4.9. We heavily rely on the fact that the client request upon reaching our server is passed through the SecurityContextFilter that copies user security-related data from authenticated Wicket session (if any) and puts them as ThreadLocals.

public class SecurityContextFilter implements Filter {
	public void destroy() {}
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		if (Session.exists()) {
			BaseApplicationSession applicationSession = BaseApplicationSession.get();
			if (applicationSession != null) {
				SecurityContext.setUserProfile(applicationSession.getUserProfile());
				SecurityContext.setRoles(applicationSession.getRoles());
			}
		}
		chain.doFilter(request, response);
		SecurityContext.removeAll();
	}
	public void init(FilterConfig filterConfig) throws ServletException {}
}


public class SecurityContext implements Serializable {

	private static ThreadLocal<SecurityContext> securityContext = new ThreadLocal<SecurityContext>();
	private ISecurityProfile userProfile;
	private Set<Role> roles = new HashSet<Role>();

	private SecurityContext() {}

	public static SecurityContext getSecurityContext() {
		if (securityContext.get() == null) {
			securityContext.set(new SecurityContext());
		}
		return securityContext.get();
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public static void setRoles(Set<Role> roles) {
		if (securityContext.get() == null) {
			securityContext.set(new SecurityContext());
		}
		securityContext.get().roles = roles;
	}

	public ISecurityProfile getUserProfile() {
		return userProfile;
	}

	public static void setUserProfile(UserProfile userProfile) {
		if (securityContext.get() == null) {
			securityContext.set(new SecurityContext());
		}
		securityContext.get().userProfile = userProfile;
	}

	public static void removeAll() {
		securityContext.remove();
	}
}


The filters are declared in web.xml as follows:

	<filter>
		<filter-name>wicket.app1</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
		<init-param>
			<param-name>applicationBean</param-name>
			<param-value>app1</param-value>
		</init-param>
		<init-param>
			<param-name>applicationFactoryClassName</param-name>
			<param-value>
                org.apache.wicket.spring.SpringWebApplicationFactory
            </param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>securityContextFilter</filter-name>
		<filter-class>com.dummy.web.authorization.SecurityContextFilter</filter-class>
	</filter>

	<filter>
		<filter-name>wicketSessionFilter.app1</filter-name>
		<filter-class>org.apache.wicket.protocol.http.servlet.WicketSessionFilter</filter-class>
		<init-param>
			<param-name>filterName</param-name>
			<param-value>wicket.app1</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>wicketSessionFilter.app1</filter-name>
		<url-pattern>/app1/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>securityContextFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>wicket.app1</filter-name>
		<url-pattern>/app1/*</url-pattern>
	</filter-mapping>


After switching to 1.4.9 Session.exists() called from SecurityContextFilter.doFilter(..) is inherently false, IIRC.","22/Jun/10 10:21;pmarnik;I think, that this issue is caused by not binded wicket session to thread local object. Below I propose following patch wich was fix this issue for me:
{code}
--- WicketSessionFilter.java    2010-06-22 11:43:05.000000000 +0200
+++ WicketSessionFilter.java    2010-06-22 12:11:43.000000000 +0200
@@ -186,6 +186,7 @@
                else
                {
                        session.bind();
+                       Session.set(session);
                }
        }

{code}",22/Jun/10 11:56;kbhushansharma;Attached is the quickstart that reproduces the issue.,"22/Jun/10 19:47;martin-g;There is no need to call session.bind() because there is no RequestCycle thread local.
I suggest the following fix:


Index: wicket/src/main/java/org/apache/wicket/protocol/http/servlet/WicketSessionFilter.java
===================================================================
--- wicket/src/main/java/org/apache/wicket/protocol/http/servlet/WicketSessionFilter.java	(revision 956976)
+++ wicket/src/main/java/org/apache/wicket/protocol/http/servlet/WicketSessionFilter.java	(working copy)
@@ -185,7 +185,7 @@
 		}
 		else
 		{
-			session.bind();
+			Session.set(session);
 		}
 	}
","26/Jun/10 03:09;hudson;Integrated in Apache Wicket 1.5.x #117 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/117/])
    WICKET-2902 WicketSessionFilter still broken: you can only locate or create sessions in the context of a request cycle
Issue: WICKET-2902
","26/Jun/10 03:17;hudson;Integrated in Apache Wicket 1.4.x #17 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/17/])
    WICKET-2902 WicketSessionFilter still broken: you can only locate or create sessions in the context of a request cycle
Issue: WICKET-2902
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
variations don't work when using wicket:link with images,WICKET-2904,12465862,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wouterv,wouterv,01/Jun/10 12:54,21/Jun/10 18:25,13/Mar/19 23:17,21/Jun/10 17:27,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,2,,,,,,,"I'm trying to use variations with images that are automatically
localized when they are within wicket:link. When I turned on debugging
I could see that it tries to get the image for the current locale, or
one without locale extension when it is not available (logo_nl.png
versus logo.png). However when I change getVariation() on the page,
nothing notable happened in the debug statements.

So I started debugging and I found out that Component.getStyle is
actually called, but will never give a result, as the parent is
consulted to get the variation, however the automatically added
components of type AutoLinkResolver$ResourceReferenceAutolink do not
get a parent when they are created.
Could this be a bug? I would expect the variation to be used when I
autolink an image within a normal page.",,,,,,,,,,,,,,,,,,,,,,14/Jun/10 19:23;martin-g;WICKET-2904.patch;https://issues.apache.org/jira/secure/attachment/12447057/WICKET-2904.patch,01/Jun/10 13:50;wouterv;variationbug.tar.gz;https://issues.apache.org/jira/secure/attachment/12446022/variationbug.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-06-01 13:17:31.407,,,no_permission,,,,,,,,,,,203749,,,Mon Jun 21 18:25:27 UTC 2010,,,,,,0|i0kc8v:,116801,,,,,,,,"01/Jun/10 13:17;jeremy@wickettraining.com;please create a quickstart and attach it to this report




-- 
Jeremy Thomerson
http://www.wickettraining.com
","01/Jun/10 13:50;wouterv;Here you go. 
The homepage shows two images, both of which I expected to be the variantion ""wide"", but onthe the component images shows correctly, the one within wicket:link does not.","14/Jun/10 19:23;martin-g;Attaching a patch that allows <wicket:link> auto-components to resolve their parent's variation.

@Juergen: Please review the code.

@Wouter; I am waiting for my beer in any pub in Amsterdam ;-) ","15/Jun/10 05:17;wouterv;Martin,

This works perfectly, thanks! I live in the south of The Netherlands, so perhaps a beer in Eindhoven ;-)","21/Jun/10 18:13;hudson;Integrated in Apache Wicket 1.4.x #9 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/9/])
    WICKET-2904 variations don't work when using wicket:link with images
Issue: WICKET-2904
","21/Jun/10 18:25;wouterv;*cheer*

Thanks gentlemen!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Always the first bean with primary=true is returned, even if there are more than one primary beans",WICKET-2901,12465685,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,seitz,seitz,seitz,28/May/10 23:25,29/May/10 00:07,13/Mar/19 23:17,28/May/10 23:52,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket-spring,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-29 00:07:46.973,,,no_permission,,,,,,,,,,,203746,,,Sat May 29 00:07:46 UTC 2010,,,,,,0|i0kc9j:,116804,,,,,,,,"29/May/10 00:07;hudson;Integrated in Apache Wicket 1.5.x #76 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/76/])
    WICKET-2900: look for bean definition in parent contexts
WICKET-2901: only return a primary bean if it's the only one
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketSessionFilter: java.lang.IllegalArgumentException: Argument application can not be null,WICKET-2858,12463964,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,teemun,teemun,07/May/10 09:50,11/May/10 17:40,13/Mar/19 23:17,11/May/10 17:40,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,1.5-M1,,,,,,,,,0,,,,,,,"Due to WICKET-2778  application is now attached to ThreadLocal but application is only fetched via Application.get(filterName) if:

if (httpSession != null)
		{
			if (sessionKey == null)
			{
				application = (WebApplication) Application.get(filterName); 


This will create problems at line 197: 

Application.set(application);

and might cause java.lang.IllegalArgumentException: Argument application can not be null to be thrown

I guess application should be instance variable or line 197 should be something like this: 

Application.set(Application.get(filterName));",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-11 09:07:27.286,,,no_permission,,,,,,,,,,,203704,,,Tue May 11 17:25:43 UTC 2010,,,,,,0|i0kcdb:,116821,,,,,,,,"11/May/10 09:07;drzewo;I am experiencing the same issue. 
It renders my application unusable.
I'd personally raise the priority to *BLOCKER* as the fix for WICKET-2778 broke 1.4.8",11/May/10 10:03;martin-g;As a last resort you can always extend WicketSessionFilter and copy/paste the body of doFilter() and fix it locally.,11/May/10 17:25;ivaynberg;i guess the question is why would application be null?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ajax not working due to bugs in resource handling,WICKET-2839,12462342,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,freemant,freemant,18/Apr/10 04:59,26/Apr/10 17:50,13/Mar/19 23:17,26/Apr/10 17:50,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,,,,0,,,,,,,"A couple of bugs were found that were preventing .js resources to be returned to the client correctly. One bug was returning the jar file size as the content length of the resource if it is in a jar file. The other was copying past a source buffer into the response.

After fixing these bugs, the ajax functions in the trunk seems to be working.

A patch is provided. Test cases included.",,,,,,,,,,,,,,,,,,,,,,18/Apr/10 07:30;freemant;ASF.LICENSE.NOT.GRANTED--patch.txt;https://issues.apache.org/jira/secure/attachment/12442105/ASF.LICENSE.NOT.GRANTED--patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203685,,,Sun Apr 18 07:30:55 UTC 2010,,,,,,0|i0kcfr:,116832,,,,,,,,18/Apr/10 05:00;freemant;patch including test cases,18/Apr/10 07:30;freemant;a better patch: test case improved.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javascript looking for related radio in group is not working if css class is already assigned to radio,WICKET-2806,12460332,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,newgro,newgro,26/Mar/10 10:28,28/Mar/10 22:33,13/Mar/19 23:17,26/Mar/10 14:15,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,,,,,,,0,,,,,,,"We added a RadioGroup and two Radios. We often use multiple css classes for a component. Everything is working, until we add the class attribute to the radios. Then the click on radio is ignored.

The sad thing is that the tests for behavior with WicketTester are working. This problem is only related to the browsers. So we can't provide a testcase. 
Sorry you have to check it manually.

We traced it to the line 73 in AjaxFormChoiceComponentUpdatingBehavior

<code>
asb.append("" if (!(inputNode.className.indexOf('wicket-'+markupId)===0)&&!(inputNode.id.indexOf(markupId+'-')===0)) continue;\n"");
</code>

That means that the className has to start with the appropriate ""wicket-markupId"" value. But it will be added to the end of the class attribute value in
line 226 of Radio. So we get ""abc wicket-markupId"".

It is working with
asb.append("" if (!(inputNode.className.indexOf('wicket-'+markupId)>=0 || inputNode.id.indexOf(markupId+'-')>=0)) continue;\n"");

Alternatively the class for identifying in script has to be added at beginning
Radio line 226:
clazz = marker + "" "" + clazz;",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-28 22:33:43.056,,,no_permission,,,,,,,,,,,203656,,,Sun Mar 28 22:33:43 UTC 2010,,,,,,0|i0kchj:,116840,,,,,,,,"28/Mar/10 22:33;jamesmcintosh;The check above does not cover all cases, what is missing is a function to check if a string has a CSS class in it.

For the above case the likelihood of a problem occurring is pretty close to zero because of the 'wicket-' prefix but the function might be a nice one to have available if CSS classes are used similarly elsewhere.

What the function does:
 - check if the value equals the class
 - check if the value starts with or ends with the class
 - check if the value contains the class with a space before and after

This will avoid the case where you have added a css attribute which contains the same value as 'wicket-'+markupId

Example / test code

<html>
<head><title></title></head>
<body>
<script type=""text/javascript"">

function hasCSSClass(value, clazz) {
  return clazz != null && value != null && (
     clazz === value
     || value.match('^'+clazz) != null
     || value.match(clazz+'$') != null
     || value.indexOf(' '+clazz+' ') > 0
  );
}

function assert(value, expectedValue) {
   return value === expectedValue ? ""SUCCESS"" : ""FAILURE"";
}

var clazz = ""testclass"";
var i = 1;
// check nulls
document.write(i++ + "": "" + assert(hasCSSClass(null, clazz), false) + ""<br />"");
document.write(i++ + "": "" + assert(hasCSSClass(clazz, null), false) + ""<br />"");
document.write(i++ + "": "" + assert(hasCSSClass(null, null), false) + ""<br />"");
// equals
document.write(i++ + "": "" + assert(hasCSSClass(clazz, clazz), true) + ""<br />"");
// starts with
document.write(i++ + "": "" + assert(hasCSSClass(clazz + "" blah"", clazz), true) + ""<br />"");
// ends with
document.write(i++ + "": "" + assert(hasCSSClass(""blah "" + clazz, clazz), true) + ""<br />"");
// contains
document.write(i++ + "": "" + assert(hasCSSClass(""blah "" + clazz + "" blah"", clazz), true) + ""<br />"");
// contains as part of other value
document.write(i++ + "": "" + assert(hasCSSClass(""blah"" + clazz + ""blah"", clazz), false) + ""<br />"");

</script>

</body>
</html>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringIndexOutOfBoundsException in PortletServletRequestWrapper for some resource requests,WICKET-2802,12460303,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,kryptt,kryptt,26/Mar/10 00:44,26/Mar/10 03:13,13/Mar/19 23:17,26/Mar/10 03:13,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,,,,,,,0,liferay,portlet,wicket,,,,"A StringIndexOutOfBoundsException sometimes occurs when a ajax or a resource request is issued. 

The Portlet Container (Liferay 5.2.3) passes invalid input for the requestURI string when wokring on a virtual host.

The patch simply makes sure the String is long enough to get a substring.",,,,,,,,,,,,,,,,,,,,,,26/Mar/10 00:44;kryptt;exception-fix.patch;https://issues.apache.org/jira/secure/attachment/12439841/exception-fix.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203652,,,Fri Mar 26 00:44:58 UTC 2010,,,,,,0|i0kchr:,116841,,,,,,,,26/Mar/10 00:44;kryptt;simple patch to fix the exception.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Cannot find element with id"" error seen in Ajax Debug for child of wicket:enclosure",WICKET-4874,12617172,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,vitiate,vitiate,21/Nov/12 20:24,18/Jan/19 10:29,13/Mar/19 23:17,24/Feb/14 14:23,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,0,ajax,enclosure,javascript,,,,When an AjaxLink is hidden due to being a child of a wicket:enclosure an error is seen in the Ajax Debug window. It seems like the event handler is expecting the AjaxLink to exist in the DOM even though it has been hidden.,Windows 7 x64 Java 1.6.0_32,,,,,,,,,,,,,,WICKET-5479,WICKET-4700,WICKET-3947,WICKET-4382,,,,21/Nov/12 20:25;vitiate;WicketQuickStart.zip;https://issues.apache.org/jira/secure/attachment/12554563/WicketQuickStart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-28 10:55:36.195,,,no_permission,,,,,,,,,,,259374,,,Wed May 21 11:27:11 UTC 2014,,,,,,0|i0loon:,124649,,,,,,,,21/Nov/12 20:25;vitiate;This project demonstrates the problem,28/Nov/12 10:55;bitstorm;I think the problem is due to the adoption in Wicket 6 of browser event registration in place of inline events. Now the AJAX behaviour tries to register the ajax handler for the given component but it fails as the component is not rendered (is inside wicket:enclosure ) and at the same time is visible in hierachy. I didn't find a solution yet.,"29/Nov/12 01:08;vitiate;A workaround is to override isVisible for the link, returning dropdown.isVisible(). No errors are shown when I do this.","29/Nov/12 13:08;mgrigorov;I don't use <wicket:enclosure> in my applications and I highly recommend you to avoid using it too!

I recommend to use the non-auto component org.apache.wicket.markup.html.basic.EnclosureContainer instead.

markup:
 coming up is some invisible stuff!
    <div wicket:id=""enclosure"">
        <select wicket:id=""dropdown""></select>
        <a wicket:id=""link"">click me!</a>
    </div>

java code:
DropDownChoice<String> dropdown = new DropDownChoice<String>(""dropdown""){ ... };

EnclosureContainer enclosureContainer = new EnclosureContainer(""enclosure"", dropdown);
add(enclosureContainer);
enclosureContainer.add(dropdown);
        
AjaxLink<Void> link = new AjaxLink<Void>(""link"") { ... };
enclosureContainer.add(link);

Works as one would expect!

The problem with wicket:enclosure is that it is an auto component which is resolved during rendering. The children components inside don't know anything about it. They don't know its existence in the hierarchy. AjaxEventBehavior#renderHead() wont be called at all if there was indication that a parent in the hierarchy is invisible. But unfortunately this knowledge comes too late.
",29/Nov/12 16:47;vitiate;That works for me. I will probably need to convert all of my wicket:enclosures to use EnclosureContainer to avoid this error.,"24/Feb/14 14:23;mgrigorov;The problem is solved by using the new queueing functionality implemented for WICKET-3335.

In the attached quickstart replace 

add(dropdown); and add(link);

with

queue(dropdown); and queue(link);

This way the 'link' is resolved as a child of the enclosure and is invisible as desired.","21/May/14 10:51;rudi;I also got hit by this bug (actually WICKET-5214: ignored unrendered components) and spent some time being confused about this behavior.

I agree with [~aditsu]'s suggestion that any use of {{<wicket:enclosure>}} should log a {{WARN}} and mention this ticket (WICKET-4874 / WICKET-5214) and also suggesting {{EnclosureContainer}} instead.

And hopefully {{<wicket:enclosure>}} is removed from Wicket 7.0 because it's harmful to ""support"" a feature with problematic/unpredictable behavior.",21/May/14 10:51;rudi;Tag [~ceefour],"21/May/14 11:27;mgrigorov;I've linked this ticket to the discussion at dev@ about deprecating <wicket:enclosure> in Wicket 7.x.
The consensus was: wicket:enclosure works in 90% of the use cases so it should stay.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Notify behaviors when a component is removed from the tree,WICKET-4959,12626744,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,paul ms,paul ms,09/Jan/13 10:51,23/Jan/18 20:10,13/Mar/19 23:17,18/Jan/13 08:04,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket-extensions,,,,,,,0,,,,,,,"I use a AjaxTabbedPanel on my page and run into the following problem:

If there is an Behavior (AjaxSelfUpdatingTimer or AbstractAjaxTimerBehavior) attached to one of the panels and the panel is replaced by another panel, the AjaxBehavior is not properly removed and deactivated. After the idle-duration the JS calls in and Wicket throws an exception due to the missing behavior.

Stacktrace:
ERROR - DefaultExceptionMapper     - Unexpected error occurred
org.apache.wicket.behavior.InvalidBehaviorIdException: Cannot find behavior with id '0' on component 'org.apache.wicket.markup.html.panel.EmptyPanel:tabs:panel' in page '[Page class = com.wicket.HomePage, id = 0, render count = 4]'. Perhaps the behavior did not properly implement getStatelessHint() and returned 'true' to indicate that it is stateless instead of returning 'false' to indicate that it is stateful.
	at org.apache.wicket.Behaviors.getBehaviorById(Behaviors.java:303)
	at org.apache.wicket.Component.getBehaviorById(Component.java:4483)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:246)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:226)
...

I attached a quickstart showing the problem. Simply take a look at second tab and then go back to the first tab and you run into this problem. 

There is a workaround for this: If you attach the behavior to a component of the panel (i.e. the clock) this error doesn't occur.",,,,,,,,,,,,,,,WICKET-5464,,,,WICKET-5104,,,17/Jan/13 11:09;mgrigorov;WICKET-4959.patch;https://issues.apache.org/jira/secure/attachment/12565308/WICKET-4959.patch,09/Jan/13 10:52;paul ms;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12563927/quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2013-01-09 12:38:45.904,,,no_permission,,,,,,,,,,,303361,,,Mon Mar 10 08:15:28 UTC 2014,,,,,,0|i17ap3:,250701,,,,,,,,"09/Jan/13 12:38;svenmeier;Problem is that MarkupContainer#replace() (#742) copies the markupId from the panel with the behavior (ClockPanel) onto the panel without (EmptyPanel):

	// The generated markup id remains the same
	child.setMarkupId(replaced);

Thus the next pending Ajax request comes through, since wicket-ajax's defaultPrecondition sees the markupId still present in the dom.",09/Jan/13 13:05;mgrigorov;I think since ClockPanel is removed from the component tree its timer behavior should be stopped.,"09/Jan/13 17:20;svenmeier;Even if is was stopped on the server, there's still a javascript timeout lurking around, which will trigger an additional request.","09/Jan/13 17:46;mgrigorov;org.apache.wicket.ajax.AbstractAjaxTimerBehavior#stop() contributes JS that stops the client side timeout.
I think we can check whether this is an Ajax call in AbstractAjaxTimerBehavior#onDetach() and call #stop(target).",17/Jan/13 09:20;mgrigorov;The Ajax timer behavior is stopped now when its related component is removed from the tree in Ajax request.,17/Jan/13 11:09;mgrigorov;A patch that introduces Behavior#onRemove(Component) - a callback that is called when a host component is removed from its parent.,"18/Jan/13 08:04;mgrigorov;The Ajax timer behavior will stop if the component it is attached to is removed from its parent.
There is still chance that a scheduled timer will fire on the client side before the stop. To prevent this you need explicitly to use AjaxChannel.Type.ACTIVE for the timer behavior. Override #updateAjaxAttributes() and do attributes.setAjaxChannel(""someName"", Type.Active);","07/Mar/14 22:08;karthur;Hi, 

I have exactly the same problem with Wicket 1.5.x, Unfortunately we are stuck to this version for now. Do you have any recommended fix to stop the JavaScript Keep polling on client side when the Behavior has been removed from the component on server of if it has been replaced in the meantime? Appreciate any help!

Regards, 
Arthur","10/Mar/14 08:15;mgrigorov;Hi,

Unfortunately I don't see a way how you can workaround this in 1.5.x.
Even if you copy the behavior from 6.x the new method won't be called because there is a change in Component.java too.
You can check the changes made in 6.x and port them to 1.5.x. If this fixes the problem then attach the patch and we will apply it for the next release of 1.5.x.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong string encoding in JavaScriptPackageResource,WICKET-4460,12547008,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jonas,jonas,19/Mar/12 12:00,08/Jul/15 13:41,13/Mar/19 23:17,19/Mar/12 14:52,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.request.resource.JavaScriptPackageResource.processResponse(Attributes, byte[])
transforms javascript using an IJavaScriptCompressor if configured - which is the case by default in deployment mode, but not in development mode.
The problem is that the code uses UTF-8 encoding when creating the String from bytes, but when converting the result String of IJavaScriptCompressor back to bytes, the platform's default encoding is used (e.g. Cp1252 on Windows).
I propose to at least use the same character encoding while converting from/to bytes:

something like (JavaScriptPackageResource line 59 and following):

			try
			{
				String nonCompressed = new String(processedResponse, ""UTF-8"");
				return compressor.compress(nonCompressed).getBytes(""UTF-8"");
			}
			catch (Exception e)
			{
				log.error(""Error while filtering content"", e);
				return processedResponse;
			}


Of course it would be even better not to make any assumtions about the encoding of the .js file, but I'm not sure how one could determine that.","Wicket 1.5.5, Jetty 7.6.2, Windows",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-03-19 14:52:11.343,,,no_permission,,,,,,,,,,,232166,,,Wed Jul 08 13:41:30 UTC 2015,,,,,,0|i00vo7:,3063,,,,,,,,"19/Mar/12 14:52;mgrigorov;Changed to .getBytes(""UTF-8"").
I'm also not aware of an easy way to detect the charset encoding of a text.",08/Jul/15 11:22;ostlund;After the fix in https://issues.apache.org/jira/browse/WICKET-5827 this issue is back again.,"08/Jul/15 12:13;mgrigorov;It is a regression.
Will be fixed for the next release.
Sorry!",08/Jul/15 13:11;ostlund;[~mgrigorov] - Thanks.,"08/Jul/15 13:41;mgrigorov;Fixed with WICKET-5946 (6.21.0, 7.0.0).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataTable toolbars do not handle dynamically changing columns in the table,WICKET-4596,12559755,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,jesselong,jesselong,07/Jun/12 21:34,23/Jun/15 11:59,13/Mar/19 23:17,14/Jun/12 18:59,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket-extensions,,,,,,,0,,,,,,,"All the packaged toolbars for the DataTables fail to handle dynamically changing column in the table.

HeadersToolbar - is new columns are added, they do not have headers. If columns are removed, the headers are not removed.

NoRecordsToolbar - colspan is static to the number of columns when the table was created. If more columns are added, or if columns are removed, then the incorrect colspan is used.

NavigationToolbar - incorrect static colspan, like NoRecordsToolbar.

FilterToolbar - same problem as HeadersToolbar, just s/header/filter/",,,,,,,,,,,,,,,,,,,,,,07/Jun/12 21:40;jesselong;fix-WICKET-4596.patch;https://issues.apache.org/jira/secure/attachment/12531309/fix-WICKET-4596.patch,07/Jun/12 21:37;jesselong;myproject2.zip;https://issues.apache.org/jira/secure/attachment/12531306/myproject2.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-06-14 18:59:07.223,,,no_permission,,,,,,,,,,,257746,,,Thu Jun 14 18:59:51 UTC 2012,,,,,,0|i0k8h3:,116190,,,,,,,,07/Jun/12 21:37;jesselong;myproject2.zip - quickstart demoing the problem. You can see HeadersToolbar and NavigationToolar problems here. Same type of problems apply to FilterToolbar and NoRecordsToolbar respectively.,"07/Jun/12 21:40;jesselong;fix-WICKET-4596.patch - patch to fix.

HeadersToolbar and FilterToolbar: use RefreshingView for td/th instead of RepeatingView.

NoRecordsToolbar and NavigationToolbar: use IModel<String> for colspan value, instead of static string. IModel gets value from current number of columns.

Disclaimer: I have not tested FilterToolbar. Please check that FilterToolbar is correct.","07/Jun/12 21:42;jesselong;My patch also removes AjaxNavigationToolbar.html which is not needed. NavigationToolbar.html does everything AjaxNavigationToolbar.html, slightly better.","14/Jun/12 18:59;svenmeier;Tested FilterToolbar with Phonebook application, works fine.","14/Jun/12 18:59;svenmeier;Applied with minor changes, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
content type in header is being lost when using a AbstractTransformerBehavior,WICKET-3633,12504971,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,kukushi,kukushi,22/Apr/11 11:49,27/Aug/14 08:44,13/Mar/19 23:17,01/Nov/11 15:10,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5-RC4,,wicket,,,,,,,0,,,,,,,"The content type header information is being lost when using a AbstractTransformerBehavior, please see tha attached example of the problem for an example. It isnt causing a problem on my dev box but on live, it is, because the header info is not getting set tomcat/httpd (I'm assuming) is setting the header to plain/text so that the browser ends up showing the html rather than redering it. Here's a bit more information with wget, as you can see with the first call the content info is missing, with the second call without the AbstractTransformerBehavior being called (it's commented out in BasePage) the [text/html] header is included. I debug through wicket code and found that the issue was with the AbstractTransformerBehavior using a StringResponse whose setContentType() (Response.setContentType()) does nothing!!



============BUG============
$ wget http://localhost:8080/wicket-bug/
--2011-04-22 12:39:19--  http://localhost:8080/wicket-bug/
Resolving localhost (localhost)... ::1, 127.0.0.1
Connecting to localhost (localhost)|::1|:8080... failed: Connection refused.
Connecting to localhost (localhost)|127.0.0.1|:8080... connected.
HTTP request sent, awaiting response... 200 OK
Length: 483
Saving to: `index.html'

100%[==============================================================================>] 483         --.-K/s   in 0s

2011-04-22 12:39:20 (13.7 MB/s) - `index.html' saved [483/483]


============the transformer commented out============
$ wget http://localhost:8080/wicket-bug/
--2011-04-22 12:40:27--  http://localhost:8080/wicket-bug/
Resolving localhost (localhost)... ::1, 127.0.0.1
Connecting to localhost (localhost)|::1|:8080... failed: Connection refused.
Connecting to localhost (localhost)|127.0.0.1|:8080... connected.
HTTP request sent, awaiting response... 200 OK
Length: 479 [text/html]
Saving to: `index.html.1'

100%[==============================================================================>] 479         --.-K/s   in 0s

2011-04-22 12:40:28 (13.3 MB/s) - `index.html.1' saved [479/479]

",,,,,,,,,,,,,,,WICKET-5687,,,,,,,15/May/11 21:57;kukushi;patch.patch;https://issues.apache.org/jira/secure/attachment/12479282/patch.patch,22/Apr/11 11:51;kukushi;wicket-bug.zip;https://issues.apache.org/jira/secure/attachment/12477100/wicket-bug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-04-22 20:00:24.554,,,no_permission,,,,,,,,,,,2644,,,Tue Nov 01 15:10:09 UTC 2011,,,,,,0|i0kafz:,116509,,,,,,,,"22/Apr/11 11:51;kukushi;attached code example, un/comment line add(new BodyIdInsertTransformer()); in BasePage to see example of problem.",22/Apr/11 20:00;jdonnerstag;the problem only affects 1.4. 1.5 is using a BufferedWebResponse,"23/Apr/11 12:02;kukushi;So this will be fixed in 1.4? and how soon? when is wicket 1.4.18 due?

thanks!",14/May/11 06:22;ivaynberg;this has been fixed in 1.5. if you really need this fixed for 1.4 please submit a patch.,15/May/11 21:57;kukushi;patch that fixes is problem in 1.4.x,16/May/11 18:44;mgrigorov;Reopen the ticket - there is a patch for 1.4.x,01/Nov/11 15:10;mgrigorov;The patch is applied with r1196040.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoComplete still triggers redundant events to registered change listener,WICKET-5055,12633886,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,svenmeier,svenmeier,25/Feb/13 11:03,06/Jul/14 12:25,13/Mar/19 23:17,25/Feb/13 11:54,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-extensions,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,WICKET-5609,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,314380,,,2013-02-25 11:03:51.0,,,,,,0|i1i91r:,314725,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Double slash '//' in starting url makes Url.parse output a relative Url,WICKET-4942,12625167,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,balamaci,balamaci,24/Dec/12 10:02,05/Jun/14 03:09,13/Mar/19 23:17,27/Feb/13 09:46,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket,,,,,,,1,,,,,,,"Trying to set JQuery reference to a CDN:

        Url jqueryCDN = Url.parse(""//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"");
        getJavaScriptLibrarySettings().setJQueryReference(new UrlResourceReference(jqueryCDN));

Url added in head results in:
<script type=""text/javascript"" src="".//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js""></script>
",,,,,,,,,,WICKET-5610,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-02-08 18:28:08.941,,,no_permission,,,,,,,,,,,301709,,,Wed Feb 27 09:46:37 UTC 2013,,,,,,0|i16vvz:,248298,,,,,,,,"08/Feb/13 18:28;elbac;This is very annoying for anyone who uses SSL on their site.  Chome and other browsers will block access to external resources if the main page is loaded over HTTPS and it attempts to load a script via HTTP.

",27/Feb/13 09:46;mgrigorov;UrlResourceReference has been improved to render its url as is. it wont be recalculated against the base url (the currently rendered page url). ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextField does not show suggestions when it is used on ModalWindow in InternetExplorer,WICKET-4294,12535170,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,bitstorm,dangermouse,dangermouse,14/Dec/11 14:58,18/Dec/13 19:02,13/Mar/19 23:17,17/Dec/13 21:28,1.4.19,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.13.0,7.0.0-M1,,wicket-extensions,,,,,,,3,autocomplete,css,internetexplorer,modal,,,"When the AutoCompleteTextfield is used on a ModalWindow the suggestions are not shown. The reason is the following code in modal.css on line 171:

div.wicket-modal div.w_content_container {
	position: relative;
}

This was added in revision 1071523 of modal.css. As a workaround to make the suggestions visible i use the following code in the css-sheet of my project:

/* 
 * FIXES rendering issue of autocomplete 
 * suggestions on modal windows in internet explorer 7, 8, ..?
 */
DIV.wicket-modal DIV.w_content_container {
	position : static !important;
}

I will attach a quickstart project, that you can use to reproduce the bug. Start it and type http://localhost:8080/ac into your browser.
To show the bug you have to remove the workaround from style.css or disable it using the developer toolbar of internet explorer.",,,,,,,,,,,,,WICKET-4084,,,,,,,,,04/Apr/12 12:09;bitstorm;WICKET-4294.patch;https://issues.apache.org/jira/secure/attachment/12521304/WICKET-4294.patch,14/Dec/11 14:59;dangermouse;myproject1_5_3.zip;https://issues.apache.org/jira/secure/attachment/12507368/myproject1_5_3.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-03-29 15:33:52.438,,,no_permission,,,,,,,,,,,220854,,,Tue Dec 17 21:28:55 UTC 2013,,,,,,0|i0sxhb:,166901,,,,,,,,14/Dec/11 14:59;dangermouse;added quickstart project,"29/Mar/12 15:33;bitstorm;Sorry, but I couldn't replicate the problem with your project (tested with i.e 7 and 8). If you still have this problem could you provide more informations? Maybe you could use a webdev tool to see if there is any error with JavaScript  or Css.","03/Apr/12 20:47;dangermouse;Hi Andrea!

Thanks for your interests on this issue. Unfortunatly I added my workaraound to the quickstart project. So please follow these instructions to reproduce the error:

- remove everything from style.css in the quickstart project
- clean your browsers cache
- do mvn jetty:run
- type http://localhost:8080/ac into your browser
- type g into the chooser on the page
- type g into the chooser on the modal window

I still have this problem even on ie9

Stefan",03/Apr/12 21:06;dangermouse;This issue still exists in wicket 1.5.5,"04/Apr/12 12:09;bitstorm;Hi,

sorry if I didn't read your instructions properly. Actually AutoCompleteTextfield shows its options but they are behind modal window. I solved the issue setting z-index of suggestions to 20002 because modal window has the same parameter setted to 20001.
I've tested it with IE 7, IE 8, Firefox 11 and Chromium 17.

See attached patch.",17/Dec/13 14:02;mgrigorov;[~bitstorm] Is this issue still valid in latest wicket-6.x ?,17/Dec/13 16:37;bitstorm;Should be solved. I will check it shortly.,17/Dec/13 21:28;bitstorm;Solved with WICKET-5413 and WICKET-5379. Tested with Wicket 6.13 snapshot ,17/Dec/13 21:28;bitstorm;Solved with WICKET-5413 and WICKET-5379. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autocomplete dropdown's position is wrong when placed inside scrollable div but with position:static,WICKET-4341,12538616,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,bitstorm,mwaciega,mwaciega,17/Jan/12 10:37,17/Dec/13 22:02,13/Mar/19 23:17,17/Dec/13 22:02,1.4.19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.12.0,7.0.0-M1,,wicket-extensions,,,,,,,1,patch,,,,,,"Function getPosition(obj) of wicket-autocomplete.js takes into account only those DOM path elements which are offset parents. Result is wrong when there are also elements that arent positioned (not being offset parents), but with overflow (scrollbars present). These scrollbar offsets aren't taken into account, so final result returned is wrong.",,,,,,,,,,,,,,,,,,,,,,17/Jan/12 13:05;mwaciega;mvn-startup-project.zip;https://issues.apache.org/jira/secure/attachment/12510833/mvn-startup-project.zip,17/Jan/12 10:41;mwaciega;wicket-autocomplete-positioning-1.4.19.patch;https://issues.apache.org/jira/secure/attachment/12510828/wicket-autocomplete-positioning-1.4.19.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-01-17 10:46:14.658,,,no_permission,,,,,,,,,,,224119,,,Tue Dec 17 22:02:26 UTC 2013,,,,,,0|i0sxhj:,166902,,,,,,,,17/Jan/12 10:41;mwaciega;Proposal of change,"17/Jan/12 10:46;mgrigorov;Johan, you often fix similar problems in this code. Can you review ?",17/Jan/12 13:05;mwaciega;Startup maven project for reproducing the issue.,"17/Dec/13 13:59;mgrigorov;Similar issue has been fixed in Wicket 6.12.
Please re-test and let us know if it still doesn't work.","17/Dec/13 22:02;bitstorm;Solved with WICKET-5413 and WICKET-5379. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fragment and Component with same id fail with misleading exception,WICKET-5060,12634371,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,kiakimov,kiakimov,27/Feb/13 07:59,07/Nov/13 08:50,13/Mar/19 23:17,07/Nov/13 08:50,6.4.0,7.0.0-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.12.0,7.0.0-M1,,wicket,wicket-extensions,,,,,,0,,,,,,,"A page having a component from inherited markup *and* fragment with the *same* id fails with misleading exception message.

Exception message:
The component(s) below failed to render. Possible reasons could be that: 1) you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered), 2) if your components were added in a parent container then make sure the markup for the child container includes them in <wicket:extend> ... and list of component id's from fragment multiplied by amount of rows in DataTable

Cause: The markup of the component is used by the fragment.",,,,,,,,,,,,,,,,,,,,,,01/Mar/13 06:05;kiakimov;wicket-fragment-test.7z;https://issues.apache.org/jira/secure/attachment/12571546/wicket-fragment-test.7z,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-02-27 11:10:15.376,,,no_permission,,,,,,,,,,,314864,,,Thu Nov 07 08:50:12 UTC 2013,,,,,,0|i1ic13:,315208,,,,,,,,27/Feb/13 11:10;mgrigorov;Please provide a quickstart application that demonstrates the problem.,"01/Mar/13 06:05;kiakimov;Problem is deeper than I think before - exception raised when fragment has same name as component on ancestor page.
Test sources attached, and may be it wasnt broken in 6.4 as I pointed in bug, may be the problem is older ...
Nevertheless if it is limitation of Wicket it would be nice to see more clean exception, cause it's hard to locate such troubles in big pages with deep inheritance.",01/Mar/13 06:05;kiakimov;2 wicket pages with component and fragment,07/Nov/13 08:50;svenmeier;FragmentMarkupSourcingStrategy fails early now if fragment markup is no fragment tag,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester does not set submitting component.,WICKET-5081,12635585,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,ogalimov,ogalimov,06/Mar/13 15:23,17/Sep/13 13:25,13/Mar/19 23:17,10/May/13 10:39,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.8.0,7.0.0-M1,,wicket,,,,,,,0,,,,,,,"When testing Form#findSubmittingButton() does not behave correctly, because the submitting component is not set in the FormTester. Because of this the behavior in test and at runtime is not the same. This bug is new to Wicket 6. In Wicket 4 the test worked as expected.

There was some discussion on this topic in this thread: http://apache-wicket.1842946.n4.nabble.com/AjaxRequestAttributes-setSubmittingComponentName-td4655895.html 

",,,,,,,,,,,,,,,,,,,,,,07/May/13 09:39;ogalimov;myproject.zip;https://issues.apache.org/jira/secure/attachment/12582068/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-04-26 15:28:00.395,,,no_permission,,,,,,,,,,,316078,,,Fri May 10 10:39:40 UTC 2013,,,,,,0|i1ijif:,316421,,,,,,,,"26/Apr/13 15:28;mgrigorov;Hi,

Please attach a quickstart application with test case.
I will gladly debug and improve this.
Thanks!",07/May/13 09:40;ogalimov;Test project attached. The last two tests fail although I would expect them to work.,"10/May/13 10:39;svenmeier;The owning component of the behavior is now marked as the submiiter.

Thanks Oleg!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent use of generics in sorting APIs,WICKET-4535,12554126,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jesselong,jesselong,07/May/12 08:44,13/Sep/13 08:00,13/Mar/19 23:17,21/Jun/12 10:35,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta2,,,wicket-extensions,,,,,,,0,,,,,,,"The Sort APIs use very generics inconsistently. Classes like SortableDataProvider, ISortState, SortParam etc do not all uniformly cater for sort properties other than string. There is a lot of unchecked casting, which is not really required, if generics were used across the board.

Fixing this will probably cause API changes for 6.",,,,,,,,,,,,,,,,,,,,,,07/May/12 09:03;jesselong;WICKET-4535-1.patch;https://issues.apache.org/jira/secure/attachment/12525817/WICKET-4535-1.patch,07/May/12 10:50;jesselong;WICKET-4535-2.patch;https://issues.apache.org/jira/secure/attachment/12525829/WICKET-4535-2.patch,07/May/12 15:48;jesselong;WICKET-4535-3.patch;https://issues.apache.org/jira/secure/attachment/12525865/WICKET-4535-3.patch,07/May/12 16:04;jesselong;WICKET-4535-4.patch;https://issues.apache.org/jira/secure/attachment/12525866/WICKET-4535-4.patch,06/Jun/12 16:36;jesselong;WICKET-4535-5.patch;https://issues.apache.org/jira/secure/attachment/12531121/WICKET-4535-5.patch,05/Jun/12 07:38;jesselong;myproject.zip;https://issues.apache.org/jira/secure/attachment/12530910/myproject.zip,,,6.0,,,,,,,,,,,,,,,,,,,2012-06-21 09:53:13.006,,,no_permission,,,,,,,,,,,238351,,,Fri Sep 13 07:59:23 UTC 2013,,,,,,0|i0k8m7:,116213,,,,,,,,"07/May/12 08:56;jesselong;Basically, it all boils down to ISortState being generic. So many things make assumptions about ISortState being ISortState<String>","07/May/12 09:03;jesselong;WICKET-4535-1.patch

Initial work on adding generics for the Sort APIs. I have made all sort fields must extends Serializable, which makes sense to me.

I have made ISortableDataProvider and ISortableTreeProvider implement ISortableStateLocator<String> (ie. String type sort properties by default). We must introduce a new type parameter to these classes to allow arbitrary sort fields. I would recommend it.

I have not fxes HeadersToolbar and AjaxFallbackHeadersToolbar, but changing these requires IColumn to change as well, allowing IColumn to return the generic sort property type in getSortProperty(). I would actually recommend these changes, but it should probably be debated first.","07/May/12 10:50;jesselong;WICKET-4535-2.patch

New patch, may have some improvements on the first patch.

Also contains changes to SortableDataProvider and friends to take type parameter for sort property. This requires changes to DataTable TableTree etc, which I have implemented (Adding type parameter for sort property). Also touched IColumn.

I have left the DefaultDataTable, and the tree equivalent as having the sort property type of String (default implementation does not have so many API changes and type params).

I have updated wicket-devutils and wicket-examples for the changes.

I have tried to add @Override to all methods needing it in all files I have touched. (That's why there are so many changes just adding @Override).

In wicket-examples, I added generics where they were missing for that parts of the code I touched, and the classes those parts used.

I removed Removed SortableTreeProvider#setSortState() see https://issues.apache.org/jira/browse/WICKET-3580 basically, it does not make sense to modify the sort state itself, because the data/tree provider is coded to use just one type of ISortState it knows about. In fact, that implementation failed is the ISortState was not SingleSortState, and SingleSortState is mutable, so there is no need to set it.

This is obviously not a small patch, and it introduces a lot of API changes. I'm sure a lot of people will complain about the introduction of second type parameters for many of the types. That's why I left the DefaultDataTable etc as DataTable<T, String>.

I dont think we can go middle road on this one. We must either implement the generics correctly (as I hope I have done with this patch), or remove the type parameter from ISortState, and just use String. 

ISortState is either parameterizable, or it isn't. We must make that decision. If it is to be parameterizable, then I think this patch is needed. If not, then we must remove the half implemented parameterization for ISortState and all its uses.",07/May/12 15:48;jesselong;Smaller patch just removing the type parameters to ISortState and friends. This is probably the easiest and most sensible way for wicket 6.,07/May/12 16:04;jesselong;Apparently git diff works a whole lot better than git status for generating patches :-),"05/Jun/12 07:38;jesselong;The problem is not yet solved. OrderByLink still makes assumptions about ISortState<String>.

Please see attached quickstart. This is a simple inplementation of ISortableDataProvider using integers to sort arrays of strings by index. Throws cast exception every time.","06/Jun/12 16:36;jesselong;WICKET-4535-5.patch

This fixes my issue for 6.0.0-beta2. Also included some javadoc fixes.

Also added version for archetype extension in quickstart pom. I cant build wicket without that... maven 3.0.3","21/Jun/12 09:53;mgrigorov;The CssProvider deals with the value of the CSS class, so it could be only a String, I think.
I'll try your quickstart to see why it fails with ClassCastException.",21/Jun/12 10:35;mgrigorov;Patch WICKET-4535-5.patch is applied. Thanks!,"12/Sep/13 13:57;betlista;Just wondering is there a real-life example in which to use something else than String? There was example (if I understood it well) with int as index...

Let say I have object O with array arr and I want to sort by second element in that array. I'd simply use property arr[1] and I'm done, or I missed something?","12/Sep/13 15:46;jesselong;Hi Betlista,

Originally, I was actually in favor of just standardizing on Strings, but now that sort parameters are part of Wicket, I make heavy use of them.

This is how I use it: I have Field<R, T> objects. These objects describe a field that is either in a table of type R, or reachable from a R record via joins. Each sortable column returns a Field<R, T> as sort property. My ISortableDataProvider is a ISortableDataProvider<R, Field<R, T>> and returns R records representing a row in the R table. Each column then uses its Field object to retrieve and render the data for that column from the R record - the type of the data in the column is T. When sorting, the the ISortableDataProvider is given the Field object for the column selected, and it uses that to generate the correct SQL joins and ""ORDER BY"" phrase. All my paging, filtering and ordering is done by the database. IDataProvider#size() is implemented as a ""SELECT COUNT(*) ..."" query.","13/Sep/13 07:59;betlista;I'll have to check your patches precisely. Your usage seems valid to me. I got here, because I reported WICKET-5348 where IColumn changed from IColumn<T> to IColumn<T, S> and it seems to me (according to your description), that T = S. It seems to me, that while I want DataTable<ROW> - getColumns() returns list of IColumn<ROW, COLUMN> while it should be IColumn<COLUMN> principially.

Now, when I checked Wicket sources I found I got confused with parameter misuse in IColumn (PropertyColumn) and PropertyModel - in IColumn<T> (old version) T is type of row, while in PropertyModel<T> T is type of ""column"".",,,,,,,,,,,,,,,,,,,,,,,,,,,
Page parameters not working with CryptoMapper,WICKET-4865,12616068,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jesselong,jesselong,14/Nov/12 14:28,02/Sep/13 12:13,13/Mar/19 23:17,15/Nov/12 08:22,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.3.0,,,wicket,,,,,,,0,,,,,,,"When CryptoMapper is used, page parameters do not work. This is because the incorrect request is set in the request cycle. The incorrect request contains the encrypted url, where the page parameters are encoded into the url segments. When the CryptoMapper maps a url to a request handler, it should set the request to the correct request when the request handler is selected.

This was reported on the users@ list, but I have also fallen victim to it when getting urlFor(resourceReference, pageParameters) and the pageParameters not comming out on the other end.

See:
http://mail-archives.apache.org/mod_mbox/wicket-users/201211.mbox/%3C50991F74.3050605@unknown.za.net%3E
https://github.com/jesselong/wicket/commits/for-apache-master-pr-4 (3 commits)",,,,,,,,,,,,,,,,,,,WICKET-4923,,,14/Nov/12 14:44;jesselong;WICKET-4865.patch;https://issues.apache.org/jira/secure/attachment/12553498/WICKET-4865.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-14 14:34:56.756,,,no_permission,,,,,,,,,,,257769,,,Mon Sep 02 12:13:39 UTC 2013,,,,,,0|i0kjw7:,118040,,,,,,,,14/Nov/12 14:34;mgrigorov;Please provide a patch as attachment and this can be fixed for 6.3.0 (planned for Nov 16).,14/Nov/12 14:44;jesselong;WICKET-4865.patch - patch as requested.,"14/Nov/12 16:26;svenmeier;I don't understand the problem, Page parameters work fine here:
They are correctly decoded by CryptoMapper and then passed as #request.cloneWithUrl(url) to e.g. BookmarkableMapper.","15/Nov/12 08:22;mgrigorov;The patch is applied with minor improvements. Please test it today if you can.
Additionally I see there is no test for the described issue in the mailing list. It would be good to have one to prevent any regressions in the future.

Thanks!","15/Nov/12 08:53;jesselong;@Sven - It works for request handlers that are passed the page parameters in the constructor. The API of request handler does not require this, it should be able to work with the request cycle provided. Without the patch, the request cycle provided to request handler is invalid.

@Martin - yes, your patch looks better than mine. Thank you. (There really should be a wicket 7 branch so we can start implementing new features and remove deprecated stuff on it in the mean time).

I will test shortly.",02/Sep/13 12:13;mgrigorov;[~jesselong]can you please take a look at WICKET-5326 ?  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
compareTo methods of Actions in BufferedWebResponse violate Comparable contract,WICKET-4956,12626517,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,papegaaij,papegaaij,papegaaij,08/Jan/13 09:07,02/Sep/13 12:00,13/Mar/19 23:17,08/Jan/13 19:03,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,,,,,,,"I've never seen this result in an exception so far, but the implementations of the methods is wrong and will fail on java 7 if multiple action instances of the same class are sorted using Collections.sort. The sorting should return 0 if instances are of the same type.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-09-02 11:39:51.914,,,no_permission,,,,,,,,,,,303123,,,Mon Sep 02 12:00:22 UTC 2013,,,,,,0|i1784f:,250284,,,,,,,,"08/Jan/13 19:03;papegaaij;I've managed to trigger the 'Comparison Method violates its general contract' on Java 7 by adding 100,000 random items, but only once. The new Tim-sort is only used on over 32 items and the error is only triggered under very specific circumstances, so it will probably never fail on the actions in BufferedWebResponse, however to be on the safe side, I did fix the compareTo methods to sort the actions in 3 categories.","02/Sep/13 11:39;shayy;Looks like we are hitting this bug also in wicket 1.5.3 but on a different place (looks like you guys fixed it there as well) in the CompoundRequestMapper class.
Is there any workaround for that? It's impossible to upgrade from 1.5.3 to 6.5.0 without breaking something like 80% of the web application.","02/Sep/13 11:45;mgrigorov;Please create a new ticket with a list of the commits that you'd like to be downported to 1.5.x branch.
Upgrading to 1.5.11 should be easier for you. ","02/Sep/13 12:00;shayy;Looks like our case if fixed in WICKET-4217 (which is in 1.5.4 so we could try that)
However, since this issue appears intermittently, I'm not sure how to reproduce it, any pointers?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextField removes DropDownChoice from Page,WICKET-4893,12617799,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,martin wischnewski,martin wischnewski,27/Nov/12 14:43,26/Jun/13 08:08,13/Mar/19 23:17,04/Apr/13 09:16,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-extensions,,,,,,,0,,,,,,,"Following Situation with Internet Explorer 8:

I add two Components on a Page.

A AutoCompleteTextField and beneath a DropDownChoice

If i type something into the AutoCompleteTextField, a suggestionlist appears and hides the DropDownChoice.
The DropDownChoice disappears from the Page and is not visible anymore.

Note: In Firefox and Chrome the DropDownChoice doesn't disappear from the page.",Internet Explorer 8,,,,,,,,,,,,,,,,,,,,,27/Nov/12 14:44;martin wischnewski;AutoComplete.zip;https://issues.apache.org/jira/secure/attachment/12555012/AutoComplete.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-27 22:27:17.521,,,no_permission,,,,,,,,,,,292362,,,Thu Apr 04 09:16:05 UTC 2013,,,,,,0|i0rxg7:,161063,,,,,,,,"27/Nov/12 22:27;bitstorm;The problem seems to be function hideShowCovered in wicket-autocomplete.js. The issue affects also Opera browser. I don't have a clue about what this function should do, but removing it seems to solve the issue.
I've tested this solution with the autocomplete example and with  Firefox 17, Chromium 20, Opera 12.02 and IE 8 under Windows XP.","28/Nov/12 07:30;svenmeier;Read here why the <select>s are removed:

http://stackoverflow.com/questions/7937/solve-the-select-overlap-bug-in-ie6

You can configure this with AutoCompleteSettings#useHideShowCoveredIEFix.

Apparently IE7 fixed this issue, so maybe this feature is no longer needed or we should change that settings to false by default.",28/Nov/12 08:33;martin wischnewski;Thank you for the quick note.,"28/Nov/12 08:35;mgrigorov;The answers in SO say that this is fixed in IE7 but the reporter says he sees it in IE8.

[~martin wischnewski]: can you confirm that useHideShowCoveredIEFix setting helps here ?","28/Nov/12 08:51;bitstorm;@Martin Grigorov
It's our original fix for IE6 (function hideShowCovered ) that is bugging the other browsers (Opera and IE > 6) . If we turn off hideShowCovered by default, all browsers will work fine except the lovely IE6.",28/Nov/12 08:54;mgrigorov;If this is the case then I'm all for removing this setting. IE6 is not supported anymore.,"28/Nov/12 09:23;martin wischnewski;For the sake of completeness.

If I set useHideShowCoveredIEFix to false, it works fine with IE8.
",28/Nov/12 09:30;mgrigorov;I'm +1 to remove this setting and all related code with it.,28/Nov/12 10:25;svenmeier;+1 to remove this feature in Wicket 7,"28/Nov/12 10:58;bitstorm; If it was stated somewhere that Wicket 6.0 doesn't support IE6 I agree with Martin, otherwise I would prefer to postpone this change to Wicket 7 as suggested by Sven.","20/Feb/13 10:21;bensteinert;The reason is the following if clause inside hideShowCovered():
if (popupVisible === 0 || (leftX>acRightX) || (rightX<acLeftX) || (topY>acBottomY) || (bottomY<acTopY))

The method argument popupVisible is a boolean actually (lines 424 and 452), but the comarison does not do a type conversion (=== 0 is always false).
To fix this, just change that clause to (=== false).
But complete removal is also fine ;) +1","20/Feb/13 12:43;mgrigorov;Thanks Benjamin!
I've committed a fix in master. Please test it.","04/Apr/13 09:16;svenmeier;With Martin's commit AutoCompleteSettings#useHideShowCoveredIEFix is working again.

WICKET-5130 will keep track of removing this setting in Wicket 7.",,,,,,,,,,,,,,,,,,,,,,,,,,
EnclosureContainer: configure() should be called on the child component before calling isVisible on it,WICKET-3398,12496939,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,ulrikem,ulrikem,27/Jan/11 13:26,05/Jun/13 08:27,13/Mar/19 23:17,27/Jan/11 16:09,1.4.15,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,,,,0,,,,,,,"As advised by the javadoc for Component#onConfigure, we switched to this mechanism instead of overriding isVisible/isEnabled when they contain extensive logic.

Now if we do that for a child component that will control the visibility of the EnclosureContainer, EnclosureContainer#isVisible directly calls through to #isVisible on the child component, and this may happen before #onConfigure on the child ever gets called. In our situation where we set the visibility in #onConfigure, the result of #isVisible may change during the request cycle, which may lead to undesirable and confusing results.

The javadoc for Component#configure states that for linked components, #configure should be called on the 'other' component. Applied to EnclosureContainer, I think the correct way to handle this is that EnclosureContainer#onConfigure must be overridden in order to call child.configure(). This way, any call to #isVisible will only occur after #onConfigure has been called, the sequence is correct again.",,,,,,,,,,,,,,,,,,,WICKET-5218,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-27 16:09:22.001,,,no_permission,,,,,,,,,,,204193,,,Fri Jan 28 07:34:05 UTC 2011,,,,,,0|i0kb3r:,116616,,,,,,,,"27/Jan/11 16:09;ivaynberg;fixed, thanks.","27/Jan/11 17:20;hudson;Integrated in Apache Wicket 1.4.x #406 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/406/])
    Issue: WICKET-3398
","28/Jan/11 07:27;ulrikem;Thanks for the fix.
Only a detail but wouldn't it have been cleaner to override onConfigure() in EnclosureContainer and call child.configure() from there (instead of from isVisible()), since one call to child.configure() is certainly enough.","28/Jan/11 07:34;ivaynberg;wicket keeps track if configure() has been called, and wont invoke it more then once per request.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TabbedPanel - IModel<?> initModel(),WICKET-4749,12606072,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,derethas,derethas,04/Sep/12 12:47,02/May/13 02:30,13/Mar/19 23:17,05/Sep/12 17:34,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket-extensions,,,,,,,0,,,,,,,"TabbedPanel added on panel which have CompoundPropertyPanel get Exception.

Problem is in TabbedPanel method IModel<?> initModel().

@Override
	protected IModel<?> initModel()
	{
		IModel<?> model = super.initModel();
		if (model == null)
		{
			model = new Model<Integer>(-1);
		}

		return model;
	}

I think problem is the line with IModel<?> model = super.initModel();

When the tabbed panel is trying to get a model but found null then the model is trying to create. Call the initModel () and the calling super.initModel () executes initialization model ancestors. Which is the problem. Method for initModel () in the Component starts to look at his parents and returns CompoundPropertyModel from the panel where TabbedPanel added. And then isnt created new Model<Integer>(-1) which tabbed panel really need.

When I override method initModel() from TabbedPanel again and delete line with super.initModel(), everything works fine.",,,,,,,,,,,,,,,WICKET-4593,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-04 12:52:58.904,,,no_permission,,,,,,,,,,,252551,,,Wed Sep 05 17:34:26 UTC 2012,,,,,,0|i0cuqn:,72924,,,,,,,,04/Sep/12 12:52;mgrigorov;Please paste the exception.,"04/Sep/12 18:41;svenmeier;In 6.x TabbedPanel is improved to be able to bind it to your own models.

You can provide a model to the constructor if you don't want the TabbedPanel to lookup its model from a possibly parental CompoundPropertyModel.

Alternatively we might change TabbedPanel to behave like Button, which supports a model but explicitly disables working with CompoundPropertyModel, see Button#initModel() javadoc.","04/Sep/12 21:47;derethas;Exception is about looking variable which have name like TabbedPanel id added in panel where is CompoundPropertyModel.

I think the alternative with Button#initModel() will be better. This model isn't for data but for working TabbedPanel and try to find it in CompoundPropertyModel from parent will be rarely situation. At least what I think.",05/Sep/12 17:34;svenmeier;Changed as suggested: don't use model from parent,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TextField ingnores convertEmptyInputStringToNull = true property when the String type is set,WICKET-3304,12494479,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pedrosans,pedrosans,03/Jan/11 10:15,02/May/13 02:29,13/Mar/19 23:17,08/Jan/11 21:43,1.4.15,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"I posted this patch on WICKET-3269, but the discussion on this ticket is about an improvement request, not a bug. I opened this one for the bug.",,,,,,,,,,,,,,,WICKET-3609,,,,,,WICKET-606,03/Jan/11 11:28;pedrosans;WICKET-3304.patch;https://issues.apache.org/jira/secure/attachment/12467313/WICKET-3304.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204111,,,2011-01-03 10:15:33.0,,,,,,0|i0kbcn:,116656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using PopupSettings creates page maps early,WICKET-3109,12477487,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pedrosans,jthomerson,jthomerson,15/Oct/10 17:32,02/May/13 02:28,13/Mar/19 23:17,27/Jan/11 17:20,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,,,wicket,,,,,,,0,,,,,,,"See WICKET-3108 for a description of the background (and a quickstart to demonstrate)

The issue here is that whenever you create a link and add PopupSettings to it, it creates a page map.  The page map shouldn't be created until someone actually clicks the link, though.  The page map name will need to go in the URL, but the page map can be lazy-created.",,,,,,,,,,,,,,WICKET-3377,,,,,,,,29/Nov/10 19:42;pedrosans;WICKET-3109.patch;https://issues.apache.org/jira/secure/attachment/12464892/WICKET-3109.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-15 17:36:19.096,,,no_permission,,,,,,,,,,,203933,,,Thu Jan 27 20:14:35 UTC 2011,,,,,,0|i0kbs7:,116726,,,,,,,,"15/Oct/10 17:36;ivaynberg;its not that popupsettings creates it, its that other components such as link call getpagemap on it. we should add getpagemapname() to popupsettings and refactor those components to use that instead since the only reason they call getpagemap is to get the name.",29/Nov/10 19:42;pedrosans;Patch deprecating the PopupSettings#getPageMap and using getPageMapName instead.,"27/Jan/11 17:28;ivaynberg;pedo, i think popupsettings should be changed to take pagemapname instead of pagemap as well. this way users do not need to create pagemaps for every link they want to popup.","27/Jan/11 17:36;pedrosans;It is currently taking one when an window name is set. But it is not easy to figure out since the javadoc don't explain it.
By change you mean deprecate the API receiving an page mas as parameter and provide a new one to the page map name, or we can just remove the old API in benefit of the new one?","27/Jan/11 18:27;hudson;Integrated in Apache Wicket 1.4.x #407 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/407/])
    avoiding early page maps creation when link has an popup setting
Issue: WICKET-3109
","27/Jan/11 20:14;hudson;Integrated in Apache Wicket 1.4.x #409 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/409/])
    restoring the PopupSettings(IPageMap pageMapName, final int displayFlags) constructor as deprecated
Issue: WICKET-3109
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename Component#renderHead(HtmlHeaderContainer),WICKET-4964,12626960,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,cmenzel,cmenzel,10/Jan/13 15:29,01/May/13 12:07,13/Mar/19 23:17,01/May/13 12:07,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7.0.0-M1,,,wicket,,,,,,,0,,,,,,,"It seems it happens somewhat often that users mistakenly override renderHead(HtmlHeaderContainer) rather than renderHead(IHeaderResponse). Code completion makes this a very easy mistake.

I propose renaming the somewhat-internal method renderHead(HtmlHeaderContainer) to renderIntoPageHeaderContainer or something like that. We can't just make the method package private, since it is needed by Panel, Border and FormComponentPanel to render the header sections of their associated markup.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-10 15:32:23.526,,,no_permission,,,,,,,,,,,303652,,,Wed May 01 12:07:42 UTC 2013,,,,,,0|i17dhj:,251154,,,,,,,,10/Jan/13 15:32;mgrigorov;It would be even clearer if the method name starts with internal**().,"10/Jan/13 16:17;cmenzel;True, but is it really completely internal? It seems to me that any (custom) component that somehow brings its own markup (like FormComponentPanel does) would need this.","01/May/13 12:07;mgrigorov;Renamed it to #internalRenderHead(). 
If anyone has a better name before 7.0.0 please suggest it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilterToolbar.html contains javascript that is used elsewhere,WICKET-5080,12635579,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,ogalimov,ogalimov,06/Mar/13 15:06,11/Mar/13 10:38,13/Mar/19 23:17,11/Mar/13 10:37,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-extensions,,,,,,,0,,,,,,,The file FilterToolbar.html has some JavaScript included. This is inconvenient as we have written our own FilterToolbar with its own markup and still need the JavaScript. So I propose to externalize the JavaScript as a ResourceReference. I have included a patch as a proposal.,,,,,,,,,,,,,,,,,,,,,,06/Mar/13 15:06;ogalimov;0001-patch.patch;https://issues.apache.org/jira/secure/attachment/12572321/0001-patch.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-03-11 10:37:19.489,,,no_permission,,,,,,,,,,,316072,,,Mon Mar 11 10:38:53 UTC 2013,,,,,,0|i1ijh3:,316415,,,,,,,,11/Mar/13 10:37;svenmeier;focus handling is now moved to FilterForm.,"11/Mar/13 10:38;svenmeier;I've left FilterForm#JS private, since this is what most other JavaScript components in wicket do. If you need the js file, you can easily reuse it with your own ResourceReference. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlDecoder should log a message when invalid input is provided,WICKET-4803,12610355,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,johanh@dns.be,johanh@dns.be,04/Oct/12 16:35,04/Mar/13 08:32,13/Mar/19 23:17,20/Feb/13 08:14,1.5.8,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.22,1.5.10,6.7.0,wicket,,,,,,,2,,,,,,,"In the class: org.apache.wicket.protocol.http.WicketURLDecoder there are two IllegalArgumentException which should be wrapped in WicketRuntimeException, otherwise they are caught by the exception handler form the servlet container (jetty, tomcat, ...) which then uses their http 500 error code configuration instead of the exception handling of wicket.

Wrapping them would be good for consistency and help manage runtime exceptions. 
These are the two exceptions:
throw new IllegalArgumentException(""URLDecoder: Incomplete trailing escape (%) pattern""); 
throw new IllegalArgumentException(""URLDecoder: Illegal hex characters in escape (%) pattern - "" + e.getMessage()); ",,,,,,,,,,,,,WICKET-4493,,,,,,,,,04/Oct/12 16:36;johanh@dns.be;WICKET-4803-quickstart-testcase-and-example.zip;https://issues.apache.org/jira/secure/attachment/12547779/WICKET-4803-quickstart-testcase-and-example.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-16 09:12:09.837,,,no_permission,,,,,,,,,,,240484,,,Mon Mar 04 08:32:29 UTC 2013,,,,,,0|i011xz:,4081,,,,,,,,"16/Oct/12 09:12;mgrigorov;There is a problem with your test. It expects that both WicketRuntimeException is being thrown and that InternalErrorPage is rendered. Those are mutual exclusive.

Some details:

The stack trace is:
ain@1, prio=5, in group 'main', status: 'RUNNING'
	  at org.apache.wicket.request.UrlDecoder.decode(UrlDecoder.java:89)
	  at org.apache.wicket.request.UrlDecoder.decode(UrlDecoder.java:76)
	  at org.apache.wicket.request.Url.decodeParameter(Url.java:601)
	  at org.apache.wicket.request.Url.parseQueryParameter(Url.java:108)
	  at org.apache.wicket.request.Url.parse(Url.java:243)
	  at org.apache.wicket.util.tester.BaseWicketTester.executeUrl(BaseWicketTester.java:2675)
	  at be.dns.wicket.TestHomePage.homepageRendersSuccessfullyPageParamWithPercentSignIncorrectUsage(TestHomePage.java:48)
.....

WicketRuntimeException is in wicket-core.jar. In the stack trace the only class from -core is BaseWicketTester. Url and UrlDecoder are in wicket-request which do not see WicketRuntimeException.
Even re-working BaseWicketTester to handle this it will be a change in the behavior which will affect many applications. Currently they may expect that an exception is being thrown in some erroneous case but with this change there wont be an exception anymore but normal return with lastRenderedPage == InternalErrorPage.
I agree that InternalErrorPage is more correct but it is a bit late to change this behavior.","11/Feb/13 16:01;jriehn;Hej Martin,

maybe the problem is not well demonstrated. this issue can be reconstructed using the wicket 1.5.9 quickstart [http://wicket.apache.org/start/quickstart.html]. An invalid request like ""http://localhost:8080/?%%%"" throws the following exception:

java.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: ""%%""
	at org.apache.wicket.request.UrlDecoder.decode(UrlDecoder.java:162)
	at org.apache.wicket.request.UrlDecoder.decode(UrlDecoder.java:76)
	at org.apache.wicket.request.Url.decodeParameter(Url.java:601)
	at org.apache.wicket.request.Url.parseQueryParameter(Url.java:104)
	at org.apache.wicket.request.Url.parse(Url.java:243)
	at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getContextRelativeUrl(ServletWebRequest.java:222)
	at org.apache.wicket.protocol.http.servlet.ServletWebRequest.<init>(ServletWebRequest.java:126)
	at org.apache.wicket.protocol.http.servlet.ServletWebRequest.<init>(ServletWebRequest.java:83)
	at org.apache.wicket.protocol.http.WebApplication.newWebRequest(WebApplication.java:413)
	at org.apache.wicket.protocol.http.WebApplication.createWebRequest(WebApplication.java:458)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:183)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:244)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1326)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:940)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:874)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:349)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:904)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:565)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:217)
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:50)
	at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:245)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
	at java.lang.Thread.run(Unknown Source)

Is there any advice on how to handle such invalid requests?","19/Feb/13 15:20;mgrigorov;I'm not sure Wicket can do something about this.

Issuing http://localhost:8080/%%%% (note the missing '?') leads to :
java.lang.NumberFormatException: %%
	at org.eclipse.jetty.util.TypeUtil.parseInt(TypeUtil.java:320)
	at org.eclipse.jetty.http.HttpURI.getDecodedPath(HttpURI.java:560)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:440)
	at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:884)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:938)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:630)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)
	at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:603)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:538)
	at java.lang.Thread.run(Thread.java:662)

i.e. again error 500.

The only way to show a Wicket page as a handler is to add:
 <error-page>
                <error-code>500</error-code>
                <location>/error</location>
        </error-page>

to web.xml and 
#mountPage(""error"", getApplicationSettings().getInternalErrorPage());","19/Feb/13 16:47;jriehn;you figured out an specific web container issue. using a tomcat, you'll receive a bad request (http-status 400). the NumberFormatException, respectively the IllegalArgumentException, could be detected by wicket.
sorry, that i lead you astray - it's not the question, how to offer an error page for this behavior, but whether this behavior of wicket is desired.","19/Feb/13 16:56;mgrigorov;Well, it has been like this since several years.
I'm not sure whether this behavior is correct. I'll test with pure servlet to see what is the behavior.

Maybe we should change this to log a warning instead of throwing this unhandleable exception.","19/Feb/13 20:01;mgrigorov;With Servlet it is the same:
 - Jetty throws exception:
java.lang.IllegalArgumentException: !hex:25
	at org.eclipse.jetty.util.TypeUtil.convertHexDigit(TypeUtil.java:364)
	at org.eclipse.jetty.util.UrlEncoded.decodeUtf8To(UrlEncoded.java:329)
	at org.eclipse.jetty.http.HttpURI.decodeQueryTo(HttpURI.java:638)
	at org.eclipse.jetty.server.Request.extractParameters(Request.java:213)
	at org.eclipse.jetty.server.Request.getParameter(Request.java:679)
	at com.example.EchoServlet.handle(EchoServlet.java:29)
	at com.example.EchoServlet.doGet(EchoServlet.java:24)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:565)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)
	
- Tomcat does nothing, just ignores the broken part of the query string

The requested url is: http://localhost:8080/echo?a=c%%%b and Tomcat says that the value for parameter 'a' is null.","20/Feb/13 08:14;mgrigorov;From now on an info message will be logged and the problematic % character will be ignored.

The problem with the thrown exception is that the application logs can be easily flooded by an attacker.","20/Feb/13 10:08;jriehn;Hej Martin,

this is also my preferred solution. Thank you!

Regards,

Jan",04/Mar/13 08:32;mgrigorov;Here is a link to a discussion in Tomcat dev@ mailing list about changing this behavior: http://markmail.org/thread/aymssrjhextkraip,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EnclosureHandler ignores wicket:xyz elements as children,WICKET-5061,12634392,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,cleiter,cleiter,27/Feb/13 11:47,27/Feb/13 13:53,13/Mar/19 23:17,27/Feb/13 13:53,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket,,,,,,,0,,,,,,,"This doesn't work now:
<wicket:enclosure>
  <wicket:container wicket:id=""id"" />
</wicket:enclosure>

because EnclosureHandler ignores wicket tags when it looks for children. I don't know what the rational was when doing this.

I'll attach a proposed patch with a new testcase. It changes the current logic how to look for children. This may contain errors or may otherwise not be a good idea. Nonetheless all tests succeed and it works within my applications.",,,,,,,,,,,,,,,,,,,,,,27/Feb/13 11:48;cleiter;WICKET-5061.patch;https://issues.apache.org/jira/secure/attachment/12571182/WICKET-5061.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-02-27 13:53:44.63,,,no_permission,,,,,,,,,,,314885,,,Wed Feb 27 13:53:44 UTC 2013,,,,,,0|i1ic5r:,315229,,,,,,,,27/Feb/13 13:53;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlResourceReference generates broken relative URLs,WICKET-4907,12618702,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,aka,aka,04/Dec/12 08:21,27/Feb/13 09:46,13/Mar/19 23:17,27/Feb/13 09:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,,,,,,,,0,,,,,,,"I am trying to render a reference to a Javascript library which is stored somewhere in my webapp directory using UrlResourceReference:

public void renderHead(IHeaderResponse response) {
        super.renderHead(response);
        response.render(JavaScriptHeaderItem.forReference(new UrlResourceReference(Url.parse(""public/scripts/jquery-ui-1.8.6.custom.min.js"")) .setContextRelative(true)));
}

This does not work, because our wicket servlet is using a prefix (""nui""), and thus the URL to the resource (corrently) contains "".."" but this is escaped for some reason to ""::"".

So the URL generated by the ResourceReference is e.g. ""http://localhost:8080/app/nui/::/public/scripts/jquery-ui-1.8.6.custom.min.js"" leading to a 404. The correct URL would be ""http://localhost:8080/app/nui/../public/scripts/jquery-ui-1.8.6.custom.min.js"" As far as I can see, ParentPathReferenceRewriter does the escaping. ",,,,,,,,,,,,,,,,,,,,,,22/Feb/13 13:55;mgrigorov;WICKET-4907.patch;https://issues.apache.org/jira/secure/attachment/12570471/WICKET-4907.patch,25/Feb/13 18:49;bitstorm;urlRenderInterface.patch;https://issues.apache.org/jira/secure/attachment/12570836/urlRenderInterface.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-12-05 09:55:18.423,,,no_permission,,,,,,,,,,,295911,,,Wed Feb 27 09:46:12 UTC 2013,,,,,,0|i142xj:,231937,,,,,,,,"05/Dec/12 09:55;mgrigorov;See attachment 4903.tgz in WICKET-4903.
Is this what you need as final result ?","05/Dec/12 11:00;aka;Yes, this is excactly my use case.

You can reproduce the behaviour i described if you change the web.xml line 30 of the quickstart to:

<url-pattern>/context/*</url-pattern>


Now the a.js incorrectly resolves to http://localhost:8080/context/js/a.js

My expectation would be that setting setContextRelative(true) on TestResourceReference would solve the issue, but then it generates a very strange URL: ""../../::/::/::/js/a.js""


",27/Feb/13 09:46;mgrigorov;UrlResourceReference has been improved to render its url as is. it wont be recalculated against the base url (the currently rendered page url). ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""random"" parameters is now ""_"" with jQuery Ajax",WICKET-5053,12633628,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,svenmeier,svenmeier,22/Feb/13 14:59,22/Feb/13 18:35,13/Mar/19 23:17,22/Feb/13 18:35,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket,,,,,,,0,,,,,,,"With the switch to jQuery Ajax the former ""random"" parameter is named ""_"" now.

WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE still has the old name, thus AbstractBookmarkableMapper#cleanPageParameters() removes the wrong one.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,314123,,,Fri Feb 22 18:35:58 UTC 2013,,,,,,0|i1i7gn:,314468,,,,,,,,22/Feb/13 18:35;svenmeier;replace 'random' with '_',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket Session may be null in SessionBindingListener after deserialization,WICKET-5049,12633159,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,cleiter,cleiter,20/Feb/13 09:45,21/Feb/13 12:25,13/Mar/19 23:17,21/Feb/13 12:25,6.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.11,6.7.0,,wicket,,,,,,,0,,,,,,,"I got this exception when starting my wicket app:

10:00:24.879 [WARN ] qtp725811713-28 - o.e.j.server.AbstractHttpConnection - /
java.lang.NullPointerException: null
	at org.apache.wicket.session.HttpSessionStore$SessionBindingListener.valueUnbound(HttpSessionStore.java:469) ~[wicket-core-6.6.0.jar:6.6.0]
	at org.eclipse.jetty.server.session.AbstractSession.unbindValue(AbstractSession.java:519) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSession.clearAttributes(AbstractSession.java:370) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSession.doInvalidate(AbstractSession.java:337) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.HashedSession.doInvalidate(HashedSession.java:90) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSession.invalidate(AbstractSession.java:327) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSession.access(AbstractSession.java:283) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSessionManager.access(AbstractSessionManager.java:188) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:172) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.Server.handle(Server.java:368) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:932) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:994) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at java.lang.Thread.run(Thread.java:722) [na:1.7.0_13]

The line is: wicketSession.onInvalidate(); A simple null check should suffice.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-02-21 12:25:54.301,,,no_permission,,,,,,,,,,,313655,,,Thu Feb 21 12:25:54 UTC 2013,,,,,,0|i1i4kn:,314000,,,,,,,,"20/Feb/13 09:49;cleiter;Also happens later while the app is running:

10:48:31.704 [WARN ] HashSessionScavenger-0 - org.eclipse.jetty.server.session - Problem scavenging sessions
java.lang.NullPointerException: null
	at org.apache.wicket.session.HttpSessionStore$SessionBindingListener.valueUnbound(HttpSessionStore.java:469) ~[wicket-core-6.6.0.jar:6.6.0]
	at org.eclipse.jetty.server.session.AbstractSession.unbindValue(AbstractSession.java:519) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSession.clearAttributes(AbstractSession.java:370) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSession.doInvalidate(AbstractSession.java:337) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.HashedSession.doInvalidate(HashedSession.java:90) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.AbstractSession.timeout(AbstractSession.java:315) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.HashSessionManager.scavenge(HashSessionManager.java:322) ~[jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at org.eclipse.jetty.server.session.HashSessionManager$2.run(HashSessionManager.java:284) [jetty-all-server-8.1.9.v20130131.jar:8.1.9.v20130131]
	at java.util.TimerThread.mainLoop(Timer.java:555) [na:1.7.0_13]
	at java.util.TimerThread.run(Timer.java:505) [na:1.7.0_13]
",21/Feb/13 12:25;mgrigorov;SessionBindingListener is saved as an attribute in the http session. This way it is used without requiring a <listener> entry in web.xml of each app. The downside is that it may have been persisted with the sessions and after upgrade to Wicket 6.6.0/1.5.10 it wont have a reference to Wicket's Session.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
encodeUrl fails parsing jsessionid when using root context,WICKET-4877,12617299,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,seco,seco,22/Nov/12 09:21,09/Feb/13 15:06,13/Mar/19 23:17,22/Nov/12 13:59,1.5.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,,,,,,,,0,,,,,,,"We are using Selenium 2.26.0 to test our Wicket application, using Jetty 6.1.25 (also tried 7.0.0.pre5) and Firefox 12 as client browser.

With Wicket 1.5.8 everything worked fine but updating to 1.5.9 the following error occurs on first request:

java.lang.NumberFormatException: For input string: ""56704;jsessionid=t3j8z4tsuazh1jfbcnjr8ryg""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:458)
	at java.lang.Integer.parseInt(Integer.java:499)
	at org.apache.wicket.request.Url.parse(Url.java:195)
	at org.apache.wicket.request.Url.parse(Url.java:121)
	at org.apache.wicket.protocol.http.servlet.ServletWebResponse.encodeURL(ServletWebResponse.java:194)
	at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.encodeURL(HeaderBufferingWebResponse.java:161)
	at org.apache.wicket.request.cycle.RequestCycle.renderUrl(RequestCycle.java:524)
	at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:492)
	at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:477)
	at org.apache.wicket.Component.urlFor(Component.java:3319)
	at org.apache.wicket.markup.html.link.BookmarkablePageLink.getURL(BookmarkablePageLink.java:209)
	at org.apache.wicket.markup.html.link.Link.onComponentTag(Link.java:361)
	at org.apache.wicket.Component.internalRenderComponent(Component.java:2530)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1530)
	at org.apache.wicket.Component.internalRender(Component.java:2389)
	at org.apache.wicket.Component.render(Component.java:2317)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1428)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1592)
	at org.apache.wicket.Page.onRender(Page.java:907)
	at org.apache.wicket.markup.html.WebPage.onRender(WebPage.java:140)
	at org.apache.wicket.Component.internalRender(Component.java:2389)
	at org.apache.wicket.Component.render(Component.java:2317)
	at org.apache.wicket.Page.renderPage(Page.java:1035)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:118)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:246)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:167)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:784)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:304)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:227)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:244)

Using debugger, the encodeUrl method has variables 

fullUrl = http://localhost:56704
encodedFullUrl = http://localhost:56704;jsessionid=8kxeo3reannw1qjtxgkju8yiu

before the exception occurs. I believe this is related to https://issues.apache.org/jira/browse/WICKET-4645.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-22 13:59:35.221,,,no_permission,,,,,,,,,,,259512,,,Thu Nov 22 13:59:35 UTC 2012,,,,,,0|i0lq5b:,124887,,,,,,,,22/Nov/12 13:59;svenmeier;semicolon (;) starts segments if no slash is present,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette does not allow to turn off localization,WICKET-5029,12631396,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,ilgrosso,ilgrosso,08/Feb/13 08:20,08/Feb/13 13:28,13/Mar/19 23:17,08/Feb/13 08:51,1.5.9,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.6.0,,wicket-extensions,,,,,,,0,,,,,,,"WICKET-1982 introduced value localization in the Palette.

However, localization cannot be disabled; this was also reported in user ML [1].

[1] http://apache-wicket.1842946.n4.nabble.com/Palette-and-localization-td4495234.html",,,,,,,,,,,,,,,SYNCOPE-310,,,,,,,08/Feb/13 08:20;ilgrosso;WICKET-5029.patch;https://issues.apache.org/jira/secure/attachment/12568541/WICKET-5029.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2013-02-08 08:51:36.184,,,no_permission,,,,,,,,,,,311892,,,Fri Feb 08 13:28:30 UTC 2013,,,,,,0|i1htp3:,312238,,,,,,,,08/Feb/13 08:21;ilgrosso;The provided patch introduces a simple method for switching off the localization of values.,08/Feb/13 08:51;svenmeier;Overrideable methods are more in line with Wicket style,"08/Feb/13 09:08;ilgrosso;Oh sorry, I haven't considered this.
Thanks for fixing.","08/Feb/13 13:28;hudson;Integrated in Syncope-1_0_X #133 (See [https://builds.apache.org/job/Syncope-1_0_X/133/])
    [SYNCOPE-310] Workaround waiting for WICKET-5029 availability (Revision 1443945)

     Result = SUCCESS
ilgrosso : 
Files : 
* /syncope/branches/1_0_X/console/src/main/java/org/apache/syncope/console/pages/panels/PolicyBeanPanel.java
* /syncope/branches/1_0_X/console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/AjaxPalettePanel.java
* /syncope/branches/1_0_X/console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/NonI18nPalette.java
* /syncope/branches/1_0_X/console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/SingleColumnPalette.java
* /syncope/branches/1_0_X/console/src/main/resources/org/apache/syncope/console/SyncopeApplication.properties
* /syncope/branches/1_0_X/console/src/main/resources/org/apache/syncope/console/SyncopeApplication_it.properties
* /syncope/branches/1_0_X/console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage.html
* /syncope/branches/1_0_X/console/src/main/resources/org/apache/syncope/console/pages/panels/PolicyBeanPanel.html
* /syncope/branches/1_0_X/console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/AjaxPalettePanel.html
* /syncope/branches/1_0_X/console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/NonI18nPalette.html
* /syncope/branches/1_0_X/console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/SingleColumnPalette.html
* /syncope/branches/1_0_X/console/src/main/webapp/img/left-icon.png
* /syncope/branches/1_0_X/console/src/main/webapp/img/right-icon.png
* /syncope/branches/1_0_X/console/src/test/java/org/apache/syncope/console/ConfigurationTestITCase.java
* /syncope/branches/1_0_X/console/src/test/java/org/apache/syncope/console/EditProfileTestITCase.java
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Global ajax event for precondition is not called,WICKET-5024,12630625,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mgrigorov,mgrigorov,04/Feb/13 11:27,06/Feb/13 13:24,13/Mar/19 23:17,06/Feb/13 13:24,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,"As described at https://cwiki.apache.org/confluence/display/WICKET/Wicket+Ajax#WicketAjax-GlobalAjaxcalllisteners Wicket notifies all global subscribers when Ajax call is being executed.

It seems '/ajax/call/precondition' is missing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,311121,,,2013-02-04 11:27:09.0,,,,,,0|i1hoy7:,311469,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CheckGroupSelector does not work in nested forms in modal windows,WICKET-4926,12623769,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,fieona,fieona,13/Dec/12 15:46,03/Feb/13 12:18,13/Mar/19 23:17,03/Feb/13 12:18,1.5.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.6.0,,wicket,,,,,,,0,,,,,,,"When you have a page with a <form><button that opens modal window><modalwindow></form>.
Inside that modalwindow I have a form as well. In that form there's a table with a checkGroupSelector.
When I select the checkGroupSelector, the ""findCheckboxesFunction"" function can't find the checkboxes since the form passed to the function is the modal window form, so this statement will not work. The checkboxes are not part of that form:

var parentGroup = parentForm[groupName];

I've tried passing the correct form, by overriding the getFindCheckboxesFunction() method. Problem is that the nested forms are converted to divs, and therefor the form returned is of type div which causes the previous statement to fail.
At this time I've fixed this by using jQuery, but a fix in wicket would be nice.

Wicket.CheckboxSelector.Group.findCheckboxesFunction = function (formId, groupName) {
        return function () {
            var result = new Array();

            var parentForm = wicketGet(formId);
            var parentGroup = jQuery('input[name=""' + groupName + '""]');

            if (parentGroup) {
                parentGroup.each(function (index) {
                    result.push(this);
                });
            }
            return result;
        }
    };

(see http://apache-wicket.1842946.n4.nabble.com/modal-dialog-and-nesting-of-forms-td4395177.html)","Ubuntu 12.10
JDK 6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-02-03 12:18:25.642,,,no_permission,,,,,,,,,,,297469,,,Sun Feb 03 12:18:25 UTC 2013,,,,,,0|i14own:,235500,,,,,,,,03/Feb/13 12:18;svenmeier;fixed problem inside modal window; simplified; Ajax is not needed as dependency,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handling of NO_MINIFIED_NAME in PackageResourceReference#internalGetMinifiedName()   ,WICKET-5019,12630131,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,rfoerthe,rfoerthe,31/Jan/13 13:28,31/Jan/13 20:45,13/Mar/19 23:17,31/Jan/13 20:45,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket,,,,,,,0,,,,,,,"The Value NO_MINIFIED_NAME is not handled correctly as entry in the MINIFIED_NAMES_CACHE in PackageResourceReference#internalGetMinifiedName()   

	private String internalGetMinifiedName()
	{
		String minifiedName = MINIFIED_NAMES_CACHE.get(this);
		if (minifiedName != null && minifiedName != NO_MINIFIED_NAME)
		{                                                        ^^^^^^^
			return minifiedName;
                }
                ...

You should remove the condition ""minifiedName != NO_MINIFIED_NAME"" here to leverage the 
MINIFIED_NAMES_CACHE for NO_MINIFIED_NAME cache entries. Otherwise you always run into the resource resolving code if there is no minified resource.
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-31 20:45:25.603,,,no_permission,,,,,,,,,,,310627,,,Thu Jan 31 20:45:25 UTC 2013,,,,,,0|i1hlvz:,310972,,,,,,,,31/Jan/13 20:45;svenmeier;Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow Select to work with non-equals objects,WICKET-5011,12629858,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,svenmeier,svenmeier,30/Jan/13 09:04,30/Jan/13 09:10,13/Mar/19 23:17,30/Jan/13 09:10,6.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.6.0,,,wicket-extensions,,,,,,,0,,,,,,,Currently Select cannot be used with object which don't have an overriden #equals().,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,310354,,,Wed Jan 30 09:10:39 UTC 2013,,,,,,0|i1hk7j:,310699,,,,,,,,30/Jan/13 09:10;svenmeier;added a new hook Select#isSelected(IModel),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
client side memory leak on  date picker,WICKET-4975,12627476,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,reiern70,reiern70,14/Jan/13 18:45,28/Jan/13 15:05,13/Mar/19 23:17,18/Jan/13 09:06,1.4.21,1.5.8,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket-datetime,,,,,,,0,,,,,,,"Under certain conditions date picker component leaks memory  at client side. More concretely DatePicker#renderHead tries to clean up existing date pickers via

AjaxRequestTarget target = component.getRequestCycle().find(AjaxRequestTarget.class);
		if (target != null)
		{
			String escapedComponentMarkupId = getEscapedComponentMarkupId();
			String javascript = ""var e = Wicket.$('"" + escapedComponentMarkupId + ""Dp"" +
				""'); if (e != null && typeof(e.parentNode) != 'undefined' && "" +
				""typeof(e.parentNode.parentNode != 'undefined')) {"" +
				""e.parentNode.parentNode.removeChild(e.parentNode);"" + ""YAHOO.wicket."" +
				escapedComponentMarkupId + ""DpJs.destroy(); delete YAHOO.wicket."" +
				escapedComponentMarkupId + ""DpJs;}"";

			target.prependJavaScript(javascript);
		}

but this fails if ""panel"" containing date pickers is completely replaced via AJAX. E.g. for date pickers placed on an AJAX navigated repeater. The result is that client side object

YAHOO.wicket

object grows and grows... and for

1- Wicket 1.5.x and wicket 1.4.x this means time for creating new date pickers grows steadily.
2- For wicket 1.6.x there seems not to have any performance hindrance  (only the memory leak).

I attach quick starts demonstrating this.
",any,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,17/Jan/13 14:23;reiern70;WICKET-4975.patch;https://issues.apache.org/jira/secure/attachment/12565327/WICKET-4975.patch,15/Jan/13 14:31;reiern70;WICKET-4975.patch;https://issues.apache.org/jira/secure/attachment/12564928/WICKET-4975.patch,14/Jan/13 19:36;reiern70;datepicker-1.5.tar.gz;https://issues.apache.org/jira/secure/attachment/12564759/datepicker-1.5.tar.gz,14/Jan/13 19:36;reiern70;datepicker.tar.gz;https://issues.apache.org/jira/secure/attachment/12564758/datepicker.tar.gz,,,,,4.0,,,,,,,,,,,,,,,,,,,2013-01-15 14:49:28.023,,,no_permission,,,,,,,,,,,304260,,,Mon Jan 28 15:05:05 UTC 2013,,,,,,0|i17ktz:,252344,,,,,,,,14/Jan/13 19:36;reiern70;quickstart for 6.x,14/Jan/13 19:36;reiern70;quickstart for 1.5.x ,15/Jan/13 14:31;reiern70;patch for 6.0.x,"15/Jan/13 14:49;mgrigorov;Isn't is better to use a global listener that triggers on '/ajax/call/complete' and checks for existence for the date picker DOM element and if not - removes all JS objects related to it ?
Something like https://github.com/apache/wicket/blob/master/wicket-core/src/main/java/org/apache/wicket/ajax/res/js/wicket-ajax-jquery.js#L2495

I find it much simpler.","15/Jan/13 15:18;reiern70;Martin,

Yes you are right... that would be a much cleaner solution. So register an  '/ajax/call/complete' listener that calls Wicket.DateTime.destroy(). I derived this solution form a private extension of DatePicker (for 1.4.x) that does more things: e.g. collect all all info of  all date pickers to be added (in an AJAX request cycle) and issue a single eval to build all of them... which is far more efficient than many evaluations (at least on 1.4.x). So, it was just a matter of adding the additional ""cleaner code"" to listener. I will add a new patch with suggested solution.

By the way. On the sample projects attached AJAX repainting of the whole table for  6.x takes less than 1 second (steadily, even without the clean up fix) while for 1.5.x it takes t > 7 with t growing with each table navigation. Do you have measured how much faster is AJAX  on wicket 6.x  than on previous versions (on average)?

Cheers.

Ernesto



","15/Jan/13 15:33;mgrigorov;No, we haven't measured 1.5 vs. 6.x.
I've used jsperf.com to decide what jQuery solution to use for some particular need in 6.x.","17/Jan/13 14:23;reiern70;""JavaScript only"" patch","17/Jan/13 15:14;mgrigorov;I've pushed an improved version of your patch. Please test that I didn't break it.
I've made the functions private. Is there a reason they should be reachable from other scripts ?

Additionally I see : if (Wicket.DateTime.isDestroying) {
There is no property Wicket.DateTime.isDestroying defined. I guess it should be set in #destroy() and unset in #internalDestroy() ?

And grunt reports one jslint warning:
Linting wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js...ERROR
[L349:C71] Don't make functions within a loop.
          setTimeout(function(){destroyInternal(toDestroy);}, 5);

Do you see a way to avoid it ?",17/Jan/13 15:43;mgrigorov;The JSLint warning is solved.,"17/Jan/13 16:09;reiern70;Martin,

I have thought of something like this.

     var destroyInternal = function (toDestroy) {
		if (toDestroy && toDestroy.length > 1) {
			var i = 0;
			while (toDestroy.length > 0) {
				var name = toDestroy.pop();
				try {
					if (YAHOO.wicket[name]) {
						// this is expensive.
						YAHOO.wicket[name].destroy();
						delete YAHOO.wicket[name];
					}
				} catch (e) {
					if (Wicket.Log) {
						Wicket.Log.error(e);
					}
				}
				i++;
				if (i === 20) {					
					break;
				}
			}
			if(toDestroy.length > 0) {
				setTimeout(function(){destroyInternal(toDestroy);}, 500);
			}
		}
	};

So move the 
                      if(toDestroy.length > 0) {
				setTimeout(function(){destroyInternal(toDestroy);}, 500);
			}

out of the cycle.

The 500 above is because YAHOO.wicket[name].destroy(); seems to be very expensive and if done ""in one go"" browser might ""freeze"". Do you know a better way to prevents that?  

The if (Wicket.DateTime.isDestroying) was a leftover of trying to make this script ""single instance at a time"". 

","28/Jan/13 15:01;zeratul;If I understand the patch correctly, you destroy all calendar instances at the end of any ajax activity on the page? E.g. when I have two calendars and select date in one of them, the other one will not even open when clicked?","28/Jan/13 15:05;mgrigorov;You miss some logic:

var e = Wicket.$(id);
available++;
if (e === null) {

i.e. if there is an entry for a date picker in the DOM but there is no HTML element for it then the DOM entry is deleted too.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Internet Explorer fails fails to properly include conditional stylesheet links added via AjaxRequestTarget,WICKET-4894,12617823,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,pohlandt,pohlandt,27/Nov/12 16:50,16/Jan/13 13:10,13/Mar/19 23:17,03/Dec/12 09:55,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,wicket,,,,,,,0,,,,,,,"CSS references added like this

  @Override
  public void renderHead( IHeaderResponse response ) {
    super.renderHead( response );
    response.renderCSSReference( 
        new PackageResourceReference( getClass(), ""TestLabel.css"" ));
    response.renderCSSReference( 
        new PackageResourceReference( getClass(), ""TestLabel-conditional.css"" ), null, null, ""gte IE 8"" );
  }

will not be taken into account by Internet Explorer (tested with 8 and 9) at when rendering the document.
I stepped though wicket-ajax.js and saw that the function added in Wicket.Head.Contributor.processComment will actually be executed and a new child node will be appended to the head node of the document. Unfortunately it seems IE disregards conditional comments added in this way.

I encountered this using Wicket 1.5.4.
I'll upload a quickstart.


",,,,,,,,,,,,,,,,,,,,,,29/Nov/12 21:12;pohlandt;HeaderResponse.java.diff;https://issues.apache.org/jira/secure/attachment/12555401/HeaderResponse.java.diff,27/Nov/12 16:53;pohlandt;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12555031/quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-11-29 12:12:23.401,,,no_permission,,,,,,,,,,,292388,,,Wed Jan 16 13:10:18 UTC 2013,,,,,,0|i0rxm7:,161090,,,,,,,,27/Nov/12 16:53;pohlandt;Quickstart,"29/Nov/12 12:12;mgrigorov;Hi,

I've experimented with this and it seems IE CSS engine doesn't check for dynamically injected links in conditional comments.
One solution is wicket-ajax.js to parse the condition before injectiing the element in the <head> and inject it only when necessary. But this doesn't look nice at all.

A much better solution is to check this at the server side:
 WebClientInfo clientInfo = (WebClientInfo) getSession().getClientInfo();
	  ClientProperties properties = clientInfo.getProperties();
	  if (properties.isBrowserInternetExplorer() && properties.getBrowserVersionMajor() >= 8)
	  {
		  response.renderCSSReference(
				  new PackageResourceReference( getClass(), ""TestLabel-conditional.css"" ));
	  }

Nice and clean.","29/Nov/12 13:07;pohlandt;Hi Martin, 

thanks for the quick reply and the solution. It took me a while to figure out the cause of this (and might take other people a while as well), so I suppose a warning when using the response.renderCSSReference overload with the ""condition"" parameter during an ajax request would be very helpful. Do you accept patches or pull requests on GitHub?

Another thing: is getSession().getClientInfo() going to work during an ajax request if called for the first time in the lifetime of the session?

Cheers
Jonas","29/Nov/12 13:11;mgrigorov;Patches are always welcome!
We prefer patch files attached in the ticket though. By attaching it you grant Apache the permissions to use your code.","29/Nov/12 13:29;mgrigorov;Q: Another thing: is getSession().getClientInfo() going to work during an ajax request if called for the first time in the lifetime of the session? 
A: this logic uses the User-Agent request header so it should work.",29/Nov/12 21:12;pohlandt;diff for 1.5.9 HeaderResponse (do you even still accept patches for 1.5?). Have not used 6.x yet...,03/Dec/12 09:55;mgrigorov;The log warning + updates to the javadoc has been added for 1.5.10 and 6.4.0.,16/Jan/13 12:56;davidvdd;The log warning always appears even if you use Chrome. Is there a way to change this? Or add it to a higher loglevel since it only gives info. There's also no info about the warning in 6.x.x docs  http://ci.apache.org/projects/wicket/apidocs/6.0.x/org/apache/wicket/markup/head/IHeaderResponse.html,"16/Jan/13 13:10;mgrigorov;The log statement tells you that you try to make the user experience for IE users better but IE wont appreciate it. So you can either rework it as suggested above or remove it completely.

We can make the log INFO or even DEBUG but then more people wont see it at all and will file tickets here when they realize that their code doesn't work for IE at all.
You can always set ERROR level as minimum for this class in your logging configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxFormChoiceComponentUpdatingBehavior cannot be triggered with BaseWicketTester#executeAjaxEvent(),WICKET-4962,12626926,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,svenmeier,svenmeier,10/Jan/13 12:09,10/Jan/13 12:30,13/Mar/19 23:17,10/Jan/13 12:30,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,,,,,,,BaseWicketTester executes AjaxFormComponentUpdatingBehavior only.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,303617,,,Thu Jan 10 12:30:43 UTC 2013,,,,,,0|i17d7r:,251110,,,,,,,,10/Jan/13 12:30;svenmeier;AjaxFormChoiceComponentUpdatingBehavior extends AjaxFormComponentUpdatingBehavior now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SessionData violates comparison contract,WICKET-4955,12626510,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,papegaaij,boschman,boschman,08/Jan/13 08:11,10/Jan/13 09:49,13/Mar/19 23:17,08/Jan/13 19:06,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,,,,,,,,0,requestlogger,,,,,,"AbstractRequestLogger.getLiveSessions sorts the SessionData objects, this sort 'sometimes' (most likely load/concurrency) results in a contract violation:

Caused by: org.apache.wicket.WicketRuntimeException: Error calling method: public final java.lang.Integer org.apache.wicket.proxy.$Proxy200.getLiveSessions() on object: org.apache.wicket.proxy.LazyInitProxyFactory$JdkHandler@438532d0
        at org.apache.wicket.core.util.lang.PropertyResolver$MethodGetAndSet.getValue(PropertyResolver.java:1148)
        at org.apache.wicket.core.util.lang.PropertyResolver$ObjectAndGetSetter.getValue(PropertyResolver.java:649)
        at org.apache.wicket.core.util.lang.PropertyResolver.getValue(PropertyResolver.java:103)
        at org.apache.wicket.model.AbstractPropertyModel.getObject(AbstractPropertyModel.java:86)
        at org.apache.wicket.Component.getDefaultModelObject(Component.java:1615)
        ... 75 more
Caused by: java.lang.IllegalArgumentException: Comparison method violates its general contract!
        at java.util.ComparableTimSort.mergeHi(ComparableTimSort.java:835)
        at java.util.ComparableTimSort.mergeAt(ComparableTimSort.java:453)
        at java.util.ComparableTimSort.mergeForceCollapse(ComparableTimSort.java:392)
        at java.util.ComparableTimSort.sort(ComparableTimSort.java:191)
        at java.util.ComparableTimSort.sort(ComparableTimSort.java:146)
        at java.util.Arrays.sort(Arrays.java:472)
        at org.apache.wicket.protocol.http.AbstractRequestLogger.getLiveSessions(AbstractRequestLogger.java:135)
        at nl.topicus.cobra.monitoring.BaseApplicationInfo.getLiveSessions(BaseApplicationInfo.java:103)
        at sun.reflect.GeneratedMethodAccessor256.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.apache.wicket.proxy.LazyInitProxyFactory$JdkHandler.invoke(LazyInitProxyFactory.java:434)
        at org.apache.wicket.proxy.$Proxy200.getLiveSessions(Unknown Source)
        at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at org.apache.wicket.core.util.lang.PropertyResolver$MethodGetAndSet.getValue(PropertyResolver.java:1144)
        ... 79 more",java 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2013-01-08 09:02:31.455,,,no_permission,,,,,,,,,,,303116,,,Thu Jan 10 09:49:29 UTC 2013,,,,,,0|i1782v:,250277,,,,,,,,"08/Jan/13 09:02;papegaaij;I don't think your fix is correct. this error is about the requestlogger, not about the actions in BufferedWebResponse. Also, your fix on these actions is not a fix: Comparable's contract states you should return a negative number, 0 or a positive number. It does not matter if you return Integer.MIN_VALUE or -1. This problem is about violating other parts of the contract, such as sgn(x.compareTo(y)) == -sgn(y.compareTo(x)).

What probably happens is that during the sorting a request changes the lastActive value, changing the sort order during the sorting process.

The compareTo methods you changed in Action are also wrong:
 Given 2 MetaDataActions a and b, a.compareTo(b) == -1 and b.compareTo(a) == -1, this is not allowed and will trigger this exception.",08/Jan/13 09:09;papegaaij;I've created a new ticket for the compareTo methods of the Action classes: WICKET-4956,"08/Jan/13 19:06;papegaaij;The sort-order is changed to the startDate of the session, a small change in behavior, but this timestamp is stable, preventing the exception and the sorting was never documented anyway.","08/Jan/13 20:23;mgrigorov;Thanks for improving the code!
What is the reason not to fix this in 1.5.x ?
I see you intentionally removed 1.5.10 from ""Fix Version"". Is the fix too risky ?","09/Jan/13 09:54;papegaaij;The fix is not very risky. The reason I did not backport it to 1.5.x is that this is only an issue on Java 7, which I do not think we need to support for Wicket 1.5.x. Also, this is a minor issue, which is only triggered a few times a day under very high load. Finally, we do not have any application still on Wicket 1.5.x, so I have no way of verifying the fix is correct for that version.

If you want this to be fixed on 1.5.x, I think it is safe to backport.","09/Jan/13 09:55;mgrigorov;Can you explain more about the problem and the fix in AbstractRequestLogger ?
How 'startDate' is better than 'lastActive' for this particular problem ? Both of them are long. 'startDate' is stable (final) but 
public SessionData[] getLiveSessions()
	{
		final SessionData[] sessions = liveSessions.values().toArray(
			new SessionData[liveSessions.values().size()]);
		Arrays.sort(sessions);
		return sessions;
	}
i.e. a copy is made of the SessionData objects and I think 'lastActive' should not change during the sorting for any SessionData object, so it seems to be stable as well.",10/Jan/13 09:18;mgrigorov;Ping,"10/Jan/13 09:49;papegaaij;The problem is that only the array is copied, not the SessionData objects. If a new requests is served during the sorting, lastActive is updated and the sort-order can change. This can cause A to be before B at one moment and B to be before A at a later moment. This is not the case with startDate.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form#visitFormComponents can cause ClassCastException,WICKET-4906,12618616,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,vitiate,vitiate,03/Dec/12 19:14,07/Jan/13 15:35,13/Mar/19 23:17,07/Jan/13 15:35,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,form,visit,wicket,,,,"The current method signature of Form#visitComponents allows for passing in an implementation of IVisitor that will cause a ClassCastException. 
Example
Add a CheckBox and TextField to the Form. Pass in an IVisitor<CheckBox> to visitComponents. There will be a ClassCastException when the IVisitor<CheckBox> attempts to visit the TextField.

The method signature should be changed to
public final <R> R visitFormComponents(final IVisitor<FormComponent<?>, R> visitor)
or the method should be removed to prevent confusion.

",,,,,,,,,,,,,,,,,,,,,,03/Dec/12 19:18;vitiate;WicketQuickStart.zip;https://issues.apache.org/jira/secure/attachment/12555810/WicketQuickStart.zip,06/Dec/12 22:50;bitstorm;detectVisitorComponentClass.patch;https://issues.apache.org/jira/secure/attachment/12559663/detectVisitorComponentClass.patch,05/Dec/12 18:53;vitiate;visitFormComponentsfix.patch;https://issues.apache.org/jira/secure/attachment/12556132/visitFormComponentsfix.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2012-12-05 15:18:23.786,,,no_permission,,,,,,,,,,,295775,,,Mon Jan 07 15:35:01 UTC 2013,,,,,,0|i13xw7:,231121,,,,,,,,03/Dec/12 19:18;vitiate;This project demonstrates the problem,05/Dec/12 15:18;bitstorm;We could use reflection to extract the actual component type from IVisitor interface and pass it to method visitChildren (see method visitFormComponents in Form.java).,05/Dec/12 18:53;vitiate;This patch shows how it could be done with reflection,05/Dec/12 18:53;vitiate;I noticed visitFormComponentsPostOrder has the same problem.,"06/Dec/12 22:50;bitstorm;The idea behind your code is ok, but it should work also with raw visitors, i.e. implementations of IVisitor without parameter types. I've attached my patch which is based on generic interfaces rather than class methods. ","07/Dec/12 08:54;mgrigorov;Form#visitFormComponents() is about visiting the FormComponents in a Form.

If you replace it with myForm.visitChildren(CheckBox.class, new MyVisitor()); then it works as needed.

I'm not sure that all the reflection is needed. We can update the javadocs...","07/Dec/12 16:26;vitiate;The method signature suggests that its about visiting FormComponents and subclasses of FormComponents because of the type parameter <? extends FormComponent<?> which allows subclasses of FormComponents. I would go back to my original suggestion and change the method signature to
public final <R> R visitFormComponents(final IVisitor<FormComponent<?>, R> visitor) 
That would better reflect what the method is actually doing. I would argue that this doesn't break the API since anyone who was passing in IVisitor<CheckBox> (or some other subclass) would get a ClassCastException at runtime. It would be better for the compiler to report this error.","07/Jan/13 15:35;mgrigorov;The method signature has been simplified as suggested.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractAjaxTimerBehavior never triggers if attached to WebPage,WICKET-4939,12624955,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jonas,jonas,21/Dec/12 08:41,07/Jan/13 14:03,13/Mar/19 23:17,07/Jan/13 14:03,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.5.0,,,wicket,,,,,,,0,,,,,,,"Since WICKET-4886 was fixed, AbstractAjaxTimerBehavior never triggers anymore if it is added the the page itself.
See: org.apache.wicket.ajax.AbstractAjaxTimerBehavior.shouldTrigger()
getComponent().findParent(WebPage.class) != null
is always false in that case, which seems to be wrong. It should also be ok if the component itself is the WebPage.
So, the method should probably read something like

	private boolean shouldTrigger()
	{
		return isStopped() == false &&
				isEnabled(getComponent()) &&
				(getComponent().findParent(WebPage.class) != null || getComponent() instanceof WebPage);
	}

Temporary workaround:
add the AbstractAjaxTimerBehavior to a subcomponent of the page instead.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,301478,,,Fri Dec 21 10:04:58 UTC 2012,,,,,,0|i16tzz:,247992,,,,,,,,"21/Dec/12 10:04;jonas;Or even more simple

private boolean shouldTrigger()
{
return isStopped() == false &&
isEnabled(getComponent()) &&
getComponent().findPage() != null;
}

Unless, of course, there's a particular reason why a WEBpage parent is needed and some other Page wouldn't be ok as well...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpSession getSession() in MockHttpServletRequest is not compliant with the j2ee servlet spec,WICKET-4370,12540348,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,giovanni.cuccu,giovanni.cuccu,30/Jan/12 11:09,14/Dec/12 10:44,13/Mar/19 23:17,30/Jan/12 12:22,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"The implementation of
httpRequest.getSession();
for MockHttpServletRequest seems not correct since it can return null when
the servler api specs
(http://docs.oracle.com/javaee/1.4/api/) says:

public HttpSession getSession()
Returns the current session associated with this request, or if the request
does not have a session, creates one.

So as far as I understand
httpRequest.getSession(); and httpRequest.getSession(true); are equivalent

The MockHttpServletRequest implementation is

   public HttpSession getSession()
   {
       if (session instanceof MockHttpSession &&
((MockHttpSession)session).isTemporary())
       {
           return null;
       }
       return session;
   }

I think it should be 
   public HttpSession getSession()
   {
       return getSession(true);
   }

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-12-14 10:44:07.119,,,no_permission,,,,,,,,,,,225761,,,Fri Dec 14 10:44:07 UTC 2012,,,,,,0|i00vy7:,3108,,,,,,,,"14/Dec/12 10:44;leodali;Hi everybody,
I'm migrating to Wicket 1.5.9 and I found this code inside MockHttpServletRequest.getSession(boolean):
		HttpSession sess = null;
		if (session instanceof MockHttpSession)
		{
			MockHttpSession mockHttpSession = (MockHttpSession) session;
			if (b)
			{
				mockHttpSession.setTemporary(false);
			}

			if (mockHttpSession.isTemporary() == false)
			{
				sess = session;
			}
		}
		return sess;

At the moment, passing ""false"" will never allow you to get the session, even if it actually exists.
Is it possible I'm doing something wrong in my code?

Thanks in advance!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cloned ServletWebRequest returns wrong OriginalUrl,WICKET-4922,12623527,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jesselong,jesselong,12/Dec/12 11:33,12/Dec/12 13:12,13/Mar/19 23:17,12/Dec/12 13:12,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,wicket,,,,,,,0,,,,,,,"ServletWebRequest, when cloned with a new URL, return the incorrect URL from getOriginalUrl(). This presents itself as a problem when using redirect to intercept page in conjunction with a root request mapper that modifies the URL passed to the wrapped request mapper. (incidentally, this does not affect CryptoMapper, since CryptoMapper tries passing both the decrypted and the original, supposedly encrypted, URL to the wrapped request mapper). I have my own path modifying request mapper that is getting affected by this.",,,,,,,,,,,,,,,,,,,,,,12/Dec/12 11:35;jesselong;WICKET-4922.patch;https://issues.apache.org/jira/secure/attachment/12560544/WICKET-4922.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,297236,,,Wed Dec 12 11:35:26 UTC 2012,,,,,,0|i14n9z:,235236,,,,,,,,12/Dec/12 11:35;jesselong;WICKET-4922.patch - A patch to solve the solution. I also override the getOriginalUrl() method in WebRequest as a reminder to future subclassers of WebRequest that the cloneWithUrl() method needs to preserve the getOriginalUrl() functionality.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad validation messages after WICKET-2128,WICKET-4890,12617623,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,jonas,jonas,26/Nov/12 15:00,07/Dec/12 09:23,13/Mar/19 23:17,07/Dec/12 09:23,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,,,,,,,,1,,,,,,,"In most languages (at least the ones that I speak), the error messages used by validators don't sound right anymore after WICKET-2128 was fixed. Replacing '${input}' with '${label}' (what seems to have been done) doesn't yield useful error messages.

I see the following options:
a) Improve the messages the way Martin Grigorov suggested it in WICKET-2128, e.g.
'IConverter=The value of '${label}' is not a valid ${type}.' 
(instead of just 'IConverter='${label}' is not a valid ${type}.')
Interestingly, all the languages that use .xml properties (e.g. Application_bg.properties.xml) files seem to have been excluded (by accident?) from the changes done in WICKET-2128, as they still refer to ${input}.

b) revert the changes from WICKET-2128 completely. I think the new messages only fit well in scenarios where there's only a single feedback panel per page, which is anyway not very userfriendly. In cases when you display the error messages in separate feedback components next to the corresponding FormComponents, it is anyway clear which field is the culprit, and users don't need to search for the field that has caused the error.",,,,,,,,,,,,,,,,,,,,,,30/Nov/12 12:50;jonas;Application_fr.properties;https://issues.apache.org/jira/secure/attachment/12555501/Application_fr.properties,04/Dec/12 14:11;kizer;Application_no.properties;https://issues.apache.org/jira/secure/attachment/12555940/Application_no.properties,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-11-27 16:43:37.47,,,no_permission,,,,,,,,,,,292126,,,Fri Dec 07 09:23:26 UTC 2012,,,,,,0|i0rryf:,160173,,,,,,,,"27/Nov/12 16:43;svenmeier;I've updated the *.properties.xml fies to use ${label} too, so we get at least some consistency across languages.","29/Nov/12 14:36;mgrigorov;I've improved the messages in the _bg resource bundle.
Patches for the language you speak are welcome!","30/Nov/12 12:39;jonas;I started preparing a patch for english and german when I realized that Sven has already taken care of this.
Big thanks to Sven!
Just one minor correction in Application_de_CH.properties: The following line has to be added, as 'grösser'
is spelled differently in CH than in DE.
RangeValidator.maximum=Der Wert von '${label}' ist gr\u00f6sser als der erlaubte Maximalwert ${maximum}.","30/Nov/12 12:50;jonas;Proposed new version of Application_fr.properties
(also eliminated duplicate keys)",04/Dec/12 14:11;kizer;New version of Norwegian properties,04/Dec/12 14:44;svenmeier;Thanks !,"07/Dec/12 09:23;mgrigorov;Closing the ticket.
Changes in the other resource bundles will be made when a native speaker sends updates.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.util.resource.Patht#find fails on Windows,WICKET-4915,12619141,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mgrigorov,mgrigorov,06/Dec/12 15:40,07/Dec/12 08:41,13/Mar/19 23:17,07/Dec/12 08:41,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket,,,,,,,0,,,,,,,"Windows users report that test  org.apache.wicket.util.resource.PathTest#loadFromRootUsingSubpathInFilename fails for them.

The suggested solution is to rework Path#find to:

@Override
    public IResourceStream find(final Class<?> clazz, final String pathname)
    {
        final File file = new File(folder, pathname);
        final File pathOnlyFile = new File(pathname);
 
        if (file.exists())
        {
            return new FileResourceStream(file);
        }
        if (pathOnlyFile.exists())
        {
            return new FileResourceStream(pathOnlyFile);
        }
        else
        {
            return null;
        }
    }

but I'm not quite sure in this solution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,296335,,,2012-12-06 15:40:31.0,,,,,,0|i148mn:,232861,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HtmlDocumentParser does not support tags containing number (e.g. h1-h6),WICKET-4913,12618909,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,cyberbird,cyberbird,05/Dec/12 17:02,06/Dec/12 09:12,13/Mar/19 23:17,06/Dec/12 09:12,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,,,,,,,,0,patch,,,,,,"When a html-document is parsed, that contains a headline (h1-h6), following exception is thrown:

java.lang.StringIndexOutOfBoundsException: String index out of range: -3
	at java.lang.String.substring(String.java:1937)
	at org.apache.wicket.protocol.http.documentvalidation.HtmlDocumentParser.processDirective(HtmlDocumentParser.java:251)
	at org.apache.wicket.protocol.http.documentvalidation.HtmlDocumentParser.getNextToken(HtmlDocumentParser.java:120)
	at HtmlDocumentParserTest.testGetNextToken(HtmlDocumentParserTest.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)",,,,,,,,,,,,,,,,,,,,,,05/Dec/12 17:04;cyberbird;document-parser-error.tar.gz;https://issues.apache.org/jira/secure/attachment/12556114/document-parser-error.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-12-06 09:12:58.904,,,no_permission,,,,,,,,,,,296175,,,Thu Dec 06 09:12:58 UTC 2012,,,,,,0|i146in:,232519,,,,,,,,05/Dec/12 17:04;cyberbird;simple maven-project containg a test producing the described error,"05/Dec/12 17:08;cyberbird;just submitted a pull-request => ""WICKET-4913 support headline-tags (h1-h6)""
","06/Dec/12 09:12;mgrigorov;The patch is applied!
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting a status code on an AbstractResource results in no HTTP body,WICKET-4900,12618329,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,bheiskell,bheiskell,30/Nov/12 15:59,03/Dec/12 10:21,13/Mar/19 23:17,03/Dec/12 10:21,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.10,6.4.0,,,,,,,,,0,,,,,,,"When implementing an AbstractResource, if ResourceResponse#setStatusCode is called, the HTTP body of the response comes back empty. I'm pretty sure this is due to the following check in AbstractResource#respond:

if (!data.dataNeedsToBeWritten(attributes) || data.getErrorCode() != null || data.getStatusCode() != null)
{
return;
}

There are many HTTP status codes that are not errors that might warrant an HTTP body.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,292990,,,2012-11-30 15:59:39.0,,,,,,0|i0sr7r:,165886,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unescaped html in autocomplete,WICKET-4691,12601174,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,wm,wm,02/Aug/12 07:31,30/Nov/12 16:37,13/Mar/19 23:17,02/Aug/12 12:48,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket-extensions,,,,,,,0,,,,,,,"Create list of Strings with html keywords: List<String> list = Arrays.asList(""a"", ""<td>"", ""<li>"",""</td>"");
Let autocomplete display these values: @Override
			protected Iterator getChoices(String input) {
				return list.iterator();
			}
html is unescaped, strings are ""copy and paste""'d to html

Ajax response (from Firebug) looks like this:
<ul><li textvalue=""a"">a</li><li textvalue=""<td>""><td></li><li textvalue=""<li>""><li></li><li textvalue=""</td>""></td></li></ul>","Windows, Java 1.6",,,,,,,,,,,,,,,,,,WICKET-4899,,,02/Aug/12 07:33;wm;myproject.zip;https://issues.apache.org/jira/secure/attachment/12538876/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257712,,,Thu Aug 02 07:33:42 UTC 2012,,,,,,0|i0k89j:,116156,,,,,,,,02/Aug/12 07:33;wm;Quick Start Attached,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
'format' not set in ConversionException,WICKET-4864,12615604,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,codecab,codecab,10/Nov/12 16:50,15/Nov/12 08:37,13/Mar/19 23:17,15/Nov/12 08:37,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.3.0,,,wicket-datetime,,,,,,,0,,,,,,,"There are two DateConverter implementations in wicket:
[1] wicket.util.convert.DateConverter 
[2] wicket.datetime.DateConverter

When an error occures while converting the input, both throw a ConversionException. This ConversionException has a property called 'format' which is later used to get a localized pattern for error messages. But since they base on different formatter classes (jdk/joda-time), the formatter of [2] is incompatible to the format property.

So I can see 2 ways of solving this issue:
1. put an already localized pattern as a variable (also named 'format') in ConversionException (using ConversionException .setVariable() - those variables are later also applied to the error message)
2. Alter the class ConversionException so its property 'format' holds the localized pattern as a string, instead of an instance of SimpleDateFormat",,,,,,,,,,,,,,,,,,,,,,14/Nov/12 21:08;codecab;DateConverter.patch;https://issues.apache.org/jira/secure/attachment/12553555/DateConverter.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-13 13:09:51.131,,,no_permission,,,,,,,,,,,256903,,,Wed Nov 14 21:08:38 UTC 2012,,,,,,0|i0iyuv:,108741,,,,,,,,"13/Nov/12 13:09;mgrigorov;Solution #2 wont work. DateFormat has no localized pattern, only SimpleDateFormat has it.

Can you attach a patch for solution #1 ? ","14/Nov/12 21:08;codecab;Here you go, patch for solution #1
-
Yet I don't understand why #2 should not work. Obviously it's possible to get a localized pattern of that ConversionException thrown by o.a.w.util.DateConverter, see FormComponent.reportValidationError():

Format format = e.getFormat();
if (format instanceof SimpleDateFormat)
{
	error.setVariable(""format"", ((SimpleDateFormat)format).toLocalizedPattern());
}

So it should also be possible to extract a pattern before creating the exception instance. Also, this is the only usage of ConversionException.getFormat(), so I think it would be just fine to change the type of the field 'format' and it's getter/setter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester discards cookies with MaxAge = -1 when processing a new request,WICKET-4850,12614389,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,pavel.dubina,pavel.dubina,01/Nov/12 16:16,02/Nov/12 14:32,13/Mar/19 23:17,02/Nov/12 14:32,1.5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.3.0,,wicket-devutils,,,,,,,0,,,,,,,"BaseWicketTesters' method processRequest only copies cookies with maxAge > 0 to the new request, discarding cookies with maxAge = -1. However http://docs.oracle.com/javaee/1.4/api/javax/servlet/http/Cookie.html#getMaxAge%28%29 states that cookies with maxAge = -1 are session cookies, and should be deleted when the browser is closed, not when a new request is handled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,253638,,,2012-11-01 16:16:57.0,,,,,,0|i0e1g7:,79997,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reporter of FeedbackMessage should not be set to 'null' on detach,WICKET-4848,12614046,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,pete,pete,30/Oct/12 16:36,02/Nov/12 14:22,13/Mar/19 23:17,30/Oct/12 16:39,6.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.3.0,,,wicket,,,,,,,0,,,,,,,"When FeedbackMessages are detached via IDetachable#detach() the reporter of the message is set to null. 
This seems to be part of legacy cleanup before feedback messages were stored in the components meta data.
Since settings the reporter to null changes the state of the message and 
also partially bypasses the logic behing IApplicationSettings#setFeedbackMessageCleanupFilter(..) 
 we should remove that logic.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,253170,,,2012-10-30 16:36:52.0,,,,,,0|i0dc6v:,75904,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SmartLinkLabel doesn't recognize already tagged links,WICKET-4099,12525310,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jasphior,jasphior,30/Sep/11 13:27,25/Oct/12 11:07,13/Mar/19 23:17,03/Oct/11 09:48,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket-extensions,,,,,,,0,SmartLinkLabel,,,,,,"The SmartLinkLabel works as expected for the texts without <a>..</a> tag. 
for text like
extensions @ http://www.wicketframework.org/wicket-extensions/index.html are cool!!
SmartLinkLabel generates the html - 
extensions @ <a href=""http://www.wicketframework.org/wicket-extensions/index.html"">http://www.wicketframework.org/wicket-extensions/index.html</a> are cool!!

but for the text like
extensions @ <a href='http://www.wicketframework.org/wicket-extensions/index.html'>http://www.wicketframework.org/wicket-extensions/index.html</a> are cool!!
SmartLinkLabel generates the html - 
extensions @ <a href='<a href=""http://www.wicketframework.org/wicket-extensions/index.html"">http://www.wicketframework.org/wicket-extensions/index.html</a>'><a href=""http://www.wicketframework.org/wicket-extensions/index.html"">http://www.wicketframework.org/wicket-extensions/index.html</a></a> are cool!!

I think this is a bug & needs a fix.
","wicket 1.5-RC5.1, tomcat 7, windows 7",,,,,,,,,,,,,,,,,,WICKET-4837,,,04/Oct/11 17:04;jasphior;AutoLinkLabelExt.java;https://issues.apache.org/jira/secure/attachment/12497661/AutoLinkLabelExt.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-04 13:44:03.662,,,no_permission,,,,,,,,,,,41039,,,Tue Oct 04 17:04:40 UTC 2011,,,,,,0|i0b38f:,62636,,,,,,,,"04/Oct/11 13:35;jasphior;The current fix doesn't work for the text!

extensions @ http://www.wicketframework.org/wicket-extensions/index.html & <a href=""http://www.wicketframework.org/wicket-extensions/index.html"">http://www.wicketframework.org/wicket-extensions/index.html</a> are cool!! 

Need SmarterLinkLabel!",04/Oct/11 13:44;mgrigorov;Patches are welcome!,"04/Oct/11 17:04;jasphior;Some thing similar to this, with an option to add tag attributes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unmount a page does not work if the path starts with /,WICKET-4836,12613443,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,dpmihai,dpmihai,25/Oct/12 07:37,25/Oct/12 07:44,13/Mar/19 23:17,25/Oct/12 07:44,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.3.0,,wicket,,,,,,,0,,,,,,,"After a mountPage(""/myPage"", MyPage.class) when we want to do unmount we have to do:
unmount(""mypage"") without a starting / because unmount(""/mypage"") does not work.

This was seen on version 1.5.5 of Wicket (was not tested on higher versions)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,250952,,,2012-10-25 07:37:43.0,,,,,,0|i0b2q7:,62554,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing </wicket:container> tag is incorrectly setup as autocomponent,WICKET-4589,12559398,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,coldiges,coldiges,05/Jun/12 14:58,18/Oct/12 11:49,13/Mar/19 23:17,18/Oct/12 11:49,1.5.7,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,,,,,,,"The closing instance of the <wicket:container> tag returns true when isAutoComponentTag() is called whereas the opening instance correctly returns false.

The problem lies probably in the WicketTagIdentifier class which simply checks if there is a wicket:id attribute value and makes all tags (opening or closing) autocomponent tags if there is no wicket:id.

Obviously any closing tag doesnt have a wicket:id assigned.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-15 08:44:26.03,,,no_permission,,,,,,,,,,,240076,,,Fri Jun 15 08:56:17 UTC 2012,,,,,,0|i00wu7:,3252,,,,,,,,"15/Jun/12 08:44;mgrigorov;Does this cause troubles ?
Because WicketTagIdentifier has a comment saying: 

// Make it a Wicket component. Otherwise it would be RawMarkup

Without making it a (auto)component later the MarkupStream cannot find the closing tag.

@Juergen: do you see a problem here ?","15/Jun/12 08:56;coldiges;Just to make it clear again:

<wicket:container> is NOT marked as auto-component tag.
</wicket:container> is marked as auto-component tag.

---------------------------------------------------------------------------------------------

For the normal framework user it doesnt cause any direct troubles, but its still not correct and could lead to whatever problems down the road, such as our example:

We have identified this problem while developing a CMS system which is template driven and analyses the markup to auto-create sub-components in onInitialize / onConfigure.

Any auto component tag instances are simply ignored because they are handled by wicket themselves. We are only interested in ComponentTag(s) with wicket:id's such as <wicket:container>.
Since the opening tag is not marked as auto-component it is correctly handled. The closing </wicket:container> tag however is marked as auto-component and thus ignored which in the end corrupts the component hierarchy, because the closing tag for the opening tag is not processed.

A workaround to explicitly check for the closing wicket:container tag is straightforward but feels like a hack (which it is).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Wicket.Event.add requires Wicket.$, but wicket-ajax-jquery is not listed as a dependency",WICKET-4822,12612314,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,aakoch,aakoch,17/Oct/12 21:04,18/Oct/12 06:03,13/Mar/19 23:17,18/Oct/12 06:03,6.1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket,,,,,,,0,javascript,jquery,,,,,"The javascript file wicket-event-jquery.js defines the Wicket.Event.add (starting on line 135). In this function, Wicket.$ is called (line 143). Wicket.$ is defined in wicket-ajax-jquery.js on line 1149. But WicketEventJQueryResourceReference.java doesn't list wicket-ajax-jquery.js as a dependency, jQuery (line 58/62). So, there are cases when I've wanted to bind to an event using OnEventHeaderItem but the HTML source doesn't output the needed wicket-ajax-jquery.js because it is not listed as a dependency.

HTML output:

<!DOCTYPE html>
<html class=""no-js"" lang=""en-us"">
    <head><script type=""text/javascript"" src=""./wicket/resource/org.apache.wicket.resource.JQueryResourceReference/jquery/jquery-ver-1350410081272.js""></script>
<script type=""text/javascript"" src=""./wicket/resource/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/res/js/wicket-event-jquery-ver-1350410081272.js""></script>
<script type=""text/javascript"" >
/*<![CDATA[*/
Wicket.Event.add('#text__field__wicket__id01', ""change"", function(event) { 
$(document).trigger('valuechange.adamkoch', [event.originalEvent.target.attributes[""wicket:id""]]);});
/*]]>*/
</script>
...",Windows 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,249409,,,2012-10-17 21:04:59.0,,,,,,0|i0a7jz:,57497,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in ResourceSettings: getResourceWatcher() is not thread safe,WICKET-4820,12612234,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,wk,wk,17/Oct/12 14:55,17/Oct/12 15:37,13/Mar/19 23:17,17/Oct/12 15:37,1.5.8,6.1.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,wicket,,,,,,,0,,,,,,,"o.a.w.settings.def.ResourceSettings.getResourceWatcher() is not thread safe: when multiple requests are waiting to load markup for the first time (for example, start ""ab"" with -c 40 right after starting the wicket application) multiple ModificationWatcher threads are started which cause a memory leak when the WicketApplication is stopped.",,,,,,,,,,,,,,,,,,,,,,17/Oct/12 15:00;wk;WICKET-4820.zip;https://issues.apache.org/jira/secure/attachment/12549518/WICKET-4820.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-17 15:37:02.374,,,no_permission,,,,,,,,,,,249309,,,Wed Oct 17 15:37:02 UTC 2012,,,,,,0|i0a6rb:,57368,,,,,,,,17/Oct/12 15:00;wk;Quickstart that contains the test TestModificationWatcherRaceCondition that can reproduce the problem,17/Oct/12 15:37;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavaScriptReference escapes given URL,WICKET-4777,12608612,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,gb6881,gb6881,21/Sep/12 10:54,15/Oct/12 13:38,13/Mar/19 23:17,15/Oct/12 13:38,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,,,,,,,,0,,,,,,,"
while trying to integrate gmaps3 in our webapp i had issues with the wicketstuff-gmap3 stuff ( - we need a client-id for our request) ...

so i have:
{noformat}
public static final String GMAP_API_URL = ""%s://maps.google.com/maps/api/js?v=3&sensor=%s&client-id=%s"";

response.render(JavaScriptHeaderItem.forUrl(String.format(GMAP_API_URL, schema, sensor, clientid)));
{noformat}

the rendered result of this is:
{noformat}
<script type=""text/javascript"" src=""http://maps.google.com/maps/api/js?v=3&amp;sensor=false&amp;client-id=....""></script>
{noformat}

so the requestparameters are encoded

which is happening in the JavaScriptUtils Helper:
{noformat}
public static void writeJavaScriptUrl(final Response response, final CharSequence url, final String id, boolean defer, String charset)
{
        response.write(""<script type=\""text/javascript\"" "");
        if (id != null)
        {
            response.write(""id=\"""" + Strings.escapeMarkup(id) + ""\"" "");
        }
        if (defer)
        {
            response.write(""defer=\""defer\"" "");
        }
        if (charset != null)
        {
            response.write(""charset=\"""" + Strings.escapeMarkup(charset) + ""\"" "");
        }
        response.write(""src=\"""");
        response.write(Strings.escapeMarkup(url));
        response.write(""\""></script>"");
        response.write(""\n"");
}
{noformat}
but ... is this right to escape the url?

when i open the above mentioned script, google tells me i have no parameter ""sensor"" ... which i can understand as ther is only a parameter amp ... ",,,,,,,,,,,,,,,,,,,,,,11/Oct/12 07:50;gb6881;de.thomasdaily.WICKET4777.tgz;https://issues.apache.org/jira/secure/attachment/12548707/de.thomasdaily.WICKET4777.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-15 12:21:14.683,,,no_permission,,,,,,,,,,,247282,,,Mon Oct 15 13:38:14 UTC 2012,,,,,,0|i089lz:,46156,,,,,,,,"11/Oct/12 07:50;gb6881;
Hi

one addition, so i've seen you've fixed that issue (WICKET-4777) , but i think, there is a part missing, which i also didn't think of.

on the delivered page the html code looks fine now (switched to 6.2.0-SNAPSHOT).
--snip--
<script type=""text/javascript"" src=""http://maps.googleapis.com/maps/api/js?sensor=false&client-id=google-id&callback=initialize""></script>
--snap--
when doing an ajax request whose response contains that rendered url it is represented the same way ..

--snip--
<header-contribution encoding=""wicket1"" ><![CDATA[<head xmlns:wicket=""http://wicket.apache.org""><script type=""text/javascript"" src=""http://maps.googleapis.com/maps/api/js?sensor=false&client-id=google-id&callback=initialize""></script>
--snap--


which at this point leads to an javascript error:
--snip--
ERROR: Error in parsing: This page contains the following errors:error on line 1 at column 98: EntityRef: expecting ';'
Below is a rendering of the page up to the first error.
--snap--

so i guess, it has to be escaped?


Thanks,

Georg
","15/Oct/12 12:21;mgrigorov;For me the rendered script is: 
<script type=""text/javascript"" src=""http://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize;""></script>

Notice the ';' at the end of the url. I'll debug why it is there.","15/Oct/12 12:31;mgrigorov;The problem is at org.wicketstuff.gmap.GMap#renderHead() :
response.render(JavaScriptHeaderItem.forUrl(""http://maps.googleapis.com/maps/api/js?sensor="" + sensor + ""&callback=initialize;""));","15/Oct/12 12:44;mgrigorov;This doesn't solve the problem.
It still sees an entity: &callback without the closing ;","15/Oct/12 13:37;gb6881;in our code i now inherited form GMap, overiding Gmap#renderHead():

            if (WicketHelper.isAjaxRequest())
            {
                // FIX WICKET-4777
                response.render(new StringHeaderItem(""<script type=\""text/javascript\"" src=\""""
                        + Strings.escapeMarkup(schema
                                + ""://maps.google.com/maps/api/js?v=3&sensor=false&"")
                        + ""\""></script>""));

            }
            else
            {
                response.render(JavaScriptHeaderItem.forUrl(schema + ""://maps.googleapis.com/maps/api/js?sensor=""
                        + false +  ""&callback=initialize""));
            }

which solved the ajax problems for us",15/Oct/12 13:38;mgrigorov;Now Wicket escapes the url in Ajax requests and render the non-escaped url in normal requests.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE - BaseWicketTester.clickLink() does not work with a ResourceLink with ResourceReference,WICKET-4810,12611004,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,elelay,elelay,09/Oct/12 15:31,10/Oct/12 07:00,13/Mar/19 23:17,10/Oct/12 05:29,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,wicket,,,,,,,0,,,,,,,"When using BaseWicketTester.clickLink() with a ResourceLink with a ResourceReference, it does not work.
Clicking link in server (Jetty) it works and opens the resource. See attached quickstart.

When the ResourceLink is created with the Resource directly,  BaseWicketTester.clickLink() works.


	@Test
	public void clickingLink() {
              // doesn't work
		tester.clickLink(""shared"");
		Assert.assertEquals(tester.getContentTypeFromResponseHeader(), ""text/plain"");
	}
	
	@Test
	public void usingListener() {
                // doesn't work either
		tester.executeListener(tester.getComponentFromLastRenderedPage(""shared""), IResourceListener.INTERFACE);
		Assert.assertEquals(tester.getContentTypeFromResponseHeader(), ""text/plain"");
	}",,,,,,,,,,,WICKET-4437,,,,,,,,,,,09/Oct/12 15:40;elelay;sharedresourcelink.zip;https://issues.apache.org/jira/secure/attachment/12548415/sharedresourcelink.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-10 05:29:48.63,,,no_permission,,,,,,,,,,,246172,,,Wed Oct 10 07:00:27 UTC 2012,,,,,,0|i07hx3:,41670,,,,,,,,"09/Oct/12 15:40;elelay;the quickstart (2 tests fail)
","10/Oct/12 05:29;mgrigorov;Improved the code for clicking a ResourceLink. Now it uses Link#getURL() to get the real url for both IResource and ResourceReference. #clickLink() test now works fine

The second test (tester.executeListener(Component, IResourceListener.INTERFACE);) still fails because it tries to use ResourceLink with IResource while in your case it actually uses ResourceReference and this is a bug in the application.","10/Oct/12 07:00;elelay;OK, it is fine like this.
Using executeListener() in the 2nd test was only to show that the work-around provided in WICKET-4437 was not working in this case.

Thank you very much !

For somebody not wanting to wait for 6.2.0, it can be done outside BaseWicketTester :
                WicketTester tester;
		ResourceLink<?> lnk = (ResourceLink<?>)tester.getComponentFromLastRenderedPage(""myresourcelink"");
		try
		{
			Method getUrlMethod = ResourceLink.class.getDeclaredMethod(
				""getURL"", (Class<?>[])null);
			getUrlMethod.setAccessible(true);

			String url = (String)getUrlMethod.invoke(
					lnk, (Object[])null);
			tester.executeUrl(url.toString());
		}
		catch (Exception e)
		{
			fail(""this shouldn't fail!!"");
		}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester.clickLink() does not work with a ResourceLink,WICKET-4437,12545165,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jsyrjala,jsyrjala,05/Mar/12 11:39,09/Oct/12 15:31,13/Mar/19 23:17,07/Mar/12 14:16,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"When using BaseWicketTester.clickLink() with ResourceLink, it does not work. Clicking link in server (Jetty) it works and opens the resource. See attached quickstart.

	@Test
	public void clickingLink() {
              // doesn't work
		tester.clickLink(""download"");
		Assert.assertEquals(tester.getContentTypeFromResponseHeader(), ""text/plain"");
	}
	
	@Test
	public void usingListener() {
                // works
		tester.executeListener(tester.getComponentFromLastRenderedPage(""download""), IResourceListener.INTERFACE);
		Assert.assertEquals(tester.getContentTypeFromResponseHeader(), ""text/plain"");
	}",,,,,,,,,,,,,,,,,,,,,,05/Mar/12 11:42;jsyrjala;resourcelink.tar.gz;https://issues.apache.org/jira/secure/attachment/12517070/resourcelink.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,230351,,,2012-03-05 11:39:11.0,,,,,,0|i00vqv:,3075,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RfcCompliantEmailAddressValidator error message not defined,WICKET-4794,12609745,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emera,emera,01/Oct/12 12:51,03/Oct/12 11:26,13/Mar/19 23:17,03/Oct/12 11:26,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.2.0,,wicket-extensions,,,,,,,0,,,,,,,"The error message of the RfcCompliantEmailAddressValidator seems not to be defined.
In case of validation error the following warning occurs:
 org.apache.wicket.markup.html.form.FormComponent
Could not locate error message for component:
RequiredTextField@description:form_id:email
and error:
[ValidationError message=[null],
keys=[RfcCompliantEmailAddressValidator],
variables=[[pattern=(?:(?:\r\n)?[ \t])*(?:(?:(?:[^()<>@,;:\"".\[\] ...
\t])*))*\>(?:(?:\r\n)?[ \t])*))*)?;\s*)]]]. Tried keys:
email.RfcCompliantEmailAddressValidator,
RfcCompliantEmailAddressValidator.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-10-03 11:26:08.622,,,no_permission,,,,,,,,,,,257692,,,Wed Oct 03 11:26:08 UTC 2012,,,,,,0|i0k853:,116136,,,,,,,,"03/Oct/12 11:26;mgrigorov;Fixed in 1.5.x and 6.x branches.
Branch 1.4 is frozen and receives only security related fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxTabbedPanel doesn't include constructor with model,WICKET-4786,12609236,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,leadseeker,leadseeker,26/Sep/12 13:36,26/Sep/12 18:22,13/Mar/19 23:17,26/Sep/12 18:22,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket-extensions,,,,,,,0,,,,,,,"As described in WICKET-4749 TabbedPanel has an option to provide a model to the constructor, this constructor isn't available in AjaxTabbedPanel.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-26 18:22:51.082,,,no_permission,,,,,,,,,,,257696,,,Wed Sep 26 18:22:51 UTC 2012,,,,,,0|i0k85z:,116140,,,,,,,,26/Sep/12 18:22;svenmeier;Added constructor.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractDefaultAjaxBehavior.getCallbackFunction should not add the event attribute,WICKET-4750,12606221,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,papegaaij,papegaaij,papegaaij,05/Sep/12 10:00,24/Sep/12 07:52,13/Mar/19 23:17,05/Sep/12 10:11,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.1.0,,,wicket,,,,,,,0,,,,,,,"If getCallbackFunction is used on an EventAjaxBehavior, it will add an 'e' parameter to the ajax attributes, which causes the callback function returned by this method to register an event handler rather than performing the ajax call immediately. The event names should be ignored.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,252569,,,Wed Sep 05 10:11:39 UTC 2012,,,,,,0|i0cuvb:,72945,,,,,,,,05/Sep/12 10:11;papegaaij;Fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DownloadLink doesn't wrap the String model used for file name nor does it detach,WICKET-4738,12605535,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,bitstorm,bitstorm,30/Aug/12 15:08,24/Sep/12 07:52,13/Mar/19 23:17,30/Aug/12 16:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,,,,,,,,0,,,,,,,"Component DownloadLink doesn't call method wrap of class Component on parameter fileNameModel. This causes models like StringResourceModel to not resolve resource bundles correctly.
See the discussion here: http://stackoverflow.com/questions/12196533/how-to-use-wicket-stringresourcemodel-in-downloadlink

The patch seems quite trivial. 

Detachment is also missing.",,,,,,,,,,,,,,,,,,,,,,30/Aug/12 15:08;bitstorm;wicket-4738.patch;https://issues.apache.org/jira/secure/attachment/12543100/wicket-4738.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-08-30 16:49:18.589,,,no_permission,,,,,,,,,,,252572,,,Thu Aug 30 16:49:18 UTC 2012,,,,,,0|i0cuvz:,72948,,,,,,,,30/Aug/12 16:49;svenmeier;Thanks Andrea!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page's stateless hint is initially set to 'false',WICKET-4763,12607665,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,cleiter,cleiter,14/Sep/12 15:58,17/Sep/12 09:07,13/Mar/19 23:17,17/Sep/12 08:45,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.9,6.1.0,,wicket-devutils,,,,,,,0,,,,,,,"If RenderPerformanceListener is active then sessions will be created even for stateless pages. This happens because RPL is an IComponentInstantiationListener which adds a Behavior to every component. That causes a call to addStateChange() which in turns calls AbstractPageManager#touchPage. At this point #isPageStateless always returns false (!) and so a session is bound. The problem is that all this happens very early in the creation of a Component when it's not fully initialized yet. If RPL implemented IComponentInitializationListener instead this problem wouldn't occur.

I can't really tell if it's a bug or not that adding a Behavior in an IComponentInstantiationListener makes pages stateful... Maybe that's just generally not a good idea.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-09-17 08:45:37.785,,,no_permission,,,,,,,,,,,252545,,,Mon Sep 17 08:45:37 UTC 2012,,,,,,0|i0cup3:,72917,,,,,,,,17/Sep/12 08:45;mgrigorov;Pages by default should be stateless. From now on Component#FLAG_RESERVED5 (Page#STATELESS_HINT) is set to 'true' by default.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringValidator.exactLength has wrong variable in ErrorMessage,WICKET-4717,12603844,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,derethas,derethas,17/Aug/12 11:27,17/Aug/12 17:19,13/Mar/19 23:17,17/Aug/12 17:19,6.0.0,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"In error message for StringValidator.exactLength is variable ${exact} , but in StringValidator.decorate is added variable length to map and not exact. 

Exception when is error message interpolate for show in feedback.

Caused by: java.lang.IllegalArgumentException: Value of variable [[exact]] could not be resolved while interpolating [['${label}' is not exactly ${exact} characters long.]]

property from application.
StringValidator.exact='${label}' is not exactly ${exact} characters long.

When I added same property in my own properties and change exact to length, it works.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-08-17 17:19:01.149,,,no_permission,,,,,,,,,,,257704,,,Fri Aug 17 17:19:01 UTC 2012,,,,,,0|i0k87r:,116148,,,,,,,,"17/Aug/12 17:19;svenmeier;The variable ""exact"" is now added, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataTable - use <div> for the content,WICKET-4690,12601137,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,slowery23,slowery23,01/Aug/12 22:41,15/Aug/12 14:52,13/Mar/19 23:17,02/Aug/12 11:17,6.0.0-beta1,6.0.0-beta2,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket-extensions,,,,,,,0,,,,,,,Component tags added to an AbstractColumn do not render in deployment mode (or with getMarkupSettings().stripWicketTags(true) called in your Application.init() because now the content of the cell column is now bound to wicket:container whereas it was bound to span in wicket 1.5 and below.,,,,,,,,,,,,,,,,,,,WICKET-4710,,,01/Aug/12 22:42;slowery23;brokedatatable.zip;https://issues.apache.org/jira/secure/attachment/12538844/brokedatatable.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257713,,,Wed Aug 01 22:42:54 UTC 2012,,,,,,0|i0k89r:,116157,,,,,,,,01/Aug/12 22:42;slowery23;Attached quickstart demonstrating that a link inside a column does not work,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javascript error when closing a ModalWindow with IE 8,WICKET-4695,12601359,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jsyrjala,jsyrjala,03/Aug/12 12:13,06/Aug/12 10:07,13/Mar/19 23:17,06/Aug/12 10:07,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket-extensions,,,,,,,0,ajax,javascript,ModalWindow,,,,"Closing a ModalWindow in IE 8 may cause following javascript error to console:

  'win.current' is null or not an object

This doesn't happen with Chrome or Firefox and software seems to work correctly: ModalWindow closes correctly etc. This doesn't happen with all ModalWindows in my application, but if it happens, it will happen every time. I don't know what triggers this behavior, but a work around is to add null checks to ModalWindow.java and modal.js, currently there are only check for undefined variables.

ModalWindow.java, getCloseJavacriptInternal(), line 416 in wicket-1.5.5 source

+ ""if (typeof(win) != \""undefined\"" && typeof(win.current) != \""undefined\"" && win.current != null) {\n""

modal.js, Window.close, line 258

	if (typeof(win) != ""undefined"" && typeof(win.current) != ""undefined"" && win.current != null) {",Internet Explorer 8,,,,,,,,,,,,,,,,,,,,,03/Aug/12 12:47;jsyrjala;fix-WICKET-4695-for-wicket-1.5.x.patch;https://issues.apache.org/jira/secure/attachment/12539042/fix-WICKET-4695-for-wicket-1.5.x.patch,03/Aug/12 12:36;jsyrjala;fix-WICKET-4695.patch;https://issues.apache.org/jira/secure/attachment/12539040/fix-WICKET-4695.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-08-03 12:19:19.839,,,no_permission,,,,,,,,,,,257710,,,Fri Aug 03 12:47:25 UTC 2012,,,,,,0|i0k893:,116154,,,,,,,,03/Aug/12 12:19;mgrigorov;Can you reproduce the problem at http://www.wicket-library.com/wicket-examples/ajax/modal-window ?,"03/Aug/12 12:22;jsyrjala;I looked at sources in master branch in git, and it seems that the same problem is present in also in the latest version.",03/Aug/12 12:25;jsyrjala;It doesn't happen in http://www.wicket-library.com/wicket-examples/ajax/modal-window.,03/Aug/12 12:36;jsyrjala;Patch that contains changed detailed in issue description.,"03/Aug/12 12:38;jsyrjala;By the way, instructions to provide a patch are not correct in http://wicket.apache.org/contribute/patch.html

git diff should have parameter --cached. Adding changes to index makes them disappear from git diff.

    git add any_files_you_created_modified_or_deleted
    git diff --cached > /tmp/fix-WICKET-NNNN.patch",03/Aug/12 12:47;jsyrjala;Add also patch for wicket-1.5.x branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxFallbackLink and log a warning when there are several ajax event behaviors on the same event,WICKET-4641,12597791,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,coolzerotas,coolzerotas,06/Jul/12 16:07,24/Jul/12 15:02,13/Mar/19 23:17,24/Jul/12 15:02,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"When I was using an AjaxFallbackLink I got the warning about multiple Behaviours changing the ""onclick"" attribute.

I changed it to AjaxLink and the warning disappeared.",,,,,,,,,,,,,,,,,,,,,,10/Jul/12 09:43;coolzerotas;ajaxlink_fallback_bug.zip;https://issues.apache.org/jira/secure/attachment/12535798/ajaxlink_fallback_bug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-07-09 07:26:45.566,,,no_permission,,,,,,,,,,,257735,,,Tue Jul 24 15:02:49 UTC 2012,,,,,,0|i0k8en:,116179,,,,,,,,"09/Jul/12 07:26;mgrigorov;Can you please provide a quickstart that reproduces the problem ?
The warning is issued when you add 'onclick' attribute to the link by using ComponentTag.put(). Or maybe you have 'onclick' in the original markup..","10/Jul/12 09:35;coolzerotas;I would provide a quickstart if I knew how to make one... maybe you can help me out.

Anyway, I already narrowed the problem. This happens when you have:

<input type=""button"" wicket:id=""link"" value=""Help us help you:"" />

And you make this an AjaxFallbackLink, with AjaxLink works fine.",10/Jul/12 09:38;mgrigorov;Just create a mini application as described at http://wicket.apache.org/start/quickstart.html and add the minimum amount of code to show the problem.,10/Jul/12 09:43;coolzerotas;quickstart showing the problem,"23/Jul/12 10:24;mgrigorov;The problem is that you use a Link for <input type=""button"">. If you use a Link with <a> or AjaxFallbackButton with <input type=""button""> then all is fine.

I understand that the problem is in Wicket because it generates the attributes and their values but I think the benefit of this warning is bigger than the problem in this ticket. 

Using AjaxFallbackLink with any other HTML element but <a>, <area> and <link> will NOT actually fallback if JavaScript is switched off because Wicket uses ""onclick"" when ""href"" is not an option. AjaxFallbackLink's javadoc in Wicket 6.x explains that. ","23/Jul/12 12:06;coolzerotas;if Fallback doesn't work on elements that don't have href, can't it issue an error? Or is it a big overhead?",23/Jul/12 12:19;mgrigorov;We can log a WARN for now and change it to throwing an exception in a later version of Wicket.,"24/Jul/12 15:02;mgrigorov;Since 1.5.8 Wicket will log a warning if AjaxFallbackLink is used on a markup element different than <a>, <area< or <link>.
Wicket 6.0.0 will throw MarkupException.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resources for Fragment in ModalWindow are not added to the page head,WICKET-4669,12599982,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,wickeria,wickeria,24/Jul/12 11:54,24/Jul/12 12:52,13/Mar/19 23:17,24/Jul/12 12:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,,,,,,,,0,,,,,,,quickstart with comments is attached,,,,,,,,,,,,,,,,,,,,,,24/Jul/12 11:54;wickeria;quickstart2.zip;https://issues.apache.org/jira/secure/attachment/12537680/quickstart2.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257722,,,2012-07-24 11:54:33.0,,,,,,0|i0k8br:,116166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractAjaxTimerBehavior throws ComponentNotFoundException when its component is replaced in PageMap.,WICKET-4652,12598261,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,slowery23,slowery23,10/Jul/12 19:58,23/Jul/12 08:45,13/Mar/19 23:17,23/Jul/12 08:45,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0,,,wicket,,,,,,,0,,,,,,,"If a component with an AbstractAjaxTimerBehavior (or AjaxSelfUpdatingTimerBehavior) or any of its parents are replaced in the PageMap with another component, the next time behavior fires, you get a ComponentNotFoundException because the component with the attached behavior is no longer there.

Not sure what js magic made this work in previous versions of wicket, but it wasn't an issue in 1.4.  Not sure about 1.5 as we are upgrading from 1.4 to 6.0.",Windows 7 with Jetty,,,,,,,,,,,,,,,,,,,,,11/Jul/12 14:32;slowery23;ASF.LICENSE.NOT.GRANTED--Wicket 1.5 Ajax Debug Window.jpg;https://issues.apache.org/jira/secure/attachment/12536035/ASF.LICENSE.NOT.GRANTED--Wicket+1.5+Ajax+Debug+Window.jpg,11/Jul/12 15:17;slowery23;timer-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12536040/timer-quickstart.zip,11/Jul/12 14:30;slowery23;timer15.war;https://issues.apache.org/jira/secure/attachment/12536032/timer15.war,11/Jul/12 14:30;slowery23;timer6.war;https://issues.apache.org/jira/secure/attachment/12536031/timer6.war,,,,,4.0,,,,,,,,,,,,,,,,,,,2012-07-11 07:09:46.294,,,no_permission,,,,,,,,,,,257730,,,Mon Jul 23 08:45:40 UTC 2012,,,,,,0|i0k8dj:,116174,,,,,,,,10/Jul/12 20:00;slowery23;This java and html will show the described behavior,"11/Jul/12 07:09;mgrigorov;I'm not sure either how this worked for you in 1.4...
In 6.0 the timer behavior has an additional logic to clear the timer (JS: clearTimeout()) when it is stopped. Your code doesn't stop it, so I think it it a problem in your code.

This is like not closing DB resources (connections, statements), Wicket cannot help you in cases like this.

If you debug what made it working in 1.4 and prove that there is a regression in 6.0 then I'll reopen the ticket. Otherwise I recommend you to stop the timer behavior when you replace the connected component (see org.apache.wicket.ajax.AbstractAjaxTimerBehavior#stop(AjaxRequestTarget)). ","11/Jul/12 14:30;slowery23;This is a regression in wicket 6.  Works fine in the 1.4 and 1.5 lines.  If I can read the javascript correctly, it looks like wicketAjaxGet/Post take in a precondition.  In wicket 1.5, the precondition is function() {var c = Wicket.$(\'myid\'); return typeof(c) != \'undefined\' && c != null}.bind(this), which is checking that the component is still on the page.  Looks like 6.0 is not providing a precondition, so it calls the url and fails when it attempts to update the component which is no longer on the page.

I will attach an app with wicket 6.0 and wicket 1.5 and you can see it works in 1.5, but not 6.0.","11/Jul/12 14:32;slowery23;Notice last line stating ""Ajax GET stopped because of precondition...""","11/Jul/12 14:33;mgrigorov;There is default precondition at wicket-ajax-jquery.js, line 442 (latest code in master):

// the precondition to use if there are no explicit ones
				defaultPrecondition = [ function () {
					if (attrs.c) {
						if (attrs.f) {
							return Wicket.$$(attrs.c) && Wicket.$$(attrs.f);
						} else {
							return Wicket.$$(attrs.c);
						}
					}
				}];

i.e. it checks whether the component is in the document.",11/Jul/12 14:38;slowery23;Are you saying you believe this is fixed in the master line?  This same code appears in 6.0.0-beta2 as well.,"11/Jul/12 14:40;mgrigorov;No, this code is there since the rewrite of the Ajax code. For some reason it doesn't work for your case.
Please attach a proper quickstart app. Deploying .war and injecting fixes in it is very time consuming.","11/Jul/12 15:17;slowery23;This is the first quickstart I've created.  If something is missing, or you need more, let me know.  The JUnit doesn't fail, but you can plainly see it fail in the browser.","23/Jul/12 08:45;mgrigorov;Fixed.
It was a problem in Wicket.DOM.inDoc() method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringResourceModel interpolation in resource key is broken,WICKET-4662,12599514,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,svenmeier,svenmeier,19/Jul/12 19:12,19/Jul/12 19:13,13/Mar/19 23:17,19/Jul/12 19:13,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0,,wicket,,,,,,,0,,,,,,,"Having:

  new StringResourceModel(""details.disabled.${disabled}"", this.model)

... and isDisabled returns a boolean naturally.

In Wicket 1.5, the StringResourceModel now does some heavier processing on the key, thus the boolean value is converted first using the registered converter and then inserted into the resource key; resulting in keys like ""details.disabled.yes"" or ""details.disabled.ja"" etc which are even language dependent!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257726,,,Thu Jul 19 19:13:43 UTC 2012,,,,,,0|i0k8cn:,116170,,,,,,,,19/Jul/12 19:13;svenmeier;See WICKET-3753.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Atmosphere Modul not working on first page after Jetty restart,WICKET-4642,12597892,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,papegaaij,pausb,pausb,07/Jul/12 10:18,09/Jul/12 15:06,13/Mar/19 23:17,09/Jul/12 15:06,6.0.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta3,,,wicket-atmosphere,,,,,,,0,patch,,,,,,"After Jetty is started if the very first page being visited is a page with AtmosphereBehavior (using @Subscribe), for some reason by the time the page is being registered by EventBus (#registerPage(String trackingId, Page page)) the session is null and after the page has been rendered its not null any more thus having a different PageKey and so the events for the page are filtered out at line #140 or EventBus

If you just add Session.get().bind() in the constructor method of your page, everything would work as expected.","Ubutnu 12.04 3.2.0-26-generic
Embedded Jetty 8.1.3.v20120416",7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-07-09 15:06:20.214,,,no_permission,,,,,,,,,,,257734,,,Mon Jul 09 15:06:20 UTC 2012,,,,,,0|i0k8ef:,116178,,,,,,,,09/Jul/12 15:06;papegaaij;Fixed by moving the registration of the behavior to postOnBeforeRender.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiFileUploadField after selecting a file does not hide properly input field ,WICKET-4633,12596396,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,wzadlo,wzadlo,29/Jun/12 13:03,09/Jul/12 12:24,13/Mar/19 23:17,09/Jul/12 12:24,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,javascript,wicket,,,,,"Component org.apache.wicket.markup.html.form.upload.MultiFileUploadField in related javascript uses code: ''this.style.position = 'absolute'; this.style.left = '-1000px' "" to hide a file input after selecting a file.

Unfortunately on my screen (1920x1200) if I put this component on the right side of a page then after selecting a file, ""the hidden input"" is moved to the left of its container, but still visible for a user.

Changing style.position to 'fixed' should resolve the problem, so the input field will be positioned relative to the browser window, not to its ancestor.","Windows 7 64-bit, JDK 1.6.0, Mozilla Firefox 13.0.1",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257737,,,2012-06-29 13:03:26.0,,,,,,0|i0k8f3:,116181,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxFallbackLink#newAjaxEventBehavior does not pass parameter,WICKET-4628,12595790,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,manthos,manthos,25/Jun/12 14:09,25/Jun/12 14:32,13/Mar/19 23:17,25/Jun/12 14:32,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,,,wicket,,,,,,,0,,,,,,,"AjaxFallbackLink#newAjaxEventBehavior does not pass parameter 'event' to AjaxEventBehavior (in difference to AjaxLink).

FYI I don't need this, just saw it during debugging....",,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257740,,,2012-06-25 14:09:45.0,,,,,,0|i0k8fr:,116184,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate INFO logs due to twice registered RequestInterfaceListeners,WICKET-4598,12559842,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mgrigorov,mgrigorov,08/Jun/12 14:00,08/Jun/12 14:10,13/Mar/19 23:17,08/Jun/12 14:10,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.Initializer#init() (wicket-core) registers several RequestListenerInterface instances and this causes duplicated log entries which confuse the users.

There is a comment in this #init() method:

    // Register listener interfaces explicitly (even though they implicitly
    // register when loaded) because deserialization of an object that
    // implements an interface does not load the interfaces it implements!

What I believe is the problem is the code at org.apache.wicket.RequestListenerInterface#registerRequestListenerInterface() which throws an exception if there is an interface with that name but it has a different method than the previous. Otherwise it re-registers it and logs the message second time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257744,,,2012-06-08 14:00:50.0,,,,,,0|i0k8gn:,116188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Shared Behavior's renderHead method called only for one component, not for all of them",WICKET-4570,12558037,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,otah,otah,25/May/12 05:48,03/Jun/12 04:21,13/Mar/19 23:17,03/Jun/12 04:21,1.5.0,1.5.1,1.5.2,1.5.3,1.5.4,1.5.5,1.5.6,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"When using a shared behavior among many components, its renderHead method is called only once. The reason is at the end of the Component.renderHead(HtmlHeaderContainer) method:

               for (Behavior behavior : getBehaviors())
               {
                    if (isBehaviorAccepted(behavior))
                    {
                         if (response.wasRendered(behavior) == false) // <---- check whether the behavior has been marked as rendered
                         {
                              behavior.renderHead(this, response);
                              response.markRendered(behavior); // <---- behavior marked as rendered
                         }
                    }
               }

When calling this method of the first component, which contains given Behavior, the Behavior is added to the set of the already-rendered elements. This means, its renderHead method is never called for the rest of the components, which contain it.

From documentation I suggest:
- Behaviors can be shared among more components (if they are not ""attached"" in bind() method), as written in Behavior class javadoc: ""They can be bound to a concrete component (...), but they don't need to.""
- A Behavior method should behave the same way, as the same code placed directly in the component (in the corresponding method)

Moreover, in the documentation of the Behavior.renderHead is written: ""Render to the web response whatever the component wants to contribute to the head section."" So as I understand it, the information about component should also be the ""key"" whether to mark the Behavior rendered or not. More precisely, the proposed solution should be something like the following (Couple means something like a class with two fields - Behavior and Component):

               for (Behavior behavior : getBehaviors())
               {
                    if (isBehaviorAccepted(behavior))
                    {
                         Couple c = new Couple(behavior, this); // <---- create couple
                         if (response.wasRendered(c) == false) // <---- check the couple
                         {
                              behavior.renderHead(this, response);
                              response.markRendered(c); // <---- mark the couple as rendered
                         }
                    }
               }


Maybe this is not a bug, but a feature. In case of the feature I think, that it requires at least a clarification in the documentation. In (probably) all other usage of shared Behavior, the Behavior does not cause any troubles and it behaves as expected from the documentation. But this method has quite inconsistent effect, comparing to the other ones.


If an example is needed:

I need a Behavior to attach all components, which have to automatically contribute to HTML head a JavaScript and CSS file with the same name as the component. The Behavior does not hold any data (no fields, empty bind method), so I would like to make it singleton (or not directly pattern Singleton as such - for example let it overridable, but provide a default instance). Because creating new instances does not have much sense in this case and it brings many unnecessary objects on the heap.

Using of new instance per component works fine, of course, but the issue is in the situation, if I need the shared instance across the application.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257758,,,2012-05-25 05:48:33.0,,,,,,0|i0k8jr:,116202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Link always causes Page to become stateful, regardless of visibility",WICKET-4578,12558768,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,oele,oele,31/May/12 12:01,03/Jun/12 03:23,13/Mar/19 23:17,03/Jun/12 03:23,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"Despite the changes made in WICKET-4468 , an invisible Link still causes a Page to become stateful. 

The problem seems to be that Component#isStateless does this before even checking the visibility: 

		if (!getStatelessHint())
		{
			return false;
		}


... and Link#getStatelessHint() just contains just ""return false"" . ",,,,,,,,,,,,,,,,,,,,,,31/May/12 15:33;oele;WICKET-4578.diff;https://issues.apache.org/jira/secure/attachment/12530401/WICKET-4578.diff,31/May/12 12:03;oele;invisibleStatefulTest.zip;https://issues.apache.org/jira/secure/attachment/12530379/invisibleStatefulTest.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,257753,,,Thu May 31 15:33:01 UTC 2012,,,,,,0|i0k8in:,116197,,,,,,,,31/May/12 12:03;oele;A *very* basic quickstart showing a page with an invisible link that becomes stateful. ,31/May/12 15:33;oele;proposed fix for Component & ComponentTest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester fails with a StringIndexOutOfBounds exception when using an external redirect,WICKET-4558,12555139,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,cmenzel,cmenzel,cmenzel,14/May/12 14:23,14/May/12 16:47,13/Mar/19 23:17,14/May/12 16:18,1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta3,,wicket,,,,,,,0,,,,,,,"When testing a component that e.g. throws a RedirectToUrlException(""http://foo/"") WicketTester fails with a StringIndexOutOfBoundsException in ServletWebRequest#getContextRelativeUrl. I'm aware that WT doesn't currently support this and needs setFollowRedirects(false) in this case, but there should be a more meaningful error message than this.

I'll attempt to distinguish local redirects from external ones and providing the external URL in a new assertExternalRedirectUrl method instead of having it crash and burn.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,239389,,,Mon May 14 16:18:08 UTC 2012,,,,,,0|i0dbtr:,75845,,,,,,,,"14/May/12 16:18;cmenzel;Fixed in 1.5.x and master.

I'm detecting external redirects and simply stop processing the request at that point. WicketTester has a new method #assertRedirectUrl that allows to check for a correct redirect.

No compatibility issue, only one new public concrete method. The old failing behavior is a bug and prevented proper testing anyway.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
discrepancy between JavaDoc and code in MarkupContainer#visitChildren(),WICKET-4519,12552840,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,bertra,bertra,26/Apr/12 11:27,08/May/12 14:44,13/Mar/19 23:17,08/May/12 14:44,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.7,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"The JavaDoc for  MarkupContainer#visitChildren() states that
 ""@param clazz The class of child to visit, or null to visit all children""

The parameter clazz is used to create a new ClassVisitFilter which in
its visitObject() does not check for clazz == null, leading to a NPE.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,237066,,,2012-04-26 11:27:58.0,,,,,,0|i0k8n3:,116217,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebApplication#renderXmlDecl() uses wrong name of the 'Accept' request header,WICKET-4516,12552666,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mgrigorov,mgrigorov,25/Apr/12 14:53,25/Apr/12 14:55,13/Mar/19 23:17,25/Apr/12 14:55,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,,,,,,,"The code reads ""HTTP_ACCEPT"" header while it has to be ""Accept"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,237068,,,2012-04-25 14:53:42.0,,,,,,0|i0k8nj:,116219,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Small Bug in JavaDoc for SpringWebApplicationFactory,WICKET-2822,12461088,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,count.negative,count.negative,03/Apr/10 12:02,18/Apr/12 12:25,13/Mar/19 23:17,03/Apr/10 20:13,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,,,wicket-spring,,,,,,,0,,,,,,,"Looking to the JavaDoc of SpringWebApplicationFactory in the filter config:
<init-param>
     <param-name>applicationClassName</param-name>
     <param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>
   </init-param>

It must be applicationFactoryClassName. When copy paste from the docu to web.xml you'll se the bug.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-04-18 12:18:56.57,,,no_permission,,,,,,,,,,,203670,,,Wed Apr 18 12:25:06 UTC 2012,,,,,,0|i0kcgn:,116836,,,,,,,,18/Apr/12 12:18;alewando;This javadoc issue still exists in 1.5.5,"18/Apr/12 12:25;mgrigorov;Fixed!
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpSessionStore.onUnbind is never invoked,WICKET-4489,12549643,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,wicketeer,wicketeer,05/Apr/12 08:11,10/Apr/12 12:17,13/Mar/19 23:17,10/Apr/12 12:17,1.5.0,1.5.4,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,bug,session,wicket,,,,"I have extended HttpSessionStore to keep track of the number of active sessions. I increment session counter in method onBind and decrement session counter in method onUnbind. However, method HttpSessionStore.onUnbind is never invoked. onUnbind should be invoked, when session is invalidated. In contrast, method WebApplication.sessionUnbound is correctly invoked, when session is invalidated.

I will try to attach a small project, which demonstrates this bug.",,,,,,,,,,,,,,,,,,,,,,05/Apr/12 08:14;wicketeer;wicket.testsessionunbind.tgz;https://issues.apache.org/jira/secure/attachment/12521472/wicket.testsessionunbind.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,234634,,,Thu Apr 05 08:14:43 UTC 2012,,,,,,0|i0k8qf:,116232,,,,,,,,05/Apr/12 08:14;wicketeer;Wicket project which demonstrates the bug of HttpSessionStore.onUnbind not being called. Start application and follow 'Logout' link a few times.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
newResourceResponse() always process IResourceStream,WICKET-4480,12548452,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,terasaka.k,terasaka.k,28/Mar/12 08:39,02/Apr/12 12:28,13/Mar/19 23:17,02/Apr/12 12:28,1.5.5,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta2,,wicket,,,,,,,0,cache,resource,,,,,"The conditional statement 'if (resourceResponse.dataNeedsToBeWritten(attributes))' in PackageResource$newResourceResponse always turns true.

dataNeedsToBeWritten() method internally uses its own lastModified field, which is null (by default) and always returns true at that point resulting in getting a stream and processing it every time.

I think this ruins resource caching.

NOTE: The API document of dataNeedsToBeWritten() exclaims setLastModified() be called first.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,233549,,,2012-03-28 08:39:38.0,,,,,,0|i0k8rr:,116238,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.validation.ValidatorAdapter class causes problem with validator properties to be loaded,WICKET-4379,12540777,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,e1n,e1n,01/Feb/12 20:52,15/Mar/12 14:18,13/Mar/19 23:17,09/Feb/12 13:52,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"
PROBLEM:
<e1nPL> hi I am having such problem: 
<e1nPL> I have implemented validator by implementing IValidator<T> interface
<e1nPL> and I have impelemnted the same validator by extending AbstractValidator<T> class

CODE:
    ===================== VALIDATOR EXTENDED FROM AbstractValidator =====================
    package com.mycompany;
     
    import java.util.regex.Pattern;
    import org.apache.wicket.IClusterable;
    import org.apache.wicket.util.lang.Classes;
    import org.apache.wicket.validation.IValidatable;
    import org.apache.wicket.validation.IValidator;
    import org.apache.wicket.validation.ValidationError;
    import org.apache.wicket.validation.validator.AbstractValidator;
     
    /**
     *
     * @author e1n
     */
    public class PasswordPolicyValidator<T> extends AbstractValidator<T> {
     
        private static final Pattern UPPER = Pattern.compile(""[A-Z]"");
        private static final Pattern LOWER = Pattern.compile(""[a-z]"");
        private static final Pattern NUMBER = Pattern.compile(""[0-9]"");
       
        @Override
        public void onValidate(IValidatable<T> validatable) {
            final String password = (String)validatable.getValue();
           
            if (!NUMBER.matcher(password).find()) {
                error(validatable, ""no-digit"");
            }
            if (!LOWER.matcher(password).find()) {
                error(validatable, ""no-lower"");
            }
            if (!UPPER.matcher(password).find()) {
                error(validatable, ""no-upper"");
            }
     
        }
       
        @Override
        public void error(IValidatable<T> validatable, String errorKey) {
            ValidationError err = new ValidationError();
            err.addMessageKey(Classes.simpleName(getClass()) + ""."" + errorKey);
            validatable.error(err);
        }
       
    }
     
     
    =============== VALIDATOR directly implementing IValidator interfce ====================
    package com.mycompany;
     
    import java.util.regex.Pattern;
    import org.apache.wicket.IClusterable;
    import org.apache.wicket.util.lang.Classes;
    import org.apache.wicket.validation.IValidatable;
    import org.apache.wicket.validation.IValidator;
    import org.apache.wicket.validation.ValidationError;
    import org.apache.wicket.validation.validator.AbstractValidator;
     
    /**
     *
     * @author e1n
     */
    public class PasswordPolicyValidator<T> implements IValidator<T> {
     
        private static final Pattern UPPER = Pattern.compile(""[A-Z]"");
        private static final Pattern LOWER = Pattern.compile(""[a-z]"");
        private static final Pattern NUMBER = Pattern.compile(""[0-9]"");
     
        public void validate(IValidatable<T> validatable) {
            final String password = (String)validatable.getValue();
           
            if (!NUMBER.matcher(password).find()) {
                error(validatable, ""no-digit"");
            }
            if (!LOWER.matcher(password).find()) {
                error(validatable, ""no-lower"");
            }
            if (!UPPER.matcher(password).find()) {
                error(validatable, ""no-upper"");
            }
     
        }
       
        public void error(IValidatable<T> validatable, String errorKey) {
            ValidationError err = new ValidationError();
            err.addMessageKey(Classes.simpleName(getClass()) + ""."" + errorKey);
            validatable.error(err);
        }
       
    }



<e1nPL> I also have properties file which is named after validator class
<e1nPL> and placed in the same package
<e1nPL> my problem is that when i use to validate my form field validator which implements IValidator interface it is not capable of loading error messages from properties file
<e1nPL> but when i am using validator which is extending AbstractValidator class
<e1nPL> properties file with error msgs gets loaded
POSSIBLE FIX:
<e1nPL> ok i have found class which is responsible for my problem and it is probably a bug
<e1nPL> org.apache.wicket.validation.ValidatorAdapter
<e1nPL> which wraps classes that directly implements IValidator interface
<e1nPL> then when resources are loaded, and properties file are searched in class path etc., loaders search in wrong path that is build against org.apache.wicket.validation.ValidatorAdapter 
PLACE WHER FIX SHOULD OCCOUR
org.apache.wicket.resource.loader.ValidatorStringResourceLoader::loadStringResource(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.String)

","Windows 7, Netbeans 7.0.1, Java 6 SE (HotSpot)",,,,,,,,,,,,,,WICKET-4234,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-02-03 09:08:58.174,,,no_permission,,,,,,,,,,,226172,,,Fri Feb 03 09:08:58 UTC 2012,,,,,,0|i00vxb:,3104,,,,,,,,"03/Feb/12 09:08;mgrigorov;Fixed in 1.5.x.
Needs to be ported to 6.x ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UploadProgressBar won't update while uploading if CryptoMapper is used as RootRequestMapper,WICKET-4435,12544667,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,aosterberg,aosterberg,29/Feb/12 19:58,01/Mar/12 11:34,13/Mar/19 23:17,01/Mar/12 11:22,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket-extensions,,,,,,,0,wicket,,,,,,"UploadProgressBar status updating not working / updating while uploading files, if CryptoMapper is used as RootRequestMapper to encrypt URLs.
Problem seems to be that some resources (maybe UploadStatusResource.status) used internally by UploadProgressBar won't get found...","Windows, Linux, Eclipse, Tomcat",7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,29/Feb/12 20:00;aosterberg;myproject.zip;https://issues.apache.org/jira/secure/attachment/12516599/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-03-01 11:22:01.651,,,no_permission,,,,,,,,,,,229853,,,Thu Mar 01 11:22:01 UTC 2012,,,,,,0|i00vr3:,3076,,,,,,,,29/Feb/12 20:00;aosterberg;Here a quickstart to track the bug...,01/Mar/12 11:22;svenmeier;With Martin's help ... fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
executeAllTimerBehaviors does not find all timer behaviours,WICKET-4429,12543986,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,lassel,lassel,24/Feb/12 12:44,24/Feb/12 13:14,13/Mar/19 23:17,24/Feb/12 13:14,1.4.19,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.5,6.0.0-beta1,wicket,,,,,,,0,testing,,,,,,"WicketTester tester = new WicketTester();
tester.startPage(WaitPage.class);
tester.assertRenderedPage(WaitPage.class);
tester.executeAllTimerBehaviors(tester.getLastRenderedPage());

    public WaitPage() {
        Label message = new Label(""message"", ""Please wait .."");
        add(message);

        add(new AjaxSelfUpdatingTimerBehavior(Duration.milliseconds(1000)) {

            @Override
            protected void onPostProcessTarget(AjaxRequestTarget target) {
                // wait for background thread to complete
                // if (task.isDone()) { ...
                stop();
                setResponsePage(NextPage.class);
            }
        });


The timer does not fire.
Problem 1: The code looks for MarkupContainers 
Problem 2: The code looks for AjaxSelfUpdatingTimerBehavior but should look for AbstractAjaxTimerBehavior
",,,,,,,,,,,,,,,,,,,,,,24/Feb/12 12:46;lassel;AjaxSelfUpdatingTimerBehavior_test.zip;https://issues.apache.org/jira/secure/attachment/12515919/AjaxSelfUpdatingTimerBehavior_test.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,229224,,,Fri Feb 24 12:52:09 UTC 2012,,,,,,0|i00vrj:,3078,,,,,,,,24/Feb/12 12:46;lassel;A simple example and a unit test,24/Feb/12 12:52;lassel;Problem 2: AjaxSelfUpdatingTimerBehavior only applies to 1.4.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unversioned pages don't get touched when created and cannot be found by ID later,WICKET-4420,12543384,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,davesman,davesman,20/Feb/12 18:11,24/Feb/12 07:49,13/Mar/19 23:17,24/Feb/12 07:49,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,page,stored,version,wicket,,,"When I tell Wicket not to version pages by default via IPageSettings#setVersionPagesByDefault(false), created pages cannot be found later by theirs ID. Versioned pages are touched upon creation in dirty(boolean) method and thus stored in the page store. But unversioned ones are not! So when I create a Page, wrap it inside a PageProvider and RenderPageRequestHandler, then get its URL with urlFor, the URL is useless, because the page is referenced by its ID in the URL but it cannot be found by that URL later.
I'll give you an simple example.

PAGE 1: 
public class WicketMainPage extends WebPage { 
        public WicketMainPage() { 
                PopupPage page = new PopupPage(""Created: "" + new Date()); 
        // getSession().getPageManager().touchPage(page); 
                PageProvider pp = new PageProvider(page); 
                RenderPageRequestHandler rh = new RenderPageRequestHandler(pp); 
                add(new Label(""url"", urlFor(rh).toString())); 
        } 
} 
as you can see, I only create an instance of second page (which is not 
bookmarkable as it has some parameters), wrap it in page provider and request 
handler and simply output URL for it (of course it is an stateful URL). 

The second page is just simple outputting text from constructor 
PAGE 2: 
public class PopupPage extends WebPage { 
        public PopupPage(String text) { 
                add(new Label(""text"", text)); 
        } 
} 

When I run this, the app outputs an relative part of URL to the second page... 
if I copy this into browser, everything works, when pages are versioned. But 
when I set setVersionPagesByDefault(false) I start to get PageExpiredException 
whe trying to access the second page. When I uncomment the touchPage line, 
everythings works even with unversiones paged. 

I think, that instead of explicitly touching the page, it should be done by 
Wicket when retrieving the url for it. Somewhere in mapUrlFor or mapHandler, 
etc... Or maybe it should be touched in the dirty method just like versioned pages.","Windows 7 64-bit
JDK 1.6.0_29 64-bit
Jetty 6.1.16 / WebSphere 7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,228630,,,2012-02-20 18:11:43.0,,,,,,0|i00vsf:,3082,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"javascript with a less than character (""<"") fails to execute when added through a header contribution in ajax response",WICKET-3420,12497607,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,randypower,randypower,03/Feb/11 19:07,21/Feb/12 14:57,13/Mar/19 23:17,21/Mar/11 09:26,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,ajax,header-contribution,javascript,wicket-ajax.js,,,"This is adapted from a wicket users post I made (links are to the same thread in two archive systems):

http://markmail.org/search/?q=wicket%20users%20wicket-ajax.js#query:wicket%20users%20wicket-ajax.js+page:1+mid:rfts3ar3upffhbbt+state:results

http://mail-archives.apache.org/mod_mbox/wicket-users/201102.mbox/%3CAANLkTi=EkmTA0RnA+GyJE-CQWmkCxRLsjp+z8jwv-Aw9@mail.gmail.com%3E

The problem:  I have a panel with this:

    <wicket:head>
	<script>
		if (someVariable < 0) {
			someVariable = 0;		
		}
	</script>
    </wicket:head>

This script fails to execute when the panel is loaded by ajax.  If I replace the less than character ""<"" with equals ""=="", then it executes (but of course, this is not what I need).

I tested this in Firefox 4.0b10 and Chrome 8.

After some debugging, it seems to me that this needs to be corrected in wicket-ajax.js. The header contribution is sent to the browser inside of a CDATA section so the ""<"" character arrives to javascript intact. However, in parsing the script tag, the ""<"" seems to signal the beginning of an HTML tag that then is considered malformed.


Possible workarounds for apps:

 - Invert the logic so a greater-than is used. In my example, this would be: ""if (0 > someVariable) {""
 - Put the code into a separate JS file (the downside is it requires another network hop from the browser)
 - Embed the script in <wicket:panel> rather than <wicket:head> (the disadvantage is the script will be re-sent with the panel content when the panel is re-used on the same page)

",Validated this bug on my dev environment: Windows 7 64 bit using Firefox 4.0beta10 and Chrome 8.,,,,,,,,,,,,,,,,,,WICKET-4425,,,22/Feb/11 16:15;mgrigorov;WICKET-3420.patch;https://issues.apache.org/jira/secure/attachment/12471630/WICKET-3420.patch,19/Feb/11 20:35;ivaynberg;myproject.rar;https://issues.apache.org/jira/secure/attachment/12471486/myproject.rar,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-02-11 16:51:47.849,,,no_permission,,,,,,,,,,,204213,,,Mon Mar 21 09:26:04 UTC 2011,,,,,,0|i0kb13:,116604,,,,,,,,"11/Feb/11 16:51;mgrigorov;another workaround is to use ""if (someVar &lt; 0) {""","14/Feb/11 19:11;mgrigorov;Please a provide a quickstart that reproduces the problem.
Thanks!","18/Feb/11 09:54;mgrigorov;With r1071930 (trunk0 and r1071931 (1.4.x) I added logic to log an error with the message provided by the Javascript engine about the problem.
Tested with Firefox 3.6, Chrome 10.x and Opera 11. FF3 gives the best description of the problem. IE uses ActiveXObject to parse XML and has its own logic to log errors.

I think Wicket cannot do more here. Even my IDE marks this line as XML error. 
The best solution is to wrap the JS code in HTML comments:
<script>
<!--
  if (a < 0) {...}
-->
</script>

This is proven to work with the years.

If anyone else has better solution please share, otherwise I think we can close the ticket as ""Won't fix"",","18/Feb/11 10:17;hudson;Integrated in Apache Wicket 1.4.x #448 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/448/])
    WICKET-3420 javascript with a less than character (""<"") fails to execute when added through a header contribution in ajax response

Add logging for the cases when there is an error in the parsing of XML with DOMParser
",19/Feb/11 20:35;ivaynberg;attaching quickstart that reproduces the problem,20/Feb/11 17:49;ivaynberg;can we not do the wrapping within <!-- --> automatically?,"21/Feb/11 18:55;mgrigorov;If possible then it is hard to achieve.
With a custom MarkupFilter I was able to prepend raw markup only. That is I can add '-->' before </script> but I cannot find a way to add '<!--' after <script> and before script's body.
Reasons:
 - XmlPullParser doesn't create MarkupElements for text content. Just for open and close tags.
 - XmlPullParser doesn't go deeper in <script> tags

Another problem is org.apache.wicket.markup.AbstractMarkupParser.handleRawText(String) which strips HTML comments if org.apache.wicket.settings.IMarkupSettings.getStripComments() returns true. So even my suggested workaround would completely fail in this case (the whole Javascript will be stripped).  ","21/Feb/11 19:16;jdonnerstag;you can add elements before and after. It's not immediately obvious though. Essentially you must remember what you want to return after the <script> tag and you return that when next() is called next time (don't forget to reset your ""rememberme"" variable).  You'll understand the idea when you realize that the MarkupFilters are chained rather than called separately from an interator.

might be I'm mistaken, but I think handleRawText() only removed comments inside a single rawmarkup element. If we manually add <!-- and -->, it'll be in 3+ markupelements.","22/Feb/11 16:15;mgrigorov;I give up. i tried many things and I cannot make it working.
I'm attaching a patch so you can use it as a start.","03/Mar/11 08:22;mgrigorov;https://developer.mozilla.org/en/Writing_JavaScript_for_XHTML recommends to use CDATA for cases like this one instead of XML comments, otherwise XHTML will not work.
They also show the same for <style type=""text/css""> - otherwise CSS selector can break the application the same way.",19/Mar/11 19:54;jdonnerstag;fixed,"21/Mar/11 09:20;mgrigorov;Reopen because FF 3.6 fails here with: ""invalid syntax CDATA"".",21/Mar/11 09:26;mgrigorov;Improved with r1083712.,,,,,,,,,,,,,,,,,,,,,,,,,,
getComponentFromLastRenderedPage appends componentInPage id when it shouldn't,WICKET-4424,12543456,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,johannes.odland@gmail.com,johannes.odland@gmail.com,21/Feb/12 10:14,21/Feb/12 13:45,13/Mar/19 23:17,21/Feb/12 13:45,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"
When using WicketTester#startComponentInPage with a component class, wicket will instantiate the component and give it an id.

As an example, a starting a panel with a link inside will generate these page relative paths:

testObject
testObject:link


This id is automatically generated by wicket and not known to the developer, wich makes it impossible for the developer to reference components by path, as the first segment of the path is unknown. 
To remedy this, wicket appends the id of the component to the path given by the developer in getComponentFromLastRenderedPage().

If the developer calls clickLink(""link""), getComponentFromLastRenderedPage will append the generated id and form the path ""testObject:link""

This is OK as long as the developer explicitly gives the path, omitting the id of the component.

But, when retrieving the path from the components themselves this creates a problem. 
Say a developer is iterating through all links in the page and clicking them:

Link link = getLink();
wicketTester.clickLink(link.getPageRelativePath());

ClickLink is then called with the path ""testObject:link"", and getComponentFromLastRenderedPage will append the generated id forming the path ""testObject:testObject:link"" wich clearly fails.



This is illustrated by a simple testcase:

@Test
public void clickShouldWork() {
  WicketTester tester = new WicketTester();
  tester.startComponentInPage(TestLink.class); 
  Link link = (Link) tester.getLastRenderedPage().get(0);
  String path = link.getPageRelativePath();
  wicketTester.clickLink(path);
}

public static class TestLink extends Link {
  public TestLink(String id) { super(id);}
  public void onClick() {}
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-02-21 13:45:29.419,,,no_permission,,,,,,,,,,,228702,,,Tue Feb 21 13:45:29 UTC 2012,,,,,,0|i00vrz:,3080,,,,,,,,"21/Feb/12 13:45;mgrigorov;The code now is a bit smarter and checks whether the developer already prepended the path with the auto-generated component id and do no prepend it automacally anymore.
Additionally I added javadoc explaining how to find a child component inside the started component.
Please try latest -SNAPSHOT and give feedback.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MarkupParser#add(IMarkupFilter filter,Class beforeFilter) doesn't add the filter into the correct place.",WICKET-4390,12541581,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,t_yano,t_yano,07/Feb/12 08:55,09/Feb/12 13:05,13/Mar/19 23:17,09/Feb/12 13:02,1.5.4,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"The documentation comment of MarkupParser#add(IMarkupFilter filter,Class<? extends IMarkupFilter> beforeFilter) says that 'filter' will be added before the 'beforeFilter', but the filter passed is always added as the last element of MarkupFilterList.

Technically, MarkupParser#add() internally uses an inner-class MarkupFilterList for managing filters. But the MarkupFilterList#add(IMarkupFilter filter,Class<? extends IMarkupFilter> beforeFilter) does not implemented correctly.

The method uses 'indexOf' of ArrayList for finding the matched instance of IMarkupFilter, though the parameter is not an instance of IMarkupFilter, but a Class<? extends IMarkupFilter>.

We must iterate all registered IMarkupFilters and check if the Class of the IMarkupFilter matches with the parameter Class object for finding the index of 'beforeFilter'.


** HOW TO REPRODUCE

Unpack, build and run the attached project 'wicket-bug.tar.gz'. 
jp.javelindev.wicket.MyMarkupFactory will log all registered filters with source below:

<pre>
    @Override
    public MarkupParser newMarkupParser(MarkupResourceStream resource) {
        MarkupParser parser = super.newMarkupParser(resource);
        parser.add(new MyMarkupFilter(), WicketTagIdentifier.class);
        parser.add(new MyMarkupFilter2());

        for (IMarkupFilter filter : parser.getMarkupFilters()) {
            LOGGER.info(""filter class: {}"", filter.getClass());
        }

        return parser;
    }
</pre>

If MarkupParser add filters at correct place, 

- MyMarkupFilter must be displayed at first (because WicketTagIdentifier is the first filter in default implementation) and 
- MyMarkupFilter2 must be displayed before RelativePathPrefixHandler (because the default implementation of add() of MarkupFilterList is like 'add(filter, RelativePathPrefixHandler.class)').

But with trunk and wicket-1.5.4, both filters is displayed at last.

** WORK AROUND **

I can avoid this issue by getting raw MarkupFilterList through getMarkupFilters() and writing code manually to find correct place for add().

** PATCH **

I attached a patch to fix this issue. see the source of MarkupParser.
",any platform,,,,,,,,,,,,,,,,,,,,,07/Feb/12 08:58;t_yano;fix-WICKET-4390.patch;https://issues.apache.org/jira/secure/attachment/12513587/fix-WICKET-4390.patch,07/Feb/12 08:58;t_yano;wicket-bug.tar.gz;https://issues.apache.org/jira/secure/attachment/12513586/wicket-bug.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-02-09 13:02:12.381,,,no_permission,,,,,,,,,,,226868,,,Thu Feb 09 13:05:56 UTC 2012,,,,,,0|i00vvr:,3097,,,,,,,,07/Feb/12 08:58;t_yano;a project for preproduction this issue and a patch.,"09/Feb/12 13:02;mgrigorov;Fixed!
Thanks!","09/Feb/12 13:05;mgrigorov;Some notes:
StyleAndScriptIdentifier markup filter should be added *after* RelativePathPrefixHandler because otherwise the latter overrides the (auto-)component's id and later HeaderPartContainer cannot find its child with id '_ScriptStyle' and thus doesn't execute its onComponentTag and as a result RelativePathPrefixHandler.RELATIVE_PATH_BEHAVIOR doesn't do its job for header contributions coming from <wicket:head> (see MarkupHeadFirstTest).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"XsltOutputTransformerContainer incorrectly claims markup type ""xsl""",WICKET-4391,12541602,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,svenmeier,svenmeier,07/Feb/12 11:54,07/Feb/12 12:01,13/Mar/19 23:17,07/Feb/12 12:01,1.5.4,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"XsltOutputTransformerContainer return ""xsl"" from getMarkupType(), forcing is on all contained components.

If the components in org.apache.wicket.markup.outputTransformer.Page_1 are reordered (XsltOutputTransformerContainer coming first) the test fails because no markup for SimpleBorder can be found.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,226889,,,Tue Feb 07 12:01:21 UTC 2012,,,,,,0|i00vvj:,3096,,,,,,,,07/Feb/12 12:01;svenmeier;Removed overriden #getMarkupType().,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax indicator getting stuck when button is pressed multiple times,WICKET-4257,12532472,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,nkaza,nkaza,23/Nov/11 13:50,27/Jan/12 10:01,13/Mar/19 23:17,27/Jan/12 09:54,1.4.19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,1.5.5,,,,,,,,,1,,,,,,,"http://apache-wicket.1842946.n4.nabble.com/Ajax-busy-indicator-getting-stuck-td4082837.html

I have added a global ajax indicator to all my pages by having all 
pages (through a TemplatePage superclass) implement the 
IAjaxIndicatorAware interface. 

Generally it works, but I have noticed that it is quite easy to get 
the ajax indicator stuck spinning indefinitely, by issuing many ajax 
calls quickly the one after the other. For example if I press an ajax 
button multiple times quickly the busy indicator gets stuck. 
It seems as if the Wicket.show(hide)Incrementally js functions lose 
count of ajax requests and the busy indicator is never actually 
hidden.

With a little reverse engineering I noticed that maybe one of the 
cases this happens is this: an ajax button is pressed, 
showIncrementally is executed, but the actual ajax request is 
postponed because its channel is busy. When the time comes to actually 
execute the request, the request is stopped because of precondition 
check, and thus hideIncrementally is never called. This loses the 
count. A fix might be to call hideIncrementally when the ajax request 
precondition is not met. As to why the precondition is not met, I am 
guessing it's because the previous ajax request did DOM replacement in 
a way that the precondition of the queued request is no longer met. ",,,,,,,,,,,,,,,,,,,,,,23/Nov/11 13:52;nkaza;ajax-indicator.rar;https://issues.apache.org/jira/secure/attachment/12504870/ajax-indicator.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-01-19 12:40:27.842,,,no_permission,,,,,,,,,,,218205,,,Fri Jan 27 09:54:50 UTC 2012,,,,,,0|i0k8xb:,116263,,,,,,,,23/Nov/11 13:52;nkaza;Quickstart reproducing the problem.,"19/Jan/12 12:40;manusa;I have the same issue.
If an AjaxSubmitLink is pressed and the request is postponed the AjaxIndicator remains visible when the request is finally completed.
This only happens with AjaxSubmitLink.",25/Jan/12 08:55;manusa;I'm experiencing the problem 1.5.4 and 1.5.3 too.,"25/Jan/12 09:12;manusa;The bug happens whenever the submitlink is double clicked, as a workaround you can override AjaxSubmitLink with the following code to temporarily disable onclick until the first event is totally processed:



                        @Override
                        protected IAjaxCallDecorator getAjaxCallDecorator() {
                            return new AjaxCallDecorator() {

                                @Override
                                public CharSequence decorateScript(Component c, CharSequence script) {
                                    return String.format(
                                            //Store the old function in onclick_ 
                                            ""this.onclick_disabled=this.onclick;""
                                            //Substitute onclick function
                                            + "" this.onclick=function() { return false; };%s"", script);
                                }

                                @Override
                                public CharSequence decorateOnSuccessScript(Component c, CharSequence script) {
                                    return String.format(
                                            //Restore old function
                                            ""if (typeof(this.onclick_disabled) != 'undefined') this.onclick=this.onclick_disabled;%s"",
                                            script);
                                }

                                @Override
                                public CharSequence decorateOnFailureScript(Component c, CharSequence script) {
                                    return String.format(
                                            //Restore old function
                                            ""if (typeof(this.onclick_disabled) != 'undefined') this.onclick=this.onclick_disabled;%s"",
                                            script);
                                }
                            };
                        }","27/Jan/12 09:54;mgrigorov;Fixed.
Now if the precondition doesn't match and there is an indicator then it will be decremented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling WebResponse#enableCaching() is insufficient to enable caching on WebPage (which by default is non-cacheable),WICKET-4357,12539711,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,mcallan,mcallan,25/Jan/12 04:18,25/Jan/12 20:03,13/Mar/19 23:17,25/Jan/12 20:03,1.5.4,6.0.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,cache,,,,,,"WebResponse.enableCaching() is documented to enable caching, but it does not.  You must also override WebPage.setHeaders(), otherwise it clobbers the headers by calling disableCaching().

The API docs for WebResponse.enableCaching() should be clear about this.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-01-25 20:02:23.349,,,no_permission,,,,,,,,,,,225214,,,Wed Jan 25 20:02:23 UTC 2012,,,,,,0|i00w07:,3117,,,,,,,,25/Jan/12 20:02;pete;Actually the javadoc on WebPage#setHeaders is pretty straightforward on this issue. Nevertheless I added a link to this jira ticket in the javadoc for #enableCaching which will potentially save some people's time :-),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logic or Exception Message is incorrect in ModalWindow.setCookieName,WICKET-4317,12536537,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,r.brian.amesbury,r.brian.amesbury,28/Dec/11 22:49,07/Jan/12 09:44,13/Mar/19 23:17,07/Jan/12 09:44,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,patch,,,,,,"The logic of the compound conditional statement is incorrect or the message passed to the Exception is incorrect.
        /**
	 * Sets the name of the cookie that is used to remember window position (and size if the window
	 * is resizable).
	 * 
	 * @param cookieName
	 *            Name of the cookie
	 * @return this
	 */
	public StatelessModalWindow setCookieName(String cookieName)
	{
		if (cookieName != null && cookieName.indexOf("","") != -1 && cookieName.indexOf(""|"") != -1)
		{
			throw new IllegalArgumentException(""Cookie name may not contain ',' or '|' characters."");
		}
		this.cookieName = cookieName;
		return this;
	}

The logic reads:
       If the String is not null and it contains a comma and it contains a pipe, then throw the exception.",software,10800,10800,,0%,10800,10800,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,222220,,,2011-12-28 22:49:07.0,,,,,,0|i00w53:,3139,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringResourceModels doesn't seem to detach properly,WICKET-4323,12537201,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,einarbj,einarbj,04/Jan/12 15:31,07/Jan/12 09:27,13/Mar/19 23:17,07/Jan/12 09:27,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"If a StringResourceModel contains a model for property substitutions, and there has not been assigned a component it is relative to on construction time, it will not detach the property substitution model.

See this thread for a full explanation
http://apache-wicket.1842946.n4.nabble.com/StringResourceModels-doesn-t-seem-to-detach-properly-td4257267.html",,,,,,,,,,,,,,,,,,,,,,04/Jan/12 15:35;einarbj;suggested-fix.patch;https://issues.apache.org/jira/secure/attachment/12509413/suggested-fix.patch,04/Jan/12 15:35;einarbj;test-that-replicates-the-error.patch;https://issues.apache.org/jira/secure/attachment/12509414/test-that-replicates-the-error.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,222710,,,Wed Jan 04 15:35:35 UTC 2012,,,,,,0|i00w4f:,3136,,,,,,,,"04/Jan/12 15:35;einarbj;Attached a modification to StringResourceModelTest that replicates the error, and a suggested fix to StringResourceModel",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Content type overriding in PackageResource,WICKET-4306,12535684,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,gsmet,gsmet,19/Dec/11 11:15,20/Dec/11 10:16,13/Mar/19 23:17,20/Dec/11 10:16,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Hello,

From my email on the dev@ list:
""
In a Resource extending PackageResource (a LessCSS implementation), we
set the content type on the ResourceStream to text/css.

The problem is that PackageResource overrides it in
newResourceResponse (starting from line 255 in 1.5.3):
                       final String contentType;
                       if (Application.exists())
                       {
                               contentType = Application.get().getMimeType(path);
                       }
                       else
                       {
                               contentType = resourceStream.getContentType();
                       }

If not null, shouldn't we give the resourceStream's content type a
higher priority and use Application.get().getMimeType(path) only if it
is null?

IMHO we should probably have something like that:
final String contentType = resourceStream.getContentType();
if (contentType == null && Application.exists())
{
       contentType = Application.get().getMimeType(path);
}
""

Thanks.

-- 
Guillaume",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,221368,,,2011-12-19 11:15:24.0,,,,,,0|i00w6f:,3145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DebugBar displays stacktrace with FeedbackPanels,WICKET-4258,12532647,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,svenmeier,jsyrjala,jsyrjala,24/Nov/11 19:09,20/Dec/11 08:40,13/Mar/19 23:17,20/Dec/11 08:40,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket-devutils,,,,,,,0,,,,,,,"Clicking Inspector from DebugBar when a FeedbackPanel is displaying a message results in this stacktrace in log. Everything seems to work, extra stuff in logs is just annoying.

ERROR - Component                  - Error while getting default model object for Component: [ListItem [Component id = 0, page = com.mycompany.HomePage, path = 8:form:feedback:feedbackul:messages:0.ListItem, isVisible = true, isVersioned = false], children = [Component id = message]]
java.lang.IndexOutOfBoundsException: Index: 0
	at java.util.Collections$EmptyList.get(Collections.java:3204)
	at org.apache.wicket.markup.html.list.ListItemModel.getObject(ListItemModel.java:58)
	at org.apache.wicket.Component.getDefaultModelObject(Component.java:1640)
	at org.apache.wicket.Component.getDefaultModelObjectAsString(Component.java:1668)
	at org.apache.wicket.markup.html.debug.PageView$4.component(PageView.java:211)
	at org.apache.wicket.markup.html.debug.PageView$4.component(PageView.java:184)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:143)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:161)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:161)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:161)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:161)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:122)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:191)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:923)
	at org.apache.wicket.markup.html.debug.PageView.getComponentData(PageView.java:182)
	at org.apache.wicket.markup.html.debug.PageView.<init>(PageView.java:130)
	at org.apache.wicket.devutils.inspector.InspectorPage.<init>(InspectorPage.java:66)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:173)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:97)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:47)
	at org.apache.wicket.DefaultMapperContext.newPageInstance(DefaultMapperContext.java:107)
	at org.apache.wicket.request.handler.PageProvider.resolvePageInstance(PageProvider.java:264)
	at org.apache.wicket.request.handler.PageProvider.getPageInstance(PageProvider.java:165)
	at org.apache.wicket.request.handler.render.PageRenderer.getPage(PageRenderer.java:78)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:105)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:224)
	at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:167)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:750)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:252)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1326)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:940)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:874)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:349)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:904)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:565)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:217)
	at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:50)
	at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:245)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
	at java.lang.Thread.run(Thread.java:722)",,,,,,,,,,,,,,,,,,,,,,24/Nov/11 19:12;jsyrjala;WICKET-4258-quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12505031/WICKET-4258-quickstart.tar.gz,25/Nov/11 09:33;svenmeier;WICKET-4258.patch;https://issues.apache.org/jira/secure/attachment/12505086/WICKET-4258.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-11-25 09:32:57.309,,,no_permission,,,,,,,,,,,218380,,,Tue Dec 20 08:40:52 UTC 2011,,,,,,0|i0k8x3:,116262,,,,,,,,24/Nov/11 19:12;jsyrjala;Attached quickstart,"25/Nov/11 09:32;svenmeier;When PageView tries to get component data from FeedbackPanel's list items, these don't have access to their feedback messages because these are already cleared in the session. Since r1180799 the exception stracktrace is logged, making this more annoying.

The attached patches makes FeedbackPanel's list item model fail save. 

I'm not sure this is the way we want to go though. It seems the item's css attribute modifier and the label component both keep a hard reference to the message anyway. If this is intentional, there's no reason why the list item's model shouldn't do the same.
",25/Nov/11 09:33;svenmeier;fail save item model,"19/Dec/11 09:04;mgrigorov;Sven, your solution looks good to me.",20/Dec/11 08:40;svenmeier;added check for message in list model,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using an IValidator on an AjaxEditableLabel causes ClassCastException,WICKET-4259,12532696,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pedrosans,dangermouse,dangermouse,25/Nov/11 10:18,28/Nov/11 17:47,13/Mar/19 23:17,28/Nov/11 17:47,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket-extensions,,,,,,,0,,,,,,,"AjaxEditableLabel<Integer> label = new AjaxEditableLabel<Integer>(""label"", new PropertyModel<Integer>(this, ""value""));
form.add(label);
label.setRequired(true);
label.add(new RangeValidator<Integer>(1, 10));

Using a RangeValidator<Integer> on an AjaxEditableLabel<Integer>  causes an ClassCastException after editing the label. 

java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String

This can be avoided by setting the type explicit on the AjaxEditableLabel.

label.setType(Integer.class);

But this wasn't necessary in Wicket 1.4.19. In this version all works fine without setting the type explicit.

I found out, that AbstractTextComponent.resolveType() is not able to get the type of the DefaultModel of the AjaxEditableLabel in Wicket 1.5.3.

I will attach two QuickStarts to demonstrate the bug. One with wicket 1.4.19 and the other with Wicket 1.5.3

",,,,,,,,,,,,,,,,,,,,,,25/Nov/11 21:51;pedrosans;WICKET-4259.patch;https://issues.apache.org/jira/secure/attachment/12505160/WICKET-4259.patch,25/Nov/11 10:22;dangermouse;myproject1_4_19.zip;https://issues.apache.org/jira/secure/attachment/12505094/myproject1_4_19.zip,25/Nov/11 10:22;dangermouse;myproject1_5_3.zip;https://issues.apache.org/jira/secure/attachment/12505093/myproject1_5_3.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-11-25 21:51:00.903,,,no_permission,,,,,,,,,,,218429,,,Mon Nov 28 15:26:34 UTC 2011,,,,,,0|i0k8wv:,116261,,,,,,,,25/Nov/11 10:22;dangermouse;Attached quickstart.,25/Nov/11 21:51;pedrosans;possible fix,"27/Nov/11 11:58;mgrigorov;It is interesting why it works in 1.4.x ?
Is PropertyModel smarter in 1.4.x ? Did we lose some functionality ?","28/Nov/11 11:40;dangermouse;Yes, I think we have lost some funcionality. The cause for that, I think, is not the PropertyModel. I found a difference in Component.getDefaultModel() which is called from AbstractTextComponent.resolveType().

Place a breakpoint on Component.getDefaultModel() and then click on the AjaxEditableLabel. In the Wicket 1.4.19 project you will get a IModel of type PropertyModel<T>. The toString() value is:
Model:classname=[org.apache.wicket.model.PropertyModel]:nestedModel=[[Page class = com.mycompany.FormPage, id = 0, version = 0, ajax = 1]]:expression=[value]

In the Wicket 1.5.3 project you will get a model of type AjaxEditableLabel$3. The toString() value is:
org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$3@a638fc

Here is the call stack in Wicket 1.5.3 of getDefaultModel():

Thread [qtp21307627-15] (Suspended (breakpoint at line 1616 in Component))	
	AjaxEditableLabel$1(Component).getDefaultModel() line: 1616	
	AjaxEditableLabel$1(AbstractTextComponent<T>).resolveType() line: 152	
	AjaxEditableLabel$1(AbstractTextComponent<T>).onBeforeRender() line: 142	
	AjaxEditableLabel$1(Component).internalBeforeRender() line: 981	
	AjaxEditableLabel$1(Component).beforeRender() line: 1015	
	AjaxEditableLabel<T>(MarkupContainer).onBeforeRenderChildren() line: 1785	
	AjaxEditableLabel<T>(Component).onBeforeRender() line: 3774	
...


",28/Nov/11 11:48;mgrigorov;Can you override org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel.getDelegatingParentModel() to have toString() that just does: return getParentModel().toString(); and see what is the result ?,"28/Nov/11 14:42;dangermouse;I made the following change:

	private IModel<T> getDelegatingParentModel() {
		return new IModel<T>() {
			private static final long serialVersionUID = 1L;

			public T getObject() {
				return getParentModel().getObject();
			}

			public void setObject(final T object) {
				getParentModel().setObject(object);
			}

			public void detach() {
				getParentModel().detach();
			}

			@Override
			public String toString() {
				return getParentModel().toString(); //my change
			}
		};
	}

The output has changed now to the output in wicket 1.4.19:
Model:classname=[org.apache.wicket.model.PropertyModel]:nestedModel=[[Page class = com.mycompany.FormPage, id = 1, render count = 1]]:expression=[value]","28/Nov/11 14:46;mgrigorov;So, the problem is somewhere else ... I still bet on PropertyModel.",28/Nov/11 15:06;dangermouse;Mmmh... after the call of getDefaultModel()  AbstractTextComponent.getModelType(IModel<?> model) is called by resolveType(). In my examples this returns Integer.class in Wicket 1.4.19 and null in Wicket 1.5.3.  And this because auf auf  if(model instanceof IObjectClassAwareModel) returns false in Wicket 1.5.3. But I don't know why.,28/Nov/11 15:19;dangermouse;... this is because AjaxEditableLabel.getDelegatingParentModel() returns an IModel and not an IObjectClassAwareModel. Wrapping the PropertyModel into an IModel causes the error I think!,"28/Nov/11 15:26;mgrigorov;I see.
@Pedro: apply the patch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractResourceAggregatingHeaderResponse forgets some information about references,WICKET-4245,12532059,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,andi5,andi5,19/Nov/11 20:20,24/Nov/11 14:56,13/Mar/19 23:17,24/Nov/11 14:56,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.4,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"Seen in Wicket 1.5.3 and SVN r1199294. AbstractResourceAggregatingHeaderResponse.java

    public void renderJavaScriptReference(String url, String id, boolean defer)
    {
        topLevelReferences.add(new ResourceReferenceAndStringData(null, null, url, null,
	    ResourceType.JS, defer, null, null));
    }
forgets the id.

    public void renderCSSReference(ResourceReference reference, PageParameters pageParameters,
        String media, String condition)
    {
     	topLevelReferences.add(new ResourceReferenceAndStringData(reference, null, null, media,
            ResourceType.CSS, false, null, condition));
    }
forgets the page parameters.

I think a quickstart should not be necessary.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-11-24 14:56:35.856,,,no_permission,,,,,,,,,,,217795,,,Thu Nov 24 14:56:35 UTC 2011,,,,,,0|i0k8yn:,116269,,,,,,,,24/Nov/11 14:56;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FilterForm directly adds <input> to <form> --> invalid XHTML strict,WICKET-4144,12527748,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,oele,oele,19/Oct/11 13:40,14/Nov/11 10:35,13/Mar/19 23:17,21/Oct/11 06:06,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket-extensions,,,,,,,0,,,,,,,"According to XHTML 1.0 Strict, <form> may contain: ( p | h1 | h2 | h3 | h4 | h5 | h6 | div | ul | ol | dl | pre | hr | blockquote | address | fieldset | table | noscript | ins | del | script )* 

FilterForm directly adds an <input> tag to the <form> in onComponentTagBody. This results in invalid XHTML 1.0 Strict. ",,,,,,,,,,,,,,,,,,,,,,19/Oct/11 13:43;oele;filterform-input-patch.txt;https://issues.apache.org/jira/secure/attachment/12499683/filterform-input-patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-11-14 10:35:21.004,,,no_permission,,,,,,,,,,,89240,,,Mon Nov 14 10:35:21 UTC 2011,,,,,,0|i0k96f:,116304,,,,,,,,19/Oct/11 13:43;oele;suggested fix,"14/Nov/11 10:35;pgoiffon;The input added are also closed in the xhtml way, witch is invalid in HTML.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxIndicatorAppender removes itself immediately when added via ajax,WICKET-4071,12523821,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,dries.schulten,dries.schulten,21/Sep/11 07:08,09/Nov/11 10:34,13/Mar/19 23:17,09/Nov/11 10:34,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket-extensions,,,,,,,0,,,,,,,"When addding/replacing IndicatingAjaxLink's using ajax in Wicket 1.5.0 it's indicator markup is directly removed when parsing the ajax response. The AjaxIndicatorAppender renders a bit of javascript to the response (when it is an ajax request) to remove previous indicators from the dom (see issue WICKET-722) but in 1.5.0 the execution order of the javascript is different, causing the indicator markup to be added first and the javascript to remove *previous* versions of the indicator to be run next and thus removing the newly added indicator.

De ajax debug windows shows that the component is replaced first and then the javascript is run. In 1.4.18 ajax logging shows the javascript run first and then the component gets replaced, resulting in correct behavior.",,,,,,,,,,,,,,,,,,,,,,21/Sep/11 12:58;mgrigorov;WICKET-4071.patch;https://issues.apache.org/jira/secure/attachment/12495352/WICKET-4071.patch,08/Nov/11 20:32;bitstorm;cancelRenderHead.patch;https://issues.apache.org/jira/secure/attachment/12502959/cancelRenderHead.patch,27/Oct/11 13:27;bitstorm;hideIndicator.patch;https://issues.apache.org/jira/secure/attachment/12501090/hideIndicator.patch,24/Sep/11 00:10;ivaynberg;myproject.rar;https://issues.apache.org/jira/secure/attachment/12496342/myproject.rar,27/Oct/11 08:27;soulspirit;myproject.zip;https://issues.apache.org/jira/secure/attachment/12501060/myproject.zip,,,,5.0,,,,,,,,,,,,,,,,,,,2011-09-21 12:58:28.121,,,no_permission,,,,,,,,,,,17903,,,Wed Nov 09 10:34:48 UTC 2011,,,,,,0|i0k9dr:,116337,,,,,,,,"21/Sep/11 12:58;mgrigorov;Can you try this patch ?
Or provide a quickstart to test it myself.
Thanks!","21/Sep/11 13:38;dries.schulten;The patch doesn't fix it, the javascript stil runs after component replace has finished, thus deleting the newly added indicator... So I changed it to prependJavaScript, but the scripts that are added via prepend don't get renderd.","24/Sep/11 00:09;ivaynberg;i could not reproduce this with trunk, attaching a quickstart that shows its working...","27/Oct/11 07:54;soulspirit;I'm encountering the same issue on Wicket 1.5.1, and the patch won't work.
The problem arises only when I add the container of the ""indicated"" component to the AjaxRequestTarget. Something like:

MarkupContainer container = new WebMarkupContainer( ""container"" );
FormComponent myIndicatingDropDown = new MyIndicatingDropDown( ""dropdown"" );
myIndicatingDropDown.add( new OnChangeAjaxBehavior() {
  protected void onUpdate(AjaxRequestTarget target) {
    target.add(container);
  }
});
container.add( myIndicatingDropDown );
",27/Oct/11 07:58;mgrigorov;Please update the attached quickstart application so that it fails.,"27/Oct/11 08:27;soulspirit;The 2nd time you change the selection in the dropdown, no indicator appears.","27/Oct/11 13:26;bitstorm;Why not simply hide indicator span instead of removing it. See patch. It works well, but I didn't find a good solution to prevent method afterRender writes span in response each time component is rendered.",07/Nov/11 21:28;hok;The issue is still reproducible with myproject.zip - https://issues.apache.org/jira/secure/attachment/12501060/myproject.zip. ,"08/Nov/11 20:30;bitstorm;It seems that in the last source's version my proposed patch has been reverted to the previous code.
Anyway, if you look at class AbstractDefaultAjaxBehavior (method generateCallbackScript) you can see that this class already uses a decorator to generate JavaScript code to hide indicator after ajax request has completed. 
So we shouldn't care about hide/remove indicator inside AjaxIndicatorAppender. See proposed patch.

PS: if you run Ivan's project with this patch , you may occasionally  not see the indicator when you change <select> value. That's because ajax response it's too fast and animated gif is showed and suddenly hidden. 
","09/Nov/11 10:34;mgrigorov;Replaced target.appendJS() with .prependJS() (related to the change with 'priority-evaluate' done by Igor in another ticket).
This way both quickstarts attached to this ticket work.

@Andrea: your solution worked only for myproject.zip (the one with the drop-down).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractResourceAggregatingHeaderResponse does not override all render functions,WICKET-4205,12530707,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,hielkehoeve,hielkehoeve,08/Nov/11 11:03,08/Nov/11 15:42,13/Mar/19 23:17,08/Nov/11 15:42,1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,AbstractResourceAggregatingHeaderResponse,header-contribution,ResourceReferenceAndStringData,,,,"commit https://github.com/apache/wicket/commit/29a82fd3 contains improvements towards rendering javascript and css in a given order. However this improvement does not take into account renderOnDomReadyJavaScript(..), renderOnLoadJavaScript(..), renderOnEventJavaScript(..) and renderString(..).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-11-08 15:42:07.661,,,no_permission,,,,,,,,,,,216445,,,Tue Nov 08 15:42:07 UTC 2011,,,,,,0|i0k90v:,116279,,,,,,,,"08/Nov/11 15:42;mgrigorov;Added logic to handle #renderString(String).
There is no sense to handle onDomReady, onLoad and onEvent because they contribute JS which is not executed immediately after their rendering.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enclosure can't find a child with deeper path in TransparentWebMarkupContainer,WICKET-4172,12528823,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,forchel,forchel,26/Oct/11 06:18,31/Oct/11 13:17,13/Mar/19 23:17,31/Oct/11 13:17,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"Using the Wicket enclosure-tag in an TransparentWebMarkupContainer throws the following exception. I've just converted some working 1.4.18 code to 1.5.2 and got this error (see also http://apache-wicket.1842946.n4.nabble.com/Enclosures-and-transparent-WebContainer-tp3935753p3935753.html). Changing the component hierarchy without using a transparent WebMarkupContainer would fix the problem, but this is not an option if you migrate projects from 1.4 to 1.5

org.apache.wicket.WicketRuntimeException: Could not find child with id: column:info in the wicket:enclosure
        at org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:232)
        at org.apache.wicket.markup.html.internal.Enclosure.getChildComponent(Enclosure.java:211)
        at org.apache.wicket.markup.html.internal.Enclosure.onInitialize(Enclosure.java:127)
        at org.apache.wicket.Component.fireInitialize(Component.java:919)
        at org.apache.wicket.MarkupContainer.internalInitialize(MarkupContainer.java:1002)
        at org.apache.wicket.MarkupContainer.addedComponent(MarkupContainer.java:979)
        at org.apache.wicket.MarkupContainer.add(MarkupContainer.java:171)
        at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:300)
        at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1463)
        at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
        at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)
        at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)
        at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)
        at org.apache.wicket.Component.internalRenderComponent(Component.java:2516)
        at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)
        at org.apache.wicket.Component.internalRender(Component.java:2346)
        at org.apache.wicket.Component.render(Component.java:2274)
        at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)
        at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)
        at org.apache.wicket.Page.onRender(Page.java:904)
        at org.apache.wicket.markup.html.WebPage.onRender(WebPage.java:140)
        at org.apache.wicket.Component.internalRender(Component.java:2346)
        at org.apache.wicket.Component.render(Component.java:2274)
        at org.apache.wicket.Page.renderPage(Page.java:1035)
        at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:105)
        at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:224)
        at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:167)
        at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:750)
        at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
        at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:252)
        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1326)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:940)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:874)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
        at org.eclipse.jetty.server.Server.handle(Server.java:349)
        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
        at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:904)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:565)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:217)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:46)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:545)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:43)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
        at java.lang.Thread.run(Thread.java:662)",,,,,,,,,,,,,,,,,,,,,,27/Oct/11 13:47;mgrigorov;WICKET-4172.patch;https://issues.apache.org/jira/secure/attachment/12501091/WICKET-4172.patch,26/Oct/11 06:20;forchel;enclosure.zip;https://issues.apache.org/jira/secure/attachment/12500826/enclosure.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-10-27 13:47:32.418,,,no_permission,,,,,,,,,,,214683,,,Thu Oct 27 13:49:44 UTC 2011,,,,,,0|i0k93z:,116293,,,,,,,,26/Oct/11 06:20;forchel;Attached quickstart,27/Oct/11 13:47;mgrigorov;A patch that solves the problem by manipulating the childId if it is constructed by several parts ( 'a:b:c:d' ) and creating copy ComponentTag with the original child id if all the path pieces match.,"27/Oct/11 13:49;mgrigorov;Juergen, can you review the patch ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use a strategy to decide how much information to log when a thread cannot get the lock to a page,WICKET-4178,12529015,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,papegaaij,papegaaij,27/Oct/11 06:48,28/Oct/11 08:21,13/Mar/19 23:17,28/Oct/11 08:21,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"In Wicket 1.4.x, the pagemap would also log the stacktrace for threads that hold the pagelock, if a timeout occurs. This behaviour is no longer present in 1.5.x.",,,,,,,,,,,,,WICKET-4170,,,,,,,,,28/Oct/11 07:12;papegaaij;0001-WICKET-4178.patch;https://issues.apache.org/jira/secure/attachment/12501249/0001-WICKET-4178.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-27 06:50:29.376,,,no_permission,,,,,,,,,,,214875,,,Fri Oct 28 08:21:16 UTC 2011,,,,,,0|i0k933:,116289,,,,,,,,27/Oct/11 06:50;papegaaij;This patch reintroduces the old behaviour,27/Oct/11 06:50;mgrigorov;Duplicate of WICKET-4170.,"27/Oct/11 06:59;mgrigorov;Reopening: We will improve the configuration to be able to specify what info to dump additionally: NOTHING, ONE_THREAD (the one that holds the lock) and ALL (full thread dump).","28/Oct/11 08:21;mgrigorov;With r1190198 it is possible to define a strategy how much info to dump when a thread cannot get the lock for a page for the configured timeout duration.
By default only the stacktrace of the thread that holds the lock is dumped but it is also possible to dump all or none threads.

Thanks Emond!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpSessionDataStore uses asynchronous saving by default,WICKET-4165,12528513,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mpukki,mpukki,24/Oct/11 16:03,27/Oct/11 14:05,13/Mar/19 23:17,27/Oct/11 14:05,1.5.0,1.5.1,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"HttpSessionDataStore uses asynchronous saving and store itself expects saving thread to be a ""wicket thread"". There is no need for asynchronous saving as HttpSessionDataStore saves all data to HTTPSession and therefore data is held in memory. HttpSessionDataStore should default to synchronous action.

There is a lot of errors like this on log with default setting:

""ERROR - HttpSessionDataStore       - Cannot store the data for page with id '0' in session with id '1x6veaq6f0b23trchiio53f3g'""

When setting ""getStoreSettings().setAsynchronous(false);"" in application's init everything seems to work ok.",Apache Tomcat 6.0.x and jetty,10800,10800,,0%,10800,10800,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-10-27 14:05:11.967,,,no_permission,,,,,,,,,,,214373,,,Thu Oct 27 14:05:11 UTC 2011,,,,,,0|i0k94f:,116295,,,,,,,,27/Oct/11 14:05;mgrigorov;Improved with r1189767.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The process cannot access the file because it is being used by another process,WICKET-4176,12528866,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,firegnom,firegnom,26/Oct/11 12:19,26/Oct/11 13:59,13/Mar/19 23:17,26/Oct/11 12:47,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,,,,,,,0,,,,,,,"java.io.FileNotFoundException: C:\dev\apache-tomcat-6.0.33\work\Catalina\localhost\directski\directSkiApplication-filestore\52151B2227FD9F98206208E39B6831D7\data (The process cannot access the file be
cause it is being used by another process)
        at java.io.RandomAccessFile.open(Native Method)
        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
        at org.apache.wicket.pageStore.DiskDataStore$SessionEntry.getFileChannel(DiskDataStore.java:401)
        at org.apache.wicket.pageStore.DiskDataStore$SessionEntry.savePage(DiskDataStore.java:328)
        at org.apache.wicket.pageStore.DiskDataStore.storeData(DiskDataStore.java:176)
        at org.apache.wicket.pageStore.AsynchronousDataStore.storeData(AsynchronousDataStore.java:227)
        at org.apache.wicket.pageStore.DefaultPageStore.storePageData(DefaultPageStore.java:119)
        at org.apache.wicket.pageStore.DefaultPageStore.storePage(DefaultPageStore.java:150)
        at org.apache.wicket.page.PageStoreManager$PersistentRequestAdapter.storeTouchedPages(PageStoreManager.java:383)
        at org.apache.wicket.page.RequestAdapter.commitRequest(RequestAdapter.java:171)
        at org.apache.wicket.page.AbstractPageManager.commitRequest(AbstractPageManager.java:94)
        at org.apache.wicket.page.PageManagerDecorator.commitRequest(PageManagerDecorator.java:68)
        at org.apache.wicket.page.PageAccessSynchronizer$2.commitRequest(PageAccessSynchronizer.java:256)
        at org.apache.wicket.Application$2.onDetach(Application.java:1587)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:99)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:97)
        at org.apache.wicket.util.listener.ListenerCollection$1.notify(ListenerCollection.java:119)
        at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:142)
        at org.apache.wicket.util.listener.ListenerCollection.reversedNotifyIgnoringExceptions(ListenerCollection.java:113)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection.onDetach(RequestCycleListenerCollection.java:95)
        at org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:569)
        at org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:508)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:284)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
        at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:369)
        at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
        at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:112)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:177)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:91)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:168)
        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:291)
        at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:877)
        at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:594)
        at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1675)
        at java.lang.Thread.run(Thread.java:662)
2011-10-26 12:08:33,126 [http-8080-66] ERROR org.apache.wicket.util.listener.ListenerCollection - Error invoking listener: org.apache.wicket.Application$2@28655b7e
java.lang.NullPointerException
        at org.apache.wicket.pageStore.DiskDataStore$SessionEntry.savePage(DiskDataStore.java:332)
        at org.apache.wicket.pageStore.DiskDataStore.storeData(DiskDataStore.java:176)
        at org.apache.wicket.pageStore.AsynchronousDataStore.storeData(AsynchronousDataStore.java:227)
        at org.apache.wicket.pageStore.DefaultPageStore.storePageData(DefaultPageStore.java:119)
        at org.apache.wicket.pageStore.DefaultPageStore.storePage(DefaultPageStore.java:150)
        at org.apache.wicket.page.PageStoreManager$PersistentRequestAdapter.storeTouchedPages(PageStoreManager.java:383)
        at org.apache.wicket.page.RequestAdapter.commitRequest(RequestAdapter.java:171)
        at org.apache.wicket.page.AbstractPageManager.commitRequest(AbstractPageManager.java:94)
        at org.apache.wicket.page.PageManagerDecorator.commitRequest(PageManagerDecorator.java:68)
        at org.apache.wicket.page.PageAccessSynchronizer$2.commitRequest(PageAccessSynchronizer.java:256)
        at org.apache.wicket.Application$2.onDetach(Application.java:1587)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:99)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:97)
        at org.apache.wicket.util.listener.ListenerCollection$1.notify(ListenerCollection.java:119)
        at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:142)
        at org.apache.wicket.util.listener.ListenerCollection.reversedNotifyIgnoringExceptions(ListenerCollection.java:113)
        at org.apache.wicket.request.cycle.RequestCycleListenerCollection.onDetach(RequestCycleListenerCollection.java:95)
        at org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:569)
        at org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:508)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:284)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
        at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:369)
        at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
        at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:112)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:177)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:91)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:381)
        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:168)
        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:291)
        at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:877)
        at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:594)
        at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1675)
        at java.lang.Thread.run(Thread.java:662)
        
        
This bug happens on heavy loaded system , i was using jMeter to load it ","Windows 7
JVM: Java HotSpot(TM) 64-Bit Server VM (19.1-b02, mixed mode)
Java: version 1.6.0_24, vendor Sun Microsystems Inc.
wicket runnniung on tomcat : 6.0.33
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-10-26 12:47:40.524,,,no_permission,,,,,,,,,,,214726,,,Wed Oct 26 13:59:38 UTC 2011,,,,,,0|i0k93b:,116290,,,,,,,,"26/Oct/11 12:47;mgrigorov;Improved the error handling with r1189175.

Now if the file is existing but cannot be opened for some reason Wicket will just log the problems and continue without saving the page's bytes.

In your case it seems Windows Explorer or any editor has locked the file.",26/Oct/11 13:25;firegnom;I think the problem is when the entries queue is full AsynchronousDataStore is trying to write to file itself so when PageSavingRunnable will have the same session on the queue as  AsynchronousDataStore than two processes will write to the same file .,"26/Oct/11 13:28;mgrigorov;It is still one process, but two threads.
I'm 99% certain it is Windows to blame. Check with ProcessExplorer (http://technet.microsoft.com/en-us/sysinternals/bb896653) which process(es) keep a handle to this file.",26/Oct/11 13:59;firegnom;Yes i think you are right i have used Process Monitor (http://technet.microsoft.com/en-us/sysinternals/bb896645) and it seems that other process is a) windows indexing or b) antivirus  thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javascript error when loading datepicker,WICKET-4159,12528241,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,fkleinko,fkleinko,21/Oct/11 09:07,21/Oct/11 16:08,13/Mar/19 23:17,21/Oct/11 16:08,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.20,,,wicket-datetime,,,,,,,0,,,,,,,"Javascript error in datepicker when it's loaded.

Current check is:


var e = Wicket.$('id815Dp'); if (e != null && typeof(e.parentNode) != 'undefined' && typeof(e.parentNode.parentNode != 'undefined')){
e.parentNode.parentNode.removeChild(e.parentNode);
YAHOO.wicket.id815DpJs.destroy(); 
delete YAHOO.wicket.id815DpJs;

should be like: 

var e = Wicket.$('id815Dp'); if (e != null && typeof(e.parentNode) != 'undefined' && typeof(e.parentNode.parentNode != 'undefined')) { 
e.parentNode.parentNode.removeChild(e.parentNode);
YAHOO.wicket.id815DpJs.destroy(); 
delete YAHOO.wicket.id815DpJs; }

I miss the brackets in the current, now you get an javascript exception on line 'YAHOO.wicket.id815DpJs.destroy(); ', because YAHOO.wicket.id815DpJs does not exist.

",All browsers,,,,,,,,,,,,,,,,,,,,,21/Oct/11 09:07;fkleinko;datepicker_javascript.patch;https://issues.apache.org/jira/secure/attachment/12500164/datepicker_javascript.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-21 16:08:24.292,,,no_permission,,,,,,,,,,,97592,,,Fri Oct 21 16:08:24 UTC 2011,,,,,,0|i0k95b:,116299,,,,,,,,21/Oct/11 09:07;fkleinko;Attached patch,21/Oct/11 11:58;fkleinko;Same issue but now on 1.4 branch,21/Oct/11 16:08;ivaynberg;fixed in 1.4.20. looks like its already been fixed in 1.5.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"component without close tag fails with ""Unable to find close tag for"" if it is the last componet on page",WICKET-4136,12527343,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,freemant,freemant,16/Oct/11 11:42,18/Oct/11 10:15,13/Mar/19 23:17,18/Oct/11 09:35,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"A simple page with the following markup will fail:

<html>
<img wicket:id=""photo"">
</html>

but this one will work:

<html>
<img wicket:id=""photo"">
<span wicket:id=""label"" />
</html>

I believe the bug is in the code below:

	public MarkupFragment(final IMarkupFragment markup, final int startIndex)
	{
		if (...) 
		{
		   ...
		}
		else if (startTag.hasNoCloseTag())
		{
			for (endIndex = startIndex + 1; endIndex < markup.size(); endIndex++)
			{
				MarkupElement elem = markup.get(endIndex);
				if (elem instanceof ComponentTag)  // It looks for another component tag to indicate the end of the body, but fails if it is the last one
				{
					endIndex--;
					break;
				}
			}
		}
		else
		{
		   ...
		}

		if (endIndex >= markup.size())
		{
			throw new MarkupException(""Unable to find close tag for: '"" + startTag.toString() +
				""' in "" + getRootMarkup().getMarkupResourceStream().toString());
		}
	}
",,600,600,,0%,600,600,,,,,,,,,,,,,,,18/Oct/11 10:04;bitstorm;FixWithHtmlHandler.patch;https://issues.apache.org/jira/secure/attachment/12499525/FixWithHtmlHandler.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-18 09:35:11.685,,,no_permission,,,,,,,,,,,87466,,,Tue Oct 18 10:15:35 UTC 2011,,,,,,0|i0k97b:,116308,,,,,,,,"18/Oct/11 09:35;mgrigorov;Fixed.
Added a set of tag names which are allowed to not have closing tags.","18/Oct/11 10:04;bitstorm;@Martin

your fix is perfectly fine, but we have already HtmlHandler.requiresCloseTag to test if a tag is allowed to not be closed :).

see attached patch.
","18/Oct/11 10:15;mgrigorov;Thank you, Andrea!
Improved it with r1185552.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Event listener not properly detached for multipart AJAX requests,WICKET-4122,12526666,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,aka,aka,11/Oct/11 14:15,12/Oct/11 11:34,13/Mar/19 23:17,12/Oct/11 11:34,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,ajax,htmlunit,javascript,multipart,wicket-ajax.js,,"We are using HtmlUnit for functional testing of a wicket application. We have several issues with it but one of the more critical problems arises whenever a multipart form is submitted via AJAX. Internally wicket apparently uses an iframe to submit the request and listens for the ""load"" event of this iframe to detect the success of the request.

The problem is that HtmlUnit fires the ""load"" event twice. I am not sure if this is a HtmlUnit problem (I do suspect that it is), but when looking at the wicket code I am wondering about these lines of javascript code:

Here in wicket-ajax.js:1215 the event is attached

 Wicket.Event.add(iframe, ""load"", this.handleMultipartComplete.bind(this));


And later in wicket-ajax.js:1246 it is detached

 // remove the event
 if (iframe.detachEvent)  
 	iframe.detachEvent(""onload"", this.handleMultipartComplete);  
 else  
 	iframe.removeEventListener(""load"", this.handleMultipartComplete, false);

But because the bind function returns a new object this should never work, right? I have attached a patch that fixes the problem in my environment, please take a look at it if this makes sense.

",HtmlUnit,,,,,,,,,,,,,,,,,,,,,11/Oct/11 14:15;aka;wicket-ajax-patch.patch;https://issues.apache.org/jira/secure/attachment/12498599/wicket-ajax-patch.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-11 14:19:33.633,,,no_permission,,,,,,,,,,,59136,,,Tue Oct 11 14:19:33 UTC 2011,,,,,,0|i0k98n:,116314,,,,,,,,"11/Oct/11 14:19;mgrigorov;I think your observations are correct.
I will test it and apply it soon.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoHide of DatePicker breaks showOnFieldClick,WICKET-4005,12520705,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,cleiter,cleiter,30/Aug/11 08:08,05/Oct/11 19:46,13/Mar/19 23:17,30/Aug/11 14:01,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket-datetime,,,,,,,0,,,,,,,DatePicker: If autoHide is set to true then setting showOnFieldClick to true has no effect anymore. The calendar is shown and immediately closed if the user clicks on the textfield. This is caused due to a missing check in wicket-date.js.,,,,,,,,,,,,,,,,,,,,,,30/Aug/11 08:11;cleiter;WICKET-4005.patch;https://issues.apache.org/jira/secure/attachment/12492213/WICKET-4005.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-08-30 14:01:56.089,,,no_permission,,,,,,,,,,,46581,,,Wed Oct 05 19:46:44 UTC 2011,,,,,,0|i0k9iv:,116360,,,,,,,,30/Aug/11 08:11;cleiter;Adding patch,"30/Aug/11 14:01;mgrigorov;Fixed.
Thanks!","12/Sep/11 18:56;heapifyman;Could it be that this is broken again in the 1.5 final release? If I set both autoHide and showOnFieldClick to true clicking in the field does not open the DatePicker. Only clicking the little calendar icon opens the DatePicker?
Can someone confirm this? Or did I misunderstand the purpose of autoHide and showOnFieldClick?","12/Sep/11 19:01;mgrigorov;Yes, I confirm that bugs in RC7 are also in 1.5.0.
RC8 is not released and wont be. The fixes in it will be part of 1.5.1.",12/Sep/11 19:24;heapifyman;OK. What's the ETA for 1.5.1?,05/Oct/11 19:38;heapifyman;I updated to 1.5.1 and now showOnFieldClick seems to work but autoHide does not. Clicking in the field opens the datepicker but clicking anywhere else does not close it again.,"05/Oct/11 19:46;heapifyman;Sorry, forget the last comment. The changes had not been picked up correctly by the server. It's working now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error detaching RequestCycle listener after serialization failure,WICKET-4077,12524253,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,martin.asenov,martin.asenov,22/Sep/11 08:36,03/Oct/11 08:13,13/Mar/19 23:17,03/Oct/11 08:13,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"Error detaching RequestCycle listener is produced after org.apache.wicket.serialize.java.JavaSerializer.serialize(Object) returns null.

Below is the stacktrace of the error:

20-09-2011 16:46:44,875 ERROR org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify:105 - Error detaching request cycle listener: org.apache.wicket.Application$2@b45ad3d
java.lang.IllegalArgumentException: Argument 'data' may not be null.
	at org.apache.wicket.util.lang.Args.notNull(Args.java:39)
	at org.apache.wicket.pageStore.AsynchronousDataStore$Entry.<init>(AsynchronousDataStore.java:271)
	at org.apache.wicket.pageStore.AsynchronousDataStore.storeData(AsynchronousDataStore.java:215)
	at org.apache.wicket.pageStore.DefaultPageStore.storePageData(DefaultPageStore.java:115)
	at org.apache.wicket.pageStore.DefaultPageStore.storePage(DefaultPageStore.java:144)
	at org.apache.wicket.page.PageStoreManager$PersistentRequestAdapter.storeTouchedPages(PageStoreManager.java:377)
	at org.apache.wicket.page.RequestAdapter.commitRequest(RequestAdapter.java:171)
	at org.apache.wicket.page.AbstractPageManager.commitRequest(AbstractPageManager.java:94)
	at org.apache.wicket.page.PageManagerDecorator.commitRequest(PageManagerDecorator.java:68)
	at org.apache.wicket.page.PageAccessSynchronizer$2.commitRequest(PageAccessSynchronizer.java:213)
	at org.apache.wicket.Application$2.onDetach(Application.java:1552)
	at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:101)
	at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:97)
	at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:121)
	at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:112)
	at org.apache.wicket.request.cycle.RequestCycleListenerCollection.onDetach(RequestCycleListenerCollection.java:95)
	at org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:542)
	at org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:481)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:257)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:185)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:405)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:269)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:515)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:302)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)","Windows 7 Ultimate, Tomcat 6.0.32",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-22 09:58:03.975,,,no_permission,,,,,,,,,,,2647,,,Thu Sep 22 09:58:03 UTC 2011,,,,,,0|i0k9cn:,116332,,,,,,,,"22/Sep/11 09:58;bitstorm;Hi,

check your log file for a message like ""Error serializing object <class name> [object=<object.toString()>]..."". Maybe you have a page which cannot be serialized correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ModalWindow: large title breaks close button ,WICKET-4097,12525209,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,oele,oele,29/Sep/11 16:31,29/Sep/11 22:43,13/Mar/19 23:17,29/Sep/11 22:43,1.5.0,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket-extensions,,,,,,,0,,,,,,,"If the title of a page in a modalwindow is so long that it overlaps with the close button in the upper right corner of the window, the close button does not work. 

Enlarging the window until title & button do not overlap anymore makes the button start working again. ","Ubuntu 11.04, Netbeans, Glassfish",,,,,,,,,,,,,,,,,,,,,29/Sep/11 22:16;bitstorm;WICKET-4097.patch;https://issues.apache.org/jira/secure/attachment/12497071/WICKET-4097.patch,29/Sep/11 16:31;oele;modalWindowClosedButtonBug.zip;https://issues.apache.org/jira/secure/attachment/12497017/modalWindowClosedButtonBug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-09-29 22:15:43.6,,,no_permission,,,,,,,,,,,40042,,,Thu Sep 29 22:43:01 UTC 2011,,,,,,0|i0k9an:,116323,,,,,,,,29/Sep/11 16:31;oele;quickstart that shows the problem,29/Sep/11 22:15;bitstorm;Could be solved setting to 1 z-index of close button. See attached patch.,"29/Sep/11 22:43;ivaynberg;patch applied, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxIndicatorAppender.renderHead does not pass Components id  in its call of renderJavaScript,WICKET-4096,12525202,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,192709,192709,29/Sep/11 15:28,29/Sep/11 18:18,13/Mar/19 23:17,29/Sep/11 17:08,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket-extensions,,,,,,,0,javascript,wicket,,,,,"In an AjaxEditalbeLabel we set an int - that will reload a dataview with number of lines as given in the AjaxEditingLabel.  
In that dataview we use IndicatingAjaxLink to sort the columns. With Wicket 1.4.18 that worked well.

With Wicket 1.5.0 in this scenario, if the AjaxEditalbeLabels onSubmit(...) Method is called, an error occurred:
Root cause:

java.lang.IllegalArgumentException: Argument 'id' may not be null.
at org.apache.wicket.util.lang.Args.notNull(Args.java:39)
at org.odlabs.wiquery.core.AbstractWiQueryDecoratingHeaderResponse.renderJavaScript(AbstractWiQueryDecoratingHeaderResponse.java:128)
at org.apache.wicket.extensions.ajax.markup.html.AjaxIndicatorAppender.renderHead(AjaxIndicatorAppender.java:71)
at org.apache.wicket.Component.renderHead(Component.java:2662)
at org.apache.wicket.ajax.AjaxRequestTarget$3.component(AjaxRequestTarget.java:1256) 
...

We found that the AjaxIndicatorAppender.renderHead calls the org.odlabs.wiquery.core.AbstractWiQueryDecoratingHeaderResponse.renderJavaScript(someJavaScript, null) 
The method renderJavaScript expicitly checks if the second parameter is null and throws an Error here.

Imho the AjaxIndicatorAppender.renderHead should pass the components id instead of the null.

By the way: Wicket rocks anyway, but 1.5 is another Highlight!
Thanks a lot and best Regards,
Marcus Bosten
","Windows 32bit XP, Tomcat 7, java6 and scala 2.9.1, build with Eclipse",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-29 15:43:48.856,,,no_permission,,,,,,,,,,,40030,,,Thu Sep 29 18:18:21 UTC 2011,,,,,,0|i0k9av:,116324,,,,,,,,"29/Sep/11 15:43;mgrigorov;This seems to be WiQuery problem, not Wicket one.","29/Sep/11 16:03;192709;mmmm - I am not sure, because

	@Override
	public void renderHead(final Component component, final IHeaderResponse response)	{
		if (AjaxRequestTarget.get() != null) {
			final String javascript = ""var e = Wicket.$('"" + getMarkupId() +
				""'); if (e != null && typeof(e.parentNode) != 'undefined') e.parentNode.removeChild(e);"";
			response.renderJavaScript(javascript, null);
		}
	}

does not use the component at all (only the class field component is used in getMarupId() - why to pass it? 
And  how should any following method get any info of the components MarkupID - so that it can react on it?

",29/Sep/11 16:07;mgrigorov;Sorry. I had modified version of this file locally.,"29/Sep/11 17:08;ivaynberg;that shouldve been renderOnDomReadyJavaScript() instead of renderJavaScript() so i changed it.

however, null ids are allowed so wiquery is also at fault here.","29/Sep/11 18:18;192709;You guyes are implressively  fast.
I will pass the info to the Wiquery team 

Thank you,
Marcus
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""illegal"" single-closed textarea tag fails on validation and rendering in wicket 1.4.17/18, and succeeds on rendering but not on validation in wicket 1.5.0",WICKET-4094,12525147,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,manuelbarzi,manuelbarzi,29/Sep/11 07:39,29/Sep/11 15:58,13/Mar/19 23:17,29/Sep/11 15:58,1.4.17,1.4.18,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,,,,0,tag,textarea,wicket,,,,"continued from http://markmail.org/message/2brq4umaytvswfuv

supposedly a single closed textarea tag (<textarea.../>) is ""illegal"", and goes against the spec (igor) http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.1.4 

tested on wicket 1.4.17/18. the markup validation does not detect an illegal use of textarea, and renders it with both opening and closing tags, but the closing tag at the end of the markup, with all the remaining html (after the textarea) escaped and included inside textarea contents. 

tested on wicket 1.5.0. the markup validation does not detect an illegal use of textarea, and moreover it renders the textarea correctly, with its closing tag where corresponds, contrary to wicket 1.4.17/18 behavior.

so from the point of view of validation, if a single closed textarea tag is an ""illegal"" condition, then both wicket 1.4.17/18 and 1.5.0 fail. but in rendering, wicket 1.5.0 works fine.
","1.4.17/18 tested on windows with ie and chrome
1.5.0 tested on mac and windows with chrome",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-29 07:52:25.456,,,no_permission,,,,,,,,,,,39707,,,Thu Sep 29 15:58:46 UTC 2011,,,,,,0|i0k9b3:,116325,,,,,,,,"29/Sep/11 07:52;mgrigorov;org.apache.wicket.markup.parser.filter.OpenCloseTagExpander is responsible in 1.5 to fix this problem.

I don't understand what you mean by ""validation fails in 1.5"".","29/Sep/11 07:57;manuelbarzi;according to spec (igor) a single-closed textarea is an ""illegal"" condition that should fail on markup validation. then should not be accepted... ?","29/Sep/11 15:58;ivaynberg;this is fixed in 1.5.0, the tag is automatically expanded. wicket does not validate semantics of markup other than that it is valid xml.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WebResponse#enableCaching does not take care of a possible ""Pragma: no-cache"" header",WICKET-4083,12524532,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,rhansen,rhansen,24/Sep/11 19:01,25/Sep/11 22:27,13/Mar/19 23:17,24/Sep/11 22:39,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"in WebResponse#enableCaching 

a call to setHeader(""Pragma"", """") might be a good idea to assure that no conflicting http header information is being sent out.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-24 22:37:48.774,,,no_permission,,,,,,,,,,,3410,,,Sat Sep 24 22:37:48 UTC 2011,,,,,,0|i0a54n:,57104,,,,,,,,"24/Sep/11 22:37;pete;It seems there is no corresponding counterpart for header value ""no-cache"". I don't like to elimimate an eventual ""no-cache"" value with an empty header like this:

  Pragma: 

Some (broken) servers could have a problem with that...

Also 

  setHeader(""Pragma"", null) 

works on jetty but could be fragile on some others servlet containers.

Also there's no way in the servlet api to remove an header completely. So I will add 

  Pragma: cache

which clearly signal our intention. Even in the case of an unknown value it will not hurt.

@Rodolfo: Thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.request.Url#toAbsoluteString ,WICKET-4082,12524503,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,komusubi,komusubi,24/Sep/11 06:04,25/Sep/11 22:27,13/Mar/19 23:17,24/Sep/11 19:00,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,,,,,,,,0,,,,,,,"toAbsoluteString return wrong url string.
Url.java around line 629, 

I think need check endsWith(""/"")
",linux,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,3409,,,2011-09-24 06:04:11.0,,,,,,0|i0k9bz:,116329,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RadioGroup WicktTester with a AjaxSubmitLink fails,WICKET-4058,12523232,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,dries.schulten,dries.schulten,15/Sep/11 18:30,20/Sep/11 16:43,13/Mar/19 23:17,17/Sep/11 20:08,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"After migrating to Wicket 1.5.0 some of our WicketTester unit-tests fail, they involve a RadioGroup component with a Enum as model. The setup works correctly at runtime. The problem is as follows:

The enum (simplified enum, for demonstration purposes): public enum ValEnum { VAL_A, VAL_B; }

A form containing a RadioGroup, the individual Radio components are based on the Enum values. When submiting the form (using a AjaxSubmitLink) containing the RadioGroup in a WicktTester situation a WicketRuntimeException is thrown containing:
org.apache.wicket.WicketRuntimeException: submitted http post value [VAL_A] for RadioGroup component [1:form:group] is illegal because it does not contain relative path to a Radio component. Due to this the RadioGroup component cannot resolve the selected Radio component pointed to by the illegal value. A possible reason is that component hierarchy changed between rendering and form submission.

It works correctly when submitting the form using a normal SubmitLink.

Debugging the select function of the FormTester shows te correct value being placed in the PostParameters (""radio1"" is the value being set).",,,,,,,,,,,,,,,,,,,,,,16/Sep/11 14:20;dries.schulten;myproject.zip;https://issues.apache.org/jira/secure/attachment/12494797/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-15 18:58:35.824,,,no_permission,,,,,,,,,,,17905,,,Sat Sep 17 20:11:09 UTC 2011,,,,,,0|i0k9f3:,116343,,,,,,,,15/Sep/11 18:33;dries.schulten;Attaching 1.5.0 quickstart showing the problem.,15/Sep/11 18:58;mgrigorov;Please attach a test case. Thanks!,"15/Sep/11 19:02;dries.schulten;See the attached quickstart, the TestHomePage class contains a unit-test showing the problem.","16/Sep/11 13:58;bitstorm;Hi Dries,

I've looked at your test case but I don't understand why you double submit form, once calling submit() and once clicking on submit link:

formTester.submit();
tester.clickLink(""form:submit"");

Btw, if you invert these two line of code, test passes without any problem.","16/Sep/11 14:17;dries.schulten;My bad, the formTester.submit() step is not needed. I changed my testcase, using the WicketTester to:
- Render the page, then using clickLink on the AjaxSubmitLink -> error
- Render the page, create a formTester, clickLink on the AjaxSubmitLink -> pass
- Render the page, create a formTester, select a value, clickLink on the AjaxSubmitLink -> pass

So it seems that the error occurs when directly submitting a form using a AjaxSubmitLink without the creation of a FormTester on the form. Not sure if this is a bug then... This construction used to work in the 1.4.x versions.

Updated test-case in the attached quickstart.","17/Sep/11 19:54;bitstorm;The bug is inside 'BaseWicketTester.serializeFormToRequest'. This method is called before form is submitted and  checks if   each form field has a corresponding post parameter. If such parameter is missing a new parameter is added and its value is get calling 'FormComponent.getValue()' .
This method for RadioGroup returns the model value (ex: VAL_A), but should return the value of selected Radio (ex:radio4).  Everything works fine if we build a FormTester because it performs the right parameters initialization inside its constructor (see form visitor).

I'm working on a patch but it needs a little refactoring to avoid code replication.",17/Sep/11 19:56;ivaynberg;i am too working on a patch already...almost done,17/Sep/11 20:11;bitstorm;Ok thank you Igor!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockWebApplication double invocation of cycle.detach(),WICKET-3994,12520077,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,dcremonini,dcremonini,25/Aug/11 08:31,17/Sep/11 17:56,13/Mar/19 23:17,17/Sep/11 17:56,1.4.16,1.4.17,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,,,wicket,,,,,,,0,,,,,,,"Porting JAMon integration to Wicket 1.4 test JamonMonitoredWebRequestCycleTest (a WicketStuff class) fails do I discovered a double invocation that seems a bug. Explanation follows.

MockWebApplication.processRequestCycle(WebRequestCycle) method calls

cycle.request();

then

cycle.detach();

but cycle.detach() is also called inside cycle.request() resulting in a double invocation.

	public void processRequestCycle(WebRequestCycle cycle)
	{
		try
		{
			cycle.request();
			if (cycle.wasHandled() == false)
			{
				cycle.setRequestTarget(new WebErrorCodeResponseTarget(
					HttpServletResponse.SC_NOT_FOUND));
			}
			cycle.detach();     // <== second invocation, I would remove it
			createRequestCycle();
			parametersForNextRequest.clear();
			servletRequest.getParameterMap().clear();
		}
		finally
		{
			cycle.getResponse().close();
		}
		postProcessRequestCycle(cycle);
	}",,,,,,,,,,,,,,,,,,,,,,25/Aug/11 08:34;dcremonini;fix-WICKET-3994.patch;https://issues.apache.org/jira/secure/attachment/12491609/fix-WICKET-3994.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60322,,,Thu Aug 25 08:34:33 UTC 2011,,,,,,0|i0k9k7:,116366,,,,,,,,25/Aug/11 08:34;dcremonini;I attach the patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid listener url generated for nested components that have an id which starts with a dash,WICKET-4061,12523392,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,bgooren,bgooren,16/Sep/11 21:12,17/Sep/11 06:15,13/Mar/19 23:17,17/Sep/11 06:15,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"I have a very simple hierarchy:

WebMarkupContainer with id ""-nav-container""
nested RepeatingView with id ""-nav""
... which contains a link with id ""link""

HTML:
<div id=""layout-nav"" wicket:id=""-nav-container"">
	<ul>
		<li wicket:id=""-nav""><a href=""#"" wicket:id=""link""><span wicket:id=""name"">Tab name</span></a></li>
	</ul>
</div>

On page render I get a link like ""wicket/page?3-1.ILinkListener---nav--container---nav-1-link"".
When clicking this link I get:

Could not find component '-nav-container-:nav:1:link' on page x.y.Z

Note the dash after -nav-container, which should not be there.
Also note the missing dash before nav.

It appears the dash shifts to the left in the encoding or decoding phase of the code that generates/handles a url for ILinkListener.INTERFACE.

Removing the starting dash from the RepeatingView's id solves the problem.
However, if this is considered normal behaviour (dashed not allowed in componend ids) it needs to be documented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-09-17 06:15:22.225,,,no_permission,,,,,,,,,,,60332,,,Sat Sep 17 06:15:22 UTC 2011,,,,,,0|i0k9en:,116341,,,,,,,,"16/Sep/11 21:28;bgooren;Ok, I found the problem. It's the way ComponentInfo handles encoding and decoding the component path.

During the encode phase ""ILinkListener:-nav-container:-nav:1:link"" becomes the above.

However, on decode a set of three dashes causes a problem. The decoder no longer sees the difference between the encoded version of:

(a) :-
(b) -:

Both become three dashes when encoding, and on decoding _always_ become (b).
This only occurs for nested components which have an id that starts with a dash.

In most of my apps one or more dashes in component ids are not uncommon, so this causes applications to break when upgrading to 1.5.","17/Sep/11 06:15;ivaynberg;~ is now used to encode -
~ is allowed not-encoded in the query string and is a lot less likely to be used by the user in component ids compared to the dash",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LocaleFirstMapper does not strip Locale from url in getCompatibilityScore(),WICKET-4055,12523116,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,bgooren,bgooren,14/Sep/11 22:09,16/Sep/11 06:56,13/Mar/19 23:17,16/Sep/11 04:51,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket-examples,,,,,,,0,,,,,,,"LocaleFirstMapper delegates the call to getCompatibilityScore() to the chained IRequestMapper without stripping the locale from the url.
Since most request mappers generate a compatibility score by counting the number of matching segments _from the start of the url_, they will mostly return a score of 0.
Practically this means that all request mappers behind the LocaleFirstMapper stop responding to urls.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60502,,,2011-09-14 22:09:58.0,,,,,,0|i0k9fb:,116344,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"HeaderResponse.renderCSSReference does not render context path relative url, but wicket filter url-pattern relative url",WICKET-4030,12521434,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,msotil,msotil,06/Sep/11 10:29,13/Sep/11 21:04,13/Mar/19 23:17,13/Sep/11 21:04,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"In an application with a wicket filter url-pattern different than /*, if you use HeaderResponse.renderCSSReference(String url), where url is a context-path-relative url (css/main.css, for example), the generated css link is not context relative, but wicket url-pattern relative.",,,,,,,,,,,,,,,,,,,,,,07/Sep/11 07:05;msotil;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12493284/quickstart.zip,07/Sep/11 12:43;pete;relative-url.patch;https://issues.apache.org/jira/secure/attachment/12493308/relative-url.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-09-06 16:34:12.425,,,no_permission,,,,,,,,,,,60727,,,Tue Sep 13 21:04:04 UTC 2011,,,,,,0|i0k9gv:,116351,,,,,,,,"06/Sep/11 10:33;msotil;Quickstart of the issue. Execute Start, go to http://localhost:8080/contextPath. If renderCSSReference worked properly, background color should be red (that means css is loaded correctly), but it is not.","06/Sep/11 16:34;pete;The problem is:

response.renderCSSReference(path) expects a context-relative(!) path (see javadoc). This is not to be confused with the effective path that get's rendered.

basically what you did wrong is call

  response.renderCSSReference(""../css/main.css"") 

when instead you should use the _context-relative_ path (relative to ""/contextPath"" in your sample).

So the correct method call is

  response.renderCSSReference(""css/main.css"") 

It will work no matter how you mount your home page or if you mount it at all. In any case wicket will generate the required number of "".."" in the path.
","07/Sep/11 06:38;msotil;In fact, response.renderCSSReference(""css/main.css"")  was the first thing I tried, but it did'nt work.

Now I see that the real condition to reproduce the issue is using a wicket filter url pattern different than /*. I've updated issue summary, description and quickstart to reflect it. In quickstart, I changed wicket filter mapping like this:

        <filter-mapping>
		<filter-name>wicket.myproject</filter-name>
		<url-pattern>/wicket/*</url-pattern>
	</filter-mapping>

Now context path is /*, HomePage is not mounted, so application url is http://localhost:8080/wicket.
Now I use response.renderCSSReference(""css/main.css"") as should be. 

You will see that generated href is css/main.css, wich points to http://localhost:8080/wicket/css/main.css, when it should be ../css/main.css to point to http://localhost:8080/css/main.css, because css path passed to renderCSSReference should be _context-relative_ path, and not wicket-filter-url-pattern relative, isn't it?.","07/Sep/11 06:44;msotil;I update quickstart to reflect new conditions required to reproduce the issue.
Execute Start, go to http://localhost:8080/wicket. If renderCSSReference worked properly, background color should be red (that means css is loaded correctly), but it is not. ","07/Sep/11 12:22;pete;@Matteo: Indeed the current javadoc is wrong. The rendering happens relative to wicket filter root both in current wicket release 1.4.18 and 1.5.0. I sent a mail to the developer mailing list to clarify that issue. Currently the solution will be to properly escape the filter path with '..' to access context relative resources.
",07/Sep/11 12:43;pete;added patch in case we want to fix this...,12/Sep/11 14:56;mgrigorov;@Igor: do you know what is the expected behavior of this method ?,"13/Sep/11 21:04;ivaynberg;resourcereference urls should be filter relative. raw urls given by the user should be context-relative.

the patch was bad because it made all urls context-relative - which broke resource refrence urls.

headerresponse already had a relative() function which shouldve taken care of the conversion but was probably not rewritten correctly when we switched it to use url renderer.

fixed, thanks for reporting.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WebClientInfo causes NullPointerException when the request header ""User-Agent"" is null.",WICKET-4047,12522890,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,hielkehoeve,hielkehoeve,13/Sep/11 13:04,13/Sep/11 16:52,13/Mar/19 23:17,13/Sep/11 16:52,1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,NPE,useragent,wicket,,,,"When the value of request header ""User-Agent"" is null, the class UserAgent tries to match UserAgent.INTERNET_EXPLORER against null, which results in a NullPointerException (UserAgent.java:90 and UserAgent.java:102).

The function matches(String) of class UserAgent should check for null values.","Windows 7, Jetty 6.1.26, Wicket 1.5.0.",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,13/Sep/11 13:09;hielkehoeve;patchsuggestion.patch;https://issues.apache.org/jira/secure/attachment/12494225/patchsuggestion.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60746,,,Tue Sep 13 13:09:10 UTC 2011,,,,,,0|i0k9fz:,116347,,,,,,,,"13/Sep/11 13:08;hielkehoeve;Related to WICKET-475, however the NPE is now thrown further down the stack.",13/Sep/11 13:09;hielkehoeve;an if check should solve the NPE.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PageProvider can instantiate pages even if isNewPageInstance returns false,WICKET-4021,12521189,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,papegaaij,papegaaij,02/Sep/11 14:13,13/Sep/11 09:59,13/Mar/19 23:17,08/Sep/11 05:49,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"When opening a page, providing a non-existent page-id, isNewPageInstance returns false, but getPageInstance instantiates a new page. The attached patch fixes this.",,,,,,,,,,,,,,,WICKET-4046,,,,,,,02/Sep/11 14:14;papegaaij;pageprovider.diff;https://issues.apache.org/jira/secure/attachment/12492748/pageprovider.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60771,,,2011-09-02 14:13:44.0,,,,,,0|i0k9hj:,116354,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreditCardValidator returns incorrect cardId for VISA,WICKET-3998,12520326,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,tahitiangabriel,tahitiangabriel,27/Aug/11 00:32,13/Sep/11 08:25,13/Mar/19 23:17,29/Aug/11 10:04,1.4.18,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,1.5.1,,wicket,,,,,,,0,validation,,,,,,"When the validation for a VISA is correct, it returns a SWITCH cardId instead of a VISA.
This error occurs in both 1.4.x and 1.5.X

",,,,,,,,,,,,,,,,,,,,,,27/Aug/11 00:47;tahitiangabriel;CreditCardValidator.1.4.patch;https://issues.apache.org/jira/secure/attachment/12491865/CreditCardValidator.1.4.patch,27/Aug/11 00:47;tahitiangabriel;CreditCardValidator.trunk.patch;https://issues.apache.org/jira/secure/attachment/12491866/CreditCardValidator.trunk.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-08-29 10:04:36.007,,,no_permission,,,,,,,,,,,60781,,,Mon Aug 29 10:04:36 UTC 2011,,,,,,0|i0k9jr:,116364,,,,,,,,27/Aug/11 00:47;tahitiangabriel;Patch for branch 1.4.x and trunk.,29/Aug/11 10:04;mgrigorov;Fixed. Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in the save function of CookieValuePersister,WICKET-3999,12520328,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,tahitiangabriel,tahitiangabriel,27/Aug/11 00:55,29/Aug/11 09:57,13/Mar/19 23:17,29/Aug/11 09:57,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,,,wicket,,,,,,,0,cookie,,,,,,"The test in the SetValue is incorrect and can lead to save a ""null"" string instead of an empty string in the cookie.
",,,,,,,,,,,,,,,,,,,,,,27/Aug/11 00:55;tahitiangabriel;CookieValuePersister.patch;https://issues.apache.org/jira/secure/attachment/12491867/CookieValuePersister.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-08-29 09:57:52.485,,,no_permission,,,,,,,,,,,63400,,,Mon Aug 29 09:57:52 UTC 2011,,,,,,0|i0k9jj:,116363,,,,,,,,27/Aug/11 00:55;tahitiangabriel;Patch for 1.4.x,29/Aug/11 09:57;mgrigorov;Fixed. Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential StackOverflowError in SerializableChecker,WICKET-3986,12519826,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,papegaaij,papegaaij,23/Aug/11 13:57,23/Aug/11 14:03,13/Mar/19 23:17,23/Aug/11 14:03,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"At line 517 it checks if 'streamObj' has already been checked, but at 522 it puts 'original' in the map. I don't know what's needed to reproduce it, but wicket-weld triggered it for me. You probably need a class with custom serialization which tries to serialize itself recursively. Changing line 522 to 'streamObj' fixed it for me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,64033,,,2011-08-23 13:57:20.0,,,,,,0|i0k9lb:,116371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autolinks with getMarkupSettings().setAutomaticLinking(true) produce error in subpackage,WICKET-3958,12518482,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,rla,rla,10/Aug/11 17:19,11/Aug/11 12:16,13/Mar/19 23:17,11/Aug/11 12:16,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,autolinks,,,,,,"Project structure: BasePage, HomePage, pages.Page1.

Autolinks added in the base page will produce confusing error message ""Last cause: Tag expected"" at page pages.Page1. It seems that they do not take into account where in the page hierarchy they are added (in the example, in BasePage).

If getMarkupSettings().setAutomaticLinking(true) is removed and links are wrapped into <wicket:link> then warning ""WARN - AutoLinkResolver - Did not find corresponding java class: com.mycompany.pages.HomePage"" is produced in the log when accessing pages.Page1. However, links on both pages work.

","Slackware 12.2
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)",,,,,,,,,,,,,,,,,,,,,10/Aug/11 17:21;rla;myproject.zip;https://issues.apache.org/jira/secure/attachment/12490012/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-08-11 12:16:50.717,,,no_permission,,,,,,,,,,,65471,,,Thu Aug 11 12:16:50 UTC 2011,,,,,,0|i0k9nj:,116381,,,,,,,,10/Aug/11 17:21;rla;Attaching test case created based on quickstart.,"11/Aug/11 12:16;mgrigorov;I added a check that the MarkupStream's current element is ComponentTag before trying to use it. This way it doesn't throw the mystic ""Tag expected"" exception, and just logs warnings that the autolinked pages' classes cannot be resolved.

Page1.html cannot blindly extend from BasePage.html because the links' hrefs will be broken: HomePage link should be '../HomePage.html', Page1's should be ""Page1.html""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No HTTP response cache headers are set in Wicket Ajax redirects,WICKET-3921,12514618,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,timoweber,timoweber,19/Jul/11 18:35,28/Jul/11 08:19,13/Mar/19 23:17,28/Jul/11 08:19,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC6,,wicket,,,,,,,0,,,,,,,"Usually HTTP response cache headers are being set in AjaxRequestTarget for Ajax responses. But for redirects, the handling is done in WebResponse where no cache headers are being set, which could lead to some trouble.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-21 08:24:05.273,,,no_permission,,,,,,,,,,,66743,,,Thu Jul 28 08:19:10 UTC 2011,,,,,,0|i0k9p3:,116388,,,,,,,,21/Jul/11 08:24;mgrigorov;Can you provide quickstart application that shows the problem ?,"21/Jul/11 09:00;timoweber;It's probably easier for me to give you an entry point.

Method respond(:RequestCycle) in AjaxRequestTarget does part of the response handling. If the page itself hasn't been added to the request target, everything's fine. The cache headers will be set to make sure that the response won't be cached by the browser (line 570-572 in AjaxRequestTarget). 

But if the page has been added, the handling is done by WebResponse.redirect(String url). This ajax redirect isn't performed as an HTTP redirect (some 30x code) but with the code 200 and the content ""<ajax-response><redirect><![CDATA["" + url + ""]]></redirect></ajax-response>"" that is being interpreted by wicket-ajax in the browser. This response doesn't get any cache headers. Because of that it may be cached by the browser. As the payload contains a stateful url, this constellation could very likely be troublesome in some situations leading to obscure errors.

I'd suggest that - if you also think, that it is a bug - you set these cache headers in a more central place for all ajax responses, WebRequestCycle.onEndRequest() would be a possible solution. That's where we put our workaround for now. 

Regards, Timo","27/Jul/11 11:37;mgrigorov;Hi Timo,

Does that mean that if we move the setting of cache related headers before the redirect in AjaxRequestTarget#respond(RequestCycle) the problem will be solved ?
That's why I need failing case to verify that the fix works.","27/Jul/11 11:55;mgrigorov;Index: wicket/src/main/java/org/apache/wicket/protocol/http/WebResponse.java
===================================================================
--- wicket/src/main/java/org/apache/wicket/protocol/http/WebResponse.java	(revision 1146974)
+++ wicket/src/main/java/org/apache/wicket/protocol/http/WebResponse.java	(working copy)
@@ -312,6 +312,9 @@
 		// Set content type based on markup type for page
 		setCharacterEncoding(encoding);
 		setContentType(""text/xml; charset="" + encoding);
+		setHeader(""Expires"", ""Mon, 26 Jul 1997 05:00:00 GMT"");
+		setHeader(""Cache-Control"", ""no-cache, must-revalidate"");
+		setHeader(""Pragma"", ""no-cache"");
 	}

Here is the possible fix.
WebResponse#redirect() is called not only when AjaxRequestTarget.addComponent(Page) is used but also when setResponsePage() is used in Ajax request.

The fix is similar for 1.5.","27/Jul/11 12:54;timoweber;Hi Martin,

yes, thanks. This looks good to me and will solve the problem for sure. I've appended a very simple repo case below. It's a bit tricky to catch the redirect response in Firebug, if I can be of any further help, please let me know.  


public class AjaxResponseHeadersPage extends WebPage {

    public AjaxResponseHeadersPage() {
        setOutputMarkupId(true);

        add(new AjaxFallbackLink(""link1"") {
            @Override
            public void onClick(AjaxRequestTarget target) {
                // adding the page to the target will produce a wicket ajax redirect
                // without any cache headers
                target.addComponent(getPage());
            }
        });

        add(new AjaxFallbackLink(""link2"") {
            @Override
            public void onClick(AjaxRequestTarget target) {
                // this produces an ajax response with cache headers set properly
                target.addComponent(this);
            }
        }.setOutputMarkupId(true));
    }
}

and

<?xml version=""1.0"" encoding=""UTF-8""?>
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:wicket=""http://wicket.apache.org/dtds.data/wicket-xhtml1.4-strict.dtd"">
<body>
    <a wicket:id=""link1"" href=""#"">Ajax response (Redirect) without any cache headers.</a>
    <a wicket:id=""link2"" href=""#"">Ajax response with proper cache headers.</a>
</body>
</html>","28/Jul/11 08:19;mgrigorov;Fixed!
Thanks Timo!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When base markup file has been removed from the cache, the the derived markup should be removed as well",WICKET-3878,12513069,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,robmcguinness,robmcguinness,07/Jul/11 02:49,12/Jul/11 17:53,13/Mar/19 23:17,08/Jul/11 18:51,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,Making updates to the base markup doesn't remove the derived markup from the MarkupCache in DEVELOPMENT mode.,,,,,,,,,,,,,,,,,,,,,,07/Jul/11 02:54;robmcguinness;fix-WICKET-3878.patch;https://issues.apache.org/jira/secure/attachment/12485528/fix-WICKET-3878.patch,08/Jul/11 09:35;robmcguinness;test-WICKET-3878.patch;https://issues.apache.org/jira/secure/attachment/12485715/test-WICKET-3878.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-07-07 19:09:28.951,,,no_permission,,,,,,,,,,,68246,,,Fri Jul 08 18:51:53 UTC 2011,,,,,,0|i0k9tz:,116410,,,,,,,,07/Jul/11 19:09;jdonnerstag;thanks,08/Jul/11 09:35;robmcguinness;Just wanted to include a test case around this issue.  Please review if possible.,08/Jul/11 18:51;jdonnerstag;test case applied,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurePackageResourceGuard acceptAbsolutePath pattern check loop ,WICKET-3863,12512683,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,03/Jul/11 23:31,05/Jul/11 20:31,13/Mar/19 23:17,05/Jul/11 20:31,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"The following loop might want to break out if a hit (== true) is found:

    // Check against the pattern
    boolean hit = false;
    for (SearchPattern pattern : this.pattern)
    {
      if ((pattern != null) && pattern.isActive())
      {
        if (pattern.matches(path))
        {
          hit = pattern.isInclude();
        }
      }
    }

as it is, one pattern.isInclued could return true, but the next one false,
Mayby break out of loop if hit == true???",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-07-04 08:41:56.191,,,no_permission,,,,,,,,,,,69107,,,Mon Jul 04 13:46:51 UTC 2011,,,,,,0|i0k9w7:,116420,,,,,,,,"04/Jul/11 08:41;mgrigorov;According to its javadoc this is by design:
""All pattern are executed in the order they were provided. All pattern are executed to determine if access can be granted or not.""

Also there is a unit test for this specific case.","04/Jul/11 13:29;emberson;Then why not traverse the patterns in *reverse* order and break after the first one for whcih
pattern.matches(path) == true
setting 
hit = pattern.isInclude();
for that pattern???

boolean hit = false; 
for (SearchPattern pattern : this.pattern.reverse) {
  if ((pattern != null) && pattern.isActive()) {
    if (pattern.matches(path)) {
      hit = pattern.isInclude();
      break;
    }
  }
}
",04/Jul/11 13:46;mgrigorov;Re-opening for re=evaluation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTransformerBehavior sets wrong namespace,WICKET-3861,12512661,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,dmcg,dmcg,03/Jul/11 10:03,03/Jul/11 21:33,13/Mar/19 23:17,03/Jul/11 13:46,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"AbstractTransformerBehaviour adds a wicket namespace (http://wicket.apache.org) to its tag which is different from that of the whole page (http://wicket.apache.org/dtds.data/wicket-xhtml1.4-strict.dtd).

This causes (at least) XPath queries for Wicket nodes to fail when matching the contents of components with an AbstractTransformerBehavior. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,19299,,,Sun Jul 03 21:33:39 UTC 2011,,,,,,0|i0k9wn:,116422,,,,,,,,03/Jul/11 21:33;dmcg;Very quick - thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ComponentInfo: simplified -, : encoding procedure",WICKET-3862,12512663,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,alankila,alankila,03/Jul/11 11:27,03/Jul/11 11:58,13/Mar/19 23:17,03/Jul/11 11:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"ComponentInfo encodes the interface and path of the component by generating dash-separated values such as listener-foo-bar--baz, which means interface ""listener"", component path ""foo:bar-baz"". The path encoding is pretty clumsy and involves three full substitutions using Strings.replaceAll():

1. - => temporary string
2. : => -
3. temporary string => --

The reverse procedure does the same steps in reverse to cancel the transformation.

This patch appended handles the steps simultaneously by using a regex substitution method which matches both : and - and replaces by - and -- respectively, and the reverse method matches -- or - (with -- preferred) and replaces by - and : respectively. It should be more elegant and doesn't require generating a rather kooky [[[[[[WICKET]]TMP]]DASH0.123456789E]]]] type random constant.

Additionally I had a wicket-using website somehow fail in production after an update because somehow it would no longer correctly decode the mangled names' -- back to -, but rather attempted to resolve one of those [[[[[[WICKET]]TMP]]DASH]]etc]]]] names. I admit I am confused about how exactly this came to be, but somehow it did.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,03/Jul/11 11:29;alankila;simplified-componentinfo.diff;https://issues.apache.org/jira/secure/attachment/12485084/simplified-componentinfo.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-03 11:40:08.755,,,no_permission,,,,,,,,,,,69346,,,Sun Jul 03 11:58:10 UTC 2011,,,,,,0|i0k9wf:,116421,,,,,,,,"03/Jul/11 11:29;alankila;Use Pattern, Matcher and StringBuilder to perform single-pass simultaneous replacement of two distinct values.","03/Jul/11 11:40;mgrigorov;Looks OK.
Actually it uses StringBuffer, not Builder. It'd be nice if Oracle improve the methods to accept Appendable instead of StringBuffer.","03/Jul/11 11:58;mgrigorov;Simplified it by using simple charsequence traversal.
This is 3x faster than before and still simpler than Regex based solution as in the suggested patch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WicketFilterTest.testIgnorePaths java.lang.IllegalStateException: Request#getLocale cannot return null, request has to have a locale set on it",WICKET-3859,12512648,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,02/Jul/11 21:48,03/Jul/11 11:18,13/Mar/19 23:17,03/Jul/11 11:18,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"The test WicketFilterTest method testIgnorePaths generates a stacktrace:
RequestCycle.processRequest: e=java.lang.IllegalStateException: Request#getLocale() cannot return null, request has to have a locale set on it
java.lang.IllegalStateException: Request#getLocale() cannot return null, request has to have a locale set on it
        at org.apache.wicket.Session.<init>(Session.java:218)
        at org.apache.wicket.protocol.http.WebSession.<init>(WebSession.java:96)
        at org.apache.wicket.protocol.http.WebApplication.newSession(WebApplication.java:436)
        at org.apache.wicket.Session.get(Session.java:159)
        at org.apache.wicket.request.mapper.BufferedResponseMapper.getSessionId(BufferedResponseMapper.java:48)
        at org.apache.wicket.request.mapper.BufferedResponseMapper.hasBufferedResponse(BufferedResponseMapper.java:54)
        at org.apache.wicket.request.mapper.BufferedResponseMapper.getCompatibilityScore(BufferedResponseMapper.java:112)
        at org.apache.wicket.request.mapper.CompoundRequestMapper.mapRequest(CompoundRequestMapper.java:121)
        at org.apache.wicket.request.cycle.RequestCycle.resolveRequestHandler(RequestCycle.java:187)
        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:217)
        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:270)
        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:160)
        at org.apache.wicket.protocol.http.WicketFilterTest.testIgnorePaths(WicketFilterTest.java:370)
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69349,,,2011-07-02 21:48:24.0,,,,,,0|i0k9x3:,116424,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AsynchronousDataStore needs  to stop - make thread a daemon,WICKET-3858,12512524,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,emberson,emberson,02/Jul/11 04:41,02/Jul/11 17:00,13/Mar/19 23:17,02/Jul/11 17:00,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"I don't know how most run the unit tests, but in my ant-base testing environment, the AsynchronousDataStore
thread does not stop and so the testing JVM does not exit. Consider changing:
new Thread(savingRunnable, ""Wicket-PageSavingThread"").start();
to
Thread t = new Thread(savingRunnable, ""Wicket-PageSavingThread"");
t.setDaemon(true);
t.start();",ant based test environment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69390,,,2011-07-02 04:41:17.0,,,,,,0|i0k9xb:,116425,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary static call to Application.get() in PropertiesFactory though it's already available in a field,WICKET-3850,12512317,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,fdonckels,fdonckels,30/Jun/11 12:23,01/Jul/11 00:20,13/Mar/19 23:17,30/Jun/11 13:39,1.4.17,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"PropertiesFactory is taking an Application argument in its constructor and then in the load(..) method it does: Application.get().xxxx.
This seems inconsistent to me.

In addition, when looking at the uses of the application instance, it could just have an IResourceSettings parameter, rather than a full blown Application instance.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-30 12:29:14.967,,,no_permission,,,,,,,,,,,69551,,,Thu Jun 30 12:29:14 UTC 2011,,,,,,0|i0a57j:,57117,,,,,,,,30/Jun/11 12:29;pete;fixed for 1.5...  1.4.17 is already o.k. since there was no static Application().get(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
visibility of NavigationToolbar is based on the previous filter state,WICKET-3777,12509582,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,oele,oele,08/Jun/11 13:16,13/Jun/11 13:03,13/Mar/19 23:17,10/Jun/11 06:42,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket-extensions,,,,,,,0,,,,,,,"I'm using a FilterForm with a DataTable and a NavigationToolbar. 

The NavigationToolbar is supposed to be hidden when the DataTable has 0 or 1 pages of results. So, when a filter is applied that results in 1 or 0 pages of results, the NavigationToolbar should disappear. 

In reality, it gets hidden on the first request *after* the one in which the filter was set, and it reappears on the first request *after* the one in which the filter is removed. 

I *think* this has to do with the fact that NavigationToolbar.onConfigure() is being called before the FilterForm.onSubmit , but i'm not sure. 

Please see the attached quickstart. Instructions on how to reproduce the problem are on the quickstart's homepage. 

Stacktrace from NavigationToolbar.onConfigure(): (HomePage$2 = my anonymous subclass of NavigationToolbar that logs the onConfigure event):

SEVERE: java.lang.Exception: Stack trace
	at java.lang.Thread.dumpStack(Thread.java:1249)
	at nl.seeas.datatablebug.HomePage$2.onConfigure(HomePage.java:46)
	at org.apache.wicket.Component.configure(Component.java:1163)
	at org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable$ToolbarsContainer$1.component(DataTable.java:440)
	at org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable$ToolbarsContainer$1.component(DataTable.java:438)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:146)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:122)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:194)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:890)
	at org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable$ToolbarsContainer.isVisible(DataTable.java:436)
	at org.apache.wicket.Component.determineVisibility(Component.java:4342)
	at org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2168)
	at org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2162)
	at org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2162)
	at org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2162)
	at org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2162)
	at org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2162)
	at org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2162)
	at org.apache.wicket.markup.html.form.Form$11.component(Form.java:1221)
	at org.apache.wicket.markup.html.form.Form$11.component(Form.java:1207)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:146)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:164)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:164)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:164)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:164)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:164)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:164)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:164)
	at org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:122)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:875)
	at org.apache.wicket.markup.html.form.Form.isMultiPart(Form.java:1204)
	at org.apache.wicket.markup.html.form.Form.handleMultiPart(Form.java:1255)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:703)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:268)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:218)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:171)
	at org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:157)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:718)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:253)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:138)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:256)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:215)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:279)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:655)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:595)
	at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:98)
	at com.sun.enterprise.web.PESessionLockingStandardPipeline.invoke(PESessionLockingStandardPipeline.java:91)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:162)
	at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:326)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:227)
	at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:170)
	at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:822)
	at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:719)
	at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1013)
	at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:225)
	at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)
	at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)
	at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)
	at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)
	at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)
	at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)
	at com.sun.grizzly.ContextTask.run(ContextTask.java:71)
	at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)
	at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)
	at java.lang.Thread.run(Thread.java:662)
",Ubuntu 11.04; Netbeans 7; Glassfish 3.1; sun-java6-jdk,,,,,,,,,,,,,,,,,,,,,08/Jun/11 13:17;oele;datatablebug.zip;https://issues.apache.org/jira/secure/attachment/12481810/datatablebug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-10 11:12:17.497,,,no_permission,,,,,,,,,,,71344,,,Mon Jun 13 13:03:28 UTC 2011,,,,,,0|i0ka2f:,116448,,,,,,,,08/Jun/11 13:17;oele;The quickstart. ,"10/Jun/11 11:12;bitstorm;NavigationToolbar onConfigure() checks for table size too soon, when table has not been updated yet. Table is updated by onPopulate method inside AbstractRepeater . onPopulate is called by onBeforeMethod.

One simple solution is override isVisible insteda of onConfigure inside NavigationToolbar:

@Override
	public boolean isVisible()
	{
		return getTable().getPageCount() > 1;
	}

This works and shouldn't worsen performance since table's size is cached.","10/Jun/11 15:56;ivaynberg;@Andera: navigation toolbar works with datatable, and in datatable the number of rows is specified by dataprovider, so it is known before render.","13/Jun/11 13:03;oele;Problem is solved in 1.5-SNAPSHOT, thanks Igor! ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Warning text outdated in InheritedMarkupMarkupLoader,WICKET-3780,12509677,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,hexagonaal,hexagonaal,09/Jun/11 08:09,09/Jun/11 12:57,13/Mar/19 23:17,09/Jun/11 12:57,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket,,,,,,,0,,,,,,,""" Enable debug messages for org.apache.wicket.util.resource.Resource to get a list of all filenames tried."");
--> org.apache.wicket.util.resource.Resource no longer exists. Looks like it has been renamed to org.apache.wicket.util.resource.locator.ResourceStreamLocator.
",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,09/Jun/11 12:51;bitstorm;patch_1_5.txt;https://issues.apache.org/jira/secure/attachment/12481923/patch_1_5.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-09 12:51:08.703,,,no_permission,,,,,,,,,,,71513,,,Thu Jun 09 12:51:08 UTC 2011,,,,,,0|i0ka1z:,116446,,,,,,,,09/Jun/11 12:51;bitstorm;Patch for 1.5 trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form in FormComponent causes child components to get processed after parent FormComponent,WICKET-3765,12509149,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,checketts,checketts,03/Jun/11 04:03,05/Jun/11 15:39,13/Mar/19 23:17,05/Jun/11 04:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"In a custom FormComponentPanel convertInput() method, children components don't have their input already converted when they are in an inner Form.",,,,,,,,,,,,,,,,,,,,,,03/Jun/11 04:32;checketts;formcomponent.zip;https://issues.apache.org/jira/secure/attachment/12481313/formcomponent.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-06-05 15:39:05.368,,,no_permission,,,,,,,,,,,71908,,,Sun Jun 05 15:39:05 UTC 2011,,,,,,0|i0ka3r:,116454,,,,,,,,03/Jun/11 04:32;checketts;FormComponentPanel Quickstart,"05/Jun/11 12:14;checketts;Thanks for fixing! Just to clarify this change was only made in the 1.5 branch, right? Not in the 1.4.x branch?",05/Jun/11 15:39;ivaynberg;correct,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxSubmitLink not calling the onsubmit event handler,WICKET-2807,12460417,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,ananthakumaran,ananthakumaran,27/Mar/10 07:47,25/May/11 06:56,13/Mar/19 23:17,25/Aug/10 05:24,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"SubmitLink calls the <form>'s onsubmit event handler, 
But AjaxSubmitLink does not.",,,,,,,,,,,,,WICKET-1448,,,,,,,,,27/Mar/10 09:00;ananthakumaran;project.zip;https://issues.apache.org/jira/secure/attachment/12439952/project.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-25 03:40:43.357,,,no_permission,,,,,,,,,,,203657,,,Wed May 25 06:56:57 UTC 2011,,,,,,0|i0kchb:,116839,,,,,,,,"25/Aug/10 03:40;ivaynberg;tried with 1.4.10, changed quickstart to be

Form f2  = new Form(""form2"") {
		@Override
		protected void onSubmit() {
			System.out.println(""form2 submit"");
		}
	};

line gets printed out when i click the ajax submit link","25/Aug/10 04:07;rnichols;Igor, I think the issue is refering to a event handler in javascript e.g.

<form onsubmit=""dosomething()"">
</form>




-- 
Richard Nichols
http://www.richardnichols.net/ :: http://onmydoorstep.com.au/
","25/Aug/10 04:32;ivaynberg;ok, will look into it","25/Aug/10 06:16;hudson;Integrated in Apache Wicket 1.5.x #266 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/266/])
    AjaxSubmitLink not calling the onsubmit event handler
Issue: WICKET-2807
",25/May/11 06:49;rajeevy69;I am using wicket 1.4.15 and having same issue. Do i need to migrate to 1.5 or fix is available in any 1.4 patch itself,"25/May/11 06:56;mgrigorov;This ticket is fixed in 1.4.11 and similar problem was fixed in 1.4.13 in WICKET-3095 so 1.4.15 should be fine.
Please create a quickstart application that reproduces the problem and attach it to a new ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IAjaxLink and BaseTree.ILinkCallback have onClick method,WICKET-3735,12508012,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,22/May/11 17:46,23/May/11 18:37,13/Mar/19 23:17,23/May/11 18:37,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"Both org.apache.wicket.ajax.markup.html.IAjaxLink and
org.apache.wicket.markup.html.tree,BaseTree.ILinkCallback
have the method

  void onClick(final AjaxRequestTarget target);

that is used for the same purpose. I would assume that only one is needed.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-23 06:48:47.027,,,no_permission,,,,,,,,,,,204479,,,Mon May 23 18:37:15 UTC 2011,,,,,,0|i0ka6n:,116467,,,,,,,,"23/May/11 06:48;mgrigorov;Similar one is org.apache.wicket.extensions.markup.html.tree.DefaultAbstractTree.ILinkCallback.
The only difference between ILinkCallback and IAjaxLink is that the former extends IClusterable.

I also don't see a reason why to not use IAjaxLink here. ",23/May/11 18:37;mgrigorov;Improved with r1126648.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org/apache/wicket/util/tester/apps_4/EmailPage Form wrong generic type,WICKET-3733,12507935,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,20/May/11 22:43,22/May/11 17:10,13/Mar/19 23:17,22/May/11 17:10,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"The generic type parameter for the Form in EmailPage class should be EmailPage.
Change:
    Form<Void> form = new Form<Void>(""form"");
    form.setDefaultModel(new CompoundPropertyModel<EmailPage>(this));
to:
    Form<Void> form = new Form<EmailPage>(""form"");
    form.setDefaultModel(new CompoundPropertyModel<EmailPage>(this));
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204477,,,Fri May 20 22:48:46 UTC 2011,,,,,,0|i0ka6v:,116468,,,,,,,,"20/May/11 22:48;emberson;Sorry, change to:
    Form<EmailPage> form = new Form<EmailPage>(""form"");
    form.setDefaultModel(new CompoundPropertyModel<EmailPage>(this)); ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
g/apache/wicket/protocol/http/request/UserAgent matches method is not correct,WICKET-3713,12507234,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,14/May/11 18:18,17/May/11 07:16,13/Mar/19 23:17,17/May/11 07:16,1.5-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,"In the UserAgent Enum matches method, the loop over detectionStrings is at most executed once:

    for (List<String> detectionGroup : detectionStrings)
    {
      for (String detectionString : detectionGroup)
      {
        if (!userAgent.contains(detectionString))
        {
          return false;
        }
      }

      return true;
    }

It returns true after only processing the first element in the detectionStrings list.
It never looks at any of the other elements of the list.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-05-17 07:16:47.682,,,no_permission,,,,,,,,,,,204464,,,Tue May 17 07:16:47 UTC 2011,,,,,,0|i0ka8v:,116477,,,,,,,,"14/May/11 18:21;emberson;Also, why not move the  splitting of the notAllowed into the notAllowedList out of the
matches method:

      String[] notAllowedList = Strings.split(notAllowed, ',');

and into the constructor so that it splits only once rather than each time the matches
method is called.","17/May/11 07:16;mgrigorov;Improved.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BookmarkablePageLink on home page renders non bookmarkable,WICKET-3567,12502629,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,nkaza,nkaza,28/Mar/11 21:08,13/May/11 02:40,13/Mar/19 23:17,13/May/11 02:40,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,,,,,,,,1,,,,,,,Adding a BookmarkablePageLink on the home page renders a non-bookmarkable link.,,,,,,,,,,,,,,,,,,,,,,31/Mar/11 15:54;mgrigorov;3567.tgz;https://issues.apache.org/jira/secure/attachment/12475117/3567.tgz,04/Apr/11 18:47;mgrigorov;WICKET-3567.patch;https://issues.apache.org/jira/secure/attachment/12475397/WICKET-3567.patch,31/Mar/11 20:58;nkaza;wicket-quickstart-1.5.zip;https://issues.apache.org/jira/secure/attachment/12475155/wicket-quickstart-1.5.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-03-31 15:54:11.622,,,no_permission,,,,,,,,,,,204338,,,Mon Apr 04 18:47:41 UTC 2011,,,,,,0|i0kamf:,116538,,,,,,,,"29/Mar/11 21:56;nkaza;To be more precise, the link is in the home page and points TO the home page as well.",31/Mar/11 15:54;mgrigorov;Quickstart showing there is no problem.,31/Mar/11 15:54;mgrigorov;Please modify the quickstart and reopen the ticket.,31/Mar/11 20:58;nkaza;Quickstart reproducing issue.,"31/Mar/11 21:08;nkaza;I modified the quickstart by just adding a simple action link in the page.

When you press the link the url becomes: http://localhost:8080/quickstart/aa/?0

At this point the bookmarkable link also becomes: http://localhost:8080/quickstart/aa/?0   (which to my understanding is not bookmarkable since it references a specific page state).

Now if you hit the url http://localhost:8080/quickstart/aa again, the bookmarkable link becomes: http://localhost:8080/quickstart/aa/?1

Shouldn't the bookmarkable link always be ""http://localhost:8080/quickstart/aa"" ?","04/Apr/11 18:47;mgrigorov;A patch that solves the problem.
I think the real fix should be in HomePageMapper/MountedMapper but I cannot make it working without making an endless redirect loop.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PageParameters violates hashCode() contract,WICKET-3696,12506715,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,andi5,andi5,10/May/11 13:33,11/May/11 00:04,13/Mar/19 23:17,11/May/11 00:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,,,,,,,,0,,,,,,,"        PageParameters param1 = new PageParameters();
        PageParameters param2 = new PageParameters();
        assertThat(param1, is(equalTo(param2)));
        assertThat(param1.hashCode(), is(equalTo(param2.hashCode())));

PageParameter overrides #equals(), but not #hashCode(), so two equal objects do not necessarily have the same hashCode().
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204450,,,2011-05-10 13:33:16.0,,,,,,0|i0kaa7:,116483,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IValidationError should extend IClusterable,WICKET-3666,12506161,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,sludwig,sludwig,04/May/11 11:50,10/May/11 23:58,13/Mar/19 23:17,10/May/11 23:58,1.4.17,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,,,,,,,,0,serialization,validation,wicket,,,,"In my opinion IValidationError should extend IClusterable, because an IValidationError is often held within an instance that is subject to serialization. An example is org.apache.wicket.markup.html.form.ValidationErrorFeedback, where the IValidationError is held in a member variable. ValidationErrorFeedback implements IClusterable, but if it contains a non-serializable IValidationError, a runtime-exception occurs on serialization or on serialization-check.",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204427,,,2011-05-04 11:50:08.0,,,,,,0|i0kacf:,116493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax does not work with XHTML,WICKET-3023,12472747,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,nowaker,nowaker,27/Aug/10 21:36,29/Apr/11 13:34,13/Mar/19 23:17,29/Apr/11 13:34,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket,,,,,,,0,,,,,,,"Nothing except for plain AjaxLink works.

{noformat}
// Page class
@Override
protected void configureResponse() {
	super.configureResponse();
	final Response response = getResponse();
	response.setContentType(""application/xhtml+xml"");
}
{noformat}

Firebug says:
{noformat}
An invalid or illegal string was specified"" code: ""12
[Break on this error] c.innerHTML = msg; 
{noformat}

Oh yes, no innerHTML is allowed in pure XHTML.

A simple, quick work-around for this would be to use a jQuery and replace all innerHTMLs with something XHTML-friendly so that DOM tree is built. It would look something like that:

{noformat}
// c.innerHTML = msg;
$(c).html(msg);
{noformat}",,,,,,,,,,,,,,,,,,,,,,03/Mar/11 14:34;myproject3023.7z;https://issues.apache.org/jira/secure/attachment/12472531/myproject3023.7z,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-27 22:45:02.43,,,no_permission,,,,,,,,,,,203859,,,Fri Apr 29 13:34:00 UTC 2011,,,,,,0|i0kbzz:,116761,,,,,,,,"27/Aug/10 22:45;ivaynberg;i am having very strange results when i set this content type even on a static html page:
firefox opens it as xml
chrome shows the content, even the contents of the <title> page is shown on the page
ie wants to download the file

maybe i am not recreating this correctly...please attach a quickstart.",03/Mar/11 17:58;mgrigorov;Reopen because the author attached a quickstart.,"29/Apr/11 12:39;mgrigorov;Setting ""getDebugSettings().setAjaxDebugModeEnabled(false);"" is a workaround for the problem for 1.4.x.

It works fine in 1.5.x without any changes.","29/Apr/11 13:34;mgrigorov;Fixed in both 1.4.x and 1.5.x.
It was failing in 1.5.x - I needed to tweak the quickstart a bit to actually set the header.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
parentFolderPlaceholder default value in Settings implementation is inconsistent with the javadoc,WICKET-3650,12505391,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,fdonckels,fdonckels,28/Apr/11 08:11,28/Apr/11 17:54,13/Mar/19 23:17,28/Apr/11 17:54,1.4.17,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket,,,,,,,0,path,resource,security,,,,"In relation to wicket-1992,
the javadoc for: 
org.apache.wicket.settings.IResourceSettings#setParentFolderPlaceholder
says:
""Note that by default the placeholder string is empty '' and thus will not allow to access parent folders.""

But the default is null, not ''
and this generates src url like this: resources/com.test.sub.pack.TestPage/null/null/base/information.png
which do work, but probably shouldn't.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-28 17:52:12.977,,,no_permission,,,,,,,,,,,204412,,,Thu Apr 28 17:54:25 UTC 2011,,,,,,0|i0aodb:,60221,,,,,,,,28/Apr/11 17:52;pete;fixed the javadoc for 1.5 ... however generating urls with 'null' inside seems to only happen in 1.4,"28/Apr/11 17:54;pete;fixed javadoc for 1.4, too. disabling the feature with null should work now. the path stays unmodified. however parent resources obviously will not work in that case (which is just as expected) and the resource path is invalid.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax header-contribution omits IE conditional comments,WICKET-3605,12503798,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,rmorrisey,rmorrisey,08/Apr/11 22:33,28/Apr/11 13:30,13/Mar/19 23:17,28/Apr/11 13:30,1.4.16,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC4,,wicket,wicket-extensions,,,,,,0,ajax,conditional-comment,css,header-contribution,ie,stylesheet,"We have a header contributor which writes an IE conditional comment to the header response for an IE-specific stylesheet.

When the page is initially loaded, components on the page render with the IE conditional comment, and are displayed correctly.

If a component is added by an ajax request, the header contributor renders the conditional comment to the ajax response, but the conditional comment is omitted from the page output.
",,,,,,,,,,,,,,,,,,,,,,27/Apr/11 15:26;mgrigorov;WICKET-3605-1.5.tgz;https://issues.apache.org/jira/secure/attachment/12477552/WICKET-3605-1.5.tgz,27/Apr/11 12:10;akiraly;WICKET-3605.patch;https://issues.apache.org/jira/secure/attachment/12477531/WICKET-3605.patch,08/Apr/11 22:35;rmorrisey;quickstart-browsercss.zip;https://issues.apache.org/jira/secure/attachment/12475859/quickstart-browsercss.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-04-26 18:04:28.75,,,no_permission,,,,,,,,,,,204372,,,Wed Apr 27 15:51:59 UTC 2011,,,,,,0|i0kaiv:,116522,,,,,,,,08/Apr/11 22:35;rmorrisey;Attached quickstart to show what on earth I'm talking about. Note that the missing conditional comment is shown in wicket ajax debug.,"26/Apr/11 18:04;pedrosans;Hi Russell, I just tried to manually add a comment element in the page header element using JavaScript and IE is reporting a error in console: ""there are no support for this interface"". You can change the ConditionalHeaderContributor to contribute a resource only if the browser matches. e.g using WebClientInfo","26/Apr/11 19:16;rmorrisey;Pedro,

Thanks for the suggestion! That's what I ended up doing. I would have liked to come up with a fix to contribute to wicket's javascript code; however, I could not determine a way to create a (working) IE conditional comment using javascript after the page load.","27/Apr/11 12:10;akiraly;This bug affects the 1.5 branch too.

Adding a patch for trunk. It modifies wicket-ajax.js so comments from the ajax response are processed and attached to the html head too.",27/Apr/11 15:26;mgrigorov;Attaching a quickstart for 1.5.,27/Apr/11 15:28;mgrigorov;The patch is applied to 1.5.,"27/Apr/11 15:51;mgrigorov;Now I'm thinking that we can add IHeaderResponse.renderConditionalCssReference() which will create something like <comment> in the header-contribution.
Looks better to me.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket Tester behavior changed - Form Tester Ajax Submit clears already filled in TextField ,WICKET-3616,12504260,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,ptrthomas,ptrthomas,14/Apr/11 12:36,27/Apr/11 12:19,13/Mar/19 23:17,27/Apr/11 12:19,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,,,wicket,,,,,,,0,,,,,,,"attached quickstart, run ""mvn test"" and the last line of PageTest.java fails [ tester.assertModelValue(""text"", ""Goodbye Bob""); ]

you can try change the wicket version to 1.4.12 in the pom.xml and see everything work fine",,,,,,,,,,,,,,,,,,,,,,18/Apr/11 16:58;pedrosans;WICKET-3616.patch;https://issues.apache.org/jira/secure/attachment/12476627/WICKET-3616.patch,14/Apr/11 12:37;ptrthomas;wicket-guice.zip;https://issues.apache.org/jira/secure/attachment/12476326/wicket-guice.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-04-18 16:33:13.799,,,no_permission,,,,,,,,,,,204381,,,Wed Apr 27 12:19:13 UTC 2011,,,,,,0|i0kahr:,116517,,,,,,,,14/Apr/11 12:37;ptrthomas;adding attachment,18/Apr/11 16:33;pedrosans;possible cause: WICKET-3418,"18/Apr/11 16:58;pedrosans;BaseWicketTester#setupAjaxSubmitRequestParameters isn't setting the form components values in the next request parameters, so they get discarted.",21/Apr/11 14:57;mgrigorov;+1 for the patch.,27/Apr/11 11:47;mgrigorov;A test is broken with the new fix: testExecuteAjaxEvent_ajaxFormSubmitLink(org.apache.wicket.util.tester.WicketTesterTest),27/Apr/11 12:19;mgrigorov;Improved with r1097092.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Popup close link not working in wicket examples linkomatic page,WICKET-3571,12502704,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,pedrosans,pedrosans,29/Mar/11 12:26,22/Apr/11 19:38,13/Mar/19 23:17,22/Apr/11 19:38,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket-examples,,,,,,,1,,,,,,,"To reproduce:
visit http://localhost:8080/linkomatic/home
click ""Click this button for a popup""
click ""close"" link","IE 8, can't reproduce on Chrome",,,,,,,,,,,,,,,,,,,,,17/Apr/11 17:01;akiraly;fix-WICKET-3571-2.patch;https://issues.apache.org/jira/secure/attachment/12476563/fix-WICKET-3571-2.patch,17/Apr/11 14:26;akiraly;fix-WICKET-3571.patch;https://issues.apache.org/jira/secure/attachment/12476559/fix-WICKET-3571.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-04-17 14:26:44.069,,,no_permission,,,,,,,,,,,204341,,,Fri Apr 22 19:38:54 UTC 2011,,,,,,0|i0kam7:,116537,,,,,,,,"17/Apr/11 14:26;akiraly;Attaching patch that fixes the issue. Tested with IE 6, 8, 9.",17/Apr/11 15:43;jdonnerstag;thanks a lot,"17/Apr/11 17:01;akiraly;I see my previous patch was applied and then reverted  because it failed the Apache license header test. This means that this issue is still valid.

A am attaching a new patch that fixes the issue and also passes the license header test.",17/Apr/11 17:09;jdonnerstag;thanks Attila. I fixed the test/header already,"18/Apr/11 09:52;akiraly;I might miss something because closing popups in IE 6, 8, 9 does not work for me with the current trunk. The opening <html> is after the apache license comment which is A Tag Too Far for IE. So I would like to suggest to apply my second patch that moves the <html> to the first line of the page after the xml declaration. This makes both IE and the license header test happy.","18/Apr/11 12:03;jdonnerstag;Ahh, I see. I changed it because the license header test failed. Obviously we need to fixed the test instead.",22/Apr/11 19:38;jdonnerstag;thanks a lot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.util.lang.PropertyResolverConverter Type Erasure leads to Sloppy Typing,WICKET-3441,12498307,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,emberson,emberson,11/Feb/11 00:46,17/Apr/11 15:45,13/Mar/19 23:17,17/Apr/11 15:45,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,1,,,,,,,"There seems to be some problems with the
org.apache.wicket.util.lang.PropertyResolverConverter convert method
that the Java compiler lets slip because of type erasure.
To show this, lets let the convert method had type parameterized arguments:

public <OT, CT> Object convert(OT object, Class<CT> clz)

and the converter is then typed:

  IConverter<CT> converter = converterSupplier.getConverter(clz);

then the block of code:

  else if (clz == String.class) {
    return converter.convertToString(object, locale);
  }

has an issue because the convertToString expects object to have
type CT. Because of type erasure, the Java compiler lets this
slip by. In addition, since the class type is String, the
converter used is just the ConverterLocator,DefaultConverter
whose convertToString method ends up calling

    return (String)Objects.convertValue(value, String.class);

which, when nothing can be found to convert to a ""known"" value
simply returns the value parameter. Again, all this is allowed
because the Java compiler gets sloppy due to type erasure.
But calling Objects.convertValue is just what the block of code
following the above convert method code does:

  else {
    try {
     return Objects.convertValue(object, clz);
    } catch (RuntimeException ex) {
     // ignore that try it the other way
    }
    // go through string to convert to the right object.
    String tmp = converter.convertToString(object, locale);
    return converter.convertToObject(tmp, locale);
  }

So, the previous block of code:

  else if (clz == String.class) {
    return converter.convertToString(object, locale);
  }

can be removed 1) allowing for correct typing and 2) with the
same results.

Also, if one examines the code:

    // go through string to convert to the right object.
    String tmp = converter.convertToString(object, locale);
    return converter.convertToObject(tmp, locale);

one sees that this has the same sloppy typing as the code block
just remove, that is:

    return converter.convertToString(object, locale);

Again, object is of type OT while the convertToString method
of the IConverter is expecting a type of CT.
The fix is to use an IConverter of the type of OT to convert to
String and then the IConverter of type CT to convert to the
return object:

    // go through string to convert to the right object.
    IConverter<OT> converterForObj =
        converterSupplier.getConverter(object.getClass());
    String tmp = converterForObj.convertToString(object, locale);
    return converter.convertToObject(tmp, locale);

This is now correctly typed.

I noticed this because there is rather more theory behind Scala's
type system than Java's so that the Scala compiler complained about
the attempt to sneak around the type erasure.
",all,,,,,,,,,,,,,,,,,,,,,17/Apr/11 13:33;akiraly;fix-WICKET-3441.patch;https://issues.apache.org/jira/secure/attachment/12476558/fix-WICKET-3441.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-17 13:33:13.313,,,no_permission,,,,,,,,,,,204228,,,Sun Apr 17 15:45:56 UTC 2011,,,,,,0|i0kayf:,116592,,,,,,,,"17/Apr/11 13:33;akiraly;Attaching patch against current trunk.

Patch contains fix for the issue and 2 new unit tests. The tests fail with the original implementation and pass with the new one.",17/Apr/11 15:45;jdonnerstag;thanks a lot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can not add validator to AjaxEditableLabel unless it was added to page,WICKET-3557,12502357,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,erikvanoosten,erikvanoosten,25/Mar/11 08:04,13/Apr/11 20:47,13/Mar/19 23:17,13/Apr/11 20:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket-extensions,,,,,,,0,,,,,,,"Method AjaxEditableLabel#add(IValidator) tries to add the validator to the editor. As the editor initiaily does not exist, it is created. Creation of the editor fails when the component has not been added to the page yet.

Workaround: add the AjaxEditableLabel to page before adding the validator(s).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-13 20:47:52.546,,,no_permission,,,,,,,,,,,204329,,,Wed Apr 13 20:47:52 UTC 2011,,,,,,0|i0aodr:,60223,,,,,,,,13/Apr/11 20:47;pete;Fixed. Thanks for reporting the issue!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org/apache/wicket/util/lang/WicketObjects resolveClass resolved  not used,WICKET-3600,12503538,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,06/Apr/11 17:16,06/Apr/11 18:16,13/Mar/19 23:17,06/Apr/11 18:16,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"The latest version of the resolveClass method has code that gets a resolved class, but then does not
use it:

  public static <T> Class<T> resolveClass(final String className)
  {
    Class<T> resolved = null;
    try
    {
      if (Application.exists())
      {
// BUG: this resolved value is never used
        resolved = (Class<T>)Application.get()
          .getApplicationSettings()
          .getClassResolver()
          .resolveClass(className);
      }                 
      resolved = (Class<T>)Class.forName(className, false, Thread.currentThread()     
        .getContextClassLoader());
    } 
    catch (ClassNotFoundException cnfx)
    {
      log.warn(""Could not resolve class ["" + className + ""]"", cnfx);
    }
    return resolved;
  }     
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-06 18:16:51.366,,,no_permission,,,,,,,,,,,204368,,,Wed Apr 06 18:16:51 UTC 2011,,,,,,0|i0kajb:,116524,,,,,,,,"06/Apr/11 18:16;mgrigorov;Fixed with r1089556.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CryptoMapper ignores the IProvider<ICrypt> argument,WICKET-3581,12503004,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jesselong,jesselong,31/Mar/11 13:06,31/Mar/11 15:34,13/Mar/19 23:17,31/Mar/11 15:34,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"CryptoMapper takes a IProvider<ICrypt> argument, and has a default ApplicationCryptoProvider, but always ignored the configured crypto provider and directly retrieves the application crypto provider.",,,,,,,,,,,,,,,,,,,,,,31/Mar/11 13:06;jesselong;fix-WICKET-3581.patch;https://issues.apache.org/jira/secure/attachment/12475093/fix-WICKET-3581.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-31 15:34:45.498,,,no_permission,,,,,,,,,,,204350,,,Thu Mar 31 15:34:45 UTC 2011,,,,,,0|i0kalb:,116533,,,,,,,,31/Mar/11 13:06;jesselong;Patch to rectify the problem,31/Mar/11 15:34;mgrigorov;Fixed with r1087342.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Login doesn't work if placing the SignInPanel on the HomePage.,WICKET-3493,12500180,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,linuxluigi,linuxluigi,02/Mar/11 14:20,18/Mar/11 19:37,13/Mar/19 23:17,18/Mar/11 05:54,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket-auth-roles,wicket-examples,,,,,,0,wicket,,,,,,"I did some minor changes to wicket example authentication3. I put the SignInPanel on the HomePage. The changes look like this:

HomePage.java
  public HomePage() {
        super();
        
        add(new SignInPanel(""signin"", true));
  }


HomePage.html
       <br><br>
        <div wicket:id=""signin""></div>


Now you can see the SignInPanel on the HomePage. If you login you are redirected to the home page again. Everything seems to be fine. But if you click the Admin Page link you are redirected to the login page. I think you should end-up on the Admin Page itself because the login was correct.

That means also, you cannot use the SignInPanel on your application's home page for user login. 

Regards
Ludger
",Ubuntu 10.04 and Wicket 1.5 latest trunk,,,,,,,,,,,,,,,,,,,,,18/Mar/11 19:37;pinkhamj@gmail.com;RestartResponseAtInterceptPageException.java;https://issues.apache.org/jira/secure/attachment/12474024/RestartResponseAtInterceptPageException.java,17/Mar/11 15:09;pinkhamj@gmail.com;quick1.zip;https://issues.apache.org/jira/secure/attachment/12473911/quick1.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-03-17 15:09:47.935,,,no_permission,,,,,,,,,,,204274,,,Fri Mar 18 19:37:49 UTC 2011,,,,,,0|i0kat3:,116568,,,,,,,,"09/Mar/11 09:01;linuxluigi;Now we have a complex behavior. Follow these steps:

1. Login on the HomePage -> you are redirected to HomePage. OK! But cookie (remember me was checked) not set. Not OK!
2. Click admin link -> redirected to login page. Not OK!
3. Click back button of your browser or use the back gesture -> Back to HomePage, of course.
4. Login again -> redirected to AdminPage and cookie is set. OK but very strange behavior

After SignOut you are able to reproduce the steps.

","17/Mar/11 15:09;pinkhamj@gmail.com;This demonstrates the issue.  I think it is the same issue, which started sometime between 1.5-M3 and 1.5-RC1 when I first noticed it.  It remains here in rc2.","17/Mar/11 19:52;pinkhamj@gmail.com;Oh, and by the way, the quickstart is minimal so it doesn't even have wicket-auth-roles.

I think the problem is with the RestartResponseAtInterceptPageException class, but I haven't learned git yet to view it's change history.","17/Mar/11 20:19;mgrigorov;No need to use Git. You can see the changes here: http://svn.apache.org/viewvc/wicket/trunk/wicket-core/src/main/java/org/apache/wicket/RestartResponseAtInterceptPageException.java?view=log
I tried to bisect it but the problem is not in this class. I reverted to an year back and the behavior is the same. ","18/Mar/11 05:20;ivaynberg;@Jim, the behavior in your attached quickstart is the correct one. since you are throwing the RRIPE from inside the listener the listener will be resumed when you execute continueToOriginalDestination(). if you were truly intercepting a page destination you would throw RRIPE no later then page's constructor.

the behavior you are experiencing here is something we tried hard to achieve as it was requested numerous times. a specific example was that our users wanted to intercept the processing of a form, etc.

the quickstart you have provided has nothing to do with the original problem described in this issue.",18/Mar/11 05:54;ivaynberg;main problem fixed. session was not binding itself explicitly on signin and because home page is stateless the signedin flag was not being persisted.,"18/Mar/11 19:37;pinkhamj@gmail.com;It's quite the hack, but it works around the issue for me till more familiar eyes than mine find time to look at this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestCycle.steps() creates a session on abort even if none exists,WICKET-3487,12499959,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,tpalmer,tpalmer,28/Feb/11 18:17,10/Mar/11 00:51,13/Mar/19 23:17,10/Mar/11 00:51,1.4.14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,,,wicket,,,,,,,0,,,,,,,"During abort exception handling, RequestCycle.steps() calls getSession() to check if the session is invalidated (part of the solution to WICKET-2013).  Unfortunately, this has the side-effect of creating a new session if none exists.  Ideally, this should first call Session.exists() to see if a session is even bound to the current thread.  If not, no action needs to be taken to still meet the needs of 2013.

The ultimate goal is to be able to abort an initial request (e.g. via exception thrown from RequestCycle.onBeginRequest()) without incurring the overhead of a useless session.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204269,,,2011-02-28 18:17:15.0,,,,,,0|i0katr:,116571,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org/apache/wicket/request/cycle/RequestCycleListenerTest MockRequestCycle setResponse,WICKET-3499,12500316,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,emberson,emberson,03/Mar/11 16:21,09/Mar/11 06:20,13/Mar/19 23:17,09/Mar/11 06:20,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"In org/apache/wicket/request/cycle/RequestCycleListenerTest MockRequestCycle is this 
method correct:

  
    public Response setResponse(Response response)
    {
      return response;
    } 
",all,,,,,,,,,,,,,,,,,,,,,04/Mar/11 00:44;pedrosans;WICKET-3499.patch;https://issues.apache.org/jira/secure/attachment/12472637/WICKET-3499.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-04 00:44:28.111,,,no_permission,,,,,,,,,,,204279,,,Wed Mar 09 06:20:02 UTC 2011,,,,,,0|i0kasf:,116565,,,,,,,,"04/Mar/11 00:44;pedrosans;Fixed by copy/pasting the RequestHandlerStack#respond implementation from RequestCycle.HandlerExecutor, but now tests in RequestHandlerStackTest are meaningless since they are not testing the core code.","04/Mar/11 10:24;mgrigorov;Yes, it seems we don't need this MockRequestCycle at all.
Currently some of the assertions (e.g. the one at line 126) tests that MockRequestCycle.setResponse(Response) does nothing.",09/Mar/11 06:20;ivaynberg;applied pedro's patch with a small bugfix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org/apache/wicket/markup/html/form/upload/MultiFileUploadField setDefaultModel type error,WICKET-3494,12500227,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,emberson,emberson,02/Mar/11 21:00,09/Mar/11 06:00,13/Mar/19 23:17,09/Mar/11 06:00,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,,,,,,,"If one worries about correct typing (which I am forced to do), then the setDefaultModel method for 
org/apache/wicket/markup/html/form/upload/MultiFileUploadField
should be:

  public FileUploadField setDefaultModel(IModel<?> model) {
    return (FileUploadField)super.setDefaultModel(model);
    if (model == null)
        super.setDefaultModel(null)
    else
        super.setDefaultModel(new ListModel<FileUpload>(Arrays.asList(model.getObject())));
    return this;
  }       

Just like the constructor.
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-09 05:58:54.098,,,no_permission,,,,,,,,,,,204275,,,Wed Mar 09 05:58:54 UTC 2011,,,,,,0|i0kasv:,116567,,,,,,,,"02/Mar/11 22:24;emberson;My Bad. It should be:

  public FileUploadField setDefaultModel(IModel<List<FileUpload>> model) {
    return super.setDefaultModel(model)
  }                                 
","09/Mar/11 05:58;ivaynberg;what you are suggesting will not compile because of

Name clash: The method setDefaultModel(IModel<List<FileUpload>>) of type FileUploadField has the same erasure as setDefaultModel(IModel<?>) of type MarkupContainer but does not override it

i removed the method altogether.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpsMapper triggers rendering of incorrect absolute callback url for Link,WICKET-3508,12500498,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,kpatrick,kpatrick,05/Mar/11 07:18,08/Mar/11 07:40,13/Mar/19 23:17,08/Mar/11 07:40,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket,,,,,,,0,wicket,,,,,,"This problem only occurs when HttpsMapper is installed as the root request mapper. Additionally, it only seems to occur when the web context is not root.

I mount a simple page so that it is available as http://localhost:8080/myproject/pagetest. That page has one Link (the onclick doesn't do anything). If I access that exact url and show source I see the link callback is rendered incorrectly. It should have the web context mentioned. The fact that Wicket generates an absolute url makes me think the HttpsMapper.mapHandler is touching it in such a way to trigger an absolute url, when the delegate was returning a url expecting it to be relative.

<!DOCTYPE html>
<html>
<body>
<a wicket:id=""test"" href=""http://localhost:8080/wicket/page?1-1.ILinkListener-test"">Click Here</a>
</body>
</html>

","Windows XP sp3, java 6",,,,,,,,,,,,,,,,,,,,,05/Mar/11 07:20;kpatrick;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12472741/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204288,,,Sat Mar 05 07:25:30 UTC 2011,,,,,,0|i0kar3:,116559,,,,,,,,05/Mar/11 07:20;kpatrick;Attached quickstart. Note that https is not configured and doesn't need to be to demonstrate the bug.,05/Mar/11 07:25;kpatrick;minor typo in summary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HybridUrlEncoding Strategy throws uncaught NumberFormatException if Integer value space is violated,WICKET-3490,12500162,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,ghartner,ghartner,02/Mar/11 10:32,02/Mar/11 15:49,13/Mar/19 23:17,02/Mar/11 15:49,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,,,wicket,,,,,,,0,HybridUrlCodingStrategy,NumberFormatException,,,,,"We are using HybridUrlCodingStrategy for some of our pages. Our tester tried entering a URL like https://{serverHost}:{serverPort}/{applicationContextPath}/{pageMountPath}.999999999999999999999999999999999999999999999999999999999999999999999999999 

99999999... => this PageId does not exist, which is checked later in the execution path. The problem is that in org.apache.wicket.request.target.coding.HybridUrlCodingStrategy$PageInfo.parsePageInfo(HybridUrlCodingStrategy.java:873) Integer.valueOf(999999999999...) is called, which correctly causes a NumberFormatException being thrown. This Exception should be handled like an Unknown PageId from our point of view.

Error Page/ Stack Trace:
HTTP ERROR 500

Problem accessing /login.999999999999999999999999999999999999999999999999999999999999999999999999999. Reason:

    For input string: ""999999999999999999999999999999999999999999999999999999999999999999999999999""

Caused by:

java.lang.NumberFormatException: For input string: ""999999999999999999999999999999999999999999999999999999999999999999999999999""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:461)
	at java.lang.Integer.valueOf(Integer.java:554)
	at org.apache.wicket.request.target.coding.HybridUrlCodingStrategy$PageInfo.parsePageInfo(HybridUrlCodingStrategy.java:873)
	at org.apache.wicket.request.target.coding.HybridUrlCodingStrategy.matches(HybridUrlCodingStrategy.java:644)
	at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy$MountsMap.strategyForPath(WebRequestCodingStrategy.java:1145)
	at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.urlCodingStrategyForPath(WebRequestCodingStrategy.java:444)
	at org.apache.wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.urlCodingStrategyForPath(CryptedUrlWebRequestCodingStrategy.java:174)
	at org.apache.wicket.protocol.http.WicketFilter.getLastModified(WicketFilter.java:1147)
	at org.apache.wicket.protocol.http.WicketServlet.getLastModified(WicketServlet.java:284)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:703)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)

Please don't hesitate contacting me if you need more information or send me advice if you want me to contribute a fix for this issue.","Wicket Pages using HybridUrlCodingStrategy, we are using Jetty 6",7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-02 15:49:19.706,,,no_permission,,,,,,,,,,,204272,,,Wed Mar 02 15:49:19 UTC 2011,,,,,,0|i0katj:,116570,,,,,,,,"02/Mar/11 15:49;mgrigorov;Fixed in 1.4.x.
1.5 behaved as expected. Added a unit test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org/apache/wicket/extensions/yui/calendar/DatePickerTest convertDateNew hours param null ,WICKET-3463,12499296,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,22/Feb/11 03:11,22/Feb/11 12:26,13/Mar/19 23:17,22/Feb/11 12:26,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC3,,,wicket-datetime,,,,,,,0,,,,,,,"org/apache/wicket/extensions/yui/calendar/DatePickerTest convertDateNew hours param 
can be null but is used:

      date.set(DateTimeFieldType.hourOfDay(), hours % 12);
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-22 12:26:12.265,,,no_permission,,,,,,,,,,,204248,,,Tue Feb 22 12:26:12 UTC 2011,,,,,,0|i0kawv:,116585,,,,,,,,"22/Feb/11 12:26;mgrigorov;Fixed with r1073309 in trunk.
1.4 has no such problem/test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect setting of AjaxSubmitLink's request parameter in BaseWicketTester.submitAjaxFormSubmitBehavior,WICKET-3418,12497574,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pedrosans,szabolcs,szabolcs,03/Feb/11 15:17,21/Feb/11 00:14,13/Mar/19 23:17,20/Feb/11 22:48,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,,,wicket,,,,,,,0,,,,,,,"In BaseWicketTester.submitAjaxFormSubmitBehavior() the AjaxSubmitLink's name is set in the request parameters as follows:
(1)  Map<String, String[]> requestParams = getParametersForNextRequest();
      requestParams.put(inputName, new String[] { ""x"" });

However, as far as I could check MockWebApplication's.parametersForNextRequest is only put into the actual request when setupRequestAndResponse() is called. Since in clickLink()
(2)  WebRequestCycle requestCycle = setupRequestAndResponse(true);
      submitAjaxFormSubmitBehavior(linkComponent, ajaxFormSubmitBehavior);

setupRequestAndResponse() precedes the submitAjaxFormSubmitBehavior() this won't happen in the current request any more and the Ajax submit is not processed correctly in the current request and also causes side effects for the next form submit (ajax or normal).

To solve it either replace (1) with:
  getServletRequest().setParameter(inputName, new String[] { ""x"" });

or change the order of the two lines in (2).",,,,,,,,,,,,,,,,,,,,,,20/Feb/11 21:19;pedrosans;WICKET-3418.patch;https://issues.apache.org/jira/secure/attachment/12471532/WICKET-3418.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-20 17:59:09.957,,,no_permission,,,,,,,,,,,204211,,,Mon Feb 21 00:14:39 UTC 2011,,,,,,0|i0kb1b:,116605,,,,,,,,"20/Feb/11 17:59;ivaynberg;perdo, ping","20/Feb/11 21:07;pedrosans;Szádeczky is right, we should set parameters for next request before setup the request and response object. Also submitAjaxFormSubmitBehavior can be renamed to: setupAjaxSubmitRequestParameters","20/Feb/11 21:19;pedrosans;Sending the patch changing the setup order and removing asserting lines from AjaxSubmitLinkClickTest because wicket tester do not maintain request parameter between requests, even if they would be originated by browser to form components on page.",20/Feb/11 22:48;ivaynberg;committed patch,"21/Feb/11 00:14;hudson;Integrated in Apache Wicket 1.4.x #454 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/454/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CheckGroupSelector does not inherit ""disabled"" property from parent form",WICKET-3416,12497526,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,rooomka,rooomka,02/Feb/11 23:34,18/Feb/11 00:12,13/Mar/19 23:17,17/Feb/11 07:06,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,,,,0,checkgroup,"form,",,,,,"component CheckGroupSelector does not inherit ""disabled"" property from parent component (form or CheckGroup) as it inherits from  LabeledWebMarkupContainer. To resolve this issue CheckGroupSelector should inherit from FormComponent<Boolean>",not relevant,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-13 09:03:15.243,,,no_permission,,,,,,,,,,,204209,,,Fri Feb 18 00:12:18 UTC 2011,,,,,,0|i0kb1j:,116606,,,,,,,,"13/Feb/11 09:03;mgrigorov;Can you give more information please ?
What exactly do you want to do ?
org.apache.wicket.Component.isEnabledInHierarchy() should provide the functionality you described.",14/Feb/11 17:51;mgrigorov;Please reopen with more details if isEnabledInHierarchy() doesn't solve your problem.,"15/Feb/11 20:12;rooomka;I have a formular with an CheckGroupSelector in it. If I set the form disabled, all Components inside are automatically disabled, but the CheckGroupSelector not.

I want to set the CheckGroupSelector disabled, not to read it's status.","18/Feb/11 00:12;hudson;Integrated in Apache Wicket 1.4.x #446 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/446/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.markup.html.form.AbstractChoice renderer cast in method appendOptionHtml,WICKET-3439,12498152,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,emberson,emberson,09/Feb/11 18:05,17/Feb/11 07:34,13/Mar/19 23:17,17/Feb/11 07:34,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"In class org.apache.wicket.markup.html.form.AbstractChoice<T, E> the renderer instance 
variable has signature:
  private IChoiceRenderer<? super E> renderer;
In the method appendOptionHtml the renderer's getDisplayValue method is called as follows:
  T objectValue = (T)renderer.getDisplayValue(choice); 
where the signature for the IChoiceRenderer<E> getDisplayValue method is:
  Object getDisplayValue(E object);

So, is it a fact that for all usages of AbstractChoice that the display value returned by a
renderer of type E will always be of type T (not Object)??? If not, then one should expect cast 
exceptions.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-17 07:34:56.671,,,no_permission,,,,,,,,,,,204226,,,Thu Feb 17 07:34:56 UTC 2011,,,,,,0|i0kayv:,116594,,,,,,,,"09/Feb/11 18:18;emberson;Also, in CheckBoxMultipleChoice appendOptionHtml method there is:
  Object displayValue = getChoiceRenderer().getDisplayValue(choice);
Should this also be:
  T displayValue = (T)getChoiceRenderer().getDisplayValue(choice); ","09/Feb/11 18:23;emberson;As a follow up to the previous comment, the CheckBoxMultipleChoice appendOptionHtml method is:
    Object displayValue = getChoiceRenderer().getDisplayValue(choice);        
    Class<?> objectClass = displayValue == null ? null : displayValue.getClass();
    // Get label for choice
    String label = """";
    if (objectClass != null && objectClass != String.class)                   
    {     
      IConverter converter = getConverter(objectClass);                       
      label = converter.convertToString(displayValue, getLocale());           
    }     
    else if (displayValue != null)                                            
    {     
      label = displayValue.toString();                                        
    }     
....

But the IConverter should really be:
      IConverter<T> converter = getConverter(objectClass);     
and, therefore, the displayValue really has to be of type T.                  
","17/Feb/11 07:34;ivaynberg;CheckBoxMultipleChoice had the most correct implementation.

the renderer can really return Object of class that is not tied to any type parameters of the choice component. it is wicket's job then to take this Object and convert it into its String representation using a converter. the getConverter() method is also not tied to the parameter type of the choice component, and so should not be iconverter<t> but rather raw converter since we do not know at compile time which one it will actually be.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChangeHandler fires in IE on POS1 and END,WICKET-3444,12498545,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,count.negative,count.negative,14/Feb/11 15:59,14/Feb/11 21:05,13/Mar/19 23:17,14/Feb/11 19:09,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,,,,0,ajax,,,,,,"In wicket-ajax.js the Wicket.ChangeHandler fires in IE an event on Textfields even if the KEY_POS1 and the KEY_END is pressed.
Please add 
obj.onkeyup = function(event) {		
			switch (wicketKeyCode(Wicket.fixEvent(event))) {
				case KEY_ENTER:
				case KEY_UP:
				case KEY_DOWN:
				case KEY_ESC:
				case KEY_TAB:
				case KEY_RIGHT:
				case KEY_LEFT:
				case KEY_SHIFT:
				case KEY_ALT:
				case KEY_CTRL:
					return Wicket.stopEvent(event);
					break;
				default:
					if (typeof objonchange == ""function"")objonchange();
			}
			return null;
		}

case KEY_POS1 and KEY_END to the first case so that these two keys don't fall in the default case.
",IE 8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-14 19:01:41.512,,,no_permission,,,,,,,,,,,204231,,,Mon Feb 14 21:05:41 UTC 2011,,,,,,0|i0kaxz:,116590,,,,,,,,"14/Feb/11 19:01;mgrigorov;What is POS1 ?
Do you mean HOME ?",14/Feb/11 19:09;mgrigorov;Improved with r1070610 (1.4.x) and r1070612 (trunk).,"14/Feb/11 20:15;hudson;Integrated in Apache Wicket 1.4.x #439 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/439/])
    WICKET-3444 ChangeHandler fires in IE on POS1 and END

Do not fire event when HOME/END keys are pressed.
","14/Feb/11 21:05;count.negative;Yes I mean the Home Key. On a German Keyboard it's the POS1 key.

Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot convert 'this.content' to object in Opera,WICKET-3403,12497055,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,angrandir,angrandir,28/Jan/11 13:43,14/Feb/11 19:47,13/Mar/19 23:17,14/Feb/11 18:58,1.4.13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,,,,0,,,,,,,"I get the error ""Uncaught exception: TypeError: Cannot convert 'this.content' to object"" in Opera every time I try to open some modal window, the problematic code seems to be the following part of modal.js script:

 if (Wicket.Browser.isOpera()) {
this.content.onload = function() {
this.content.contentWindow.name = this.settings.iframeName;
}
} else {
this.content.contentWindow.name = this.settings.iframeName;
}

I am just an end-user, the above information was reported by Opera Dragonfly (error found on line 422 of modal.js). Priority is minor - I cannot use Opera with our in-house wicked-based IS (it heavily depends on modal windows), but I can use alternate browsers like Firefox or Chrome which are not affected.","Opera 11.01, Windows XP SP3 (client side)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-14 18:58:19.316,,,no_permission,,,,,,,,,,,204197,,,Mon Feb 14 19:47:17 UTC 2011,,,,,,0|i0kb33:,116613,,,,,,,,14/Feb/11 18:58;mgrigorov;Fixed with r1070604 (trunk) and r1070605 (1.4.x).,"14/Feb/11 19:47;hudson;Integrated in Apache Wicket 1.4.x #438 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/438/])
    WICKET-3403 Cannot convert 'this.content' to object in Opera

First set the onload handler and then update the iframe's location.
Additionally bind onload to this so it is possible to get a reference to this.content (the iframe).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Strange writeObjectMethodCache in SerializableChecker,WICKET-3383,12496677,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,papegaaij,papegaaij,25/Jan/11 13:32,13/Feb/11 12:11,13/Mar/19 23:17,13/Feb/11 11:14,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,,,wicket,,,,,,,0,,,,,,,"At Topicus, we maintain a customized SerializableChecker with some additional 
checks. I was trying to fix some generics-warnings and noticed a strange thing 
about the writeObjectMethodCache. This variable is used in only 4 places, one 
is a clear, one a get and 2 are puts. Both puts take a Boolean as value, but 
the get checks if the value returned is a Method, which obviously can never 
happen. I think the 'writeObjectMethod' should be put into the map after line 
473:

        writeObjectMethod = cls.getDeclaredMethod(""writeObject"",
                        new Class[] { java.io.ObjectOutputStream.class });
",,,,,,,,,,,,,,,,,,,,,,25/Jan/11 13:34;papegaaij;wicket-3383.diff;https://issues.apache.org/jira/secure/attachment/12469280/wicket-3383.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-13 11:14:47.178,,,no_permission,,,,,,,,,,,204179,,,Sun Feb 13 12:11:47 UTC 2011,,,,,,0|i0kb4v:,116621,,,,,,,,"13/Feb/11 11:14;mgrigorov;Fixed with r1070214 in 1.4.x.
1.5.x handles this a bit different and no fix is needed there.","13/Feb/11 12:11;hudson;Integrated in Apache Wicket 1.4.x #436 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/436/])
    WICKET-3383 Strange writeObjectMethodCache in SerializableChecker

Add the found writeObject() method in the cache.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TreeTable should call attachUpdate javascript on domready event.,WICKET-3323,12495273,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,amorozov,amorozov,11/Jan/11 17:18,11/Feb/11 17:18,13/Mar/19 23:17,11/Feb/11 16:28,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket-extensions,,,,,,,0,,,,,,,"Since Wicket-1.4.15 it is possible to filter javascript resources (JavascriptFilteredIntoFooterHeaderResponse) and place them to the tail of HTML document. It means that some embedded javascript can be broken because of too early evaluation and missing dependencies.

I have faced with this problem in TreeTable component. But probably there are other places in the framework, affected by this issue.
",,,,,,,,,,,,,,,,,,,,,,11/Jan/11 17:35;amorozov;fix-WICKET-1.4-3323.patch;https://issues.apache.org/jira/secure/attachment/12468029/fix-WICKET-1.4-3323.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-11 16:28:23.138,,,no_permission,,,,,,,,,,,204128,,,Fri Feb 11 17:18:02 UTC 2011,,,,,,0|i0kba7:,116645,,,,,,,,"11/Feb/11 16:28;mgrigorov;Improved with r1069859 (trunk) and r1069860 (1.4.x).
Thanks!","11/Feb/11 17:18;hudson;Integrated in Apache Wicket 1.4.x #430 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/430/])
    WICKET-3323 TreeTable should call attachUpdate javascript on domready event.

Render 'Wicket.TreeTable.attachUpdate()' when DOM is ready, because otherwise wicket-ajax.js could not be available yet
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OnChangeAjaxBehavior can render javascript before wicket-ajax.js is loaded,WICKET-3436,12498006,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,amorozov,amorozov,08/Feb/11 16:19,11/Feb/11 16:52,13/Mar/19 23:17,11/Feb/11 09:51,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,,,,0,javascript,,,,,,"In the current OnChangeAjaxBehavior implementation, the behavior renders javascript (Wicket.ChangeHandler)
within the onComponentRendered() method directly to the response. Its okay in case, when wicket-ajax.js is rendered in the head of the page, but if we move javascript to the footer of the page, the inlined javascript will be broken.

I think, the javascript have to be evaluated after the DOM is built.

",,,,,,,,,,,,,,,,,,,,,,08/Feb/11 16:23;amorozov;fix-WICKET-3436.patch;https://issues.apache.org/jira/secure/attachment/12470600/fix-WICKET-3436.patch,11/Feb/11 16:52;amorozov;fix-test-WICKET-3436.patch;https://issues.apache.org/jira/secure/attachment/12470868/fix-test-WICKET-3436.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-02-11 09:51:50.656,,,no_permission,,,,,,,,,,,204223,,,Fri Feb 11 16:52:27 UTC 2011,,,,,,0|i0kazj:,116597,,,,,,,,11/Feb/11 09:51;mgrigorov;Improved with r1069727 (1.4.x) and 1069724 (trunk),"11/Feb/11 10:31;hudson;Integrated in Apache Wicket 1.4.x #428 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/428/])
    WICKET-3436 OnChangeAjaxBehavior can render javascript before wicket-ajax.js is loaded

register Wicket.ChangeHandler when 'domready' event is fired.
This way the registration doesn't depend on already loaded wicket-ajax.js
","11/Feb/11 15:34;amorozov;Martin, 

could you also review fix for similar issue, but in wicket-extensions ? https://issues.apache.org/jira/browse/WICKET-3323

Thank you.
","11/Feb/11 16:12;hudson;Integrated in Apache Wicket 1.4.x #429 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/429/])
    WICKET-3436 OnChangeAjaxBehavior can render javascript before wicket-ajax.js is loaded

Update the test expectation
",11/Feb/11 16:52;amorozov;Fix for the test.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket DateTimeField / DatePicker creates a memory leak on the browser when rerenderd using ajax requests,WICKET-2850,12463106,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jomarl,jomarl,27/Apr/10 13:49,08/Feb/11 13:12,13/Mar/19 23:17,30/Aug/10 23:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-datetime,,,,,,,0,ajax,calendar,yahoo,,,,"When a wicket DateTimeField is repeatedly added to a page using  AjaxRequestTarget#addComponent(..) it creates a memory leak on the browser. This will eventually cause memory starvation
on the client machine.

The error can be reproduced by using a DateTimeField component that updates itself using the AjaxSelfUpdatingTimeBehavior. 

DateTimeField field= new DateTimeField(""field"", new Model<Date>(new Date()));
field.add(new AjaxSelfUpdatingTimerBehavior(Duration.seconds(0.5)));
add(field);

Running this for just an hour or so clearly shows that the browsers do not free up resources. The problem seems to be related to how wicket-date.js reinitializes a new Yahoo Yui Calendar widget using the same element id on each rerendering. 

","Firefox 3.6, Internet Explorer 8, Opera 9.10",,,,,,,,,,,,,,,,,,,,,27/Apr/10 13:54;jomarl;Dummy.html;https://issues.apache.org/jira/secure/attachment/12442960/Dummy.html,27/Apr/10 13:54;jomarl;Dummy.java;https://issues.apache.org/jira/secure/attachment/12442959/Dummy.java,01/May/10 19:59;martin-g;WICKET-2850.patch;https://issues.apache.org/jira/secure/attachment/12443387/WICKET-2850.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-05-01 19:59:37.045,,,no_permission,,,,,,,,,,,203696,,,Tue Aug 31 00:50:15 UTC 2010,,,,,,0|i0kcef:,116826,,,,,,,,27/Apr/10 13:54;jomarl;Simple page that demonstrates the problem.,01/May/10 19:59;martin-g;A patch that removes the old widget on Ajax re-render.,"31/Aug/10 00:14;hudson;Integrated in Apache Wicket 1.4.x #133 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/133/])
    WICKET-2850
","31/Aug/10 00:50;hudson;Integrated in Apache Wicket 1.5.x #279 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/279/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1.5-RC1 sources seem to be missing in Maven repository,WICKET-3365,12496371,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,wboyce@panix.com,wboyce@panix.com,22/Jan/11 13:26,29/Jan/11 03:35,13/Mar/19 23:17,25/Jan/11 10:02,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"I saw a 1.5-RC1 build here:

http://repo1.maven.org/maven2/org/apache/wicket/wicket/1.5-RC1/

but it looks like the sources are missing.  There are source jar files, but they don't contain any classes.  Was that intentional or is something wrong with the build process?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-22 14:26:19.672,,,no_permission,,,,,,,,,,,204164,,,Sat Jan 29 03:35:21 UTC 2011,,,,,,0|i0kb67:,116627,,,,,,,,"22/Jan/11 14:26;mgrigorov;wicket.jar is not a regular Maven artifact. It combines the classes from wicket-core.jar, wicket-util.jar and wicket-request.jar.
Use the sources of those instead.",22/Jan/11 14:38;mgrigorov;Reopen: At least we can disable deployment of this empty archive.,"22/Jan/11 15:06;wboyce@panix.com;Please consider:

1.  The project does provide a ""wicket"" component, so it must be a legitimate part of the release.

2.  Every single release from 1.3.0 through 1.5-M3 included the sources for the ""wicket"" artifact.  I only noticed this when I changed from 1.5-M3 to 1.5-RC1.

3.  Providing the ""wicket"" artifact but not providing the sources needlessly imposes a penalty on Maven users who choose to reference that artifact from their pom.xml files:  their IDEs will be unable to find the sources.  I suppose that those people could go download the individual source jars and reference them from the IDE, but I think that those people would rather just change pom.xml to reference the component artifacts.  

4.  There must be a process for creating the ""wicket"" artifact and its sources, as evidenced by the fact that those jars have been part of the release for years.  It seems likely that the source-generation part is just broken.

If the project wants to deprecate the ""wicket"" artifact then that's fine, but in that case, I think that it should simply be eliminated.  But if the project is going to continue to provide the artifact, then I think that it should provide the corresponding source artifact too.

W






","22/Jan/11 15:11;mgrigorov;With r1062171 the -sources.jar will not be deployed anymore.
I didn't find a way to disable the deployment of -tests.jar.","22/Jan/11 15:15;mgrigorov;For Maven users is recommended to depend on wicket-core module and everything will be fine.
wicket.jar is for non-Maven users, it includes everything to use Wicket without using Maven.
I'll add an entry in the migration page.","22/Jan/11 15:48;wboyce@panix.com;Martin, I still don't understand why we can't just get the sources jar.  It has been part of the release for years.  Isn't it generated automatically a part of the build process?  What's the reason for eliminating it now?  It seems so needless.






","22/Jan/11 16:03;mgrigorov;The projects have be restructured. See WICKET-3261.
'wicket' module is empty in SVN. At build time it collects the .class files from the ""real"" projects - wicket-core, wicket-util and wicket-request.
We needed to do this because Ant users download just (the old) wicket.jar and then their builds fail with ClassNotFoundException for the classes from -util and -request modules. 

If you provide a patch that builds -sources.jar and -javadoc.jar then I don't mind to use it.","22/Jan/11 16:56;wboyce@panix.com;I see.  I didn't realize it was an intentional change with this release.  Thanks for the explanation!





","24/Jan/11 04:40;jthomerson;I think that if we are providing an aggregated jar for non-Maven folks, we should provide the source as an aggregate jar as well.  Otherwise, they will have to download three source jars, unzip, merge, and rezip as a jar to attach in their IDE.  We want users to be able to attach the source in their IDE (and get javadocs from source or javadocs jar)",24/Jan/11 06:03;dashorst;we shouldn't upload the aggregate jar to maven repos if possible at all. It is detrimental for maven users: you get duplicate classes on classpath if you use the aggregate jar and something like wicket-extensions,"24/Jan/11 09:27;mgrigorov;I see two solutions:

# to not deploy wicket.jar in Maven repos. As this has been discussed several times this .jar is for ANT users. Maven users are recommended to use wicket-core. But I see even Wicket developers are confused and advertise Maven dependency to wicket.jar in the release notes. I guess the users will be even more confused.

# to find a way to create -sources and -javadoc packages for o.a.w:wicket module and change all other modules (like -extentions, -spring, ...) to depend on o.a.w:wicket instead of o.a.w:wicket-core. This solution will be less confusing for all of us.","24/Jan/11 20:30;shakespear;Actually, accordingly to the announce mail (http://apache-wicket.1842946.n4.nabble.com/announce-Wicket-1-5-RC1-is-released-td3231848.html) the recommended artifact to use for maven users is wicket, not wicket-core:

< . . .snippet . . . >

* To use in Maven:
<dependency>
    <groupId>org.apache.wicket</groupId>
    <artifactId>wicket</artifactId>
    <version>1.5-RC1</version>
</dependency> 

< . . .snippet . . . >","25/Jan/11 09:53;mgrigorov;With r1063179 o.a.w:wicket module is a 'pom' module and only provides transitive dependencies to all core modules (-core, -util and -request).
All Maven users are recommended to use o.a.w:wicket as main dependency.
ANT users will have to figure the needed .jar files themselves. At this moment the dependecies are: o.a.w:wicket-core.jar, o.a.w:wicket-request.jar and o.a.w:wicket-util.jar.

The mail discussion is at http://mail-archives.apache.org/mod_mbox/wicket-dev/201101.mbox/%3CAANLkTimVDr3XHswaOAUuf4whU93hjmr0bGHxaTuV4+7D@mail.gmail.com%3E


There is still one minor problem - o.a.w:wicket deploys -tests.jar with just META-INF/ content.",25/Jan/11 10:02;mgrigorov;-tests.jar is not created anymore for o.a.w:wicket:pom module with r1063199.,"29/Jan/11 03:35;michael.ocleirigh;I'm not sure if this issue needs to be adjusted or not but I have found a way to get the sources included into a wicket.jar.  I don't know exactly why it works or how to get the wicket-sources.jar to be generated as a separate file but it definitely works for building a wicket.jar that contains all the classes and java files of the dependencies.

https://github.com/mocleiri/wicket/commit/08727ec2fe059db4754d029d77adc12eb9112b6b",,,,,,,,,,,,,,,,,,,,,,,,
Some i18n xml-s have wrong name,WICKET-3397,12496908,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,akiraly,akiraly,27/Jan/11 09:05,27/Jan/11 09:27,13/Mar/19 23:17,27/Jan/11 09:27,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,wicket-extensions,,,,,,0,,,,,,,"From 1.5 localization properties stored as xml files must end with the "".properties.xml"" suffix. For a few wicket files this rename was not made and so they are not loaded. I found these:

/wicket-parent/wicket-core/src/main/java/org/apache/wicket/Application_bg.xml
/wicket-parent/wicket-core/src/main/java/org/apache/wicket/Application_ru.xml
/wicket-parent/wicket-core/src/main/java/org/apache/wicket/Application_th_TH.xml
/wicket-parent/wicket-core/src/main/java/org/apache/wicket/markup/html/form/upload/MultiFileUploadField_ru.xml
/wicket-parent/wicket-extensions/src/main/java/org/apache/wicket/extensions/rating/RatingPanel_ru.xml
/wicket-parent/wicket-extensions/src/main/java/org/apache/wicket/extensions/wizard/Wizard_ru.xml
/wicket-parent/wicket-extensions/src/main/java/org/apache/wicket/extensions/wizard/Wizard_zh_CN.xml
/wicket-parent/wicket-extensions/src/main/java/org/apache/wicket/extensions/wizard/Wizard_zh_TW.xml
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-27 09:27:42.314,,,no_permission,,,,,,,,,,,204192,,,Thu Jan 27 09:27:42 UTC 2011,,,,,,0|i0kb3z:,116617,,,,,,,,"27/Jan/11 09:27;mgrigorov;Fixed with r1064052.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to see source of the spring examle,WICKET-3381,12496596,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,shakespear,shakespear,24/Jan/11 20:04,24/Jan/11 21:12,13/Mar/19 23:17,24/Jan/11 21:00,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-examples,,,,,,,0,,,,,,,"I've downloaded the wicket-examples-1.5-RC1.war file from the apache repository and deployed.
When I want to look at the source code for the spring example I get a ""Access Denied You do not have access to the page you requested. Return to home page"" in the pop up window.
I've randomly tested other examples but it seems to be working fine there.

A look in the log file showed this:

ERROR - SourcesPage                - user is trying to access class: org.apache.wicket.spring.annot.web.AnnotPage which is not in the scope of org.apache.wicket.examples
ERROR - Component                  - Error while getting default model object for Component: [ [Component id = file, page = org.apache.wicket.examples.source.SourcesPage, path = 1:filespanel:file.SourcesPage$FilesBrowser$1, isVisible = true, isVersioned = true], markup = [markup = file:/home/jpe/programming/tomcat/apache-tomcat-7.0.5/webapps/wicket-examples-1.5-RC1/WEB-INF/classes/org/apache/wicket/examples/source/SourcesPage.html
<li wicket:id=""file"">
					<a href=""#"" wicket:id=""link""><span wicket:id=""name""></span></a>
				</li>, index = 0, current =  '<li wicket:id=""file"">' (line 177, column 5)]]
ERROR - SourcesPage                - user is trying to access class: org.apache.wicket.spring.common.web.HomePage which is not in the scope of org.apache.wicket.examples
ERROR - Component                  - Error while getting default model object for Component: [ [Component id = file, page = org.apache.wicket.examples.source.SourcesPage, path = 5:filespanel:file.SourcesPage$FilesBrowser$1, isVisible = true, isVersioned = true], markup = [markup = file:/home/jpe/programming/tomcat/apache-tomcat-7.0.5/webapps/wicket-examples-1.5-RC1/WEB-INF/classes/org/apache/wicket/examples/source/SourcesPage.html
<li wicket:id=""file"">
					<a href=""#"" wicket:id=""link""><span wicket:id=""name""></span></a>
				</li>, index = 0, current =  '<li wicket:id=""file"">' (line 177, column 5)]]","ubuntu10.10, jdk1.6, tomcat7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-24 21:00:29.706,,,no_permission,,,,,,,,,,,204177,,,Mon Jan 24 21:12:53 UTC 2011,,,,,,0|i0kb53:,116622,,,,,,,,"24/Jan/11 21:00;mgrigorov;Fixed with r1062973.
Thanks!","24/Jan/11 21:12;shakespear;wow, that was a fast :) Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Am/pm support in DateTimeField is broken,WICKET-3348,12495912,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,akiraly,akiraly,18/Jan/11 17:08,20/Jan/11 08:01,13/Mar/19 23:17,20/Jan/11 08:01,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-datetime,,,,,,,0,,,,,,,Changing the value of the am/pm DropDownChoice in o.a.w.extensions.yui.calendar.DateTimeField has no effect.,,,,,,,,,,,,,,,,,,,,,,18/Jan/11 17:09;akiraly;WICKET-3348.patch;https://issues.apache.org/jira/secure/attachment/12468652/WICKET-3348.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-20 08:01:45.89,,,no_permission,,,,,,,,,,,204147,,,Thu Jan 20 08:01:45 UTC 2011,,,,,,0|i0kb7z:,116635,,,,,,,,"18/Jan/11 17:09;akiraly;Attaching patch with bugfix,",20/Jan/11 08:01;ivaynberg;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tomcat complains about thread local memory leaking when using wickets XForwardedRequestWrapperFactory,WICKET-3312,12494937,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,akiraly,akiraly,07/Jan/11 12:27,16/Jan/11 18:54,13/Mar/19 23:17,10/Jan/11 01:26,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,,,,,,,,0,,,,,,,"o.a.w.protocol.http.servlet.XForwardedRequestWrapperFactory can be used to wrap incoming servlet request into o.a.w.protocol.http.servlet.XForwardedRequestWrapper objects. These objects store a SimpleDateFormat array in a private static thread local memory but theye are never cleared. Tomcats memory leak prevention listener detects when the webapp is stopped. Tomcat 7.0.5 logs several times the followings:

2011.01.07. 12:50:59 org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap
SEVERE: The web application [/wtl] created a ThreadLocal with key of type [null] (value [org.apache.wicket.protocol.http.servlet.XForwardedRequestWrapper$1@6328edf2]) and a value of type [java.text.SimpleDateFormat[]] (value [[Ljava.text.SimpleDateFormat;@141dddba]) but failed to remove it when the web application was stopped. This is very likely to create a memory leak.",,,,,,,,,,,,,,,,,,,,,,07/Jan/11 12:29;akiraly;WICKET-3312.patch;https://issues.apache.org/jira/secure/attachment/12467717/WICKET-3312.patch,09/Jan/11 19:08;akiraly;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12467845/quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-01-08 19:37:12.417,,,no_permission,,,,,,,,,,,204118,,,Sun Jan 16 18:54:32 UTC 2011,,,,,,0|i0kbbj:,116651,,,,,,,,"07/Jan/11 12:29;akiraly;Attaching a patch against current trunk. Tests pass, tomcat does not complain anymore.

Patch simply drops static threadlocal variable and uses instance variable to hold the SimpleDateFormat array.","08/Jan/11 19:37;ivaynberg;can you provide some log output of this and a simple quickstart that reproduces it?

doesnt make sense that memory ""leaks"", it is a threadlocal so there will be as many entries as there are threads in the server's threadpool - but not more.

your patch is bad because simpledateformat is not threadsafe, so your patch will cause concurrency errors. if we remove the threadlocal we have to sync on the formats, but that is not as efficient as using a threadlocal.

i will close this until you provide the logs and/or a quickstart.","09/Jan/11 19:08;akiraly;Please reopen this issue.

I. Quickstart
I am attaching a quickstart maven project. To reproduce do the followings:
1. Unzip quickstart.zip, run ""mvn package"" from wt directory to generate wt.war in target directory.
2. Start up a vanilla Tomcat installation (6.0.29 and 7.0.5 are both fine).
3. Copy wt.war into the webapps directory of tomcat. After a few seconds Tomcat will notice the new war and deploy it (unzip into wt directory). This can be seen on console / in log.
4. Visit http://localhost:8080/wt/index.html . You should see ""Hello World""
5. Delete wt.war from tomcats webapps directory. After a few seconds Tomcat will notice this change and undeploy the war (delete wt directory). When this is done Tomcat will log the following:

SEVERE: The web application [/wt] created a ThreadLocal with key of type [null] (value [org.apache.wicket.protocol.http.servlet.XForwardedRequestWrapper$1@7dc21ece]) and a value of type [java.text.SimpleDateFormat[]] (value [[Ljava.text.SimpleDateFormat;@5374a6e2]) but failed to remove it when the web application was stopped. This is very likely to create a memory leak.


II. The reason for this leak is the following (imho).
Tomcat (and probably other servlet containers too) work like these:
- They have a common thread pool. The threads in this pool are used to serve request for all web applications. The lifecycle of the threads is different than the webapps.
- Each webapp has its own Web Application Classloader instance. This WAC is used to load the classes bundled with the webapp.

XForwardedRequestWrapper defines and uses a ThreadLocal subclass (let us call it S). S is bundled inside the wicket jars with the webapp so it is loaded by the WAC. The instances of S are hold in the thread locals of threads. When the application is undeployed/redeployed Tomcat drops the references to WAC in the hope the GC will reclaim the memory of all loaded classes by this loader. However the threads live and in the thread local an instance of S is referenced. This instance holds a reference to the S class. The S class holds reference to the WAC object. The WAC object holds references to every classes it loaded. This is the reason for the leak. And because we are talking about classes this is a leak in the permgen space not in the heap. Tomcat detects and clears it but not all servlet containers do this. For more info see Tomcat wiki [1].

Logback had a similar issue last year they fixed it too. See [2] & [3] for it.


III. About the thread safety of my patch
Yes SimpleDateFormat is not thread safe, I know that. My patch moves the SimpleDateFormat array from a static variable to an instance variable of a servlet request wrapper object. My assumption was when I made the test that servlet requests and servlet request wrappers do not have to be thread safe because they can only be used by one thread at a time.
Servlet spec 3.0 states the same:
""2.3.3.4
Thread Safety
Other than the startAsync and complete methods, implementations of the 
request and response objects are not guaranteed to be thread safe. This means that 
they should either only be used within the scope of the request handling thread or 
the application must ensure that access to the request and response objects are 
thread safe.
If a thread created by the application uses the container-managed objects, such as 
the request or response object, those objects must be accessed only within the 
object's life cycle as defined in sections 3.10 and 5.6. Be aware that other than the 
startAsync, and complete methods, the request and response objects are not 
thread safe. If those objects were accessed in the multiple threads, the access should 
be synchronized or be done through a wrapper to add the thread safety, for instance, 
synchronizing the call of the methods to access the request attribute, or using a local 
output stream for the response object within a thread.""
Also some other libraries think the same about request wrappers.
Jiras CapturingRequestWrapper [4]:
""THREAD SAFETY - One of these must be constructed on each HTTP request/response and hence only one thread may write to it at the one time. This suits the whole servlet engine idea,""
Spring security 2.0 SavedRequestAwareWrapper uses a SimpleDateFormat array [5] (this class is not present in the 3.0.x branch):
""protected SimpleDateFormat[] formats
The set of SimpleDateFormat formats to use in getDateHeader(). Notice that because SimpleDateFormat is not thread-safe, we can't declare formats[] as a static variable.""


[1] Tomcat wiki about memory leaks: http://wiki.apache.org/tomcat/MemoryLeakProtection#customThreadLocal
[2] Logback issue about UnsynchronizedAppenderBase: http://jira.qos.ch/browse/LBCLASSIC-183
[3] Logback git diff for UnsynchronizedAppenderBase (ThreadLocal subclass holds Boolean): https://github.com/ceki/logback/commit/93995946b59b3ed1622d92c06b39c21942d98c58
[4] Jiras CapturingRequestWrapper: http://docs.atlassian.com/software/jira/docs/api/latest/com/atlassian/jira/util/http/request/CapturingRequestWrapper.html
[5] SavedRequestAwareWrapper class in Spring security 2.0: http://static.springsource.org/spring-security/site/docs/2.0.x/apidocs/org/springframework/security/wrapper/SavedRequestAwareWrapper.html#formats","10/Jan/11 01:26;ivaynberg;applied. i didnt realize the wrapper existed for a single request only. i dont think constructing those 3 formats will be too expensive.

i also didnt realize the leak was on undeploy, that makes sense. thats the piece you shouldve mentioned in your initial issue description :)

cheers.","16/Jan/11 14:26;bornmw;Guys, I'm seeing exactly the same issue on 6.0.26:

SEVERE: A web application created a ThreadLocal with key of type [null] (value [com.opensymphony.xwork2.inject.ContainerImpl$10@65ddc55f]) and a value of type [java.lang.Object[]] (value [[Ljava.lang.Object;@5d79a22d]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLocal has been forcibly removed.

I'm keeping the EntityManager in ThreadLocal, and that message above floods catalina.out each time I shutdown Tomcat.

Does my issue seem to be the same as the one originally reported by Attila?

Do I understand it right that this issue is fixed in Tomcat 7 and not 6?

If yes then should I create a separate issue for 6?

Thanks","16/Jan/11 18:54;akiraly;@Oleg Mikheev

It is not a tomcat issue. Tomcat only reports that you have a memory leak related error in your application. For more info you can read the links provided in a previous post or ask on the tomcat user list. This discussion is very off topic here, because this is the wicket frameworks issue tracker and your problem is not related to wicket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Patches to correct some Findbugs warnings in core, request and util",WICKET-3322,12495225,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,akiraly,akiraly,11/Jan/11 09:58,15/Jan/11 11:20,13/Mar/19 23:17,15/Jan/11 11:20,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"The patches contain fixes mainly for the followings:
- only java files in main source directories of core, request and util were touched (so test not)
- only those were fixed that looked straightforward and locally fixable
- fixing cases that always result in NPE (2 found) or ClassCastException (1 found)
- unused local variable, dead store removals
- redundant instanceof check, nullcheck removals
- added transient to non serializable fields of serializable classes
- made inner classes static where the reference to the enclosing classes was not used
- some extra null checks added with WeakReference usages to avoid NPE
- ""File#delete() return value not checked"": using wickets Files#remove() instead
- small performance related tasks: using StringBuilder in loop, using map entrySet() instead of keySet() + get()

I added some comments to the patches where I tought it is not easy to figure out without the findbugs report why the code was changed. But of course I can explain if other questions arise.",,,,,,,,,,,,,,,,,,,,,,11/Jan/11 10:00;akiraly;WICKET-3322-1-findbugs-wicket-util.patch;https://issues.apache.org/jira/secure/attachment/12467991/WICKET-3322-1-findbugs-wicket-util.patch,11/Jan/11 10:00;akiraly;WICKET-3322-2-findbugs-wicket-request.patch;https://issues.apache.org/jira/secure/attachment/12467992/WICKET-3322-2-findbugs-wicket-request.patch,11/Jan/11 10:00;akiraly;WICKET-3322-3-findbugs-wicket-core.patch;https://issues.apache.org/jira/secure/attachment/12467993/WICKET-3322-3-findbugs-wicket-core.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2011-01-15 11:20:18.346,,,no_permission,,,,,,,,,,,204127,,,Sat Jan 15 11:20:18 UTC 2011,,,,,,0|i0kbaf:,116646,,,,,,,,11/Jan/11 10:00;akiraly;Attaching patches by module.,15/Jan/11 11:20;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PackagedTextTemplate should set lastModifiedTime,WICKET-3315,12495051,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,gsmet,gsmet,09/Jan/11 10:31,12/Jan/11 00:26,13/Mar/19 23:17,11/Jan/11 13:50,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket,,,,,,,0,,,,,,,"Hi,

When using TextTemplateResourceReference in a setAddLastModifiedTimeToResourceReferenceUrl(true) configuration, the w:lm parameter isn't added to the URL of the resource as PackagedTextTemplate.lastModifiedTime() (called in TextTemplateResourceReference.lastModifiedTime()) always returns null.

IMHO, PackagedTextTemplate should set lastModifiedTime when accessing the resource.

AFAICS, the cache code at the top of PackagedTextTemplate isn't used at all so I think we can simply set it in the constructor when we access the stream. This is what the attached patch does.

Any comment?

-- 
Guillaume",,,,,,,,,,,,,,,,,,,,,,09/Jan/11 10:33;gsmet;WICKET-3315.patch;https://issues.apache.org/jira/secure/attachment/12467827/WICKET-3315.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-11 13:50:39.773,,,no_permission,,,,,,,,,,,204121,,,Wed Jan 12 00:26:49 UTC 2011,,,,,,0|i0aogf:,60235,,,,,,,,11/Jan/11 13:50;pete;fixed in trunk,"12/Jan/11 00:26;hudson;Integrated in Apache Wicket 1.4.x #383 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/383/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Delete unused IPageSerializer & co from o.a.w.Page class,WICKET-3311,12494927,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,akiraly,akiraly,07/Jan/11 10:10,10/Jan/11 16:29,13/Mar/19 23:17,10/Jan/11 16:29,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"It seems the Page class holds remnants of some old (based on svn introcued in the first half of 2007) page serialization infrastructure that is no longer in use.

- Definition of IPageSerializer interface. It is not implemented or referenced anywhere outside Page class.

- public static final ThreadLocal<IPageSerializer> serializer: It is not used anywhere outside Page class and it is only read in Page class itself. It is a problematic code anyway because it can lead to nasty memory leaks if not cleaned properly.

- protected writeReplace() and package protected readPageObject(): not overridden or invoked from anywhere.",,,,,,,,,,,,,,,,,,,,,,07/Jan/11 10:11;akiraly;WICKET-3311.patch;https://issues.apache.org/jira/secure/attachment/12467715/WICKET-3311.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-07 10:34:22.492,,,no_permission,,,,,,,,,,,204117,,,Mon Jan 10 16:29:06 UTC 2011,,,,,,0|i0kbbr:,116652,,,,,,,,07/Jan/11 10:11;akiraly;Attaching patch made against trunk. Tests pass.,"07/Jan/11 10:34;mgrigorov;Be careful with this. At least the last point in the description is wrong.
These methods are special for Java Serialization mechanisms and are used automatically by Object(Input|Output)Stream.","07/Jan/11 10:46;akiraly;You are right about writeReplace(). It's a standard method of java serialization and I forgot that (thanks for mentioning). However readPageObject() is not. It would be readResolve().

It seems that using custom page serializers is broken (because it is only taken into account by writes). If a custom serializer is not set the writeReplace() does nothing.

So I think the patch is still correct.","10/Jan/11 11:32;akiraly;After more analysis I think this is actually a bug not an improvement.

A comparison about the mentioned code pieces in the 1.4 and in the trunk (1.5):
- Page.serializer public static final ThreadLocal variable in 1.4 is used by protocol.http.pagestore.AbstractPageStore class and the Page class itself. However in 1.5 AbstractPageStore is deleted so the variable is only used and only for read by the Page class. This means that it is probably holding a null value all time.
- Page.IPageSerializer interface is implemented in 1.4 with protocol.http.pagestore.AbstractPageStore.PageSerializer class. However in 1.5 this PageSerializer class (and the enclosing AbstractPageStore class) is deleted.
- Page.IPageSerializer.deserializePage() method is used in 1.4 trough Page.readPageObject() which is invoked in Component.readObject(). However in 1.5 Component.readObject() is deleted so both Page.IPageSerializer.deserializePage() and Page.readPageObject() are not used anymore.
- Page.IPageSerializer.serializePage() method is used in 1.4 trough Page.writePageObject(). However in 1.5 Page.writePageObject() is deleted so Page.IPageSerializer.serializePage() is not used anymore.
- Page.IPageSerializer.getPageReplacementObject() method is used in 1.4 trough Page.writeReplace(). As Martin pointed it out this is part of Java serialization so it is stil called in wicket 1.5 too. But it does nothing when Page.serializer is not set which is the case for 1.5, as mentioned above.

If Page.serializer would be set by someone outside of wicket (seems very unlikely to me seeing how it was used in AbstractPageStore.serializePage() for example) it would break page serialization in 1.5 as it is only used by the serialization and not during deserialization.

So it seems these were part of the 1.4 page serialization mechanism and they were only partially removed in the rewritten 1.5 version. Imho they should be deleted (see patch).
",10/Jan/11 16:29;ivaynberg;thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OrderByBoder MArkup problem,WICKET-3306,12494584,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pdiefent,pdiefent,04/Jan/11 11:51,04/Jan/11 17:22,13/Mar/19 23:17,04/Jan/11 16:34,1.4.15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket-extensions,,,,,,,0,,,,,,,"I'm using the OrderByBorder feature and it works well for <th> rows
without stylesheet classes.
Unfortunately it fails if the <th> already has a stylesheet class:

<th class=""NameField"" wicket:id=""orderByName"">
        <wicket:message key=""nameLabel"" />
</th>

Wicket replaces the class=""NameField""with the
class=""wicket_orderUp"" and my field width properties will be lost.
It would be better, if Wicket would add his style class instead of
replacing it (  class=""NameField,wicket_orderUp"")

public static class CssModifier extends AttributeModifier
This seems to be the problem. 
","Windows 7, Tomcat 6.x, Eclipse Helios",,,,,,,,,,,,,,,,,,,,,04/Jan/11 11:57;pdiefent;QuickStart.war;https://issues.apache.org/jira/secure/attachment/12467411/QuickStart.war,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-04 15:49:11.089,,,no_permission,,,,,,,,,,,204113,,,Tue Jan 04 17:22:36 UTC 2011,,,,,,0|i0kbcf:,116655,,,,,,,,04/Jan/11 11:57;pdiefent;Quick Start application showing the problem.,"04/Jan/11 15:49;jthomerson;Please attach a real quickstart (with code).  Although outdated, this blog post may help you: http://www.jeremythomerson.com/blog/2008/11/wicket-quickstart-tutorial/

You'll need to do it ""the maven way"" since that post is so out of date.","04/Jan/11 17:22;hudson;Integrated in Apache Wicket 1.4.x #367 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/367/])
    Issue: WICKET-3306
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreditCardValidator will erroneously mark some exotic card types as invalid,WICKET-3292,12494252,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,clampley@epoch.com,clampley@epoch.com,29/Dec/10 15:33,30/Dec/10 11:01,13/Mar/19 23:17,30/Dec/10 11:01,1.4.15,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,CreditCardValidator will mark valid card numbers invalid if it does not recognize the card type based on prefix and will also pass some card numbers based on prefix alone without performing a Luhn check.  ,,,,,,,,,,,,,,,,,,,,,,29/Dec/10 15:36;clampley@epoch.com;CreditCardValidator.patch;https://issues.apache.org/jira/secure/attachment/12467116/CreditCardValidator.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204099,,,Wed Dec 29 15:36:19 UTC 2010,,,,,,0|i0kbdr:,116661,,,,,,,,"29/Dec/10 15:36;clampley@epoch.com;Adding a patch to fix this issue also with a couple improvements. This change makes the validator no longer attempt to find the card type on the card number. It simply performs a Luhn check and will allow the card number if the check passes. Also, the card type detection code has completely been removed as all methods were simply marked as private, forcing the validator to do unnecessary work since it never provided the type to the outside world anyway.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"DateConverter improperly converts time, causing different results between DateField and DateTimeField",WICKET-3249,12492915,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,tauren,tauren,10/Dec/10 09:31,20/Dec/10 20:18,13/Mar/19 23:17,20/Dec/10 20:18,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-datetime,,,,,,,0,,,,,,,"With a DateTimeField and a DateField in a wicket form, submit the following:

DateTimeField:     [   11/06/2010  ] date,  [ 0 ] hour,  [ 0 ] min
DateField:              [   11/06/2010  ] date

Those should result in the same value. But look at the converted Date values, and you'll see this:

dateTimeField:   2010-11-06T07:00:00Z
dateField:  2010-11-06T23:00:00Z

The dateTimeField value is what I'd expect - the UTC value of midnight in my timezone on 11/6/2010.  It look like dateField is just wrong and that DateConverter isn't dealing with timezone conversions properly. Here's the scenario:

* Server OS, Java, and Database are all configured to use UTC timezone.
* Web client is configured in America/Los_Angeles timezone (currently UTC-08:00, or PST).
* Currently logged in member has profile configured to use America/Los_Angeles timezone.
* Application WebClientInfo has timezone set from the user's profile, like such:

    		ClientInfo ci = Session.get().getClientInfo();
    		((WebClientInfo)ci).getProperties().setTimeZone(TimeZone.getTimeZone(member.getTimezone()));

Anywhere that dates are handled in the application with DateLabel or DateTimeField, they seem to be properly converted by Wicket to and from America/Los_Angeles time to UTC time for storage in the database. Examining the database shows a 7 or 8 hour difference between the time in the UI and the time in the database (depending on DST or not).

However, when using org.apache.wicket.extensions.yui.calendar.DateField, dates are getting converted/persisted incorrectly. I just traced through DateConverter.convertToObject() to see what was happening. Assume it is currently 2010-12-10 00:43 PST(-8). My client timezone is set to PST (-8), as is my profile timezone. I specify 2010-11-06 in the DateField. It does this:

1. Creates a Joda value using DateMidnight right now in UTC (the date/time right now in UTC, setting the time portion to midnight UTC. This will be a time before now, not after now, as midnight is the first instant of a day, not the last instant of a day). 2010-12-10T00:00:00Z

2. Converts this Joda value to the client's timezone.  2010-12-09T16:00:00-08:00

3. Joda parses the submitted text value into the Joda value.  2010-11-06T16:00:00-07:00

4. Converts the Joda value to the server's timezone.  2010-11-06T23:00:00Z

The value should result in 2010-11-06T07:00:00Z, which converts to 2010-11-06T00:00:00-08:00, or midnight on 11/6 in the PST timezone, but it doesn't. Or am I missing something and there is a reason for this? It seems like a bug to me.



",,,,,,,,,,,,,,,,,,,,,,19/Dec/10 16:29;bitstorm;DatePickerTest.java;https://issues.apache.org/jira/secure/attachment/12466581/DatePickerTest.java,14/Dec/10 14:01;bitstorm;TestDateConverter.java;https://issues.apache.org/jira/secure/attachment/12466217/TestDateConverter.java,14/Dec/10 14:19;bitstorm;fix-WICKET-DateConverter.patch;https://issues.apache.org/jira/secure/attachment/12466218/fix-WICKET-DateConverter.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-12-13 18:17:19.871,,,no_permission,,,,,,,,,,,204058,,,Sun Dec 19 20:41:47 UTC 2010,,,,,,0|i0kbh3:,116676,,,,,,,,"13/Dec/10 18:17;bitstorm;Hi Tauren.

This behavior doesn't sound strange to me. dateTimeField adds 8 hours to its date to correct the time zone difference between the server and the client. Actually it adds 7 hours because it must observe  DST.
Similarly  dateField's value should be 2010-11-07T00:00:00Z but  just like dateTimeField it subtracts an hour to keep DST into account.

Hope this could help you.

","14/Dec/10 01:50;tauren;Andera,

Thanks for your thoughts, but it still doesn't make sense to me and I don't understand how it doesn't seem strange to you.  Why would entering the exact same thing in the UI result in two different dates? My timezone is PST (-08:00), and entering midnight on 2010-11-06 results in these dates with the different UI components:

dateTimeField: 2010-11-06T07:00:00Z 
dateField: 2010-11-06T23:00:00Z 

These values are not the same, but they both are supposed to represent midnight on 2010-11-06 in the PST timezone. How is that possible, and how does that make sense to you? 

The value of dateTimeField is correct, as it has 8 hours added to midnight, then subtract an hour for DST.

The value of dateField represents midnight of THE NEXT DAY (2010-11-07) in the UTC timezone, with an hour subtracted for DST. But that is not midnight in my timezone! And in fact, it isn't even midnight of 2010-11-06 in the UTC timezone either, its the wrong date!

I'm assuming it works for most people because the time is simply truncated when working with DateFields. The the DateField gets a date of 2010-11-06T23:00Z and it truncates the time, it ends up displaying a date of 2010-11-06, which is correct. But I'm persisting these resulting date values to a database which is then used with a non-wicket app, so I need the values coming from a DateField and DateTimeField to be the same.

Maybe I'm not understanding some basic concept here, and encourage you to enlighten me! 

",14/Dec/10 07:44;jdonnerstag;Tauren are you able to provide a patch and some test cases? That would be very much welcome.,"14/Dec/10 14:00;bitstorm;Sorry Tauren,I didn't read properly your comment. 
Yes you are right, dateField value should be the same as dateTimeField. I've attached a test case that reproduces your conditions (server and client timezone setting) and gives the same output you've reported in this issue (I've setted user timezone to UTC to have Date in proper format). 

","14/Dec/10 14:18;bitstorm;@Juergen

I've looked at source of DataConverter class (package org.apache.wicket.datetime).I think problem is in method convertToObject inside if block starting with 'if (applyTimeZoneDifference)'. I've change code in order to parse date with server's timezone and then change its TimeZone in the way suggested here: http://joda-time.sourceforge.net/userguide.html#Changing_TimeZone

I've attached the relative patch. ","14/Dec/10 14:31;mgrigorov;The difference in the code is:
org.apache.wicket.extensions.yui.calendar.DateTimeField.newDateTextField(String, PropertyModel<Date>) uses ""new StyleDateConverter(false)"", i.e. it doesn't apply the timezone difference,
while org.apache.wicket.extensions.yui.calendar.DateField.newDateTextField(String, PropertyModel<Date>) calls org.apache.wicket.datetime.markup.html.form.DateTextField.forShortStyle(String, IModel<Date>) which uses ""new StyleDateConverter(true)"", i.e. the time zone difference is taken into account.

I guess you know the workaround because the ticket priority is Minor, for the DateField override:

protected DateTextField newDateTextField(final String id,
		final PropertyModel<Date> dateFieldModel)
	{
		return new DateTextField(id, model, new StyleDateConverter(false));
	}","17/Dec/10 13:01;bitstorm;So given the initial input :

DateTimeField: [ 11/06/2010 ] date, [ 0 ] hour, [ 0 ] min
DateField: [ 11/06/2010 ] date 

we should get the following values:

dateTimeField: 2010-11-06T00:00:00Z (timezone difference not applied)
dateField: 2010-11-06T07:00:00Z  (timezone difference applied)

Is it right?

As I said in my previous comment problem should be in class DataConverter.",18/Dec/10 11:20;jdonnerstag;I've added a test case for 1.5 and it seems to be working. Please provide a testcase that fails. thanks.,"19/Dec/10 16:29;bitstorm;Hi Juergen,

I've attached a new version of DatePickerTest with my test method test3. The method is similar to test2 but I added timezone for JVM (Europe/Berlin) and timezone for client session (America/Los_Angeles).
With these conditions test3 fails because dateTime value is 'Sat Nov 06 08:00:00 CET'. It seems that method  convertInput of class DateTimeField applies always timezone difference with these istructions:

TimeZone zone = getClientTimeZone();
if (zone != null)
	{
		date.setMillis(getMillis(zone, TimeZone.getDefault(), date.getMillis()));
	}


 ","19/Dec/10 19:12;jdonnerstag;Isn't 'Sat Nov 06 08:00:00 CET' what you would expect? Berlin is 8 hours ahead of LA.
 assertEquals(date, page.dateTime) must fail because of that.","19/Dec/10 20:41;bitstorm;Well, what you said is right but as Martin Grigorov  pointed out DateTimeField uses ""new StyleDateConverter(false)"" so  it shouldn't apply the timezone difference.

Anyway, in the same test method dateField value is 'Sat Nov 06 23:00:00 CET' when we would expect ''Sat Nov 06 08:00:00 CET''. These 23 hours seem a wrong value. 
As I said before I think that this could be due to a problem in method convertToObject of class DataConverter.
The patch I've attached solve this problem using code suggested here: http://joda-time.sourceforge.net/userguide.html#Changing_TimeZone 

Bye.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filter path is occasionally null when forwarding a request,WICKET-3259,12493474,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jthomerson,jthomerson,jthomerson,16/Dec/10 23:35,19/Dec/10 22:56,13/Mar/19 23:17,19/Dec/10 22:56,1.4.14,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.15,,,wicket,,,,,,,0,,,,,,,"If you have a 404 specified in your web.xml that points to some wicket page, and that page throws a RestartResponseAtInterceptPage exception, you end up with a NullPointerException when trying to create the URL for the page.  The NPE is because forwardUrl is not null, but filterPath is (in ServletWebRequest#getRelativePathPrefixToWicketHandler())

See the attached quickstart and go to http://localhost:8080/app-context-path/mounted-pattern/akdslfjasdklfj (which doesn't exist) to see the issue.",,,,,,,,,,,,,,,,,,,,,,16/Dec/10 23:36;jthomerson;relativeurlproblem.tar.gz;https://issues.apache.org/jira/secure/attachment/12466427/relativeurlproblem.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-17 00:23:51.666,,,no_permission,,,,,,,,,,,204067,,,Sat Dec 18 17:55:41 UTC 2010,,,,,,0|i0kbg7:,116672,,,,,,,,16/Dec/10 23:36;jthomerson;quickstart that demonstrates the problem,"16/Dec/10 23:40;jthomerson;It's important to note that this only happens when using the servlet, not the filter.","17/Dec/10 00:23;hudson;Integrated in Apache Wicket 1.4.x #336 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/336/])
    fixes WICKET-3259 for wicket-1.4.x branch
","18/Dec/10 09:43;mgrigorov;I can't reproduce this in 1.5.
For some reason the error page mapping from web.xml doesn't work here ...
A request to 404 page never comes","18/Dec/10 14:28;jthomerson;Martin,

  I added a new ticket (WICKET-3267) based on your comment so that it wouldn't get lost.  If 1.5 really isn't working with error pages, we need to investigate / fix.  I haven't tried it on trunk yet.

Thanks,
Jeremy","18/Dec/10 17:55;mgrigorov;The problem in 1.5 is fixed.
There are no NPEs in 1.5, so if there is nothing more to do in 1.4 then please close this ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebApplication MostRecentlyUsedMap based upon Key age not Value age,WICKET-3209,12491691,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,emberson,emberson,30/Nov/10 20:35,14/Dec/10 13:28,13/Mar/19 23:17,14/Dec/10 13:28,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-auth-roles,,,,,,,0,,,,,,,"The WebApplication uses the MostRecentlyUsedMap as a limited size cache. Elements of
the cache are removed when a new entry is added based upon the age of the element's keys
not on the age of the element's data.
Naively, I would expect a high usage element (one's whose associated data keeps changing)
should be kept in the cache rather than reaped - simply because it was enter earlier than some
low activity but more recent entry.
The MostRecentlyUsedMap is based upon the Java LinkedHashMap container. 
As such, it is not a very good fit for data-based age cache.
Of course I could be completely wrong in this case and it actually the age of the key that is
important not how often the data associated with the key is changed.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-11 19:30:01.597,,,no_permission,,,,,,,,,,,204020,,,Tue Dec 14 13:28:02 UTC 2010,,,,,,0|i0kbjj:,116687,,,,,,,,11/Dec/10 19:30;jdonnerstag;Interestingly addBufferedResponse() is not used anywhere. Do we still need it?,"11/Dec/10 19:38;mgrigorov;Now org.apache.wicket.protocol.http.WebApplication.storeBufferedResponse(String, Url, BufferedWebResponse) is being used.
The question is : do we need to use MostRecentlyUsedMap for the stored responses ? If YES, then we will need to clean it on session termination.","11/Dec/10 19:48;jdonnerstag;storedResponses is not using MostRecentlyUsedMap. MostRecentlyUsedMap  is only used in addBufferedResponse. And if addBufferedResponse is no longer used, than we should remove the method (and bufferedResponses) and close the issue.",11/Dec/10 19:57;mgrigorov;These methods are the same thing - addBufferedResponse() is in 1.4 and storeBufferedResponse() is the same in 1.5. For some reason Matej (I guess) didn't use MostRecentlyUsedMap in the new implementation of this logic. The question is should we merge addBufferedResponse() and storeBufferedResponse() (i.e. add usage of MostRecentlyUsedMap in storeBufferedResponse()) or not. ,14/Dec/10 13:28;mgrigorov;With r1049077 a special map is introduced which extends MostRecentlyUsedMap to be able to store at most N entries and additionally have the feature to expire its entries after a specified duration.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing Child in IVisitor affects traversal,WICKET-3229,12492067,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jbrookover,jbrookover,04/Dec/10 14:03,12/Dec/10 23:16,13/Mar/19 23:17,12/Dec/10 10:01,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.15,1.5-RC1,,wicket,,,,,,,0,,,,,,,"Created a Panel that provides it's own dynamically created markup stream, scans that stream for wicket:ids, and adds different components based on the id.  Recently, I've been wanting to redraw this panel via AJAX, changing the markup and adding and removing child components accordingly.

I tried to remove multiple stale components (e.g. a component that was generated from the previous markup but doesn't exist in the new markup) using an IVisitor..

visitChildren(new IVisitor<Component>() {
  public Object component(Component component) {
    if (/* component is stale */)
      component.remove();
    return CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER;
}

The IVisitor just does a simple run through an array and removing the component adjusted the size/count of the array, messing up the traversal and preventing other components from being removed.

Potential Solutions:
1.  Throw an exception if the hierarchy is modified in an IVisitor.
2.  Use another means of traversing the children that allows addition/removal and still ensures visiting all the children.

",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,05/Dec/10 14:10;mgrigorov;WICKET-3229.patch;https://issues.apache.org/jira/secure/attachment/12465338/WICKET-3229.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-12-05 14:10:47.556,,,no_permission,,,,,,,,,,,204039,,,Sun Dec 12 23:16:23 UTC 2010,,,,,,0|i0kbhr:,116679,,,,,,,,"05/Dec/10 14:10;mgrigorov;Here is an idea for Wicket 1.5.
RemovingVisit code can be merged in Visit, but adding #remove() in IVisit doesn't look nice...","05/Dec/10 14:22;ivaynberg;i think i would rather throw concurrentmodificationexception on add/remove. but honestly, this comes up so rarely that i think a javadoc note is enough.",12/Dec/10 09:54;jdonnerstag;added a comment to the javadoc (1.5),"12/Dec/10 23:16;hudson;Integrated in Apache Wicket 1.4.x #322 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/322/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OpaqueRegion subtract for-loop does not process all rectangles,WICKET-3223,12492024,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,emberson,emberson,03/Dec/10 19:48,11/Dec/10 17:48,13/Mar/19 23:17,11/Dec/10 17:48,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,,,,0,,,,,,,"Don't know it this is a bug or not.
In the extendsions class OpaqueRegion, the subtract method has a for-loop that
works its way over the members of the workList:

 // Go through work list to remove the given rectangle
for (int i = 0; i < workList.size(); i++)

In  this loop is the following code:
if (rx1 <= x1 && rx2 >= x2)
{
  // Whole rectangle is obscured
   workList.remove(i);
}

The remove on the ArrayList removes the element at position i and shifts all higher elements
of the list down one index. The element that was at i+1 is now at i.
But the loop then increments i, so the element that was at i+1 prior to the removal of the
element at i, is now at position i and is never examined in the loop.

So, I do not know if this is correct or not, thanks",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-11 17:48:30.145,,,no_permission,,,,,,,,,,,204034,,,Sat Dec 11 17:48:30 UTC 2010,,,,,,0|i0kbif:,116682,,,,,,,,11/Dec/10 17:48;jdonnerstag;good catch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In extensions CaptchaImageResource, instance variable challengeIdhashCode is never set",WICKET-3231,12492115,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,emberson,emberson,06/Dec/10 01:55,11/Dec/10 17:44,13/Mar/19 23:17,11/Dec/10 17:44,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,,,,0,,,,,,,"In the extensions CaptchaImageResource class, the challengeIdhashCode variable
is never set (although it appears in a if-statement test.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204041,,,2010-12-06 01:55:07.0,,,,,,0|i0kbhj:,116678,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileCleaner issues,WICKET-3224,12492036,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,jdonnerstag,jdonnerstag,03/Dec/10 21:34,07/Dec/10 19:54,13/Mar/19 23:17,07/Dec/10 19:54,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"I failed to apply Generics to FileCleaner. While doing so, it became obvious that the current code can't work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-05 14:49:12.343,,,no_permission,,,,,,,,,,,204035,,,Tue Dec 07 19:54:54 UTC 2010,,,,,,0|i0kbi7:,116681,,,,,,,,"05/Dec/10 14:49;mgrigorov;In current commons-io this class is deprecated.
The recommended one now is FileCleaningTracker. The problem with this one is that it starts a daemon thread that cleans the files and this thread has to be stopped on application destroy event.",05/Dec/10 14:53;ivaynberg;cant we do that in application.internaldestroy()?,05/Dec/10 14:55;jdonnerstag;do we at all need it?,"05/Dec/10 14:56;mgrigorov;Actually we do it now with: FileCleaner.destroy().
I'm working on a patch.","05/Dec/10 15:20;mgrigorov;The problem with the thread is that Google AppEngine doesn't allow to start it.
Current FileCleaner also starts a thread when the class is loaded, i.e. when the user application wants to use file upload functionality.
It seems no one tried to upload files in GAE so far.
I'll rework it to be like ModificationWatcher so that the user can switch this off when starting threads is problematic.","07/Dec/10 19:54;mgrigorov;With r1043182 the cleaner is upgraded to its latest version from commons-io.
Now it is possible to disable it by using ""getResourceSettings().setFileUploadCleaner(null)"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlValidator failes to validate urls that containt multiple dots in path,WICKET-3196,12480909,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,curly,curly,25/Nov/10 12:35,29/Nov/10 01:22,13/Mar/19 23:17,28/Nov/10 23:21,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.15,1.5-RC1,,wicket,,,,,,,0,,,,,,,"refer to UrlValidator.java:466 (isValidPath).
if we have an url, that contains more than two consequent dots, for example ""http://www.somedomain.com/this_one_is_tricky...but...still.....valid"", validator will fail.
btw, the other side effect is that countTokens actually counts '...' a two 2dots.
One possible workaround is not just count '..' tokens, but count them along with slash, like '../'.

","Linux, Tomcat",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-29 01:22:11.69,,,no_permission,,,,,,,,,,,204007,,,Mon Nov 29 01:22:11 UTC 2010,,,,,,0|i0kbl3:,116694,,,,,,,,"29/Nov/10 01:22;hudson;Integrated in Apache Wicket 1.4.x #299 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/299/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SerializableChecker writeObjectMethodCache  Map never holds a Method,WICKET-3193,12480854,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,pete,emberson,emberson,24/Nov/10 19:45,25/Nov/10 00:09,13/Mar/19 23:17,25/Nov/10 00:09,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"In the SerializableChecker the Map writeObjectMethodCache never holds any
Method objects. In the internalCheck method, there is the following code:

      Method writeObjectMethod = null;
      Object o = writeObjectMethodCache.get(cls);
      if (o != null)
      {
        if (o instanceof Method)
        {
          writeObjectMethod = (Method)o;
        }
      }
      else
      { .... }

No where is a Method ever put into the writeObjectMethodCache Map so the
instanceof test always fails.",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-25 00:09:21.361,,,no_permission,,,,,,,,,,,204004,,,Thu Nov 25 00:09:21 UTC 2010,,,,,,0|i0aoiv:,60246,,,,,,,,"25/Nov/10 00:09;pete;Fixed in trunk.

Thank you!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with page maps stored in session,WICKET-3108,12477428,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jthomerson,jthomerson,jthomerson,15/Oct/10 06:58,15/Nov/10 00:27,13/Mar/19 23:17,27/Oct/10 05:06,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,,,wicket,,,,,,,0,,,,,,,"A client engaged me to assist in fixing multiple problems they found while writing a custom page map eviction strategy for page maps that have not been accessed in a while.  Digging into the first problem revealed a few others.  I'd like someone who is more familiar than me with the session and page map stuff to review this before I commit it.  The quick start attached demonstrates the problems.  I have yet to write test cases that can be added to the suite to replicate these issues.

PROBLEM 1:
If you call IPageMap.remove(), the page map is not actually removed because it's in the dirty objects list, which means that it gets set back on the session in the requestDetached() method.  The quickstart demonstrates this in a link for ease of demonstration, but in reality, it applies even if someone is doing custom page map eviction in their request cycle somewhere.

PROBLEM 2:
It seems to be a safe assumption that every page map that is used in the session should also be in usedPageMaps, and that this map should always be exactly in sync with what's actually in your session (as attributes).  Right now, they are not in sync.  First, the default page map was not added to usedPageMaps in the dirtyPageMap(IPageMap) method.  Second, when page maps are created, they are not dirtied (which means they are not in the usedPageMaps collection), although they are set as attributes on the session immediately.  This causes a problem in the newPageMap(String) method with actually adhering to the max number you set.

PROBLEM 3:
If you have a bunch of popup links on a page, they can create more page maps than are allowed, and the number of page maps stored in the session grows beyond the limit of what you've specified.  The real unanswered question I have is this: must we really create the page map when the link is first rendered?  Or could we wait until it is clicked?

NOTE: the fix for problems 2 and 3 relies on the fix for problem 1 being committed, because the call to pm.remove() in newPageMap(IPageMap) will not work without the fix for problem 1",,,,,,,,,,,,,,,,,,,,,,11/Nov/10 18:41;pedrosans;fix-WICKET-3108-memory-leak.patch;https://issues.apache.org/jira/secure/attachment/12459369/fix-WICKET-3108-memory-leak.patch,15/Oct/10 07:00;jthomerson;pagemapstuff-quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12457242/pagemapstuff-quickstart.tar.gz,20/Oct/10 19:25;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12457699/patch.txt,20/Oct/10 19:03;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12457693/patch.txt,15/Oct/10 07:00;jthomerson;problem-1.patch;https://issues.apache.org/jira/secure/attachment/12457239/problem-1.patch,15/Oct/10 07:00;jthomerson;problem-2.patch;https://issues.apache.org/jira/secure/attachment/12457240/problem-2.patch,15/Oct/10 07:00;jthomerson;problem-3.patch;https://issues.apache.org/jira/secure/attachment/12457241/problem-3.patch,22/Oct/10 19:26;pedrosans;test.patch;https://issues.apache.org/jira/secure/attachment/12457862/test.patch,8.0,,,,,,,,,,,,,,,,,,,2010-10-15 17:20:54.696,,,no_permission,,,,,,,,,,,203932,,,Mon Nov 15 00:27:22 UTC 2010,,,,,,0|i0kbsf:,116727,,,,,,,,15/Oct/10 07:00;jthomerson;here are patches for each of the problems,15/Oct/10 07:00;jthomerson;here's a quickstart for demonstrating the problems,"15/Oct/10 17:20;ivaynberg;patches look ok.

> The real unanswered question I have is this: must we really create the page map when the link is first rendered?
no,  only a pagemap name should be appended to the url. the pagemap itself should be created when the link is clicked.","15/Oct/10 17:24;jthomerson;Igor, thanks for the review.  I'll commit the patches and open a separate issue for the popups creating the page maps when they are rendered.","15/Oct/10 17:28;jthomerson;committed fix for 1.4.13 in r1023028.

Still to do: 
- see if this effects 1.5 (trunk) also.
- create test cases that test for this","15/Oct/10 18:05;ivaynberg;does not effect trunk, trunk has no pagemaps :)","16/Oct/10 00:39;hudson;Integrated in Apache Wicket 1.4.x #208 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/208/])
    ",20/Oct/10 19:03;pedrosans;test case for problem 1,20/Oct/10 19:24;pedrosans;Why don't prevent the removed pagemap from get into the dirty list at first place? There is no need to codify an second removal logic at the removePageMap method. It looks like we are fixing an error rather than prevent it.,20/Oct/10 19:25;pedrosans;patch preventing the pagemap from getting into the dirty list,22/Oct/10 19:26;pedrosans;tests for page map max number,"27/Oct/10 05:06;jthomerson;Pedro,

  Thanks for the work on the test cases!  I've added them, as well as a slightly-modified version of your enhancement patch to the code in r1027815.","27/Oct/10 06:19;hudson;Integrated in Apache Wicket 1.4.x #233 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/233/])
    WICKET-3108 - test case and further improvements

Thanks to Pedro Santos for the AWESOME test cases!
","11/Nov/10 18:41;pedrosans;Patch removing the ""usedPageMaps"" list form the Session (was generation the memory leak) and using the session store information instead","11/Nov/10 18:48;ivaynberg;pedro, you should create a new issue and attach the patch there, otherwise fixing this wont produce a note in release notes. thanks for the patch btw.","11/Nov/10 19:00;pedrosans;OK: https://issues.apache.org/jira/browse/WICKET-3160
I will use that ticket to provide test cases and further patches.","15/Nov/10 00:27;hudson;Integrated in Apache Wicket 1.4.x #266 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/266/])
    ",,,,,,,,,,,,,,,,,,,,,,
Form Bytes getMaxSize never returns null and does not find maximum,WICKET-3153,12479417,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,emberson,emberson,08/Nov/10 21:21,09/Nov/10 22:36,13/Mar/19 23:17,09/Nov/10 21:38,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"In org/apache/wicket/markup/html/form/Form the method getMaxSize
always returns a Bytes instance.


  public Bytes getMaxSize() {
    Bytes maxSize = this.maxSize;
    if (maxSize == null) {
      maxSize = visitChildren(Form.class, new IVisitor<Form<?>, Bytes>() {
        public void component(Form<?> component, IVisit<Bytes> visit) {
          Bytes maxSize = component.getMaxSize();
          if (maxSize != null) {
            visit.stop(maxSize);
          }
        }
      });
    }
    if (maxSize == null) {
      return
 getApplication().getApplicationSettings().getDefaultMaximumUploadSize();
    }
    return maxSize;
  }

Because during the visit traversal, the VERY FIRST Form visited returns
a non-null getMaxSize value. Even it its this.maxSize is null, it
will then return getDefaultMaximumUploadSize.

I suspect what is needed is a isMaxSizeSet method.
The inner visit method would then be:


    if (component.isMaxSizeSet()) {
      Bytes maxSize = component.getMaxSize();
      visit.stop(maxSize);
    }

With this, then it is only the Form creating and calling the Visitor
that returns the getDefaultMaximumUploadSize value, and only if
none of its sub Forms have an explicit value.

Also, should the Visitor actually look for the maximum size value
of the children and return it rather than returning the first
value (which may not be the maximum)???
",Independent of environment ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-09 22:36:17.158,,,no_permission,,,,,,,,,,,203966,,,Tue Nov 09 22:36:17 UTC 2010,,,,,,0|i0kbnz:,116707,,,,,,,,"09/Nov/10 22:36;hudson;Integrated in Apache Wicket 1.5.x #498 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/498/])
    Issue: WICKET-3153
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adding node to a collapsed tree node should not cause it to expand,WICKET-3127,12478041,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mikehefner,mikehefner,22/Oct/10 01:59,22/Oct/10 21:26,13/Mar/19 23:17,22/Oct/10 20:24,1.4.13,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"The fix for WICKET-3112 made a unwanted minor modification to the Tree behavior that was established in WICKET-2886.

Adding a child to a tree node that already has children and that is currently collapsed now causes the parent node to expand so that all the children are displayed. Only adding the first child to a node should cause it to expand, in all other cases the state of the parent node should not change.
",,,,,,,,,,,,,,,,,,,,,,22/Oct/10 02:13;mikehefner;WICKET-3127-QuickStart.zip;https://issues.apache.org/jira/secure/attachment/12457810/WICKET-3127-QuickStart.zip,22/Oct/10 02:18;mikehefner;WICKET-3127-fix.patch;https://issues.apache.org/jira/secure/attachment/12457811/WICKET-3127-fix.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-10-22 20:16:55.272,,,no_permission,,,,,,,,,,,203948,,,Fri Oct 22 21:26:35 UTC 2010,,,,,,0|i0kbqf:,116718,,,,,,,,22/Oct/10 02:13;mikehefner;Attached QuickStart demonstrating the problem.,"22/Oct/10 02:18;mikehefner;Attached patch.

Patch has been tested against org.apache.wicket.markup.html.tree.LinkTree  and org.apache.wicket.extensions.markup.html.tree.Tree.

Also tested against the tree component on brix-demo admin page, Menus tab","22/Oct/10 20:16;mgrigorov;The patch looks OK and works fine with the quickstart application. The collapsed node does not expand when adding new sub-node.
-Brix demo admin > menus still expands ...-
*Update*: My bad. I was testing against the old wicket-1.4-SNAPSHOT.jar

Adding and removing nodes work OK until I try to remove the root node. The quickstart fails due to its own problem, brix removes the root but then cannot add new root...
From Wicket side everything looks ok, so I will commit the patch.","22/Oct/10 20:24;mgrigorov;Patch applied to both 1.4.x and 1.5.x.
Thanks!","22/Oct/10 21:15;hudson;Integrated in Apache Wicket 1.4.x #225 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/225/])
    WICKET-3127 Adding node to a collapsed tree node should not cause it to expand

Do not expand a collapsed non-leaf node when adding a sub-node to it.

patch-provided-by: Mike Hefner
merge-from-1.4: r1026477
","22/Oct/10 21:26;hudson;Integrated in Apache Wicket 1.5.x #441 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/441/])
    WICKET-3127 Adding node to a collapsed tree node should not cause it to expand

Do not expand a collapsed non-leaf node when adding a sub-node to it.

patch-provided-by: Mike Hefner
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RequestCycle logs something, when its intended for servlet container",WICKET-3103,12477183,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,nino,nino,12/Oct/10 21:53,14/Oct/10 16:42,13/Mar/19 23:17,13/Oct/10 18:31,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M3,,,wicket,,,,,,,0,,,,,,,"I have something where I reference an image directly in html, wicket has no idea what it should do with it so it passes the request to the servlet container.. It works as I wanted, but should it give an error message?

html:
 <img src=""/images/icons/arrow_down_end.png""/>

Log:
ERROR [org.apache.wicket.request.cycle.RequestCycle]  - Unable to execute request. No suitable RequestHandler found. URL=images/icons/arrow_down_end.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-13 08:15:14.259,,,no_permission,,,,,,,,,,,203929,,,Thu Oct 14 16:42:33 UTC 2010,,,,,,0|i0kbsv:,116729,,,,,,,,"13/Oct/10 08:15;mgrigorov;I guess WicketFilter is configured to listen on '/*' and that's why it logs this message.
Probably just the logging level should be changed to DEBUG.","13/Oct/10 09:19;nino;yes, I think so.. ",13/Oct/10 18:31;mgrigorov;The log message level is decreased to debug with r1022225 ,"13/Oct/10 19:16;hudson;Integrated in Apache Wicket 1.5.x #392 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/392/])
    WICKET-3103 RequestCycle logs something, when its intended for servlet container

When no suitable request handler is found log just a debug message.
It is common to setup WicketFilter to listens on '/*' and then all requests for static resources (next to WEB-INF folder) to be filtered and let the container to deliver them.
","14/Oct/10 16:42;hudson;Integrated in Apache Wicket 1.5.x #400 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/400/])
    cleanup and better message
Issue: WICKET-3103
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Adding AjaxFormSubmitBehavior to Form leads to ""Error: too much recursion"" JS Error",WICKET-3095,12475865,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,msparer,msparer,05/Oct/10 16:44,06/Oct/10 20:45,13/Mar/19 23:17,06/Oct/10 18:36,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"We did an upgrade from 1.4.9 to 1.4.12 and noticed that a custom subclass of Form behaves differently. To submit a form by means of Ajax, we added an AjaxFormSubmitBehavior to the form triggering the ""onsubmit"" event. This worked until we did the upgrade. Now the javascript error ""Error: too much recursion"" occurs on submitting the form. This leads to a non-ajax submit of the form. I suspect that the code that AjaxFormSubmitBehavior attaches to the onsubmit event triggers onsubmit again - leading to an infinite loop. We now downgraded to 1.4.10. So the bug _may_ first occur in 1.4.11 - but that version wasn't tested. ",,,,,,,,,,,,,,,,,,,,,,06/Oct/10 09:08;msparer;recursion.jar;https://issues.apache.org/jira/secure/attachment/12456481/recursion.jar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-10-05 23:47:59.061,,,no_permission,,,,,,,,,,,203922,,,Wed Oct 06 20:45:48 UTC 2010,,,,,,0|i0kbtr:,116733,,,,,,,,05/Oct/10 23:47;jthomerson;Please provide a quickstart demonstrating this issue.,06/Oct/10 08:49;mgrigorov;I think I know where the problem is.,"06/Oct/10 09:08;msparer;Adding quickstart - run app and click on ""submit"" button.","06/Oct/10 18:36;mgrigorov;Fixed.
Thanks!","06/Oct/10 20:20;hudson;Integrated in Apache Wicket 1.4.x #190 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/190/])
    WICKET-3095 Adding AjaxFormSubmitBehavior to Form leads to ""Error: too much recursion"" JS Error

Clean the attribute before returning.
WICKET-3095 Adding AjaxFormSubmitBehavior to Form leads to ""Error: too much recursion"" JS Error

Make the setting of the boolean attribute xhtml complaint.

suggested-by: ivaynberg
WICKET-3095 Adding AjaxFormSubmitBehavior to Form leads to ""Error: too much recursion"" JS Error

Set a temporary attribute to the form before calling its onsubmit handler to prevent endless loop.
","06/Oct/10 20:45;hudson;Integrated in Apache Wicket 1.5.x #384 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/384/])
    WICKET-3095 Adding AjaxFormSubmitBehavior to Form leads to ""Error: too much recursion"" JS Error

merge r1005194, 1005195 and 1005196 from 1.4.x

Set a temporary attribute to the form before calling its onsubmit handler to prevent endless loop.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deleting only child of collapsed tree node doesn't update the node,WICKET-3072,12474850,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mikehefner,mikehefner,22/Sep/10 18:38,29/Sep/10 08:53,13/Mar/19 23:17,29/Sep/10 07:37,1.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"Deleting the only child of a collapsed tree node doesn't update the node's JunctionLink or icon to show that it is now childless.

Error occurs with both org.apache.wicket.markup.html.tree.LinkTree and org.apache.wicket.extensions.markup.html.tree.Tree. However, org.apache.wicket.extensions.markup.html.tree.Tree will update correctly if you select/deselect or try to expand the now childless node.
",,,,,,,,,,,,,,,,,,,,,,22/Sep/10 19:02;mikehefner;WICKET-3072-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12455289/WICKET-3072-Quickstart.zip,22/Sep/10 19:02;mikehefner;WICKET-3072-fix.patch;https://issues.apache.org/jira/secure/attachment/12455290/WICKET-3072-fix.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-09-29 08:53:13.909,,,no_permission,,,,,,,,,,,203902,,,Wed Sep 29 08:53:13 UTC 2010,,,,,,0|i0kbwf:,116745,,,,,,,,22/Sep/10 19:02;mikehefner;Attached Quickstart and patch containing fix,"29/Sep/10 08:53;hudson;Integrated in Apache Wicket 1.5.x #371 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/371/])
    Issue: WICKET-3072
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AJAX file upload fails in IE8 due to Wicket.Ajax.handleMultipart() sniffing wicket:body tags as an HTML body element when running Wicket in development mode,WICKET-3075,12474900,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,liam clarke,liam clarke,23/Sep/10 05:31,27/Sep/10 08:29,13/Mar/19 23:17,26/Sep/10 08:36,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.13,1.5-M3,,wicket,,,,,,,0,,,,,,,"To reproduce:

1. Run provided quickstart project
2. Open in IE8. 
3. Upload a file. 

Expected behaviour: 

File is uploaded, and some basic information about uploaded file is displayed.

Observed behaviour:

IllegalStateException is thrown.


The IllegalStateException is being thrown because the form is being submitted as a normal form. This is because the JS in handleMultipart that traverses up the DOM looking for the actual form is checking tagnames, and in IE8, the tagName of a <wicket:body> is body, so as soon as it hits a wicket:body, it returns false. I've provided a patch that checks for identity against document.body - an alternative is to check that the form.tagUrn is empty, as it would be for a normal HTML element. 

",,,,,,,,,,,,,,,,,,,,,,23/Sep/10 05:31;liam clarke;bodySniffing.patch;https://issues.apache.org/jira/secure/attachment/12455351/bodySniffing.patch,23/Sep/10 05:31;liam clarke;reproduction_body_bug.zip;https://issues.apache.org/jira/secure/attachment/12455350/reproduction_body_bug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-09-26 08:36:49.79,,,no_permission,,,,,,,,,,,203904,,,Mon Sep 27 00:13:25 UTC 2010,,,,,,0|i0kbvz:,116743,,,,,,,,"26/Sep/10 08:36;mgrigorov;Improved with r1001387 (trunk) and r1001388 (1.4.x).
Tested on FF3.6.11pre, FF4 beta, Opera 10.62, Chrome 7.x, IE7 and IE8.","26/Sep/10 09:27;hudson;Integrated in Apache Wicket 1.5.x #364 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/364/])
    WICKET-3075 AJAX file upload fails in IE8 due to Wicket.Ajax.handleMultipart() sniffing wicket:body tags as an HTML body element when running Wicket in development mode

Change the way an html element is checked whether it is document.body.
","27/Sep/10 00:13;hudson;Integrated in Apache Wicket 1.4.x #179 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/179/])
    WICKET-3075 AJAX file upload fails in IE8 due to Wicket.Ajax.handleMultipart() sniffing wicket:body tags as an HTML body element when running Wicket in development mode

Change the way an html element is checked whether it is document.body.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
inconsistency in property expression when using . for self reference,WICKET-2919,12467324,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,joseph_p,joseph_p,18/Jun/10 07:59,17/Sep/10 14:49,13/Mar/19 23:17,28/Aug/10 21:18,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"Let's consider this class :
class Container {
        String string = ""foo"";

        List<String> strings = Arrays.asList(new String[]{""test""});
    }

This would work:
new PropertyModel<String>(container, "".string"").getObject()
=> returns ""foo""

but this doesn't:
new PropertyModel<String>(container, "".strings[0]"").getObject()
it fails with
org.apache.wicket.WicketRuntimeException: no get method defined for class: class org.demo.PropertyModelTest$Container expression: strings

Similarly, this doesn't work:
new PropertyModel<Container>(container, ""."").getObject()
exception is :java.lang.StringIndexOutOfBoundsException: String index out of range: 0


In the end, should the dot being allowed for self reference ? It's already used as the property separator, so it would be quite misleading.

I've attached some proper junit test for these points.",,,,,,,,,,,,,,,,,,,,,,18/Jun/10 08:00;joseph_p;PropertyModelTest.java;https://issues.apache.org/jira/secure/attachment/12447439/PropertyModelTest.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-28 21:18:26.781,,,no_permission,,,,,,,,,,,203762,,,Sat Aug 28 21:18:26 UTC 2010,,,,,,0|i0kc7j:,116795,,,,,,,,18/Jun/10 08:01;joseph_p;from a ML discussion: http://apache-wicket.1842946.n4.nabble.com/inconsistency-in-property-expression-when-using-for-self-reference-td2259495.html#a2259495,"28/Aug/10 21:18;ivaynberg;1.5 will no longer allow property expressions that start with a "".""

in 1.4 we leave it as is in case someone depends on this ""feature""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Select.isSelected fails when Wicket application is using REDIRECT_TO_RENDER render strategy.,WICKET-2905,12465931,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,liam clarke,liam clarke,02/Jun/10 04:18,17/Sep/10 14:49,13/Mar/19 23:17,27/Aug/10 03:42,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-extensions,,,,,,,0,,,,,,,"To reproduce using attached quick start:

1. Leave text field empty
2. Select a value in dropdown
3. Click submit link
4. The text field's validation will fail and the page will refresh with a validation error message
5. The dropdown's selected value will always be the first in the option list, no matter what value was selected in step 2.

As the dropdown is updating its model via the AJAX behaviour, the value selected in step 2 should be the one selected when the page is redisplayed.

We can workaround this like so: 

        final Select select = new Select(""select"", New Model<String>("""")) {
            @Override
            protected void convertInput() {
                super.convertInput();
                clearInput();
            }
        };

As this removes the rawInput from Select, Select.isSelected then evaluates the models to determine the selected option. I have attached a patch in universal diff format that fixes this behaviour, and have tested it under all render strategies. I haven't written a unit test for this as the bug ultimately relied on submitted values not being available in a request, and I wasn't able to determine how to emulate this in a unit testing environment. (Pointers more than welcome. :) )",,,,,,,,,,,,,,,,,,,,,,03/Jun/10 03:00;liam clarke;Select.patch;https://issues.apache.org/jira/secure/attachment/12446218/Select.patch,03/Jun/10 02:38;liam clarke;select-bug_reproduction.zip;https://issues.apache.org/jira/secure/attachment/12446214/select-bug_reproduction.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-28 18:27:38.98,,,no_permission,,,,,,,,,,,203750,,,Sat Aug 28 18:27:38 UTC 2010,,,,,,0|i0kc8n:,116800,,,,,,,,03/Jun/10 02:38;liam clarke;Wicket quick-start to reproduce bug report. ,"03/Jun/10 02:58;liam clarke;Significantly rewrote the bug description once we determined the origin of the problem and created a reproducible test case,",03/Jun/10 03:00;liam clarke;Patch to modify org.apache.wicket.extensions.markup.html.form.select.Select,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not all exceptions are properly handled by the WicketFilter -> results in empty response document with unset status code -> seen as HTTP_OK by client,WICKET-2794,12459866,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,coldiges,coldiges,22/Mar/10 15:29,17/Sep/10 14:49,13/Mar/19 23:17,25/Aug/10 01:39,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"Our custom ResourceStreamLocator might throw RuntimeExceptions. 
When doing so, the exception handling of the WicketFilter doesnt properly handle this situation and creates an empty document with unset response code, which is usually sent to the client as HTTP_OK.

quickstart follows.",,,,,,,,,,,,,,,,,,,,,,22/Mar/10 15:34;coldiges;wicket2794.zip;https://issues.apache.org/jira/secure/attachment/12439465/wicket2794.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-25 02:11:46.908,,,no_permission,,,,,,,,,,,203646,,,Wed Aug 25 02:13:13 UTC 2010,,,,,,0|i0kci7:,116843,,,,,,,,22/Mar/10 15:34;coldiges;quickstart,"25/Aug/10 02:11;hudson;Integrated in Apache Wicket 1.4.x #116 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/116/])
    Issue: WICKET-2794
","25/Aug/10 02:13;hudson;Integrated in Apache Wicket 1.5.x #263 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/263/])
    Issue: WICKET-2794
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester creates parameters in mock request even for disabled form components,WICKET-2934,12468630,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,cmenzel,cmenzel,06/Jul/10 13:18,17/Sep/10 14:49,13/Mar/19 23:17,25/Aug/10 08:19,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"When setting up the mock web request for a form submission, FormTester creates request parameters even for form components that are disabled. As per the HTTP spec, a browser would not send parameters for components marked as disabled, so FormTester should not create these parameters either.",,,,,,,,,,,,,,,,,,,,,,06/Jul/10 13:19;cmenzel;0001-fixed-FormTester-wrongly-generating-parameters-for-d.patch;https://issues.apache.org/jira/secure/attachment/12448778/0001-fixed-FormTester-wrongly-generating-parameters-for-d.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-07-06 20:09:38.198,,,no_permission,,,,,,,,,,,203773,,,Wed Aug 25 09:12:45 UTC 2010,,,,,,0|i0dbxj:,75862,,,,,,,,06/Jul/10 13:19;cmenzel;A patch against 1.4.9 that fixes this issue without breaking the wicket mvn build/test.,06/Jul/10 20:09;jdonnerstag;fixed in 1.4; not yet tested/applied in 1.5,"06/Jul/10 21:10;hudson;Integrated in Apache Wicket 1.4.x #29 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/29/])
    fixed WICKET-2934 FormTester creates parameters in mock request even for disabled form components
fixed WICKET-2935 FormComponent#inputChanged does not properly check enabled/disabled status of the component
Issue: WICKET-2934
","25/Aug/10 09:12;hudson;Integrated in Apache Wicket 1.5.x #267 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/267/])
    Issue: WICKET-2934
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename yahoo-dom-event folder to something else,WICKET-2848,12463072,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,seitz,dleangen,dleangen,27/Apr/10 06:58,17/Sep/10 14:48,13/Mar/19 23:17,01/Sep/10 23:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-datetime,,,,,,,0,,,,,,,"When trying to use Wicket in OSGi under Equinox, the name of this directory is causing import/export problems.

I am using a local patch with a different name, and it works just fine.

Would be very nice if this file could either be moved or we rename the yahoo-dom-event (to something like yahoodomevent).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-26 21:51:07.547,,,no_permission,,,,,,,,,,,203694,,,Thu Sep 02 22:11:15 UTC 2010,,,,,,0|i0kcev:,116828,,,,,,,,26/Aug/10 21:51;ivaynberg;please provide a patch,"01/Sep/10 23:28;seitz;renamed the folder to yahoodomevent
since urlFor in 1.5 doesn't append a trailing '/' to a ResourceReference with an empty name, the missing '/' gets appended explicitly in DatePicker.java","02/Sep/10 19:13;hudson;Integrated in Apache Wicket 1.5.x #290 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/290/])
    ","02/Sep/10 22:11;hudson;Integrated in Apache Wicket 1.4.x #140 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/140/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoComplete onfocus behavior only working on last autocomplete field,WICKET-2977,12471392,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,cmenzel,cmenzel,12/Aug/10 08:51,17/Sep/10 14:48,13/Mar/19 23:17,13/Aug/10 18:49,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-extensions,,,,,,,0,,,,,,,"This is basically the same bug as WICKET-2158. That one was closed with this message by Gerolf:
""resolving this issue as fixed, as of revision 791516 (before the 1.4.0 release) committed by jcompagner (""forgotton declaration of var objonfocus;"") ""

However, we are still seeing this problem with 1.4.10. Some searching in the logs reveals that revision 886735 by jcompagner (""fixes and improvements (browser issues)"") removed that line again, presumably accidentally. Could we please have that back? :-)",,,,,,,,,,,,,,,,,,,,,,12/Aug/10 08:52;cmenzel;0001-added-missing-var-declaration-for-objonfocus.patch;https://issues.apache.org/jira/secure/attachment/12451878/0001-added-missing-var-declaration-for-objonfocus.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-12 15:14:47.522,,,no_permission,,,,,,,,,,,203816,,,Fri Aug 13 19:10:40 UTC 2010,,,,,,0|i0dbx3:,75860,,,,,,,,12/Aug/10 08:52;cmenzel;This patch restores the missing var declaration in wicket-autocomplete.js.,12/Aug/10 15:14;mgrigorov;Needs porting to 1.5,"12/Aug/10 16:30;hudson;Integrated in Apache Wicket 1.4.x #89 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/89/])
    AutoComplete onfocus behavior only working on last autocomplete field
(forgotton declaration of var objonfocus 2.)
Issue: WICKET-2977
",13/Aug/10 18:49;mgrigorov;Merged to trunk with r985318 and 985319.,"13/Aug/10 19:10;hudson;Integrated in Apache Wicket 1.5.x #226 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/226/])
    merge-from-1.4.x:

Author: jcompagner
Date: Thu Aug 12 15:10:36 2010
New Revision: 984824

URL: http://svn.apache.org/viewvc?rev=984824&view=rev
Log:
AutoComplete onfocus behavior only working on last autocomplete field
(forgotton declaration of var objonfocus 2.)
Issue: WICKET-2977
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette nested in a ListView results in a NPE when an error feedback is logged when submitting form,WICKET-2852,12463303,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,robinshine,robinshine,29/Apr/10 06:15,17/Sep/10 14:48,13/Mar/19 23:17,25/Aug/10 03:54,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,,,,,,,,0,,,,,,,"Reproducing steps:
1. Put TestPage.html and TestPage.java into a wicket application, visit test page.
2. Hit the save button and NullPointerException will be thrown indicating the ""ids"" field of component Palette$Recorder is not initialized

If taken Palette outside of ListView, the code will work fine. 

TestPage.html:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
<?xml version=""1.0"" encoding=""UTF-8""?>
<html xmlns=""http://www.w3.org/1999/xhtml"">
	<head>
	    <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
	</head>
	<body>
		<form wicket:id=""form"">
			<div wicket:id=""palettes"">
				<div wicket:id=""palette""></div>
			</div>
			<input type=""submit"" value=""save""></input>
		</form>
		<div wicket:id=""feedback""></div>
	</body>
</html>

TestPage.java:

import java.util.ArrayList;
import java.util.List;

import org.apache.wicket.extensions.markup.html.form.palette.Palette;
import org.apache.wicket.feedback.ContainerFeedbackMessageFilter;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.form.Form;
import org.apache.wicket.markup.html.form.IChoiceRenderer;
import org.apache.wicket.markup.html.list.ListItem;
import org.apache.wicket.markup.html.list.ListView;
import org.apache.wicket.markup.html.panel.FeedbackPanel;
import org.apache.wicket.model.AbstractReadOnlyModel;
import org.apache.wicket.model.IModel;

public class TestPage extends WebPage {
	
	@SuppressWarnings({ ""unchecked"", ""serial"" })
	public TestPage() {
		Form form = new Form(""form"") {

			@Override
			protected void onSubmit() {
				error(""Please select a value."");
			}
			
		};
		add(form);
		
		List<String> list = new ArrayList<String>();
		list.add(""1"");
		
		form.add(new ListView(""palettes"", list) {

			@Override
			protected void populateItem(ListItem item) {
			    IChoiceRenderer renderer = new IChoiceRenderer() {

					public Object getDisplayValue(Object object) {
						return object;
					}

					public String getIdValue(Object object, int index) {
						return (String) object;
					}
			    	
			    };
			    final List selected = new ArrayList();
			    IModel model = new IModel() {

					public Object getObject() {
						return selected;
					}

					public void setObject(Object object) {
						selected.clear();
						selected.addAll((List) object);
					}

					public void detach() {
					}
			    	
			    };
			    
			    IModel choicesModel = new AbstractReadOnlyModel() {

					@Override
					public Object getObject() {
					    final List<String> choices = new ArrayList<String>();
					    choices.add(""1"");
					    choices.add(""2"");
					    return choices;
					}
			    	
			    };
			    
			    item.add(new Palette(""palette"", model, choicesModel, renderer, 10, false));
			}
			
		});
	    
	    add(new FeedbackPanel(""feedback"", new ContainerFeedbackMessageFilter(this)));
	}
	
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-25 04:38:20.546,,,no_permission,,,,,,,,,,,203698,,,Wed Aug 25 05:14:54 UTC 2010,,,,,,0|i0kcdz:,116824,,,,,,,,"25/Aug/10 04:38;hudson;Integrated in Apache Wicket 1.4.x #117 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/117/])
    fixed npe in palette
Issue: WICKET-2852
","25/Aug/10 05:14;hudson;Integrated in Apache Wicket 1.5.x #265 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/265/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket should keep the url of a page that caused a runtime error,WICKET-3005,12472008,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pete,pete,19/Aug/10 14:37,17/Sep/10 14:48,13/Mar/19 23:17,20/Aug/10 22:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"In case wicket catches a runtime error it will redirect to an error page. In that case an url like

  http://127.0.0.1:8080//url/test?param=bad_value

will be replaced by something like

  http://127.0.0.1:8080/wicket/page?1

which is not very helpful (you won't be able to see that 'param' got a 'bad_value' in that case).

Also the user can not try to hit reload it the error is of temporary nature.

Additionally, after the session expires and the user hits reload on the url (and probably still hoping it get's better :-)

  http://127.0.0.1:8080/wicket/page

you will give you an http error '404 - page not found' as the error page url is not bookmarkable.

Keeping the source url and not doing a redirect would be better:

- reload in the browser will work
- expires pages will not break the URL

patch is included.




",,,,,,,,,,,,,,,,,,,,,,19/Aug/10 14:37;pete;control-redirect-on-errors.patch;https://issues.apache.org/jira/secure/attachment/12452524/control-redirect-on-errors.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-20 22:03:54.78,,,no_permission,,,,,,,,,,,203841,,,Sat Aug 21 00:12:43 UTC 2010,,,,,,0|i0kc1b:,116767,,,,,,,,"20/Aug/10 22:03;ivaynberg;nice, this one has been driving me crazy lately, but not enough to fix yet :)","21/Aug/10 00:12;hudson;Integrated in Apache Wicket 1.5.x #252 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/252/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
'this.document' is null or not an object after quickly opening and closing a modal window (modal.js),WICKET-2854,12463470,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,barrettas,barrettas,01/May/10 00:13,17/Sep/10 14:48,13/Mar/19 23:17,26/Aug/10 19:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"When opening a modal window that allows closing by clicking anywhere outside of the window it will sometimes give a javascript error stating ""'this.document' is null or not an object"" on line 915 or 916 of modal.js which is within the disableTabs function. This is a timing issue due to using setTimeout to hookup some modal preparation functions. The problem is that the modal is closing prior to these timeouts firing and then when the timeouts fire the document is null. So this.document returns null. A possible fix might be to clear the timeouts on window close.",IE 7 and maybe more IE versions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-26 20:15:54.007,,,no_permission,,,,,,,,,,,203700,,,Fri Aug 27 00:19:07 UTC 2010,,,,,,0|i0kcdr:,116823,,,,,,,,"26/Aug/10 20:15;hudson;Integrated in Apache Wicket 1.4.x #124 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/124/])
    Issue: WICKET-2854
","27/Aug/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #269 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/269/])
    Issue: WICKET-2854
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundsException is thrown in onBeforeRender when tabs is empty.,WICKET-2828,12461515,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,fwiller,fwiller,08/Apr/10 10:12,17/Sep/10 14:48,13/Mar/19 23:17,26/Aug/10 22:36,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-extensions,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,08/Apr/10 10:19;fwiller;WICKET-2828.patch;https://issues.apache.org/jira/secure/attachment/12441133/WICKET-2828.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-26 23:11:40.249,,,no_permission,,,,,,,,,,,203675,,,Fri Aug 27 00:19:07 UTC 2010,,,,,,0|i0kcg7:,116834,,,,,,,,"08/Apr/10 10:19;fwiller;Patch file for Version 1.4.7.
Simple checks if tabs is empty and call setSelectedTab(0) to add an empty panel.","26/Aug/10 23:11;hudson;Integrated in Apache Wicket 1.4.x #126 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/126/])
    Issue: WICKET-2828
","27/Aug/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #269 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/269/])
    Issue: WICKET-2828
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DateTextField converter does not honor current locale,WICKET-3025,12472837,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,interface,interface,30/Aug/10 09:03,17/Sep/10 14:48,13/Mar/19 23:17,30/Aug/10 23:38,1.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-extensions,,,,,,,0,,,,,,,"I think there is a small bug in
org.apache.wicket.extensions.markup.html.form.DateTextField.
A DateConverter is created in the constructor:

                converter = new DateConverter()
		{
			private static final long serialVersionUID = 1L;

			/**
			 * @see org.apache.wicket.util.convert.converters.DateConverter#getDateFormat(java.util.Locale)
			 */
			@Override
			public DateFormat getDateFormat(Locale locale)
			{
				return new SimpleDateFormat(DateTextField.this.datePattern);
			}
		};

But I think getDateFormat(...) method should looks like:

@Override
public DateFormat getDateFormat(Locale locale)
{
        if (locale == null)
	{
		locale = Locale.getDefault();
	}
	return new SimpleDateFormat(DateTextField.this.datePattern. locale);
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-31 00:13:35.37,,,no_permission,,,,,,,,,,,203861,,,Tue Aug 31 00:50:15 UTC 2010,,,,,,0|i0kbzj:,116759,,,,,,,,"31/Aug/10 00:13;hudson;Integrated in Apache Wicket 1.4.x #133 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/133/])
    Issue: WICKET-3025
","31/Aug/10 00:50;hudson;Integrated in Apache Wicket 1.5.x #279 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/279/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormComponent.add(IValidator<T>) should probably accept IValidator<? super T>,WICKET-2849,12463103,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,papegaaij,papegaaij,27/Apr/10 13:03,17/Sep/10 14:48,13/Mar/19 23:17,26/Aug/10 21:46,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"For example, a validator for Number, is able to validate all subtypes of Number (such as Integer or BigDecimal). The principal is the same as for Comparator, methods such as Collections.sort always take ? super T.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-26 21:42:53.909,,,no_permission,,,,,,,,,,,203695,,,Fri Aug 27 00:19:07 UTC 2010,,,,,,0|i0kcen:,116827,,,,,,,,"26/Aug/10 21:42;ivaynberg;referenced issue was fixed a long time ago, removed the message","26/Aug/10 21:43;ivaynberg;whoops, change meant for another issue",26/Aug/10 21:46;ivaynberg;only 1.5 to keep binary compat,"27/Aug/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #269 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/269/])
    add(ivalidator<t>)->add(ivalidator<? super t>)
Issue: WICKET-2849
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing ModalWindow makes some form fields unclickable,WICKET-2957,12469891,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,freemant,freemant,22/Jul/10 07:29,17/Sep/10 14:47,13/Mar/19 23:17,25/Aug/10 05:09,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-extensions,,,,,,,2,,,,,,,"After closing a ModalWindow, sometimes (1 out of 5-10) some form fields (text, select) will become unclickable/read-only (but not grayed out), as if the ModalWindow weren't closed. Those form fields aren't necessarily those covered by the ModalWindow.

It works fine in IE.

In the error console in Firefox, there are a few errors (the error message has been translated from Chinese):

Warning: error parsing the value for ""height"". Call interrupted
Source: http://localhost:8888/?wicket:interface=:12::::
Line: 0

Warning: error parsing the value for ""filter"". Call interrupted
Source: http://localhost:8888/resources/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/modal.css
Line: 26

Warning: Unknown property ""-moz-opacity"". Call interrupted
Source: http://localhost:8888/resources/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/modal.css
Line: 24",Windows XP. Firefox 3.6.6.,,,,,,,,,,,,,,,,,,,,,05/Aug/10 15:52;mikulka;myproject.zip;https://issues.apache.org/jira/secure/attachment/12451340/myproject.zip,22/Jul/10 07:31;freemant;testcase.zip;https://issues.apache.org/jira/secure/attachment/12450138/testcase.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-05 15:52:15.471,,,no_permission,,,,,,,,,,,203796,,,Wed Aug 25 06:16:41 UTC 2010,,,,,,0|i0kc5b:,116785,,,,,,,,22/Jul/10 07:31;freemant;This is a simple Wicket page showing the problem. Run it. Open and close the ModalWindow and try to click the form field.,"24/Jul/10 08:43;freemant;The weird thing is, if you close the modal window using the close button, it will work fine without this problem.","25/Jul/10 10:53;freemant;As it has the same effect as crashing for all firefox users (25% of all users), I think the priority should be critical.","05/Aug/10 15:52;mikulka;I have been having the same problem. I have experienced it in Firefox 3.6.6/4beta and Chrome stable/dev.

Self-made ModalWindow close button seems to cause this more often, but also the built-in ModalWindow close button causes this.


Here's a simple test project based on QuickStart project.
1. Close modal window
2. Try to focus the textfield
3. Repeat steps 1-2 until textfield can't be focused (may take about 10 repeats)","23/Aug/10 20:42;highonlife;Ive had this same problem with firefox 3.6.8 and wicket 1.4.9
Closing a modalwindow by calling close(AjaxRequestTarget target) is the culprit. 
When you look at the ajax debug, it seems it is losing focus. 
I think it may have something to do with the reenableFocus function of the modal window","25/Aug/10 05:08;ivaynberg;this is not critical, it has to do with this line:

setTimeout(function() {this.disableFocus(doc, win)}.bind(this), 1000);

for this to manifest you have to close the modal less then a second after opening it","25/Aug/10 06:16;hudson;Integrated in Apache Wicket 1.5.x #266 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/266/])
    Closing ModalWindow makes some form fields unclickable
Issue: WICKET-2957
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set Content-Type for package resources,WICKET-3027,12472971,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pete,pete,31/Aug/10 21:21,17/Sep/10 14:47,13/Mar/19 23:17,01/Sep/10 16:52,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,,,,0,,,,,,,"I renamed this issue as it's not only nice to let PackageResource extend AbstractResource but it will also fixes the absence of the ""Content-Type"" header for package resources.",,,,,,,,,,,,,,,,,,,,,,31/Aug/10 21:22;pete;package-resource.patch;https://issues.apache.org/jira/secure/attachment/12453543/package-resource.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-09-02 19:13:15.469,,,no_permission,,,,,,,,,,,203862,,,Thu Sep 02 19:13:15 UTC 2010,,,,,,0|i0kbzb:,116758,,,,,,,,"02/Sep/10 19:13;hudson;Integrated in Apache Wicket 1.5.x #290 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/290/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Wrong link in compref  Include component -> ""This Artifact Has Been Made Private.""",WICKET-2862,12464071,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pekarna,pekarna,09/May/10 01:48,26/Aug/10 21:44,13/Mar/19 23:17,26/Aug/10 21:44,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,,,,0,,,,,,,"From here  http://wicketstuff.org/wicket14/compref?wicket:bookmarkablePage=:org.apache.wicket.examples.compref.IncludePage
over ""NOTE this open issue before you use this component""
to https://sourceforge.net/tracker/index.php?func=detail&aid=1243549&group_id=119783&atid=684978
which reports:


ERROR
Artifact: This Artifact Has Been Made Private. Only Group Members Can View Private ArtifactTypes. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-26 21:44:00.846,,,no_permission,,,,,,,,,,,203708,,,Thu Aug 26 21:44:00 UTC 2010,,,,,,0|i0kccf:,116817,,,,,,,,"26/Aug/10 21:44;ivaynberg;referenced issue was closed a long time ago, message removed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TextTemplateSharedResourceFactory should use template's content type,WICKET-2892,12465441,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,singhatulkr,singhatulkr,26/May/10 09:02,15/Jul/10 00:13,13/Mar/19 23:17,10/Jul/10 11:42,1.2.6,1.2.7,1.3.0-beta1,1.3.0-beta2,1.3.0-beta3,1.3.0-beta4,1.3.0-final,1.3.0-rc1,1.3.0-rc2,1.3.1,1.3.2,1.3.3,1.3.4,1.3.5,1.3.6,1.3.7,1.4.0,1.4.1,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4.7,1.4.8,1.4.9,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,1.4-RC2,1.4-RC3,1.4-RC4,1.4-RC5,1.4-RC6,1.4-RC7,1.4.10,,,wicket,,,,,,,0,TextTemplateSharedResourceFactory,,,,,,"If the content-type is not specified, resource like css is not applied on safari and chrome.
The content-type should be specified when creating AbstractStringResourceStream like below:
--------
public IResourceStream getResourceStream()
				{
					return new AbstractStringResourceStream(template.getContentType()==null?""text"":template.getContentType())
					{
						private static final long serialVersionUID = 1L;

						@Override
						protected String getString()
						{
							return templateValue;
						}

					};
				}","safari,chrome",300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-10 17:32:54.23,,,no_permission,,,,,,,,,,,203737,,,Thu Jul 15 00:13:15 UTC 2010,,,,,,0|i0kcaf:,116808,,,,,,,,"10/Jul/10 17:32;hudson;Integrated in Apache Wicket 1.5.x #135 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/135/])
    WICKET-2892 same changes as in 1.4 though TTSRF is unlikely to survive. See comments in java code.
Issue: WICKET-2892
","15/Jul/10 00:13;hudson;Integrated in Apache Wicket 1.4.x #37 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/37/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester should check for visibility in hierarchy when building param map,WICKET-2908,12466491,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,scotthraban,scotthraban,08/Jun/10 20:21,15/Jul/10 00:13,13/Mar/19 23:17,10/Jul/10 10:46,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,,,wicket,,,,,,,0,,,,,,,"In BaseWicketTester::submitAjaxFormSubmitBehavior, the code checks formComponent.isVisible() to determine if the component values should be added to the params map.

However, it does not check isVisibleInHierarchy, as it does for isEnabledInHierarchy.

Thus even if the parent of a component is not visible, if the component itself is not explicitly invisible, it gets added to the params map.

This conflicts with Form::findSubmittingButton(), which uses isVisibleInHierarchy(), so when testing, if a button's parent is not visible, but it itself is not explicitly not visible, then the button is sent in the request, which may cause findSubmittingButton to throw an error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-07-10 10:46:11.579,,,no_permission,,,,,,,,,,,203752,,,Thu Jul 15 00:13:13 UTC 2010,,,,,,0|i0kc8f:,116799,,,,,,,,"10/Jul/10 10:46;jdonnerstag;fixed in 1.4.
The 1.5 code looks completely different","15/Jul/10 00:13;hudson;Integrated in Apache Wicket 1.4.x #37 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/37/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListView removeLink method should remove items from list based on item index,WICKET-2909,12466519,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jthomerson,checketts,checketts,09/Jun/10 05:01,16/Jun/10 02:05,13/Mar/19 23:17,16/Jun/10 01:20,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,0,,,,,,,"In org.apache.wicket.markup.html.list.ListView the removeLink() method removes and object from the underlying list using the modelObject. instead it should remove using the item.getIndex().  

Reason: if the listview's model contains several nulls, and the clicked item's object is null then the first null would get removed instead of the entry at the item that was actually clicked.

Instead of:  'final int oldIndex = getList().indexOf(item.getModelObject());' use the passed in item.getIndex()

Example:

public void onClick()
			{
				addStateChange(new Change()
				{
					private static final long serialVersionUID = 1L;

					final int oldIndex = item.getIndex()); <- Change here ///////////////////////////////
					final T removedObject = item.getModelObject();

					@Override
					public void undo()
					{
						((List<T>)getList()).add(oldIndex, removedObject);
					}

				});

				item.modelChanging();

				// Remove item and invalidate listView
				getList().remove(oldIndex);   <- Change here ///////////////////////////////

				ListView.this.modelChanged();
				ListView.this.removeAll();
			}



I spoke with Jeremy Thomerson about this. Please assign to him. The moveUpLink and MoveDownLink are similarly affected.",,,,,,,,,,,,,,,,,,,,,,15/Jun/10 23:54;jthomerson;quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12447185/quickstart.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-06-15 23:54:52.216,,,no_permission,,,,,,,,,,,203753,,,Wed Jun 16 02:05:46 UTC 2010,,,,,,0|i0kc87:,116798,,,,,,,,"15/Jun/10 23:54;jthomerson;quickstart demonstrating behavior
commit for fix will follow at first opportunity","16/Jun/10 02:05;hudson;Integrated in Apache Wicket 1.5.x #102 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/102/])
    fixes WICKET-2909 in trunk
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebResponse sets a negative Content-Length when length >2G,WICKET-2917,12467019,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jthomerson,lletourn,lletourn,15/Jun/10 18:34,15/Jun/10 23:05,13/Mar/19 23:17,15/Jun/10 22:38,1.4.5,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,0,,,,,,,"When using ResourceStreamRequestTarget + FileResourceStream to send a file <2G, the resulting Content-Length in the header is a large negative value. This is due to a cast between a long and an int.

In wicket, all methods dealing with content-length use longs, but the servlet api HttpServletResponse takes in an int, so WebResponse casts the long into an int which causes the problem.

The simple work around is to check for >2G lengths and use the addHeader method instead of setContentLength.

Attached is an extended WebResponse that fixes the problem.  This should probably be applied to WebResponse.
",,,,,,,,,,,,,,,,,,,,,,15/Jun/10 18:39;lletourn;webResponse-contentLength-1.4.9.patch;https://issues.apache.org/jira/secure/attachment/12447160/webResponse-contentLength-1.4.9.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-06-15 22:36:51.568,,,no_permission,,,,,,,,,,,203760,,,Tue Jun 15 23:05:34 UTC 2010,,,,,,0|i0kc7r:,116796,,,,,,,,15/Jun/10 18:39;lletourn;Patch that adds the fix to WebResponse,"15/Jun/10 18:41;lletourn;The patch tests for the length, but it's not necessary I think, you could just use the addHeader all the time instead.",15/Jun/10 22:36;jthomerson;minor - this is a rare corner case,"15/Jun/10 23:05;hudson;Integrated in Apache Wicket 1.5.x #100 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/100/])
    fixes WICKET-2917 for trunk (1.5)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""isPrimary"" check is not applied to beans in parent contexts",WICKET-2900,12465684,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,seitz,seitz,seitz,28/May/10 23:24,29/May/10 00:07,13/Mar/19 23:17,28/May/10 23:51,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket-spring,,,,,,,0,,,,,,,see this comment in WICKET-2771: https://issues.apache.org/jira/browse/WICKET-2771?focusedCommentId=12872246&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12872246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-29 00:07:46.334,,,no_permission,,,,,,,,,,,203745,,,Sat May 29 00:07:46 UTC 2010,,,,,,0|i0kc9r:,116805,,,,,,,,"29/May/10 00:07;hudson;Integrated in Apache Wicket 1.5.x #76 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/76/])
    WICKET-2900: look for bean definition in parent contexts
WICKET-2901: only return a primary bean if it's the only one
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
run wicket-examples application in 'headless-mode',WICKET-2895,12465551,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jthomerson,pete,pete,27/May/10 12:25,27/May/10 20:05,13/Mar/19 23:17,27/May/10 19:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket-examples,,,,,,,0,,,,,,,"when starting the wicket-examples (or when executing 'mvn install' on the wicket source dir) java will launch an application window on the desktop (at least on os x it does). this is happening when using awt-classes. java will allocate a desktop window unless you tell it to run in headless mode.

for a non-desktop-bound server application this makes sense.

headless mode is enabled by setting system property 'java.awt.headless' to 'true'.

I attached a patch...","wicket-1.3, wicket-1.4, wicket-1.5",,,,,,,,,,,,,,,,,,,,,27/May/10 12:25;pete;headless-mode-for-examples.patch;https://issues.apache.org/jira/secure/attachment/12445649/headless-mode-for-examples.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-27 19:10:21.813,,,no_permission,,,,,,,,,,,203740,,,Thu May 27 20:05:45 UTC 2010,,,,,,0|i0kca7:,116807,,,,,,,,27/May/10 19:10;jthomerson;fixed - thanks,"27/May/10 20:05;hudson;Integrated in Apache Wicket 1.5.x #73 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/73/])
    fixes WICKET-2895
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in IllegalStateException when there are multiple beans of the same type,WICKET-2891,12465433,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jthomerson,robinvanb,robinvanb,26/May/10 07:06,27/May/10 13:07,13/Mar/19 23:17,27/May/10 02:01,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,,,wicket-spring,,,,,,,0,,,,,,,"I have a test where there are multiple beans of the same type, I received the following exception

Caused by: java.lang.IllegalStateException: more then one bean of type [MyClassName] found, you have to specify the name of the bean (@SpringBean(name=""foo"")) in order to resolve this conflict. Matched beans: MyClassNamer$$EnhancerByMockitoWithCGLIB$$f5bd36c9,MyClassName

Please note how it states ""then"" rather than ""than"" since the sentence is about multiple things, 'than' is the only appropriate word to use.
","Windows 7, 64-bit",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-27 02:01:46.471,,,no_permission,,,,,,,,,,,203736,,,Thu May 27 13:07:48 UTC 2010,,,,,,0|i0kcan:,116809,,,,,,,,"27/May/10 02:01;jthomerson;Fixed (in three spots on each branch).

Thanks!","27/May/10 13:07;hudson;Integrated in Apache Wicket 1.5.x #72 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/72/])
    fixes WICKET-2891
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestLogger.SessionData methods aren't public,WICKET-2885,12465232,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,checketts,checketts,23/May/10 20:17,24/May/10 02:57,13/Mar/19 23:17,24/May/10 02:57,1.4.1,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4.7,1.4.8,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,,,,,,,,,,0,,,,,,,"The following methods in RequestLogger.SessionData are private: addTimeTaken() setSessionInfo() setSessionSize()

Please change these to 'public', the only reason they are working currently is because SessionData is an innerclass to RequestLogger. If a user tries to extend RequestLogger and call the RequestLogger.SessionData innerclass, it is unable to use the mentioned methods to properly perform logging.",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203730,,,2010-05-23 20:17:11.0,,,,,,0|i0kcb3:,116811,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getConvertedInput() returns null and selectedValues.addAll tries adding it,WICKET-2861,12464003,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,ncollette,ncollette,07/May/10 16:02,19/May/10 00:05,13/Mar/19 23:17,18/May/10 22:22,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,1.5-M1,,wicket,,,,,,,0,,,,,,,"Came across this bug when upgrading from wicket 1.3 to 1.4.7.  It occurred when we were clearing a form.  

Add a null check to
selectedValues.addAll(getConvertedInput());
in ListMultipChoice:updateModel(),
because getConvertedInput() can conceivably be null in normal situations.",,,,,,,,,,,,,,,,,,,,,,07/May/10 16:05;ncollette;ListMultipleChoice.java;https://issues.apache.org/jira/secure/attachment/12443977/ListMultipleChoice.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-05-19 00:05:13.212,,,no_permission,,,,,,,,,,,203707,,,Wed May 19 00:05:13 UTC 2010,,,,,,0|i0kccn:,116818,,,,,,,,07/May/10 16:05;ncollette;Here is a patch for the stated bug.,"19/May/10 00:05;hudson;Integrated in Apache Wicket 1.5.x #56 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/56/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PackageStringResourceLoader.loadStringResource() causes NullPointerException when used in a Class within the root package (i.e. it has no package declaration),WICKET-2856,12463665,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,d.meuser,d.meuser,04/May/10 13:41,18/May/10 22:08,13/Mar/19 23:17,18/May/10 21:50,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,1.5-M1,,wicket,,,,,,,0,,,,,,,"Cause is the line

    String packageName = clazz.getPackage().getName();

because Class.getPackage() [respectivly Package.getPackage(Class)] returns null if a class has no dot in its full qualifier.

Example (from the Java Doc for org.apache.wicket.model.StringResourceModel):

-------------------- CODE ------------------------
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.model.StringResourceModel;

public class MyPage extends WebPage {

    public MyPage() {
        add(new Label(""username"", new StringResourceModel(""label.username"", this, null)));
    }

}
-------------------- CODE ------------------------

If this class is in the root directory (no package declaration as above) a NullPointerException is thrown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-18 22:08:28.056,,,no_permission,,,,,,,,,,,203702,,,Tue May 18 22:08:28 UTC 2010,,,,,,0|i0kcdj:,116822,,,,,,,,"18/May/10 22:08;hudson;Integrated in Apache Wicket 1.5.x #54 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/54/])
    WICKET-2856: PackageStringResourceLoader.loadStringResource() causes NullPointerException when used in a Class within the root package (i.e. it has no package declaration)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ListMultipleChoice/CheckBoxMultipleChoice do not retain selected but disabled items,WICKET-2853,12463306,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,cmenzel,cmenzel,29/Apr/10 07:05,18/May/10 22:08,13/Mar/19 23:17,18/May/10 18:26,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,1.5-M1,,wicket,,,,,,,0,,,,,,,"Suppose in a shop application the user gets to choose from a number of options for the product, presented by checkboxes. One or more of these options may be mandatory for the given product, so they are not only pre-selected in the model and thus checked on the displayed page, but also disabled via #isDisabled, so they cannot be deselected.

On form submit the browser (correctly) does not post these disabled values again and ListMultipleChoice#convertChoiceIdsToChoices does not keep these values. Upon re-displaying of the page the checkbox is no longer checked, and the user can't even check it again, since it is disabled. The behavior is demonstrated in the test case contained in the attached patch.

I propose the attached path to give ListMultipleChoice a new flag called retainDisabledSelected. Default in the patch is currently false, though I think it could also be set to true. If the flag is true, the patched convertChoiceIdsToChoices will go through the old model collection to check if any of the selected values were disabled. Any such values will be added to the new model collection. If the flag is false, the ListMultipleChoice will behave like before. The included testcase verifies the behavior for both flag settings.",,,,,,,,,,,,,,,,,,,,,,03/May/10 21:34;cmenzel;0001-retainDisabledSelected-for-listmultiplechoice.patch;https://issues.apache.org/jira/secure/attachment/12443507/0001-retainDisabledSelected-for-listmultiplechoice.patch,04/May/10 13:27;bradfritz;WICKET-2528_quickstart_demo.zip;https://issues.apache.org/jira/secure/attachment/12443581/WICKET-2528_quickstart_demo.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-05-03 21:39:57.49,,,no_permission,,,,,,,,,,,203699,,,Tue May 18 22:08:27 UTC 2010,,,,,,0|i0dbxr:,75863,,,,,,,,"03/May/10 21:34;cmenzel;Expanded the scope of the patch a bit to also cover the case if the user does not select anything. #convertChoicesToIds wouldn't be called then, so now #convertValue() is also patched.",03/May/10 21:39;jthomerson;can you create a simple quickstart that demonstrates this usecase?,"04/May/10 13:27;bradfritz;Quickstart app to demonstrate WICKET-2528 problem where
checked+disabled checkboxes created with CheckBoxMultipleChoice become
unselected on form submit.

If FormTester.submit() behaved more like real browser and did not
submit values for disabled fields, unit test would fail.  Problem can
still be observed manually by running ""mvn jetty:run"", submitting form
as-is, and noting that the ""bar"" checkbox is unchecked by the submit.
(Tested with Firefox 3.6.3.)
",04/May/10 13:30;bradfritz;D'oh!  The WICKET-2528 references in my example should obviously be WICKET-2853.,"04/May/10 14:11;cmenzel;Hi Brad, thank you for this quickstart. It demonstrates exactly what I described.

Jeremy, if you look at this you will see that after the submit the middle of the three checkboxes on the quickstart page will no longer be checked. In my opinion it should still be checked (or at least that behavior should be available, such as in my patch with the retaindDisabledSelected flag).

In my patch there is a new testcase ""DisabledItemRetainingCheckBoxTest"" that tests for this behavior. I didn't find a problem with FormTester, however - I just simulate what the browser would be doing: Just sending one of the checkboxes, even if two are checked and the second one is disabled. That's the normal behavior as specified in the HTML standard. My testcase tests both the ""old"" behavior with the flag off and the ""new"" behavior with the flag on.","18/May/10 22:08;hudson;Integrated in Apache Wicket 1.5.x #54 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/54/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong package names in Examples,WICKET-2859,12463987,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jthomerson,treuherzr,treuherzr,07/May/10 13:20,10/May/10 19:26,13/Mar/19 23:17,10/May/10 19:26,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,,,wicket-examples,,,,,,,0,,,,,,,"In almost all examples on the home page, the imports are wrong.
It reads: ""import wicket.xx.xx.xx"" instead of ""import org.apache.wicket.xx.xx.xx"".
Please fix this, as otherwise everybody who copies the source code from your examples page gets an error.

In addition, the web.xml for the GuestBook example is not working at all.
It is not necessary to add a servlet mapping for the GuestBookApplication, it works very well without one. 
The url-pattern is also misleading and does not match with the screenshot.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-07 15:22:11.832,,,no_permission,,,,,,,,,,,203705,,,Mon May 10 19:26:42 UTC 2010,,,,,,0|i0kcd3:,116820,,,,,,,,"07/May/10 15:22;martin-g;cite: ""It reads: ""import wicket.xx.xx.xx"" instead of ""import org.apache.wicket.xx.xx.xx"".""
Where did you saw that ?","10/May/10 08:40;treuherzr;Ok, for you I explain it in detail - it was too hard to understand:

Please look at:

http://wicket.apache.org/exampleguestbook.html

And then scroll down the page to the example code to ""GuestBook.java"".

There the source code reads:

""
package wicket.examples.guestbook;

import java.util.Date;
import java.util.List;
import java.util.Vector;

import wicket.markup.html.WebPage;
import wicket.markup.html.basic.Label;
...
""

and so on. And ALL the imports for the wicket packages are WRONG !

It should be:

""
package wicket.examples.guestbook;

import java.util.Date;
import java.util.List;
import java.util.Vector;

import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.basic.Label;
...
""

Hope you get it now. I'm still very upset about the poor quality of the examples !","10/May/10 09:01;reiern70;Very upset about quality of Examples? Wicket is an OpenSource project with a very active community of developers that spend most of their FREE time improving Wicket, fixing issues  and answering questions from users... If you feel examples are incomplete and  or out-dated why not volunteer to make them better? 

Ernesto

","10/May/10 15:00;jthomerson;Check out the examples that are maintained in SVN.  You can svn co and mvn clean install, cd wicket-examples and ""mvn jetty:run"".  Then you have an entire set of examples running on your own machine.  These will not have old imports because they're in our source tree and must compile and run everytime we make a change.

It's not very nice or tactful of you to come in a public place and whine ""I'm still very upset about the poor quality of the examples!"".  It's an open source project.  You want to see something improved - volunteer to improve.  Otherwise, don't whine about what time other VOLUNTEERS do or do not have.","10/May/10 15:13;treuherzr;Ok, I apologise for my speech. It is totally obvious that the Wicket project is open source and the quality is dependent on the volunteers.
But - I don't feel like editing your site as an absolute amateur to Wicket.
So I copied and pasted the example source code from the homepage and got the aforementioned error.
And I thought: ""It seems that everybody who copies the source from the homepage will get these errors"".
As I am a user of Wicket, not a developer, I found it easiest to report an error. 
And I thought the description was not very misleading.
The time you found answering my comments you could have fixed the example codes and not try bashing at a user who wants to improve the quality of the website.
Remember, you are the experts and I don't feel myself up to the task editing the home page of a project of a scope like Wicket.

To summarize: Pardon me for being upset, I just wanted to help.","10/May/10 19:26;jthomerson;this is fixed (https://cwiki.apache.org/confluence/display/WICKETxSITE/ExampleGuestBook)

Note that it may take a couple of hours for it to copy the changes out to the actual site.  If you don't see the changes reflected on the site in several hours, a simple post to the mailing list is all that's necessary.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette is incompatible with ListMultipleChoice in its use of the model,WICKET-2843,12462623,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,lankvelt,lankvelt,21/Apr/10 09:17,26/Apr/10 17:39,13/Mar/19 23:17,26/Apr/10 17:39,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,1.5-M1,,wicket-extensions,,,,,,,0,,,,,,,"Palette, like the listmultiplechoice component, modifies the object (a list) in-place.  Both components have the same behavior in their updateModel documentation, but the implementation differs.  Whereas ListMultipleChoice invokes getModel().setObject(), Palette uses setDefaultModelObject().  This has the consequence that it never invokes the setObject method as that is guarded by a model comparator.

Suggested fix is to use the same logic in both updateModel implementations.",,,,,,,,,,,,,,,,,,,,,,21/Apr/10 09:51;lankvelt;WICKET-2843.patch;https://issues.apache.org/jira/secure/attachment/12442409/WICKET-2843.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203689,,,Wed Apr 21 09:51:58 UTC 2010,,,,,,0|i0kcfb:,116830,,,,,,,,21/Apr/10 09:44;lankvelt;workaround available by copying the collection in the getModelCollection method.,21/Apr/10 09:51;lankvelt;proposed fix,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ValueMap.getAsBoolean(key, defaultValue) always returns false for non-existing keys, instead of the defaultValue",WICKET-2787,12459509,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,a.bogaart,a.bogaart,18/Mar/10 12:49,18/Mar/10 15:27,13/Mar/19 23:17,18/Mar/10 15:27,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,,,,,,,0,,,,,,,"ValueMap.getAsBoolean(key, defaultValue) should check if the provided key actually exists, and if not return the defaultValue. Currently it will delegate to Strings.isTrue(null) which always returns false.
",,,,,,,,,,,,,,,,,,,,,,18/Mar/10 12:50;a.bogaart;valuemap_1.4.x.patch;https://issues.apache.org/jira/secure/attachment/12439157/valuemap_1.4.x.patch,18/Mar/10 12:50;a.bogaart;valuemap_trunk.patch;https://issues.apache.org/jira/secure/attachment/12439158/valuemap_trunk.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203640,,,Thu Mar 18 12:50:56 UTC 2010,,,,,,0|i0kcin:,116845,,,,,,,,18/Mar/10 12:50;a.bogaart;Patch for trunk and 1.4.x branch included.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Manual invocation of FunctionsExecutor#notify() is broken,WICKET-5039,12632195,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,reiern70,reiern70,13/Feb/13 12:27,20/Jun/13 07:52,13/Mar/19 23:17,21/Feb/13 14:20,6.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket,,,,,,,0,,,,,,,"We are having problems on Wicket 1.4.x with and ""AJAX function"" processEvaluation... and I see the code is practically the same at 6.x. So, let's bring the subject to the list... 

Our problem is that after evaluating some expressions with errors, screen ""freezes"" because post-call handlers are not called. Problem seems to be related to the code. 

                                // test if the javascript is in form of identifier|code
				// if it is, we allow for letting the javascript decide when the rest of processing will continue
				// by invoking identifier();
				var res = text.match(new RegExp(""^([a-z|A-Z_][a-z|A-Z|0-9_]*)\\|((.|\\n)*)$""));

				if (res !== null) {
					var f = jQuery.noop;
					text = ""f = function("" + res[1] + "") {"" + res[2] + ""};"";

					try {
						// do the evaluation
						eval(text);
						f(notify);
					} catch (exception) {
						Wicket.Log.error(""Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: "" + exception + "", text: "" + text);
					}

				} 


 In case of error. Shouldn't it be

                                      try {
						// do the evaluation
						eval(text);
						f(notify);
					} catch (exception) {
						Wicket.Log.error(""Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: "" + exception + "", text: "" + text);
                                                notify();
					}

So that next steps in processing get called. The above solves or freezing problem in case of error",any,0,0,,0%,0,0,,,,,,,,,,,,,,,13/Feb/13 12:32;reiern70;WICKET-5039.patch;https://issues.apache.org/jira/secure/attachment/12569186/WICKET-5039.patch,18/Feb/13 10:43;reiern70;wicket5039.tar.gz;https://issues.apache.org/jira/secure/attachment/12569793/wicket5039.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2013-02-15 22:45:14.952,,,no_permission,,,,,,,,,,,312691,,,Fri Feb 22 07:38:23 UTC 2013,,,,,,0|i1hymf:,313037,,,,,,,,13/Feb/13 12:32;reiern70;patch fixing the issue for 6.x branch,"15/Feb/13 22:45;svenmeier;Out of curiosity, what are you using that ""identifier|code"" evaluation for?","16/Feb/13 06:04;reiern70;@Sven,

The problem appears on the site of a customer of mine: users complained of screens getting frozen. They have pinpointed that screen got frozen when exception happened on code above. I have no idea of what expressions of that kind they are using: I will ask  them if they can provide an example of failing expressions. Do you need me to provide a quick-start? It is very easy to produce one.","16/Feb/13 15:57;svenmeier;A quickstart would be nice, yes.

I'm just wondering how to handle the case when the evaluation already called notiy(), then fails with an exception and processEvaluation() would call notify once again?","16/Feb/13 16:42;reiern70;I will try to produce a quickstart tomorrow morning... I have also asked my client if he can provide an example for this ""use case"". Or maybe some of the other core developer can shed some light about what this ""special"" case was introduced... I find it dangerous because of that you mention above and also because nothing prevent users from calling notify(); several times e.g. expression A|{A();A();A();}... ","18/Feb/13 10:39;reiern70;Sven,

I think code 

var res = text.match(new RegExp(""^([a-z|A-Z_][a-z|A-Z|0-9_]*)\\|((.|\\n)*)$"")); 

if (res !== null) { 
var f = jQuery.noop; 
text = ""f = function("" + res[1] + "") {"" + res[2] + ""};""; 

try { 
// do the evaluation 
eval(text); 
f(notify); 
} catch (exception) { 
Wicket.Log.error(""Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: "" + exception + "", text: "" + text); 
} 

} 

will never get called on Wicket 6.x. I have tried the following

<p>
    <a wicket:id=""correctexpression"">Correct Expression</a>
</p>

and

AjaxLink<Void> correctexpression = new AjaxLink<Void>(""correctexpression"") {
			
			private static final long serialVersionUID = 1L;

			@Override
			public void onClick(AjaxRequestTarget target) {
				target.appendJavaScript(""A|alert('Correct');A();"");
				target.prependJavaScript(""A|alert('Correct');A();"");
				target.addListener(new AjaxRequestTarget.IListener() {
					
					@Override
					public void onBeforeRespond(Map<String, Component> map,
							AjaxRequestTarget target) {
						
					}
					
					@Override
					public void onAfterRespond(Map<String, Component> map,
							IJavaScriptResponse response) {
						response.addJavaScript(""A|alert('Correct');A();"");
						
					}
				});
			}
		};		
		add(correctexpression);

but then generated JavaScript will be 

INFO:
<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><evaluate><![CDATA[(function(){A|alert('Correct');A();})();]]></evaluate><priority-evaluate><![CDATA[(function(){A|alert('Correct');A();})();]]></priority-evaluate><evaluate><![CDATA[(function(){A|alert('Correct');A();})();]]></evaluate></ajax-response>
ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: ReferenceError: A is not defined, text: (function(){A|alert('Correct');A();})();
ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: ReferenceError: A is not defined, text: (function(){A|alert('Correct');A();})();
ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: ReferenceError: A is not defined, text: (function(){A|alert('Correct');A();})();
INFO: Response processed successfully.
INFO: refocus last focused component not needed/allowed
INFO: focus removed from correctexpression2
INFO: focus set on wicketDebugLink
INFO: focus removed from wicketDebugLink


Then because of the ""anonymous"" function (function(){ ...})(); around expression it will  never match regular expression. So, feature A|...A(); is not really supported on 6.x
",18/Feb/13 10:43;reiern70;wickstart,"18/Feb/13 11:05;svenmeier;Thanks Ernesto for analysing this. I wonder what this feature was used for, but we should track this in a new issue.
","18/Feb/13 11:12;mgrigorov;I also don't know the roots of something|code feature. I've just migrated it from 1.5.x and even added JS tests for it.

And yes, it seems I broke it with the introduction of the anonymous function which is used to minimize the number of eval's to 1 and to keep the variables local for each prepend/append script.","18/Feb/13 11:13;reiern70;Sven.

It is a pity that no comment was put on code about why this special case was needed... or a reference to  a JIRA issue.  Maybe someone can remember why was this introduced?

I guess ""original  problem"" is also present on 1.5.x... I will try to test that later on today.  ","18/Feb/13 15:04;ptitjes;Hi,

I did not see this issue and commented on the issue that broke the use of identifier|jscode as permited by wicket-ajax-jquery.js (see https://issues.apache.org/jira/browse/WICKET-4881)

Let me give an explanation of how I use this feature:

Lets say you have a open modal window (ala bootstrap) you want to close it, change its content and reopen it in a single ajax request. For that you need to delay the component replacement until the javascript effect that closes the modal window. That animation is asynchronous, so the only way to do that is to register for the event triggered when the modal is effectively closed and call the notify() callback so that FunctionsExecuter can continue its processing.

The identifier|jscode feature can not be called anymore since https://github.com/apache/wicket/commit/cbf76d0e8c355876e302699c0975971773941ae9 as the code is concatenated and each evaluation encapsulated in a '(function() { jscode })();' statement.

A good solution for me would be:

1) Introduce a protected JavaScriptFragment object in AbstractAjaxResponse

protected class JavaScriptFragment {
	private String notifyCallbackName;
	private String script;
	// + constructors and getters
}

2) Provide new APIs on IJavascriptResponse:

	void prependJavaScript(String script);
	void prependJavaScript(String notifyCallbackName, String script);
	void appendJavaScript(String script);
	void appendJavaScript(String notifyCallbackName, String script);

and deprecate addJavascript(..) as this is not very descriptive of where the script goes in the response (also its current implementation does not take profit of script concatenation).

3) Make AbstractAjaxResponse collect JavaScriptFragments and decide itself what it can concatenate (it is not the responsability of AjaxXmlResponse to do so is a json-based response would have the same problems with browser-specific limited call stacks). We can concatenate scripts without callback use but can't concatenate scripts with explicit callbacks, right ?

4) Make AbstractAjaxResponse define
	protected abstract void writePriorityEvaluation(Response response, String script, String callbackName (may be null))
	protected abstract void writeNormalEvaluation(Response response, String script, String callbackName (may be null))

and use that in writeTo(..) to pass concatenated scripts or individual script with callback name.

What do you think ? We could also (not disjunctive with the solution above) introduce additional APIs in wicket-ajax-jquery.js processEvaluation() to handle something like this:

<[priority-]evaluate>
function(scripts) {
	scripts.queueAsync(function() { jscode });
	scripts.queueAsync(function() { jscode });
	scripts.queueSync(function(notify) { jscode that calls notify });
	scripts.queueAsync(function() { jscode });
	scripts.queueAsync(function() { jscode });
	// ....
}
</[priority-]evaluate>

Such a queue would then be processed serially avoided the IE problem and still providing the possibility to delay component replacement.

Any thoughts ?",18/Feb/13 15:11;ptitjes;We could also revert the concatenation stuff and enhance the processing of evaluations in wicket-ajax-jquery.js so that it can concatenate several evaluations that do not use notify callbacks at runtime. Also a good thing would be to not use a regexp but use an attribute to convey the notify callback name.,"20/Feb/13 08:20;mgrigorov;I think Ernesto's patch should not be applied.
Wicket gives the control to the application code by giving it the 'notify' function as argument. The application code should assure that it is called. I.e. it should wrap its code in try/finally.

The problem with the broken functionality in Wicket 6.x will be addressed soon.","20/Feb/13 09:15;reiern70;Martin.

Ok... Maybe what is missing is improving the JavaScript doc to state this directly... ",21/Feb/13 14:20;mgrigorov;The code is fixed and javadoc is added to AjaxRequestTarget #prepend and #appendJavaScript,"21/Feb/13 14:42;reiern70;Martin,

Thanks for fixing this! Just one comment. Would it make sense to put some more info on JavaScript so that future developers know why this is needed? Something like  


				// test if the javascript is in form of identifier|code
				// if it is, we allow for letting the javascript decide when the rest of processing will continue
				// by invoking identifier();
				// This is used for the cases when control of AJAX processing want to be transferred to user's code. 
				// E.g. Users want to execute an effect and after that effect finishes continue with AJAX processing.
				// see WICKET-5039 for more explanations.


So,  future developers will not have to loose time wondering why this ""cryptic"" feature is needed. 

Cheers,

Ernesto","21/Feb/13 15:05;svenmeier;Couldn't we just let go of this strange ""|"" syntax?
On the server side If #appendJavaScript()'s argument matches a function declaration, just leave it that way.
In the browser If this function has a parameter, pass the notify method to it and let is trigger it.","21/Feb/13 15:13;mgrigorov;@Ernesto: I've updated the comments in the JS code.

@Sven: I agree that this will look nicer but since it is an API break we can do it as early as 7.0.
And still the code in wicket-ajax-jquery.js will have to check for ""function()"" vs. ""function(functionName)"" and pass 'notify' only in the second case and call it in the first case.",21/Feb/13 15:14;mgrigorov;A blog article with demo app: http://wicketinaction.com/2013/02/replace-components-with-animation/,"21/Feb/13 21:56;ptitjes;Martin, Thank you very much for your very fast action, that will help us a lot!

If you'd like some ideas to enhance all this for 7.0, i'd say a must-have would be to optionally be able to manually trigger individual DOM replacements directly from the produced Javascript code. Having all the components replaced in one shot is often a problem when you write applications with lots dynamic effects.","22/Feb/13 07:38;mgrigorov;Hi Didier,

Can you share your ideas in the mailing lists ? With as much details as possible.
If you are not subscribed please send them to mgrigorov at apache org and I'll send them on behalf of you.

Or see https://cwiki.apache.org/confluence/display/WICKET/Ideas+for+Wicket+7.0#IdeasforWicket7.0-Maketransitionspossible%2FeasywhenreplacingcomponentsusingAjax%2FPush - it sounds like what you provide.",,,,,,,,,,,,,,,,,,
"TabbedPanel CSS ""last"" is wrong if last step is not visible",WICKET-4658,12599004,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,svenmeier,svenmeier,svenmeier,16/Jul/12 17:53,11/Apr/13 13:50,13/Mar/19 23:17,11/Apr/13 13:50,6.0.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-extensions,,,,,,,0,,,,,,,"TabbedPanel renders a ""last"" CSS class for the last tab, this fails however if the last tab is not visible.",,,,,,,,,,,,,,,,,,,,,,19/Nov/12 08:20;cedricgatay;fix-WICKET-4658.patch;https://issues.apache.org/jira/secure/attachment/12554138/fix-WICKET-4658.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-11-18 13:12:50.22,,,no_permission,,,,,,,,,,,258486,,,Thu Apr 11 13:50:44 UTC 2013,,,,,,0|i0ktn3:,119619,,,,,,,,18/Nov/12 13:12;cedricgatay;I made a github pull request to fix this bug : https://github.com/apache/wicket/pull/21. Don't hesitate to tell me if a patch is preferred.,"19/Nov/12 07:48;mgrigorov;Please attach the patch to this tikcet.
Thanks!","19/Nov/12 08:20;cedricgatay;Here is the patch corresponding to this bug.
I will close the unnecessary Github pull request.",11/Apr/13 13:49;svenmeier;Thanks Cedric! I've applied the patch with minor changes.,11/Apr/13 13:50;svenmeier;last tab is now correctly marked via css,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket-atmosphere version mismatch with wicket-example-jar,WICKET-4871,12617016,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,dashorst,jsyrjala,jsyrjala,20/Nov/12 22:01,22/Feb/13 09:09,13/Mar/19 23:17,22/Feb/13 09:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.7.0,,,wicket-atmosphere,wicket-examples,,,,,,0,,,,,,,"wicket-examples-jar refers to wicket-atmosphere 0.5-SNAPSHOT, when wicket-atmosphere is actually 0.6-SNAPSHOT

https://github.com/apache/wicket/blob/master/wicket-experimental/wicket-examples-parent/wicket-examples-jar/pom.xml#L35

https://github.com/apache/wicket/blob/master/wicket-experimental/wicket-atmosphere/pom.xml#L27",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-11-21 09:14:42.911,,,no_permission,,,,,,,,,,,258938,,,Fri Feb 22 09:09:08 UTC 2013,,,,,,0|i0l5xb:,121610,,,,,,,,"21/Nov/12 09:14;papegaaij;I've upgraded the snapshot versions of all experimental modules, but this should be done as part of the release.","22/Feb/13 09:09;mgrigorov;This seems to be stable in the last few releases. 
Closing the ticket.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong charset or screwed up characters in Norwegian properties-file,WICKET-4908,12618728,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,svenmeier,kizer,kizer,04/Dec/12 12:04,04/Dec/12 13:44,13/Mar/19 23:17,04/Dec/12 13:44,6.0.0,6.2.0,6.3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.4.0,,,wicket,,,,,,,0,,,,,,,"In Wicket 6, up to and including 6.3.0, the Application_no.properties file has mangled all the Norwegian special characters (æ,ø and å). Seems to be the only one of the Norwegian properties-files with problems, as far as I could tell.
Edit: Also, the file is in UTF-8-format, which doesn't work...","Windows XP, Jboss 4.3.2",600,600,,0%,600,600,,,,,,,,,,,,,,,04/Dec/12 12:06;kizer;Application_no.properties.fixed;https://issues.apache.org/jira/secure/attachment/12555920/Application_no.properties.fixed,04/Dec/12 12:06;kizer;Application_no.properties.original;https://issues.apache.org/jira/secure/attachment/12555919/Application_no.properties.original,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2012-12-04 13:43:16.727,,,no_permission,,,,,,,,,,,295950,,,Tue Dec 04 13:44:33 UTC 2012,,,,,,0|i143d3:,232007,,,,,,,,04/Dec/12 12:06;kizer;The original file as well as one with the proper characters attached,"04/Dec/12 13:38;kizer;Haha... ALSO: the files are in UTF-8 encoding, which simply does not work... (Both the original and the ""fixed"" one are UTF-8).
I completely forgot that .properties files can't be UTF-8 and spent several hours trying to figure out why it didn't display correctly with UTF-8...","04/Dec/12 13:43;mgrigorov;Yes, the .properties.xml format is preferred for languages which use non-ASCII characters.","04/Dec/12 13:44;svenmeier;The file is using unicode escapes now.

Perhaps you could take a look at WICKET-4890 for Norwegian too?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Download page shows old version 6.0.x under Branches,WICKET-4807,12610766,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,dashorst,aakoch,aakoch,07/Oct/12 19:59,08/Oct/12 08:54,13/Mar/19 23:17,08/Oct/12 08:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,,,,0,documentation,,,,,,Under Branches it says the master branch is version 6.0.x and it should be 6.x.,Web,60,60,,0%,60,60,,,,,,,,,,,,,,,07/Oct/12 20:00;aakoch;fix-WICKET-4807.patch;https://issues.apache.org/jira/secure/attachment/12548174/fix-WICKET-4807.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,244984,,,Sun Oct 07 20:00:09 UTC 2012,,,,,,0|i05xbr:,32498,,,,,,,,07/Oct/12 20:00;aakoch;Patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatePickerTest fails because of java inconsistensy on localizing March german shortname Mrz vs Mär,WICKET-4796,12609766,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,svenmeier,mikko,mikko,01/Oct/12 16:20,02/Oct/12 21:13,13/Mar/19 23:17,02/Oct/12 21:13,6.0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.2.0,,,wicket-datetime,,,,,,,0,,,,,,,"The Oracle java7 and older return Mrz as german march short name.
The Oracle java8 seems to have switched to the official (see http://de.wikipedia.org/wiki/Vorlage:Monat_Name-Nummer ) three letter short name Mär.

Some googling showed that IBM java has used the offical short name at least since 2008.

I propose as a fix that the non-english test language is changed to something other than Locale.GERMAN in DatePickerTest method myTestExecution. For example Locale.ITALIAN, which has had consistent localization in Java world. Plus of course the reference data in DatesPage1_ExpectedResult.html needs to be regenerated.",java 8,,,,,,,,,,,,,,,,,,,,,01/Oct/12 16:23;mikko;fix-WICKET-4796.patch;https://issues.apache.org/jira/secure/attachment/12547230/fix-WICKET-4796.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2012-10-02 21:13:03.314,,,no_permission,,,,,,,,,,,257691,,,Tue Oct 02 21:13:03 UTC 2012,,,,,,0|i0k84v:,116135,,,,,,,,01/Oct/12 16:23;mikko;Patch to switch test to use Italian instead of German,"02/Oct/12 21:13;svenmeier;Fixed, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session object JavaDocs,WICKET-4631,12595899,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,kulnor,kulnor,26/Jun/12 12:06,26/Jun/12 12:13,13/Mar/19 23:17,26/Jun/12 12:13,1.5.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.8,,,wicket,,,,,,,0,javadoc,,,,,,"Noticed the JavaDocs for the Session object at http://wicket.apache.org/apidocs/1.5/org/apache/wicket/Session.html
mentions that
""Access via RequestCycle - The Session for a RequestCycle can be retrieved by calling RequestCycle#getSession().""
but the getSession methods is not available on the RequestCycle object (I'm using one of the subsequent method)
",n/a,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-06-26 12:13:18.843,,,no_permission,,,,,,,,,,,257739,,,Tue Jun 26 12:13:18 UTC 2012,,,,,,0|i0k8fj:,116183,,,,,,,,"26/Jun/12 12:13;mgrigorov;Fixed in 1.5.x.
It has been fixed already in 6.x.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource decoration fail on wicket examples,WICKET-4451,12546540,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,raspoutine,raspoutine,15/Mar/12 08:32,15/Mar/12 10:09,13/Mar/19 23:17,15/Mar/12 10:09,1.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.6,6.0.0-beta1,,wicket-examples,,,,,,,0,,,,,,,I think you have to add merged-resources to PackageResourceGuard,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,231698,,,2012-03-15 08:32:12.0,,,,,,0|i00vpb:,3068,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ApplicationListenerCollection onBeforeDestroyed calls onAfterInitialized for each of the listeners,WICKET-4406,12542376,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,svenmeier,reiern70,reiern70,13/Feb/12 08:24,14/Feb/12 07:39,13/Mar/19 23:17,14/Feb/12 07:39,1.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.5,6.0.0-beta1,,wicket,,,,,,,0,,,,,,,"On class 

public class ApplicationListenerCollection extends ListenerCollection<IApplicationListener>
	implements
		IApplicationListener
{

	....

	public void onBeforeDestroyed(final Application application)
	{
		reversedNotifyIgnoringExceptions(new INotifier<IApplicationListener>()
		{
			public void notify(IApplicationListener listener)
			{
				listener.****onAfterInitialized***(application);
			}
		});
	}

}

shouldn't it be 

public void onBeforeDestroyed(final Application application)
	{
		reversedNotifyIgnoringExceptions(new INotifier<IApplicationListener>()
		{
			public void notify(IApplicationListener listener)
			{
				listener.****onBeforeDestroyed***(application);
			}
		});
	}

?",any,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-02-14 07:39:22.752,,,no_permission,,,,,,,,,,,227663,,,Tue Feb 14 07:39:22 UTC 2012,,,,,,0|i00vtz:,3089,,,,,,,,14/Feb/12 07:39;svenmeier;Fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTransformerBehavior: java.io.NotSerializableException: org.apache.wicket.protocol.http.BufferedWebResponse,WICKET-4175,12528865,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,zbigniewruchala,zbigniewruchala,26/Oct/11 12:17,26/Oct/11 12:53,13/Mar/19 23:17,26/Oct/11 12:53,1.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.3,,,wicket,wicket-devutils,,,,,,0,,,,,,,"AbstractTransformerBehavior#originalResponse is not serializable what causes the following exception while trying to use DebugBar component (sizeOf(object)).

WARN  - WicketObjects              - Unable to determine object size: [Page class = com.mycompany.HomePage, id = 0, render count = 1]
java.io.NotSerializableException: org.apache.wicket.protocol.http.BufferedWebResponse
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518)

...
	at org.apache.wicket.util.lang.WicketObjects$SerializingObjectSizeOfStrategy.sizeOf(WicketObjects.java:124)
	at org.apache.wicket.util.lang.WicketObjects.sizeof(WicketObjects.java:416)

The simplest solution would be to add 'transient'

private transient Response originalResponse;
",,,,,,,,,,,,,,,,,,,,,,26/Oct/11 12:19;zbigniewruchala;myproject.tgz;https://issues.apache.org/jira/secure/attachment/12500873/myproject.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-10-26 12:35:34.333,,,no_permission,,,,,,,,,,,214725,,,Wed Oct 26 12:53:29 UTC 2011,,,,,,0|i0k93j:,116291,,,,,,,,"26/Oct/11 12:35;mgrigorov;Funny. The field is null-ified at org.apache.wicket.markup.transformer.AbstractTransformerBehavior.detach(Component).
For some reason this method is not called before the serialization.","26/Oct/11 12:53;mgrigorov;Fixed with r1189179.

It was the DebugBar trying to calculate the page's size.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove -moz-opacity from modal.css,WICKET-4132,12527221,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,oele,oele,14/Oct/11 16:10,18/Oct/11 06:54,13/Mar/19 23:17,18/Oct/11 06:54,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket-extensions,,,,,,,0,,,,,,,"ModalWindow's modal.css contains ""-moz-opacity:0.1;"". 

-moz-opacity was a Mozilla specific property that was deprecated in Firefox 0.9. Since Firefox 3.5 the property was completely removed. 

It is now just generating messages in the error console. Please remove this from modal.css :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,85607,,,2011-10-14 16:10:37.0,,,,,,0|i0k97z:,116311,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
retrying of exception handling,WICKET-4135,12527334,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,freemant,freemant,16/Oct/11 09:30,18/Oct/11 06:48,13/Mar/19 23:17,16/Oct/11 15:11,1.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.2,,,wicket,,,,,,,0,,,,,,,"In the executeExceptionRequestHandler() method of RequestCycle, the code reads:

				IRequestHandler next = handleException(e);
				if (handler != null)
				{
					executeExceptionRequestHandler(next, retryCount - 1);
					return;
				}

I suspect that it should be:

				IRequestHandler next = handleException(e);
				if (next != null) // should check ""next"" instead of ""handler""
				{
					executeExceptionRequestHandler(next, retryCount - 1);
					return;
				}
",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,87455,,,2011-10-16 09:30:39.0,,,,,,0|i0k97j:,116309,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Onclick Script displayed as Link Text,WICKET-3773,12509341,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,bht@actrix.gen.nz,bht@actrix.gen.nz,06/Jun/11 09:35,17/Sep/11 18:22,13/Mar/19 23:17,17/Sep/11 18:22,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.1,,,wicket,,,,,,,0,,,,,,,"Wicket changes an anchor that has an onclick attribute in a way that breaks it:

<a href=""google.com"" onclick=""if(history.length > 1){history.back();return false;}else{return true;}"">Back to Google</a>
becomes:
<a href=""google.com"" onclick="""" if="""" history.length=""""> 1){history.back();return false;}else{return true;}"">Back to Google</a>",,,,,,,,,,,,,,,,,,,,,,06/Jun/11 09:38;bht@actrix.gen.nz;Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12481553/Quickstart.zip,07/Jun/11 09:11;mgrigorov;WICKET-3773.patch;https://issues.apache.org/jira/secure/attachment/12481673/WICKET-3773.patch,09/Aug/11 13:15;bitstorm;cumulativePatch.txt;https://issues.apache.org/jira/secure/attachment/12489841/cumulativePatch.txt,08/Aug/11 13:07;bitstorm;valueAttributeCharsWithTest.txt;https://issues.apache.org/jira/secure/attachment/12489683/valueAttributeCharsWithTest.txt,,,,,4.0,,,,,,,,,,,,,,,,,,,2011-06-06 09:57:17.009,,,no_permission,,,,,,,,,,,60316,,,Tue Aug 09 13:14:57 UTC 2011,,,,,,0|i0ka2v:,116450,,,,,,,,06/Jun/11 09:38;bht@actrix.gen.nz;Quick start,"06/Jun/11 09:57;mgrigorov;Wicket needs to ""relativize"" all relative links so they keep work in proxy enviroment.
Since your href is relative (href=""google.com"") it is confused that it should relativize it.
Use href=""http://google.com"" and everything is working again.","06/Jun/11 10:18;bht@actrix.gen.nz;I get this in different scenarios, even with wicket links such as:

<h2><a wicket:id=""backToListItem"" onclick=""if(history.length > 0){history.back();return false;}else{return true;}"">Back</a></h2>

which renders as:

<h2><a onclick="""" if="""" history.length="""" href=""?wicket:interface=:3:backToListItem::ILinkListener::""> 0){history.back();return false;}else{return true;}"">Back</a></h2>

I can't see a difference, and I don't know what confuses Wicket. Would it be possible to get Wicket to not get confused?
","06/Jun/11 10:58;mgrigorov;That's why I didn't close the ticket :-)
Definitely there is something wrong producing such kind of html ""attributes"".","06/Jun/11 11:12;mgrigorov;The problem is the ""broken attributes"" is that you use '>' in the attribute value.
Replacing it with &gt; solves the problem.

Please provide a quickstart that demonstrates such invalid attribute value produced by Wicket and I'll reopen the ticket for you.","06/Jun/11 16:10;bitstorm;The problem should be in class XmlPullParser which ""blindly"" searches for closing tag '<' without checking if this tag is inside a tag attribute (like onclick=""..."").",06/Jun/11 18:13;bht@actrix.gen.nz;Thanks for pointing this out. Sure this will happen again. But is it worth fixing this from the performance perspective? Will a better parser be faster?,06/Jun/11 18:33;ivaynberg;does the xml spec require > and < to be escaped inside a quoted attribute value?,06/Jun/11 18:50;akiraly;> is a valid character in an xml attribute value while < is not (needs to be escaped): http://www.w3.org/TR/xml/#NT-AttValue,"06/Jun/11 19:20;ivaynberg;in 1.4 we should add a warning when encountering this in raw markup, while in 1.5 we should try to escape automatically","07/Jun/11 09:11;mgrigorov;Here is a patch that solves the problem for this ticket but breaks 4 other tests.

The problem is that an attribute value can have escaped quotes which will break the calculations.
E.g. 
""<a href='b > a'>"" will be parsed OK, but ""<a href='b \' > a'>"" will fail.
Have fun!",07/Jun/11 09:12;mgrigorov;I think there is no need to log warnings or escape the value. If the parser can properly parse it then there is no need to do anything else.,"07/Jun/11 09:23;bht@actrix.gen.nz;I am not saying you shouldn't have fun, but I start to think I shouldn't have reported this :)",09/Jun/11 19:37;mgrigorov;https://github.com/jhy/jsoup/blob/master/src/test/java/org/jsoup/parser/ParserTest.java#L34,08/Aug/11 08:19;mgrigorov;Take into account the patch in WICKET-3951.,"08/Aug/11 13:06;bitstorm;Hi,

in order evaluate patch from WICKET-3951 more easily, I moved code to FullyBufferedReader class and I created a test case for this class with escaped quotes.",08/Aug/11 13:16;bitstorm;I've attached the new patch (valueAttributeCharsWithTest.txt) here...,09/Aug/11 13:14;bitstorm;I've improved code and test case. The cumulative patch 'cumulativePatch.txt' substitute the previous patch I've attached.,,,,,,,,,,,,,,,,,,,,,
Wrong ASCII Key Code for END Key. AutoComplete not working properly,WICKET-3993,12520058,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,markfred.chen,markfred.chen,25/Aug/11 05:43,13/Sep/11 08:25,13/Mar/19 23:17,25/Aug/11 11:05,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,1.5.1,,wicket,,,,,,,0,AutoCompleteTextField,,,,,,"The ASCII key code for END key is using ""46"". This is wrong. The key code is suppose to be ""35"". However, ""46"" is ""DELETE"" key code. This cause in IE the pressing ""DELETE"" button will not trigger ""onChange"" event.
The bug locates in Object Wicket.ChangeHandler in wicket-ajax.js
This bugs affects all the versions include 1.5.x and 1.4.x.",,300,300,,0%,300,300,,,,,,,,,,,,,,,25/Aug/11 12:36;bitstorm;endCodePatch_1_5.txt;https://issues.apache.org/jira/secure/attachment/12491630/endCodePatch_1_5.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,60783,,,2011-08-25 05:43:04.0,,,,,,0|i0k9kf:,116367,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Javadoc in SimpleAttributeModifier.,WICKET-4040,12522662,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,pedrosans,motlin,motlin,10/Sep/11 22:58,11/Sep/11 00:31,13/Mar/19 23:17,11/Sep/11 00:30,1.5-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,10/Sep/11 22:59;motlin;fix-WICKET-4040.patch;https://issues.apache.org/jira/secure/attachment/12493929/fix-WICKET-4040.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-11 00:31:12.262,,,no_permission,,,,,,,,,,,60942,,,Sun Sep 11 00:31:12 UTC 2011,,,,,,0|i0k9g7:,116348,,,,,,,,11/Sep/11 00:31;pedrosans;Thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE while opening hangman in wicket-examples,WICKET-3952,12518153,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,pedrosans,pedrosans,pedrosans,07/Aug/11 21:54,08/Aug/11 00:00,13/Mar/19 23:17,08/Aug/11 00:00,1.4.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.19,,,wicket-examples,,,,,,,0,,,,,,,"org.apache.wicket.WicketRuntimeException: Exception in rendering component: [Component id = word]
        at org.apache.wicket.Component.renderComponent(Component.java:2763)
        at org.apache.wicket.markup.html.WebComponent.onRender(WebComponent.java:62)
        at org.apache.wicket.Component.render(Component.java:2524)
        at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1461)
        at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1575)
        at org.apache.wicket.Page.onRender(Page.java:1594)
        at org.apache.wicket.Component.render(Component.java:2524)
        at org.apache.wicket.Page.renderPage(Page.java:932)
        at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:261)
        at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
        at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1260)
        at org.apache.wicket.RequestCycle.step(RequestCycle.java:1331)
        at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1438)
        at org.apache.wicket.RequestCycle.request(RequestCycle.java:546)
        at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:486)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:319)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:440)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:326)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:926)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: java.lang.NullPointerException
        at org.apache.wicket.examples.hangman.Guess$1.getObject(Guess.java:50)
        at org.apache.wicket.examples.hangman.Guess$1.getObject(Guess.java:46)
        at org.apache.wicket.Component.getDefaultModelObject(Component.java:1727)
        at org.apache.wicket.Component.getDefaultModelObjectAsString(Component.java:1746)
        at org.apache.wicket.markup.html.basic.Label.onComponentTagBody(Label.java:114)
        at org.apache.wicket.Component.renderComponent(Component.java:2724)
        ... 32 more","IE9, works fine on Chrome",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,65809,,,2011-08-07 21:54:24.0,,,,,,0|i0k9nr:,116382,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Null model for AttributeAppender should not render empty attribute,WICKET-3884,12513481,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,robmcguinness,robmcguinness,11/Jul/11 02:04,26/Jul/11 14:30,13/Mar/19 23:17,26/Jul/11 14:30,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,attributes,,,,,,"I can't think of a reason this would be valid, but passing in null model renders <span class="""">Test</span>.  If previous and new attribute are both null, the component should render cleanly like <span>Test</span>.",,,,,,,,,,,,,,,,,,,,,,11/Jul/11 07:49;mgrigorov;attr-modifier-by-identity.patch;https://issues.apache.org/jira/secure/attachment/12486024/attr-modifier-by-identity.patch,11/Jul/11 02:05;robmcguinness;test-WICKET-3884.patch;https://issues.apache.org/jira/secure/attachment/12486019/test-WICKET-3884.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2011-07-11 07:49:37.222,,,no_permission,,,,,,,,,,,66927,,,Tue Jul 19 16:34:02 UTC 2011,,,,,,0|i0k9tj:,116408,,,,,,,,11/Jul/11 02:05;robmcguinness;Failing test case added,"11/Jul/11 07:49;mgrigorov;While working on this I'd like to ask about the checks for VALUELESS_ constants: isn't it better to use checks for equality by identity instead of .equals() ?

With .equals() it is not possible to use values 'VA_ADD' and 'VA_REMOVE'. Using new String()  and == will solve this. The constants are static so this shouldn't be a problem for deserialization. What do you think ?","19/Jul/11 15:36;mgrigorov;I think special values VA_ADD and VA_REMOVE should be deprecated.
If AttributeModifier should be able to remove an attribute then explicit #remove(String) method should be added.","19/Jul/11 16:34;pedrosans;+1 to deprecate VA_ADD and VA_REMOVE in benefit of #remove(String), it is better to read.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"o.a.w.spring.test.ApplicationContextMock.getBean(String, Object[]) method signature is incorrect",WICKET-3864,12512691,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,akiraly,akiraly,04/Jul/11 05:31,04/Jul/11 08:35,13/Mar/19 23:17,04/Jul/11 08:35,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket-spring,,,,,,,0,,,,,,,"During wicketstuff phonebook compilation the following warning is logged:
[WARNING] [...]/core/jdk-1.5-parent/phonebook/src/test/java/wicket/contrib/phonebook/web/MockContext.java:[26,7] getBean(java.lang.String,java.lang.Object[]) in org.apache.wicket.spring.test.ApplicationContextMock cannot implement getBean(java.lang.String,java.lang.Object...) in org.springframework.beans.factory.BeanFactory; overriding method is missing '...'
",,,,,,,,,,,,,,,,,,,,,,04/Jul/11 05:33;akiraly;WICKET-3864.patch;https://issues.apache.org/jira/secure/attachment/12485117/WICKET-3864.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-04 08:35:20.327,,,no_permission,,,,,,,,,,,69323,,,Mon Jul 04 08:35:20 UTC 2011,,,,,,0|i0k9vz:,116419,,,,,,,,04/Jul/11 05:33;akiraly;Patch to change the method signature.,04/Jul/11 08:35;mgrigorov;Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"StoredResponsesMapTest Random.nextInt takes only positive integer arguments, not 0",WICKET-3860,12512649,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,emberson,emberson,02/Jul/11 21:55,03/Jul/11 11:30,13/Mar/19 23:17,03/Jul/11 11:30,1.5-RC5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"In the test StoredResponsesMapTest the line:
          String key2 = keys.get(rnd.nextInt(keys.size() - 1));
has a problem since the integer argument to Random.nextInt can not be 0, but the keys
List has size 1.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,69347,,,2011-07-02 21:55:51.0,,,,,,0|i0k9wv:,116423,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockHttpServletRequest getRequestURL and getRequestURI should not return query parameters,WICKET-3825,12511167,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,bruno.borges,bruno.borges,21/Jun/11 21:17,22/Jun/11 20:15,13/Mar/19 23:17,22/Jun/11 20:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,,,,0,,,,,,,"According to HttpServletRequest spec, method getRequestURL should not return query parameters.

This is making us to code odd unit tests because we try to reconstruct URLs using getRequestURL and getRequestURI according to the spec.

http://download.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html#getRequestURL()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-06-22 20:15:32.89,,,no_permission,,,,,,,,,,,70230,,,Wed Jun 22 20:15:32 UTC 2011,,,,,,0|i0ka07:,116438,,,,,,,,22/Jun/11 20:15;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
html file are not encoding to utf-8,WICKET-3774,12509389,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,dutrieux,dutrieux,06/Jun/11 20:37,07/Jun/11 07:36,13/Mar/19 23:17,07/Jun/11 07:36,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,wicket-auth-roles,,,,,,,0,accent,utf-8,,,,,"The file SignOutPage_fr.html (all html file) is not properly encoding to utf-8, the accent ""Déconnexion"" is not display correctly on browser.

",Windows 7 x64 & firefox 4.0.1,,,,,,,,,,,,,,,,,,,,,06/Jun/11 20:39;dutrieux;ASF.LICENSE.NOT.GRANTED--deconnexion.jpg;https://issues.apache.org/jira/secure/attachment/12481621/ASF.LICENSE.NOT.GRANTED--deconnexion.jpg,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,71840,,,2011-06-06 20:37:51.0,,,,,,0|i0ka2n:,116449,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileUpload writeToTempFile() method throws NPE for sessionless requests,WICKET-3715,12507255,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,pedrosans,kgignatyev,kgignatyev,15/May/11 06:38,16/May/11 02:34,13/Mar/19 23:17,16/May/11 02:34,1.4.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.18,1.5-RC5,,,,,,,,,0,,,,,,,"I have created stateless page with stateless form containing FileUploadField, however when I tried to post file to it, NPE was thrown.

The issue is caused by method FileUpload#writeToTempFile() method trying to use session id as temp file prefix. 

Workaround: create temp file manually and use method FileUpload#writeToFile( myTempFile)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204466,,,2011-05-15 06:38:02.0,,,,,,0|i0ka8n:,116476,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Component should use the new renderHead(Component, IHeaderResponse) instead of the old renderHead(IHeaderResponse)",WICKET-3655,12505764,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,akiraly,akiraly,29/Apr/11 08:06,07/May/11 18:50,13/Mar/19 23:17,07/May/11 18:50,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC5,,,wicket,,,,,,,0,,,,,,,This is not causing any errors but for consistency the framework should probably call the IHeaderContributor method instead of the delegated custom method.,,,,,,,,,,,,,,,,,,,,,,29/Apr/11 08:07;akiraly;WICKET-3655.patch;https://issues.apache.org/jira/secure/attachment/12477735/WICKET-3655.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-05-03 18:03:36.908,,,no_permission,,,,,,,,,,,204416,,,Wed May 04 12:35:05 UTC 2011,,,,,,0|i0kadj:,116498,,,,,,,,29/Apr/11 08:07;akiraly;Attaching patch. Also contains a javadoc fix as the old method is now not inheriting the javadoc.,"03/May/11 18:03;mgrigorov;I agree that the current state is weird, but passing 'this' to #renderHead(Component, IHeaderResponse) also makes me feel nervous.
But at the end I think passing 'this' is better.
Other devs: opinion?","04/May/11 12:35;pedrosans;The consistency can be improved by assembling the component and IHeaderResponse in an agrregation type like IResource.Attributes do to assemble the request and response.
Pass an object instance to itself as method parameter looks weird.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BookmarkablePageLink :: setParameter int versions missing,WICKET-3636,12504996,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,zwiep,zwiep,22/Apr/11 18:29,03/May/11 21:03,13/Mar/19 23:17,03/May/11 18:18,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,,,,,,,,0,,,,,,,"the new URL handling & page parameters allow to use an integer index (great!)
however this has not been implemented in BookmarkablePageLink, so this needs to be added

	private void setParameterImpl(int key, Object value)
	{
		if (parameters == null)
		{
			parameters = new PageParameters();
		}
		parameters.set(key, value);
	}

and 

	public MyBookmarkablePageLink<T> setParameter(final int property, final String value)
	{
		setParameterImpl(property, value);
		return this;
	}


(and the same for int and long values)



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-04-26 07:50:59.671,,,no_permission,,,,,,,,,,,204399,,,Tue May 03 21:03:53 UTC 2011,,,,,,0|i0kafj:,116507,,,,,,,,"26/Apr/11 07:50;mgrigorov;I'd rather deprecate current setParameter() method (all its overloaded versions).
There is getPageParameters() which can be used instead.
No need to duplicate methods.","30/Apr/11 17:03;zwiep;Martin, good point, I agree.



","03/May/11 18:18;mgrigorov;The existing methods #setParameter() are deprecated since r1099169.
The new way is: getPageParameters().set(). This way there is no need to duplicate the API in two places","03/May/11 20:46;zwiep;One issue that pops up now is that you always need to initialize PageParameters when calling the constructor since there is no setPageParameters method, ie super(id, clazz, new PageParameters()); which is a bit inconvenient. 




","03/May/11 20:50;mgrigorov;First call of #getPageParameters() will initialize it for you if it is not already.
See the change in ""Subversion Commits"" tab.","03/May/11 21:03;zwiep;Ah great, thanks! 



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in Javadoc of IAuthentificationStrategy,WICKET-3634,12504973,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,splitshade,splitshade,22/Apr/11 12:08,22/Apr/11 19:20,13/Mar/19 23:17,22/Apr/11 19:20,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"In the Javadoc of IAuthentificationStrategy, there is the following line:

The interface of an authorization strategy

This must be changed to authentification strategy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204397,,,2011-04-22 12:08:42.0,,,,,,0|i0kafr:,116508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Application_pt.properties,WICKET-3619,12504488,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,jdonnerstag,jdonnerstag,17/Apr/11 15:26,17/Apr/11 15:26,13/Mar/19 23:17,17/Apr/11 15:26,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,,,,0,,,,,,,"
I had my portuguese partner look at the Application_pt_BR.properties file as
on her portuguese laptop the standard english messages showed up. According
to her the pt_BR file is also completely valid for
Applicaiton_pt.properties. Can I suggest the file is just copied over to
that name?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204383,,,2011-04-17 15:26:18.0,,,,,,0|i0kah3:,116514,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ContainerFeedbackMessageFilter should use Objects.equal for equality checking,WICKET-3610,12504036,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,pete,akiraly,akiraly,12/Apr/11 11:11,13/Apr/11 18:35,13/Mar/19 23:17,13/Apr/11 18:35,1.5-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC4,,,wicket,,,,,,,0,,,,,,,"In its accept() method ContainerFeedbackMessageFilter currenlty uses ""container == message.getReporter();"" but a sibling class ComponentFeedbackMessageFilter uses ""Objects.equal(component, message.getReporter());"".

Probably both should behave the same way in this.",,,,,,,,,,,,,,,,,,,,,,12/Apr/11 11:12;akiraly;WICKET-3610.patch;https://issues.apache.org/jira/secure/attachment/12476109/WICKET-3610.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-13 18:34:52.334,,,no_permission,,,,,,,,,,,204377,,,Wed Apr 13 18:34:52 UTC 2011,,,,,,0|i0aodz:,60224,,,,,,,,12/Apr/11 11:12;akiraly;Attaching patch.,13/Apr/11 18:34;pete;Fixed. Thanks for reporting!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in site : Commerical instead of Commercial,WICKET-3546,12501980,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,isammoc,isammoc,21/Mar/11 20:59,27/Mar/11 20:10,13/Mar/19 23:17,27/Mar/11 20:10,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,,,,0,documentation,site,typo,,,,"At this adress : http://wicket.apache.org/help/
We can see the title of last paragraph is ""Commerical Support"" instead of ""Commercial Support""",web browser,600,600,,0%,600,600,,,,,,,,,,,,,,,21/Mar/11 21:26;isammoc;common.patch;https://issues.apache.org/jira/secure/attachment/12474231/common.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204318,,,Mon Mar 21 21:26:41 UTC 2011,,,,,,0|i0kaon:,116548,,,,,,,,"21/Mar/11 21:26;isammoc;This patch is relative to ""common"" folder.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AJAX with prototype explample not working at IE,WICKET-3466,12499375,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,pedrosans,pedrosans,pedrosans,22/Feb/11 17:49,21/Mar/11 19:55,13/Mar/19 23:17,21/Mar/11 19:55,1.4.16,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,wicket-examples,,,,,,,0,,,,,,,"The AJAX with prototype example increment the click count only once, at the second click IE use the cached response rather than send a new one.
Link to example page:
http://localhost:8080/wicket-examples/prototype/",IE8,,,,,,,,,,,,,,,,,,,,,22/Feb/11 19:22;pedrosans;WICKET-3466.patch;https://issues.apache.org/jira/secure/attachment/12471656/WICKET-3466.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-09 08:39:08.728,,,no_permission,,,,,,,,,,,204251,,,Wed Mar 09 08:39:08 UTC 2011,,,,,,0|i0kawf:,116583,,,,,,,,22/Feb/11 19:00;pedrosans;Patch down porting the WebResponse#disableCaching method to 1.4 because it set more secure anti-cache directives at response header and changing the ComponentRequestTarget#responde method to disable the caching since the majority of use cases need so.,09/Mar/11 08:39;ivaynberg;patch looks good,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc typo in PropertyModel,WICKET-3528,12501258,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,chrismattmann,chrismattmann,12/Mar/11 18:45,13/Mar/11 19:36,13/Mar/19 23:17,13/Mar/11 19:36,1.4.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,wicket,,,,,,,0,javadoc,PropertyModel,typo,wicket,,,I found a small typo in PropertyModel's class level javadoc. Here's a patch to fix it.,reading the docs online for 1.4,,,,,,,,,,,,,,,,,,,,,12/Mar/11 18:48;chrismattmann;WICKET-3528.Mattmann.031211.patch.txt;https://issues.apache.org/jira/secure/attachment/12473479/WICKET-3528.Mattmann.031211.patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-03-13 19:36:09.026,,,no_permission,,,,,,,,,,,204304,,,Sun Mar 13 19:36:09 UTC 2011,,,,,,0|i0kapj:,116552,,,,,,,,12/Mar/11 18:48;chrismattmann;- simple patch,"13/Mar/11 19:36;mgrigorov;Fixed.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upload example failing at localhost on IE,WICKET-3467,12499382,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,pedrosans,pedrosans,22/Feb/11 18:14,09/Mar/11 08:30,13/Mar/19 23:17,09/Mar/11 08:30,1.4.16,1.5-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,,,,,,,,0,,,,,,,"IE is sending the full file path as filename property in the Content-disposition request parameter when the example page is accessed on localhost, and UploadPage is expecting only the file name.

Link to example:
http://localhost:8080/wicket-examples/upload/single",IE8,,,,,,,,,,,,,,,,,,,,,28/Feb/11 01:51;pedrosans;WICKET-3467.patch;https://issues.apache.org/jira/secure/attachment/12472136/WICKET-3467.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204252,,,Mon Feb 28 01:51:03 UTC 2011,,,,,,0|i0kaw7:,116582,,,,,,,,28/Feb/11 01:51;pedrosans;patch fixing the bug by using the normalized the file name parameter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form Code causes Error in ValidatorFilter,WICKET-3507,12500488,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,bht@actrix.gen.nz,bht@actrix.gen.nz,05/Mar/11 01:24,09/Mar/11 05:47,13/Mar/19 23:17,09/Mar/11 05:47,1.4.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,,,wicket,,,,,,,0,,,,,,,"I am using https://github.com/dashorst/wicket-stuff-markup-validator
as recommended at http://wicketinaction.com/2009/06/wicket-html-validator-12/

Works fine with 1.4.15. In 1.4.16 I am getting an error with form code as follows:

XHTML errors - toggle display - close 

    * Line 43 Error: (43, 313) Attribute value ""signInPanel:signInForm_hf_0"" of type ID must be an NCName when namespaces are enabled.
                  <form action=""login/wicket:interface/:1:signInPanel:signInForm::IFormSubmitListener::"" id=""signInForm1"" method=""post""><div style=""width:0px;height:0px;position:absolute;left:-100px;top:-100px;overflow:hidden""><input type=""hidden"" name=""signInPanel:signInForm_hf_0"" id=""signInPanel:signInForm_hf_0"" /></div>


1.4.15: name=""id1_hf_0"" id=""id1_hf_0""
1.4.16: name=""signInPanel:signInForm_hf_0"" id=""signInPanel:signInForm_hf_0""



I wonder what the new recommended method is for compatibility.

I am using

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
     ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html
      xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:wicket=""http://wicket.apache.org/""
      xml:lang=""en""
      lang=""en"">
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-03-06 10:21:06.056,,,no_permission,,,,,,,,,,,204287,,,Sun Mar 06 10:21:06 UTC 2011,,,,,,0|i0karb:,116560,,,,,,,,06/Mar/11 10:21;mgrigorov;Caused by: http://svn.apache.org/viewvc/wicket/branches/wicket-1.4.x/wicket/src/main/java/org/apache/wicket/markup/html/form/Form.java?p2=%2Fwicket%2Fbranches%2Fwicket-1.4.x%2Fwicket%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FForm.java&p1=%2Fwicket%2Fbranches%2Fwicket-1.4.x%2Fwicket%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FForm.java&r1=1069543&r2=1069542&view=diff&pathrev=1069543,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interface TestPanelSource isn't named correctly,WICKET-3479,12499603,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,checketts,checketts,24/Feb/11 15:48,27/Feb/11 09:41,13/Mar/19 23:17,27/Feb/11 09:41,1.4.16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.17,1.5-RC3,,wicket,,,,,,,0,,,,,,,"When using WicketTester, the startPanel() method can take a 'TestPanelSource', which is an interface, it should be renamed to ITestPanelSource, to keep it parallel to the similar approach for the ITestPageSource when testing Pages.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-24 17:12:51.222,,,no_permission,,,,,,,,,,,204262,,,Sun Feb 27 09:41:41 UTC 2011,,,,,,0|i0kauv:,116576,,,,,,,,"24/Feb/11 17:12;mgrigorov;This rename will break working user apps for no real gain.
If we decide to do it then only 1.5 should be touched.","24/Feb/11 18:08;checketts;I agree. I merely reported it since it had surprised me when setting up some tests.

How about creating the ITestPanelSource interface in 1.4 and deprecating the mis-named one (and have it extend the new one)? It wouldn't break anyone, but folks can begin using the new name.","27/Feb/11 09:41;mgrigorov;In 1.4.x TestPanelSource is marked as deprecated and just delegates to ITestPanelSource.
In 1.5 TestPanelSource is renamed to ITestPanelSource.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org/apache/wicket/util/tester/BaseWicketTester getWicketAjaxBaseUrlFromLastRequest null tag,WICKET-3461,12499186,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,pedrosans,emberson,emberson,20/Feb/11 23:26,21/Feb/11 08:11,13/Mar/19 23:17,21/Feb/11 04:11,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"In the BaseWicketTester getWicketAjaxBaseUrlFromLastRequest's do-while loop,
what happens if the tag variable actually is null? Gracefully exit the do-while loop?
I think not.",all,,,,,,,,,,,,,,,,,,,,,21/Feb/11 00:14;pedrosans;WICKET-3461.patch;https://issues.apache.org/jira/secure/attachment/12471536/WICKET-3461.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-02-20 23:55:18.944,,,no_permission,,,,,,,,,,,204246,,,Mon Feb 21 00:14:25 UTC 2011,,,,,,0|i0kax3:,116586,,,,,,,,"20/Feb/11 23:55;pedrosans;Hi Richard, this method should fail if tag == null","21/Feb/11 00:06;emberson;It fails by throwing a NullPointerException. The do-while loop test is
never executed if tag == null.

Is that ok?

Richard


-- 
Quis custodiet ipsos custodes
","21/Feb/11 00:14;pedrosans;Not good, NPE is not informative, see if the attached patch is good.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler equals not Symmetric,WICKET-3423,12497702,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,emberson,emberson,04/Feb/11 17:20,11/Feb/11 17:10,13/Mar/19 23:17,11/Feb/11 17:10,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"If A is a ResourceStreamRequestHandler with a null fileName while
B is a ResourceStreamRequestHandler with a non-null fileName but both have the same
resourceStream, then

A.equals(B) == true 
B.equals(A) == false

Is that what is wanted?

  public boolean equals(Object obj)
  {
    if (obj instanceof ResourceStreamRequestHandler)
    {
      ResourceStreamRequestHandler that = (ResourceStreamRequestHandler)obj;
      return resourceStream.equals(that.resourceStream) &&
        ((fileName == null) || fileName.equals(that.fileName));
    }
    return false;
  }

",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-11 17:10:51.81,,,no_permission,,,,,,,,,,,204215,,,Fri Feb 11 17:10:51 UTC 2011,,,,,,0|i0kb0v:,116603,,,,,,,,11/Feb/11 17:10;mgrigorov;Improved with r1069893.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 org/apache/wicket/util/tester/BaseWicketTester.java add cookie twice,WICKET-3431,12497879,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,emberson,emberson,07/Feb/11 18:24,11/Feb/11 16:02,13/Mar/19 23:17,11/Feb/11 16:02,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"Consider the clearCookie method.
The WicketTesterServletWebResponse clearCookie calls the
super class (ServletWebResponse) clearCookie method which
(amoung other things) calls the addCookie method.
Because of polymorphism, this calls the WicketTesterServletWebResponse
addCookie which adds the cookie to the cookies List.
Then the WicketTesterServletWebResponse clearCookie
method adds the cookie a second time to the cookies List.

Unless it is useful to have the same cookie in the List
more than once, the List could be a Set.

private static class WicketTesterServletWebResponse
  extends ServletWebResponse
  mplements IMetaDataBufferingWebResponse {
...
  @Override
  public void addCookie(Cookie cookie) {
    super.addCookie(cookie);
    cookies.add(cookie);
  }                         
  @Override                     
  public void clearCookie(Cookie cookie) {
    super.clearCookie(cookie);  
    cookies.add(cookie);        
  }                             
...
}
public class ServletWebResponse extends WebResponse {
...
  @Override
  public void addCookie(Cookie cookie) {
    httpServletResponse.addCookie(cookie);
  }

  @Override
  public void clearCookie(Cookie cookie) {
    cookie.setMaxAge(0);
    cookie.setValue(null);
    addCookie(cookie);
  }
...
}
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-02-11 16:02:58.861,,,no_permission,,,,,,,,,,,204222,,,Fri Feb 11 16:02:58 UTC 2011,,,,,,0|i0kazr:,116598,,,,,,,,11/Feb/11 16:02;mgrigorov;Fixed with r1069854.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.util.collections.MostRecentlyUsedMap getRemovedValue method returns Object not V,WICKET-3440,12498180,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,emberson,emberson,09/Feb/11 22:19,10/Feb/11 03:48,13/Mar/19 23:17,10/Feb/11 03:48,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"org.apache.wicket.util.collections.MostRecentlyUsedMap getRemovedValue method:
  public Object getRemovedValue()
  {
    return removedValue;
  }
but should be:
  public V getRemovedValue()
  {
    return removedValue;
  }
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204227,,,2011-02-09 22:19:59.0,,,,,,0|i0kayn:,116593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MockServletContext should report major, minor version 2.5 instead of 2.3",WICKET-3396,12496902,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,akiraly,akiraly,27/Jan/11 06:24,27/Jan/11 08:54,13/Mar/19 23:17,27/Jan/11 08:54,1.5-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,Wicket 1.5 needs at least Servlet 2.5 so the mock context should also report minor version 5 instead of 3.,,,,,,,,,,,,,,,,,,,,,,27/Jan/11 06:25;akiraly;WICKET-3396-fix.patch;https://issues.apache.org/jira/secure/attachment/12469520/WICKET-3396-fix.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-27 08:54:15.407,,,no_permission,,,,,,,,,,,204191,,,Thu Jan 27 08:54:15 UTC 2011,,,,,,0|i0kb47:,116618,,,,,,,,27/Jan/11 06:25;akiraly;Attaching patch with suggested change. Tests pass.,27/Jan/11 08:54;mgrigorov;Changed with r1064033.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlReaderTest fail because getClass.getResourceAsStream is not markSupported,WICKET-3372,12496441,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,emberson,emberson,23/Jan/11 16:01,23/Jan/11 17:20,13/Mar/19 23:17,23/Jan/11 17:20,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket,,,,,,,0,,,,,,,"Wicket-Core org.apache.wicket.util.io.XmlReaderTest fails because 
this.getClass().getResourceAsStream(""test_1.html"") (as an example - all
of the tests in this test fail)
returns an InputStream that does not support marks
(markSupported() == false). 
In the constructor to XmlReader there is a check for mark support:
        public void init() throws IOException
        {
                if (!inputStream.markSupported())
                {
                        throw new IOException(""The InputStream must support mark/reset"");
                }
...
        }
which fails.

Fix is to either wrap the InputStream returned from getClass.getResourceAsStream
in a BufferedInputStream in the XmlReaderTest test or in the XmlReader constructor
test for mark support and if it is not supported, then wrap the inputstream
in the constructor with a BufferedInputStream.

Strange that this shows up in Java version ""1.6.0_22"" but not whatever
everyone else is using.","java version ""1.6.0_22""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-01-23 17:20:36.654,,,no_permission,,,,,,,,,,,204170,,,Sun Jan 23 17:20:36 UTC 2011,,,,,,0|i0kb5r:,116625,,,,,,,,23/Jan/11 17:20;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Compile fails using java version ""1.6.0_22""",WICKET-3369,12496399,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,emberson,emberson,23/Jan/11 00:18,23/Jan/11 06:03,13/Mar/19 23:17,23/Jan/11 06:03,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,,,,,,,,0,,,,,,,"Line 253 of org/apache/wicket/velocity/markup/html/VelocityPanel.java

    [javac] Compiling 4 source files to /home/emberson/java/apache-wicket/apache-wicket-1.5-RC1/src/wicket-velocity/build/classes
    [javac] /home/nobody/java/apache-wicket/apache-wicket-1.5-RC1/src/wicket-velocity/src/main/java/org/apache/wicket/velocity/markup/html/VelocityPanel.java:253: exception java.io.IOException is never thrown in body of corresponding try statement
    [javac]                     catch (IOException e)
    [javac]                     ^
    [javac] 1 error

fix is to comment out catch:

/*
                        catch (IOException e)
                        {
                                onException(e);
                        }
*/
","Java version ""1.6.0_22""  wicket-velocity",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204167,,,2011-01-23 00:18:50.0,,,,,,0|i0kb5z:,116626,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Patch to correct a few Findbugs warnings in extensions module,WICKET-3349,12495920,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,akiraly,akiraly,18/Jan/11 18:01,20/Jan/11 07:54,13/Mar/19 23:17,20/Jan/11 07:54,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC2,,,wicket-extensions,,,,,,,0,,,,,,,Similar to WICKET-3322 but this is for the extensions module. The fixes are very trivial nothing serious.,,,,,,,,,,,,,,,,,,,,,,18/Jan/11 18:01;akiraly;WICKET-3349.patch;https://issues.apache.org/jira/secure/attachment/12468664/WICKET-3349.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204148,,,Tue Jan 18 18:01:48 UTC 2011,,,,,,0|i0kb7r:,116634,,,,,,,,18/Jan/11 18:01;akiraly;Attaching patch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unused private final ThreadLocal variable in DummyRequestLogger?,WICKET-3316,12495079,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,akiraly,akiraly,09/Jan/11 19:27,10/Jan/11 01:27,13/Mar/19 23:17,10/Jan/11 01:27,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"o.a.w.protocol.http.DummyRequestLogger has the line:
private final ThreadLocal<RequestData> currentRequest = new ThreadLocal<RequestData>();

Interestringly Eclipse does not mark it as an unused variable but it seems it is not used anywhere. If I delete it everything compiles just fine. Maybe it could be deleted?",,,,,,,,,,,,,,,,,,,,,,09/Jan/11 19:28;akiraly;WICKET-3316.patch;https://issues.apache.org/jira/secure/attachment/12467846/WICKET-3316.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-01-10 01:27:48.536,,,no_permission,,,,,,,,,,,204122,,,Mon Jan 10 01:27:48 UTC 2011,,,,,,0|i0kbbb:,116650,,,,,,,,09/Jan/11 19:28;akiraly;Attaching a patch with the suggested change.,10/Jan/11 01:27;ivaynberg;thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In extensons CaptchaImageResource render method, while loop does not loop",WICKET-3232,12492118,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,pete,emberson,emberson,06/Dec/10 02:04,07/Dec/10 17:48,13/Mar/19 23:17,07/Dec/10 17:48,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,,,,0,,,,,,,"In the extensons CaptchaImageResource render method, the while-loop:
while(true){
....
return toImageData(image);
}

can be removed.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-07 17:48:31.413,,,no_permission,,,,,,,,,,,204042,,,Tue Dec 07 17:48:31 UTC 2010,,,,,,0|i0aoh3:,60238,,,,,,,,07/Dec/10 17:48;pete;fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SelectOptions onPopulate method exception will never be thrown,WICKET-3225,12492041,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,emberson,emberson,03/Dec/10 22:10,05/Dec/10 14:38,13/Mar/19 23:17,05/Dec/10 14:38,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,,,,0,,,,,,,"In the extensions SelectOptions onPopulate method there is the following code:

      Collection<? extends T> modelObject = (Collection<? extends T>)getDefaultModelObject();
  
      if (modelObject != null)
      {
        if (!(modelObject instanceof Collection))
        {
          throw new WicketRuntimeException(""Model object "" + modelObject +
            "" not a collection"");
        }
.....

I suspect that the WicketRuntimeException will never be thrown because the cast above it
will fail first.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,204036,,,2010-12-03 22:10:22.0,,,,,,0|i0kbhz:,116680,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
YuiLib private constructor but implements IClusterable and has serialVersionUID,WICKET-3213,12491841,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,emberson,emberson,02/Dec/10 02:37,02/Dec/10 12:14,13/Mar/19 23:17,02/Dec/10 12:14,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-datetime,,,,,,,0,,,,,,,"YuiLib has no non-static methods and private constructor but implements IClusterable
and has a serialVersionUID.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-12-02 12:14:36.205,,,no_permission,,,,,,,,,,,204024,,,Thu Dec 02 12:14:36 UTC 2010,,,,,,0|i0kbj3:,116685,,,,,,,,02/Dec/10 12:14;mgrigorov;Fixed with r1041345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MicroMapTest.java tests map's size 3 times rather than keySet, entrySet, values size",WICKET-3208,12491651,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,emberson,emberson,30/Nov/10 15:29,30/Nov/10 16:04,13/Mar/19 23:17,30/Nov/10 16:04,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"In the MicroMapTest testMicroMap test, the MicroMap's size is tested 3 times rather
than testing the keySet's, entrySet's and values'  sizes.
Lines 45, 64 and 84 should be changed from:

    assertEquals(1, m.size());

to

    assertEquals(1, s.size());
    assertEquals(1, s.size());
    assertEquals(1, v.size());

respectfully.

No big deal. I was swapping out the MicroMap and noticed the bug.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-30 16:04:25.902,,,no_permission,,,,,,,,,,,204019,,,Tue Nov 30 16:04:25 UTC 2010,,,,,,0|i0kbjr:,116688,,,,,,,,30/Nov/10 16:04;ivaynberg;added the extra checks. the old size checks are also valid.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
icket/markup/html/debug/PageView clearing and possibly sorting empty list,WICKET-3201,12491452,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,emberson,emberson,27/Nov/10 18:12,27/Nov/10 20:00,13/Mar/19 23:17,27/Nov/10 20:00,1.5-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"In the constructor for the class icket/markup/html/debug/PageView a list is created,
then the empty list is cleared, possibly elements are added to the list and
the list is sorted (even if no element were added):

    // Create an empty list. It'll be filled later
    final List<ComponentData> data = new ArrayList<ComponentData>();

    // Name of page
    add(new Label(""info"", page == null ? ""[Stateless Page]"" : page.toString()));

    // Get the components data and fill and sort the list
    data.clear();
    if (page != null)
    {
      data.addAll(getComponentData(page));
    }
    Collections.sort(data, new Comparator<ComponentData>()
    {
      public int compare(ComponentData o1, ComponentData o2)
      {
        return (o1).path.compareTo((o2).path);
      }
    });

    // Create the table containing the list the components
    add(new ListView<ComponentData>(""components"", data)
    { ..... }

Consider the re-write:

  // Name of page
  add(new Label(""info"", page == null ? ""[Stateless Page]"" : page.toString()));
    
  // Create an empty list. It'll be filled later
  List<ComponentData> data = null;
  
  if (page != null) {
    // Get the components data and fill and sort the list
    data =  new ArrayList<ComponentData>(getComponentData(page));
    Collections.sort(data, new Comparator<ComponentData>() {
        public int compare(ComponentData o1, ComponentData o2) {
          return (o1).path.compareTo((o2).path);
        }                         
    }); 
  } else {
    data = Collections.emptyList;
  }
  
  // Create the table containing the list the components
  add(new ListView<ComponentData>(""components"", data)
  { ...... }

The list is not cleared and is only sorted if there is something in it.


",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-11-27 20:00:43.116,,,no_permission,,,,,,,,,,,204012,,,Sat Nov 27 20:00:43 UTC 2010,,,,,,0|i0kbkf:,116691,,,,,,,,27/Nov/10 20:00;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix comments for Form.process() to be consistent with method declaration,WICKET-3139,12478608,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mgrigorov,dtoffe,dtoffe,28/Oct/10 18:09,01/Nov/10 00:28,13/Mar/19 23:17,31/Oct/10 17:41,1.5-M2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,,,,0,,,,,,,"	/**
	 * Process the form. Though you can override this method to provide your whole own algorithm, it
	 * is not recommended to do so.
	 * <p>
	 * See the class documentation for further details on the form processing
	 * </p>
	 * 
	 * @return False if the form had an error
	 */
	private boolean process()
	{

    The comment for Form.process() states ""you can override"" when in fact the method is declared private. This is most likely caused by the method being public previously. Either make it protected, or change the comment. Also compare to this other method in Form which is public and overridable:

	public void process(IFormSubmittingComponent submittingComponent)
	{

    And lastly, please provide some help in the Migration Guide for those who used to override it.
",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-10-31 17:41:16.608,,,no_permission,,,,,,,,,,,203957,,,Mon Nov 01 00:28:15 UTC 2010,,,,,,0|i0kbpj:,116714,,,,,,,,"31/Oct/10 17:41;mgrigorov;The comment is improved with r1029431.
The method is deprecated in 1.4 since a while. You should use org.apache.wicket.markup.html.form.Form.process(IFormSubmittingComponent).
I added an entry to the table with API changes in the migration page.","01/Nov/10 00:28;hudson;Integrated in Apache Wicket 1.5.x #476 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/476/])
    ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IFeedback that is child of IFeedback gets added to the FEEDBACK_LIST too late,WICKET-2974,12471003,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,jthomerson,jthomerson,06/Aug/10 19:37,17/Sep/10 14:48,13/Mar/19 23:17,26/Aug/10 00:35,1.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,,,,0,,,,,,,"Consider the following scenario:

- I have a BasePage that I add a feedback panel to.  I want it to only render feedback messages that have not been rendered by any other feedback panels
- I have a feedback border that implements IFeedback, and inside it, I also have a FeedbackPanel.  I want the feedback panel to only render the messages pertaining to the components within the border.

To accomplish this, I put the creation of the feedback panel in the BasePage in onBeforeRender so that my component hierarchy (including the border and it's child feedback panel) is created before I add myself to the hierarchy.  By doing this, I expect my page to be the last IFeedback to appear in the feedback list.

But alas, when Component#beforeRender creates the list of IFeedback components, it effectively stops the traversal of any IFeedback#beforeRender calls because it does not call internalBeforeRender().

The attached quickstart demonstrates the problem, and the patch fixes it.",,,,,,,,,,,,,,,,,,,,,,06/Aug/10 19:51;jthomerson;WICKET-2974.patch;https://issues.apache.org/jira/secure/attachment/12451459/WICKET-2974.patch,06/Aug/10 19:51;jthomerson;quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12451458/quickstart.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-07 10:22:06.38,,,no_permission,,,,,,,,,,,203813,,,Thu Sep 02 22:11:15 UTC 2010,,,,,,0|i0kc47:,116780,,,,,,,,06/Aug/10 19:53;jthomerson;this is fixed in 1.4.x - not sure if the same problem exists in 1.5 - need to look at some point,07/Aug/10 10:22;mgrigorov;Merged to 1.5 with r983186,"09/Aug/10 00:13;hudson;Integrated in Apache Wicket 1.4.x #82 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/82/])
    ","11/Aug/10 00:22;hudson;Integrated in Apache Wicket 1.5.x #217 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/217/])
    ","02/Sep/10 22:11;hudson;Integrated in Apache Wicket 1.4.x #140 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/140/])
    tests for WICKET-2974

these tests were created by mgrigorov in trunk.  I'm just porting them to 1.4.x
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc for AbortWithHttpStatusException class constructor says 'true' when it should say 'false',WICKET-2897,12465661,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jthomerson,ronaldtm,ronaldtm,28/May/10 17:57,28/May/10 19:06,13/Mar/19 23:17,28/May/10 18:12,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.10,1.5-M1,,wicket,,,,,,,0,javadoc,,,,,,"Javadoc for AbortWithHttpStatusException class constructor states:

	 * @param statusCodeOptional
	 *            If true and http status could not be set, an IllegalStateException will be thrown

But the code does:

			if (!statusCodeOptional)
			{
				throw new IllegalStateException(
					""This exception can only be thrown from within request processing cycle"");
			}


Obviously, the exception is thrown only if the flag statusCodeOptional is set to false, not true.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-28 18:12:14.528,,,no_permission,,,,,,,,,,,203742,,,Fri May 28 19:06:21 UTC 2010,,,,,,0|i0kc9z:,116806,,,,,,,,28/May/10 18:12;jthomerson;thank you!,"28/May/10 19:06;hudson;Integrated in Apache Wicket 1.5.x #75 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/75/])
    fixes WICKET-2897
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong name for swiss Application.properties,WICKET-2860,12463988,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,seitz,manthos,manthos,07/May/10 13:39,12/May/10 22:56,13/Mar/19 23:17,12/May/10 22:56,1.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,1.5-M1,,wicket,,,,,,,0,,,,,,,"A 'Application_ch.properties' was generated due fixing Issue: WICKET-743 but the correct language-extension for German/Swiss is '_de_CH' and not '_ch' (witch stands for Chamorro).

Fix: rename 'Application_ch.properties' to 'Application_de_CH.properties'.
",,,,,,,,,,,,,,,,,,,,,WICKET-743,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-12 22:56:18.9,,,no_permission,,,,,,,,,,,203706,,,Wed May 12 22:56:18 UTC 2010,,,,,,0|i0kccv:,116819,,,,,,,,12/May/10 22:56;seitz;Fixed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
