Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Cloners),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Incorporates),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Existing GitBox Approval),Custom field (External issue URL),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
internet explorer complains about secure and nonsecure content inside a page delivered by https,WICKET-523,12368462,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,,pete,pete,02/May/07 13:21,05/Apr/13 16:52,13/Mar/19 23:15,02/May/07 21:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Sorry,
maybe 'blocker' is too much for this issue but this will make parts of wicket unusable on a HTTPS site using Internet Explorer (still most-used browser though it sucks)...

The problem comes from code in wicket-event.js:

			} else if (document.readyState && Wicket.Browser.isIE()) { 
				// internet explorer - use script with defer attribute
				document.write(""<script id=ie_ready defer src=javascript:void(0)><\/script>"");
				document.getElementById('ie_ready').onreadystatechange = function() {
					if (this.readyState == 'complete') domReady();
				};
			} else { 

more precisely this line

				document.write(""<script id=ie_ready defer src=javascript:void(0)><\/script>"");

This causes internet explorer to complain about having secure and nonsecure content in a https page.

Big alert window on each page render! *aargh*

this effectively means you can not use HTTPS pages with wicket on internet explorer once you use the domReady event
(except if you don't care having a big error message on each page :-(

Did I mention that IE really sucks bad?

It happens on IE6 and IE7 here

the issue is identical to a ticket I found in mootools:
http://dev.mootools.net/ticket/139

the fix is easy (according to the mootools ticket)

replace:

   document.write(""<script id=ie_ready defer src=javascript:void(0)><\/script>"");

with

   document.write(""<script id='ie_ready' defer src='://0'><\/script>"");

Looks really strange (://0) but works...

After changing that in my local tests the IE error message was gone and dom ready handlers still worked
",,,,,,,,,,,,,,,,,,,02/May/07 13:22;pete;._wicket-event.diff;https://issues.apache.org/jira/secure/attachment/12356634/._wicket-event.diff,02/May/07 13:25;pete;patch.txt;https://issues.apache.org/jira/secure/attachment/12356635/patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2013-04-05 16:52:41.86,,,no_permission,,,,,,,,,,,201575,,,Fri Apr 05 16:52:41 UTC 2013,,,,,,0|i0kimv:,117836,,,,,,,,02/May/07 13:22;pete;suggested patch,"02/May/07 13:25;pete;upload failed - another try...

suggested patch","05/Apr/13 16:52;lruvalcaba;I had the same issue, I spent to much time trying to fix this problem and at the end I found that the problem was something related with the DOCTYPE definition set in a children element. I described next the problem, the hierarchy and the fix.

Problem description:
I have a BasePage where every other page(Folder, Group, FolderDetails) extends from, on the html part everyone has the DOCTYPE definition even the children elements, but in one child page, that wanted to redirect to other page (Folder --> FolderDetail) that extends from BasePage was getting this problem.

Elements hierarchy:
Folder extends BasePage -- working good
Group extends BasePage -- working good
FolderDetail extends BasePage -- working good
Folder redirects to a FolderDetail -- failing while trying to redirect and getting the described issue.

Fix:
The issue was solved by removing the DOCTYPE definition from the FolderDetail.html markup, after removing this it worked! :)

I hope this can help you and avoid wasting too much time in such a dumb error.",,,,,,,,,,,,,,,,,,,,,
ClassCastException in WebRequestCodingStrategy,WICKET-524,12368507,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,ehillenius,atberman,atberman,02/May/07 22:20,22/Sep/10 09:23,13/Mar/19 23:15,29/May/07 15:36,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.7,,,wicket,,,,0,,,,,,,,"I upgraded to 1.2.6 and am getting a ClassCastException on line 161 of WebRequestCodingStrategy.  When it calls request.getParameter(BEHAVIOR_ID_PARAMETER_NAME) it is expecting a String, but it is returning a String array so I get a classcastexception.  I am using CryptedUrlWebRequestCodingStrategy to build the URLs.  The actual bug appears to be in the WebRequest because it casts to a String which is incorrect, since the actual parameter is a String array.",,,,,,,,,,,,,,,WICKET-3070,,,,11/May/07 08:40;jbq;20070511-wicket126-CryptedUrlWebRequestCodingStrategy-StringArray.txt;https://issues.apache.org/jira/secure/attachment/12357092/20070511-wicket126-CryptedUrlWebRequestCodingStrategy-StringArray.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-02 23:29:09.476,,,no_permission,,,,,,,,,,,59231,,,Tue May 29 07:35:38 UTC 2007,,,,,,0|i0kimn:,117835,,,,,,,,"02/May/07 23:29;ehillenius;It would help to have a unit test for this. Currently there is none, and wicket-examples has signin2 which uses CryptedUrlWebRequestCodingStrategy but doesn't fail.

Andrew, you think you could provide me with a test (attach to this issue) that proves your problem? And/ or a complete stack trace would help.

Cheers.",03/May/07 00:58;atberman;I'll see what I can do.,"03/May/07 17:05;atberman;Eelco, I don't know when I can get you a unit test, but I can give you some more info.  It happens on AjaxLinks and AjaxButtons and only with the Ajax stuff.  When I click one of the links, it doesn't work and I get the ClassCastException, so there seems to be some sort of incompatibility between the Ajax calls and any changes that were made between 1.2.5. and 1.2.6.  Hope this helps a bit.",03/May/07 17:52;jbq;Can you please provide the requested URL?  Are there duplicated parameters?  If this is the case it should not happen.,03/May/07 17:55;atberman;I'm using the CryptURL class so the URL will just be ?x=....,"10/May/07 19:17;atberman;Here is the stacktrace.  I'm still working on some code to give you, but maybe this will help in the meantime.

java.lang.ClassCastException: [Ljava.lang.String;
	at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy$DecodedUrlRequest.getParameter(CryptedUrlWebRequestCodingStrategy.java:432)
	at wicket.protocol.http.request.WebRequestCodingStrategy.decode(WebRequestCodingStrategy.java:161)
	at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.decode(CryptedUrlWebRequestCodingStrategy.java:98)
	at wicket.Request.getRequestParameters(Request.java:163)
	at wicket.RequestCycle.step(RequestCycle.java:992)
	at wicket.RequestCycle.steps(RequestCycle.java:1084)
	at wicket.RequestCycle.request(RequestCycle.java:454)
	at wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:219)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:264)
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:107)
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:72)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:110)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:81)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.basicauth.BasicProcessingFilter.doFilter(BasicProcessingFilter.java:178)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:217)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.logout.LogoutFilter.doFilter(LogoutFilter.java:106)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:229)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:148)
	at org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:98)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:174)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:199)
	at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)
	at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)
	at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)
	at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)","11/May/07 08:40;jbq;Please try the attached patch.  (This is a workaround)

$ cd wicket-1.2.6/wicket
$ patch < ~/20070511-wicket126-CryptedUrlWebRequestCodingStrategy-StringArray.txt
$ mvn install","11/May/07 17:14;atberman;The patch works.  Once I get some time I'll try to write up a test class which can replicate the issue, I hope.

Thanks!",27/May/07 19:34;ehillenius;You want to have this one JBQ? Or are there conflicting issues?,"29/May/07 07:35;jbq;This is fixed by Igor already, in a similar way (but more simple) as the patch I submitted in this issue.",,,,,,,,,,,,,,
Form processing workflow is broken for FormComponentPanels,WICKET-1304,12387119,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,,ivaynberg,ivaynberg,25/Jan/08 04:55,16/Sep/08 20:32,13/Mar/19 23:15,25/Jan/08 21:27,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"after we introduced formcomponentpanels we changed processing order of validation and updatemodels to post-order so that formcomponentpanel's children are processed first so those values can be used in formcomponentpanel's convertinput, updatemodel methods. the nested forms patch seems to have lost this change and these steps are now performed in pre-order.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59229,,,Fri Jan 25 05:52:13 UTC 2008,,,,,,0|i0kghj:,117488,,,,,,,,25/Jan/08 05:52;ivaynberg;added FormComponentPanelProcessingTest,,,,,,,,,,,,,,,,,,,,,,,
"Stripping javascript comments and whitespace breaks application when using prototype library
",WICKET-1635,12396035,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,knopp,memeplex,memeplex,14/May/08 16:16,25/May/08 17:36,13/Mar/19 23:15,25/May/08 17:36,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket,,,,0,,,,,,,,Just to remember about https://issues.apache.org/jira/browse/WICKET-987. I don't seem to be able to reopen it but I added a comment that justifies reconsideration of that issue. Please close this once 987 is open again.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-25 15:39:29.645,,,no_permission,,,,,,,,,,,59227,,,Sun May 25 17:19:29 UTC 2008,,,,,,0|i0kfn3:,117351,,,,,,,,"25/May/08 15:39;knopp;What comment? I don't see any comment, can you post it here?","25/May/08 15:40;knopp;if it is this one:

Line 4025 of prototype 1.6.0.2 gets truncated from

  document.write(""<script id=__onDOMContentLoaded defer src=//:><\/script>"");

...

we can close this issue.","25/May/08 17:19;memeplex;Yes, it is. You have already answered it before you noticed about this ""reminder"" issue.",,,,,,,,,,,,,,,,,,,,,
WicketSessionFilter doesn't clean up the session thread local,WICKET-1209,12384123,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,knopp,knopp,knopp,07/Dec/07 00:40,08/Dec/07 11:39,13/Mar/19 23:15,07/Dec/07 00:40,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,0,,,,,,,,WicketSessionFilter doesn't call Session.unset() after the filter chain is proecssed,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59226,,,2007-12-07 00:40:18.0,,,,,,0|i0kgqf:,117528,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[PATCH] ajax Wicket.form.serialize has been broken ,WICKET-387,12364915,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,,vincent.demay@anyware-tech.com,vincent.demay@anyware-tech.com,14/Mar/07 14:02,31/Mar/07 06:42,13/Mar/19 23:15,31/Mar/07 06:42,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,,,,,0,,,,,,,,"It has been broken since ""Support for serializing nested form"" commit. 

form.elements has been replaced by element.childNodes. The problem is that form.elements return only form elements but childNodes returns all child. I understand why we can not work with form.elements (nested form) and the goal of this commit, but now all ajax form submit is broken :(

I attach a patch allowing nested form and make serialisation works. But It supposed every tags under the form to serialize to be parse with javascript. Imho it is very painfull and can take a long time on big form. ",,,,,,,,,,,,,,,,,,,14/Mar/07 14:03;vincent.demay@anyware-tech.com;wicket-ajax.js.txt;https://issues.apache.org/jira/secure/attachment/12353281/wicket-ajax.js.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-15 07:50:10.752,,,no_permission,,,,,,,,,,,59238,,,Fri Mar 16 12:08:09 UTC 2007,,,,,,0|i0kizb:,117892,,,,,,,,15/Mar/07 07:50;knopp;Should be fixed. Can anyone confirm that? After confirmation i'll close the issue.,15/Mar/07 08:57;vincent.demay@anyware-tech.com;It seems to work for me,"15/Mar/07 09:40;yoav;It still doesn't work for me on a from that used to work perfectly before the change. No form elements are submitted.
My form is inside a panel that is a direct child of the page.","16/Mar/07 07:21;yoav;The following works fine:
<form wicket:id=""newGroupForm"">
        <input wicket:id=""groupId"" type=""text"" class=""medium""/>
        <input class=""button"" type=""button"" wicket:id=""cancel""/>
        <input class=""button"" type=""button"" wicket:id=""submit""/>
</form>

But this is now broken. You don't get the groupId in the ajax post:
<form wicket:id=""newGroupForm"">
        <table class=""formBody"">
            <tr>
                <td class=""form_label"">GroupId</td>
                <td>
                    <input wicket:id=""groupId"" type=""text"" class=""medium""/>
                </td>
            </tr>
        </table>
        <input class=""button"" type=""button"" wicket:id=""cancel""/>
        <input class=""button"" type=""button"" wicket:id=""submit""/>
</form>

This is a serious blocker.",16/Mar/07 08:14;knopp;That's strange. I'm testing submitting your snippet with latest svn version and it works for me.,"16/Mar/07 12:08;yoav;Terribly sorry. I just realized the dependency has changed from 1.3-incubating-SNAPSHOT to 1.3.0-incubating-SNAPSHOT.
Indeed it is working fine now.",,,,,,,,,,,,,,,,,,
deadlock contention for sessions,WICKET-8,12353347,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Blocker,Fixed,jcompagner,almaw,almaw,17/Oct/06 05:30,18/Oct/06 21:27,13/Mar/19 23:15,18/Oct/06 21:20,1.2.3,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.3,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"I have a bunch of custom image thumbnails that each take a little while to serve up.
With lots of them on the page at once I'm seeing what looks like a deadlock going on for the session objects. 1.2.2 didn't do this.

Here's an edited thread-dump. There are lots of these:

""http-8080-Processor26"" daemon prio=1 tid=0x08875a60 nid=0x5480 waiting for monitor entry [0xa5ef9000..0xa5efee60]
	at wicket.request.compound.DefaultRequestTargetResolverStrategy.resolve(DefaultRequestTargetResolverStrategy.java:102)
	- waiting to lock <0xab6ee028> (a com.foo.MyWebSession)
	at wicket.request.compound.AbstractCompoundRequestCycleProcessor.resolve(AbstractCompoundRequestCycleProcessor.java:48)
	at wicket.RequestCycle.step(RequestCycle.java:992)
	at wicket.RequestCycle.steps(RequestCycle.java:1084)
	at wicket.RequestCycle.request(RequestCycle.java:454)
	at wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:219)
	[...]

One of these:
""http-8080-Processor23"" daemon prio=1 tid=0x082a7988 nid=0x547a waiting for monitor entry [0xa5af8000..0xa5afd0e0]
	at wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:929)
	- waiting to lock <0xab6ee028> (a com.foo.MyWebSession)
	at wicket.RequestCycle.step(RequestCycle.java:1010)
	at wicket.RequestCycle.steps(RequestCycle.java:1084)
	at wicket.RequestCycle.request(RequestCycle.java:454)
	at wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:219)
	[...]

And one of these:
""http-8080-Processor20"" daemon prio=1 tid=0x082a6978 nid=0x5116 in Object.wait() [0xa57f2000..0xa57f7160]
	at java.lang.Object.wait(Native Method)
	- waiting on <0xab7695c8> (a java.util.HashMap)
	at wicket.Session.getPage(Session.java:427)
	- locked <0xab7695c8> (a java.util.HashMap)
	at wicket.request.compound.DefaultRequestTargetResolverStrategy.resolveRenderedPage(DefaultRequestTargetResolverStrategy.java:215)
	at wicket.request.compound.DefaultRequestTargetResolverStrategy.resolve(DefaultRequestTargetResolverStrategy.java:152)
	- locked <0xab6ee028> (a com.foo.MyWebSession)
	at wicket.request.compound.AbstractCompoundRequestCycleProcessor.resolve(AbstractCompoundRequestCycleProcessor.java:48)
	at wicket.RequestCycle.step(RequestCycle.java:992)
	at wicket.RequestCycle.steps(RequestCycle.java:1084)
	at wicket.RequestCycle.request(RequestCycle.java:454)
	at wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:219)
	[...]

Let me know if you need any more info. I can probably make an example webapp if required, but hopefully this will be sufficient.

As far as I'm concerned it's pretty critical, as the entire session falls over and never recovers, so I'm marking it as a blocker. Hope that's OK.",,,,,,,,,,,,,,,,,,,18/Oct/06 19:29;almaw;DefaultRequestTargetResolverStrategy-WICKET-8.patch;https://issues.apache.org/jira/secure/attachment/12343194/DefaultRequestTargetResolverStrategy-WICKET-8.patch,18/Oct/06 17:29;almaw;ResourceTestPage.html;https://issues.apache.org/jira/secure/attachment/12343182/ResourceTestPage.html,18/Oct/06 17:28;almaw;ResourceTestPage.java;https://issues.apache.org/jira/secure/attachment/12343181/ResourceTestPage.java,,,,,,3.0,,,,,,,,,,,,,,,,,,,2006-10-17 11:00:33.0,,,no_permission,,,,,,,,,,,59228,,,Wed Oct 18 21:27:36 UTC 2006,,,,,,0|i0kjuf:,118032,,,,,,,,"17/Oct/06 11:00;ehillenius;We should create a test for this in wicket-threadtest (1.x branch), so that we can fix it an keep it fixed. I'm too busy today to this this myself. But the sooner we have this, the sooner we can fix it.",18/Oct/06 17:28;almaw;Java source for page to demonstrate the problem.,"18/Oct/06 17:50;ehillenius;Johan, you want to take this one?","18/Oct/06 17:51;almaw;If you just open the page in a single Firefox, loading up the images is generally enough to trigger the problem, but I've create a App1Test3 and ResourceTestPage in threadtest which demonstrates this problem clearly. Eelco's kindly committed it.

fwiw, ivaynberg's also running into this right now.","18/Oct/06 19:29;almaw;I attach a patch which I believe fixes this issue. I've tested things on a fairly complex site, and it certainly seems to work.

The issue appears to be that DefaultRequestTargetResolverStrategy#resolve(RequestCycle, RequestParameters) needs to drop its lock on the Session before calling resolveRenderedPage().","18/Oct/06 21:20;jcompagner;the patch looks fine. Now we don't have a sync block in a sync block
This makes me wonder what kind of things we more have. We should really analyse all sync blocks we have.
This sync block is only for one thing and that is the Pagemap access And then more the AccessStack that needs to be synced
Better would be everywhere we touch the pagemap or page (in that pagemap) we set a lock on that pagemap..

","18/Oct/06 21:27;ehillenius;It also shows that we should test on this stuff. We have had like 20 times we thought we were good after some limited testing, but then turned out we weren't. Covering the corner cases/ extreme situations we find is important.",,,,,,,,,,,,,,,,,
FeedbackPanel is not updated when using AjaxSubmitButton and/or AjaxFormValidatingBehavior,WICKET-156,12358198,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,tit0u,tit0u,10/Dec/06 00:46,02/May/13 02:29,13/Mar/19 23:15,30/Dec/06 00:55,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"As we can see in the example: ""ajax -> Form Example: shows ajax form processing"", the FeedbackPanel is only updated once (actually the first time it is called) and is never updated when corret values are typed or the ""submit ajax"" button is pressed.

The AjaxSubmitButton component and AjaxFormValidatingBehavior (and associated behaviours) do not seem to be able to update the FeedbackPanel or retrieve new values from it.","Windows 2000 SP4
Tomcat 5.5.20",,,,,,,,,,,,,,,,,WICKET-112,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-11 16:44:56.0,,,no_permission,,,,,,,,,,,201239,,,Mon Dec 11 16:54:16 UTC 2006,,,,,,0|i0kjkn:,117988,,,,,,,,"11/Dec/06 16:44;bendis;This happens because models which are attached during the processing of an AJAX request are not detached at the end of the request. And beacuse the FeedbackPanel uses FeedbackMessagesModel model that caches the feedback messages until it is detached, content of the feedback panel will remain stale...
",11/Dec/06 16:54;bendis;See WICKET-112.,,,,,,,,,,,,,,,,,,,,,,
Modal Window created with a page creator don't open on IE8 and direct to an invalid adress,WICKET-2207,12421978,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,virtud,virtud,03/Apr/09 14:52,02/Nov/10 15:10,13/Mar/19 23:15,27/Apr/09 17:53,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket-examples,,,,9,,,,,,,,"When the content of a modal window is set using a page creator as shown below, the modal window is not displayed and you are redirected to an invalid page with the adress ""http:///"".

Code : 
chooseLgWindow.setPageCreator(new ModalWindow.PageCreator()	{
			public Page createPage() {
				return new PopupChooseLg(Layout.this, chooseLgWindow);
			}
		});

The modal is called through an AjaxLink.

The problem occurs on IE 8.0.6001.18702 installed on Vista 32 bits. No problems on Firefox 3 and IE7.",IE8 on Windows Vista ,,,,,,,,,,,,,,,,,,22/Apr/09 19:14;victori;modal-ie8.patch;https://issues.apache.org/jira/secure/attachment/12406159/modal-ie8.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-16 09:03:58.407,,,no_permission,,,,,,,,,,,203113,,,Tue Nov 02 15:10:22 UTC 2010,,,,,,0|i0ke0n:,117088,,,,,,,,16/Apr/09 09:03;edvin;I can confirm this bug is still in 1.4-RC2 as well.,16/Apr/09 14:51;lfulton;This bug also affects 1.3.5.,"16/Apr/09 15:17;knopp;Problem here is that we have to create empty iframe. So we set src to //: to prevent IE from complaining about security on https pages. This works for IE6, and 7, but for some reason it completely confuses IE8. If anyone knows a way to create empty iframe in IE that doesn't make it complain on https pages and works on IE8, please share.","16/Apr/09 16:14;edvin;Matej, have a look here: http://gemal.dk/blog/2005/01/27/iframe_without_src_attribute_on_https_in_internet_explorer/

The solution seems to be use blank.html as src, and include only <html></html> in the file. I guess blank.html could be included with Wicket as a resource?

-- Edvin","16/Apr/09 16:16;edvin;They also talk about doing src=""javascript:void(0)"", might be worth a try :)","16/Apr/09 16:17;pablo72;I would suggest also to try  src=""javascript:void(0)"" 


",16/Apr/09 16:29;knopp;As far as I remember javascript:void(0) is broken in certain versions of IE6 so it's too risky. Serving blank page might be the solution - we could have it served as resource.,"21/Apr/09 08:01;virtud;Rather than creating a blank.html page, why not set the src to about:blank ? This solution works for me.",21/Apr/09 08:05;edvin;Have you verified this in IE6/7/8?,"21/Apr/09 08:24;virtud;We have tested this solution on IE 6/7/8, Firefox 2/3, Opera 9/10 and Safari 4 beta and it works on all these versions.","21/Apr/09 08:26;edvin;Nice! Matej, is that good enough for you? It would be great to get a quick solution to this one..","21/Apr/09 09:04;knopp;Have you tested it both with http and https?
I do seem to remember there being issues with about:blank and https, especially on IE6","22/Apr/09 19:14;victori;Well, I needed this fix ASAP, I have users complaining about the modal issues on a production site. Initially I could not reproduce the issue since I had never tested our site against IE8 (doh!). Here  is my ""knee jerk reaction"" patch around this issue. ","22/Apr/09 20:02;knopp;I don't mind applying this (with minor change - query IE6 using Wicket.Browser.isIeLessThan7) - if someone can confirm that it works correctly in IE6,7,8 with both http and https",22/Apr/09 20:13;knopp;Committed to trunk. If someone can confirm that it works across browser/http/htts i will commit it to 1.3,"22/Apr/09 23:16;victori;Confirmed, works just fine. I have tested this against IE6 and IE8 against https/http","23/Apr/09 07:58;vjaka;Yes, seems working. Argh, one more patch to the binary wicket library while waiting to 1.3.6 release... 8)","05/Aug/09 17:49;bburton;After applying this patch, modal dialogs no longer work for me on IE6/7.","06/Aug/09 13:37;bburton;My apologies... after testing on genuine installations of IE6/7, it appears that I was mistaken. As a side note, be wary of this product: http://www.my-debugbar.com/wiki/IETester/HomePage as it does not always render in the same way that the actual versions of Internet Explorer do.",01/Nov/10 14:41;gerbil1987;Has this patch been implemented into library version 1.4.12?,"01/Nov/10 15:39;mgrigorov;""Fix version"" says it was fixed in 1.4-RC3, i.e. long time ago.
If you experience some problem please open a new ticket and attach a quickstart application showing the problem.",01/Nov/10 15:39;ivaynberg;@rico check the subversion commits tab in the issue to see what has been applied.,02/Nov/10 15:10;kamaladhikarla;I tried with 1.3.6 & 1.3.7 and also applied which is suggested above. It works fine with IE8 normal http sites but doesn't work with https (ssl configuration),
return immutable parameter map or a copy of parameters,WICKET-291,12363091,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ehillenius,ehillenius,ehillenius,17/Feb/07 21:53,22/Sep/10 09:26,13/Mar/19 23:15,17/Feb/07 23:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"WebRequestCodingStrategy#decode and PortletRequestCodingStrategy#decode try to remove values from the request's parameter map. As WicketPortletRequest returns just the immutable request parameters, this fails with an exception like this:

java.lang.UnsupportedOperationException
        at java.util.Collections$1.remove(Collections.java:1012)
        at wicket.protocol.http.portlet.PortletRequestCodingStrategy.decode (PortletRequestCodingStrategy.java:119)
        at wicket.Request.getRequestParameters(Request.java:163)
        at wicket.RequestCycle.step(RequestCycle.java:992)
        at wicket.RequestCycle.steps(RequestCycle.java :1084)
        at wicket.RequestCycle.request(RequestCycle.java:454)
        at wicket.protocol.http.portlet.WicketPortlet.processAction(WicketPortlet.java:198)

What we should do:
1) make parameter map in both ServletWebRequest and WicketPortletRequest immutable
2) remove the code that tries to remove wicket specific request parameters (why should we care about having them in there anyway)
",,,,,,,,,,,,,,,WICKET-3070,,,,17/Feb/07 23:08;ehillenius;wrapped-requests-for-parameters.patch;https://issues.apache.org/jira/secure/attachment/12351437/wrapped-requests-for-parameters.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-18 19:02:28.706,,,no_permission,,,,,,,,,,,201363,,,Sun Feb 18 19:02:28 UTC 2007,,,,,,0|i0kj73:,117927,,,,,,,,"17/Feb/07 22:01;ehillenius;Actually, there is code that depends on the parameter map being mutable:

			// Remove the 'x' parameter which contains ALL the encoded params
			this.parameterMap.remove(""x"");
			String decodedParamReplacement = encodedParamReplacement;
			try
			{
				decodedParamReplacement = URLDecoder.decode(encodedParamReplacement, Application
						.get().getRequestCycleSettings().getResponseRequestEncoding());
			}
			catch (UnsupportedEncodingException ex)
			{
				log.error(""error decoding url: "" + encodedParamReplacement, ex);
			}

in CryptedUrlWebRequestCodingStrategy

Too late to change this now, and we don't really have to align with the servlet spec on this.

What we should do though is ensure that all parameter accessors use that same translated map.","17/Feb/07 23:08;ehillenius;Interestingly the attached patch doesn't work. So while some code gets the parameter map and makes modifications to it (like removing parameters) other pieces of code depend on the parameter map to be untouched.

The best fix really is to forget about that difficult copy thing - it serves no purpose - and just return a copy of the map. Shallow as fine as it contains strings anyway.",17/Feb/07 23:33;ehillenius;getParameterMap methods now return a copy of the map,"18/Feb/07 19:02;jcompagner;so the real bug is in:

 at wicket.Request.getRequestParameters(Request.java:163) 

we should there make a clone instead of relying on that the Request does the clone...
",,,,,,,,,,,,,,,,,,,,
redirect after login error - interceptContinuationURL is missing contextPath,WICKET-2389,12431166,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,saki,saki,22/Jul/09 18:20,27/Aug/10 05:22,13/Mar/19 23:15,27/Aug/10 05:22,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"application is running under context eg. http://localhost:8080/myContext/

unauthenticated user requests page requiring authentication eg. http://localhost:8080/myContext/menu

user is redirected to login. After the login user is redirected to  http://localhost:8080/menu

Problem is in PageMap class on line 265 

			interceptContinuationURL = ""/"" + cycle.getRequest().getURL();

interceptContinuationURL is absolute (starts with /), therefore context path should be included",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-27 05:22:09.456,,,no_permission,,,,,,,,,,,59279,,,Fri Aug 27 05:22:09 UTC 2010,,,,,,0|i0kdi7:,117005,,,,,,,,27/Aug/10 05:22;ivaynberg;should be fixed in the 1.4.x series,,,,,,,,,,,,,,,,,,,,,,,
ModalWindow doesn't work in Internet Explorer 6 and Internet Explorer 7,WICKET-1967,12409966,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,lars@assense.com,lars@assense.com,04/Dec/08 15:55,25/Aug/10 22:41,13/Mar/19 23:15,25/Aug/10 22:41,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,1,,,,,,,,"While the ModalWindow Example of http://www.wicket-library.com/wicket-examples/ajax/modal-window.0 works for me in Internet Explorer 6 and Internet Explorer 7 I can't get the following code to work in IE locally:

{code:title=HomePage.java}
public class HomePage extends BaseLayoutPage {

  private static final long serialVersionUID = 1L;

  public HomePage() {

    /*
     * modal window test
     */ 
    final ModalWindow modalWindow;
    modalWindow = new ModalWindow(""modalWindow"");
    add(modalWindow);

    modalWindow.setPageMapName(""modal-1"");
    modalWindow.setCookieName(""modal-1"");

    modalWindow.setPageCreator(new ModalWindow.PageCreator() {

      public Page createPage() {
        return new ExampleModalContentPage(modalWindow);
//        return PageUtils.newModalSubFormPage(ExampleModalSubFormPage.class, exampleModel, DienstleistungenDetailPage.this, modal1);
      }
    });
    modalWindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {

      public void onClose(AjaxRequestTarget target) {
      // target.addComponent(result);
      }
    });
    modalWindow.setCloseButtonCallback(new ModalWindow.CloseButtonCallback() {

      public boolean onCloseButtonClicked(AjaxRequestTarget target) {
        return true;
      }
    });

    add(new AjaxLink(""showModalWindow"") {

      @Override
      public void onClick(AjaxRequestTarget target) {
        modalWindow.show(target);
      }
    });

  }

}
{code}

{code:title=HomePage.html}
<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd"">
<html xmlns:wicket=""http://wicket.apache.org"">
<head><title>Adminclient</title><meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""></head>
<body>

<wicket:extend>	  
	  
      <div wicket:id=""modalWindow""></div>
      <a wicket:id=""showModalWindow"">Show modal dialog with a page</a>
  
</wicket:extend>

</body>
</html>
{code}

{code:title=ExampleModalContentPage.java}
//$URL: $
//$Id: $
package de.synergie.bgb.admin.example;

import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.markup.html.AjaxLink;
import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;
import org.apache.wicket.markup.html.WebPage;

/**
 * 
 */
public class ExampleModalContentPage extends WebPage {

  /**
   * 
   * @param window
   */
  public ExampleModalContentPage(final ModalWindow window) {
    add(new AjaxLink(""closeOK"") {

      private static final long serialVersionUID = 1L;

      @Override
      public void onClick(AjaxRequestTarget target) {
        window.close(target);
      }
    });

    add(new AjaxLink(""closeCancel"") {

      private static final long serialVersionUID = 1L;

      @Override
      public void onClick(AjaxRequestTarget target) {
        window.close(target);
      }
    });

  }
}
{code}

{code:title=ExampleModalContentPage.html}
<html>
  <head>
    <title>This is modal window</title>
    <style type=""text/css"">     
      body {
        font-family: verdana, sans-serif;
        font-size: 82%;
        background-color: white;        
      }
    </style>
  </head> 
  <body>
    Modal WINDOW content.
    <p>
      <a wicket:id=""closeOK"">Close this window with result ""OK""</a><br/>
      <a wicket:id=""closeCancel"">Close this window with result ""Cancel""</a><br/>
    </p>
  </body>
</html>
{code}

All I get in IE inside Ajax-Debug is:

{code}
INFO: focus set on wicketDebugLink
INFO: focus removed from wicketDebugLink
INFO: focus set on showModalWindow8
INFO: Using ActiveX transport
INFO: 
INFO: Initiating Ajax GET request on ?wicket:interface=:1:showModalWindow::IBehaviorListener:0:&random=0.5070443492328245
INFO: Invoking pre-call handler(s)...
INFO: Received ajax response (1910 characters)
INFO: 
<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><header-contribution encoding=""wicket1"" ><![CDATA[<head xmlns:wicket=""http://wicket.apache.org""><script type=""text/javascript"" src=""resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js""></script>
<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.WicketAjaxReference/wicket-ajax.js""></script>
<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/wicket-ajax-debug.js""></script>
<script type=""text/javascript"" id=""wicket-ajax-debug-enable""><!--/*--><![CDATA[/*><!--*/
wicketAjaxDebugEnable=true;
/*-->]^]^>*/</script>

<script type=""text/javascript"" src=""resources/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/modal.js""></script>
<link rel=""stylesheet"" type=""text/css"" href=""resources/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/modal.css"" />
</head>]]></header-contribution><component id=""modalWindow6"" ><![CDATA[<div style=""display:none"" id=""modalWindow6"">
    <div id=""content7"">
    </div>
</div>]]></component><evaluate><![CDATA[var settings = new Object();
settings.minWidth=200;
settings.minHeight=200;
settings.className=""w_blue"";
settings.width=""600"";
settings.height=""400"";
settings.resizable=true;
settings.src=""?wicket:interface=modal-1:1::::"";
settings.iframeName=""modal-1"";
settings.cookieId=""modal-1"";
settings.mask=""semi-transparent"";
settings.onClose = function() { var wcall=wicketAjaxGet('?wicket:interface=:1:modalWindow::IBehaviorListener:1:-1',null,null, function() {return Wicket.$('modalWindow6') != null;}.bind(this)); };
settings.onCloseButton = function() { var wcall=wicketAjaxGet('?wicket:interface=:1:modalWindow::IBehaviorListener:0:-1',null,null, function() {return Wicket.$('modalWindow6') != null;}.bind(this));return !wcall;};
Wicket.Window.create(settings).show();
]]></evaluate></ajax-response>
INFO: Response parsed. Now invoking steps...
ERROR: Exception evaluating javascript: [object Error]
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: Calling focus on showModalWindow8
INFO: focus removed from showModalWindow8
INFO: focus set on showModalWindow8
INFO: focus removed from showModalWindow8
INFO: focus set on showModalWindow8
INFO: focus removed from showModalWindow8
INFO: focus set on showModalWindow8
INFO: focus removed from showModalWindow8
{code}

please note the *ERROR: Exception evaluating javascript: [object Error]*

while the working example at www.wicket-library.com gives me:

{code}
INFO: focus set on wicketDebugLink
INFO: focus removed from wicketDebugLink
INFO: focus set on id3
INFO: Using ActiveX transport
INFO: 
INFO: Initiating Ajax GET request on ?wicket:interface=:1:showModal1::IBehaviorListener:0:&random=0.8797561115043684
INFO: Invoking pre-call handler(s)...
INFO: Received ajax response (2096 characters)
INFO: 
<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><evaluate><![CDATA[clientTimeVariable = new Date().getTime();]]></evaluate><header-contribution encoding=""wicket1"" ><![CDATA[<head xmlns:wicket=""http://wicket.apache.org""><script type=""text/javascript"" src=""resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js""></script>
<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.WicketAjaxReference/wicket-ajax.js""></script>
<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/wicket-ajax-debug.js""></script>
<script type=""text/javascript"" id=""wicket-ajax-debug-enable""><!--/*--><![CDATA[/*><!--*/
wicketAjaxDebugEnable=true;
/*-->]^]^>*/</script>

<script type=""text/javascript"" src=""resources/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/modal.js""></script>
<link rel=""stylesheet"" type=""text/css"" href=""resources/org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow/res/modal.css"" />
</head>]]></header-contribution><component id=""id2"" ><![CDATA[<div id=""id2"" style=""display:none""> 
    <div id=""id7""> 
    </div> 
</div>]]></component><evaluate><![CDATA[var settings = new Object();
settings.minWidth=200;
settings.minHeight=200;
settings.className=""w_blue"";
settings.width=""600"";
settings.height=""400"";
settings.resizable=true;
settings.src=""?wicket:interface=modal-1:0::::"";
settings.iframeName=""modal-1"";
settings.cookieId=""modal-1"";
settings.mask=""semi-transparent"";
settings.onClose = function() { var wcall=wicketAjaxGet('?wicket:interface=:1:modal1::IBehaviorListener:1:-1',null,null, function() {return Wicket.$('id2') != null;}.bind(this)); };
settings.onCloseButton = function() { var wcall=wicketAjaxGet('?wicket:interface=:1:modal1::IBehaviorListener:0:-1',null,null, function() {return Wicket.$('id2') != null;}.bind(this));return !wcall;};
Wicket.Window.create(settings).show();
]]></evaluate><evaluate><![CDATA[window.defaultStatus='Server parsetime: 0.026s, Client parsetime: ' + (new Date().getTime() - clientTimeVariable)/1000 +  's';]]></evaluate></ajax-response>
INFO: Response parsed. Now invoking steps...
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: focus removed from id3
INFO: last focus id was not set
{code}

I don't know which wicket version www.wicket-library.com is running. 

Both cases (mine and the version of www.wicket-library.com) *do work* in FireFox and Safari",Internet Explorer 6 and Internet Explorer 7,,,,,,,,,,,,,,,,,,18/Feb/09 10:15;lars@assense.com;Revision_745450_test_results.txt;https://issues.apache.org/jira/secure/attachment/12400404/Revision_745450_test_results.txt,08/Dec/08 17:32;lars@assense.com;WICKET-1967 Ajax Debug Window Output  not working version 1.3.5.txt;https://issues.apache.org/jira/secure/attachment/12395577/WICKET-1967+Ajax+Debug+Window+Output++not+working+version+1.3.5.txt,08/Dec/08 17:31;lars@assense.com;WICKET-1967 Ajax Debug Window Output working version.txt;https://issues.apache.org/jira/secure/attachment/12395576/WICKET-1967+Ajax+Debug+Window+Output+working+version.txt,16/Feb/09 14:10;lars@assense.com;unable_to_get_1.3.6-SNAPSHOT;https://issues.apache.org/jira/secure/attachment/12400278/unable_to_get_1.3.6-SNAPSHOT,,,,,4.0,,,,,,,,,,,,,,,,,,,2009-02-01 23:14:56.382,,,no_permission,,,,,,,,,,,202887,,,Wed Aug 25 22:41:52 UTC 2010,,,,,,0|i0kerb:,117208,,,,,,,,08/Dec/08 17:31;lars@assense.com;this is the Ajax Debug Window Output of the working version captured from http://www.wicket-library.com/wicket-examples/ajax/modal-window.0,08/Dec/08 17:32;lars@assense.com;this is the Ajax Debug Window output captured from the non working version 1.3.5,01/Feb/09 23:14;knopp;I don't see anything wrong with the code. What is in your base page?,"02/Feb/09 09:26;lars@assense.com;Thanks for the hint, I could reduce the test case this way down to the point that causes the failure.

The Java-Class of BaseLayoutPage is now rather simple:

{code:title=BaseLayoutPage.java}
package de.synergie.bgb.admin.example;

import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.model.IModel;

public class BaseLayoutPage extends WebPage {

  private static final long serialVersionUID = 1L;

  public BaseLayoutPage() {
    super();
  }

  public BaseLayoutPage(IModel pModel) {
    super(pModel);
  }
}
{code}

the html of BaseLayoutPage also:

{code}
<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/1999/REC-html401-19991224/loose.dtd"">
<html xmlns:wicket=""http://wicket.apache.org"">
<head>
  <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
  <title>Title</title>
</head>
<body id=""start"">
  <wicket:child />
</body>
</html>
{code}

now the interesting part: It starts working in Internet Explorer as soon as I leave the

id=""start""

out of the body tag (albeit with a black background but that's o.k.).

But this doesn't rest this case for me since we need to have that id=""start"" in some of our project's pages body tags since our CSS relies on that (and there's no easy way to change this). Can you, now that I have narrowed that test case that far, look for a solution nevertheless?

P.S.: Why is the usual Jira markup not working here?",02/Feb/09 12:45;knopp;Should be fixed in 1.3 branch and trunk. Can you please test it and confirm?,"16/Feb/09 12:58;lars@assense.com;{quote}
Should be fixed in 1.3 branch and trunk. Can you please test it and confirm? 
{quote}

Which maven SNAPSHOT version would that be? 1.3.6-SNAPSHOT?

When will the 1.3.6 version be released?","16/Feb/09 14:10;lars@assense.com;So, I tried to use 1.3.6-SNAPSHOT to confirm the fix, but this version doesn't seem to be available at your site. I attached the result of my attempt","16/Feb/09 14:21;lars@assense.com;Well the repo in my last attachment wasn't right, but I wasn't able to find a valid SNAPSHOT repo for wicket either.","16/Feb/09 18:07;ivaynberg;svn co https://svn.apache.org/repos/asf/wicket/branches/wicket-1.3.x wicket
cd wicket
mvn install

and you will have a local 1.3-snapshot <== notice the version is 1.3-snapshot not 1.3.6-snapshot","18/Feb/09 10:10;lars@assense.com;https://svn.apache.org/repos/asf/wicket/branches/wicket-1.3.x worked again today, but with 

Revision 745450

I currently get:

Tests run: 715, Failures: 2, Errors: 33, Skipped: 0

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] There are test failures.

I'll try again later",18/Feb/09 10:15;lars@assense.com;the test results of Revision 745450 in detail,30/Mar/09 21:03;knopp;-Dmaven.test.skip=true,10/Jun/09 20:41;miojo;How about forgetting the support for IE6? It's dead anyway. :-),25/Aug/10 22:41;ivaynberg;assuming this was fixed,,,,,,,,,,
ServeltWebRequest now improperly decodes urls with parms,WICKET-1804,12403091,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,cdeal,cdeal,26/Aug/08 16:54,24/Aug/10 23:34,13/Mar/19 23:15,24/Aug/10 23:32,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,0,,,,,,,,"I see that WICKET-1624 and WICKET-1627 have done some work in this area, but it seems that they have also introduced a problem relating to the decoding of the path.

I moved to 1.3-SNAPSHOT (revision 688703).  I see that it is the WicketURLDecoder that is causing the problem.  It is prematurely decoding my **parameter** 

Here is the URL(servletPath):  /jspfs/legacyUrl/peerReview%2Fpr_start.jsp 
where 
jspfs is the Wicket mount 
legacyUrl is the parm name 
peerReview%2Fpr_start.jsp is the parm VALUE, it needs to stay encoded! 

instead, it becomes /jspfs/legacyUrl/peerReview/pr_start.jsp which fails to match the serveltPath on line 184 of ServletWebRequest. 

See this http://www.nabble.com/session-%22jumping%22--tp18999615p19002132.html for the original discussion.",Tomcat 5.5.17,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-24 23:32:35.884,,,no_permission,,,,,,,,,,,59315,,,Tue Aug 24 23:32:35 UTC 2010,,,,,,0|i0kf73:,117279,,,,,,,,24/Aug/10 23:32;ivaynberg;should be fixed in 1.4.x series. if still broken please provide a quickstart.,,,,,,,,,,,,,,,,,,,,,,,
Enclosure causes Nullpointer exception,WICKET-2671,12445296,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jdonnerstag,sv3n,sv3n,12/Jan/10 14:06,17/Jan/10 18:27,13/Mar/19 23:15,17/Jan/10 18:27,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,,,wicket,,,,0,,,,,,,,"There is a bug in DirectChildTagIterator which causes a Nullpointer exception with the following stack trace:

Caused by: java.lang.NullPointerException
	at org.apache.wicket.markup.html.internal.DirectChildTagIterator.findNext(DirectChildTagIterator.java:115)
	at org.apache.wicket.markup.html.internal.DirectChildTagIterator.next(DirectChildTagIterator.java:85)
	at org.apache.wicket.markup.html.internal.Enclosure.ensureAllChildrenPresent(Enclosure.java:236)
	at org.apache.wicket.markup.html.internal.Enclosure.onComponentTagBody(Enclosure.java:169)
	at org.apache.wicket.Component.renderComponent(Component.java:2619)
	... 106 more

The problem is in this code fragment:

while (markupStream.hasMore())
{
	final MarkupElement cursor = markupStream.next();
        if (cursor.closes(parent))

markupStream.hasMore() checks if the currentindex is available to retrieve, while markupStream.next() doesn't retrieve the currentindex, but tries to retrieve the currentindex + 1 element. The right function to get the current element is markupStream.get(). 

To fix this, it should be like this:

while (markupStream.hasMore())
		{
			final MarkupElement cursor = markupStream.get();
			markupStream.next();
			if (cursor.closes(parent))

The best fix is imo to make next() in MarkupStream a void method, which will prevent this in the future.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-17 18:27:13.239,,,no_permission,,,,,,,,,,,59281,,,Sun Jan 17 18:27:13 UTC 2010,,,,,,0|i0kcrj:,116885,,,,,,,,"17/Jan/10 18:27;jdonnerstag;fixed in 1.4

Enclosure implementation in 1.5 is completly different.",,,,,,,,,,,,,,,,,,,,,,,
OutOfMemoryError occur for memory leak on FeedbackPanel & FeedbackMessages,WICKET-2384,12430999,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,t_yano,t_yano,21/Jul/09 06:44,23/Jul/09 17:05,13/Mar/19 23:15,21/Jul/09 17:35,1.3.6,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,1.4.0,,wicket,,,,0,,,,,,,,"When I uses component.info() method to display a message, my program stopped by OutOfMemoryError or StackOverflowError. 

I create a sample application to show this problem. Open attached tar.gz file(including a maven project) and run. 
check 'submit continuously' checkbox and click 'register' button. 

The program will display current session size continuously on console. the size will be increased, and finally program will be 
stopped with OutOfMemoryError or StackOverflowError. 

But if you changes only one line, this program will not be stopped. 

---original code--- 
    private SubmitLink insertLink = new SubmitLink(""insertLink"") { 
        public void onSubmit() { 
            info(""message""); 
            setResponsePage(new Test(testFormBean)); 
            Session session = Session.get(); 
            long size = session.getSizeInBytes(); 
            LOGGER.info(""SESSION SIZE: {}"", size); 
        } 
    }; 
--------------------- 

---changed---------- 
    private SubmitLink insertLink = new SubmitLink(""insertLink"") { 
        public void onSubmit() { 
            Session.get().info(""message"");  //CHANGED!!! 
            setResponsePage(new Test(testFormBean)); 
            Session session = Session.get(); 
            long size = session.getSizeInBytes(); 
            LOGGER.info(""SESSION SIZE: {}"", size); 
        } 
    }; 
-------------------- 

   so component's info() method is the reason of this problem. If you commented out 'info()' line, this program never crashed.

   We found out the reason of this problem in a static inner class 'MessageListView' in FeedbackPanel.
  MessageListView uses annonimous inner class of Model (named ad 'replacementModel'), and it imports a FeedbackMessage object from 

enclosing instance. FeedbackPanel holds this annonimous inner class and the annonimous inner class holds a FeedbackMessage.

  When we use component's info() method, the component is assigned into FeedbackMessage object as a 'reporter' object. so, all of 

FeedbackMessage objects have a component instance inside of himself as 'reporter' (only one exception: if you use Session.get().info() 

method instead of component's info() method, 'reporter' object become null).

  All already-displayed FeedbackMessages will be purged at 'detach' time from Session object. But FeedbackPanel holds FeedbackMessages. 

So when page is serialized, all FeedbackMessages, all 'reporter' components is serialized. This is the reason of this problem.

  We can solve this problem if we do not hold FeedbackMessage instance in the annnonimous inner class.
change the code of FeedbackPanel as bellow (this code is based on FeedbackPanel class of wicket 1.4-rc7, line 70):

---- original code -----
@Override
protected void populateItem(final ListItem<FeedbackMessage> listItem)
{
    final FeedbackMessage message = listItem.getModelObject();
    message.markRendered();
    final IModel<String> replacementModel = new Model<String>()
    {
        private static final long serialVersionUID = 1L;

        /**
         * Returns feedbackPanel + the message level, eg 'feedbackPanelERROR'. This is used
         * as the class of the li / span elements.
         * 
         * @see org.apache.wicket.model.IModel#getObject()
         */
        @Override
        public String getObject()
        {
            return getCSSClass(message);
        }
    };

    final Component label = newMessageDisplayComponent(""message"", message);
    final AttributeModifier levelModifier = new AttributeModifier(""class"", replacementModel);
    label.add(levelModifier);
    listItem.add(levelModifier);
    listItem.add(label);
}
--------------------


---- fixed code ----
@Override
protected void populateItem(final ListItem<FeedbackMessage> listItem)
{
    //FIXED message must not be 'final'. It must not be used in inner class.
    //If message could be used in inner class, the instance could be hold by
    //inner class tacitly and never cleared at detach time and will be serialized.
    FeedbackMessage message = listItem.getModelObject();
    message.markRendered();
    final IModel<String> replacementModel = new Model<String>()
    {
        private static final long serialVersionUID = 1L;

        /**
         * Returns feedbackPanel + the message level, eg 'feedbackPanelERROR'. This is used
         * as the class of the li / span elements.
         * 
         * @see org.apache.wicket.model.IModel#getObject()
         */
        @Override
        public String getObject()
        {
            //FIXED -- retrieve a FeedbackMessage object from ListView's Model.
            //         never hold it.
            @SuppressWarnings(""unchecked"")
            List<FeedbackMessage> list = (List<FeedbackMessage>) MessageListView.this.getDefaultModelObject();
            FeedbackMessage feedbackMessage = null;
            int index = listItem.getIndex();
            if(index < list.size()) {
                feedbackMessage = list.get(index);
            }
            if(feedbackMessage == null) return """";
            return getCSSClass(feedbackMessage);
            //UNTIL HERE
        }
    };

    final Component label = newMessageDisplayComponent(""message"", message);
    final AttributeModifier levelModifier = new AttributeModifier(""class"", replacementModel);
    label.add(levelModifier);
    listItem.add(levelModifier);
    listItem.add(label);
}
--------------------
",reproduceable on wicket-1.4-rc7(current newest) and wicket-1.3.6(current newest release of 1.3 series). tested on Windows XP and Mac OS X,,,,,,,,,,,,,,,,,,21/Jul/09 06:46;t_yano;wickettestapp.tar.gz;https://issues.apache.org/jira/secure/attachment/12414080/wickettestapp.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-21 17:03:52.875,,,no_permission,,,,,,,,,,,59269,,,Wed Jul 22 08:37:47 UTC 2009,,,,,,0|i0kdiv:,117008,,,,,,,,21/Jul/09 06:46;t_yano;sample application to reproduce this problem.,21/Jul/09 06:49;t_yano;changed tab to 4 spaces.,"21/Jul/09 17:03;knopp;Problem is that we keep reference to FeedbackMessage in component inside MessageListView item. The feedback message references previous page - that causes the problem, because the previous page is serialized together with current (and the page before, etc). 

Simply removing components from MessageListView should fix the problem.

class MessageListView
{
  ...
  @Override 
  protected void onDetach()
  {
    removeAll();
    super.onDetach();
  }

}","21/Jul/09 17:14;knopp;I've committed a fix, can you check if it helps your problem?","22/Jul/09 08:37;t_yano;OK. my problem is solved with your fixed code. 
Thank you.",,,,,,,,,,,,,,,,,,,
BigDecimalConverter uses jdk5,WICKET-2385,12431025,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,pete,pete,21/Jul/09 13:53,23/Jul/09 17:03,13/Mar/19 23:15,21/Jul/09 18:00,1.3.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,,,wicket,,,,0,,,,,,,,"BigDecimalConverter uses

  new BigDecimal(long) which is @since 1.5

wicket will not run in a jre 1.4 with this...
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59278,,,Tue Jul 21 14:18:59 UTC 2009,,,,,,0|i0kdin:,117007,,,,,,,,"21/Jul/09 14:18;pete;new BigDecimal(int) is jdk 5, too","21/Jul/09 14:18;pete;I recommend

	return new BigDecimal(Long.toString(number.longValue()));

and

	return new BigDecimal(Integer.toString(number.intValue()));
",,,,,,,,,,,,,,,,,,,,,,
SharedResourceRequestTarget allows access to almost arbitrary files under WEB-INF.,WICKET-1992,12411190,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jdonnerstag,sebster,sebster,22/Dec/08 19:42,31/May/09 14:44,13/Mar/19 23:15,31/May/09 14:43,1.3.5,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,,,,,,,0,,,,,,,,"Hi All,

I've just run into what I consider a bit of a security issue with the SharedResourceRequestTarget. It allows me to load files from the /WEB-INF directory (though I have to guess the file names).

For example, if I see there is some bookmarkable page in the app with the name com.myapp.pages.MyBookMarkablePage, I can request the following URL:

http://www.mydomain.com/resources/com.myapp.pages.MyBookMarkablePage/$up$/$up$/$up$/log4j.xml

Replace log4j.xml with applicationContext.xml, or any other guesses for useful files.

In both these files it is more than possible that there is sensitive information such as database urls and passwords or mail server usernames and passwords (though if you use a property configurator in Spring you might be lucky since the password is then contained in a .properties file, which is blocked by Wicket).

Of course there may be lots of other sensitive files in WEB-INF.

I know about the IPackageResourceGuard interface, however, only since today, after looking into this problem. :-) I could build my own implementation with a default deny policy and open up package resources on a need to have basis. However, I REALLY think that Wicket should be secure by default, and a better solution to this problem should be found...

Regards,
Sebastiaan ",,,,,,,,,,,,,,,,,,,22/May/09 13:03;mdietze;wicket1992-1.3.6-jdk1.4.diff;https://issues.apache.org/jira/secure/attachment/12408801/wicket1992-1.3.6-jdk1.4.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-12-24 10:36:38.712,,,no_permission,,,,,,,,,,,92090,,,Sun May 31 14:44:26 UTC 2009,,,,,,0|i0kepj:,117200,,,,,,,,"24/Dec/08 10:36;jdonnerstag;according to my tests web.xml is not accessible. Wicket will through an IllegalArgumentException. That would mean that only files in web-inf/classes are accessible but not files in web-inf. 

log4j.properties is protected by PackageResourceGuard. But log4j.xml and applicationContext.xml are accessible => not good.

I agree with ""Wicket should be secure by default"". May be a solution could be:
- all resources registered with the application are allowed because the developer by purpose added it
- lazily loading resources without registration is deactivated by default. Can be enabled by devs at their own risk.
- PackageResourceGuard to deny access to any resource by default. Access can be granted per Package (with and without subpackages) and files (pattern)
- Add additional path/filename.extensions of well known config files to PackageResourceGuard which are denied by default and can not easily be removed from the list.","24/Dec/08 10:50;jcompagner;everything is now pretty lazy so the point:

> lazily loading resources without registration is deactivated by default. Can be enabled by devs at their own risk. 

will be horrible if we turn that back to what wicket was previously (that everything has to be loaded up front)
also over server restarts or clustering.  Then everything has to be done by the IInitializers again. Which most people dont use.


I think what could be disabled by default is this setting:

CharSequence getParentFolderPlaceholder();

By default i think that setting should be null.
Then wicket is way more safe by default because only resources that are in the same dir or in one of its children are accessible 
and those are default protectd by PackageResourceGuard (class/java/html/properties should be guarded i guess by default)
and then it is pretty safe because in those dirs users dont have sensitive config data. Only data that is really for that component.


Then in the doc of that get/set ParentFolderPlaceholder we should warn them that they also should set a right PackageResourceGuard if this property is set
because if the inherited dangers this property generates.

I dont think WEB-INF can be accessed either because looking at sebs url:

http://www.mydomain.com/resources/com.myapp.pages.MyBookMarkablePage/$up$/$up$/$up$/log4j.xml 

this would be the dir:

http://www.mydomain.com/resources/MyBookMarkablePage/log4j.xml 

and that is the WEB-INF/classes dir not the WEB-INF itself
But in that dir there is a lot of config data also so going up just has to be disabled by default.


","24/Dec/08 11:47;sebster;I agree that the WEB-INF dir itself is not accessible.

However, anything in the the classpath is, provided you are able to find a class with the correct classloader. Since Wicket does not generally hide classnames to the external world, in some cases (e.g., bookmarkable pages) that's easy.

I think the $up$ should be disabled, I don't really see the need for it and it's rather dangerous.

But I also think that's still not enough. Any jar in the WEB-INF/lib is a potential target for resources being accessible from the outside world, simply by finding/guessing a class in the target lib and asking it for the resource your are interested in.

I do not agree with:
> Then wicket is way more safe by default because only resources that are in the same dir or in one of its children are accessible
> and those are default protectd by PackageResourceGuard (class/java/html/properties should be guarded i guess by default)
> and then it is pretty safe because in those dirs users dont have sensitive config data. Only data that is really for that component. 

Because this assumes that the class you're using in the resource request is a component, but in fact in can be any class whatsover.

Personally I would prefer a default deny strategy where the resource class itself implements the IPackageResourceGuard interface. That is, the resource class ITSELF determines if the resource request is allowed. If the interface is not implemented, then it should default to not being allowed.

This way libraries can in an encapsulated way control access to resources in their own jar file/package hieararchy, but you can never request anything that is not expressly allowed.",28/Dec/08 10:42;jdonnerstag;see #wicket-1996 as well.,28/Dec/08 20:25;jdonnerstag;On your last point: A ResourceReference and PackageResource is created for each package (static) resource None of them is responsible or able to handle multiple files. Hence they can not control access to a library. ,28/Dec/08 20:34;jdonnerstag;fixed,22/May/09 13:03;mdietze;I created a backport of this bugfix to wicket 1.3.6. The patch is appended to this bug. Use at your own risk :),"22/May/09 15:06;ivaynberg;Juegen, can you apply the patch please? You did the original work...",24/May/09 18:00;jdonnerstag;waiting to apply until current junit test failures are fixed,31/May/09 14:43;jdonnerstag;applied provided backported patch to 1.3 trunk,31/May/09 14:44;jdonnerstag;One junit test failed (expiry header) before applying the patch and the same test still failed after I applied the patch,,,,,,,,,,,,,
WicketSessionFilter assumes that the WicketFilter has already been inited,WICKET-2243,12423806,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,drzewo,drzewo,26/Apr/09 18:34,26/Apr/09 18:47,13/Mar/19 23:15,26/Apr/09 18:47,1.3.6,1.4-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,,,wicket,,,,0,,,,,,,,"The patch applied for issue 2151 breaks things. According to the servlet specs, the order in which container initializes filters is undefined. WicketSessionFilter assumes that the appropriate wicket filter serving wicket application has already been inited. This is particularly noticeable on WebSphere AppServer 6.1 (6.1.0.19), while on Tomcat 6.0 and 5.5 runs fine.
",,,,,,,,,,,WICKET-2180,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-26 18:35:32.468,,,no_permission,,,,,,,,,,,59272,,,Sun Apr 26 18:35:32 UTC 2009,,,,,,0|i0kdxj:,117074,,,,,,,,"26/Apr/09 18:35;ivaynberg;this is checked into 1.3.x branch, but didnt make the 1.3.6 release candidate. ",,,,,,,,,,,,,,,,,,,,,,,
WicketSessionFilter assumes that the WicketFilter has already been inited,WICKET-2180,12417283,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,drzewo,drzewo,19/Mar/09 13:50,26/Apr/09 18:35,13/Mar/19 23:15,26/Apr/09 18:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,1,,,,,,,,"The patch applied for issue 2151 breaks things. According to the servlet specs, the order in which container initializes filters is undefined. WicketSessionFilter assumes that the appropriate wicket filter serving wicket application has already been inited. This is particularly noticeable on WebSphere AppServer 6.1 (6.1.0.19), while on Tomcat 6.0 and 5.5 runs fine.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-07 15:03:42.019,,,no_permission,,,,,,,,,,,203088,,,Sun Apr 26 05:37:49 UTC 2009,,,,,,0|i0ke47:,117104,,,,,,,,20/Mar/09 21:33;drzewo;Added 1.3.6 to affected versions.,07/Apr/09 15:03;jdonnerstag;I submitted a patch for 1.4,"26/Apr/09 05:36;ivaynberg;actually this didnt make it into a build candidate for 1.3.6
","26/Apr/09 05:37;ivaynberg;the fix is committed into 1.3.x branch, but the build candidate i created did not include it. will wait to see what happens with the build. if the build is voted this will go into 1.3.7, if the build needs to be rebuilt then this will make it into 1.3.6 redox.

the fix has also been comitted into trunk",,,,,,,,,,,,,,,,,,,,
SubmitLink.onSubmit() is not called for submit links outside the form,WICKET-2093,12414398,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,ivaynberg,ivaynberg,09/Feb/09 16:38,16/Feb/09 18:01,13/Mar/19 23:15,09/Feb/09 16:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,SubmitLink.onSubmit() is not called for submit links outside the form,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203007,,,2009-02-09 16:38:57.0,,,,,,0|i0kedb:,117145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DatePicker is not thread-safe,WICKET-1988,12411061,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jdonnerstag,robyf,robyf,19/Dec/08 17:02,22/Dec/08 21:10,13/Mar/19 23:15,19/Dec/08 18:14,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-datetime,,,,0,,,,,,,,"DatePicker uses 2 SimpleDateFormats as static final fields. That causes random failures under load because SimpleDateFormat is not thread-safe. From its javadocs: ""Date formats are not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.""

For example:
18:34:06,214 (TP-Processor3) ERROR [org.apache.wicket.RequestCycle] - Exception in rendering component: [MarkupContainer [Component id = _header_0]]
org.apache.wicket.WicketRuntimeException: Exception in rendering component: [MarkupContainer [Component id = _header_0]]
        at org.apache.wicket.Component.renderComponent(Component.java:2519)
        at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1411)
        at org.apache.wicket.Component.render(Component.java:2317)
        at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:223)
        at org.apache.wicket.markup.resolver.HtmlHeaderResolver.resolve(HtmlHeaderResolver.java:78)
        at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1324)
        at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1427)
        at org.apache.wicket.Page.onRender(Page.java:1470)
        at org.apache.wicket.Component.render(Component.java:2317)
        at org.apache.wicket.Page.renderPage(Page.java:904)
        at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:231)
        at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:104)
        at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1181)
        at org.apache.wicket.RequestCycle.step(RequestCycle.java:1252)
        at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1353)
        at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
        at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:355)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:200)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at com.huitale.marketplace.security.SessionHijackingFilter.doFilter(SessionHijackingFilter.java:51)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)
        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:283)
        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)
        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)
        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:690)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 14
        at sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(BaseCalendar.java:436)
        at java.util.GregorianCalendar.computeFields(GregorianCalendar.java:2081)
        at java.util.GregorianCalendar.computeFields(GregorianCalendar.java:1996)
        at java.util.Calendar.setTimeInMillis(Calendar.java:1104)
        at java.util.Calendar.setTime(Calendar.java:1070)
        at java.text.SimpleDateFormat.format(SimpleDateFormat.java:859)
        at java.text.SimpleDateFormat.format(SimpleDateFormat.java:852)
        at java.text.DateFormat.format(DateFormat.java:316)
        at org.apache.wicket.extensions.yui.calendar.DatePicker.configure(DatePicker.java:390)
        at org.apache.wicket.extensions.yui.calendar.DateTimeField$1.configure(DateTimeField.java:128)
        at org.apache.wicket.extensions.yui.calendar.DatePicker.renderHead(DatePicker.java:224)
        at org.apache.wicket.Component.renderHead(Component.java:2568)
        at org.apache.wicket.markup.html.internal.HtmlHeaderContainer$1.component(HtmlHeaderContainer.java:220)
        at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:829)
        at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:844)
        at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:844)
        at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:869)
        at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.renderHeaderSections(HtmlHeaderContainer.java:211)
        at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.onComponentTagBody(HtmlHeaderContainer.java:136)
        at org.apache.wicket.Component.renderComponent(Component.java:2480)
        ... 35 more

happens because one internal SimpleDateFormat's field changes while the class is formatting a date. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-19 18:14:58.415,,,no_permission,,,,,,,,,,,59268,,,Mon Dec 22 21:10:12 UTC 2008,,,,,,0|i0keq7:,117203,,,,,,,,19/Dec/08 18:14;jdonnerstag;thanks,"22/Dec/08 18:37;jcompagner;juergen, did you port this one also to the 1.3 stream?
this is serious enough to fix also in that release",22/Dec/08 21:10;jdonnerstag;no I have not.,,,,,,,,,,,,,,,,,,,,,
Switching locale doesn't change already rendered feedback messages' language,WICKET-891,12376904,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,,dashorst,dashorst,26/Aug/07 22:31,05/Nov/08 18:36,13/Mar/19 23:15,26/Aug/07 23:54,1.3.0-beta3,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"It seems that the first localized feedback message is used to render, regardless of the session's locale.

Test case:

FormInput example:
 - select Thai language
 - type 'a' into an integer field, for instance the multiplication example
 - press submit
 - note the thai feedback message

 - change Language to english
 - type 'a' into an integer field, for instance the multiplication example
 - press submit
 - note that the language of the feedback message hasn't changed to english, but remains thai.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-26 22:34:42.23,,,no_permission,,,,,,,,,,,59243,,,Wed Nov 05 18:36:03 UTC 2008,,,,,,0|i0khkv:,117665,,,,,,,,"26/Aug/07 22:34;ehillenius;It is actually more serious than just switching sessions. If you loaded a message in say Thai for *any* session, that message will be used for all sessions after that, regardless of the locale for that session. This means localization is completely broken. We also have to test whether this applies only to properties/ message bundles or to all resources.",26/Aug/07 22:37;ehillenius;patched unit tests PropertiesTest and ValidatorPropertiesTest to prove the failures.,26/Aug/07 23:07;knopp;Should be fixed now.,"05/Nov/08 18:06;brill;What version is the fix in?
I'm still having this or a very similar issue in 1.4-SNAPSHOT as of November 5, 2008

It looks as if the locale is not being updated when changed on the client side.",05/Nov/08 18:12;ivaynberg;do you have a quickstart/testcase? the testcase outlined in the summary of this issue works fine for me.,"05/Nov/08 18:20;brill;No, what module am I looking for to run this test?

in general I'm getting unexpected behavior from locale resources but until I can dig further I can't define whats causing them.","05/Nov/08 18:36;ivaynberg;> No, what module am I looking for to run this test?

huh? see the description of this issue for a testcase i tried

> in general I'm getting unexpected behavior from locale resources but until I can dig further I can't define whats causing them. 

right. that is not very helpful without a testcase",,,,,,,,,,,,,,,,,
ajax update brakes Form in ModalWindow,WICKET-1625,12395894,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,david_ttsa,david_ttsa,13/May/08 08:49,17/Sep/08 08:50,13/Mar/19 23:15,17/Sep/08 08:50,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,wicket-extensions,,,1,,,,,,,,"When a Form contained by a ModalWindow is updated via AJAX (for example to perform field validation), the AJAX response is correct (the full correct form is in the response) but the final HTML code (after the Ajax update) is erroneous.
A consequence is that a second attempt to submit the same Form via AJAX generates a JavaScript error: wicket-ajax.js, line 456, ""element has no properties"". 
In other words, ""element"" is NULL at this point.

A possible reason for this:
By looking at the HTML with Firebug, one can see that before the first AJAX call,  the page looks like <html>...<form id=""bar""><formfields>...</formfields></form></html> and after the request (i.e. after the AJAX update of the Form) the code is <html>...<formfields>...</formfields></html> : the ""form"" tags disappeared from the HTML code...","tested in IE7, FF2 and FF3",,,,,,,,,,,,,,,,,,13/May/08 08:56;david_ttsa;wicket-quickstart-form-modal-bug.zip;https://issues.apache.org/jira/secure/attachment/12381936/wicket-quickstart-form-modal-bug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-13 08:54:29.927,,,no_permission,,,,,,,,,,,59313,,,Wed Sep 17 08:50:44 UTC 2008,,,,,,0|i0kfo7:,117356,,,,,,,,"13/May/08 08:54;knopp;Check if your markup is valid. It looks like you've a block element inside inline element or something like that. That will work on normal requests, but will break during ajax request.  Also if you have modal window with panel and form in it, make sure you put the actual modal window in form as well. Also that you use the latest 1.3 version.",13/May/08 08:56;david_ttsa;a quickstart project to demonstrate the bug,13/May/08 09:07;david_ttsa;putting the ModalWindow in a Form itself solved the issue.,"25/May/08 06:24;ivaynberg;matej, what to do with this one?","25/May/08 15:41;knopp;Improve javadoc maybe? Dunno, i'll think of hidden form inside modal window, that might work too.",17/Sep/08 08:50;knopp;Added form to modal window itself.,,,,,,,,,,,,,,,,,,
false positive or wrong unit tests unit tests when ajax is involved,WICKET-1199,12383753,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,,seitz,seitz,02/Dec/07 21:58,16/Sep/08 20:32,13/Mar/19 23:15,02/Dec/07 22:32,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,0,,,,,,,,"MockWebApplication#setupRequestAndResponse always sets up a non ajax requestcycle.
this method is also used to setup the requestcycle for ajax related functionality (eg. BaseWicketTester#clickLink).

the consequence are:
a) the markup for expected ajax responses contains wicket tags and wicket attributes, although these are never rendered in ajax responses.
b) some unit tests (eg. AjaxTimerBehaviorTest#testAddToAjaxUpdate, ComponentBorderTest#testHideableBorder) succeed, when the same code in non-unit-test environment doesn't work, because there is no ajax request during testing, while there is one during normal execution.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59267,,,Sun Dec 02 22:32:56 UTC 2007,,,,,,0|i0kgr3:,117531,,,,,,,,"02/Dec/07 22:32;seitz;fixed.

added the method MockWebApplication#setupRequestAndResponse(boolean isAjax), which adds the ""Wicket-Ajax"" header if isAjax is true.
this method is used, instead of the overloaded method with no parameters, if a requestcycle should be built for ajax related unit tests.",,,,,,,,,,,,,,,,,,,,,,,
MarkupFragmentFinder fails on transparent resolvers within Repeaters,WICKET-1560,12394594,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,jkriesten,jkriesten,23/Apr/08 08:12,03/Jul/08 05:59,13/Mar/19 23:15,17/May/08 14:07,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket,,,,0,,,,,,,,"I extended the AjaxDataTable to be able to add Rows to certain states of the rows. However, MarkupFragmentFinder fails to resolve the code under this condition since it compares with the wrong components in this case:

Markup:

<wicket:container wicket:id=""rows"">
  <tr wicket:id=""row""><td wicket:id=""cells""><span wicket:id=""cell"">[cell]</span></td></tr>
  <tr wicket:id=""action-row"" class=""actionRow""></tr>
</wicket:container>

'row' is the transparent resolver in this case to maintain the hierarchy needed by the DataTable. MarkupFragmentFinder fails in the case of adding a cell to an AjaxRequestTarget. 

Fix:

Everything works as expected, when MarkupFragmentFinder checks for the parent being an AbstractRepeater and in the case compares the parent.id with the supplied id (code provided by Gerolf):

if (elem instanceof ComponentTag)
{
  ComponentTag tag = (ComponentTag)elem;
  String id = tag.getId();
  if ((id != null) && id.equals(component.getId()))
  {
    // Ok, found it
    return markupStream;
  }
  else   
  {   
    Component parent = component.getParent();   
    if (parent instanceof AbstractRepeater && id != null && id.equals(parent.getId()))   
    {   
      return markupStream;   
    }   
  }
}

",Any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-17 14:07:16.345,,,no_permission,,,,,,,,,,,59266,,,Thu Jul 03 04:36:12 UTC 2008,,,,,,0|i0kfsn:,117376,,,,,,,,"23/Apr/08 08:21;jkriesten;Just realized:

Maybe it doesn't has to do anything with transparent resolvers at all but only with nested repeaters and adding cells from the innermost.",17/May/08 14:07;seitz;see thread: http://markmail.org/message/4yvcnp5xrmngd7c2,"02/Jul/08 22:28;knopp;I have to remove parent instanceof AbstractRepeater check, I'm using own repeaters that don't extend AbstractRepeater","03/Jul/08 04:36;jkriesten;If you don't extend AbstractRepeater, in which way does this affect you at all?",,,,,,,,,,,,,,,,,,,,
Prototype scoped Spring beans,WICKET-613,12370793,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,mindhaq,mindhaq,04/Jun/07 00:19,19/Jun/08 17:00,13/Mar/19 23:15,19/Jun/08 17:00,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket-spring,,,,1,,,,,,,,"I copied the following text from my discussion on wicket-user, and was asked to open an issue, so here it is:
http://www.nabble.com/Prototype-scoped-Spring-beans-tf3849285.html

For a more complex form I wanted to use a ""stateful"" Springbean, to which I applied scope=""prototype"". The idea is to have one bean instance for every Form instance. I would access the bean with PropertyModels and direct method calls during construction (i.e. setting initial state from input parameters) and during events, which would alter the state. I inject the bean into the Form with @SpringBean annotation.

This works somehow, but sometimes, especially after using the backbutton, I had the problem that the internal state was reset. So I analyzed the stack in  the constructor of the bean implementation, and found out that it was called twice during construction of the Form. First, during the super() call, and then again in the next line during a method call on that bean. I appended both stacktraces below. The  proxy itself does not change.

This happens again after going back and e.g. submitting again. This results in a NPE, because the internal state is reset.

I understand from reading the mailing list that the Wicket-Proxy does nothing but a lookup in the Application context, and does not know or care about spring scope.

And here I'm a little stuck. I am already considering to put the state into the Form, and make the Bean a singleton without any internal state. As that would mean some heavy refactoring, I would prefer a way where the Spring acces would work as I want. Or is this a wrong way altogether?
","JDK 6, Jetty",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-04 00:30:45.225,,,no_permission,,,,,,,,,,,42035,,,Fri Jun 06 14:52:53 UTC 2008,,,,,,0|i0kicv:,117791,,,,,,,,"04/Jun/07 00:30;ehillenius;Igor, do you mind looking into this one please? Cheers.","04/Jun/07 15:54;mindhaq;Another thread on this issue, also about session and request scoped beans:
http://www.nabble.com/Injecting-session-scoped-beans-with-wicket-spring-annot-tf3851393.html",18/Jun/07 03:04;ivaynberg;removed failfast check as it caused an extra creation of a prototype bean instance upon injection,"06/Jun/08 14:52;ivaynberg;from	Daniel Stoch
to	dev@wicket
date	Fri, Jun 6, 2008 at 3:16 AM
subject	WICKET-613: Prototype scoped Spring beans - AnnotProxyFieldValueFactory regression

There is a resolved issue WICKET-613
(https://issues.apache.org/jira/browse/WICKET-613), where Igor has
removed failfast check in AnnotProxyFieldValueFactory. But in all
actual Wicket versions (>1.3.0) this failfast check still exists. So I
have browsed SVN for AnnotProxyFieldValueFactory class changes:
- revision 548178: WICKET-613: removed failfast check as it caused an
extra constructor invocation on prototype beans (by ivaynberg)
- 549055: backported the failFast mechanism from 2.0, all tests pass
now (by janne)

The question is why this failfast mechanism was backported and what
about the resolution of issue WICKET-613? I think it should be
reopened.",,,,,,,,,,,,,,,,,,,,
"MarkupCache can ""leak"" memory",WICKET-1370,12389525,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jcompagner,ivaynberg,ivaynberg,25/Feb/08 20:19,09/Apr/08 18:01,13/Mar/19 23:15,07/Mar/08 23:28,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,1,,,,,,,,"Currently markup cache uses a cache without any capacity upper bound :| normally this would be ok, holding markup of an entire application doesnt require THAT much memory. However, suppose we have Index page with markup Index.html. the page is requested with local en_us and we cache contents of index.html in the cache. now Index is requested with locale en_gb and we cache it AGAIN. Now we have two entries in the cache caching the exact same thing. the more locales users request (we pull the locale from the user's browser) the more copies of the same thing we cache.

Thomas Singer reported his application running out of memory, attached memory snapshot contained a MarkupCache instance of over 48MB retained size (the internal map had allocated 4096 keys). He has an application with about 64 pages, and they only support one locale. When I browsed the snapshot I noticed a lot of different locales in the markup cache keys....

An ideal solution would be to have two caches. One for [container.class,locale,style,variation]->[resource.name] lookup, and the other for [resource.name]->[resource.contents] lookup.

A suboptimal solution would be to place an upper bound on the cache. See attached patch which contains a 1000 item lru cache. if looks ok we can roll it in as a solution for 1.3.2 branch - since it doesnt require any interfaces breakages.",,,,,,,,,,,,,,,,,,,25/Feb/08 20:19;ivaynberg;WICKET-1370.patch.txt;https://issues.apache.org/jira/secure/attachment/12376434/WICKET-1370.patch.txt,07/Mar/08 23:12;jcompagner;markuppatch.txt;https://issues.apache.org/jira/secure/attachment/12377406/markuppatch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-03-07 23:12:32.759,,,no_permission,,,,,,,,,,,59312,,,Fri Mar 07 23:28:34 UTC 2008,,,,,,0|i0kgbz:,117463,,,,,,,,"07/Mar/08 23:12;jcompagner;We pretty much already had the interface we wanted for this (IFixedLocationResourceStream). I only needed to let MarkupResourceStream also implement it.
And then MarkupCache uses that interface to checkout what the actual file is

I dont think we will get IResourceStream implementation that are not File or URL and if we do then we fallback on the cachekey only approache.

It seems to work fine for me when i test locally, the markup is only created once per fixed location and then access through

cachekey -> locationstring -> markup

So if locationString doesn't work we get this:

cachekey -> cachekey -> markup

But i guess that is a very small percentage if there is even 1 on this planet...

should we include this into 1.3.2?","07/Mar/08 23:28;jcompagner;ok i committed it.
This should be looked at a bit more to see if for example all the interaction with the cache works now
Especially the reloading/removing of markup",,,,,,,,,,,,,,,,,,,,,,
Close ModalWindow in IE with scrollbars scrolls to bottom,WICKET-1265,12385694,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,andre.winkler@hispeed.ch,andre.winkler@hispeed.ch,07/Jan/08 11:47,17/Mar/08 23:03,13/Mar/19 23:15,17/Mar/08 23:03,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,2,,,,,,,,"The actual Site is too long, so the Internet Explorer shows ScrollBars. If I show now a ModalWindow and close this, Wicket scrolls to bottom of the site.

I analyzed the javascript code of the ModalWindow (modal.js) and the problem is by the solution of the focus problem:
if (Wicket.Browser.isIE()) {
  // There's a strange focus problem in IE that disables focus on entire page,
  // unless something focuses an input
  var e = document.createElement(""input"");
  document.body.appendChild(e);
  e.focus();
  document.body.removeChild(e);
}

The better solution, that ie don't scrolls to bottom, is:
if (Wicket.Browser.isIE()) {
  // There's a strange focus problem in IE that disables focus on entire page,
  // unless something focuses an input
  var e = document.createElement(""input"");
  document.body.insertBefore(e, document.body.firstChild);
  e.focus();
  document.body.removeChild(e);
}",Windows XP with Internet Explorer 7,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-18 16:48:56.39,,,no_permission,,,,,,,,,,,59311,,,Mon Mar 10 11:30:09 UTC 2008,,,,,,0|i0kglb:,117505,,,,,,,,"18/Jan/08 16:48;rdonahue;This is a problem for us too.  As you can see in this video, http://www.utipu.com/app/tip/id/536/ , it's probably a little jarring for users.","25/Feb/08 10:56;vjaka;Yes, that is really a problem.
However the fix provided by André Winkler is not the best, since in this case the window will be scrolled to the beginning. In most cases that's ok, but there could be rare occasions when this is undesired, thus a better fix should be estimated as well, for example, giving a this.window.parentNode there instead of the document.body.firstChild and moving the while bunch of code upper while parentNode still exists.

But anyhow, even the provided quick-fix is a good solution for most users, so it would be really nice to be incorporated to 1.3.2 ;0

BTW, the same problem is also with IE 6.0 (tested from w2003 server), so the problem is not IE7 only - the focus fix is buggy in all cases when used :).",08/Mar/08 14:38;jcompagner;matej can we fix this for 1.3.2?,08/Mar/08 15:54;knopp;I don't really think this is a good fix. Better solution would be to just absolute position the element and make sure it is in the viewport. Too bad we can't use position:fixed in IE6. I'll try to take a look at this today.,09/Mar/08 08:54;knopp;I've committed a possible fix. Can anyone test it?,"10/Mar/08 11:30;vjaka;I've tested the fix you have provided, it's working perfectly ;)
Hoping to see it in 1.3.2 version release already.",,,,,,,,,,,,,,,,,,
GridView has a bug in findNext that prevents ReuseIfModelsEqualStrategy from working correctly,WICKET-1419,12390900,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,rdearing,rdearing,13/Mar/08 00:02,13/Mar/08 00:27,13/Mar/19 23:15,13/Mar/08 00:27,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,,,,,0,,,,,,,,"the method findNext() in GridView.java has this code:

if (cells != null && cells.hasNext())
{
		next = (Item)cells.next();
}

but it should be:

if (cells != null && cells.hasNext())
{
		next = (Item)cells.next();
                return;
}


I have attached a quickstart project that will recreate the bug. When you hit the ""toggle buggy"" link, the panel should maintain its state and you should see the text toggle from ""false"" to ""true"". As you can see, it works correctly in the 1st column of panels, but the second column does not work.

There is also a class called MyGridView in the attachment that fixes the issue.
",,,,,,,,,,,,,,,,,,,13/Mar/08 00:04;rdearing;MyGridView.java;https://issues.apache.org/jira/secure/attachment/12377740/MyGridView.java,13/Mar/08 00:03;rdearing;gridview-bug.tgz;https://issues.apache.org/jira/secure/attachment/12377739/gridview-bug.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59265,,,Thu Mar 13 00:04:03 UTC 2008,,,,,,0|i0kg67:,117437,,,,,,,,13/Mar/08 00:03;rdearing;quickstart project attached,"13/Mar/08 00:04;rdearing;fixed version of GridView... a one liner, the best kind.",,,,,,,,,,,,,,,,,,,,,,
External JAvascript references not included,WICKET-1402,12390486,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,jdpatterson,jdpatterson,07/Mar/08 20:01,09/Mar/08 07:32,13/Mar/19 23:15,09/Mar/08 07:32,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"When using IHeaderResponse to include an external Javascript file, it is not included because of this bug:


Index: /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/html/internal/HeaderResponse.java
===================================================================
--- /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/html/internal/HeaderResponse.java	(revision 614519)
+++ /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/html/internal/HeaderResponse.java	(working copy)
@@ -177,7 +177,7 @@
 		{
 			List token1 = Arrays.asList(new Object[] { ""javascript"", url });
 			List token2 = Arrays.asList(new Object[] { ""javascript"", id });
-			if (wasRendered(token1) == false && wasRendered(token2))
+			if (wasRendered(token1) == false && wasRendered(token2) == false)
 			{
 				JavascriptUtils.writeJavascriptUrl(getResponse(), url, id);
 				markRendered(token1);
@@ -258,8 +258,7 @@
 	{
 		if (!closed)
 		{
-			List token = Arrays
-					.asList(new Object[] { ""javascript-event"", target, event, javascript });
+			List token = Arrays.asList(new Object[] { ""javascript-event"", target, event, javascript });
 			if (wasRendered(token) == false)
 			{
 				renderJavascriptReference(WicketEventReference.INSTANCE);
@@ -264,7 +263,7 @@
 			{
 				renderJavascriptReference(WicketEventReference.INSTANCE);
 				JavascriptUtils.writeJavascript(getResponse(), ""Wicket.Event.add("" + target +
-						"", \"""" + event + ""\"", function() { "" + javascript + "";});"");
+					"", \"""" + event + ""\"", function() { "" + javascript + "";});"");
 				markRendered(token);
 			}
 		}
@@ -275,7 +274,7 @@
 	 */
 	public void close()
 	{
-		this.closed = true;
+		closed = true;
 	}
 
 	/**

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59294,,,Fri Mar 07 20:04:16 UTC 2008,,,,,,0|i0kg87:,117446,,,,,,,,"07/Mar/08 20:04;jdpatterson;Sorry that patch is rubbish - I don;t know why that other stuff was included.  Here we go...


Index: /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/html/internal/HeaderResponse.java
===================================================================
--- /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/html/internal/HeaderResponse.java	(revision 614519)
+++ /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/html/internal/HeaderResponse.java	(working copy)
@@ -177,7 +177,7 @@
 		{
 			List token1 = Arrays.asList(new Object[] { ""javascript"", url });
 			List token2 = Arrays.asList(new Object[] { ""javascript"", id });
-			if (wasRendered(token1) == false && wasRendered(token2))
+			if (wasRendered(token1) == false && wasRendered(token2) == false)
 			{
 				JavascriptUtils.writeJavascriptUrl(getResponse(), url, id);
 				markRendered(token1);

",,,,,,,,,,,,,,,,,,,,,,,
Page#readResolve is not called,WICKET-1262,12385669,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,knopp,knopp,06/Jan/08 23:30,14/Jan/08 21:20,13/Mar/19 23:15,14/Jan/08 21:20,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,Page#readResolve is not called on page deserialization. This causes significant problems when there are dependencies between pages. ,JDK6,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59262,,,Sun Jan 06 23:31:31 UTC 2008,,,,,,0|i0kglz:,117508,,,,,,,,"06/Jan/08 23:31;knopp;Changing the access modifier to public seem to selve it. This looks like a bug in ObjectInputStream, because the serialization specificaiton says that there can be any access modifier for readResolve.",,,,,,,,,,,,,,,,,,,,,,,
ModalWindow makes Internet Explorer 6 show an security warning dialog,WICKET-855,12376231,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,pete,pete,17/Aug/07 11:31,13/Dec/07 01:19,13/Mar/19 23:15,13/Dec/07 01:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket-extensions,,,,0,,,,,,,,"When showing an

   org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow

over an HTTPS connection Internet Explorer will popup a security warning about showing mixed secure and non-secure content. From the point of usability this is confusing and unnecessary for the user.

Internet Explorer shows this warning because ModalWindow uses an <iframe> tag without an 'src=' attribute. 

Despite the complex nature of the bug the fix is relatively easy...


[org.apache.wicket.extensions.ajax.markup.html.modal.res/modal.js]

  change line 1062 from:

     ""<iframe frameborder=\""0\"" id='""+idContent+""' allowtransparency=\""false\"" style=\""height: 200px\"">""+

  to

     ""<iframe src='://0' frameborder=\""0\"" id='""+idContent+""' allowtransparency=\""false\"" style=\""height: 200px\"">""+

This way there will be an 'src' attribute in the <iframe> from the very beginning and no warning popup will be shown on explorer anymore.

The reason for using an obscure url like

 ://0

is already explained in WICKET-523 (and http://dev.mootools.net/ticket/139)

As this fix is so easy and the problem is really serious (you effectively can't use ModalWindow in a secure professional environment) I would plead to integrate it before wicket-extensions-1.3 final.","Internet Explorer 6 (probably similar on earlier versions), HTTPS",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 15:18:12.108,,,no_permission,,,,,,,,,,,201878,,,Tue Nov 27 19:14:40 UTC 2007,,,,,,0|i0khpb:,117685,,,,,,,,21/Aug/07 15:18;jbq;Looks reasonable to do for the next release,22/Aug/07 17:25;almaw;Fixed in trunk. Thanks very much for the helpful spec and trace of the issue + fix.,"23/Aug/07 16:04;pete;Thanks for the quick fix, too. Everything works like a charm now, even in stupid Explorer :-)","28/Aug/07 18:00;cdeal;I don't know that this works like a charm just yet...

I think that wicket's relative URL code is somehow attaching the '://0' to the url which is causing errors on my page when displaying the ModalWindow.  The ModalWindow renders fine, but then a request is sent for the containing page (the one where the ModalWindow is defined) with the '://0'  appended to it.   I believe that it is coming from this new src attribute.

13:37:25,954 ERROR RequestCycle:1240 - URL fragment has unmatched key/value pair: mode/UPDATE/uId/%7B206F1C88-CAC3-4131-BBC0-7C7F5260F7F7%7D/://0
java.lang.IllegalStateException: URL fragment has unmatched key/value pair: mode/UPDATE/uId/%7B206F1C88-CAC3-4131-BBC0-7C7F5260F7F7%7D/://0
	at org.apache.wicket.request.target.coding.AbstractRequestTargetUrlCodingStrategy.decodeParameters(AbstractRequestTargetUrlCodingStrategy.java:174)
	at org.apache.wicket.request.target.coding.PackageRequestTargetUrlCodingStrategy.decode(PackageRequestTargetUrlCodingStrategy.java:103)
	at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.targetForRequest(WebRequestCodingStrategy.java:384)
	at org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:175)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1078)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1164)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:486)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:268)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.valves.FastCommonAccessLogValve.invoke(FastCommonAccessLogValve.java:495)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)
","29/Aug/07 15:08;pete;What version of Explorer are you using?

can you locate an entry in regedit for GUID = 7B206F1C88-CAC3-4131-BBC0-7C7F5260F7F7 ...?
","29/Aug/07 15:10;pete;Sorry, I mean

206F1C88-CAC3-4131-BBC0-7C7F5260F7F7","29/Aug/07 15:28;cdeal;IE6

No, I didn't find either guid when searching regedit (keys, values, or data).  Neither did a coworker experieincing the same problem.
","03/Sep/07 09:53;almaw;OK, will look into this one further. :(","30/Sep/07 14:59;knopp;Actually, current at wicket-event.js, we used to have problems with ://. Currently for https wicket-event uses //:  ('\/\/:' escaped), which seems to work fine with IE6/https, at least noone complains. perhaps the same thing would work for this iframe.

(the entire snippet is var src = (window.location.protocol == 'https:') ? '\/\/:' : 'javascript:void(0)'; )
","01/Nov/07 09:14;knopp;Should be fixed, please reopen if the fix doesn't work","26/Nov/07 20:50;aburgel;i'm still seeing the illegal state exception described by chuck above with rc1 in firefox 2.0.0.9 and ie 7.0.5730.11:

2007-11-26 14:33:32,350 ERROR RequestCycle - URL fragment has unmatched key/value pair: id/31721/://0
java.lang.IllegalStateException: URL fragment has unmatched key/value pair: id/31721/://0
        at org.apache.wicket.request.target.coding.AbstractRequestTargetUrlCodingStrategy.decodeParameters(AbstractRequestTargetUrlCodingStrategy.java:174)
        at org.apache.wicket.request.target.coding.PackageRequestTargetUrlCodingStrategy.decode(PackageRequestTargetUrlCodingStrategy.java:103)
        at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.targetForRequest(WebRequestCodingStrategy.java:475)
        at org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:175)
        at org.apache.wicket.RequestCycle.step(RequestCycle.java:1152)
        at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1248)
        at org.apache.wicket.RequestCycle.request(RequestCycle.java:489)
        at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:343)

","27/Nov/07 02:17;knopp;That is really weird, did you clear your browser cache?","27/Nov/07 02:55;aburgel;it looks like your fix for this issue didn't make it into rc1. thats what threw me off. (the ""Fix version"" field should probably be updated.)

i will try the newer version of modal.js tomorrow to see if it fixes my problem.","27/Nov/07 19:14;aburgel;ok, that fixes it for me. so this issue will be resolved for rc2.

thanks.",,,,,,,,,,
Wicket should provide an easy method to generate absolute urls to bookmarkable pages,WICKET-609,12370653,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jdonnerstag,crumley,crumley,31/May/07 23:03,02/Dec/07 10:21,13/Mar/19 23:15,02/Dec/07 10:21,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,,,,,14,,,,,,,,"Currently there is no easy way to generate an absolute url for a bookmarkable page. Something like getFullyQualifiedUrl(String contextRoot, Class page, PageParameters parameters) would be ideal. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-31 23:12:09.203,,,no_permission,,,,,,,,,,,59304,,,Sun Dec 02 10:21:18 UTC 2007,,,,,,0|i0kidr:,117795,,,,,,,,"31/May/07 23:12;almaw;This would be useful for specific stuff, like e-mailing people confirmation links and things. We'll need some user input, hence the contextRoot suggestion above, which should possibly be called ""fullyQualifiedPrefix"", which we should check starts with http:// or https://, probably.","23/Aug/07 01:46;wireframe;just want to voice that I've been experiencing this difficulty with the current 1.3 version.  I'm integrating with an open ID provider and need to provide them with a complete url to callback to my application once authentication has succeeded.  

I have to hardcode my return url currently because wicket does not expose an API to generate an absolute URL.  This is a *big* maintainability issue for me, and would like to see this bumped up higher than ""minor"".  Hopefully this can make it into 1.3!

keep up the great work guys!","24/Aug/07 08:34;jbq;I don't think it will be ever possible in a web environment to guess the absolute URL.  You would have to hardcode it somewhere in a setting, even if we add support for this in Wicket.","24/Aug/07 13:19;crumley;The biggest hurdle to solve the problem is to provide some way to ask wicket for an absolute url to a specific page. For instance if you could ask wicket for a url in the form of ""/foo/bar?arg1=xyz"" instead of ""../../foo/bar?arg1=xyz"" then somewhere you could configure your base url ""http://domain.com"", append the two strings and you have your absolute url. 

Another approach would be to use the HttpServletRequest to get the hostname that was requested by the user and use that in the absolute url. 

The real issue is that right now there is no easy way to tell wicket I want an absolute url rather than a relative one and because of that the url that wicket generates is tied to the context (url location) of the current request. In my opinion this makes urlFor(...) almost useless (unless of course you are building a component that uses it, all other uses no longer make sense).","30/Aug/07 15:01;slonopotamus;Solution:

{code:java}
String getAbsoluteUrl(final HttpServletRequest request, final String servletPath) {
    final StringBuffer requestUrl = request.getRequestURL();
    final int start = requestUrl.length() - request.getServletPath().length();
    final int end = requestUrl.length();
    final StringBuffer absoluteContextPath = requestUrl.delete(start, end);
    return absoluteContextPath.append(servletPath).toString();
}
final Page page = ...
HttpServletRequest req = ...
final String servletPath = ""/"" + RequestCycle.get().urlFor(page);
String absolutePageUrl = getAbsoluteUrl(req, servletPath);
{code}","30/Aug/07 15:12;crumley;Marat: That solution does not work in wicket 1.3. The reason is that RequestCycle.get().urlFor(page) will return a relative url from the current requests location. To give you an example:

Current location: /mount/page1/argument1
New page mount location: /mount/page2/arguement2
urlFor returns: ""../page2/arguement2""

Appending that to the fqdn for the server = http://www.server.com/../page2/argument2 which obviously is not correct.",30/Aug/07 15:16;slonopotamus;Ryan: Damn. is it possible to ask Wicket to return context path relative page url?,30/Aug/07 15:56;crumley;I do not think so. Alastair gave me a solution on irc a while back that involved turning off all relative url generation and going back to the wicket 1.2 behavior which works. A better long term solution (imho) would be to have the ability to request an absolute url on a case by case basis.,"30/Aug/07 17:39;slonopotamus;Solution, take two (how handles pages in different directories):

{code:java}
  /**
   * Calculates absolute path to url relative to another absolute url.
   *
   * @param requestPath      absolute path.
   * @param relativePagePath path, relative to requestPath
   * @return absolute path for given url
   */
  private static String toAbsolutePath(final String requestPath, final String relativePagePath) {
    final StringBuffer result;
    if (requestPath.endsWith(""/"")) {
      result = new StringBuffer(requestPath);
    } else {
      //Remove everything after last slash (but not slash itself)
      result = new StringBuffer(requestPath.substring(0, requestPath.lastIndexOf('/') + 1));
    }
    if (relativePagePath.startsWith(""../"")) {
      StringBuffer tempRelative = new StringBuffer(relativePagePath);
      //Go up through hierarchy until we find most common directory for both pathes.
      while (tempRelative.indexOf(""../"") == 0) {
        //Delete ../ from relative path
        tempRelative.delete(0, 3);
        //Delete last slash from result
        result.setLength(result.length() - 1);
        //Delete everyting up to last slash
        result.delete(result.lastIndexOf(""/"") + 1, result.length());
      }
      result.append(tempRelative);
    } else {
      //Pages are in the same directory
      result.append(relativePagePath);
    }
    return result.toString();
  }
{code}

Testing (should print 'true' three times [and prints]):
{code:java}
  public static void main(String[] args) {
    System.out.println(toAbsolutePath(""http://aif.ru/test/test"", ""../blah/zzz"").equals(""http://aif.ru/blah/zzz""));
    System.out.println(toAbsolutePath(""http://aif.ru/test"", ""blah/zzz"").equals(""http://aif.ru/blah/zzz""));
    System.out.println(toAbsolutePath(""http://aif.ru/test/"", ""../blah/zzz"").equals(""http://aif.ru/blah/zzz""));
  }
{code}

Usage:
{code:java}
HttpServletRequest req = ... 
final String relativePagePath= RequestCycle.get().urlFor(...); 
final String absolutePageUrl = toAbsolutePath(req.getRequestURL().toString(), relativePagePath);
{code}","30/Aug/07 17:43;slonopotamus;One more test (works):

{code:java}
System.out.println(toAbsolutePath(""http://aif.ru/blah/test"", ""zzz"").equals(""http://aif.ru/blah/zzz""));
{code}

Btw, why my code isn't highlighted?","30/Aug/07 17:57;slonopotamus;Free bonus of this approach is no need to hardcode context path.

As you understand, calculation of context-relative page path will be similar.

I vote for bumping up the priority.

Actually, this method should be not in Wicket but in Servlet API (it doesn't use anything Wicket-specific), but that will be absolutely another story... :)","30/Aug/07 18:40;ivaynberg;al is on holiday for a bit, so stay tuned.","05/Sep/07 14:15;jbq;If it can be of any help I added the method RequestUtils.removeDoubleDots() to remove occurences of "".."" from the path.  I used it to absolutize URLs in WicketTester, which cannot work with relative paths.",15/Sep/07 14:02;wireframe;any chance these changes could make it into 1.3?,"26/Nov/07 19:48;aburgel;this has been working for me:

public static CharSequence getPagePath(Page page, PageParameters params) {
        IRequestTarget target = new BookmarkablePageRequestTarget(PageMap.DEFAULT_NAME, page.getClass(), params);
        return page.getRequestCycle().getProcessor().getRequestCodingStrategy().pathForTarget(target);
}

that will return the path without all the '../../' stuff. then you can just append that to your domain name, contextPath, and wicket filter path.",02/Dec/07 10:21;jdonnerstag;Code has been added to RequestUtils,,,,,,,,
default pagemap name of null is not always properly encoded into the url,WICKET-765,12374000,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,ivaynberg,ivaynberg,17/Jul/07 17:13,11/Nov/07 13:49,13/Mar/19 23:15,23/Jul/07 20:18,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"when pagemap name happens to be the last url parameter and coding strategy is /param1/value1/ the url ends up looking like:

/param1/value1/wicket:pageMapName/

which when split on ""/"" produces

{param1,value1,wicket:pageMapName}

which causes

java.lang.IllegalStateException: URL fragment has unmatched key/value
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-11 13:49:35.167,,,no_permission,,,,,,,,,,,59259,,,Sun Nov 11 13:49:35 UTC 2007,,,,,,0|i0khxj:,117722,,,,,,,,23/Jul/07 20:18;ivaynberg;all urls now always properly end with / so instead of /app/param1/value1?query it is now /app/param1/value1/?query,"11/Nov/07 13:49;tsinger;Note: when trying to fake a real file system on the server, e.g., by using URLs like /dir/index.html?query, now also the trailing slash is added (/dir/index.html/?query)  which requires to use an own implementation of the QueryStringUrlCodingStrategy. Maybe you could add an option to the class?",,,,,,,,,,,,,,,,,,,,,,
For stateless mounted page incorrect url is generated,WICKET-497,12367988,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jcompagner,shumbola,shumbola,24/Apr/07 21:24,03/Oct/07 14:00,13/Mar/19 23:15,03/Oct/07 14:00,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"There is no redirect by default if I use setResponsePage(new Home()) inside onSubmit() handler. If set redirect explicitly, after login from stateless SignIn page the url contains form submission listener. Example: http://localhost:8888/app/signin/wicket:interface/%3A0%3AsignInForm%3A%3AIFormSubmitListener%3A?wicket:interface=:1:::.",wicket-1.3.0-incubating-snapshot.jar from 21 Apr 2007,,,,,,,,,,,WICKET-526,,,,,,,02/Oct/07 16:56;olizilla;WICKET-497-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12366937/WICKET-497-Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-22 09:18:16.056,,,no_permission,,,,,,,,,,,59302,,,Wed Oct 03 14:00:51 UTC 2007,,,,,,0|i0kipj:,117848,,,,,,,,"10/May/07 18:00;shumbola;Here is an example code, look for //*:

public final class SignIn extends WebPage
{
    public SignIn()
    {
        add(new FeedbackPanel(""feedback""));
        add(new SignInForm(""signInForm""));
    }

    public final class SignInForm extends StatelessForm
    {
        private final ValueMap properties = new ValueMap();

        public SignInForm(final String id)
        {
            super(id);

            add(new RequiredTextField(""username"", new PropertyModel(properties, ""username"")));
            add(new PasswordTextField(""password"", new PropertyModel(properties, ""password"")));
        }

        public final void onSubmit()
        {
     
            if ( (""user"".equals(properties.getString(""username"")) && ""password"".equals(properties.getString(""password""))) 
            {
                    if(session.isTemporary()) {
                        session.bind();
                    }

                    if (!continueToOriginalDestination())
                    {
                        RequestCycle.get().setRedirect(true);
                        setResponsePage(new Home());    //no matter using explicit redirect or not, this adds form listener to the URL   
                        //* setResponsePage(Home.class); does work !!! 
                    }
            } else {
                error(""username or password wrong"");
            }
        }
    }
}
",22/May/07 09:18;almaw;I have just fixed a related issue to this. Can you try again and see if this now works?,29/May/07 12:19;almaw;This now works properly regardless of whether you manually call setRedirect or not. It is actually a duplicate of WICKET-526.,"12/Jun/07 10:47;shumbola;Sorry, I was busy, but I manged to test this with June 11 snapshot. I see no difference. Exception from this behavior is when set response page to be Home.class, instead new Home(). And If I do not call setRedirect manually, after logging in, if i hit F5 (refresh) it asks me repost the data.
",20/Aug/07 20:37;dashorst;Next release,"22/Aug/07 17:44;almaw;If you want this fixing, please can you provide a quickstart?",01/Sep/07 22:21;knopp;I wouldn't be surprised that this doesn't work because of continueToOriginalDestination() which relies on (bound) session.,"02/Oct/07 16:52;olizilla;Uploading a quickstart for this issue. it is a zip of an eclipse project, created via the mvn achetype command.
This is my first quickstart so let me know if there is a better way of packaging it, or you need anything else.

Oli
","03/Oct/07 13:03;jcompagner;Oli,

you can easily fix the example you have there. Just place one extra setRedirect(true) besides the setResponsePage() call.
But that should be default by form processing anyway. So i changed the statelessform that it sets the redirect boolean in the process method.

A redirect will not happen when you make errors on your form. Because that is not possible for a stateless page.","03/Oct/07 14:00;jcompagner;stateless forms auto redirect now.
Also multiply other fixes for the different url coding stategies.",,,,,,,,,,,,,,
Session id encoding problem in cookie-less mode,WICKET-824,12375394,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,rfoerthe,rfoerthe,05/Aug/07 23:51,30/Sep/07 17:30,13/Mar/19 23:15,30/Sep/07 17:30,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"If I disable session cookies, the URL-encoding does not work. The problem appears in displaying 'page expired' when I click through 'wicket-exmples' . 

I discovered that HttpServletResponse.encodeUrl() called by WebRequestCodingStrategy.encode() does not encode the session id, if it is called with a relative URL like `?wicket:interface=:0:inputForm:IFormSubmitListener::'. i.e.. starting with '?'.   ","Tomcat 5.5.23, OS X",,,,,,,,,,,,,,WICKET-864,,,,26/Sep/07 22:15;johnray;Fix.diff;https://issues.apache.org/jira/secure/attachment/12366612/Fix.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-21 15:18:34.208,,,no_permission,,,,,,,,,,,59305,,,Sun Sep 30 17:30:08 UTC 2007,,,,,,0|i0khs7:,117698,,,,,,,,21/Aug/07 15:18;jbq;Looks reasonable to do for the next release,26/Aug/07 16:55;knopp;Seems to work for me. Perhaps this is already fixed?,"31/Aug/07 05:03;ivaynberg;i just confirmed it, no jsession id is appended to the url - not even on the first request","01/Sep/07 20:48;knopp;Now that's really weird. Just clicking through wicket examples and all works well without cookies. (But on jetty, not tomcat though)","01/Sep/07 21:08;ehillenius;Yeah, I've been testing without cookies like crazy, and never ran into this. But I haven't tested this particular method.","26/Sep/07 22:14;johnray;I've been bit by this bug and tracked down the problems. There are actually 2 bugs here. 

The first is that the wicket session can not be temporary you must call Session.bind() which then calls HttpServletReqest.getSession(true). If you don't do this then Tomcat will not add a session ID to the URL since there is no session. I'll also post a message to the dev mailing list as I think there are issues with always doing a Session.bind() .

The second issue is with the new relative URLs in version 1.3. Tomcat will only add a session ID if there is a path in the URL. So any deep URLs are handled fine but for a root URL like this

   ?wicket:interface=:0:form:clients:1:edit::ILinkListener::

Tomcat just leaves it as is. But if you pass in 

    ./?wicket:interface=:0:form:clients:1:edit::ILinkListener::

Then Tomcat encodes it properly to

    ./;jsessionid=82C9FE8D98F69D95FF698719BC0D0AAD?wicket:interface=:0:form:clients:1:edit::ILinkListener::

I'll attach a patch which fixes this. The patch also fixes another bug which shows up in ServletWebRequest.getRelativePathPrefixToWicketHandler() where it calculates the depth to any URL starting with ""./"" as being 1 level too deep.

",26/Sep/07 22:15;johnray;A possible fix for this issue,"26/Sep/07 22:57;knopp;I'm not sure about the part with session binding. We bind session on the first statefull URL we encounter. So all URLs with wicket:interface in them should be encoded (apart from the URLs starting with ?wicket:interface on tomcat it seems). However, if we render bookmarkable URLs before stateful URLs, we'll end with some URLs without sessionId.
Still, I don't really like binding session by default :-/","26/Sep/07 23:08;johnray;Oops. Sorry I gave a bad example. The page in my app has some bookmarkable URLs (at the top in a nav bar) as well as some stateful URLs in the page. The bookmarkable ones in the nav bar are missing the session ID.

I agree with you and don't like the idea of binding a session by default. But then it leads to the strange behavior where bookmarkable pages in the header of a page do not have session IDs but those in the footer do. Assuming there are some stateful URLs in the middle of course.",30/Sep/07 17:30;knopp;This should be fixed now. Now we temporarily prepend ./ before calling encodeURL and the session should be bound on beforeRender of first stateful component on page (thus before actual rendering),,,,,,,,,,,,,,
There is no way to specify what exceptions to log in RequestCycle,WICKET-908,12377212,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jdonnerstag,slonopotamus,slonopotamus,31/Aug/07 07:56,04/Sep/07 13:48,13/Mar/19 23:15,01/Sep/07 06:49,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,2,,,,,,,,"RequestCycle, line 1135 logs all exceptions except for PageExpiredException. This is not a wanted behavior for us (for example, it also logs AuthorizationException which is not a error).

So we need some way to specify which exceptions should be treated as errors and which ones are just need to be handled by RequestCycleProcessor#respond(RuntimeException, RequestCycle).

Maybe there is some way to globally catch application exceptions other than writing a custom RequestCycleProcessor. If so then tell me please.

The possible solution is to move exception logging to RequestCycleProcessor#respond(RuntimeException, RequestCycle) because it can be overriden.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-01 06:49:01.032,,,no_permission,,,,,,,,,,,59306,,,Tue Sep 04 13:48:12 UTC 2007,,,,,,0|i0fw7b:,90815,,,,,,,,01/Sep/07 06:49;jdonnerstag;now possible via replacing onRuntimeException,"01/Sep/07 06:56;jdonnerstag;sorry, I reverted that change. logRuntimeExcpeiton can be replace easily already.","01/Sep/07 17:53;slonopotamus;Oh, sorry. I didn't think about overriding logRuntimeException","04/Sep/07 13:48;cdeal;This didn't get reverted properly.  The logic (in at least RequestCycle) got inverted.  

IS:

if (e instanceof PageExpiredException)
{
	logRuntimeException(e);
}

WAS (and should be):

if (!(e instanceof PageExpiredException))
{
	logRuntimeException(e);
}
",,,,,,,,,,,,,,,,,,,,
PopupCloseLink broken with REDIRECT_TO_RENDER strategy,WICKET-913,12377280,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,knopp,adouma,adouma,31/Aug/07 22:48,03/Sep/07 15:10,13/Mar/19 23:15,03/Sep/07 15:09,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"For portlet-support, the only usable render strategy is REDIRECT_TO_RENDER until JSR-286 containers are available.

So, I'm testing wicket-examples with REDIRECT_TO_RENDER and I noticed the PopupCloseLink in the linkomatic.Popup page example is broken then. 
Note: this also doesn't work in a plain servlet environment either!

As far as I have been able to discover so far (but I'm not much of an expert in this area), the PopupCloseLink#ClosePopupPage isn't properly recorded in the PageMap when it is set as the responsePage in PopupCloseLink.onClick().

The request url history from opening the PopupPage to after clicking the close link is as follows:

- open popup : /wicket-examples/linkomatic/wicket:bookmarkablePage=popuppagemap%3Aorg.apache.wicket.examples.linkomatic.Popup
- click close: /wicket-examples/linkomatic/wicket:interface=popuppagemap:0:close::ILinkListener::
- redirect to: /wicket-examples/linkomatic/wicket:interface=popuppagemap:0::::
==> Popup is rendered again

Somehow, removing the current page (Popup) in PopupCloseLink.onClick() from its pagemap doesn't seem to work correctly and/or the #ClosePopupPage isn't properly recorded in the pagemap when it is set as the response page.

With the default REDIRECT_TO_BUFFER, this problem doesn't surface as the #ClosePopupPage is rendered (to buffer) immediately so it doesn't need to be looked up in the pagemap after the subsequent redirect.

The weird thing is that if you close the the Popup page directly (not through the ""close"" link) and thereafter open another instance of the Popup page, everything works fine from then on.
Maybe this is an indication where the real problem might be, as these subsequent Popup page instances now have a version > 0:
- click close: /wicket-examples/linkomatic/wicket:interface=popuppagemap:1:close::ILinkListener::
- redirect to: /wicket-examples/linkomatic/wicket:interface=popuppagemap:0::::
==> PopupCloseLink#ClosePopupPage is rendered (which contains <body onLoad=""javascript:self.close()"">)

I also checked if this is a new problem since beta2, but it was broken already then too. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-03 14:14:16.513,,,no_permission,,,,,,,,,,,59257,,,Mon Sep 03 15:09:30 UTC 2007,,,,,,0|i0khhz:,117652,,,,,,,,"03/Sep/07 14:14;knopp;The problem is, that in onClick we do this:

        // Remove the popup's page map from the session
        getPage().getPageMap().remove();

        // Web page closes window using javascript code in PopupCloseLink$1.html
        setResponsePage(new ClosePopupPage());

But that's wrong for various reasons. ClosePopupPage is stateless page, yet we pass page instance. And also it is created in popup pagemap, which we removed (but re-attached to session again, because of new ClosePopupPage());

As far as I can tell the fix is to change

setResponsePage(ClosePopupPage.class);

Which doesn't require ClosePopupPage instance stored in session (already commited).","03/Sep/07 15:09;adouma;Great, that was quick.
I've tested it both in normal servlet as well a portlet context and if works of course :)
I'll apply this fix to the new 1.3.0-beta3-portlet-support branch too.

Thanks Matej. ",,,,,,,,,,,,,,,,,,,,,,
WicketServlet no longer sets application on current thread,WICKET-903,12377018,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ehillenius,jan.vermeulen@isencia.com,jan.vermeulen@isencia.com,28/Aug/07 17:38,29/Aug/07 09:05,13/Mar/19 23:15,29/Aug/07 09:05,1.3.0-beta3,1.3.0-beta4,1.3.0-final,1.3.0-rc2,1.3.1,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"The last changes made to WicketFilter (move Application.set(webApplication) from doGet() to doFilter()) have  a side effect: if working with WicketServlet (due to OSGI), the application is no longer set on the current thread, because it was moved to doFilter().

Possible fixes:
* move Application.set() in WicketFilter back to doGet(), at the start if that's early enough
* expose the webApplication property, and add an extra Application.set() in the doGet() of WicketServlet","Windows, OSGI-platform",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-28 17:44:12.7,,,no_permission,,,,,,,,,,,59248,,,Tue Aug 28 17:49:11 UTC 2007,,,,,,0|i0khiv:,117656,,,,,,,,"28/Aug/07 17:44;jcompagner;eelco broke it, so he know ofcourse exactly how to fix it.","28/Aug/07 17:49;ehillenius;Damn! Sorry for that, I'll look into it today.",,,,,,,,,,,,,,,,,,,,,,
JavaScript comment stripping doesn't handle regexps,WICKET-501,12368053,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,almaw,pete,pete,25/Apr/07 17:40,19/Jun/07 16:37,13/Mar/19 23:15,19/Jun/07 15:50,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"The following line is crippled when using javascript comment stripping

(from jquery.js)

    // Handle the common XPath // expression
    if ( !t.indexOf(""//"") ) {

it will be result in

    if ( !t.indexOf(""

the // inside the string quotes are taken as a comment instead of as a string...
",,,,,,,,,,,,,,,,,,,25/Apr/07 21:24;jbq;20070425-WICKET-501-JavascriptStripper.txt;https://issues.apache.org/jira/secure/attachment/12356271/20070425-WICKET-501-JavascriptStripper.txt,19/Jun/07 15:24;pete;jquery-06-19-07-stripped.js;https://issues.apache.org/jira/secure/attachment/12360118/jquery-06-19-07-stripped.js,19/Jun/07 15:22;pete;jquery-06-19-07.js;https://issues.apache.org/jira/secure/attachment/12360117/jquery-06-19-07.js,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-04-25 21:19:49.752,,,no_permission,,,,,,,,,,,59251,,,Tue Jun 19 16:37:14 UTC 2007,,,,,,0|i0kiov:,117845,,,,,,,,"25/Apr/07 21:19;jbq;Can you attach the jquery.js file (just for diagnosing)?  What is the environment (platform, etc)?",25/Apr/07 21:24;jbq;The attached patch (with unit test) fixes compression for JavaScript files using CR line endings (Macintosh).  Can you try to attach your own test?  I can't reproduce the exact same problem.,"25/Apr/07 21:53;ivaynberg;here is a javascript that i think will fail:

alert(""before"");
alert(""hello//there"");
alert(""after"");

its the // in the quotes. i guess we do not account for quotes in our stripper.","25/Apr/07 23:37;jbq;Actually yes, it works, see the attached unit test","26/Apr/07 11:06;pete;I attached the file where the problem happened to me.

environment:

- jdk1.4.2
- wicket-1.3-snapshot (don't know exact revision)
- sap j2ee web server
[ Show » ]
Peter Ertl [26/Apr/07 04:05 AM] I attached the file where the problem happened to me. environment: - jdk1.4.2 - wicket-1.3-snapshot (don't know exact revision) - sap j2ee web server
","26/Apr/07 14:02;jbq;Fixed, thanks for reporting.  If another issue comes up, please reopen this issue.","19/Jun/07 15:20;pete;Sorry, but this issue seems to not be fixed 100%...

I get this error message in Firefox

>> unterminated string literal --- in jquery.js (line 707)

    if ( !t.indexOf(""\n

I attached the input file (it's jquery.js) and the corresponding output (jquery-stripped.js)

",19/Jun/07 15:22;pete;upload: the input file before being stripped / compressed,19/Jun/07 15:24;pete;upload: the compressed jquery.js being corrupted,"19/Jun/07 15:50;almaw;Actually, it doesn't handle the regexps above that properly, and therefore thinks it's in the middle of a string.",19/Jun/07 15:50;almaw;Fixed in r548773.,"19/Jun/07 16:23;almaw;There's quite a complex use case to handle, which is coping with the code: foo.match(/""/);

Previously, we went into STRING_DOUBLE_QUOTES mode in the middle of that. I'm now going into POSSIBLE_REG_EXP mode when we encounter a ""/"", and jumping out of that when we encounter another ""/"". Of course, this doesn't work if you have divide operators sprinkled around, so I'm also jumping out of it when we encounter new lines. This should hopefully cover enough common cases to make the code 99% as competent at stripping things out as a proper parser would be, without having to worry overly much about doing it all ""properly"".

This will fail to strip comments in the following example:

myVar = myVar / 3; // make it a third as big

In order to cope with this case, we couldn't really parse the stream char-by-char like we currently do, as we'd need to make sure that wasn't about to be:
myVar = myVar.match( / 3; // make it a third as big /)[0];
...which requires far too much knowledge of how PHP actually works.",19/Jun/07 16:24;almaw;(That latest fix in r548788.),"19/Jun/07 16:26;almaw;Uh, how *JavaScript* works. Where's my coffee gone? ;-)","19/Jun/07 16:37;almaw;Right, I now back up when we find a '/' to work out if we're a regexp or not, so this should actually fix all the use-cases again (r548790).",,,,,,,,,
Parameters of nice URL's pages with 'sensitive' characters,WICKET-40,12355245,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jbq,jan_bar,jan_bar,10/Nov/06 09:46,10/Jun/07 16:20,13/Mar/19 23:15,06/May/07 20:01,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"Wicket uses HttpServletRequest.getPathInfo() to get the the URL. The returned string is already URL decoded, so when the request parameter pair contains %2F, it will be returned as '/', so the request pair will be broken (the same applies to other characters like '+' etc). This was cseen with Jetty 6 and Tomcat 5.5.
Wicket should use HttpServletRequest.getRequestURI() or getRequestURL() as this seems to return URL as it was passed to the server.",,,,,,,,,,,,,,,,,,,27/Apr/07 07:57;jbq;20070427-WICKET-40-WicketFilter-no-decoding.txt;https://issues.apache.org/jira/secure/attachment/12356389/20070427-WICKET-40-WicketFilter-no-decoding.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-31 07:57:00.682,,,no_permission,,,,,,,,,,,59252,,,Sun May 06 20:01:57 UTC 2007,,,,,,0|i0kjs7:,118022,,,,,,,,"31/Jan/07 07:57;ehillenius;If you don't mind, here's another one for ya","31/Jan/07 08:38;jcompagner;this should be rewritten anyway.
Now it is a mess. We do encoding everywhere some & -> $amp; and then urlencode on params.
We should remove those everywhere. And use Request.encodeUrl or something like that
to really encode the url correctly at once.","06/Mar/07 16:33;jbq;Jan, can you please test it again after updating your SVN working copy.  If you can still reproduce the problem, can you please be more specific and describe your usecase in details?  Providing a quickstart, unit test or a patch can be useful.  Thanks in advance!","08/Mar/07 18:12;jan_bar;I don't have the possibility to test fresh SVN copy now, but I tried on wicket-examples:
http://www.wicket-library.com/wicket-examples/niceurl/path/to/page2/param2/sla%2Fsh/param1/sss

The param2 should display ""sla/sh"" but instead wicket crashes.
","08/Mar/07 20:52;jbq;What about this:

http://wicketstuff.org/wicket13/niceurl/path/to/page2/param2/sla%3Ash/param1/sss

Please use wicketstuff.org from now on for getting access to a running Wicket system.","08/Mar/07 21:22;jbq;I think we can close the issue now, I'm sure it has been fixed by WICKET-358","09/Mar/07 07:32;jan_bar;Thanks, I tried, but the problem still persist, please mind the %2F, which is '/' character, so the result should be ""sla/sh"". The "":"" doesn't clash with parameters, but ""/"" does.

http://wicketstuff.org/wicket13/niceurl/path/to/page2/param2/sla%2Fsh/param1/sss","09/Mar/07 08:33;jbq;Using a slash in one of the parameter's key or value is another story because the URI is already decoded by the servlet container or web server.  So it leads to unmatched key pair error because request.getURI() already returns a decoded URI like 
/niceurl/path/to/page2/param2/sla/sh/param1/sss

You have to encode the encoded slash, like this:

http://localhost:8080/wicket-examples/niceurl/path/to/page2/param2/sla%252Fsh/param1/sss

On the older wicket snapshost, triple encode seems to be needed:

http://www.wicket-library.com/wicket-examples/niceurl/path/to/page2/param2/sla%25252Fsh/param1/sss

In other words, the servlet API does not offer a facility for parsing query parameters in this form using slashes, only using the query string beginning with ""?"" so you'd better avoid encoding slashes in the bookmarkable page parameters.  Wicket does its best to parse the slashes-delimited query parameters, but it's far from being perfect.","09/Mar/07 08:36;jan_bar;Thanks for the explanation, you can close the issue.","09/Mar/07 12:06;jbq;Mmm actually, looking at the very description of this issue, you are right:

The Javadoc for getRequestURI() states that the URI is *not* decoded:
http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/servlet/http/HttpServletRequest.html#getRequestURI()

Whereas it is for getPathInfo().  So we may want to take a look at this issue, indeed.
","09/Mar/07 12:12;jbq;So the culprit must be:


In ServletWebRequest I find:

	public String getPath()
	{
		return ((WebApplication)Application.get()).getWicketFilter().getRelativePath(
				httpServletRequest);
	}

And in WicketFilter:

	public String getRelativePath(HttpServletRequest request) {
		String path = request.getServletPath();
                ...

So WicketFilter is the culprit, as getServletPath() decodes the URL, see:
http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/servlet/http/HttpServletRequest.html#getServletPath()","27/Apr/07 07:57;jbq;The attached patch changes the way WicketFilter computes the relative URL by avoiding by any means calling getServletPath() or getPathInfo(), only using getRequestURI(), getContextPath() and getServletPath().

There is also a temporary patch to wicket-examples to be able to reproduce the issue.  Go to http://localhost:8080/wicket-examples/helloservlet/ for the servlet case and http://localhost:8080/wicket-examples/helloworld/ for the filter case.","27/Apr/07 08:17;jbq;I also tested this patch successfully with:

* ""/wicket-examples"" servlet context path and /* servlet mapping
* ""/wicket-examples"" servlet context path and /* filter mapping
* """" servlet context path and /* servlet mapping
* """" servlet context path and /* filter mapping
* """" servlet context path and /helloservlet/* servlet mapping
* """" servlet context path and /helloworld/* filter mapping","03/May/07 16:57;jbq;Just added some httpunit-based unit tests in wicket-examples, see revision 534932.  Just need to apply the patch to WicketFilter now and rename bugTestXXX() methods to testXXX()","03/May/07 20:15;almaw;I can see what you're trying to achieve with this, but it's breaking some unit tests in wicket-examples. I'm looking into fixing this right now.","06/May/07 20:01;jbq;WicketFilter changed, and tests fixed.",,,,,,,,
 ServletWebRequest.getContextPath() ignores ContextPath as set by user (accesses HttpServletRequest directly),WICKET-540,12368738,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,almaw,fattymelt,fattymelt,06/May/07 17:00,25/May/07 18:03,13/Mar/19 23:15,25/May/07 18:03,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.7,,,wicket,,,,0,,,,,,,,"I'm running Wicket behind a front-end proxy. To fix certain issues with this I have set the ContextPath value in my application settings (and/or in Web.xml),  However, when using functions that attempt to get at the context path (e.g. continueToOriginalDestination()) the app does not respect my setting.

This is because in ServletWebRequest, getContextPath() directly accesses HttpServletRequest without checking the application settings.

I believe it should first check the application settings, and only if ContextPath is /not/ set, then access the HttpServletRequest.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-14 01:03:22.981,,,no_permission,,,,,,,,,,,59303,,,Fri May 25 18:03:01 UTC 2007,,,,,,0|i0kilb:,117829,,,,,,,,"14/May/07 01:03;almaw;I'm afraid we're unlikely to fix this in the 1.2.x branch, due to limited time and pressure to get 1.3 final out. If you can provide a patch, I'll review and commit it, however.

The 1.3.x branch uses relative URLs, which overcome this issue (you don't need to set a contextpath setting at all).","25/May/07 18:03;almaw;Hmmm, this was actually a pretty trivial fix. It'll be in 1.2.7.",,,,,,,,,,,,,,,,,,,,,,
Form url handled wrong when using QueryStringUrlCodingStrategy,WICKET-568,12369305,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,almaw,wouterv,wouterv,14/May/07 19:13,24/May/07 16:00,13/Mar/19 23:15,24/May/07 16:00,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"In my web application I mount my page with a signin form as follows:

mount(new QueryStringUrlCodingStrategy(""/admin/signin"", SignIn.class));

With this the form tag is rendered as follows:
		<form id=""signInForm0"" action=""../admin/signin?wicket:interface=%3A8%3AsignInPanel%3AsignInForm%3A%3AIFormSubmitListener%3A"" method=""post""><div style=""display:none""><input type=""hidden"" name=""signInForm0_hf_0"" id=""signInForm0_hf_0"" />

When posting, this leads to the following exception:
java.lang.NumberFormatException: For input string: ""signInForm""
     at java.lang.NumberFormatException.forInputString(Unknown Source)
     at java.lang.Integer.parseInt(Unknown Source)
     at java.lang.Integer.parseInt(Unknown Source)
     at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.addInterfaceParameters(WebRequestCodingStrategy.java:519)
     at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.decode(WebRequestCodingStrategy.java:188)
     at org.apache.wicket.Request.getRequestParameters(Request.java:179)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1056)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1142)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:490)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:248)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:122)
     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
     at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:174)
     at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:77)
     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:868)
     at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:663)
     at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
     at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
     at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
     at java.lang.Thread.run(Unknown Source)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-24 15:59:08.432,,,no_permission,,,,,,,,,,,59287,,,Thu May 24 15:59:08 UTC 2007,,,,,,0|i0kihz:,117814,,,,,,,,"14/May/07 19:16;wouterv;When changing the mount to the following fixes the issue for me temporarily:

mountBookmarkablePage(""/admin/signin"",SignIn.class);",24/May/07 15:59;almaw;Can you please try this again? I think this is now fixed.,,,,,,,,,,,,,,,,,,,,,,
LocalizedImageResource escapes ampersands twice (regression),WICKET-559,12369166,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jdonnerstag,nathan@technically.us,nathan@technically.us,12/May/07 15:21,12/May/07 17:34,13/Mar/19 23:15,12/May/07 17:34,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"urlFor returns escaped ampersands (apparently, a change) so LocalizedImageResource should not do it a second time.",,,,,,,,,,,,,,,,,,,12/May/07 15:21;nathan@technically.us;loc-img-res.patch;https://issues.apache.org/jira/secure/attachment/12357167/loc-img-res.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-12 17:34:22.5,,,no_permission,,,,,,,,,,,41953,,,Sat May 12 17:34:22 UTC 2007,,,,,,0|i0kijb:,117820,,,,,,,,12/May/07 15:21;nathan@technically.us;Patch to not escape amps a second time.,12/May/07 17:34;jdonnerstag;patch applied. Thanks.,,,,,,,,,,,,,,,,,,,,,,
DatePicker comes up with NaN,WICKET-483,12367508,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ehillenius,funkattack,funkattack,18/Apr/07 16:53,23/Apr/07 03:09,13/Mar/19 23:15,23/Apr/07 03:09,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-datetime,,,,0,,,,,,,,"DatePicker comes up with NaN
Can be verified at http://www.wicketstuff.org/wicket13/forminput/
Hope that's the correct current Example Site.
Running the examples local has the sam efect.
The page is loaded just fine and the DateTimeField shows the current Date and Time. Right after the DatePicker ist clicked on, the place filles with NaN's.
I didn't see any http request while clicking the DatePicker, so I guess it's somewhere in the JavaScript. ","Linux Firefox 2.0.0.3
wicket svn Revision: 529942",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-18 20:52:18.72,,,no_permission,,,,,,,,,,,59255,,,Mon Apr 23 03:09:24 UTC 2007,,,,,,0|i0kiqn:,117853,,,,,,,,"18/Apr/07 20:48;funkattack;I think its because the DatePicker is not localized.
My locale is German, and the Date is formated like 18.04.07 for April the 18th 2007.
This doesn't go along with
DatePicker Line 196
		buffer.append(""  var dateArray = dateValue.split('/');\n"");

And no, I'm not cabable to fix this.",18/Apr/07 20:52;ehillenius;I see. I'll try to look at it asap.,"21/Apr/07 08:45;ehillenius;I committed a good fix that works with all locales I tested. It uses a little JavaScript library, located at http://www.mattkruse.com/javascript/date/, written by Matt Kruse. The license is compatible with Apache 2. Nevertheless, I'm sending a note to him to ask him whether he has objections to us using it.","22/Apr/07 07:19;ehillenius;It turns out the license is not compatible, which is an issue for both Wicket and Cocoon (as they use it as well).

We have to either get explicit permission, or rewrite the function ourselves (and share it with Cocoon if that helps).","23/Apr/07 03:09;ehillenius;I wasn't actually crazy about how it worked. I rewrote it so that it fits our purposes better, and so that we don't have to deal with licencing issues.",,,,,,,,,,,,,,,,,,,
Feedback is not cleaned up upon AJAX-requests,WICKET-467,12367117,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ehillenius,memeplex,memeplex,13/Apr/07 00:53,13/Apr/07 03:50,13/Mar/19 23:15,13/Apr/07 03:50,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"When doing validation with AjaxFormComponentUpdatingBehavior once an error message is attached to a component it gets sticky and is not refreshed upon new ajax requests. It seems as if feedback is not cleaned up so onEvent always takes the hasError branch, independently of validation results.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59253,,,2007-04-13 00:53:32.0,,,,,,0|i0kirz:,117859,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't run examples as a WAR with Jetty 6.1.1,WICKET-424,12365844,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,,jbq,jbq,26/Mar/07 23:02,28/Mar/07 16:15,13/Mar/19 23:15,28/Mar/07 16:15,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-examples,,,,0,,,,,,,,"{noformat}
java.lang.LinkageError: Class javax/management/MBeanServer violates loader constraints
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:620)
        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)
        at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)
        at java.net.URLClassLoader.access$100(URLClassLoader.java:56)
        at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:354)
        at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:325)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
        at wicket.jmx.Initializer.init(Initializer.java:152)
        at wicket.Application.callInitializers(Application.java:781)
        at wicket.Application.initializeComponents(Application.java:665)
        at wicket.protocol.http.WicketFilter.init(WicketFilter.java:398)
        ...
{noformat}

If I unpack the war and remove
wicket-examples/WEB-INF/lib/mx4j-3.0.1.jar the application
launches alright.

This error happens because Jetty already provides:

* jetty/lib/management/mx4j-3.0.1.jar
* jetty/lib/management/mx4j-tools-3.0.1.jar

So we should maybe avoid to package those jars in WEB-INF/lib when building the wicket-examples WAR",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-27 13:52:10.848,,,no_permission,,,,,,,,,,,59288,,,Wed Mar 28 16:15:58 UTC 2007,,,,,,0|i0kiw7:,117878,,,,,,,,"27/Mar/07 13:52;almaw;Yeah, they need specifying in the dependencies with a <scope>provided</scope>. Can you try that and commit if it works?","27/Mar/07 18:31;almaw;Apologies if you think me assigning you things is unreasonable, but I assigned this to you because you obviously have an environment set up to recreate the bug otherwise you wouldn't have seen it in the first place.

The suggested fix will therefore take you about one minute to implement and test. Given you're a core committer and obviously care enough about this to file the issue in the first place, I therefore felt assumed you could spend three minutes on this. If you'd just done that rather than bitch in JIRA at me, it would have been closed by now. ;-) Obviously if the suggested fix doesn't work, feel free to unassign it.","28/Mar/07 16:15;jbq;Dependencies changed by Martijn, and verified by AlMaw and me.",,,,,,,,,,,,,,,,,,,,,
refactor storing pages and versions,WICKET-201,12360129,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jcompagner,ehillenius,ehillenius,09/Jan/07 22:36,10/Mar/07 18:52,13/Mar/19 23:15,10/Mar/07 18:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,,,,,0,,,,,,,,"See http://www.nabble.com/refactor-storing-pages-and-versions-tf2943670.html for a discussion.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-15 12:42:07.092,,,no_permission,,,,,,,,,,,201282,,,Sat Mar 10 18:52:10 UTC 2007,,,,,,0|i0kjgv:,117971,,,,,,,,"13/Jan/07 02:29;ehillenius;I rolled back changes like discussed on the list (changes in FilePageStore, which is used by second level cache session store and friends. It sucks to have such an inefficient situation, so if we could fix this soon, that's be grand.","13/Jan/07 02:30;ehillenius;Johan, could you please take a look at how this could be optimized, based on the discussion we had on the list? Cheers.","15/Jan/07 12:42;jcompagner;I thought about it and it will be pretty hard to really change the current behavior
i only see one: Reduce the Page version of a page to max 1 (1extra then the current one)

why?

> Store only changes

   This can't be done because those changes do have call backs to the page/parent anyway so this will be very, very hard to reliable implement. 

> Store only pages when the fall out of the pagemap (not the current page anymore)

  This is also not possible. A page when created new or a version is created (is also 'new') then the page has to be saved to disc.
  There is no other way. Else we are to late the next time and we will loose versions of the page. (of course max page versions to 10+ will solve this but that is just what we don't want)

So the only optimizations i can think if is:

1> If SecondLevelPageStore is used then the default max page versions is set to 1 (1 extra then the current)
2> save the page to disk when it is newly created or if there is a new version created in the current request. (this is really needed else we are to late the next time!)
3> make sure that the next version of a page is always ++ (and not decreased when a page version is roll backed)


By the way, in wicket 2.0 there is code that can make versions of pages by only storing the changed real values (strings and numbers)
I did develop that with discussions with igor how to not serialize the page but make a special snapshot of the complete page (hash mapping all the values)
This code is now a bit untouched but maybe we could use it.
The planning was to create a snapshot map when a request comes in for a page (just before anything happens to it) then compare it in the end and only store 
the really changed values. Then we have automatic page versioning..  But don't know if that could really work.
","15/Jan/07 15:00;ehillenius;I think I agree with all those arguments. And if 3 from the previous comment is implemented, we can just save the page when there is an actual new version and we don't have to save every time even if we already had a file, right?","15/Jan/07 15:15;jcompagner;that page will be saved or not is already covered by 2:
Only save the page when a new version is created (so version 0 == new or version >0 is in a request later on)

Only one exception.... And that is an ajax request that makes changes to the version (that i implemented last week)
because ajax does touch now the version info. But doesn't create a new version but does a merge with the current version.
So when that happens it is a version change (only the version number doesn't go up) and that is the only situation i can think of
that a page-id:version-id combination needs to be saved again. So normally such a combination is only saved once.
","15/Jan/07 15:28;ehillenius;No, I don't think so. You can't do this currently, because a rollback goes back in versioning, and then increments from that rolled back version on. But, according to other objections, we can't delete those newer files, so they'll exist. So currently you have to overwrite every time as you don't know whether you have a version that is really new or to be overwritten.","06/Feb/07 21:52;jcompagner;fixed for 1.3 
We don't keep any version info now in the page. only a versionnumber thats increased.
the pages are just stored to disk.","27/Feb/07 09:44;jcompagner;for 1.3 the SecondLevelCache and its FilePageStore is pretty much done.
The performance lose we have for the serialization and saving (2 separate threads) are around 15% under very heavy load. (App1Test1) compared to HttpSessionStore.
Thats in my eyes very acceptable. And under normal load you won't even notice it because the serializing thread can handle it fine.

The only thing we could do now is move the soft cache we have now in the Store it self through the FilePageStore and soft cache the byte[] so that those don't have to be loaded from disk.
But maybe we can do both. If a history entry in the browser is a new page in wicket then the current soft cache does it works.
But if it is a version of the current page. the soft cache doesn't do anything anymore (because there is no undo information anymore in a page)

Also maybe the FilePageStore should be abstracted then. So that the serialization is done by a common base class. And the actual saving can be done to anything you want.

(and then port it all to 2.0!)","27/Feb/07 17:45;ehillenius;It would be cool to have a threshold so that once a certain limit (e.g. number of sessions or heap usage) is reached, the store would do a blocking write immediately rather than keeping 1 or more pages in memory. That would make Wicket slower once the threshold is reached, but we could prevent running out of heap memory when properly configured - the server wouldn't die and once traffic is below the threshold again, it can pick up memory to run more efficiently again.","27/Feb/07 18:22;jcompagner;No this already doesn't happen anymore at least for the saving.
Because the save thread is high prio! It can keep up with anything the other request do. 
I think matej did test it with many more sessions and loads of iterations (up the 1000)
And in the current situation the 2 threads can keep up with both.

Serialization already works this way, if request comes in for a page. And the page is still not serialized 
(so the serialization thread couldn't keep up) then the request thread already helps with serialization of the page.
And because of saving thread is high prio that one can keep up with the saving as far as we (matej and i) have could test it.
","27/Feb/07 18:30;ehillenius;What you implemented is slightly different though. The code I've seen (last week) stops accepting for a certain threshold per pagemap (or session?). What I'm talking about is to put the threshold on the number of sessions and/ or heap mem usage. And yes, I've tested with a couple of thousand sessions and was able to get OOME with this store.","27/Feb/07 18:37;jcompagner;i don't stop accepting anything the only thing that happens is that the request thread helps serializing if it wants to access a page that isnt serialized yet.
what was your memory setting with you test it with a couple of thousand sessions? Did you test it also with the normal httpsessionstore with the same test??
and when did you test? Wit the latest code that i checked in today? Because one thread prio still wasn't correct.

What i see now if i test it that the pages that are serialized are all saved. (see the output when jetty stops) you can there exactly see how many pages are serialized
and how many where saved. 
","27/Feb/07 20:37;ehillenius;I didn't test with the code of today. However, the test is easy. Start up wicket.threadtest.tester.Tester directly (that's possible since a few days) so that the server keeps running in the back ground and you can execute the thread tests in a separate VM (works great on dual core btw). Run the tests a couple of times so that you'll have a bunch of sessions lingering around. My point is that every session still occupies some heap space, even if it isn't doing anything at the moment. What we should be looking for is a mechanism like I described above (so e.g. when we get over a certain number of active sessions, stop putting them in memory but blocking write them to disk right away to protect OOME). Additionally, a nice optimization would be to write out sessions after a bit, and removing any pages in memory there might be for that session. This should also be based on some threshold of sessions/ memory - no need to do this when there is plenty of memory - and if that would be combined with a time out (e.g. 30 seconds after the page was last requested) this would give the active sessions more priority and probably leads to a better load spread.","27/Feb/07 20:58;jcompagner;writing out (idle) sessions is something that should be done by the container.
We shouldn't keep references to the session and alter the session when it is not in use in a request. (we don't know what the container does with the sessions (or terracotta))
So the only thing is that we can write pages directly to disk (don't sign them to the pagemap) for current request if the memory start to get low then the performance of that will
go down of course, because those are most likely to return again (they are the active sessions). And when is memory low?? memory could for example be low at one time (max != current && free < X)
but one GC can free up 30%. Thats a bit difficult to really see at a specific time..

That every session keeps lingering around is not a problem specific to the SecondLevelCache. I think that the SLC wil even improve how many live sessions we can handle
compared to the normal http store. Because there we will have 7 page or page versions in the session. So the sessions that are still idle are potentially keeping 7 times more memory then with SLC

Maybe if we know or calculate the average size of session. For the specific system. Then we can take that into account with the total number of sessions  and then we know what those cost..
And maybe we can somehow use that to decide that we have to overflow. But i rather left that to the container (idle session to disk)","27/Feb/07 21:33;ehillenius;I can see you point, and indeed in a clustered environment I guess we can't really know which sessions are an which server and actually consuming local heap.

Re testing. Did you try testing with that new project I committed this weekend? That gives a pretty accurate size I think. I waiting for feedback on that anyway, so please test.","27/Feb/07 21:34;ehillenius;new project == wicket-objectsizeof-agent.

See http://www.nabble.com/Objects.sizeOf-t3290492.html","28/Feb/07 13:18;knopp;I've commited a fix that removes soft reference cache from second level cache session store as it was causing severe performance problems. 

With current code I was able to run App1Test1 with  500 sessions (10 requests each) on 64MB heap with SecondLevelCacheSessionStore. I think that's great. Regular http session store OOMed after two minutes.

As for the performance concerns, i ran the test on 40 sessions / 100 requests:
 SecondLevelCacheSessionStore: 95043 ms
 HttpSessionStore: 78490 ms

The difference is ~18% (slightly more than johan's measurement, probably because of removed soft reference cache). ","28/Feb/07 15:55;knopp;The tests mentioned in previous comment were executed on OSX with java 6 - server, 128MB heap.

I executed same test, 40 sessions / 100 request on clean windows instalation, 128MB heap, java 6 -server
SecondLevelCacheSessionStore: 67844 ms
HttpSessionStore: 53531 ms

Here the difference is 21%

All tests are executed with WicketOutputStream.

I think compared to Jonathan's first benchmark where 2nd level session store was almost 50% slower then httpsessionstore, these are very good numbers.
","28/Feb/07 16:49;ehillenius;Cool. 10 request each is in fact 40 each as App1Test1 does 4 requests for one run, right? :)","28/Feb/07 22:39;knopp;Yeah, I guess you are right with the numbers. :)","10/Mar/07 18:52;ehillenius;We squeezed out most of what we can do within reasonable time. We'll keep thinking about future improvements, but I'm closing this one now.",,,
wicket-ajax.js is sometime missing from <head> section,WICKET-281,12362621,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ivaynberg,nielsbo,nielsbo,12/Feb/07 20:41,15/Feb/07 19:50,13/Mar/19 23:15,15/Feb/07 19:50,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,,,wicket,,,,0,,,,,,,,"After switching to 1.2.5, I am seeing a lot of JavaScript errors ""Object expected"" on 
Ajax links. 
I found that in ""development"" mode ""WICKET AJAX DEBUG"" is missing just before such a link will fail,
looking a the html source in the browser, shows that the ""wicket-ajax.js"" is missing from the head section,
and this is what causes the ajax link to fail. 

I can recreate the problem in our application by clicking on these types of links in this order:
1. page link - ok
2. ajax link - ok
3. page link - ok
4. ajax link - fail

I do not see this problem with wicket 1.2.4",JDK 1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,59289,,,2007-02-12 20:41:02.0,,,,,,0|i0kj8f:,117933,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calls to enabled and visibleInHierarchy should not be done in component resolving.,WICKET-269,12362386,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,ehillenius,ehillenius,ehillenius,09/Feb/07 00:06,10/Feb/07 08:12,13/Mar/19 23:15,09/Feb/07 00:38,1.2.2,1.2.3,1.2.4,1.2.5,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,1.2.6,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"Currently, the check(s) on whether a component may receive a call is done too early, namely during resolving the request target. This is a problem when components depend on things being initialized in the page or component using detachement. There is also some code duplication. The proper place for this check is in RequestListenerInterface#invoke.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-10 08:12:48.906,,,no_permission,,,,,,,,,,,59245,,,Sat Feb 10 08:12:48 UTC 2007,,,,,,0|i0kj9j:,117938,,,,,,,,"10/Feb/07 08:12;dashorst;Was not fixed in 1.2.5, but will be part of 1.2.6",,,,,,,,,,,,,,,,,,,,,,,
WicketFilter fails for filter mapping /* and non-root context,WICKET-205,12360272,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,almaw,jbq,jbq,11/Jan/07 11:27,30/Jan/07 18:25,13/Mar/19 23:15,30/Jan/07 18:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"The problem happens:
* With servlet context path /something
* With filter mapping /*
* Without any filterPath init parameter declared

In this case Wicket returns a 404 error.

The attached patch fixes the problem.  Thanks in advance!",,,,,,,,,,,,,,,,,,,12/Jan/07 11:33;jbq;20070111-wicket-1.x-WicketFilter-rootPath;https://issues.apache.org/jira/secure/attachment/12348813/20070111-wicket-1.x-WicketFilter-rootPath,12/Jan/07 10:24;jbq;20070111-wicket-1.x-WicketFilter-rootPath;https://issues.apache.org/jira/secure/attachment/12348805/20070111-wicket-1.x-WicketFilter-rootPath,11/Jan/07 15:40;jbq;20070111-wicket-1.x-WicketFilter-rootPath;https://issues.apache.org/jira/secure/attachment/12348740/20070111-wicket-1.x-WicketFilter-rootPath,11/Jan/07 11:27;jbq;20070111-wicket-1.x-WicketFilter-rootPath;https://issues.apache.org/jira/secure/attachment/12348720/20070111-wicket-1.x-WicketFilter-rootPath,23/Jan/07 11:54;jbq;20070123-wicket-1.x-WebRequestCodingStrategy-IListenerInterfaceRequestTarget;https://issues.apache.org/jira/secure/attachment/12349440/20070123-wicket-1.x-WebRequestCodingStrategy-IListenerInterfaceRequestTarget,,,,5.0,,,,,,,,,,,,,,,,,,,2007-01-13 02:50:05.204,,,no_permission,,,,,,,,,,,201285,,,Tue Jan 30 18:25:45 UTC 2007,,,,,,0|i0kjg7:,117968,,,,,,,,11/Jan/07 15:40;jbq;Updated patch: a fix is also needed in WebRequestCodingStrategy,12/Jan/07 10:25;jbq;Updated patch: there was a semicolon in WicketFilter's detection of the homepage instead of a slash,12/Jan/07 11:34;jbq;Updated patch: the semicolon is used for jsessionid as johan said on the dev list,13/Jan/07 02:50;ehillenius;patch applied to 1.3 and translated and applied to 2.0,"23/Jan/07 11:54;jbq;Another update is needed in order for this configuration to work: the URLs generated for an IListenerInterfaceRequestTarget should not only use URL prefix like /abc because in this case the servlet container will redirect to /abc/ and form values will be lost.

This redirect problem does not happen when using filterPath ""app"" and filter-mapping /app

The idea is to generate callback URLs with not-only the URL prefix, but also with the request path appended.","23/Jan/07 17:01;ivaynberg;almaw is working on making all wicket urls relative, so lets see if that fixes these kinds of problems","26/Jan/07 08:16;almaw;This is now likely fixed on 1.x. Please update your branch, test and report back.","26/Jan/07 10:58;jbq;Doesn't work with undefined filterPath with your recent modifications (we don't define a filterPath) as filter mapping is /*, so basically filterPath == null","26/Jan/07 11:02;almaw;You need to define an empty (i.e. """") filterPath in this case (this should possibly be the default).
Please try that and report.",30/Jan/07 18:25;almaw;Think this is now sorted in 1.3 HEAD - needs porting to 2.0.,,,,,,,,,,,,,,
pageExpiredErrors with wicket pages in jsp-includes ,WICKET-202,12360147,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,,wgehner,wgehner,10/Jan/07 02:05,13/Jan/07 02:21,13/Mar/19 23:15,13/Jan/07 02:21,1.2.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,wicket-quickstart,,,0,,,,,,,,"Hi there, we want to integrate Wicket with other rendering
technologies. One example is including wicket pages in a jsp.

Attached is the use case as an Eclipse project based on Wicket trunk of today.
Run the application as usual with Start - run as java application,
then go to http://localhost:8081/quickstart/index.jsp

Two problems:

1. Upon first entry on index.jsp, clicking ""Open Dialog"" and closing
redirects to App Main page, console shows ""INFO -
uestTargetResolverStrategy - component not enabled or visible,
redirecting to calling page, component: null""

2. Incrementing values on [Wicket Page2] and opening and closing
Dialog on [Wicket Page1] *sometimes* results in PageExpired Error,
usually after some wait.

I wonder what to do to stabilize this. We hope we can make Wicket
coexist with other technologies such as JSP. After all, everything is
just servlets :-)

Regards,


Wolfgang
",windows.,,,,,,,,,,,,,,,,,,10/Jan/07 02:06;wgehner;wicket-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12348611/wicket-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-10 17:55:43.792,,,no_permission,,,,,,,,,,,59290,,,Sat Jan 13 02:21:05 UTC 2007,,,,,,0|i0kjgn:,117970,,,,,,,,"10/Jan/07 17:55;ehillenius;I think the main issue here is that you should put every include in it's own page map. JSP includes can be regarded in the same fashion like frames and popups for that matter; you want each include to have it's own history.

So:
<jsp:include page=""/app/myservlet/Page1?wicket:pageMapName=1""/><br><br>
<jsp:include page=""/app/myservlet/Page2?wicket:pageMapName=2""/>

Should fix your problem.","13/Jan/07 02:21;ehillenius;Sorry, that was the wrong suggestion. PageMaps are denoted like myapp?wicket:bookmarkablePage=myPageMap:somepackage.MyPage or /myapp/mountedpage/param1/value1/wicket:pageMapName/myPageMap
",,,,,,,,,,,,,,,,,,,,,,
mount and IndexedParamUrlCodingStrategy severe malfunctions,WICKET-42,12355353,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Critical,Fixed,jcompagner,korbinian,korbinian,11/Nov/06 16:17,11/Nov/06 22:16,13/Mar/19 23:15,11/Nov/06 22:16,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"Filter is set up this way:
<filter>
       <filter-name>Name</filter-name>
       <filter-class>wicket.protocol.http.WicketFilter</filter-class>
       <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>de.shop.Application</param-value>
        </init-param>
        <init-param>
            <param-name>configuration</param-name>
            <param-value>development</param-value>
        </init-param>
   </filter>
   <filter-mapping>
       <filter-name>Name</filter-name>
       <url-pattern>/*</url-pattern>
   </filter-mapping>

Application.java is:
    public void init()
    {       
        mount(new IndexedParamUrlCodingStrategy(""/Index"",Index.class));
    }
    
    public Class getHomePage() {
        return Index.class;
    }

when this is first deployed, all is OK and working as expected: e.g: accessing 127.0.0.1/ -> Index page loads
if reDeploying it wont load anymore, no errors are issued however.
If youre on 127.0.0.1/Index (index-page mounted) and then redeploy and klick on any link or reload the page, the path changes to 127.0.0.1/Index/Index
if params are already issued it changes from 127.0.0.1/Index/param0/param1 to 127.0.0.1/Index/param0/param1/Index
doing it another time ends up in 127.0.0.1/Index/param0/param1/Index/param0/param1/Index etc.

links are BookMarkablePageLinks e.g:
new BookmarkablePageLink(this,""linkTo"",link.getLinkTarget(),link.getParams());

",Sun Java System Application Server 9.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-11 22:16:28.0,,,no_permission,,,,,,,,,,,201129,,,Sat Nov 11 22:16:28 UTC 2006,,,,,,0|i0kjrr:,118020,,,,,,,,"11/Nov/06 22:16;jcompagner;should be fixed now in 2.0
the filter path will never be the servlet path anymore when a filter is used
(the filter path and context path will be the complete root path of a wicket app)
filterpath is in a normal wicket applicaiton (with only one wicket app in the context) just """")
",,,,,,,,,,,,,,,,,,,,,,,
WebPage#onAfterRender erroneously reports missing header,WICKET-1718,12399151,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,svenmeier,svenmeier,27/Jun/08 09:23,25/Jul/15 22:11,13/Mar/19 23:15,21/Dec/08 10:39,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"In WebPage#onAfterRender() there's a check wether a header was missing on a page and header contributions would be lost.

In the following case this check erroneously barks:
- page A was requested
- in A's onBeforeRender() a RestartResponseAtInterceptPageException to page B is thrown
- page A's onAfterRender() is invoked in a finally block
- processing continues with page B

Page A's onAfterRender() complains about the missing header, althought his page was never completely rendered.

IMHO there's a check missing in WebPage#onAfterRender():

    	if (getRequestCycle().getResponsePage() == this) {
		.....
	}

Or is Page A not allowed to throw RestartResponseAtInterceptPageException in onBeforeRender() at all?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-27 16:03:43.135,,,no_permission,,,,,,,,,,,202658,,,Sat Jul 25 22:11:07 UTC 2015,,,,,,0|i0kffj:,117317,,,,,,,,"27/Jun/08 16:03;ivaynberg;imho, throwing a restartresponse exception that late in the game is awkward.",21/Dec/08 10:39;jdonnerstag;fixed,"25/Jul/15 22:09;jira-bot;Commit af84be5792ac22124a4fa19743c03c73eb8d292b in wicket's branch refs/heads/master from [~svenmeier]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=af84be5 ]

WICKET-1718 since 1.5.x a ReplaceHandlerException does no longer immediately change the current request handler, thus the comparison with the current page was bogus and never prevented validation of headers
","25/Jul/15 22:09;jira-bot;Commit bb7f9cf54770d8470c03a7e2f00eb6445e3953f4 in wicket's branch refs/heads/master from [~svenmeier]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=bb7f9cf ]

WICKET-1718 check successful rendering of page before validating headers
","25/Jul/15 22:11;jira-bot;Commit d3a2156e646a2328071b05b7f94ce6a45024513d in wicket's branch refs/heads/wicket-6.x from [~svenmeier]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=d3a2156 ]

WICKET-1718 since 1.5.x a ReplaceHandlerException does no longer immediately change the current request handler, thus the comparison with the current page was bogus and never prevented validation of headers
","25/Jul/15 22:11;jira-bot;Commit 319a6b86082596d88095f15279486117ad361e03 in wicket's branch refs/heads/wicket-6.x from [~svenmeier]
[ https://git-wip-us.apache.org/repos/asf?p=wicket.git;h=319a6b8 ]

WICKET-1718 check successful rendering of page before validating headers

Conflicts:
	wicket-core/src/test/java/org/apache/wicket/RestartResponseAtInterceptPageExceptionTest.java
",,,,,,,,,,,,,,,,,,
WebResponse.redirect(url) calls response.encodeRedirect(url) which is formally not supported on JSR-168 and thus can result in a NPE,WICKET-1155,12382368,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,adouma,adouma,adouma,12/Nov/07 19:02,17/Dec/13 19:17,13/Mar/19 23:15,12/Nov/07 19:06,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,,,,,0,,,,,,,,"During a RenderRequest an encodeRedirectURL() can occur if a Wicket url doesn't match the Wicket filter path (fully).
The WicketPortlet caters for this situation by trapping the redirect and validate if it targets this Wicket Filter path and then simply reinvoke the rendering for it.
The encoding in that situation really isn't needed.

For ResourceRequests, this is a different matter: although encodeRedirect isn't supported by JSR-168, for ResourceRequest it *is* going to be supported by JSR-286.
So, ResourceRequests handling, through the PortletResourceURLFactory and for a JSR-168 container served over a RenderRequest, should allow encodeRedirectURL, even when run on a JSR-168 container.

For ActionRequests, WicketPortlet already properly handed this.

The current implementation in o.a.w.protocol.http.portlet.PortletServletResponseWrapper doesn't cater for the RenderRequest/ResourceRequest situations in that it simply delegated to the wrapped response.
On Jetspeed-2, this still works as its less strictly checking the Portlet API requirements for this situation (which aren't formally tested by the Portlet TCK either).
On Liferay though this fails as it does implements the JSR-168 PLT.16.3.3 cxxxviii check which requires that a null value be returned from encodeRedirectURL (or encodedRedirectUrl).

To solve this issue, I'll implement the following fix:
- moving the encodeRedirectURL and encodeRedirectUrl methods in o.a.w.protocol.http.portlet.PortletActionServletResponseWrapper to its parent PortletServletResponseWrapper.
- in PortletServletResponseWrapper, call super.encodeRedirectURL and if it returns null return the initial url value, otherwise the returned value.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202154,,,Mon Nov 12 19:06:57 UTC 2007,,,,,,0|i0kgw7:,117554,,,,,,,,12/Nov/07 19:06;adouma;Fixed,,,,,,,,,,,,,,,,,,,,,,,
libxml2 splits large CData section. this breaks the processing of components,WICKET-2759,12457407,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tinaumlandt,tinaumlandt,25/Feb/10 10:56,21/May/13 11:59,13/Mar/19 23:15,25/Feb/10 16:04,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,"If the AJAX-Responses in WebKit-Browsern are too large the libxml2 splits the CData-Sections in two: one with 300 chars and the other section with the rest. 

This breaks the processComponent function in the wicket-ajax. js because it relies on the fact that only one section is returned:

text = node.firstChild.nodeValue; ",Linux Chrome ,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-25 16:04:56.389,,,no_permission,,,,,,,,,,,203615,,,Thu Feb 25 16:04:56 UTC 2010,,,,,,0|i0kcl3:,116856,,,,,,,,"25/Feb/10 10:58;tinaumlandt;I patched the wicket-ajax.js with the following lines in processComponent line 1300

if (node.hasChildNodes()) {
   for( i=0 ; i < node.childNodes.length; i++ ) {
        text = text + node.childNodes[i].nodeValue; 
   }
}

",25/Feb/10 16:04;ivaynberg;thanks,,,,,,,,,,,,,,,,,,,,,,
Inconsistent url generation,WICKET-290,12363061,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,17/Feb/07 02:36,02/May/13 02:29,13/Mar/19 23:15,28/Apr/07 00:01,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,,,,,,,0,,,,,,,,"in 1.2.5 wicket inconsistently generates urls. sometimes they are /context/mapping/?wicket:interface, other times they are /context/mapping?wicket:interface. this causes an inconsistency in context path because sometimes the mapping is part of path and sometimes its not, so it makes it harder to link to static resources in in webapp root that are linked to mounted pages

eg
mount a page on /mapping/index.html which includes style.css
and have webapp/mapping/style.css

when you hit the mount it is /context/mapping/index.html so to the browser it looks like style.css is in the same folder, but once you click a link the mapping becomes
/context/mapping?wicket:interface and now style.css is in the wrong folder because the mapping is no longer part of the path.

attached is a patch to fix this.

i am not sure if 1.3 is affected by this with its relative urls, almaw?

",,,,,,,,,,,,,,,,,,,25/Apr/07 23:25;abelon;PageMap.java;https://issues.apache.org/jira/secure/attachment/12356285/PageMap.java,17/Feb/07 02:37;ivaynberg;patch.txt;https://issues.apache.org/jira/secure/attachment/12351411/patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-02-20 11:58:03.236,,,no_permission,,,,,,,,,,,201362,,,Sat Apr 28 00:40:16 UTC 2007,,,,,,0|i0kj7b:,117928,,,,,,,,20/Feb/07 11:58;almaw;This is a non-issue in 1.3.,24/Apr/07 13:59;abelon;I don't agree my application on wicket 1.2.5 is now fully broken on 1.2.6. Some pictures in Wicket examples doesn't work now!,"25/Apr/07 17:52;abelon;Sorry, It became worth. Before that patch urls was unconsistent but only in other places. No they are unconsisted in other times. You should understand that is worst then it was before. That means there are another places to make sure that url consistent.
","25/Apr/07 17:55;ivaynberg;we need concrete examples of how urls were before 1.2.5, how they broke in 1.2.6. ""other places"" doesnt really help us fix anything.","25/Apr/07 20:59;abelon;Ok, I am trying to fix wicket core code on my own.","25/Apr/07 23:23;abelon;Ok, I fixed my wicket core code. 

I changed class ""wicket.PageMap"" and replaced the line 423 with code 

cycle.getResponse().redirect(responseUrl);

on

                                   if (!responseUrl.endsWith(""/""))
                                   { 
                                     cycle.getResponse().redirect(responseUrl+""/"");
                                   }    					
                                   else cycle.getResponse().redirect(responseUrl);

The problem appeared when the user directly types url without ""/"" in the end of string and then click to login. The wicket engine redirected user on authenticated home page.
I made adding ""/"" in the time of redirect. I am sure that is not clear patch, but it is work for my application. I don't know wicket architecture in details. I am sure you will make a perfect patch. I will waiting for it. Thanks!
 ",25/Apr/07 23:25;abelon;I added my version of PageMap,"25/Apr/07 23:35;ivaynberg;i dont see how this fixes your problem

the user hits /wicketapp/app
your auth strat redirects to the login page
then login page redirects back to /wicketapp/app
and what you are saying is that ^ that url doesnt work but /wicketapp/app/ does?

i guess i can see how this can break context-path relative things because in one case you are in the context path (/wicketapp/app) but in the latter case you are one folder deep inside the context path (/wicketapp/app/)

so are the context path relative things what are really breaking for you?","26/Apr/07 01:11;abelon;Yes, you are right. Without this patch my application redirects user to ""/wicketapp/app"" not ""/wicketapp/app/"" and many things didn't work. But after one click on any link became all good.",27/Apr/07 16:39;ivaynberg;looks like redirectooriginaldestination can use a little more love,"27/Apr/07 16:45;ivaynberg;andy, what exactly does this break for you?","27/Apr/07 21:28;abelon;1. All image icons don't show up right now after login. But they show up later after one click anywhere.
2. I have legacy servlets and wicket began create wrong links communicate.
3. Cookies became are not shareable between servlets, but I think this has another reason (Now since 1.2.6 I don't use common cookies between servlerts I use another methods to communicate). Thank you",27/Apr/07 21:31;ivaynberg;do the icons not show up because the css file is not found? or are the icons defined inside css? how is the css file included in the page?,27/Apr/07 22:08;abelon;Because most of images outside css. ,"27/Apr/07 22:26;ivaynberg;if images are outside css, such as

<img src=""foo.gif""/>

wicket should rewrite the src attribute to be 

<img src=""/context/foo.gif""/>

does that not happen?","27/Apr/07 22:52;abelon;Most of my images has not  fixed urls. These are like this img.add(new AttributeModifier(""src"", true, new Model(imgSrc)));
","27/Apr/07 23:09;ivaynberg;that isnt really a good way to go with wicket. because anything like page mounting, etc can break this stuff. you are depending on the context-relative path, but there is no guarantee it will stay stable. how about doing something like this:

class contextpathattributemodifier extends attributemodifier {
 protected string newvalue(string cur, string replace) {
                String contextPath = application.getApplicationSettings().getContextPath();
		if (contextPath == null)
		{
			contextPath = """";
		}
		else if (contextPath.endsWith(""/"") == false)
		{
			contextPath += ""/"";
		}    

                return contextPath+replace;
  }
}

and use that attributemodifier instead?
 

","27/Apr/07 23:45;abelon;Yes,it's good. Thanks, I think we should have this class in wicket core classes. But I have opinion if we force all url to be with ""/"" why we can't force in case 
redirectIncerpetedPage(new SignInPage())? I think some people can have use third party components or something other.","28/Apr/07 00:01;ivaynberg;in 1.3 we are going to have ContextImage, you can follow progress here WICKET-390

the problem with forcing urls to end with / is the fact that we do not ""force"" urls. what we do is simply consistently generate them with a trailing / after servlet mapping. it works in your case because the url is for the homepage. but what if the url contained some parameters for the homepage, /mycontext/app?foo=bar, then your fix wouldnt work. there are a lot of cases where this can happen, not just in the pagemap.continuetoorigdest(), and a lot of these cases are not under our control.",28/Apr/07 00:33;abelon;If you think that more careful forcing redirect will not break other Wicket functionality I'm ready to do that.  I think there are not only images resources. We may consider you redirect as sort of link. But our all links are sure good and redirects link sure to be good too.,"28/Apr/07 00:40;ivaynberg;i think really the only thing that can break with this change is stuff that depends on context-relative path. we always say that doing so in wicket is not a good idea because we do not guarantee the context-relative path - the path after the context path - because it changes for mounts/resources/etc.

this is why we have the thing that rewrites image urls to be absolute instead of relative, and for dynamic things you have to do it yourself (with that code i showed)

wicket-1.3 works with relative urls, so there things get even trickier if you depend on the context-relative path. best thing is not to depend on it, period. that is why we are providing ContextImage and other url-utility methods defined in WICKET-390

if you link from servlet to servlet things should not break. just make sure you append the trailing / after wicket servlet name.",,,
Detach is not called on page at end of Ajax request,WICKET-112,12357028,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dashorst,dashorst,27/Nov/06 14:52,02/May/13 02:29,13/Mar/19 23:15,30/Dec/06 00:55,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,1,,,,,,,,"When debugging our application for entities in the session, we discovered that ajax requests don't detach the page and its components and models. I've created and committed a unit test in branch wicket-1.x that fails for this reason.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-28 09:33:28.0,,,no_permission,,,,,,,,,,,201196,,,Tue Nov 28 09:33:28 UTC 2006,,,,,,0|i0kjnr:,118002,,,,,,,,"28/Nov/06 09:33;bendis;Wicket 2.0-SNAPSHOT (trunk) is also affected by this bug.

One of side-effects of this bug is broken FeedbackPanel when submitting via AJAX: The FeedbackMessagesModel caches its messages and the cache is cleared by calling detach(). Since the model is not detached at the end of the ajax request, feedback messages model wil remain stale and feedback panel will not update. This use case can be observed in the ajax / form example of the wicket-examples.

Regards,
Bendis",,,,,,,,,,,,,,,,,,,,,,,
Ajax Memory Leak in IE,WICKET-1186,12383235,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,picknick,picknick,26/Nov/07 16:19,25/Jun/12 13:33,13/Mar/19 23:15,27/Nov/07 23:24,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,0,,,,,,,,"Memory Leak in IE6 (IE7?) when using a DataView with AjaxPagingNavigator and each entry of the DataView table contains an AjaxLink. Memory increases by more than 500KB when displaying 100 items per page. AjaxDebugMode is disabled. Configuration is set to deployment. Version 1.2.6 is working fine. 
","Win XP
IE 6",,,,,,,,,,,,,,,,,,26/Nov/07 16:21;picknick;WicketIEMemLeak.zip;https://issues.apache.org/jira/secure/attachment/12370213/WicketIEMemLeak.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-27 23:22:24.38,,,no_permission,,,,,,,,,,,202182,,,Mon Jun 25 13:33:33 UTC 2012,,,,,,0|i0kgsv:,117539,,,,,,,,26/Nov/07 16:21;picknick;Quickstart project. Try paging through the user list.,27/Nov/07 23:22;knopp;The problem was in wicket-event (element reference was kept by the callback method) and the focus handler in wicket-ajax.,"25/Jun/12 13:26;kupolov;Hi guys,

FYI, the change in #[5987919|http://svn.apache.org/viewvc/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/ajax/wicket-ajax.js/?rev=598791&view=diff&r1=598791&r2=598790&p1=/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/ajax/wicket-ajax.js&p2=/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/ajax/wicket-ajax.js] sometimes leads to NoModificationAllowedError on IE10 release preview:
{code}
+	element.outerHTML = """";
+	element = """";
{code}
I believe, for this case it's safer to wrap this statement with try/catch and ignore the error.

","25/Jun/12 13:33;mgrigorov;Hi Fyodor,

This code is removed in Wicket 6.x. Now we use JQuery to deal with these matters.

Additionally we don't support release previews for the browsers. Most probably it is a bug in their code. If you care about IE then you better report this at their bug tracking system.",,,,,,,,,,,,,,,,,,,,
Wicket redirects don't work with Apache JMeter,WICKET-2732,12455761,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alexjfisher,alexjfisher,09/Feb/10 12:48,11/Apr/12 13:59,13/Mar/19 23:15,26/Aug/10 00:44,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,jmeter,redirect,,,,,,"Unlike some browsers, JMeter does not fix up the broken URLs returned in the Location header of 302 redirects generated by wicket.

For instance, after signing out of a wicket 1.4.6 app, the redirect might be to Location: http://host/wicket-app/.
Some browsers and even some webservers will fix this up (removing the dot), but JMeter will not and glassfish (and possibly other appservers) will return a 404 error.

I've have discussed the issue with the JMeter developer and hence opened this ticket.
http://mail-archives.apache.org/mod_mbox/jakarta-jmeter-user/201002.mbox/browser

Many thanks,
Alex

",Glassfish,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-09 15:30:52.77,,,no_permission,,,,,,,,,,,203593,,,Wed Apr 11 13:59:41 UTC 2012,,,,,,0|i0kcnj:,116867,,,,,,,,"09/Feb/10 12:50;alexjfisher;The WICKET-2600 fix changes the redirect format from

http://host/wicket-app/./ to http://host/wicket-app/.

Neither of these work with JMeter.","09/Feb/10 15:30;sebb@apache.org;Minor correction - JMeter works fine, it follows the redirect, but does not convert the location.

The location appears to be an absolute URL, so is not converted by the call to java.net.URL.URL(URL context, String spec) .
[JMeter calls this with the spec set to the Location: reference]

Indeed some OSes may permit ""."" as a file name, so this AFAICS is the correct behaviour by JMeter.

Wicket should ideally return a valid absolute URL, failing that it should return a valid relative URL.
The current behaviour appears to be neither.","07/Jun/10 11:40;kaig;We are having a slightly related problem here with a wicket application that uses org.apache.wicket.request.target.coding.HybridUrlCodingStrategy. 

If the application is deployed on tomcat (looks like we don't have the problem on jetty) is answering a request like this

{code}
GET http://localhost/myappctx/document/create
{code}

with a response like that

{code}
Response headers:
HTTP/1.1 302 Moved Temporarily
Server: Apache-Coyote/1.1
Location: http://localhost/myappctx/document/../document/create.1
{code}

jmeter can't handle that. In order to workaround this behaviour I added the following servlet filter to my application. 

{code}
/**
 * Servlet filter that converts wicket relative 302 redirects to absolute urls
 * (otherwhise jmeter can't load test a wicket app that is deployed on tomcat because it can't handle responses like 
 * 
HTTP/1.1 302 Moved Temporarily
Server: Apache-Coyote/1.1
Location: http://localhost/myappctx/document/../document/create.1
 * 
 * 
 * @author Kai Grabfelder
 *
 *@see https://issues.apache.org/jira/browse/WICKET-2732 
 */
public class RelativeUrlFilter implements Filter {

	@Override
	public void destroy() {

	}

	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {

		HttpServletRequest servletRequest = (HttpServletRequest) request;
		HttpServletResponse servletResponse = (HttpServletResponse) response;
		chain.doFilter(request, new RelativeUrlServletResponseFilter(servletRequest, servletResponse));
	}

	@Override
	public void init(FilterConfig filterConfig) throws ServletException {

	}

	public class RelativeUrlServletResponseFilter extends HttpServletResponseWrapper {
		private URI baseURL;
		public RelativeUrlServletResponseFilter(HttpServletRequest servletRequest, HttpServletResponse servletResponse) {
			super(servletResponse);
			try {
				baseURL = new URI(servletRequest.getRequestURI());
			} catch (URISyntaxException e) {
				throw new RuntimeException(e);
			}
		}
		
		@Override
		public void sendRedirect(String location) throws IOException {
			URI newURL = baseURL.resolve(location);
			super.sendRedirect(newURL.toString());
		}
		
	}

	
}
{code}

Please note that I haven't tested it extensivly yet (e.g. if it works if wicket is performing an absolute redirect). I'm even not sure if the tomcat behaviour (not converting the relative url to an absolute URL) is correct. Btw. the following thread is discussing the tomcat behaviour on the tomcat mailing list http://old.nabble.com/URLs-with-%27..-%27-and-404s-td28180099.html 

",26/Aug/10 00:44;ivaynberg;this should already be fixed in 1.5,11/Apr/12 13:59;mgrigorov;Filed a bug at Tomcat issue tracker for this problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53062,,,,,,,,,,,,,,,,,,,
DebugBar throws an java.lang.ExceptionInInitializerError when Tomcat is restarted,WICKET-2334,12428348,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zluspai@freemail.hu,zluspai@freemail.hu,19/Jun/09 11:35,22/Feb/12 14:54,13/Mar/19 23:15,30/Jun/09 06:36,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,,,,,0,,,,,,,,"I have just added the DebugBar to our base page, and since then when Tomcat is restarted and session would be reloaded by this it throws this exception:

1    ERROR org.apache.catalina.session.ManagerBase  - Exception loading sessions from persistent storage
java.lang.ExceptionInInitializerError
	at sun.misc.Unsafe.ensureClassInitialized(Native Method)
	at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:25)
	at sun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:122)
	at java.lang.reflect.Field.acquireFieldAccessor(Field.java:918)
	at java.lang.reflect.Field.getFieldAccessor(Field.java:899)
	at java.lang.reflect.Field.getLong(Field.java:528)
	at java.io.ObjectStreamClass.getDeclaredSUID(ObjectStreamClass.java:1614)
	at java.io.ObjectStreamClass.access$700(ObjectStreamClass.java:52)
	at java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:425)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:413)
	at java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:310)
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:547)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1583)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1496)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1583)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1496)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1732)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4469)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1849)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at java.util.concurrent.CopyOnWriteArrayList.readObject(CopyOnWriteArrayList.java:845)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1849)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Page.readPageObject(Page.java:1349)
	at org.apache.wicket.Component.readObject(Component.java:4465)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1849)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.readObject(SecondLevelCacheSessionStore.java:412)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1849)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.catalina.session.StandardSession.readObject(StandardSession.java:1407)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:931)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:394)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:321)
	at org.apache.catalina.session.StandardManager.start(StandardManager.java:637)
	at org.apache.catalina.core.ContainerBase.setManager(ContainerBase.java:432)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4160)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1014)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:736)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1014)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
	at org.apache.catalina.core.StandardService.start(StandardService.java:448)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:700)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:295)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:433)
Caused by: org.apache.wicket.WicketRuntimeException: There is no application attached to current thread main
	at org.apache.wicket.Application.get(Application.java:178)
	at org.apache.wicket.devutils.debugbar.DebugBar.getContributors(DebugBar.java:146)
	at org.apache.wicket.devutils.debugbar.DebugBar.registerContributor(DebugBar.java:140)
	at org.apache.wicket.devutils.debugbar.DebugBar.registerStandardContributors(DebugBar.java:152)
	at org.apache.wicket.devutils.debugbar.DebugBar.<clinit>(DebugBar.java:65)
	... 109 more",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2012-02-21 15:23:30.268,,,no_permission,,,,,,,,,,,203227,,,Wed Feb 22 14:54:54 UTC 2012,,,,,,0|i0kdnr:,117030,,,,,,,,"21/Feb/12 15:23;tszpinda;Hi, 
got exactly the same exception, running version 1.5.3 in production with configuration set to deployment. Happened after restarting the app with jconsole. Any ideas?
Cheers,
Tomek",21/Feb/12 15:51;mgrigorov;Can you paste/attach the stacktraces please ?,"22/Feb/12 10:25;tszpinda;Here u go, although looked closer and its seems to be a issue with PackageTextTemplate?
java.lang.ExceptionInInitializerError
	at sun.misc.Unsafe.ensureClassInitialized(Native Method)
	at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:25)
	at sun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:122)
	at java.lang.reflect.Field.acquireFieldAccessor(Field.java:918)
	at java.lang.reflect.Field.getFieldAccessor(Field.java:899)
	at java.lang.reflect.Field.getLong(Field.java:528)
	at java.io.ObjectStreamClass.getDeclaredSUID(ObjectStreamClass.java:1614)
	at java.io.ObjectStreamClass.access$700(ObjectStreamClass.java:52)
	at java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:425)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:413)
	at java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:310)
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:547)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1583)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1496)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1583)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1496)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1732)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1947)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1871)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at java.util.ArrayList.readObject(ArrayList.java:593)
	at sun.reflect.GeneratedMethodAccessor19271.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1849)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.page.PageStoreManager$SessionEntry.readObject(PageStoreManager.java:265)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1849)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.catalina.session.StandardSession.readObject(StandardSession.java:1439)
	at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:942)
	at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:394)
	at org.apache.catalina.session.StandardManager.load(StandardManager.java:321)
	at org.apache.catalina.session.StandardManager.start(StandardManager.java:637)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4267)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:297)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:836)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1426)
	at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectionImpl.java:72)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1264)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1359)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:788)
	at sun.reflect.GeneratedMethodAccessor16772.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
	at sun.rmi.transport.Transport$1.run(Transport.java:159)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
Caused by: org.apache.wicket.WicketRuntimeException: There is no application attached to current thread RMI TCP Connection(44)-<IP address>
	at org.apache.wicket.Application.get(Application.java:230)
	at org.apache.wicket.util.template.PackageTextTemplate.<init>(PackageTextTemplate.java:107)
	at org.apache.wicket.util.template.PackageTextTemplate.<init>(PackageTextTemplate.java:83)
	at org.apache.wicket.util.template.PackageTextTemplate.<init>(PackageTextTemplate.java:66)
	at daylight.workflow.presentation.wicket.component.SiteContactAutocompleteField$SiteContactVORenderer.<init>(SiteContactAutocompleteField.java:153)
	at daylight.workflow.presentation.wicket.component.SiteContactAutocompleteField$SiteContactVORenderer.<init>(SiteContactAutocompleteField.java:149)
	at daylight.workflow.presentation.wicket.component.SiteContactAutocompleteField.<clinit>(SiteContactAutocompleteField.java:59
","22/Feb/12 13:21;mgrigorov;Please open a separate ticket. This is an interesting issue.
By default Wicket serializes the application name when serializing a page and uses it at deserialization time to deal with problems like this one.
I guess this is not easy to reproduce with a quickstart... Can you give more details about your app - do you do something special regarding page serialization? Is there anything interesting about session replication? Etc..",22/Feb/12 14:54;tszpinda;Thanks created: WICKET-4426,,,,,,,,,,,,,,,,,,,
"Feedback messages get cleaned up in AJAX request, thus never rendered and never visible to user",WICKET-2705,12446910,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,winkler,winkler,28/Jan/10 13:12,03/Feb/12 06:41,13/Mar/19 23:15,03/Feb/12 06:41,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0.0-beta1,,,wicket,,,,0,,,,,,,,"Consider a page containing a form and an AJAXy component (as in an AJAX link or a panel with AjaxSelfUpdatingTimerBehavior). The form contains code, that makes its processing take relatively long time, even when validation fails (let's say we forgot to fill in a requred field). The form gets submitted, and while it's processing, the AJAX component triggers a request (AJAX link gets clicked, or AjaxSelfUpdatingTimerBehavior kicks in). While the AJAX request gets served, cleanupFeedbackMessages() is called, wiping all feedback messages found by WebSession.MESSAGES_FOR_COMPONENTS filter.

WebSession.MESSAGES_FOR_COMPONENTS implementation (or its usage in cleanupFeedbackMessages()) is a little bit fishy, as it accept()s messages, that haven't been rendered.

Will add testcase.",Sun Glassfish Enterpriser Server 2.1,,,,,,,,,,,,,WICKET-499,WICKET-2948,,,,28/Jan/10 13:52;winkler;feedbackbug.patch;https://issues.apache.org/jira/secure/attachment/12431668/feedbackbug.patch,28/Jan/10 13:19;winkler;feedbackbug.tgz;https://issues.apache.org/jira/secure/attachment/12431665/feedbackbug.tgz,09/Feb/10 16:12;dashorst;patch.txt;https://issues.apache.org/jira/secure/attachment/12435311/patch.txt,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-01-30 10:37:04.273,,,no_permission,,,,,,,,,,,2587,,,Thu Oct 14 06:13:21 UTC 2010,,,,,,0|i0kcp3:,116874,,,,,,,,"28/Jan/10 13:19;winkler;Testcase - maven project quickly hacked together.

1) Unpack, build, and deploy the project to appserver (I'm running on SGES 2.1)
2) Open the application (e.g. http://localhost:8080/feedbackbug-1.0-SNAPSHOT/ )
3) DON'T fill in the text field, submit the form, its onError will hang for 10 secs.
4) In the 10 second meantime, click the 'clickme' button
5) Wait for the end of the 10 sec processing. No feedback messages are provided, even though one should be displayed.","28/Jan/10 13:52;winkler;Attached patch solves my problem.

WebSession.MESSAGES_FOR_COMPONENTS does not acccept() messages that haven't been rendered yet.",30/Jan/10 10:37;jdonnerstag;By now 1.3 issues only get fixed if is security releated or a big big bug. Please consider using 1.4 instead,01/Feb/10 12:52;winkler;Affects 1.4.x as well.,"01/Feb/10 12:56;winkler;The patch attached earlier applies to current trunk.

wicket/src/main/java (trunk)$ patch -p1 < feedbackbug.patch 
patching file org/apache/wicket/protocol/http/WebSession.java
Hunk #1 succeeded at 50 with fuzz 1 (offset 5 lines).

","05/Feb/10 02:51;ivaynberg;the proposed patch will not work. it basically makes all calls to component.info() equivalent to getsession().info() which are two completely different scopes. the patch breaks semantics and will affect processing of feedback messages during non-ajax requests.

i dont see an easy solution to this problem. in order to support it fully we have to store the messages with the page or possibly pagemap - which is the synchronization token for concurrent requests.","09/Feb/10 15:19;dashorst;AFAIK the patch is valid. It doesn't modify the scope, it only modifies that just the rendered feedback messages are cleared, and keeps the non-rendered messages for another time.

This concurrency issue is something we encountered as well: a normal form submission and an ajax event that are fired at the same time, where the ajax request is canceled with an EmptyAjaxRequestTarget (because normal page processing is already in progress). When the RC.detach() is processed, it clears all feedback messages.

Of course this shouldn't happen outside the synchronized block (currently the feedback messages are cleared outside the sync'd block), but with this patch threading issues should be less of an issue than before.","09/Feb/10 16:04;dashorst;Problem is that this patch also kills manual cleanup of feedbackmessages.

When applied to branch/14x the patch causes a couple of testcase failures, most of which can be fixed by calling webSession.cleanupFeedbackmessages() in MockWebApplication#setupRequestAndResponse() (is intended behavior: all rendered feedbackmessages are cleared, just like in normal request processing).

The only test that fails is: WicketTesterTest#testToggleAjaxFormButton() and that is because the MockAjaxFormPage doesn't provide a feedbackpanel. Adding the feedbackpanel.

Session#cleanupFeedbackMessages() is documented as:

/**
 * Cleans up all rendered feedback messages and any unrendered, dangling feedback messages there may be left after that.
 */

But I think we should only clean up rendered feedback messages.
",09/Feb/10 16:12;dashorst;Patch that fixes all tests and fixes the cleanup. Remaining issue: what to do about the modified semantics of cleanupFeedbackmessages(),"09/Feb/10 16:53;dashorst;Another hurdle to take: FeedbackMessage#reporter is Component, and should be nulled between requests. ","02/Apr/10 10:45;winkler;My patch indeed breaks things -- touching semantics of cleanupFeedbackmessages() is not a good idea as feedback messages also serve to signal FormComponent's validity. WIth my patch, FormComponents that failed to verify during an ajax request, are treated not valid until the error message is actually displayed to the user. This results in displaying error messages on submitting correctly filled in Form.

The problem I originally reported is exactly what Martijn said: ""a normal form submission and an ajax event that are fired at the same time, where the ajax request is canceled with an EmptyAjaxRequestTarget (because normal page processing is already in progress). When the RC.detach() is processed, it clears all feedback messages.""

Cancelling an ajax request because normal page processing is in progress seems like an intentional no-op, and it should be. Cleaning feedback messages is not a no-op though.
","14/Oct/10 06:12;ivaynberg;a proper solution to this will look something like this:

feedback messages are stored in component's metadata with the components
add new support for persistent feedback messages - these are not cleaned up after render

form components report their errors as persistent
form components clean their reported errors once validated
so form component workflow looks like this:

before validate - clear all reported errors
validate - reports persistent messages
onvalid - clear all reported errors
onerror - do nothing, messages stay until next validation or onvalid","14/Oct/10 06:13;ivaynberg;the above solution is a little too much for 1.5 because we want to get it out asap, so scheduling for 1.6.0",,,,,,,,,,,
Submit a nested form via ajax to upload a file inside modal window does not work on IE.,WICKET-2779,12458932,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mikel,mikel,12/Mar/10 12:05,04/Jan/12 10:31,13/Mar/19 23:15,12/Mar/10 17:53,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,,,,0,,,,,,,,"I'm trying to submit a nested form via ajax to upload a file  inside modal window.
I get an exception:
java.lang.IllegalStateException: ServletRequest does not contain multipart content. One possible solution is to explicitly call Form.setMultipart(true), Wicket tries its best to auto-detect multipart forms but there are certain situation where it cannot.
at org.apache.wicket.protocol.http.servlet.MultipartServletWebRequest.<init>(MultipartServletWebRequest.java:113) 

After debug:
FileUploadBase.isMultipartContent get false because

if (contentType.toLowerCase().startsWith(MULTIPART))   - contentType = application/x-www-form-urlencoded 

It only occurs on IE browser (both IE7 and IE8).","Windows XP, IE7, IE8",,,,,,,,,,,,,,,,,,12/Mar/10 12:05;mikel;modalproject.zip;https://issues.apache.org/jira/secure/attachment/12438608/modalproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2011-12-30 14:42:19.513,,,no_permission,,,,,,,,,,,203633,,,Wed Jan 04 10:31:44 UTC 2012,,,,,,0|i0kcjr:,116850,,,,,,,,12/Mar/10 12:05;mikel;quickstart attached,12/Mar/10 12:08;mikel;I tested it on wicket versions from 1.4.4 to 1.4.7 - all those versions have this bug.,"30/Dec/11 14:42;feanorscurse;This bug still occurs for me. I got a modal dialog with a fileupload, placed in a nested form within a table. Wicket however puts the dialog outside of the table, but still replaces the form tag with div - so the fileupload no longer has a form tag around it. Even setting form.setMultiPart(true); results in an error (i.e. the stacktrace in the original post), thus. Any idea?",30/Dec/11 16:21;ivaynberg;please provide a quickstart and make sure your modal is inside a wicket form,"04/Jan/12 10:31;feanorscurse;Thanks for the reply, I'll start working on that quickstart, will take me some time, however.",,,,,,,,,,,,,,,,,,,
Autocomplete onchange event gets fired twice when selecting with mouse click,WICKET-1280,12386175,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,ckuehne,ckuehne,14/Jan/08 12:30,10/Nov/11 15:45,13/Mar/19 23:15,26/Mar/08 10:26,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,0,,,,,,,,"When selecting on of the choices of the autocomplete field per mouse click the onchange event fires twice.
The first onchange event is fired by the browser in response to the mouseclick. The second one is fired by the autocomplete.js.

If you hook an onchange event listener to the ac (as in the wicket example) field it gets called twice per selection. The first time the text entered by the user
gets submitted. The second time the selected choice is submitted.","Firefox, Opera",,,,,,,,,,,,,,WICKET-4204,WICKET-1717,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-26 09:07:21.011,,,no_permission,,,,,,,,,,,202264,,,Wed Mar 26 10:29:33 UTC 2008,,,,,,0|i0kgjj:,117497,,,,,,,,26/Mar/08 09:07;jcompagner;Gerolf can you look at this if it is fixable for 1.3? else change it to 1.4/1.5,"26/Mar/08 10:26;seitz;clicking on a list item generates events in the following order:
ac.onchange()
ac.onblur()
item.onclick()
item.onchange()

solution:
wrap ac.onchange() and only execute ac.onchange() if mouseactive==0
set mouseactive=0 in item.onclick() (fire onchange after click)
and ac.onkeydown[key_enter] (fire onchange after ENTER key pressed, even with mouse over the list)

","26/Mar/08 10:29;seitz;btw: tested it on FF/IE7/Opera on WinXP
just to be safe, can somebody check on MacOSX/Linux browsers?",,,,,,,,,,,,,,,,,,,,,
Memory leak in Localizer,WICKET-1667,12396890,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,badaud,badaud,27/May/08 15:09,14/Oct/11 18:31,13/Mar/19 23:15,16/Jun/08 15:52,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,,,,,1,,,,,,,,"I noticed recently (and told on IRC) a problem with the Localizer and the way the getCacheKey() method works.

I uses the component id of all component in the path to the component to create the key. But each page generation has a different id. This has been fixed recently by breaking outside of the loop which creates the key if the component's parent is a Page instance. This partially solves the always increasing cache. But it still has some issues:
- with the page completely outside of the path, it could introduce some rare bugs when searching for keys defined in the page properties file (it shouldn't break but skip the ""buffer.append("":"").append(cursor.getId())"" when the cursor is on a Page instance).
- there is still a bunch of ids generated when you loop over a repeater (the component of type Item has a new id for every item in the list). this is mitigated by the fact that when doing a normal refresh of the view, the starting id restarts at 1, but if you have an Ajax paging view, it's not restarted and starts again to fill the cache with unwanted keys.

there are multiple options:
- never include the id in the key (I'm not convinced it is necessary; is it really used in the String loader?)
- don't include the id in the key if the cursor is on a component of type Page or Item
- don't include the id if it's numeric (is this costly?)

In the meantime, I'll make a small fix in my local checkout of Wicket, not including the id if the cursor is on Page or Item",,3600,3600,,0%,3600,3600,,,,,,,,,,,,10/Jun/08 11:36;sfussenegger;localizerleak-v2.tar.gz;https://issues.apache.org/jira/secure/attachment/12383741/localizerleak-v2.tar.gz,28/May/08 20:19;ivaynberg;patch.txt;https://issues.apache.org/jira/secure/attachment/12382960/patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-05-27 19:45:35.79,,,no_permission,,,,,,,,,,,85636,,,Wed Jun 11 03:59:16 UTC 2008,,,,,,0|i0kfjz:,117337,,,,,,,,"27/May/08 15:30;badaud;This code fixes the issue:
			while (cursor != null)
			{
				buffer.append(""-"").append(cursor.getClass().getName());
                if (!(cursor instanceof Page) && !(cursor instanceof Item)) {
                    buffer.append("":"").append(cursor.getId());
                }
                cursor = cursor.getParent();
			}",27/May/08 19:45;ivaynberg;proposed localizer patch,28/May/08 20:19;ivaynberg;fixed patch,"04/Jun/08 07:37;badaud;Hi,

Any idea why the patch didn't make it into 1.4-m2?",04/Jun/08 09:59;jcompagner;because it hasnt been applied yet?,10/Jun/08 09:24;sfussenegger;Ported patch to Wicket 1.3.3. Archive contains a quickstart and a JUnit test,10/Jun/08 11:36;sfussenegger;Made some minor tweaks to emphasize the problem: uncomment the patched (contained) Localizer class to use the original Localizer and see the difference: down from 200 to 4 cached entries.,11/Jun/08 03:59;ivaynberg;if someone can confirm this works in a production environment i will commit the patch. i havent had the time to test it yet.,,,,,,,,,,,,,,,,
stateless page + form + bookmark = trouble,WICKET-877,12376720,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,pete,pete,23/Aug/07 14:59,05/Oct/11 00:14,13/Mar/19 23:15,03/Oct/07 14:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"I have a stateless login page for the application (using HybridUrlCodingStrategy):

   url_1 = http://localhost/login

When I press the login button of the username + password form the form data will be sent using HTTP POST:

  url_2 = http://localhost/login/wicket:interface/%3A0%3AnavigationContrib%3Aform%3A%3AIFormSubmitListener%3A%3A/

Unfortunately, if somebody bookmarks url_2 (which is stupid as we java dudes all know, but it _will_ happen because average users don't know better) the form submit listener will be invoked using HTTP GET and having no form parameters. *imho* bookmarks should be possible in a professional application at all time.

This, of course, will result in an ugly error message and unexpected application behavior and empty form fields and stuff. That's *btw* why I declare this request a bug and not a feature / enhancement.

I think it would be cool to have Form#onInvalidSubmit() to handle this kind of stuff (it won't happen on stateful pages with redirect after post enabled). So, for example, the application could just reload to the login page.

detection is easy... here my suggestion:

------------------------------------------------------
class org.apache.wicket.markup.html.form.Form:

public final void onFormSubmitted()  // line 746
{
    final String method = ((WebRequest) getRequest()).getHttpServletRequest().getMethod();

    if (method.equalsIgnoreCase(this.getMethod()) == false)
      this.onInvalidSubmit();

    // ...
}

// override (optional)
protected onInvalidSubmit() {}

------------------------------

in my case I would just do this:

@Override
protected onInvalidSubmit()
{
  this.setRedirect(true);
  throw new RestartResponseException(getPage().getClass());
}

This would probably be a good default behavior for StatelessForm....

I consider this change useful enough to be part of wicket core.

What you guys think?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-03 14:21:33.852,,,no_permission,,,,,,,,,,,46112,,,Wed Oct 03 14:21:33 UTC 2007,,,,,,0|i0khn3:,117675,,,,,,,,"03/Oct/07 14:21;jcompagner;fixed for stateless form. A stateless form will now always do a redirect, Except ofcourse when the user enters wrong data...
Because then it is not possible to redirect and you will get that url",,,,,,,,,,,,,,,,,,,,,,,
LinkTree with IndicatingAjaxLink leaks <script> tags,WICKET-1623,12395851,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,plaflamme,plaflamme,12/May/08 18:23,28/Sep/11 15:36,13/Mar/19 23:15,03/Jun/09 00:10,1.3.3,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,,,wicket-extensions,,,,0,,,,,,,,"From mailing list:

http://markmail.org/message/uhghojcrtq74xm63?q=list:org%2Eapache%2Ewicket%2Eusers

Extending LinkTree to create IndicatingAjaxLink leaks <script> tags.
",,,,,,,,,,,,,,,,,,,12/May/08 18:25;plaflamme;linktree-leak.tar.gz;https://issues.apache.org/jira/secure/attachment/12381901/linktree-leak.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-18 22:44:09.038,,,no_permission,,,,,,,,,,,36752,,,Fri Sep 19 00:59:06 UTC 2008,,,,,,0|i0kfof:,117357,,,,,,,,"12/May/08 18:25;plaflamme;A project created with maven-archtype that reproduces the problem.

Simply execute mvn jetty:run and start clicking away on the tree...",18/Sep/08 22:44;knopp;Is this still relevant with latest 1.3 branch?,18/Sep/08 22:52;knopp;please reopen if this issue is still relevant,"19/Sep/08 00:28;plaflamme;Just tried it with 1.3.4 and 1.3-SNAPSHOT: same behaviour as 1.3.3

If you jetty:run the attached project you can reproduce the issue by simply expanding any node in the tree and inspect the <head> node of the document: <script> tags will appear on every click.","19/Sep/08 00:51;knopp;I was thinking of leaking of the actual indicator. Okay, the script indeed leaks, it's because of Ajax header contribution",19/Sep/08 00:59;knopp;Committed fix for 1.3 branch and trunk,,,,,,,,,,,,,,,,,,
Check/Radio fail in a GridView with item reuse strategy,WICKET-64,12355571,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,14/Nov/06 07:23,25/Aug/11 09:54,13/Mar/19 23:15,14/Nov/06 08:00,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.4,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"Because check/radio use relative path from group->component as their value attribute they will lose value if that path changes. This happens when these components are used in a gridview with itemreuse strategy because the gridview has an intermediate repeater that changes the path

so the path of a check can go from

gridview:2:rowitem:5 where 2 is the id of the item of the intermediate repeater

to

gridview:3:rowitem:5

and this will cause the input value to be lost.

the solution is to use a value attribute that will not change across requests.",,,,,,,,,,,,,,,,,,,14/Nov/06 07:24;ivaynberg;thepatch.txt;https://issues.apache.org/jira/secure/attachment/12344940/thepatch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,63779,,,Tue Nov 14 07:24:17 UTC 2006,,,,,,0|i0kjr3:,118017,,,,,,,,14/Nov/06 07:24;ivaynberg;fix,,,,,,,,,,,,,,,,,,,,,,,
"When multipart on form is set to true, setResponsePage() doesnt work",WICKET-2667,12445016,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,fflyw,fflyw,08/Jan/10 10:36,29/Jun/11 11:48,13/Mar/19 23:15,19/Jan/10 16:52,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,,,,,,,0,,,,,,,,"calling of setResponsePage() causes  message in WICKET AJAX DEBUG

icket Ajax Debug Window (drag me here)
ERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element
INFO: Invoking post-call handler(s)...
INFO: Invoking failure handler(s)...

and i am not navigated to new page used in setResponsePage(page) ","winxp pro, oracle, tomcat",,,,,,,,,,,,,,,,,,19/Jan/10 09:39;fflyw;sample.rar;https://issues.apache.org/jira/secure/attachment/12430721/sample.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-14 18:41:27.957,,,no_permission,,,,,,,,,,,69766,,,Wed Jun 29 11:48:33 UTC 2011,,,,,,0|i0kcrz:,116887,,,,,,,,14/Jan/10 18:41;martin-g;Use org.apache.wicket.RestartResponseException instead of setResponsePage(). ,"17/Jan/10 18:31;jdonnerstag;If that doesn't solve your problem, please provide a quickstart or test case. The issue will be closed in 2 weeks otherwise.","19/Jan/10 00:57;ivaynberg;im closing it now, we can reopen if Robert comments on it.","19/Jan/10 09:39;fflyw;I am attaching simple test application, i only changed test application from other  Wicket issue.","19/Jan/10 09:40;fflyw;Hi sorry , but i wat little bid bussy. Thanks for replies. i attached simple test application to this isue, i hope it helps.","19/Jan/10 16:32;martin-g;The problem here is that the Form is multipart (no fileUploadField used!) and thus it uses iframe to submit it, and later it cannot process the response header ""Ajax-Location"" in wicket-ajax.js#handleMultipartComplete(event), line 1165, and doesn't make the redirect. ","19/Jan/10 16:56;fflyw;tommorow i can send you another test application with fileUploadField, I think, setResponsePage wont work when multipart == true",19/Jan/10 16:58;ivaynberg;i already fixed it....,19/Jan/10 17:07;fflyw;ok thanks,"29/Jun/11 10:57;pemarasigan;@Igor, how did you do it?","29/Jun/11 11:48;mgrigorov;Paulo, see the Subversion Commits tab here in the ticket.",,,,,,,,,,,,,
Consistently create body for short tags.,WICKET-2650,12444302,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lhunath,lhunath,29/Dec/09 10:58,22/Jun/11 20:09,13/Mar/19 23:15,22/Jun/11 20:09,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC6,,,wicket,,,,0,,,,,,,,"When the Wicket HTML contains a tag such as <a wicket:id=""foo"" /> and the component bound to that tag uses replaceComponentTagBody to write a string to the tag's body, currently nothing happens.

Either a text node should be added to the component tag and the body written to it;
Or a warning/exception should occur if for some reason it is preferred to not let this method succeed when the component tag has no body yet.

I don't see the use of the latter, so I recommend the former be implemented.

For now it's just confusing and dangerous.  If I give my HTML to a web designed and he changes a few empty HTML tags to short tags, I'll never be warned, but my output WILL be broken.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-29 12:02:24.194,,,no_permission,,,,,,,,,,,70233,,,Wed Jun 22 20:09:41 UTC 2011,,,,,,0|i0kctb:,116893,,,,,,,,"29/Dec/09 11:03;lhunath;I believe the short tag is already expanded for certain components/tags, such as div/span?  Either way; this should be consistent across all of the tag handling and be taken out where it exists currently.","29/Dec/09 12:02;jdonnerstag;It is not that simple. 
1) Obviously open/close tags are perfectly valid. 
2) We check the tag and if it is open than we render the body - whatever that body is and which ever way the user wants to do it. 

How shall Wicket know upfornt that you'll be rendering the body yourself? Without a better reason I'm not in favor to switch to ""always render the body and than based on the text generate determine what to do..."". 

Some Components require a body text and thus accept open/close tags which the Component itself manually changes via subclassing onComponentTagBody.

If you want ALL your wicket tags to have a body, simply create a filter and add it to your application. You may copy and modify OpenCloseTagExpander for that purpose

I can imagine there are specific use cases (like <a wicket:id=  >/) currently not automatically covered by Wicket and I'm more than open to adjust any of the existing filters or add a new one. But I'm -1 on changing all <xxx wicket:id= ../> to open-body-close.

May be you can provide a filter implementation which implements these use cases and I'm more than happy to take a look.

BTW, via the filter you can implement both: automatically change open-close to open-body-close, throw an exception or log a warning.","30/Dec/09 08:49;martin-g;As far as I remember expanding of div and span was added to overcome a bug in Firefox (maybe version 2.x). So Wicket is trying to help the user here.
I don't agree that Wicket should fix developer/webdesigner errors, like <a href="""" ... />. Especially I don't want to see any of my <img /> or <input /> expanded.
There are helper utils in Wicket like devutils' Filter for <img src="""" /> (image empty source location) which are there to help me and extending them to warn me about my coding mistakes would be great.","30/Dec/09 09:19;lhunath;Hmm; I hadn't seen OpenCloseTagExpander yet.  Interesting approach; but appears to be lacking a few tags.

Perhaps we should just add all HTML elements which are designed to have a body to it, such as:
a, q, sub, sup, abbr, acronym, cite, code, del, dfn, em, ins, kbd, samp, var, label, textarea, tr, td, th, caption, thead, tbody, tfoot, dl, dt, dd, li, ol, ul, h1-6, pre, title

For these elements, there is no advantage whatsoever to keeping them open/close rather than open/body/close, while there is advantage to converting them to open/body/close.  In that light I don't see why we should not do this.

Currently, OpenCloseTagExpander seems like a nice but very incomplete filter.  The approach it takes is one to change a set of tags, but there is no logic or consistency behind what tags are in the set.",30/Dec/09 15:44;jdonnerstag;Added ExtendedOpenCloseTagExpander to core which is NOT automatically added. Please see the javadocs for how to do it.,22/Feb/10 20:43;lhunath;So; what is the reason to not add this one automatically?  I see a lot of benefit from it and not sure I can see any reason why it would be disadvantageous.,24/Feb/10 01:03;ivaynberg;we cannot change the behavior in wicket-1.4.x but in trunk i changed the default to work like extended,"19/Jun/11 22:16;lhunath;Am I being daft or is ExtendedOpenCloseTagExpander's contains missing a ""super.contains(name) || ""?","20/Jun/11 05:37;lhunath;Additionally, I'd like to propose the class be extended to include all new HTML5 elements that are defined to allow a content.","20/Jun/11 16:06;jdonnerstag;>>  missing a ""super.contains(name) || ""? 

1.4: since super.contains() is missing, only the ""new"" tags are opened => add super.contains()
1.5: registers the old and the new one, but with a comment ""leave the old one's in for backwards compatibility reason""

I don't want to change all tags automatically (same as Martin), including new html5 elements. Please provide a list and an explanation why they should be considered. Thanks.","21/Jun/11 13:30;lhunath;The list would include every single tag from the HTML5 specification that has a non-empty content model.  When the HTML specification specifies that a body on the element is legal, we can expand it.",22/Jun/11 20:09;jdonnerstag;fixed,,,,,,,,,,,,
WicketTester Cookie handling,WICKET-1886,12406992,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,pedrosans,joern.zaefferer,joern.zaefferer,22/Oct/08 12:48,18/Feb/11 00:12,13/Mar/19 23:15,17/Feb/11 07:20,1.3.5,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4.16,1.4-RC2,,,,,3,,,,,,,,"While trying to test my SecureForm implementation (https://issues.apache.org/jira/browse/WICKET-1885) with WicketTester I ran into this issue: A cookie set in the response never shows up in the ""next"" request, because both have their own lists of cookies that aren't shared.

Afaik both should share the same List instance to handle cookies. That way its possible to set a cookie in the response and read it from the request.

A simple testcase is attached.",,,,,,,,,,,,,,,,,,,22/Oct/08 12:49;joern.zaefferer;CookieTest.java;https://issues.apache.org/jira/secure/attachment/12392651/CookieTest.java,01/Feb/11 18:39;pedrosans;WICKET-1886-test-fix.patch;https://issues.apache.org/jira/secure/attachment/12469964/WICKET-1886-test-fix.patch,01/Feb/11 12:10;pedrosans;WICKET-1886.patch;https://issues.apache.org/jira/secure/attachment/12469921/WICKET-1886.patch,01/Dec/08 11:22;thrantal;WICKET-1886__SecureForm_and_failing_test.patch;https://issues.apache.org/jira/secure/attachment/12395010/WICKET-1886__SecureForm_and_failing_test.patch,13/Nov/08 19:16;miojo;patch-WICKET-1886.diff;https://issues.apache.org/jira/secure/attachment/12393884/patch-WICKET-1886.diff,,,,5.0,,,,,,,,,,,,,,,,,,,2008-11-13 13:43:19.329,,,no_permission,,,,,,,,,,,202812,,,Fri Feb 18 00:12:18 UTC 2011,,,,,,0|i0kf0f:,117249,,,,,,,,"13/Nov/08 13:43;miojo;The flow of HTTP communications is always:

REQUEST ---> RESPONSE

** there's no flow like this:
RESPONSE ---> REQUEST

To be more clear, the Response object where you are adding cookies in, theoretically came from a different request than the one you are trying to get that cookie back from. So, of course it shouldn't be there. Now, if you create a request to add the cookie and read the cookie from the response, then on a second request that cookie should still be there, *if* it's time-to-live makes sense for this case.

Regards,
Bruno","13/Nov/08 15:37;joern.zaefferer;In testing a form where Cookies are required the flow is REQUEST ---> RESPONSE ---> REQUEST ---> RESPONSE ---> REQUEST and so on. So I need a way to simulate that flow and get the cookies from one response into the the next request.

I don't care about the semantics, as long as I can test my form with WicketTester instead of a browser. I'd be happy to manually ""transfer"" the cookie, but haven't found any way to do that.","13/Nov/08 19:16;miojo;Apply this patch and check the test2() method inside CookieValuePersisterTest.

Update your own test and tell me if it works. :-)

Regards,
Bruno",13/Nov/08 19:39;miojo;The patch I submitted is against trunk (1.4),"17/Nov/08 10:40;joern.zaefferer;Thanks for the patch Bruno. My simple test passes, but my actual application test doesn't. I'm struggling to extract a better testcase, I'll update once I've got something.",01/Dec/08 11:22;thrantal;Attached an example usage of FormTester to test SecurePage to demonstrate this bug.,"01/Dec/08 12:42;thrantal;Jörn, I've committed what I think fixes this issue. Could you please try with the latest snapshot? (Either 1.3.x branch or trunk, the fix is in both.)","01/Dec/08 13:31;joern.zaefferer;Thanks Timo, but that doesn't fix it.

I think the problem is setupRequestAndResponse isn't called ""often enough"". The flow seems to be like this:

setup
add cookie to response
try to read previous cookie from request -> missing, therefore write new cookie
setup

So between rendering a page and submit a form and processing the submit, setupRequestAndResponse isn't called.

So in that respect, SecureForm needs to read a cookie from the request just after it was written to the response.

The WicketTesterTest is insufficient, as it never reads a cookie from the request after setting it to the response...","01/Dec/08 13:48;thrantal;OK, thanks for the comments.  

Could you change the attached SecureFormTest so that it 
demonstrates the problem? There must be something I'm missing 
here.

","01/Dec/08 14:28;joern.zaefferer;I can't reproduce the issue with the attached file either, even though the SecureForm implementation is exactly the same. I'll post an update as soon as I find something.

If nothing helps, I'll try to extract my own test from the application.","07/Jan/09 17:18;ivaynberg;timo, any news?","08/Jan/09 21:06;thrantal;Yeah, unfortunately my holidays are about finishes so in the 
upcoming days IŽll fortunately be more at the computer again. 
IŽll try to look at that next week.

","24/Feb/09 13:48;thrantal;Jörn (or why not somebody else as well), could you provide a failing test?

As a patch or a quickstart.

I verified again that  SecureFormTest that I attached works on the SecureForm on the same patch, so I'm unsure on what needs to be done still.",09/Mar/09 17:19;joern.zaefferer;I'm unable to reproduce the problem outside of our application. Must be something wrong within...,"10/Mar/09 20:11;thrantal;Let's mark this as fixed in 1.3.6 and 1.4-rc2 anyway, because I put in the changes that enable SecureForm testing as far as I can tell.

If there are more problems with this issue, please open another issue (and link to this if relevant).","10/Mar/09 20:12;thrantal;There is now some cookie handling in WicketTester







",01/Feb/11 12:02;pedrosans;cookies are lost after an redirect response,"01/Feb/11 12:10;pedrosans;Wicket tester don't set the cookies on request after an redirect response, test case showing the problem","01/Feb/11 12:19;robertda;Just to add to Pedros update: 
Wicket version 1.4.15
I actually have not checked against 1.5 RC's

I believe the culprit is in 

MockWebApplication.postProcessRequestCycle:
if (httpResponse.isRedirect())
{
   lastRenderedPage = generateLastRenderedPage(cycle);

   MockHttpServletRequest newHttpRequest = new 
MockHttpServletRequest(application, servletSession, 
application.getServletContext());

...
}

when the servlet request gets recreated all cookies are cleared (even if the original request contained cookies). One possible solution would be to copy the cookies from the original request over to the new redirect request as this should simulate how it works in the browser. But I could be wrong or lack some information about this.",01/Feb/11 17:09;pedrosans;My first impression is that we should setup the request/response calling setupRequestAndResponse before redirect. Fix the attached test case and break others :\,"01/Feb/11 18:39;pedrosans;The problem was that I was not assigning the redirect request cycle to the ""cycle"" variable that is used latter to generate the lastRenderedPage.
Robert is right, I'm sending the patch with the test case and fix calling the setupRequestAndResponse to create the request. Inside this method cookies are already copied from those on session.","02/Feb/11 14:28;robertda;Cool, nice work!",17/Feb/11 07:21;ivaynberg;applied pedro's patch,"18/Feb/11 00:12;hudson;Integrated in Apache Wicket 1.4.x #446 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/446/])
    "
StatelessForm problems with query string,WICKET-1912,12407771,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,aditsu,aditsu,04/Nov/08 11:41,09/Feb/11 16:04,13/Mar/19 23:15,12/May/09 21:16,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,1.4-RC5,,,,,,3,,,,,,,,"I made a small application to reproduce the problem, please see the attachment.
Dependencies: jetty 6, wicket 1.4-m3, slf4j, log4j

First problem:

Steps to reproduce:
1. Run the test.Start class
2. Open http://localhost:8080 in a browser
3. Type something in the text field, then click submit several times

Result:
The query string is growing every time


Second problem:

Steps to reproduce:
1,2: Same as above
3. Don't type anything in the text field, then click submit several times

Result:
Besides the query string growing every time, semicolons appear in the input field and grow exponentially (2*n+1 each time)


Third problem:

Steps to reproduce:
1,2: Same as above
3. Don't type anything in the text field, then click submit once
4. Type something in the text field, then click submit several times

Result:
A semicolon is prepended to the text, then the text is doubled every time, with a semicolon added in the middle",,,,,,,,,,,,,,,,,,,01/May/09 09:03;martin_kovacik;Form.patch;https://issues.apache.org/jira/secure/attachment/12406995/Form.patch,04/Nov/08 11:44;aditsu;wickettest-1912.zip;https://issues.apache.org/jira/secure/attachment/12393293/wickettest-1912.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-04-30 13:20:26.486,,,no_permission,,,,,,,,,,,86700,,,Tue May 12 16:14:08 UTC 2009,,,,,,0|i0kexj:,117236,,,,,,,,"30/Apr/09 13:20;martin_kovacik;I have the same problem. When I submit statelessform query string is growing exponentially. This issue is probably somehow related to the fact that all the form components are duplicated on each submit (they become hidden inputs after submit).

It would be great if this issue is fixed, as several other users were complaining about it too:

http://www.nabble.com/StatelessForm-in-Bookmarkable-Page-problem-td19430608.html#a19430608
and
http://www.nabble.com/StatelessForm---problem-with-parameters-after-validation-fails-td22438953.html#a22438953

Martin",01/May/09 09:03;martin_kovacik;This patch should solve the problem. It is diff against 1.4-rc2 version of Form class.,"01/May/09 09:04;martin_kovacik;Hopefully it won't break anything :)

Martin",12/May/09 16:14;jthomerson;assigning a fix version so that this will come up on the radar,,,,,,,,,,,,,,,,,,,,
Encoding issue with wicket Ajax POST form processing ,WICKET-2514,12437598,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vmathon,vmathon,08/Oct/09 13:05,19/Jan/11 16:22,13/Mar/19 23:15,01/Sep/10 16:50,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,,,,,2,,,,,,,,"Ajax submitted forms via POST are not encoded properly when wicket applications are configured for a charset different from UTF-8.
(I mean for instance getMarkupSettings().setDefaultMarkupEncoding(""ISO-8859-1""); getRequestCycleSettings().setResponseRequestEncoding(""ISO-8859-1"");)

This bug is clearly related to old wicket mailing-list posts:

http://mail-archives.apache.org/mod_mbox/wicket-users/200804.mbox/%3Cdf3d7452-0ac0-4cf7-8164-87e9371d82b1@signicat.com%3E
http://www.nabble.com/BUG-on-wicket-ajax.js-on-Ajax-behaviour-in-IE7----to20915921.html#a20915921

Changing t.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded"");  with t.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded;charset=UTF-8""); in wicket-ajax.js solves the problem without adding any specific web server configuration setting (like URIEncoding=""UTF-8"" for TOMCAT). This is the best solution if one not wants to sacrify web application portability. More, it seems that Ajax form processing should always be encoded in UTF-8 (see WicketFilter implementation switch in case of ajax request), so specifiying charset in the javascript should not be a problem.

The javascript code for Ajax POST processing is identical in wicket 1.4.1 so this bug should also appear in this version.

","IE6, FF3",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-27 05:16:57.153,,,no_permission,,,,,,,,,,,203394,,,Wed Jan 19 16:22:11 UTC 2011,,,,,,0|i0kd5z:,116950,,,,,,,,27/Aug/10 05:16;ivaynberg;could not repro with 1.4.x,"01/Sep/10 15:31;vmathon;Sorry but I stil reproduce this anomaly with Wicket 1.4.9, IE6, 7, 8 and FF3. The workaround in wicket-ajax.js still work like a charm (t.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded;charset=UTF-8""); instead of  t.setRequestHeader(""Content-Type"", ""application/x-www-form-urlencoded"");in the doPost method). It is just a bit annoying to maintain myself a patched copy of wicket-ajax.js each time I upgrade Wicket version.","01/Sep/10 16:50;ivaynberg;ok, i will take your word for it. maybe im not seeing it because i am in en_us locale. fixing only in 1.5 because we do not want to change existing behavior","02/Sep/10 19:13;hudson;Integrated in Apache Wicket 1.5.x #290 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/290/])
    ","19/Jan/11 16:22;hell;I had the same problem and I found that there was another filter called before WicketFilter and this caused the problem, because there was no conditional:

if (request.getCharacterEncoding() == null) {
    request.setCharacterEncoding(""UTF-8"");
}

but it works with parameters ... 

After I add this conditional to my filter it completely solves the problem without modifiing wicket-ajax.js.",,,,,,,,,,,,,,,,,,,
Messages lost upon session failover with redirect_to_buffer,WICKET-1973,12410254,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,erikvanoosten,erikvanoosten,09/Dec/08 08:08,01/Jan/11 00:22,13/Mar/19 23:15,31/Dec/10 12:33,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC1,,wicket,,,,0,,,,,,,,"Using the redirect_to_buffer render strategy, messages in the session get cleared after the render.

If the redirected request comes in at another node, the buffer is not found and the page is re-rendered. In this case the messages are no longer available.

See the javadoc of WebApplication#popBufferedResponse(String,String).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-20 21:48:30.512,,,no_permission,,,,,,,,,,,202893,,,Sat Jan 01 00:22:10 UTC 2011,,,,,,0|i0ker3:,117207,,,,,,,,"20/Sep/10 21:48;pete;Is this issue still existant. The affected version was a release candidate so it's pretty much possible the problem is already gone. Also, does this exist in 1.5?","27/Dec/10 15:02;mgrigorov;I think this issue is still relevant for Wicket 1.5.
The buffered responses (only for stateful pages) are stored in the Application and thus are not replicated to the other nodes.

Recently we had discussion about this behavior when trying to store the buffered response for stateless pages (see WICKET-3239).
If I don't miss something important then I think the storage for buffered responses for stateful pages can be moved to the user's Session.
Currently the storing for stateless pages is disabled by default but if someone needs this functionality then the storage for them should be in Application.",27/Dec/10 15:52;ivaynberg;storing the buffer in session is a big nono. we do not want the buffer replicated across the cluster as it can be quiet big.,"27/Dec/10 16:24;jcompagner;you really should use sticky sessions,
I dont see any reason not to use that, and it is way better for performance.
A browser can do many request at the same time to the server, those should hit the same node, else you have multithreaded access to pages over multiply computers. What is then the final page that you want to have?
",27/Dec/10 16:28;ivaynberg;the usecase is when a node fails and session fails over to another one.,27/Dec/10 16:39;erikvanoosten;The other use case is the odd-client that insists on using a round robin load balancer.,27/Dec/10 16:49;ivaynberg;that odd client would have to use a strategy other then redirect to buffer,"27/Dec/10 16:52;jcompagner;How many times does it happens that a node fails and at the same time you would have just between the real and the redirect request you that would have had messages??

you have to use a round robin load balancer but for new sessions.
Not for existing sessions.. That really can jus screw things up...
",27/Dec/10 18:28;mgrigorov;Then we can document this as a known issue/limitation of this strategy and close the ticket. Objections ?,28/Dec/10 07:34;erikvanoosten;None from me.,31/Dec/10 12:33;mgrigorov;A note describing the limitation is added to IRequestCycleSettings javadoc.,"01/Jan/11 00:22;hudson;Integrated in Apache Wicket 1.4.x #362 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/362/])
    ",,,,,,,,,,,,
Ajax xml response is not validated correct,WICKET-2264,12424901,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,jensiator,jensiator,08/May/09 08:34,27/Dec/10 14:35,13/Mar/19 23:15,27/Dec/10 14:35,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,0,,,,,,,,"Ajax xml response is not validated correct
Try my quickstart project with Firefox. Clicking on the submit button should update the label above. But does not. See the result in the error log in firefox. 

The control characters is not properly escaped. Ex: ""\u0014"" is written 
as 0014 in the xml Ajax Response but should be . '&#0014'
See: http://www.w3.org/TR/REC-xml/#dt-charref. 
",,,,,,,,,,,,,,,,,,,08/May/09 08:36;jensiator;myproject.rar;https://issues.apache.org/jira/secure/attachment/12407606/myproject.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-24 11:24:32.728,,,no_permission,,,,,,,,,,,203162,,,Mon Dec 27 14:35:13 UTC 2010,,,,,,0|i0kdvj:,117065,,,,,,,,08/May/09 08:36;jensiator;A quickstart containing code that dos not work,"24/Oct/09 11:24;martin-g;Wicket encodes all characters above &#160; as per http://www.w3.org/TR/html4/sgml/entities.html (see org.apache.wicket.Component#getDefaultModelObjectAsString(Object))
Why do you need special handling of &#0014; ?","26/Oct/09 06:58;jensiator;Hi Martin
We got a bank system that a lot of 3part system might hook on to. Some 
of the data that is inserted in our system might not inserted from a 
controlled form. Like some kind of automatic import of data. Of course 
we want validation for all the data that will be inserted. But if our 
system fails to accomplish this, it might be a programming error, we 
don't want the ajax to fail. We still want the pages to be viewable. Or 
at least handled. As I remember this problem I think we where not even 
able to handle it as an Exception?
Jens Alenius



",20/Sep/10 21:47;pete;Does this affect 1.4 or 1.5? Wicket 1.3 is not maintained anymore.,"15/Nov/10 07:13;sskjames;Yes, noticed this issue in 1.4.13. The labels with control characters are not displayed at all. No errors thrown as well.",27/Dec/10 14:35;mgrigorov;Fixed with r1053077 in 1.5.,,,,,,,,,,,,,,,,,,
FormTester doesnt support onSelectionChanged  for RadioChoice,WICKET-1721,12399307,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mgrigorov,mk3dk,mk3dk,30/Jun/08 19:01,27/Dec/10 14:04,13/Mar/19 23:15,27/Dec/10 14:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,0,,,,,,,,"It is not possible to test onSelectionChanged for RadioChoice and probably also other form components.

See this thread:
http://www.nabble.com/Problem-test-RadioChoice-td18196023.html#a18196023",Doesn't matter,,,,,,,,,,,,,,WICKET-1732,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-03 03:59:51.417,,,no_permission,,,,,,,,,,,202661,,,Mon Dec 27 14:04:40 UTC 2010,,,,,,0|i0kff3:,117315,,,,,,,,"03/Jul/08 03:59;thrantal;I think that I have sometimes worked around this issues by calling onSelectionChanged() manually in the tests, e.g. something like

{code:java}
formTester.getForm().visitChildren(RadioChoice.class, new IVisitor<RadioChoice>() {
    public Object component(RadioChoice component) {
        component.onSelectionChanged();
        return CONTINUE_TRAVERSAL;
    }
});
{code}

If the workaround works, I'd be hesitant to fix this in 1.3 / 1.4 because it would change the existing behavior and might break existing tests. But this should definitely be addressed in 1.5, so we could set the fix version there. What do you think?",03/Jul/08 05:58;ivaynberg;sounds reasonable to fix in 1.5 so that we do not break existing 1.3/1.4 behavior. +1 for that.,27/Dec/10 14:04;mgrigorov;Improved with r1053071.,,,,,,,,,,,,,,,,,,,,,
FilterForm requires focus-tracker and focus-restore be added as children in the markup,WICKET-2467,12435715,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,slowery23,slowery23,15/Sep/09 14:37,21/Dec/10 20:14,13/Mar/19 23:15,21/Dec/10 20:14,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket-extensions,,,,3,,,,,,,,"When using a FilterForm, the following error is received:

WicketMessage: The component(s) below failed to render. A common problem is that you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered).

1. [MarkupContainer [Component id = focus-tracker]]
2. [MarkupContainer [Component id = focus-restore]]

The tags have to manually be added to the markup to use the Filter Form.  This could be the only way to get this component to work, but this would be the first component I've used thusfar where I was required to create children with specific ids in the markup.

Here is the java code:
	public AbstractFilteredPanel(String id, T filter) {
		super(id);
		this.filter = filter;

		AbstractFilteredPanelDataProvider dataProvider = new AbstractFilteredPanelDataProvider();

		FilterForm form = new FilterForm(""filterForm"", dataProvider);
		add(form);

		AjaxFallbackDefaultDataTable<T> data = new AjaxFallbackDefaultDataTable<T>(""data"", getColumns(), getDataProvider(), getRowsPerPage());
		data.addTopToolbar(new FilterToolbar(data, form, dataProvider));
		form.add(data);
	}

And the markup:
<html xmlns:wicket=""http://wicket.apache.org/"">
<wicket:panel>
	<form wicket:id=""filterForm"">
		<table wicket:id=""data""></table>
	</form>
</wicket:panel>
</html>",,,,,,,,,,,,,,,,,,,16/Nov/10 19:44;adrian@pigsflew.com;WICKET-2467.rar;https://issues.apache.org/jira/secure/attachment/12459723/WICKET-2467.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-05 04:16:25.704,,,no_permission,,,,,,,,,,,203351,,,Tue Nov 16 19:44:29 UTC 2010,,,,,,0|i0kda7:,116969,,,,,,,,05/Feb/10 04:16;ivaynberg;assigning to 1.5. cannot change functionality for existing apps in 1.4,20/Sep/10 21:45;pete;Can you attach a quickstart please?,"16/Nov/10 19:44;adrian@pigsflew.com;Example quickstart showing failure to render without focus-tracker & focus-restore.

I'm aware this has been put off until 1.5, just wanted to ensure everything is here for if/when it is looked at.",,,,,,,,,,,,,,,,,,,,,
Support for opening pages in new tabs/windows breaks RestartResponseAtInterceptPageException support,WICKET-1255,12385454,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tesh11,tesh11,02/Jan/08 19:57,15/Dec/10 09:26,13/Mar/19 23:15,27/Aug/10 06:22,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"This is from an email I sent to the wicket users mailing list to which I received no response:
{quote}
I'm running into a problem with the use of intercept pages together with wicket 1.2.x's support for opening pages in new tabs/windows.  Basically, if someone has a tab open to our site and then opens a link in another tab which causes the user to be redirected to an intercept page, it will redirect one extra time to create a new page map (that redirect happening through javascript).  Unfortunately, this causes wicket to lose track of the original destination of the intercept, thus the intercept no longer works.
{quote}
As the pagemap for the new page is constructed without knowledge of the continuation url, the new pagemap can't continue to the original destination.  That could be fixed when the page map is constructed in WebPage.PageMapChecker, but I can't think of a way to know when to remove that continuation url from the original page map.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-08 21:12:42.05,,,no_permission,,,,,,,,,,,202242,,,Wed Dec 15 09:26:55 UTC 2010,,,,,,0|i0kgn3:,117513,,,,,,,,08/Mar/08 21:12;jcompagner;maybe we could copy the continuation url to the new pagemap but i dont think we can ever know that we can remove it from the old..,27/Aug/10 06:22;ivaynberg;this should work better in 1.5,15/Dec/10 09:14;toverlier;Would it be possible to backport the fix to Wicket 1.4?,"15/Dec/10 09:26;mgrigorov;I'm afraid it is not possible.
In 1.5 the related code was completely re-rewritten. There are no more PageMaps and the logic to support new window/tab is different ...",,,,,,,,,,,,,,,,,,,,
Redirect to home page still does not work (regression),WICKET-2600,12442728,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,erikvanoosten,erikvanoosten,08/Dec/09 14:01,10/Nov/10 10:31,13/Mar/19 23:15,09/Dec/09 17:15,1.3.7,1.4.4,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.5,1.5-M1,,wicket,,,,0,,,,,,,,"It is still not possible to redirect to the home under all circumstances with Tomcat + IE (6, 7 and 8).

WICKET-847 fixed a problem by removing any ""./"" at the start of the redirect URL.
WICKET-1916 undid this for redirect URLs that are exactly equal to ""./"".

The latter fix is not correct, IE can not redirect to ""./"".
The correct addition to WICKET-847 would be to redirect to ""."". See patch.",,,,,,,,,,,,,,,WICKET-2732,,,,08/Dec/09 14:03;erikvanoosten;WICKET-2600.patch;https://issues.apache.org/jira/secure/attachment/12427338/WICKET-2600.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-09 05:05:57.679,,,no_permission,,,,,,,,,,,203473,,,Wed Nov 10 10:31:07 UTC 2010,,,,,,0|i0kcyf:,116916,,,,,,,,"08/Dec/09 14:03;erikvanoosten;Patch can be applied in:
- trunk
- branch 1.4.x
- branch 1.3.x
",09/Dec/09 05:05;ivaynberg;have you tested that this works with firefox and chrome?,"09/Dec/09 08:58;erikvanoosten;Yes, I tested this with Firefox 3.5 (Ubuntu), Chrome 3.0 (Windows), and IE 5.5, 6, 7 and 8.

BTW, it is within reason that any other browser that understands ""./"" will also understand ""."". Under this assumption the patch can make the situation only better, not worse.","10/Nov/10 10:31;koivunej;For some odd reason were started just now hitting this bug (or alike one) using wicket-1.4.13 with IE 8 version 8.0.6001.18702 (latest available for XP at the moment). I ""fixed it"" by mounting homepage to /home.

IE8 got a 302 (by our code throwing a RestartResponseAtInterceptPageException(getApplication().getHomePage())) to ""Location: http://server/.""; it was parsed as ""http://server"" in the location bar, but the request made was ""GET http://server/."" which 404's.

FF 3.6 does not have this problem.

",,,,,,,,,,,,,,,,,,,,
Component.urlFor( ILinkListener.INTERFACE ) + various url coding strategies produce errorneus behavior,WICKET-2557,12439605,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lgawron,lgawron,31/Oct/09 17:05,17/Sep/10 14:49,13/Mar/19 23:15,13/Aug/10 23:47,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,,,,,1,,,,,,,,"I've been trying to implement a DataTable containing clickable rows. I ended up with ClickableItem:

public class ClickableItem<T> extends OddEvenItem<T> implements ILinkListener {
	private ClickHandler<T>	handler;

	public ClickableItem( String id, int index, IModel<T> model, final ClickHandler<T> handler ) {
		super( id, index, model );
		this.handler = handler;
		add( new AttributeAppender( ""class"", true, Model.of( ""sq-clickable"" ), "" "" ) );
		add( new AttributeModifier( ""onclick"", true, new AbstractReadOnlyModel<String>() {
			@Override
			public String getObject() {
				return String.format(	""window.location.href='%1$s';return false"",
										ClickableItem.this.urlFor( ILinkListener.INTERFACE ) );
			}
		} ) );
	}

	@Override
	public void onLinkClicked() {
		handler.onClick( this );
	}
}

Turns out everything works fine as long as you use QueryStringUrlCodingStrategy, switching to other strategies, e.g. HybridUrlCodingStrategy causes the functionality to break.

Please find attached the test project that contains the description on how to reproduce the problem.",,,,,,,,,,,,,,,,,,,31/Oct/09 17:08;lgawron;datatabletest1.zip;https://issues.apache.org/jira/secure/attachment/12423762/datatabletest1.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-08 01:59:38.329,,,no_permission,,,,,,,,,,,203434,,,Fri Aug 13 23:47:11 UTC 2010,,,,,,0|i0kd27:,116933,,,,,,,,"08/Dec/09 01:59;liamclarke;We suspect we have been having similar problems with Wicket 1.4.3, but as yet are unable to verify.",13/Aug/10 23:47;ivaynberg;should be fixed in 1.5 as it has cleaned up url generation,,,,,,,,,,,,,,,,,,,,,,
Make Component. 'protected List<IBehavior> getBehaviors(Class<? extends IBehavior>' public,WICKET-2115,12415199,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,20/Feb/09 06:39,17/Sep/10 14:49,13/Mar/19 23:15,14/Aug/10 06:56,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,1,,,,,,,,"actually making getbehaviors(class) public will also break code
because any override already in place will then attempt to reduce the
visibility of the method.

add a jira issue, most likely for 1.5 considering 1.4 is already in RC2.

-igor

On Thu, Feb 19, 2009 at 1:24 PM, Martin Funk <mafulafunk@googlemail.com> wrote:
Hi,

why is Components

      public final List<IBehavior> getBehaviors()
public

and why is

      protected List<IBehavior> getBehaviors(Class<? extends IBehavior>
type)
protected?

For example for a Behavior I'd like it to be able to tell if an Behavior of
its type is already bound to that component.

In its bind() method I'd like to do something like:
              if (component.getBehaviors(SomeBehavior.class).size() > 1) {
                      throw new Error(""Ther may only be one"");
              }

But I have to do something like:
              for (IBehavior behavior : component.getBehaviors()) {
                      if (behavior instanceof SomeBehavior) {
                              throw new Error(""There may only be one"");
                      }
              }

So my whish would be to have em both public. I wouldn't mind seeing em both
final, but that might break existing code.

mf


",,,,,,,,,,,,,,,,,,,10/Jun/09 13:47;astubbs;BehaviorsUtil.java;https://issues.apache.org/jira/secure/attachment/12410316/BehaviorsUtil.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-10 13:23:37.816,,,no_permission,,,,,,,,,,,203027,,,Sat Aug 14 08:13:28 UTC 2010,,,,,,0|i0ke9r:,117129,,,,,,,,"10/Jun/09 13:23;astubbs;+1 
http://www.nabble.com/Component.getBehaviors-td22110008.html#a23962256

I'd actually forgotten that in my portal-2.0 patch i already changed it to public, and was wondering why i was getting strange errors now :) 

I'm surprised this wasn't public from the get go - it's very useful. I'll just have to create a little utility function :) ",10/Jun/09 13:47;astubbs;Gotta love open source - yoinked nearly straight out of Component.java,"14/Aug/10 08:13;hudson;Integrated in Apache Wicket 1.5.x #232 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/232/])
    ",,,,,,,,,,,,,,,,,,,,,
ModalWindow size may exceed browser viewport making it impossible to close,WICKET-2254,12424508,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,percederberg,percederberg,04/May/09 09:21,17/Sep/10 14:49,13/Mar/19 23:15,25/Aug/10 23:37,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-extensions,,,,0,,,,,,,,"If a modal window is created with a size that is larger than what is available in the browser viewport, the user will be unable to close the window. The close button is displayed over the top of the window, making it impossible to reach.

The problem lies in the center() function inside modal.js and is easy enough to fix:

+    // BUGFIX: Adjust the width and height to maximum values
+    if (modalWidth > width - 10) {
+       this.window.style.width = (width - 10) + ""px"";
+        modalWidth = this.window.offsetWidth;
+    }
+    if (modalHeight > height - 40) {
+       this.content.style.height = (height - 40) + ""px"";
+        modalHeight = this.window.offsetHeight;
+    }
      var left = (width / 2) - (modalWidth / 2) + scLeft;
      var top = (height / 2) - (modalHeight / 2) + scTop;
+    // BUGFIX: Ensure positive position values
+    this.window.style.left = Math.max(left, 0) + ""px"";
+    this.window.style.top = Math.max(top, 0) + ""px"";

Note that the above code also ensures that the window position is positive at all times.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-27 00:19:08.652,,,no_permission,,,,,,,,,,,203153,,,Fri Aug 27 00:19:08 UTC 2010,,,,,,0|i0kdwf:,117069,,,,,,,,"27/Aug/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #269 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/269/])
    ",,,,,,,,,,,,,,,,,,,,,,,
Enter key submits form in AjaxEditableMultiLineLabel on Safari,WICKET-1928,12408262,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,joakim.ortbrant,joakim.ortbrant,11/Nov/08 17:12,17/Sep/10 14:49,13/Mar/19 23:15,27/Aug/10 05:39,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,1,,,,,,,,Pressing the Enter key when editing a AjaxEditableMultiLineLabel submits the form on Safari instead of inserting a new line,Mac OSX,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-26 09:48:37.204,,,no_permission,,,,,,,,,,,202851,,,Sat Aug 28 18:27:43 UTC 2010,,,,,,0|i0kevj:,117227,,,,,,,,"11/Nov/08 17:18;joakim.ortbrant;Replicating the Safari behaviour from AjaxEditableLabel solved this for me:

replace

				tag.put(""onkeypress"", keypress);

with

                tag.put(""onkeypress"", ""if (Wicket.Browser.isSafari()) { return; }; "" + keypress);
                tag.put(""onkeydown"", ""if (!Wicket.Browser.isSafari()) { return; }; "" + keypress);

in the onComponentTag implementation when adding the EditorAjaxBehavior.","26/Mar/10 09:48;lunikon;Same thing happens in Chrome, also on OS X. This issue breaks browser-compatibility with WebKit-based browsers so a fast fix would be highly appreciated.",27/Aug/10 05:39;ivaynberg;sorry this got lost in the shuffle,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,
rc1 generics - LabelTree,WICKET-1947,12408977,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aditsu,aditsu,21/Nov/08 05:34,17/Sep/10 14:49,13/Mar/19 23:15,27/Aug/10 05:37,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,0,,,,,,,,"LabelTree.getNodeTextModel requires IModel<Object> and returns IModel<Object>. I was overriding it and returning a Model<String>, but I can't do that anymore. Why not just return IModel<?> ?",,,,,,,,,,,,,,,WICKET-1949,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202869,,,2008-11-21 05:34:52.0,,,,,,0|i0ketr:,117219,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTree breaks on multiple tree model events in the same request,WICKET-1985,12410897,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lankvelt,lankvelt,17/Dec/08 15:55,17/Sep/10 14:48,13/Mar/19 23:15,25/Aug/10 22:52,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,0,,,,,,,,"When multiple events are fired by the treemodel, e.g. an expandNode and selectNode, unreachable treeitems end up times in the dirtyitems list.
Their children will be added to the treeitemcontainer in ontargetrespond, leading to the situation where it has children that are not rendered.
(in development, an ""unrendered component"" exception is thrown)
",,,,,,,,,,,,,,,,,,,17/Dec/08 16:01;lankvelt;patch;https://issues.apache.org/jira/secure/attachment/12396316/patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-27 00:19:08.241,,,no_permission,,,,,,,,,,,202904,,,Fri Aug 27 00:19:08 UTC 2010,,,,,,0|i0keqf:,117204,,,,,,,,17/Dec/08 16:01;lankvelt;Straightforward fix: replace Lists by Sets for dirtyItems.,"27/Aug/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #269 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/269/])
    ",,,,,,,,,,,,,,,,,,,,,,
ModalWindow iframe CSS to wide,WICKET-2324,12427735,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aslak,aslak,12/Jun/09 11:48,17/Sep/10 14:48,13/Mar/19 23:15,25/Aug/10 00:01,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket-extensions,,,,1,,,,,,,,"The Modal.css has a rule for iframe that is to wide for its purpose.

Using DatePicker inside a ModalWindow under IE 6 triggers a iframe workaround done by Yui-Calendar.

http://developer.yahoo.com/yui/calendar/
iframe -> Places an iframe shim underneath the Calendar to prevent select elements from bleeding through

The css rule ""div.wicket-modal iframe"" starts controlling the hight and positioning of the yui iframe and things start to look a bit funky..
(and not the good kind..)


Adding a modal css class to the rule and iframe generated by the ModalWindow component will do the trix.
",IE 6,,,,,,,,,,,,,,,,,,12/Jun/09 11:53;aslak;WICKET-2324.patch;https://issues.apache.org/jira/secure/attachment/12410481/WICKET-2324.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-21 16:34:33.91,,,no_permission,,,,,,,,,,,203217,,,Wed Aug 25 01:10:05 UTC 2010,,,,,,0|i0kdp3:,117036,,,,,,,,12/Jun/09 11:53;aslak;proposed solution,21/Jun/09 16:34;jdonnerstag;Looking at current trunk it looks like the patch has already been applied (though slightly different),"22/Jun/09 07:09;aslak;Whitch change are you referring to?

The patch is based on trunk(r. 784073), I cant see there are any changes after that.

The point of the patch is to limit the effect of the modal specific iframe css by only applying it to the modal windows iframe. This is done using a class attribute on the iframe.","25/Aug/10 00:01;ivaynberg;applied to 1.5 only, cannot change existing behavior in 1.4.x","25/Aug/10 01:10;hudson;Integrated in Apache Wicket 1.5.x #262 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/262/])
    ",,,,,,,,,,,,,,,,,,,
rc1 generics - BaseTree,WICKET-1949,12408979,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aditsu,aditsu,21/Nov/08 05:39,17/Sep/10 14:48,13/Mar/19 23:15,27/Aug/10 05:33,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,0,,,,,,,,"The second BaseTree constructor requires IModel<TreeModel>; I was using a Model with a DefaultTreeModel object, but I can't do that anymore (TreeModel is not necessarily Serializable). Why not just require IModel<? extends TreeModel> ?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202871,,,Fri Nov 21 05:40:30 UTC 2008,,,,,,0|i0ketb:,117217,,,,,,,,21/Nov/08 05:40;aditsu;There might be more similar issues but that is what I found so far,,,,,,,,,,,,,,,,,,,,,,,
AJAX indicator turns off when calls overlap,WICKET-2401,12431584,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jdpatterson,jdpatterson,28/Jul/09 11:39,17/Sep/10 14:48,13/Mar/19 23:15,27/Aug/10 04:49,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,0,,,,,,,,"As discussed here http://www.nabble.com/Ajax-indicator-turning-off-td24655744.html

Overlapping AJAX calls result in the indicator being turned off when the first call returns.  This patch keeps a count property directly on the HTMLElement so when the element goes out of scope the count does not need to be removed.  Each AJAX call increments the counter and each return decrements the counter.

Index: src/main/java/org/apache/wicket/ajax/wicket-ajax.js
===================================================================
--- src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(revision 797714)
+++ src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(working copy)
@@ -2214,3 +2214,31 @@
 	    e.style.display = ""none"";
 	}
 }
+
+function wicketIncrementDisplay(id) {
+    var e=wicketGet(id);
+    if (typeof(e.wicketDisplayCount) ==""undefined"") {
+    	e.wicketDisplayCount = 1;
+    } else {
+    	e.wicketDisplayCount++;
+    }
+    
+	if (e.wicketDisplayCount > 0) {
+	    e.style.display = """";
+	}
+}
+
+function wicketDecrementDisplay(id) {
+    var e=wicketGet(id);
+    if (typeof(e.wicketDisplayCount) ==""undefined"") {
+    	e.wicketDisplayCount = 0;
+    } else {
+    	e.wicketDisplayCount--;
+    }
+    
+	if (e.wicketDisplayCount <= 0) {
+	    e.style.display = ""none"";
+	}
+}
+
+
Index: src/main/java/org/apache/wicket/ajax/AbstractDefaultAjaxBehavior.java
===================================================================
--- src/main/java/org/apache/wicket/ajax/AbstractDefaultAjaxBehavior.java	(revision 797714)
+++ src/main/java/org/apache/wicket/ajax/AbstractDefaultAjaxBehavior.java	(working copy)
@@ -183,7 +183,7 @@
 
 		if (!Strings.isEmpty(indicatorId))
 		{
-			String hide = "";wicketHide('"" + indicatorId + ""');"";
+			String hide = "";wicketDecrementDisplay('"" + indicatorId + ""');"";
 			success = success + hide;
 			failure = failure + hide;
 		}
@@ -240,7 +240,7 @@
 
 		if (!Strings.isEmpty(indicatorId))
 		{
-			call = new AppendingStringBuffer(""wicketShow('"").append(indicatorId)
+			call = new AppendingStringBuffer(""wicketIncrementDisplay('"").append(indicatorId)
 				.append(""');"")
 				.append(call);
 		}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-28 14:58:48.603,,,no_permission,,,,,,,,,,,203288,,,Sat Aug 28 18:27:39 UTC 2010,,,,,,0|i0kdgn:,116998,,,,,,,,"28/Jul/09 14:58;ivaynberg;this is good for a global indicator, but what if i have indicators for individual links/buttons?

then if i press two links their indicators will keep spinning untill the latest one finishes - which is undesirable.","28/Jul/09 14:59;ivaynberg;best thing might be to use wicketIndicatorHide and wicketIndicatorShow from the behavior instead of wicketHide and wichetShow, which will allow users to override it however they want.","29/Jul/09 00:28;jdpatterson;The patch keeps an individual count per indicator - directly on the HTMLElement itself.

I imagine if the default behaviour just works, users would not have much need to override the method no?","28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,
"Wrong message / parse error: ""Expected close tag for <span wicket:id=""column0"">""",WICKET-1185,12383158,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,shake,shake,24/Nov/07 17:40,17/Sep/10 14:48,13/Mar/19 23:15,27/Aug/10 13:44,1.3.0-rc1,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,1,,,,,,,,"I get the message ""Expected close tag for <span wicket:id=""column0"">"". But the span is closed. So there exists an parse error or the error message is misleading.

I am not a Wicket expert, so I think I have an error within my code and the error message is not good enough (for me).",Linux,,,,,,,,,,,,,,,,,,24/Nov/07 17:41;shake;bug-search.zip;https://issues.apache.org/jira/secure/attachment/12370144/bug-search.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-26 20:40:52.138,,,no_permission,,,,,,,,,,,202181,,,Fri Aug 27 13:46:21 UTC 2010,,,,,,0|i0kgt3:,117540,,,,,,,,24/Nov/07 17:41;shake;This is a (not minimal but very small) project with a unit test that fails.,"26/Nov/07 20:40;jdonnerstag;I agree the error message could be better. The mistake is that in OtherBorder the body tag is inside another container. Wicket does not know that right now (next release) but you can tell it via container.add(getBodyContainer()))

public class OtherBorder extends Border
{
	public OtherBorder(String id)
	{
		super(id);
		add(new WebMarkupContainer(""borderThing"")
		{
			protected void onComponentTag(ComponentTag tag)
			{
				tag.put(""attributeName"", ""attributeValue"");
				super.onComponentTag(tag);
			}
>>>>>		}.add(getBodyContainer()));  <<<<<

	}
}
","28/Nov/07 10:35;shake;Thanks for your fix. This helps me. 
But I am sure my code worked with one of the beta releases of 1.3.",11/Dec/07 05:31;ivaynberg;what are we doing with this?,02/Apr/08 10:15;jdonnerstag;requires that know the markup in the constructure. ,06/Jul/08 13:05;dashorst;Moved to next milestone release.,"23/Jul/08 09:57;erikvanoosten;This error is also given when you did not attach any child components.

For example, I got a ""Expected close tag for <form wicket:id=""form"">"" when I did not add any form components (the form was invisible, so I thought that would be alright). The xtml was valid xml.
",04/Apr/09 10:57;jdonnerstag;Move to 1.5,"25/Aug/10 16:12;ivaynberg;Juergen, have you had a chance to look at this in 1.5?","27/Aug/10 13:44;jdonnerstag;This is no problem more anymore.  In 1.5 the border body MUST be added at the right place within the hierarchy. And because the default case is to add to child to the border body, add() has been subclassed to call addToBorderBody().

The main point here is, that border no longer applies any magic to the component hierarchy vs. markup hierarchy anymore. And because of that, this error and the one mentioned by Eric no longer occurs.

But it's still the users responsibility to add the child to the right place (border or border body). While thinking about it ... since the markup is now available in the constructor, one could read the markup and automatically determine where to add the child too.",27/Aug/10 13:46;jdonnerstag;forgot to mention: the provide test case works in 1.5 without any change.,,,,,,,,,,,,,
DataTable defines newCellItem to take IModel<T> but should really do IModel<IColumn<T>>,WICKET-2676,12445499,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,robertda,robertda,14/Jan/10 11:52,17/Sep/10 14:48,13/Mar/19 23:15,27/Aug/10 05:16,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket-extensions,,,,0,,,,,,,,"The generics support in DataTable seems to not work entirely correctly:
In the below the override for newCellItem actually gets a Model<IColumn> model, not a Model<T>, so perhaps it should be changed.

do new AjaxFallbackDefaultDataTable<SomeClass>() {
   @Override
   protected Item<SomeClass> newRowItem(String id, int index, IModel<SomeClass> model) {}

  @Override
  protected Item<SomeClass> newCellItem(String id, int index, IModel<SomeClass> model) {
     // Model here is not Model<SomeClass> but Model<IColumn<SomeClass>>
  }
}",,,,,,,,,,,,,,,,,,,20/Jan/10 11:57;robertda;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12430873/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-19 00:44:40.869,,,no_permission,,,,,,,,,,,203541,,,Fri Aug 27 05:16:31 UTC 2010,,,,,,0|i0kcqv:,116882,,,,,,,,19/Jan/10 00:44;ivaynberg;dont see how that is possible. please provide a quickstart that reproduces this behavior. i will close this issue until then.,"20/Jan/10 11:59;robertda;Added attachment that fails with a cast exception when run.

Either it is an indication of the issue, or I've misunderstood how to work with generics & datatable.

Br
Robert","27/Aug/10 05:16;ivaynberg;yep, you were right. looks like generics inside datatable are not yet finished and it let this type error slip through. cant change method sig in 1.4.x even though its wrong, fixing in 1.5",,,,,,,,,,,,,,,,,,,,,
Throttling breaks AjaxFormSubmitBehavior's precondition check,WICKET-2739,12456075,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rmorrisey,rmorrisey,11/Feb/10 22:39,17/Sep/10 14:48,13/Mar/19 23:15,31/Aug/10 06:49,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,1,AbstractDefaultAjaxBehavior,ajax,AjaxCallThrottlingDecorator,AjaxFormSubmitBehavior,throttle,throttleScript,wicket,"AjaxFormSubmitBehavior#getPreconditionScript() looks like:
return ""return Wicket.$$(this)&&Wicket.$$('"" + getForm().getMarkupId() + ""')"";

The javascript keyword 'this' should point to the DOM element which initiated the ajax event. (It wants to check that the component still exists on the page, before initiating the ajax request, as well as the form this behavior is linked to). When using an AjaxThrottlingCallDecorator to throttle the ajax request, the throttle callback function is not bound to the DOM element. The result is that 'this' refers to the window element, in the context of the throttle callback. The precondition function gets bind(this) called on it, but it's the wrong 'this'. I think that the throttle callback should be bound to 'this' at the time the callback is defined.

AbstractDefaultAjaxBehavior#throttleScript(...) should be changed from:

return new AppendingStringBuffer(""wicketThrottler.throttle( '"").append(throttleId)
			.append(""', "")
			.append(throttleDelay.getMilliseconds())
			.append("", function() { "")
			.append(script)
			.append(""});"");
to:
return new AppendingStringBuffer(""wicketThrottler.throttle( '"").append(throttleId)
			.append(""', "")
			.append(throttleDelay.getMilliseconds())
			.append("", function() { "")
			.append(script)
			.append(""}.bind(this));"");
","wicket 1.4.5, wicket quickstart, windows XP; FireFox 3.5.7 used in quickstart test",,,,,,,,,,,,,,,,,,11/Feb/10 22:40;rmorrisey;throttleBreaksPrecondition.zip;https://issues.apache.org/jira/secure/attachment/12435621/throttleBreaksPrecondition.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-15 07:12:49.337,,,no_permission,,,,,,,,,,,203600,,,Tue Aug 31 07:12:24 UTC 2010,,,,,,0|i0kcmv:,116864,,,,,,,,11/Feb/10 22:40;rmorrisey;Attached a quickstart to demonstrate a symptom of the problem in FireFox,"15/Aug/10 07:12;mbrinkman;Interestingly, I'm seeing this issue manifest as a precondition failure running Wicket 1.4.9 on IE8, but not on FF3.6.8 (opposite browser compatibility issue).  In the IE JS debugger I tracked it back to the same basic root cause where the element passed in to 'Wicket.&&' is clearly not the form component the behavior was added to.

The only thing I'll add to Russell's description of the issue and suggested fix is that I was able to work around this by altering the precondition script to be entirely name based, instead of using a reference to a DOM element:

			AjaxFormValidatingBehavior behavior = new AjaxFormValidatingBehavior(myForm, ""onblur"") {
				protected CharSequence getPreconditionScript()
				{
					return ""return Wicket.$$('"" + ((FormComponent<?>)getComponent()).getInputName() + ""')&&Wicket.$$('"" + getForm().getMarkupId() + ""')"";
				}
			};

I'm still pretty new to Wicket though, so I'm not sure if the form validating behavior is intended to be added to anything other than a FormComponent.  If it is, then obviously this wouldn't be a very desirable fix.","31/Aug/10 07:11;hudson;Integrated in Apache Wicket 1.4.x #136 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/136/])
    Issue: WICKET-2739
","31/Aug/10 07:12;hudson;Integrated in Apache Wicket 1.5.x #280 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/280/])
    Issue: WICKET-2739
",,,,,,,,,,,,,,,,,,,,
Wizard executes onSubmit() of wrong nested form,WICKET-2150,12416371,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dave_schoorl,dave_schoorl,07/Mar/09 17:21,17/Sep/10 14:48,13/Mar/19 23:15,26/Aug/10 00:00,1.3.5,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket-extensions,,,,0,,,,,,,,"When you have a wizard and the steps in the wizard contain nested forms, the onSubmit() of the next - instead of the current - step's nested form is executed. This is caused by the fact that during the advancing of step A to step B, first the view of A is replaced with the view of B on the wizard's form, and after that, the form's (and nested form's) onSubmit() is called, incorrectly calling the onSubmit() of view B.

The swapping of the view should happen after the wizard's form (and nested forms) onSubmit() has been called.",,,,,,,,,,,,,,,,,,,07/Mar/09 17:28;dave_schoorl;wizard-onsubmit.zip;https://issues.apache.org/jira/secure/attachment/12401686/wizard-onsubmit.zip,08/Mar/09 20:28;dave_schoorl;wizard-patch-1.3.x.txt;https://issues.apache.org/jira/secure/attachment/12401716/wizard-patch-1.3.x.txt,08/Mar/09 21:37;dave_schoorl;wizard-patch-1.4.x.txt;https://issues.apache.org/jira/secure/attachment/12401718/wizard-patch-1.4.x.txt,25/Mar/09 09:19;dave_schoorl;wizard-patch-revised-1.3.x.txt;https://issues.apache.org/jira/secure/attachment/12403591/wizard-patch-revised-1.3.x.txt,25/Mar/09 13:35;dave_schoorl;wizard-patch-revised-1.4.x.txt;https://issues.apache.org/jira/secure/attachment/12403610/wizard-patch-revised-1.4.x.txt,,,,5.0,,,,,,,,,,,,,,,,,,,2009-03-24 23:52:03.942,,,no_permission,,,,,,,,,,,203058,,,Tue Jun 16 23:59:48 UTC 2009,,,,,,0|i0ke73:,117117,,,,,,,,"07/Mar/09 17:28;dave_schoorl;The quickstart project in the attachement 'wizard-onsubmit.zip' demonstrates the problem. 

Run it and click through the wizard. The log will show entries of views being displayed and nested form's onSubmit() being called. 

When you are on step A, advance to step B. The logfile will first show that Panel B is displayed and then that the onSubmit() of nested form B is called. This is wrong. The onSubmit() of nested form A should have been called.

","07/Mar/09 17:48;dave_schoorl;A possible solution is to make the flow of onSubmit configurable: do you want the onSubmit of IFormSubmittingComponent be triggered before or after the Form's onSubmit(). This would retain backwards compatibility when the default is set to 'before'. The form of the wizard can then be configured to execute the IFormSubmittingComponent's onSubmit() after the form's onSubmit().

A nicer solution would be to replace the onSubmit() of IFormSubmittingComponent into beforeFormOnSubmit() and afterFormOnSubmit(), but of course, this would break backwards compatibility and is not advisable for 1.3.x release. For 1.4 release this could be an option.","08/Mar/09 20:28;dave_schoorl;For 1.3.x branch a patch is attached. 

The patch adds an afterFormOnSubmit() to the IFormSubmittingComponent which is executed at the end of Form#delegateSubmit(IFormSubmittingComponent submittingComponent).

The processing of the WizardButton has been moved from onSubmit() to afterFormOnSubmit().
","08/Mar/09 21:37;dave_schoorl;For 1.4.x branch a patch is attached.

This is basically the same patch as for 1.3.x, only the onSubmit() of IFormSubmittingComponent has been renamed to beforeFormOnSubmit(). THIS BREAKS BACKWARDS COMPATIBILITY.

If this patch is applied, a note must also be included in the 1.4 migration guide.
","24/Mar/09 23:52;jcompagner;i looked at the code but you can already do this

Just override the:

protected void delegateSubmit(IFormSubmittingComponent submittingComponent)

and do your own order of onSubmit calling

","25/Mar/09 00:15;jthomerson;Johan,
  I haven't looked at this particular report in depth, but are you sure that it's not similar or related to this one:
https://issues.apache.org/jira/browse/WICKET-2063","25/Mar/09 08:40;dave_schoorl;@Jeremy: It is not similar to WICKET-2063 and I think it is also not related, because caching is not an issue with WICKET-2150.

@Johan: This was my first approach, but when I override delegateSubmit(IFormSubmittingComponent submittingComponent), my overriden method cannot call Form.onSubmit() because it is not visible. Form.onSubmit() must be changed to public for this to work. Is it okay to change the visibility to public?","25/Mar/09 08:52;jcompagner;you should be able to call Form,onSubmit() just fine
its a protected method of Form (so callable from a subclass) and you create a subclass by extending the form to override delegateSubmit()
so this compiles fine at myplace:

		/**
		 * @see org.apache.wicket.markup.html.form.Form#delegateSubmit(org.apache.wicket.markup.html.form.IFormSubmittingComponent)
		 */
		@Override
		protected void delegateSubmit(IFormSubmittingComponent submittingComponent)
		{
			onSubmit();
		}


and i you want to call another forms onSubmit() there then just override that form also and make the onSubmit public (and cast to that form)","25/Mar/09 09:19;dave_schoorl;Yes, but I need to override the Wizard's newForm methods like this:

	/**
	 * Create a new form. Clients can override this method to provide a custom {@link Form}.
	 * 
	 * @param id
	 *            The id to be used to construct the component
	 * @return a new form
	 */
	protected Form newForm(String id)
	{
		return new Form(id)
		{
			private static final long serialVersionUID = 1L;

			protected void delegateSubmit(IFormSubmittingComponent submittingComponent)
			{
				/*
				 * In the standard submit flow, the onSubmit of the Form is called after the
				 * onSubmit of the submittingComponent. For the Wizard, this must be reversed.
				 */

				Form formToProcess = this;
				if (submittingComponent != null)
				{
					// use the form which the submittingComponent has submitted for further
					// processing
					formToProcess = submittingComponent.getForm();
				}

				// call onSubmit on the submitted form
				formToProcess.onSubmit();

				// call onSubmit on nested forms
				formToProcess.visitChildren(Form.class, new IVisitor()
				{
					public Object component(Component component)
					{
						Form form = (Form)component;
						if (form.isEnabled() && form.isEnableAllowed() &&
							form.isVisibleInHierarchy())
						{
							form.onSubmit();
							return IVisitor.CONTINUE_TRAVERSAL;
						}
						return IVisitor.CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER;
					}
				});

				// reverse standard flow: execute the submittingComponent#onSubmit
				// after the Form#onSubmit()
				submittingComponent.onSubmit();
			}
		};
	}


In order for this to work, I need Form.onSubmit() to be public. If this is not adjusted in the Wizard, than the Wizard is not working properly. See my attached patch 'wizard-patch-revised-1.3.x.txt' with the necessary changes (haven't run it in my application yet).","25/Mar/09 09:33;jcompagner;Ok i didnt know the wizard from top of my head but i looked at it and yes it is what i told yesterday.
If you use buttons you shouldnt use the Form.onsubmit() because mixing those is a bit weird. You can do that ofcourse if you really want, but better is if you use buttons use buttons all the way.

And the wizard is build like that. Because i dont know what you exactly want to do in Form.onSubmit()

But it sounds to me that you should do what you do there in IWizardStep.applyState() thats the method that should do it stuff before the next button will set the next page.

just look at the code:

public final void onClick()
	{
		IWizardModel wizardModel = getWizardModel();
		IWizardStep step = wizardModel.getActiveStep();

		// let the step apply any state
		step.applyState();

		// if the step completed after applying the state, move the
		// model onward
		if (step.isComplete())
		{
			wizardModel.next();

thats the onclick of the next button. So first it calls applyState() where you can do your stuff that you would do in onSubmit()
Then you also can stop it from going to the next (validation failure)

But that said, i am not really against making onSubmit public, buttons also have a public onsubmit so to have that is fine by me.
But we cant change that for 1.3

","25/Mar/09 10:00;dave_schoorl;That would be great when Form#onSubmit is public in 1.4. I will have to speedup the switch to 1.4 then.

applyState is of no use to me in this case. It is Wizard specific and I want to reuse panels with nested forms with form#onSubmit implementations that I already use on normal pages. These panels are unaware if they are on a normal page or in a Wizard. So it is about facilitating component reuse I guess.

I will supply a 1.4 patch later today.
Thanks.","25/Mar/09 10:08;jcompagner;cant you abstract it a bit then?
Because  panels dont reallyhave to know about wizards
But the wizards know about the panels so wizard.applyState() calls panel.mySpecialSubmit()
and in your nested forms that you have in your panels (i guess thats the whole point here) have a just a configuration that they know that they dont have to do onsubmit?

But you can also fix it the other way
You have control over all the forms because the wizard form and the nested forms are all your code
Just let them all extend a base PublicSumbitForm that extends the normal form
that has a public submit method.

then in your 
protected void delegateSubmit(IFormSubmittingComponent submittingComponent) 

just cast to that PublicSubmitForm and call the onSubmit()
And if you cant cast throw an exception..

Then it also works just fine in 1.3","25/Mar/09 13:35;dave_schoorl;Johan, please find attached my patch 'wizard-patch-revised-1.4.x.txt' for 1.4. Form#onSubmit is public there and the Wizard#newForm method is adapted. The form-implementation returned provides a custom onSubmit flow. Making Form#onSubmit public causes all overridden implementations of this method in test cases to be changed to public as well.

Thanks for your cooperative thinking. Reality is always more complex. The app I am building is highly pluggable and third parties must be able to supply their own plug-ins. When a page is created, plug-ins can contribute to the page, this also goes for the views in my Wizards. So basically, I have no control over all forms that will be placed on the wizard's view. Moreover, every customer that uses the system can configure the plug-ins that he wants to be activated in his environment. The app itself is capable of running all these different customer environments.

But for this moment I will use a custom 1.3-SNAPSHOT of wicket that i have build locally where the submitted patch is applied. This is a temporary situation, until I have migrated to Wicket 1.4.

Many thanks again.
","25/Mar/09 17:20;ivaynberg;sigh, ive always campaigned that the call order is just wrong. it should be form.onsubmit() followed by button.onsubmit(). we put more specific processing into the button so it should be called last. oh well, maybe i will start another flamewar on the list when its time for 1.5","25/Mar/09 18:14;jcompagner;i am fine with that also

And i dont think but i could be wrong that there are not many people who are mixing the 2 submits anyway.

But what is then the best order?

form.submit()
nestedforms.submit()
button.submit()

?","25/Mar/09 18:36;ivaynberg;yes, we should be going from most general to most specific - which is the order you proposed.","16/Jun/09 23:59;ivaynberg;we cannot apply this fix because it will change existing behavior.

i also thought about moving the code out of button's onsubmit and into the wizard form's onsubmit(), but the form is also produced by an overridable factory so unless users call super.onsubmit() - and most do not  - it will change behavior.

we will have to wait for 1.5 to properly fix it, and hopefully finally make the switch so that form's onsubmit is called before button's onsubmit everywhere!",,,,,,,
Values over-escaped by FormTester,WICKET-1094,12380892,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,david.shepherdson,david.shepherdson,22/Oct/07 10:31,17/Sep/10 14:47,13/Mar/19 23:15,28/Aug/10 00:00,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,,,,,0,,,,,,,,"FormTester's constructor contains code that visits all components on the form and calls setFormComponentValue(formComponent, formComponent.getValue()) (or variations thereof), to store the component's value in the servlet request parameters. However, by default, FormComponent's getValue() method uses Strings.escapeMarkup(...) to encode any special characters, such as angle brackets. This is fine in a 'real' environment, where a Web browser will be responsible for displaying the escaped characters with their proper values, and so the proper value will be the one that comes through when the form is submitted; however, in the Wicket test environment, there isn't anything to do that extra level of 'un-escaping', meaning there's a danger of the form components being given escaped values when the form is submitted.

For example, we have a form that contains a text area, whose value contains a URI enclosed in angle brackets, like so:

    < http://test.com/ >

When we submit the form with a Web browser, the value set on the model is exactly that string -- '< http://test.com/ >'. However, when we test our page with FormTester, the FormTester constructor calls getValue() on the component, which by default returns the escaped form:

    &lt; http://test.com/ &gt;

When the form is submitted, this is the value set on the model, and so comparisons to the original string fail.

(Extra spaces inserted into the strings above to make them display properly in JIRA.)

However, if FormTester were to call setEscapeModelStrings(false) on the form component before calling getValue() (and then restore the original escaping setting afterwards), then the value that ends up being provided to the component at the end would be the correct (unescaped) value, matching the behaviour when using the page in a browser.

We have worked around this issue by overriding FormTester with a class that performs a second traversal of the form component hierarchy after calling the FormTester constructor, replacing the incorrectly escaped values with the proper ones (changes marked with '// O-P'):

    public OurFormTester(String path, Form workingForm, BaseWicketTester wicketTester, boolean fillBlankString) {
        super(path, workingForm, wicketTester, fillBlankString);

        fixFormParameterValues(workingForm, fillBlankString);
    }
    
    protected void fixFormParameterValues(Form workingForm, final boolean fillBlankString) {
        workingForm.visitFormComponents(new FormComponent.AbstractVisitor()
        {
            public void onFormComponent(final FormComponent formComponent)
            {
                // do nothing for invisible component
                if (!formComponent.isVisibleInHierarchy())
                {
                    return;
                }

                // O-P Preserve old escaping value, then turn escaping off
                // so that values aren't escaped unnecessarily.
                boolean oldEscaping = formComponent.getEscapeModelStrings();
                formComponent.setEscapeModelStrings(false);
                
                // if component is text field and do not have exist value, fill
                // blank String if required
                if (formComponent instanceof AbstractTextComponent)
                {
                    if (Strings.isEmpty(formComponent.getValue()))
                    {
                        if (fillBlankString)
                        {
                            setFormComponentValue(formComponent, """");
                        }
                    }
                    else
                    {
                        setFormComponentValue(formComponent, formComponent.getValue());
                    }
                }
                else if ( (formComponent instanceof DropDownChoice) ||
                        (formComponent instanceof RadioChoice) ||
                        (formComponent instanceof CheckBox))
                {
                    setFormComponentValue(formComponent, formComponent.getValue());
                }
                else if (formComponent instanceof ListMultipleChoice)
                {
                    final String[] modelValues = formComponent.getValue().split(FormComponent.VALUE_SEPARATOR);
                    for (int i = 0; i < modelValues.length; i++)
                    {
                        addFormComponentValue(formComponent, modelValues[i]);
                    }
                }
                else if (formComponent instanceof CheckGroup)
                {
                    final Collection checkGroupValues = (Collection) formComponent.getModelObject();
                    formComponent.visitChildren(Check.class, new IVisitor()
                    {
                        public Object component(Component component)
                        {
                            
                            if (checkGroupValues.contains(component.getModelObject()))
                            {
                                // O-P Preserve old escaping value, then turn escaping off
                                // so that values aren't escaped unnecessarily.
                                boolean oldEscaping = component.getEscapeModelStrings();
                                component.setEscapeModelStrings(false);
                                
                                addFormComponentValue(formComponent, ((Check) component).getValue());
                                
                                // O-P Restore the previous escaping setting.
                                component.setEscapeModelStrings(oldEscaping);
                           }
                            return CONTINUE_TRAVERSAL;
                        }
                    });
                }
                
                // O-P Restore the previous escaping setting.
                formComponent.setEscapeModelStrings(oldEscaping);
            }

        });
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-14 15:04:18.756,,,no_permission,,,,,,,,,,,202098,,,Sat Aug 28 18:27:39 UTC 2010,,,,,,0|i0kh13:,117576,,,,,,,,22/Oct/07 10:33;david.shepherdson;Added extra spaces to URI examples so that the angle brackets display properly in JIRA.,14/Nov/07 15:04;jcompagner;can't this be fixed by not setting that property hard? But by unescaping it again on the right places where those escaped values are get from?,"06/Dec/07 10:23;david.shepherdson;Hello Johan,

(Sorry for the delay in getting back to you -- I've been busy on some other things.)

Were you thinking something along the lines of the following?

    String value = formCompoennt.getValue();
    if (formComponent.getEscapeModelStrings()) {
        value = Strings.unescapeMarkup(value);
    }

There are two reasons I didn't do it that way in my workaround: firstly, there is no Strings.unescapeMarkup(...) method :-) and secondly, we don't know from the outside of getValue() whether the value inside really has been escaped or not: if there wasn't any raw input, the value returned will be from the model, without any escaping regardless of the setting. We'd have to do something like:

    String value = formComponent.getValue();
    if (formComponent.getEscapeModelStrings() && formComponent.hasRawInput()) {
        value = Strings.unescapeMarkup(value);
    }

(Assuming Strings.unescapeMarkup(...) existed, again.)

That seems to me like it's giving the FormTester knowledge that it shouldn't really have of the way getValue() works inside. That's why I felt the approach of ensuring that model strings wouldn't be escaped before calling getValue() (and then restoring the original setting afterwards) was safest and kind of cleanest.

But then, I'm just a user. As long as it can be made to work, you developers can do it however you like! :-)

David","28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,
WicketTester fires onSubmit for first form button prior to firing requested ajax event,WICKET-1743,12399974,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,spatula,spatula,10/Jul/08 00:04,08/Sep/10 16:43,13/Mar/19 23:15,07/Sep/10 00:54,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.12,,,wicket,,,,2,,,,,,,,"In a form that contains a submit button and a text field, when performing tester.executeAjaxEvent(""form:text"", ""onkeyup"") on a field with an AjaxFormSubmitBehavior, first the submit button's onSubmit method is executed, and then the AjaxEvent is executed.  In the event that there are multiple submit buttons, it is the first one that gets fired.

The expected behaviour is that the AjaxFormSubmitBehavior's onSubmit method is called followed by the form's onSubmit method, and the first submit button's onSubmit method is not called.

I'll attach a simple test case.",,,,,,,,,,,,,,,,,,,08/Sep/10 12:22;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12454098/patch.txt,06/Sep/10 19:43;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12453962/patch.txt,10/Jul/08 00:07;spatula;wicket1743.jar;https://issues.apache.org/jira/secure/attachment/12385688/wicket1743.jar,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-09-06 18:57:56.241,,,no_permission,,,,,,,,,,,202682,,,Wed Sep 08 16:43:54 UTC 2010,,,,,,0|i0kfcf:,117303,,,,,,,,10/Jul/08 00:07;spatula;Test case showing the button-submitting rather than form-submitting behaviour in WicketTester.,"06/Sep/10 18:57;pedrosans;The submit calls sequence can't be considered as an bug, only the one described by you looks more natural than the current one.
About the button's onSubmit unexpected call, it is an bug. Taking a look at the BaseWicketTester, I noticed that submitAjaxFormSubmitBehavior method is adding the Button component input name as an request parameter. This is enough to the form component consider that this button was clicked, and that it's onSubmit method need to be invoked. See: Form#findSubmittingButton.

Currently there is an test avoiding Button components from have it's input name on request parameters.

At: BaseWicketTester#submitAjaxFormSubmitBehavior
there is the test: !formComponent.getClass().isAssignableFrom(Button.class)

But this test don't make sense since the formComponent will almost always be an Button subclass.
Change the test to: ""!(formComponent instanceof Button)"" fix Nick's test case and breaks 3 others.
I will take a better look at those broken test cases and see if there is something wrong with them...","06/Sep/10 19:42;pedrosans;The problem with those other test cases:

  testSubmitNoDefProcessing(org.apache.wicket.ajax.form.AjaxFormSubmitTest)
  testAjaxButtonWhenCancelButtonHasAModelValue(org.apache.wicket.ajax.markup.html.form.AjaxButtonTest)
  testAjaxSubmitWhileAnotherButtonIsNotVisible(org.apache.wicket.ajax.DomReadyOrderTest)

is that restricting the test at submitAjaxFormSubmitBehavior method, the component that originated the submit call, became unknown by the form. It exposes another bug: BaseWicketTester is not adding the form component input name that originated the submit call to the request parameters. I think it is related with: https://issues.apache.org/jira/browse/WICKET-1733

I'm sending an patch with the correction. All test cases passed.",06/Sep/10 19:43;pedrosans;bug fix,"07/Sep/10 03:25;hudson;Integrated in Apache Wicket 1.4.x #148 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/148/])
    ",08/Sep/10 12:22;pedrosans;Sending an test case to detect unexpected calls to onSubmit,08/Sep/10 16:33;ivaynberg;thanks,"08/Sep/10 16:43;hudson;Integrated in Apache Wicket 1.4.x #151 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/151/])
    testcase
Issue: WICKET-1743
",,,,,,,,,,,,,,,,
"HybridUrlCodingStrategy does not support parameters with a "".""",WICKET-2275,12425398,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ryantxu,ryantxu,14/May/09 00:46,29/Aug/10 06:59,13/Mar/19 23:15,29/Aug/10 06:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,0,,,,,,,,"The HybridUrlCodingStrategy has a glitch when I parameter values include the character "".""

For example, if I make a link with:
params.add( ""p"", ""Hello 2.01.00"" )

This creates a link to:
http://host/context/path/p/Hello%202.01.00

and then that gets redirected to:
http://host/context/path/p/Hello%202.${page version here}

and the parameter value is lost.

Things work fine if I escape ""."" with ""%2E"":
http://host/context/path/p/Hello%202%2E01%2E00


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203172,,,Thu May 14 00:49:37 UTC 2009,,,,,,0|i0kdu7:,117059,,,,,,,,"14/May/09 00:49;ryantxu;I'm not sure the best way to fix this...  perhaps override urlEncodePathComponent in HybridUrlCodingStrategy
{code:java}
	protected String urlEncodePathComponent(String string)
	{
		return WicketURLEncoder.PATH_INSTANCE.encode(string);
	}
{code}
",,,,,,,,,,,,,,,,,,,,,,,
Wrong relative URL's when using Java EE 6 container with ERROR dispatching,WICKET-2712,12454973,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aldaris,aldaris,01/Feb/10 19:04,28/Aug/10 18:27,13/Mar/19 23:15,27/Aug/10 00:17,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,0,,,,,,,,"In the Servlet API 3.0 spec [1] the ERROR dispatched pages requests does not contain forward attributes, that's why in ServletWebRequest#getRelativePathPrefixToWicketHandler() on the line #270 the return value is null, and the relative urls are calculated wrong.
Way to reproduce:
create an error page which is mapped to /error/NotFound for instance (at least on way deeper then the wicketfilter), and register the errorpage to 404 HTTP code. On the 404 page place a link to a wicket page or resource.
Now if you check the result with GlassFish v3, then the links on the page starts with error/NotFound/, but with GlassFish v2 this works flawlessly (because it's a bug in it), see for more details [2] and [3].

[1]: http://jcp.org/aboutJava/communityprocess/final/jsr315/index.html section 10.9.1. on pages 102-103
[2]: http://old.nabble.com/Mounting-problem-with-GlassFishv3-td27386691.html
[3]: http://forums.java.net/jive/thread.jspa?threadID=73771&tstart=0

If needed I can attach a quickstart to the issue, which shows the problem.","Sun JDK 1.6.0u18, GlassFish v3 appserver",7200,7200,,0%,7200,7200,,,,,,,,WICKET-1887,,,,02/Feb/10 17:41;aldaris;quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12434542/quickstart.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-02 08:36:31.357,,,no_permission,,,,,,,,,,,203573,,,Sat Aug 28 18:27:43 UTC 2010,,,,,,0|i0kcov:,116873,,,,,,,,02/Feb/10 08:36;martin-g;Quickstart app always helps in debugging. Please attach it.,"02/Feb/10 17:41;aldaris;The quickstart app, which demonstrates the problem. If you try it with both GFv2 and GFv3 you can see, that, with GFv3 the relative links are broken.
Try open for example <contextroot>/asdf and see the links there.
With GFv2 this works, because there are the forward attributes, but with GFv3, they isn't there, so this means for me, that only with errorUrl Wicket can't calculate the relative urls.","11/Aug/10 00:33;aldaris;This is rather a bug, and we are suffering from it for a while now, any guess when this will be fixed?
Thanks",27/Aug/10 00:15;ivaynberg;this had nothing to do with attributes...just incorrect processing of their values,27/Aug/10 00:17;ivaynberg;wrong status,27/Aug/10 06:23;aldaris;I've just tried this out and it's working. Thanks Igor!,27/Aug/10 06:28;ivaynberg;try it again now so you also get WICKET-1887 tweak,"27/Aug/10 06:34;aldaris;My snapshot contained 1887 fix too, so it's all good.",27/Aug/10 06:36;ivaynberg;cheers,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,
404 error page customize - with specified url-pattern (not /*),WICKET-1887,12407065,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,linuxroot,linuxroot,23/Oct/08 07:09,28/Aug/10 18:27,13/Mar/19 23:15,27/Aug/10 06:02,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,0,,,,,,,,"The problem is with incorrect url, when I created own 404 page. 

I attached the source, where can you see the problem. If you start the application, and than you go to http://localhost:8080/app/404 - you can see error test page, with own CSS file (NotFoundPage). It is function, but the problem is, if you try to access any missing page. Than you can see the error page (NotFoundPage), but the problem is, that the css style added by css header contributer generates incorrect url. I try to understand the problem, but I can see strange behavior. (It always returns the url, referenced to root, but not to specified  url-pattern of web.xml).","jetty 6.1.x
Tomcat 6
Gentoo linux",,,,,,,,,,,,,,,,,,23/Oct/08 07:10;linuxroot;wicket-bug.tar.gz;https://issues.apache.org/jira/secure/attachment/12392703/wicket-bug.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-08-28 18:27:42.479,,,no_permission,,,,,,,,,,,202813,,,Sat Aug 28 18:27:42 UTC 2010,,,,,,0|i0kf07:,117248,,,,,,,,23/Oct/08 07:10;linuxroot;example of bug,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,,,,,,,,,
Contract of Session.attach() and Session.detach(),WICKET-1010,12379060,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,25/Sep/07 20:52,28/Aug/10 18:27,13/Mar/19 23:15,27/Aug/10 23:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"What is the contract of Session.attach() and Session.detach() ?

Especially, is it intended that after a call to attach() that there will
be at least one call to detach() before the request goes back to the client?
If that's the case, then there might be a bug in Session and I propose
the following patch on org.apache.wicket.Session 

Index: .
===================================================================
--- .    (revision 579354)
+++ .    (working copy)
@@ -305,6 +305,11 @@
     */
    public static void unset()
    {
+        Session session = (Session)current.get();
+        if (session != null)
+    {
+        session.detach();
+    }
        current.set(null);
    }



In my current project well fell over this looking at:

WicketFilter.getLastModified(final HttpServletRequest servletRequest)
where cachable resources lead over Session.findOrCreate to Session.set(Session) to Session.attach()

but the Session.unset() doesn't lead to a Session.detach()

Martin ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-27 09:40:49.173,,,no_permission,,,,,,,,,,,202018,,,Sat Aug 28 18:27:41 UTC 2010,,,,,,0|i0kh8f:,117609,,,,,,,,"27/Sep/07 07:38;funkattack;If I interpret this right:
http://www.nabble.com/Contract-of-Session.attach%28%29-and-Session.detach%28%29-tf4517840.html#a12887573

the patch should read like this:

$ svn diff ./jdk-1.4/wicket/src/main/
Index: jdk-1.4/wicket/src/main/java/org/apache/wicket/Session.java
===================================================================
--- jdk-1.4/wicket/src/main/java/org/apache/wicket/Session.java (revision 579923)
+++ jdk-1.4/wicket/src/main/java/org/apache/wicket/Session.java (working copy)
@@ -305,7 +305,22 @@
         */
        public static void unset()
        {
-               current.set(null);
+               try
+               {
+                       Session session = (Session)current.get();
+                       if (session != null)
+                       {
+                           session.detach();
+                       }
+               }
+               catch (RuntimeException re)
+               {
+                       log.error(""there was an error unsetting the current session"", re);
+               }
+               finally
+               {
+                       current.set(null);
+               }
        }

        /** A number to generate names for auto create pagemaps */","27/Sep/07 09:40;jcompagner;normally the RequestCycle does the detaching of all the session (and is calling session.detach())

Will have to see how we fix that with the lastmodified get method..

What are you doing in session.attach and detach? Because those are pretty dangerous methods anyway. I almost think about just removing them..","27/Sep/07 10:16;funkattack;@Johan

We do nothing no more in session.attach() and detach().
The discussion on the list made it possible to move that logic, of setting transaction borders, to RequestCycle.onBeginRequest and onEndRequest.","27/Sep/07 14:12;jcompagner;yes that is exactly the reason that i think of depricating attach/detach from the Session.
Because those methods are not threadsafe almost all the time the things you would do there should be done in the RequestCycle.

Currently i don't see real use for those 2 method on session..

","16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",03/Nov/07 20:18;jcompagner;bumping this one to 1.4 to see if we there can remove the attach/detach methods or look at there behavior,06/Jul/08 13:05;dashorst;Moved to next milestone release.,"06/Jul/08 20:00;thrantal;To maintain more 1.3 compatibility it might be better to only fix this in 1.5. But if you think that it's too dangerous to leave it in 1.4, let's move this issue back to 1.4. I don't think the issue is so serious though, as it doesn't appear on the mailing lists?",27/Aug/10 23:52;ivaynberg;session.attach() gone in 1.5,"28/Aug/10 18:27;hudson;Integrated in Apache Wicket 1.4.x #129 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/129/])
    ",,,,,,,,,,,,,,
Containers in forms inside a border is not validated correctly,WICKET-2780,12458961,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,asfernandes,asfernandes,12/Mar/10 17:11,28/Aug/10 05:48,13/Mar/19 23:15,28/Aug/10 05:48,1.4.1,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"I've a border that have a form and in that form there is a DateField component. DateField is a FormComponentPanel with a embedded DateTextField.

This code below in Form.java does not validate that component correctly, when an invalid date is entered.

		// Borders need special treatment
		if (!error[0] && (getParent() instanceof Border))
		{
			MarkupContainer border = getParent();
			Iterator<? extends Component> iter = border.iterator();
			while (!error[0] && iter.hasNext())
			{
				Component child = iter.next();
				if ((child != this) && (child instanceof FormComponent))
				{
					visitor.component(child);
				}
			}
		}

The problem is that the visitor is not used to go deeper in the hierarchy, so the DateTextField is never reached.","Tested with 1.4.1, but 1.4.7 code looks identical",,,,,,,,,,,,,,,,,,15/Mar/10 12:12;asfernandes;bordervalidation.zip;https://issues.apache.org/jira/secure/attachment/12438812/bordervalidation.zip,23/Mar/10 10:58;asfernandes;bordervalidation2.zip;https://issues.apache.org/jira/secure/attachment/12439566/bordervalidation2.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-03-13 09:03:56.335,,,no_permission,,,,,,,,,,,203634,,,Sat Aug 28 05:48:57 UTC 2010,,,,,,0|i0kcjj:,116849,,,,,,,,13/Mar/10 09:03;jdonnerstag;please provide a testcase or quickstart. Thanks.,"15/Mar/10 12:12;asfernandes;Enter something invalid in the first datefield and submit. It says ""error"".
Enter something invalid in the second datefield and submit. It says ""ok"".","21/Mar/10 17:28;jdonnerstag;you need to add <code>form.add(getBodyContainer());</code> to your myborder.java class. You need to tell Wicket that the body needs to be added to the form and not the border. 

","22/Mar/10 16:24;asfernandes;Juergen:

    public MyBorder(String id) {
    	super(id);

        Form<Void> form = new Form<Void>(""form"");
        form.add(getBodyContainer());     // ADDED
        add(form);

Does not solve the test case problem nor my real case problem.",22/Mar/10 21:40;jdonnerstag;I've tested it against the latest 1.4 release (1.4.7) and it works for me.,22/Mar/10 21:43;jdonnerstag;I've tested against 1.4.7 and it works for me.,"23/Mar/10 10:58;asfernandes;Juergen, I insist the problem persist. I'm using 1.4.7.

Now is the test case with the getBodyContainer().

When you enter 123456 in the second field and submit it says ""ok"".","25/Mar/10 20:02;asfernandes;I'm reopening this in the hope it's reviewed, as the proposed solution didn't worked even in 1.4.7.","28/Aug/10 05:48;ivaynberg;tried with 1.4.10, when i enter 123456 in the second field i get: 

* '123456' is not a valid Date. 
* error 
",,,,,,,,,,,,,,,
Lazy registration in SharedResourceRequestTarget: check if locale/style works and better api: SharedResources.get() -> SharedResource.getByResourceKey()/putByResourceKey?,WICKET-1447,12392246,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,jcompagner,jcompagner,25/Mar/08 11:22,28/Aug/10 00:06,13/Mar/19 23:15,28/Aug/10 00:06,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"see also WICKET-1446

Lazy registration can still be wrong for the wrong resources if the path contains style and locale information..

Also the API of SharedREsources is a bit confusing, you have add(name,Resource) and get(key) where name and key are really different things
i think we should look if we rename get(key) to getByResourceKey and then also add a putByResourceKey 
that can then be used if needed by SharedResourceRequestTarget.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-06 13:05:21.724,,,no_permission,,,,,,,,,,,202415,,,Sat Aug 28 00:06:53 UTC 2010,,,,,,0|i0kg33:,117423,,,,,,,,06/Jul/08 13:05;dashorst;Moved to next milestone release.,28/Aug/10 00:06;ivaynberg;reopen if still not how you want it in 1.5,,,,,,,,,,,,,,,,,,,,,,
Ajax postcall handler only called once under specific condition,WICKET-1572,12394880,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,matthewyoung,matthewyoung,27/Apr/08 20:37,27/Aug/10 07:48,13/Mar/19 23:15,27/Aug/10 07:48,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,3,,,,,,,,"The problem is originally raised here: http://www.nabble.com/Ajax-postcall-handler-does-not-get-called-every-time-td16659218.html#a16663054

0) Run the quickstart project
1) Close all browser windows, then open a browser
2) Visit the page (http://localhost:8080)
3) click the link, postcall handler is called as expected
4) any click again, postcall handler is not called

Now the strange part

0) Leave the browser window open, restart the quickstart project
1) Visit the page (http://localhost:8080)
2) click the link again and again and postcall handler is called every time as expected

IE7, FF 2.0.0.14, Safari and Opera and all the same.



AjaxRegisterPostCallHandler.java    =====================================================

public class AjaxRegisterPostCallHandler extends WebPage {
	private int count;

	private static HeaderContributor headerCont = new HeaderContributor(new IHeaderContributor() {
		public void renderHead(IHeaderResponse response) {
			response
					.renderOnLoadJavascript(""Wicket.Ajax.registerPostCallHandler(function(){alert('ajax');});"");
		}

	});
	
	public AjaxRegisterPostCallHandler() {

		final WebMarkupContainer container = new WebMarkupContainer(""container"");
		container.setOutputMarkupId(true);
		add(container);

		Label label = new Label(""count"", new AbstractReadOnlyModel() {

			public Object getObject() {
				return count;
			}

		});
		container.add(label);
		container.add(new AjaxLink(""link"") {
			public void onClick(AjaxRequestTarget target) {
				count++;
				target.addComponent(container);
				target.appendJavascript("";"");
			}

		});

		add(headerCont);

    }
}


AjaxRegisterPostCallHandler.html ================================================

<html>
   <head>
       <title>Test</title>
   </head>
   <body>
       <div wicket:id=""container"">
           <div wicket:id=""count""></div>
           <a wicket:id=""link"">link</a>
       </div>
       
   </body>
</html>
",WinXP (build 1.6.0_05-b13),,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-27 07:48:42.661,,,no_permission,,,,,,,,,,,202531,,,Fri Aug 27 07:48:42 UTC 2010,,,,,,0|i0kfrj:,117371,,,,,,,,27/Aug/10 07:48;ivaynberg;fixed by WICKET-2999,,,,,,,,,,,,,,,,,,,,,,,
URLs created with urlFor(RequestListenerInterface) on a bookmarkable page try to instantiate a new page after the page expired,WICKET-2327,12427843,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ralf.ebert,ralf.ebert,14/Jun/09 20:11,27/Aug/10 05:26,13/Mar/19 23:15,27/Aug/10 05:26,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"When a component on a bookmarkable page uses urlFor to generate a URL to receive events, such an url is generated:
http://localhost:8080/?wicket:bookmarkablePage=:somepkg.SomePage&wicket:interface=:12:bla::ISomeEventListener::

If the given page expires and the URL is opened, Wicket tries to create a new page instead of throwing a PageExpiredException. This is incorrect in my opinion, because the URLs intention is to call a listener interface. In my understanding this cannot happen after the state of the page is lost, so a PageExpiredException should be thrown in this case (or a ""non-bookmarkable"" URL should be generated).

Stack trace:

	at org.apache.wicket.session.DefaultPageFactory.createPage(DefaultPageFactory.java:212)
	at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:89)
	at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.newPage(BookmarkablePageRequestTarget.java:306)
	at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.getPage(BookmarkablePageRequestTarget.java:321)
	at org.apache.wicket.request.target.component.BookmarkableListenerInterfaceRequestTarget.processEvents(BookmarkableListenerInterfaceRequestTarget.java:126)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1240)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1319)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1418)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:544)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:456)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:289)",,,,,,,,,,,,,,,WICKET-2204,,,,14/Jun/09 20:42;ralf.ebert;mvn2327.zip;https://issues.apache.org/jira/secure/attachment/12410602/mvn2327.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-14 20:18:45.591,,,no_permission,,,,,,,,,,,203220,,,Fri Aug 27 05:26:27 UTC 2010,,,,,,0|i0kdon:,117034,,,,,,,,14/Jun/09 20:18;ivaynberg;could you please provide a quickstart. if this were always true most of the examples would not work. the url you showed should never be generated.,"14/Jun/09 20:30;ralf.ebert;Thanks for the quick answer. I will prepare an example. The component in question is a Panel subclass, which uses this.urlFor(ISomeRequestListenerInterface) to create a url for some custom javascript code. Maybe this is quite specific / is it allowed to do so?","14/Jun/09 20:42;ralf.ebert;The call to urlFor inside the panel yields
http://localhost:8080/mvn2327/?wicket:bookmarkablePage=:de.ralfebert.HomePage&wicket:interface=:0:somePanel::ISomeListener::
(please not that the example code is ""stupid"" and you would never write such code as I replaced the original Panel javascript in my component with a simple WebMarkupContainer which renders a link)

If the page / session expires, the page will be re-instantiated silently.","14/Jun/09 21:14;jcompagner;those urls are not  directly a bug but a feature already working for quite some time.

Its the hybrid stateless approach for example stateless form works like this.

The thing that could be broken is maybe the page tells that it is stateless/bookmarkable to easy.
So it generates the hybrid urls a bit to soon.
It should do it if the page.isBookmarkable() && page.isStatelessHint() i think.
I guess that last part is telling to soon also true? 

If you call setStatelessHint(false) on your page are the urls then correct?","14/Jun/09 21:23;ralf.ebert;yes, explicitly setting setStatelessHint(false) yields correct urls.

Seems to be ""the page tells that it is stateless/bookmarkable to easy"" indeed - I guess a page should be stateful by default till the developer explicitly states that it is not.

Maybe one even should get an exception if you try to create an listener url for a stateless page, because that's per definition not stateless...","14/Jun/09 21:36;ivaynberg;well, we mark the page as stateful when you call urlfor on it, but it seems that the code that fails is ahead of that...

im not sure that works because the only real way to know if the page is stateful or not is if someone calls a urlfor on it..

","14/Jun/09 21:57;ralf.ebert;Ahh, ok, that makes sense. The problem seems to be that I call urlFor for the Panel inside an embedded WebMarkupContainer.onComponentTagBody. When are calls to urlFor allowed? API doc says nothing about this. Maybe calls after some point in time should be disallowed so this fails fast for component developers? (the resulting urls will work in most cases, so you're introducing a very, very subtle bug as component developer when you call urlFor ""too late"")","14/Jun/09 22:22;ivaynberg;what you are doing sounds legal to me. i think the problem is that we are trying to do too much magic: use the same urlfor method to generate a stateless and stateful url. i think stateless things should have their own statelessUrlFor variants they should call explicitly.

johan, thoughts?","16/Jun/09 20:05;knopp;I think we should be more explicit about this. We should have two methods, one generate url with ListenerInterfaceRequestTarget, another one generate url with BookmrakbleListenerRequestTarget.","16/Jun/09 20:26;ivaynberg;moving fix version to 1.5, for now calling page.setStatelessHint(false) should be a good enough and easy workaround",27/Aug/10 05:26;ivaynberg;should already be working in 1.5,,,,,,,,,,,,,
substituteDate function doesn't respect date pattern,WICKET-2427,12433234,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,reinouts,reinouts,17/Aug/09 14:16,27/Aug/10 05:21,13/Mar/19 23:15,27/Aug/10 05:21,1.3.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-datetime,,,,0,,,,,,,,"The function Wicket.DateTime.substituteDate in wicket-date.js fails to correctly format dates.

Example: create a datetextfield like this
DateTextField birthDate = DateTextField.forDateStyle(""birthdateFromAndTo"", ""M-"");
and add a DatePicker to it:
birthDate.add(new DatePicker());
The datetextfield will only validate when the input matches 'd-MMM-yyyy' (for my locale, at least) as can be verified by executing birthDate.getTextFormat(). This translates to '17-augustus-2009' for today's date.

However, when a date is selected in the datepicker, it puts '17-8-2009' in the DateTextField. The reason is, I believe, that subsituteDate() assumes that all fields in the pattern are numbers. Instead, it should execute a proper date formatting. The function either should call the Wicket side to format the input date, or it should do it in javascript. On http://www.timdown.co.uk/code/simpledateformat.js I found an Apache licensed piece of javascript code that should do the work (it misses l10n though).",,,,,,,,,,,,,,,,,,,24/Feb/10 00:20;ivaynberg;wicket-2427-wicket-datetime.patch;https://issues.apache.org/jira/secure/attachment/12436793/wicket-2427-wicket-datetime.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-24 00:20:24.635,,,no_permission,,,,,,,,,,,203314,,,Fri Aug 27 05:21:52 UTC 2010,,,,,,0|i0kde7:,116987,,,,,,,,24/Feb/10 00:20;ivaynberg;attaching a patch erroneously attached to WICKET-2648,24/Feb/10 00:20;ivaynberg;we cannot apply the patch as is because it uses a non-ASL2 compatible javascript library,24/Feb/10 00:20;ivaynberg;we cannot apply the patch as is because it uses a non-ASL2 compatible javascript library,27/Aug/10 05:21;ivaynberg;should be fixed because a duplicate is marked fixed...,,,,,,,,,,,,,,,,,,,,
WicketFilter.getLastModified creates a RequestCycle but does not clean it up,WICKET-2566,12440172,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,dotchev,dotchev,09/Nov/09 07:58,27/Aug/10 02:31,13/Mar/19 23:15,27/Aug/10 02:31,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"I noticed that WicketFilter.getLastModified creates a RequestCycle but does not detach it, so onEndRequest is not called.
This makes it hard to clean up resources allocated for a specific request.

I found the following sequence in WicketFilter: 
doFilter 
    getLastModified 
       webApplication.newRequestCycle 
       resource.getResourceStream 
       // requestCycle.detach - this is commented 
       requestCycle.unset // this does not call onEndRequest 
    doGet 
       webApplication.newRequestCycle // second RequestCycle is created 
       cycle.request() // this calls again getResourceStream but also RequestCycle.detach 

It turns out two RequestCycle's are created but only the second one is 
detached. Also Resource.getResourceStream is called twice. This is all 
for one request. 

Is it possible that doFilter creates just one RequestCycke and calls getResourceStream just once?

http://www.mail-archive.com/users@wicket.apache.org/msg44538.html
",not relevant,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-09 08:44:47.57,,,no_permission,,,,,,,,,,,203442,,,Fri Aug 27 02:31:24 UTC 2010,,,,,,0|i0kd1r:,116931,,,,,,,,"09/Nov/09 08:44;ivaynberg;johan, your comment there about not calling detach...",27/Aug/10 02:31;ivaynberg;this is handled much better in 1.5. in 1.4 i dont think we can tweak it now because deployed apps may depend on this behavior.,,,,,,,,,,,,,,,,,,,,,,
Input field with autocomplet behavior does not submit the form via enter key,WICKET-2,12353284,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,janne,tdrencak,tdrencak,16/Oct/06 12:06,27/Aug/10 00:19,13/Mar/19 23:15,23/Mar/07 09:26,1.2.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-extensions,,,,0,,,,,,,,"When field has a focus, autocomplete javascripts blocks all enter key presses. That's why form can't be submitted. Enter key press should be blocked only when autocomplete view is visible

You can change wicket-autocomplete.js in initialize() function:
from
        obj.onkeypress=function(event){
            if(wicketKeyCode(getEvent(event))==KEY_ENTER){
                return killEvent(event);
            }
        }
to
        obj.onkeypress=function(event){
            if(wicketKeyCode(getEvent(event))==KEY_ENTER && visible==1){
                return killEvent(event);
            }
        }",,,,,,,,,,,,,,,,,,,16/Oct/06 12:08;tdrencak;wicket-autocomplete.js;https://issues.apache.org/jira/secure/attachment/12342995/wicket-autocomplete.js,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-10-16 16:34:57.0,,,no_permission,,,,,,,,,,,201092,,,Fri Aug 27 00:19:08 UTC 2010,,,,,,0|i0kjv3:,118035,,,,,,,,16/Oct/06 12:08;tdrencak;Fixed wicket-ajax.js,"16/Oct/06 16:34;janne;I tried similiar fix few weeks ago, and it causes the browser to submit the form when selecting an item with enter (tested with safari and firefox on mac).


","27/Aug/10 00:19;hudson;Integrated in Apache Wicket 1.5.x #269 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/269/])
    Issue: WICKET-2828
add(ivalidator<t>)->add(ivalidator<? super t>)
Issue: WICKET-2849
Issue: WICKET-2854
WICKET-2-1-
",,,,,,,,,,,,,,,,,,,,,
Ajax Update Issue in Chrome ,WICKET-2751,12456538,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alexandru.objelean,alexandru.objelean,17/Feb/10 14:14,26/Aug/10 22:52,13/Mar/19 23:15,26/Aug/10 22:52,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"The problem can be reproduced with latest branch version. When using ModalWindow & updating some component using target.addComponent(component), instead of being refreshed the component disappears.  

The reproduction path is the following:
- Click add button -> a modal window appears
- write something in description textfield
- click save (the list containing saved items will be updated)
- repeat same steps 2-3 times
- sometimes, instead of being refreshed, the component holding items (it is not a repeater, but its parent) will disappear.",Reproduced with latest version from branch-1.4.x (post 1.4.6) in Chrome 5,,,,,,,,,,,,,,,,,,17/Feb/10 14:16;alexandru.objelean;chromeAjaxIssue.zip;https://issues.apache.org/jira/secure/attachment/12436104/chromeAjaxIssue.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-20 09:25:49.757,,,no_permission,,,,,,,,,,,203607,,,Thu Aug 26 22:52:15 UTC 2010,,,,,,0|i0kclr:,116859,,,,,,,,"17/Feb/10 14:16;alexandru.objelean;Attached, you can find a quickstart.","20/Feb/10 09:25;count.negative;The envelope is empty for chrome (wicket-ajax.js line 1178). It must be a problem of multipart ajax submit.

See WICKET-2657","20/Feb/10 15:10;alexandru.objelean;It could be a problem of multipart ajax submit, but though WICKET-2657 was fixed, it doesn't mean that this issue is also fixed..",24/Feb/10 00:48;ivaynberg;indeed a duplicate of WICKET-2657,"24/Feb/10 08:03;alexandru.objelean;I can confirm that the problem can be reproduced with the quickstart attached. I tried with latest 1.4.x branch version from git repository. Please, see reproduction path...",24/Feb/10 15:51;ivaynberg;i have tested it last night against wicket 1.4.6 and it failed. i tested it again against trunk and it worked. i am using chrome 4.0.249.89. seems chrome 5 is still beta.,"26/Aug/10 22:52;ivaynberg;tried again with latest and chrome 6.0.472.41 beta, everything worked fine. assume this was fixed in 1.4.7",,,,,,,,,,,,,,,,,
CLONE -<wicket:enclosure> bug: setObject(null) called for excplicitly invisible fields in a non-visible enclosure,WICKET-2353,12429356,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,a_wronski@gazeta.pl,a_wronski@gazeta.pl,02/Jul/09 07:33,26/Aug/10 21:11,13/Mar/19 23:15,26/Aug/10 21:11,1.4-RC5,1.4-RC6,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,,,,0,,,,,,,,"The bug is still in 1.4-rc5 despite the fact that has status fixed in 1.3.3:
https://issues.apache.org/jira/browse/WICKET-1391",,,,,,,,,,,WICKET-1391,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-26 21:11:52.885,,,no_permission,,,,,,,,,,,203245,,,Thu Aug 26 21:11:52 UTC 2010,,,,,,0|i0kdlj:,117020,,,,,,,,"26/Aug/10 21:11;ivaynberg;added warning to 1.4.x, 1.5 already has a warning in place",,,,,,,,,,,,,,,,,,,,,,,
SecondLevelCache + DiskPageStore Serialization issue with Anonymous inner classes,WICKET-2138,12415961,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,victori,victori,02/Mar/09 21:48,26/Aug/10 00:02,13/Mar/19 23:15,26/Aug/10 00:02,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"It seems like declaring an anonymous inner class will hold on to the previous page which will break serialization with secondlevelcache  in a clustered environment. 

---

I have run into an odd issue with serialization which throws a stackoverflow exception. Here is the cause:

Passing an LDM model as-is to a page, it will stackoverflow on the receiving page, if that page is refreshed twice or a form has been submitted.

Here is an example...

setResponsePage(new EditBlogPage(new LoadableDetachableModel<Blog>() {
	private static final long serialVersionUID = 1L;
	@Override
	protected Blog load() {
		// just an example....
		return new Blog();
	}

}));

However, if I subclass the LDM and pass it like so, it will work just fine.

public class FakeLDM extends LoadableDetachableModel<Blog> {
	private static final long serialVersionUID = 1L;

	@Override
	protected Blog load() {
		return new Blog();
	}
}

setResponsePage(new EditBlogPage(new FakeLDM()));

One last thing, If I construct the LDM inside the receiving page. It will work fine as well.

This seems to only happen with the SecondLevelCache, any ideas?",Solaris/JDK6u10  Jetty clustered session store. ,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-02 21:59:10.364,,,no_permission,,,,,,,,,,,203046,,,Thu Aug 26 00:02:53 UTC 2010,,,,,,0|i0ke7r:,117120,,,,,,,,"02/Mar/09 21:59;ivaynberg;can you provide the stack trace?

and more importantly some sort of a test harness that would start jetty with this clustered session store you are using?","02/Mar/09 22:48;victori;http://media.fabulously40.com/files/serializationbug.tbz2  

You will need to Compile FileSessionManager.java against your Jetty server to use it as your session manager.
I have included instructions on how to configure the session manager in your jetty.xml in FileSessionManager.java

And here is the stack trace..

HTTP ERROR: 500

INTERNAL_SERVER_ERROR
RequestURI=/

Caused by:

java.lang.StackOverflowError
	at java.io.ObjectInputStream$BlockDataInputStream.readUTFBody(ObjectInputStream.java:3005)
	at java.io.ObjectInputStream$BlockDataInputStream.readUTF(ObjectInputStream.java:2818)
	at java.io.ObjectInputStream.readString(ObjectInputStream.java:1599)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1320)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at java.util.HashSet.readObject(HashSet.java:291)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageSerializer.deserializePage(AbstractPageStore.java:331)
	at org.apache.wicket.Page.readPageObject(Page.java:1320)
	at org.apache.wicket.Component.readObject(Component.java:4409)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1061)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1762)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:480)
	at org.apache.wicket.Component.readObject(Component.java:4413)
	at sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1846)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1667)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1323)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1945)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1869)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1753)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)
	at org.apache.wicket.util.lang.Objects.byteArrayToObject(Objects.java:398)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.deserializePage(AbstractPageStore.java:230)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.getPage(DiskPageStore.java:709)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.convertToPage(DiskPageStore.java:1239)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.getLastPage(SecondLevelCacheSessionStore.java:233)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:290)
	at org.apache.wicket.Session.getPage(Session.java:778)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore$PageHolder.readResolve(AbstractPageStore.java:354)
	at sun.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
Powered by Jetty://






















","02/Mar/09 23:24;victori;One last thing, if you have issues with my FileSessionManager, you can always download Jetty-7 and use the JDBCSessionStore plugin.

http://docs.codehaus.org/display/JETTY/Session+Clustering+with+a+Database

FileSessionManager is based off of JDBCSessionStore, same concept but sessions are serialized to files. ",26/Aug/10 00:02;ivaynberg;cannot repro with latest 1.4.x,,,,,,,,,,,,,,,,,,,,
ServletWebRequest#getURL does not return relative URLs,WICKET-2154,12416433,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ittayd,ittayd,09/Mar/09 13:06,25/Aug/10 23:52,13/Mar/19 23:15,25/Aug/10 23:52,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.8,,,wicket,,,,2,,,,,,,,"The description of Request#getURL() is:
       /**
	 * Retrieves the relative URL of this request for local use. This is relative to the context
	 * root.
	 * 
	 * @return The relative request URL for local use
	 */

But ServletWebRequest#getURL uses HttpServletRequest#getServletPath which returns the path to the context of the servlet (so if the servlet is under 'foo' (so http://localhost:8080/foo activates it)), so the path is not relative for local use.

In my specific case, this fails to redirect properly after login:
When using authentication, PageMap#setUpRedirect is used to store the intercepted URL and PageMpa#continueToOriginalDestination is used to redirect to it after a successful login.

The issue is that setUpRedirect uses cycle.getRequest().getURL() so part of the url contains the context path. Then continueToOriginalDestination uses RedirectRequestTarget which uses 'response.redirect(RequestCycle.get()
					.getRequest()
					.getRelativePathPrefixToContextRoot() +
					redirectUrl.substring(1)'

so the call response.redirect is made with a relative path form, which contains the context. the web server adds the context path again before sending to the client to make the path absolute, which results in an illegal path.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-08 07:00:25.307,,,no_permission,,,,,,,,,,,203062,,,Wed Aug 25 23:52:44 UTC 2010,,,,,,0|i0ke6n:,117115,,,,,,,,08/Apr/09 07:00;jdonnerstag;Could you do me a favor and test it with 1.4?,25/Aug/10 23:52;ivaynberg;should be fixed in 1.4.x,,,,,,,,,,,,,,,,,,,,,,
urlFor(IResourceListener.INTERFACE) returns different URLs,WICKET-2204,12421885,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,frank06,frank06,02/Apr/09 14:56,25/Aug/10 23:50,13/Mar/19 23:15,25/Aug/10 23:50,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"When I call  urlFor(IResourceListener.INTERFACE) in the renderHead method of my public abstract class SWFComponent extends WebMarkupContainer implements IResourceListener, IHeaderContributor

it randomly returns two different type of URLs:

1. ?wicket:interface=:3:docsPanel:viewer:flash::IResourceListener::  ( this is the good URL I was expecting, that calls the onResourceRequested callback method)
2. ?wicket:bookmarkablePage=:app.wicket.document.DocumentDetailPage&wicket:interface=:10:detailPanel:viewer:flash::IResourceListener::  (this bookmarkable link tries to point to the page that holds the instance of the SWFComponent - and fails because this page needs PageParameters- but is incorrect anyway)

The 'randomness' seems be triggered after compilation - but is very difficult to reproduce. For example, after experiencing this strange behaviour in a development environment, I committed a ""working"" dev version (URL of type 1) to the continuous integration server. The integration app was running the same codebase but output URLs of type 2.

I am attaching a quickstart that returns URLs of type 2 by the time I filed this issue.  I tried digging into the WebRequestCodingStrategy but it was difficult to compare as I couldn't easily reproduce both types.

In the quickstart I also included a splitted version of the component, i.e. 
a  public abstract class SWFResourceListener extends WebMarkupContainer implements IResourceListener  + a public class SWFBehavior extends AbstractBehavior implements IHeaderContributor

in an unsuccessful attempt to see if the problem was caused by the fact of having component + header contributor + resource listener all in the same class.

I have solved my case by swapping the IResourceListener for a plain old BookmarkablePage that outputs the SWF bytes, but I still think it's worth to have a look at this bizarre behaviour (which, by the way, might be related to WICKET-289 ?).
 Thanks",Ubuntu 8.10 / Java  1.6.0_0-b12,,,,,,,,,,,,,,,,,,02/Apr/09 14:59;frank06;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12404451/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-25 07:08:31.422,,,no_permission,,,,,,,,,,,203111,,,Wed Aug 25 23:50:32 UTC 2010,,,,,,0|i0ke0v:,117089,,,,,,,,"25/Apr/09 07:08;jdonnerstag;The problem was here

RequestCycle.java

	public final CharSequence urlFor(final Component component,
		final RequestListenerInterface listener, ValueMap params)
	{
		// Get Page holding component and mark it as stateful.
		final Page page = component.getPage();
		final IRequestTarget target;
		if ((listener != IRedirectListener.INTERFACE) &&
			component.isStateless() &&
			page.isBookmarkable() && page.getStatelessHint())
                {
                      <create bookmark url
                }
                else
                {
                     <make page stateful>
                     <make session non volatile>
                     <create request target>
                }
         ","26/Apr/09 02:33;ivaynberg;Juergen, looks like this commit broke something on linux

this test fails: org.apache.wicket.request.target.coding.IndexParamWithStatelessIFrameTest

on this line:

tester.assertContains(""src=\""test/wicket:interface/:0:frame::IResourceListener::\"""");

the actual generated output is now:

<iframe wicket:id=""frame"" src=""?wicket:interface=:0:frame::IResourceListener::""></iframe>","26/Apr/09 14:23;jdonnerstag;The simple solution for Francisco's problem is to explicitly use Page.setStateless(false). The page will be assumed stateful and bound to a session and the correct URL (1) will be generated.

I reverted the change because I wasn't sure if using a IResourceListener prevents in all cases the page from being stateless.

While spending several hours looking deeper into it, I discovered a bunch more issues:
a) Stateless resources will create a BookmarkableListenerInterfaceRequestTarget which honors e.g. IndexedParamUrlCodingStrategy. Stateful resource will use ListenerInterfaceRequestTarget which does not honor IndexedParamUrlCodingStrategy

b) because pathForTarget() in some of IndexedParamUrlCodingStrategy will return a URL, a wicket:bookmarkablePage query parameter will not be added to the URL. In cases wher pathForTarget() return null, the URL (2) mentioned by Francisco will be generated. It contains the Page (needed for stateless pages) and the resource listener. I've didn't dig deep enough if that realy was the intend and if that is actually working.

c) Page which require PageParameter obviously don't work in the previous example, since the (stateless) Page can not be instantiated.

I updated IndexedParamUrlCodingStrategyTest to show some if these problems.
","16/Jun/09 20:27;ivaynberg;moving fix version to 1.5, for now calling page.setStatelessHint(false) should be a good enough and easy workaround

in 1.5 we should be able to address this better","16/Jun/09 21:13;jcompagner;if we dont want those hybrid urls at all, but only for full stateless urls then the fix is easy

instead of doing:

		if (listener != IRedirectListener.INTERFACE && component.isStateless() &&
			page.isBookmarkable() && page.getStatelessHint())

do:

		if (listener != IRedirectListener.INTERFACE && page.isPageStateless())

question that i ask my self.. why didnt we do that in the first place?
And do we break something if we just change his? 

Because now we generate urls to components that say i am stateless on a page that is bookmarkable (and statelesshint says true so it can be stateless)
So those stateless components can be called on when the page is bookmarkable
That sound perfectly fine to me

So if people dont want that because there component is not stateless they should return that in that componnent (getStatelessHint())

So i think the current behavior is just want we want...

","16/Jun/09 21:24;ivaynberg;my only problem with this is that we are stateful by default, so i shouldnt have to call anything and say i am stateful. since statelessness is the exception cause i should instead have to explicitly call setstalesshint(true)","16/Jun/09 21:36;jcompagner;no you shouldnt have to call it.
But  a page that is bookmarkable can be stateless 

But if you build your components and those components cant be stateless you should tell that, like we do on all the statefull components..

thats why we have stateless link and stateless form.

By default getStatelesshint() returns true

If component has behaviors that are not stateless it will be auto statefull 
But if you make a component that calls urlFor some interface you made then that component should return false on getStatelessHint()",25/Aug/10 23:50;ivaynberg;should be fixed in 1.5,,,,,,,,,,,,,,,,
IE7 doesn't evaluate inline javascript without element id,WICKET-1932,12408353,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lankvelt,lankvelt,12/Nov/08 17:25,25/Aug/10 22:31,13/Mar/19 23:15,25/Aug/10 22:31,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,1,,,,,,,,"The javascript as generated by the JavascriptUtils, is not evaluated by the IE7 eval().  An AJAX response with javascript, but no element id, does not lead to execution in Wicket.Head.Contributor.prototype.processScript.

Prepending the SCRIPT_CONTENT_PREFIX with ""//"" seems to fix the problem.",,,,,,,,,,,,,,,,,,,14/Nov/08 12:07;lankvelt;ie7eval.tar.gz;https://issues.apache.org/jira/secure/attachment/12393934/ie7eval.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-13 00:07:03.351,,,no_permission,,,,,,,,,,,202855,,,Wed Aug 25 22:31:13 UTC 2010,,,,,,0|i0keuv:,117224,,,,,,,,13/Nov/08 00:07;knopp;Mind elaborating a bit on this?,"14/Nov/08 12:07;lankvelt;Quickstart maven project to reproduce the issue.  Run mvn jetty:run-war and open http://localhost:8080/ie7eval.  When clicking the link, an alert should display 'xxx'.","14/Nov/08 12:27;lankvelt;In Wicket.Head.Contributor.prototype.processScript, the eval() method is called (in the quickstart) with the string
<!--/*--><![CDATA[/*><!--*/
alert('xxx');
/*-->]^]^>*/
I'm sure that quite some time has gone into this construction, but IE7 doesn't show the alert.

Changing the eval on line 1450 (revision 713975 on wicket-1.3.x branch) to
eval(""//"" + text);
fixes the problem for JavascriptTemplate based header contributions.  (or others that use the same pre- and postfix for javascript code)","14/Nov/08 15:12;knopp;I see. Unfortunately this assumes that the first line of javascript is ""invalid"". We should check if the javascript starts with <!-- and only then prepend it with ""//"". ","14/Nov/08 17:12;lankvelt;That may the best that can be achieved on the client side, given the code that is sent by the server.
What could also be done is add a custom attribute to the JavascriptUtils.SCRIPT_OPEN_TAG.  (the SCRIPT_CONTENT_PREFIX is actually *not* used)",08/Apr/09 14:06;cdeal;I recently upgraded to 1.3.5 and IE6 is having the same problems.  I used the suggestion here and it does resolve the problem.  Any word on when this will be fixed?,"08/Apr/09 14:28;cdeal;Just pulled the latest 1.3-SNAPSHOT and it looks like there is some code in there in an attempt to fix this.  It tries to remove the prefix and suffix from the string before the eval.

Have not tested yet, but wanted to update this issue.",25/Aug/10 22:31;ivaynberg;shouldve been fixed a while back,,,,,,,,,,,,,,,,
Javascript error multiple click on closing modalwindow,WICKET-1902,12407417,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,fkleinko,fkleinko,29/Oct/08 13:54,25/Aug/10 22:29,13/Mar/19 23:15,25/Aug/10 22:29,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-extensions,,,,0,,,,,,,,"When I multiple click on the closing button of the modalwindow i get js error.

On the line win.current.close();. Because window.current == null.

Maybe an extra check?",Internet Explorer,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-25 22:29:10.75,,,no_permission,,,,,,,,,,,202828,,,Wed Aug 25 22:29:10 UTC 2010,,,,,,0|i0keyv:,117242,,,,,,,,25/Aug/10 22:29;ivaynberg;this was fixed in 1.4.x with ajax preconditions,,,,,,,,,,,,,,,,,,,,,,,
MixedParamUrlCodingStrategy makes an incorrect assumption about RequestParameters.parametersMap of type String where as its String[] according to Servlet 2.3 and later,WICKET-1578,12395026,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ritesht,ritesht,29/Apr/08 23:31,25/Aug/10 21:54,13/Mar/19 23:15,25/Aug/10 21:54,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"MixedParamUrlCodingStrategy makes an incorrect assumption about RequestParameters.parametersMap of type String where as its String[] according to Servlet 2.3 and later

Look at MixedParamUrlCodingStrategy.appendParameters (line 153) its type casting to (String) which throws ClassCastException at runtime since its of type String[].

Same issue for decodeParameters.

I actually have question about multivalued parameters. Will any of the URL schemes handle these correctly? if yes - is there an example that shows how?
",Windows,,,,,,,,,,,,,,,,,,29/May/08 17:18;csongor;MixedParamUrlCodingStrategy.java.diff;https://issues.apache.org/jira/secure/attachment/12383035/MixedParamUrlCodingStrategy.java.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-10 15:53:00.779,,,no_permission,,,,,,,,,,,202537,,,Wed Aug 25 21:54:24 UTC 2010,,,,,,0|i0kfqv:,117368,,,,,,,,"10/May/08 15:53;jcompagner;Didnt we just fix this? we have now this code:

String value = param instanceof String[] ? ((String[])param)[0] : (String)param;","29/May/08 17:18;csongor;I think this bug has duplicates. Pls check it by searching for MixedParamUrlCodingStrategy among the issues.

In this patch I propose another solution to this issue in which the String[] parameter is encoded into multiple param=value pairs as the Servlet API assumes that a query string parameter can have multiple values as well.",25/Aug/10 21:54;ivaynberg;shouldve been fixed a while back. if still a problem please attach a quickstart.,,,,,,,,,,,,,,,,,,,,,
Wicket.Focus.setFocusOnId() doesn't work consistently in IE6/7 after ajax update,WICKET-1488,12393293,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dashorst,dashorst,07/Apr/08 10:38,25/Aug/10 21:46,13/Mar/19 23:15,25/Aug/10 21:46,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"We have a page where a lot of markup is replaced in an Ajax request. After the request we want to set the focus on an element inside the replaced markup. It is only an IE problem, where IE6 seems sometimes to work, sometimes not. Playing with timeouts and retrying to set the focus appears to work in IE6. IE7 consistently fails on our page, even with the repeated timeout.

Executing the following code before setting the focus on the element seems to fix this issue:

if (Wicket.Browser.isIE()) {
            // There's a strange focus problem in IE that disables focus on entire page,
            // unless something focuses an input
            var e = document.createElement(""input"");
            var x = Wicket.Window.getScrollX();
            var y = Wicket.Window.getScrollY();
            e.style.position = ""absolute"";
            e.style.left = x + ""px"";
            e.style.top = y + ""px"";
            document.body.appendChild(e);
            e.focus();
            document.body.removeChild(e);
        }

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-25 21:46:05.509,,,no_permission,,,,,,,,,,,202455,,,Wed Aug 25 21:46:05 UTC 2010,,,,,,0|i0kfzb:,117406,,,,,,,,25/Aug/10 21:46;ivaynberg;this was applied at some point,,,,,,,,,,,,,,,,,,,,,,,
update/ re-evalue commons io/ fileupload code,WICKET-730,12373246,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,thrantal,ehillenius,ehillenius,07/Jul/07 23:24,25/Aug/10 15:32,13/Mar/19 23:15,25/Aug/10 15:32,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,,See this discussion: http://www.nabble.com/FileUploadField-closing-input-streams-behind-my-back-tf4025757.html,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-06 13:05:15.755,,,no_permission,,,,,,,,,,,201762,,,Wed Aug 25 15:32:26 UTC 2010,,,,,,0|i0ki2f:,117744,,,,,,,,06/Jul/08 13:05;dashorst;Moved to next milestone release.,"06/Jul/08 19:44;thrantal;On one hand the current implementation seems bug-prone, so it might be good to fix it in 1.4. 
But on other hand, there hasn't been a lot of complaints, there are no voters or watchers, and the changes (maybe even adding a commons-io dependency) might be invasive.

So for now I'll put it in 1.5, please make some noise if you want this in 1.4 :)",25/Aug/10 15:32;ivaynberg;we recently updated io in 1.4 and trunk,,,,,,,,,,,,,,,,,,,,,
BookmarkablePageLink cannot correctly pass PageParameters with Chinese characters.,WICKET-1865,12406032,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,smallufo,smallufo,08/Oct/08 16:43,24/Aug/10 23:40,13/Mar/19 23:15,24/Aug/10 23:40,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,1,,,,,,,,"I have a form , after submitting that form , it will embed some paramaters and redirect to some page :

public void onSubmit()
{
  PageParameters pps = new PageParameters();
  pps.put(""place"", ""台北市""); // ""台北市"" is Chinese characters : ""Taipei""
  setResponsePage(FirstPage.class , pps);
}

When directed to FirstPage.java , the URL correctly shows ""/place/台北市""
and I can use URLDecoder to get correct place = ""台北市"" :
place = URLDecoder.decode(pps.getString(""place"") , ""UTF-8"");

Everything seems works fine here...
But things get complicated after adding a NavigationPanel to the FirstPage :

public class LeftNavigationPanel extends Panel
{
  public LeftNavigationPanel(String id , final PageParameters pps)
  {
    add(new BookmarkablePageLink(""secondPage"" , SecondPage.class , pps));
    ... 
  }
}


I want the SecondPage appends whatever appended in the FirstPage , so I pass PageParameters to it.

Here comes the problem :
In the SecondPage , parameter ""place"" is not ""台北市"" any more , 
it becomes :
%25E5%258F%25B0%25E5%258C%2597%25E5%25B8%2582

I feel it is a bug regarding to BookmarkablePageLink.
Can you confirm / fix it ?","Wicket 1.3.4 , Server : CentOS 5.2 UTF8 encoded environment (LANG=zh_TW.UTF-8) , Resin 3.1.6 , JDK 1.6.0_03
Client : Windows XP Pro Traditional Chinese version , Firefox 3.0.3 Chinese version",,,,,,,,,,,,,,,,,,11/Feb/09 21:24;astubbs;wicket-1865.zip;https://issues.apache.org/jira/secure/attachment/12400040/wicket-1865.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-11 21:24:54.898,,,no_permission,,,,,,,,,,,202792,,,Tue Aug 24 23:40:38 UTC 2010,,,,,,0|i0kf1r:,117255,,,,,,,,"11/Feb/09 21:24;astubbs;A quick start which tries to re-produce the problem, and fails.

Please try out the quick start, and see if it works, or not for you. 

Can you either please clarify what you have that is different from the quick start. If you can still re-produce the problem, please post your quick start.

Also, you shouldn't need to use URLDecoder as Wicket does this for you. In our test we tried both however.",11/Feb/09 21:38;astubbs;Tested against Wicket trunk and 1.3.4,"24/Aug/10 23:40;ivaynberg;tested with latest 1.4-snap, works",,,,,,,,,,,,,,,,,,,,,
"TabbedPanel, tabsVisibilityCache throws IndexOutOfBounds",WICKET-2594,12442100,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,thies,thies,01/Dec/09 15:00,25/Jul/10 09:10,13/Mar/19 23:15,04/Dec/09 06:02,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-extensions,,,,0,,,,,,,,"With wicket extensions 1.4.3, TabbedPanel throws an IndexOutOfBounds exception on the tabsVisibilityCache array when adding more tabs after the panel is rendered.

The onBeforeRender method calls the isTabVisible method which initializes an array of booleans for visibility caching. The length of this array is the amount of tabs added at that time. When - through ajax - a new tab is added after rendering and setSelectedTab is called an exception is thrown at:
   Boolean visible = tabsVisibilityCache[tabIndex];

Fix: increase the array before checking or use a List. In TabbedPanel

	private boolean isTabVisible(int tabIndex)
	{
		if (tabsVisibilityCache == null)
		{
			tabsVisibilityCache = new Boolean[getTabs().size()];
		}

		if (tabsVisibilityCache.length < tabIndex + 1)
		{
			tabsVisibilityCache = Arrays.copyOf(tabsVisibilityCache, tabIndex + 1);		
		}
		
		if (tabsVisibilityCache.length > 0)
		{
			Boolean visible = tabsVisibilityCache[tabIndex];
			
			if (visible == null)
			{
				visible = getTabs().get(tabIndex).isVisible();
				tabsVisibilityCache[tabIndex] = visible;
			}
			
			return visible;
		}
		else
		{
			return false;
		}
	}",,,,,,,,,,,,,,,,,,,01/Dec/09 16:20;thies;TabbedPanelTest.java;https://issues.apache.org/jira/secure/attachment/12426549/TabbedPanelTest.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-04 06:01:28.747,,,no_permission,,,,,,,,,,,203468,,,Sun Jul 25 09:10:58 UTC 2010,,,,,,0|i0kczb:,116920,,,,,,,,"01/Dec/09 16:20;thies;Attached junit test demonstrating the behaviour

","04/Dec/09 06:01;ivaynberg;the testcase doesnt make sense. it will fail even after the change in setSelectedTab(), you cannot call setSelectedTab(x) before there are x tabs in the tabbed panel...",04/Dec/09 06:02;ivaynberg;i committed the visibility cache change but not the test,"22/Jul/10 07:15;hudson;Integrated in Apache Wicket 1.4.x #53 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/53/])
    ","25/Jul/10 09:10;hudson;Integrated in Apache Wicket 1.5.x #168 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/168/])
    ",,,,,,,,,,,,,,,,,,,
AjaxLink setResponsePage to a stream = queue is not resumed after redirect.,WICKET-1838,12404459,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,lletourn,lletourn,16/Sep/08 17:52,22/Jul/10 15:25,13/Mar/19 23:15,17/Sep/08 20:17,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"When I click on an AjaxLink that does a setResponsePage towards a ResourceStreamRequestTarget, afetr the download, the links on the page become non-clickable. In the Ajax debug window I get a 'Channel busy - postponing'.

Details:
I have a page with many AjaxLinks. The links check whether some data is available. If the data is available it does a setResponsePage towards a BookmarkablePage that can work with the data.

The Page that handles the data is mounted on a 'custom' QueryStringUrlCodingStrategy. In 'decode()' the strategy checks if manipulations are needed. If not the strategy answers with a ResourceStreamRequestTarget.

So here's the path that causes the error:
onClick->setResponsePage->decode->ResourceStreamRequestTarget

Once a link has been clicked no other links are clickable on the page.

The redirect seems to happen, but only once.

Say there are 3 files to download on the page, I would need to:
click link1 -> download the file -> refresh the page -> click link2 -. etc.

I shouldn't need to refresh the page.

If I don't refresh the page, when I click link2 I'll get 'Channel busy - postponing'. 

AjaxLink Code:
-------------------------------------------->
public void onClick(AjaxRequestTarget target)
            {
                if(file.isOnline()) {
                    PageParameters params = new PageParameters();
                    params.add(""id"", String.valueOf(typeId));
                    params.add(""type"", type.toString());

                    setResponsePage(StageableFilePage.class, params);
                }
                else {
                    modal.show(target);
                }
            }

-------------------------------------------->
QueryStringUrlCodingStrategy Code:
-------------------------------------------->
    public IRequestTarget decode(RequestParameters requestParameters) {
    [..get id and fileType and make sure the user has priviledges..]
        final StageableFile file = resolveFile(id, fileType);
        if(file.isOnline()) {
            IResourceStream resourceStream = new FileResourceStream(file);

            //Content-type will be set by the ResourceStreamRequestTarget

            ResourceStreamRequestTarget rsrt = new ResourceStreamRequestTarget(resourceStream) {
                @Override
                public String getFileName() {
                    return file.getName();
                }
            };

            return rsrt;
        }
        else {
            return super.decode(requestParameters);
        }
    }
-------------------------------------------->
","wicket 1.3.4
tomcat 5.5.16",,,,,,,,,,,,,,WICKET-2958,,,,17/Sep/08 18:35;lletourn;wicket-ajax.patch;https://issues.apache.org/jira/secure/attachment/12390292/wicket-ajax.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-17 20:17:13.691,,,no_permission,,,,,,,,,,,202766,,,Wed Sep 17 20:17:13 UTC 2008,,,,,,0|i0kf3z:,117265,,,,,,,,17/Sep/08 18:35;lletourn;This patch solves the problem for me.,17/Sep/08 20:17;knopp;applied to 1.3 branch and trunk.,,,,,,,,,,,,,,,,,,,,,,
wrong redirect BrowserInfoPage and mounted Pages,WICKET-896,12376971,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,28/Aug/07 06:05,06/Jul/10 19:33,13/Mar/19 23:15,28/Aug/07 06:06,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,BrowserInfoPage does wrong redirect for mounted pages. See http://www.nabble.com/Redirected-after-BrowserInfoPage-and-mounted-Pages.-tf4301676.html#a12244373,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201916,,,2007-08-28 06:05:17.0,,,,,,0|i0khjr:,117660,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IComponentResolvers are not supported inside wicket:enclosure,WICKET-2485,12436360,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,golfman,golfman,22/Sep/09 23:01,04/Jul/10 17:10,13/Mar/19 23:15,24/Sep/09 06:41,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"Wicket has a very powerful IComponentResolver interface that allows a developer to supply their own IComponentResolver implementation which allows component based assembly of pages from a prebuilt collection of panels without needing to make hard coded instantiations of the entire set of panels into *every* page class that *may* use them. This flexibility is incredibly powerful and means that a great amount of page assembly can take place purely in the markup.

Unfortunately any components embedded within a <wicket:enclosure> markup </wicket:enclosure> tag (and possibly other 'wrapping' style tags like wicket:border) will not trigger the normal 'component resolution' process that calls the IComponentResolver implementation and so the children cause a 'component not found' page crash unless they are explicitly added to the page that will contain them.

This is extremely undesirable because there can be potentially many, many choices of components/panels that can be enclosed. For reasons of flexibility, code maintainability, efficient CPU and memory usage it is undesirable to add the entire collection of child component candidates to every page that could get instantiated with an enclosure in it.

This bug is trivial to reproduce - set up an IComponentResolver that resolves a simple panel, do not add that panel explicitly to a page, but refer to it inside a wicket:enclosure tag in the page markup. Display the page in a browser.

I think this would be a fairly straightforward fix for someone who has a good understanding of the wicket framework lifecycles. I had a few attempts at rectifying the issue but after much trial and error seem unable to locate the appropriate place for the 'component resolution' to be triggered.","Java 6
JDO implementation: DataNucleus
IOC: exPOJO",7200,7200,,0%,7200,7200,,,,,,,,,,,,24/Sep/09 02:26;chrisc;enclosurebug.zip;https://issues.apache.org/jira/secure/attachment/12420426/enclosurebug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-23 14:22:11.002,,,no_permission,,,,,,,,,,,203369,,,Sun Jul 04 17:10:06 UTC 2010,,,,,,0|i0kd93:,116964,,,,,,,,"23/Sep/09 14:22;ivaynberg;quickstart, testcase?","23/Sep/09 22:45;chrisc;This bug is trivial to reproduce - set up an IComponentResolver that
resolves a simple panel, do not add that panel explicitly to a page, but
refer to it inside a wicket:enclosure tag in the page markup. Display
the page in a browser.

I'll hopefully get some time to create a quickstart that does the above.

I've been promoting Wicket's 'dynamic' approach for page composition
compared with Tapestry's 'static' approach for page composition posts on
The Server Side and others so hopefully this little hiccup can get fixed
soon - I don't want to have egg on my face ;)
","23/Sep/09 23:00;ivaynberg;this has nothing to do with dynamic vs static model. wicket's component hierarchy is fully dynamic with or without the component resolver because you can swap components on the fly - something you cannot do in tapestry.

what you are talking about is letting the markup drive the component creation instead of java, which is not really something that we advocate.","23/Sep/09 23:49;chrisc;component
because
tapestry.

I'm referring to the dynamic nature that allows a designer to
include/exclude a panel from a particular page's markup without
requiring coding changes to make that happen. Wicket currently allows us
to do that but I don't think Tapestry does.
 
advocate.

But isn't that one of the huge benefits of wicket's component based
approach? In a component oriented world components are meant to be
'pluggable'. In the better component frameworks, like Wicket, the
process of 'plugging in' a component is via the addition of a simple
markup reference - too easy!

With this facility our web designers are able to configure which
components appear on a particular page (plugged in) without the coder
having to code each page class so that its constructor 'add()s' *every*
possible panel a designer *might* like to place on a particular page -
that would be extremely innefficient. We have a core set of pages,
probably 20 and each client has their own set of markup. The markup for
any page can be configured differently based on a particular client's
needs. We don't want to get the coders involved in the ""whims and
fancies"" of individual client tastes and desires - which, as you know,
can change on a daily basis. For this we get the web designers to tune
each client's markup set differently to include/exclude the panels that
the client wants and leave the coders in peace.

We've been using this IComponentResolver feature of Wicket for 2 years
now and both our web designers, coders and our clients love it. That's a
huge thing in wicket's favour. It gives the web designer a massive
amount of freedom to include/exclude components (typically panels)
without burdening the Java coders every time they want to make a change
and it means client requests are honoured without a new software
release, just a simple markup change - wicket is absolutely massively
awesome because no other framework we looked at allows us to do that.
Without this feature I don't know how our web app would even work.

Isn't the ability to have that kind of component assembly flexibility
(as an option, not mandatory), by definition, the whole endgame goal of
any good component based framework?

I'm not sure why you don't advocate this feature because this IMHO is
what makes Wicket stand out above other frameworks like Tapestry et al.
It's certainly not breaking any MVC/separations of concerns philosophy
and in fact it's a testament to the success of wicket's implementation
of that philosophy that a web designer can to a certain extent, control
the assembly of components making up a page (presentation layer) in the
world's best 'component based framework' that I've found so far, simply
by including/excluding markup inside the page.

It seems strange that IComponentResolver works perfectly when adding
components to a page directly but not when added within an enclosure (or
a border). It seems inconsistent. It means that when a client turns off
certain menus in the side panels we're left with the artifacts of an
empty <li></li> tag - which looks really ugly especially if the CSS
styling for those has vertical space etc.,

There is no need to use IComponentResolver when creating a webapp
serving a single website but I suspect that the whole 'variation'
concept is an acknowledgement that many web apps will be serving
multiple, similar sites but with different presentations to cater for
different branding, corporate colours etc.,

Allowing a designer working on different markups to include/exclude
particular panels for different corporate clients isn't such a stretch I
wouldn't think.

This is a snippet from our init method - this got added within weeks of
taking on Wicket and I suspect many others do it also.

// Do not raise an error if a Java component is not used by the 
// markup - this lets us provide a panel with 'optional' components
// without raising an error for those that is does not use
getDebugSettings().setComponentUseCheck(false);

I'm a big supporter of best practices in coding and I crucify
programmers who put business logic in UI code etc., and I've been
writing MVC based desktop apps since 1995 but I can't think of any best
practice that this, particularly awesome, feature is breaking. In fact
without this feature our entire web app simply couldn't work with
Wicket.
","24/Sep/09 00:29;ivaynberg;weve had this discussion on the list. this is not the place for it.

in the time it took you to write this you could have provided the quickstart and the testcase. in the time it took me to read this i could have been well on my way to solving your problem.","24/Sep/09 00:37;chrisc;could

You make a very good point :)

Sorry about the rant, I'll stop now and get that quickstart built.
",24/Sep/09 02:26;chrisc;Here's the quickstart that demonstrates the problem. If you comment out the <wicket:enclosure> tags in HomePage.thml you will see that the page works fine.,"24/Sep/09 07:01;chrisc;Excellent! Once again, thanks Igor for a great framework.

]
https://issues.apache.org/jira/browse/WICKET-2485
a
set
flexibility is
markup
process
cause
the
is
to
but
the
has a
to

","25/May/10 00:17;hudson;Integrated in Apache Wicket 1.5.x #65 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/65/])
    ",04/Jul/10 16:48;jdonnerstag;tested and now working in 1.5 (trunk),"04/Jul/10 17:10;hudson;Integrated in Apache Wicket 1.5.x #128 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/128/])
    fixed WICKET-2485: issue fixed in 1.5 
Issue: WICKET-2485
",,,,,,,,,,,,,
"Regression: ""Could not find child with id: <ID> in the wicket:enclosure"" for non-component tag",WICKET-2506,12437264,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,05/Oct/09 08:56,04/Jul/10 17:06,13/Mar/19 23:15,05/Oct/09 19:27,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket,,,,2,,,,,,,,"Attached testcase passes with wicket-1.4.1 but fails with 1.4.2 saying:

org.apache.wicket.WicketRuntimeException: Could not find child with id: radio in the wicket:enclosure
	at org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:210)
	at org.apache.wicket.markup.html.internal.Enclosure.ensureAllChildrenPresent(Enclosure.java:249)
	at org.apache.wicket.markup.html.internal.Enclosure.onComponentTagBody(Enclosure.java:169)
	at org.apache.wicket.Component.renderComponent(Component.java:2626)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
	at org.apache.wicket.Component.render(Component.java:2457)
	at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)
	at org.apache.wicket.markup.resolver.EnclosureResolver.resolve(EnclosureResolver.java:61)
	at org.apache.wicket.markup.resolver.ComponentResolvers.resolve(ComponentResolvers.java:81)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1418)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1577)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1501)
	at org.apache.wicket.Component.renderComponent(Component.java:2626)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
	at org.apache.wicket.Component.render(Component.java:2457)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1528)
	at org.apache.wicket.Page.onRender(Page.java:1545)
	at org.apache.wicket.Component.render(Component.java:2457)
	at org.apache.wicket.Page.renderPage(Page.java:914)
	at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:262)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:594)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:478)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:390)
	at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:300)
	at org.apache.wicket.EnclosurePageTest.testRender(EnclosurePageTest.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)",,,,,,,,,,,,,,,,,,,05/Oct/09 08:56;slonopotamus;enclosure-bug.tar.gz;https://issues.apache.org/jira/secure/attachment/12421265/enclosure-bug.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-05 19:27:24.65,,,no_permission,,,,,,,,,,,203386,,,Sun Jul 04 17:06:08 UTC 2010,,,,,,0|i0kd73:,116955,,,,,,,,05/Oct/09 19:27;jdonnerstag;fixed. Thanks. testcase added to core.,"27/Oct/09 11:33;dpeters;I still have this bug in the 1.4.3 release. I upgrade from 1.4.0 where everything works fine.

Example:
HTML:
<wicket:enclosure child=""namefilterlink""><a href=""#"" wicket:id=""namefilterlink""><strong wicket:id=""type"">attribute name filter</strong></a>:</wicket:enclosure>

Exception:
org.apache.wicket.WicketRuntimeException: Could not find child with id: namefilterlink in the wicket:enclosure
at org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:220)
at org.apache.wicket.markup.html.internal.Enclosure.ensureAllChildrenPresent(Enclosure.java:262)
at org.apache.wicket.markup.html.internal.Enclosure.onComponentTagBody(Enclosure.java:169)

If I remove this enclosure, it happens at another one...
",27/Oct/09 22:20;ivaynberg;if the bug is still present please provide an updated quickstart,03/Dec/09 21:45;thedug;I just upgrade to 1.4.3 and experienced this issue.,"04/Dec/09 07:08;slonopotamus;Douglas, you can't experience this issue since it has testcase that was added to wicket testsuite and passes correctly. What you might see is WICKET-2519, that is fixed in 1.4.4","25/May/10 00:17;hudson;Integrated in Apache Wicket 1.5.x #65 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/65/])
    ",04/Jul/10 17:06;jdonnerstag;verified in 1.5 (trunk) => working,,,,,,,,,,,,,,,,,
non-performant Collections.synchronizedMap() should be replaced with ConcurrentMap,WICKET-2741,12456206,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nikita.tovstoles,nikita.tovstoles,12/Feb/10 23:54,18/May/10 22:08,13/Mar/19 23:15,17/May/10 21:23,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.9,1.5-M1,,wicket,,,,0,performance,,,,,,,"The following two classes use Collections.synchronizedMap() --> lots of contention @ concurrent load. 
* RequestListenerInterface.interfaces
* WebApplication.addBufferedResponse
* Injector.inject() - 'cache' field. 

The last instance makes @SpringBean unusable in production (too much contention @ concurrent load)

Here's a sample output of contention around monitor of class java.util.Collections$SynchronizedMap:

{noformat}
+--------------------------------------------------------------------------------------+------------------+-----------------+
|                                         Name                                         |    Time (ms)     |      Count      |
+--------------------------------------------------------------------------------------+------------------+-----------------+
|  +---java.util.Collections$SynchronizedMap.get(Object)                               |  126,101   51 %  |  19,145   52 %  |
|  | |                                                                                 |                  |                 |
|  | +---org.apache.wicket.injection.Injector.inject(Object, IFieldValueFactory)       |  109,912   45 %  |  16,285   44 %  |
|  | |                                                                                 |                  |                 |
|  | +---org.springframework.beans.CachedIntrospectionResults.forClass(Class)          |   16,188    7 %  |   2,860    8 %  |
|  |                                                                                   |                  |                 |
|  +---java.util.Collections$SynchronizedMap.put(Object, Object)                       |  119,343   49 %  |  17,676   48 %  |
|    |                                                                                 |                  |                 |
|    +---org.apache.wicket.injection.Injector.inject(Object, IFieldValueFactory)       |                  |                 |
|      |                                                                               |                  |                 |
|      +---org.apache.wicket.injection.ConfigurableInjector.inject(Object)             |                  |                 |
|        |                                                                             |                  |                 |
|        +---org.apache.wicket.injection.ComponentInjector.onInstantiation(Component)  |  118,060   48 %  |  17,467   47 %  |
|        |                                                                             |                  |                 |
|        +---com.castanealabs.gui.model.ZipCodeValidator.<init>()                      |      686    0 %  |     106    0 %  |
|        |                                                                             |                  |                 |
|        +---com.castanealabs.gui.model.ProductSkuProgramDataProvider.<init>(IModel)   |      337    0 %  |      59    0 %  |
|        |                                                                             |                  |                 |
|        +---com.castanealabs.gui.model.ProductTypeProgramDataProvider.<init>(IModel)  |      259    0 %  |      44    0 %  |
+--------------------------------------------------------------------------------------+------------------+-----------------+

Generated by YourKit Java Profiler 8.0.22 Feb 12, 2010 3:52:25 PM
{noformat}
",,,,,,,,,,,,,,,,,,,17/May/10 15:14;sfussenegger;wicket-2741.patch;https://issues.apache.org/jira/secure/attachment/12444689/wicket-2741.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-13 15:53:19.181,,,no_permission,,,,,,,,,,,203602,,,Tue May 18 22:08:29 UTC 2010,,,,,,0|i0kcmf:,116862,,,,,,,,"13/Feb/10 15:53;jdonnerstag;Obviously with Inspector we can not simple replace Collections.synchronizedMap(new WeakHashMap()) with ConcurrentWeakHashMap since such a class does not exist. And we don't want to add a dependency on a 3rd party library just for that purpose. Since you seem to have all the tests and tools properly set up to validate, may be you could also provide a patch. I'm more than happy to apply it later on to the repository.

Thanks for your help

Juergen","14/Feb/10 17:07;nikita.tovstoles;OK. I've found another perf issue with @SpringBean. Switching back to a locator pattern (injecting beans into WebApplication bean only) improved throughput 5x @ 20 concurrent users. I am happy to help, but would need to understand your reluctance to use a 3rd party library, given the current perf impact. For the above, Google Collections' [MapMaker|http://google-collections.googlecode.com/svn/trunk/javadoc/index.html?com/google/common/collect/MapMaker.html] looks like a solid fit.","14/Feb/10 18:50;jdonnerstag;It's not that we are completely against it, but we careful in adding dependencies. A rule which we treat more strict for wicket-core than subproject such as wicket-spring. But if there is a good reason to add a lib, we'll do.

Since we are using maven, it's a clear benefit if that lib is available via a maven repository (such as http://repo2.maven.org/maven2/com/google/collections/google-collections/)","15/Feb/10 12:24;jcompagner;cant we just copy the specific ConcurrentMap impl we need from google code and add it to our own package?

Else we could just use a ConcurrentHashMap and then use WeakReference keys ourself (but then we need to make sure that we clean it now and then)","17/May/10 15:14;sfussenegger;this patch uses a copy-on-write approach to avoid synchronization for reads. Only in the rare event of a yet unmapped ClassLoader it's going to be a bit slower. While the patch seems to work very well a second or third pair of eyes would be very well appreciated. 

This patch also contains changes by patch for WICKET-2875 and reuses an empty array (new Field[0]) for classes without any injectable fields.","18/May/10 22:08;hudson;Integrated in Apache Wicket 1.5.x #54 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/54/])
    ",,,,,,,,,,,,,,,,,,
Wicket enclosure cannot find wicket container children when hidden and in an extended page,WICKET-2636,12444108,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,richardwilko,richardwilko,23/Dec/09 16:21,17/May/10 15:06,13/Mar/19 23:15,23/Dec/09 18:04,1.4.2,1.4.3,1.4.4,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"When you have a wicket:enclosure, which is in a page which extends markup of another page, then it cannot find wicket:container components which are inside it, when it is hidden.

    	<wicket:extend>
	    	<wicket:enclosure child=""child"">
	    		<div wicket:id=""div""></div>
	    		<wicket:container wicket:id=""container""></wicket:container>
	    		<div wicket:id=""child""></div>
	    	</wicket:enclosure>
    	</wicket:extend>

It gives the normal wicket component not found exception, that you get when you don't reference the wicket:id in markup.

Change the wicket:container to a div (or other html element) and it works correctly.

Works on 1.4.1, 1.4.2 gives a different error, 1.4.3-1.4.5 give the error described here.

It only seems to happen if the page extends markup, if you place it into a page which does not extend markup it works.","Java 6, Linux 64bit",,,,,,,,,,,,,,,,,,23/Dec/09 16:23;richardwilko;enclosure-component.zip;https://issues.apache.org/jira/secure/attachment/12428841/enclosure-component.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-23 17:29:51.984,,,no_permission,,,,,,,,,,,203507,,,Wed Dec 23 18:41:21 UTC 2009,,,,,,0|i0kcuv:,116900,,,,,,,,23/Dec/09 16:23;richardwilko;Quickstart attached which shows the bug,"23/Dec/09 17:29;jdonnerstag;As side note: copied from http://cwiki.apache.org/WICKET/wickets-xhtml-tags.html

<wicket:component> - Creates a Wicket component on the fly. Needs a class attribute. Though this has been in wicket for a long time, it is still kind of an unsupported feature, as most of the core developers believe that this may lead to misuse of the framework. Before heavily relying on this feature, you might want to contact the user list to discuss alternative strategies. (THIS TAG IS NOT SUPPORTED BY THE CORE TEAM)

See WICKET-2541 for a similar problem. Since the solution is so simple, we'll rather strive for a small and easy to maintain Enclosure implementation, than adding lots of (complicated) magic for it to work in every circumstance. But of course is just my opinion",23/Dec/09 18:04;ivaynberg;we keep auto components around after render in 1.5.x so this works there. for now you have to use something other then wicket:container inside the enclosure,"23/Dec/09 18:21;jdonnerstag;Do we? For now the markup is available early but we don't yet add the ""auto"" components early and thus still remove them.","23/Dec/09 18:41;ivaynberg;oh, i thought you already made the change that autos are not removed. i tested the quickstart on trunk and it worked...",,,,,,,,,,,,,,,,,,,
"DatePicker Calendar: wrong year format when 4 digits are used (yyyy), e.g. 2010 --> 0010",WICKET-2767,12458384,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pino_otto,pino_otto,07/Mar/10 14:36,13/May/10 13:17,13/Mar/19 23:15,18/Mar/10 15:18,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket-datetime,,,,5,,,,,,,,"I found that there is still a bug in Wicket 1.4.7 in case that the datePattern is ""dd/MM/yyyy"".

For example, if you use the DatePicker and select a date such as
23/02/2010 from the calendar GUI, the date selected in the DateTextField is ""23/02/0010"".

This is the example Java code:

                // define the date text field for the data decorrenza
                DateTextField dataDecorrenzaDaTextField = new DateTextField(""dataDecorrenzaDa"",
                        new PropertyModel(this.accordo, ""dataDecorrenzaDa""),
                        new PatternDateConverter(""dd/MM/yyyy"", true)
                );

                // add the graphical calendar date picker
                dataDecorrenzaDaTextField.add(new DatePicker() {

                        @Override
                        protected boolean enableMonthYearSelection() {
 
                            // enable month/year selection
                            return true;

                        } // end enableMonthYearSelection

                    } // end DatePicker

                );

I found that the bug is still in the ""wicket-date.js"", line 137.

The wrong code is:

if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);

This line also makes the module 100 on the year, when the year pattern is ""yyyy"".

The fixed code is:

if(datePattern.match(/yyyy+/)) {
    year = year;
} else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);


",,300,300,,0%,300,300,,,,,,,,,,,,18/Mar/10 10:53;jonas;wicket-2767.patch;https://issues.apache.org/jira/secure/attachment/12439145/wicket-2767.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-16 23:17:10.426,,,no_permission,,,,,,,,,,,203622,,,Thu May 13 13:17:06 UTC 2010,,,,,,0|i0kckf:,116853,,,,,,,,"16/Mar/10 23:17;stevemac;We have the same issue, although with a different date pattern.
We are using yyyy/MM/dd and end up with the same 2 digit year.",13/May/10 13:17;martin_kovacik;The same issue is still present in 1.4.8 in DateTimeField component.,,,,,,,,,,,,,,,,,,,,,,
MockHttpServletResponse doesn't delete cookies,WICKET-2630,12443905,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,21/Dec/09 09:59,09/May/10 03:33,13/Mar/19 23:15,22/Dec/09 15:14,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,1,,,,,,,,"From Cookie.setMaxAge javadoc:
     * @param expiry		an integer specifying the maximum age of the
     * 				cookie in seconds; if negative, means
     *				the cookie is not stored; if zero, deletes
     *				the cookie

So, if maxAge is zero, MockHttpServletResponse should remove cookie.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203502,,,Mon Dec 21 11:03:15 UTC 2009,,,,,,0|i0kcvr:,116904,,,,,,,,"21/Dec/09 11:03;slonopotamus;Attention, cookies are stored in two places, MockHttpServletResponse.cookies and MockWebApplication.cookiesOfThisSession",,,,,,,,,,,,,,,,,,,,,,,
setResponsePage redirects to wrong url,WICKET-1998,12411465,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vjaka,vjaka,30/Dec/08 11:13,05/May/10 03:14,13/Mar/19 23:15,07/Jan/09 17:15,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,,,wicket,,,,1,,,,,,,,"The issue WICKET-847 is shown as fixed with fix version 1.3.5 but actually the patch is NOT included in 1.3.5. version, so it is still buggy. Please apply the patch from 1.4.x series.",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-05-04 19:05:48.196,,,no_permission,,,,,,,,,,,202914,,,Wed May 05 03:14:06 UTC 2010,,,,,,0|i0keon:,117196,,,,,,,,04/May/10 19:05;jash;I'm getting this error also on 1.3.6 and 1.3.7,"05/May/10 03:14;jthomerson;Jesse Kivialho - 1.3.x is not supported any longer.  Please upgrade to 1.4.x.  If this is not possible, and you really do have this bug, you will need to run a custom 1.3.x build.",,,,,,,,,,,,,,,,,,,,,,
DatePicker javascript uses 4 symbols for year although pattern contains just yy,WICKET-2648,12444299,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,slonopotamus,slonopotamus,29/Dec/09 10:30,25/Mar/10 07:31,13/Mar/19 23:15,31/Jan/10 04:52,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket-extensions,,,,1,,,,,,,,"Steps to reproduce:
1. Create TextField
2. Add DatePicker with yy for year (en_US locale, SHORT format, for example).
3. Set some date to textfield
4. Open page (year is correctly shown with two digits)
5. Click datepicker icon
Expected: year is still 2-digit
Actual: year becomes 4-digit",,,,,,,,,,,,WICKET-2773,WICKET-2767,,WICKET-2427,,,,16/Feb/10 09:44;count.negative;wicket-datetime.patch;https://issues.apache.org/jira/secure/attachment/12435962/wicket-datetime.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-30 15:15:09.087,,,no_permission,,,,,,,,,,,203519,,,Thu Mar 25 07:31:12 UTC 2010,,,,,,0|i0kctj:,116894,,,,,,,,"30/Jan/10 15:15;count.negative;There is a simple typo in wicket-date.js line 137: 
if(datePattern.match(/byy+/)) year = Wicket.DateTime.padDateFragment(year % 100);
should be
if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);

","31/Jan/10 04:52;ivaynberg;thanks, fixed.","31/Jan/10 10:32;count.negative;Igor, please look at https://issues.apache.org/jira/browse/WICKET-2375 and https://issues.apache.org/jira/browse/WICKET-2427. The solution in WICKET-2427 is very smart and should do for future uses of datepicker. What do you mean?",01/Feb/10 06:37;ivaynberg;a patch against 2427 is more then welcome...,16/Feb/10 17:13;ivaynberg;i thought this issue was fixed?....,"05/Mar/10 16:03;pino_otto;I found that there is still a bug in Wicket 1.4.7 in case that the datePattern is ""dd/MM/yyyy"".

For example, if you use the DatePicker and select a date such as 23/02/2010 from the calendar GUI, the date selected in the DateTextField is ""23/02/0010"".

This is the example Java code:

                // define the date text field for the data decorrenza

		DateTextField dataDecorrenzaDaTextField = new DateTextField(""dataDecorrenzaDa"", 

						new PropertyModel(this.accordo, ""dataDecorrenzaDa""),

						new PatternDateConverter(""dd/MM/yyyy"", true)

		);

		

		// add the graphical calendar date picker

		dataDecorrenzaDaTextField.add(new DatePicker() {



							@Override

							protected boolean enableMonthYearSelection() {

								

								// enable month/year selection

								return true;

								

							} // end enableMonthYearSelection

						

						} // end DatePicker

		);

I found that the bug is still in the ""wicket-date.js"", line 137.

The wrong code is:

if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); 

This line also makes the module 100 on the year, when the year pattern is ""yyyy"".

The fixed code is:

if(datePattern.match(/yyyy+/)) {

    year = year;

  } else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);

","15/Mar/10 18:02;lav;I agree with Giovanni -  there is still a bug in Wicket 1.4.7. Please, fix in future versions.","24/Mar/10 08:09;mpalka;In my application I use  the ""yyyy-MM-dd"" pattern. It results in dates saved as 0010-03-23 instead of 2010-03-23. I had to to fall back to wicket  1.4.6. Is there any other bug filled for this? It seems that now all the four digit year patterns are affected.",25/Mar/10 07:31;martin-g;@Marcin: this is fixed in WICKET-2767. Will be included in Wicket 1.4.8.,,,,,,,,,,,,,,,
AbstractAjaxBehavior can not be reused.,WICKET-713,12372683,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,29/Jun/07 11:10,15/Mar/10 16:54,13/Mar/19 23:15,15/Mar/10 16:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,1,,,,,,,,"AbstractAjaxBehavior is receiving a Component upon bind, this is keept even when the Behavior is removed from the Component
so if the Behavior is added again it throws a 
				IllegalStateException(""this kind of handler cannot be attached to ""
					+ ""multiple components; it is already attached to component "" + this.component
					+ "", but component "" + hostComponent + "" wants to be attached too"");",,,,,,,,,,,,,,,,,,,07/Nov/08 19:19;miojo;patch-713.diff;https://issues.apache.org/jira/secure/attachment/12393525/patch-713.diff,11/May/09 11:36;funkattack;patch-mf-713.diff;https://issues.apache.org/jira/secure/attachment/12407767/patch-mf-713.diff,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-21 15:12:46.368,,,no_permission,,,,,,,,,,,201745,,,Mon Mar 15 16:54:40 UTC 2010,,,,,,0|i0ki4f:,117753,,,,,,,,21/Aug/07 15:12;jbq;Looks reasonable to do for the next release,"26/Aug/07 17:05;knopp;This would require adding a method to IBehavior, e.g. IBehavior.unbind(). I'm not sure it's not too late for that to do, at least for 1.3. If you feel otherwise, please start a vote at -dev.","12/Jun/08 22:57;thrantal;Martin, is there a practical need to reuse the same Behavior instance? Do you have (or did you have :)) a concrete example?

Others, what do you think?

","13/Jun/08 08:28;funkattack;it still lives look at:
https://wicket-stuff.svn.sourceforge.net/svnroot/wicket-stuff/trunk/wicket-contrib-gmap2-examples/src/main/java/wicket/contrib/examples/gmap/listen/HomePage.java
(in the lower third, or search for 'https://issues.apache.org/jira/browse/WICKET-713')

I got a counter question on this one.
IBehavior may be added to Component.
Component calls IBehaviors bind while adding it.
IBehavior may be removed from Component,
But why is there is no unbind callback?
And why may the removed IBehavior never be readded to any Component again?

This way Behaviors feel like half baked Components.

Though there are signs in the code, esp. when managing the versions of a Component, that an onUnBind in IBehavior might have unwanted side effects.",06/Jul/08 13:05;dashorst;Moved to next milestone release.,"06/Jul/08 19:37;thrantal;This is a new feature so belongs to 1.5, right?

But thanks Martin, I think unBind would make sense in the light of your example.","07/Nov/08 19:19;miojo;Patch attached.

It adds an unbind method to IBehavior, fix AbstractBehavior and of course AjaxAbstractBehavior, cleaning up the referenced component.

cheers,
Bruno","17/Apr/09 04:56;sagaranilkumar;Hi All,
          is their any work around for this issue ? without using the patch ?

with regards,
Anilkumar.S","17/Apr/09 18:31;ivaynberg;there is very little reason to reuse behaviors, they are cheap to create. because this requires a modification to a widely used interface we cannot implement this until version 1.5","11/May/09 11:36;funkattack;based on Brunos patch I gave my try on this subject.

Rethinking this issue, brought to me that not beeing able to readd an AbstractAjaxBehavior is not the real issue here. They are indeed verry cheap to recreate. But its the lack of the unBind method in the interface and its (not) support by component. That way noone can be notified when the behavior is removed.",15/Mar/10 16:54;ivaynberg;added ibehavior#unbind,,,,,,,,,,,,,
bookmarkablepagelink broken on ajaxupdate,WICKET-2717,12455229,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vineetsemwal,vineetsemwal,03/Feb/10 20:33,08/Mar/10 07:53,13/Mar/19 23:15,05/Feb/10 01:59,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,,,wicket,,,,1,,,,,,,,"bookmarkablepagelink broken on ajax update ,i see the problem in 1.4.6,1.4.5 doesn't have it.
I am attaching the quickstart for the problem.","wicket 1.4.6,jetty 6.1.4",,,,,,,,,,,,,,,,,,03/Feb/10 20:43;vineetsemwal;quickie2.jar;https://issues.apache.org/jira/secure/attachment/12434707/quickie2.jar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-07 14:47:15.464,,,no_permission,,,,,,,,,,,203578,,,Sun Feb 07 16:10:33 UTC 2010,,,,,,0|i0kco7:,116870,,,,,,,,"03/Feb/10 21:01;vineetsemwal;the problem is also described  in the following link :-

 http://old.nabble.com/Bookmarkable-link-url-is-broken-in-1.4.6-after-ajax-update-ts27439970.html","07/Feb/10 14:47;alexandru.objelean;I've noticed that WICKET-2491 is marked as resolved. But I checked against latest version from branch-1.4.x and it doesn't seem to be fixed. Is the tested version wrong? Or should the issue be reopened?
","07/Feb/10 16:10;vladimir.kovalyuk;I believe it shouldn't be re-opened because the reason is different.

I propose the following patch:

UploadWebRequest.java:

    @Override

    public WebRequest newMultipartWebRequest(Bytes maxsize) {

        try {

            MultipartRequest multipartRequest = new MultipartRequest(req, maxsize);

            multipartRequest.setRequestParameters(getRequestParameters());  // the difference is here

            return multipartRequest;

        } catch (FileUploadException e) {

            throw new WicketRuntimeException(e);

        }

  }",,,,,,,,,,,,,,,,,,,,,
Form#anyComponentError change in 1.4 breaks validation,WICKET-2734,12455820,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,rmorrisey,rmorrisey,09/Feb/10 19:52,05/Mar/10 21:56,13/Mar/19 23:15,11/Feb/10 18:04,1.4.0,1.4.1,1.4.2,1.4.3,1.4.4,1.4.5,1.4.6,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,1.4-RC2,1.4-RC3,1.4-RC4,1.4-RC5,1.4-RC6,1.4-RC7,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,anyComponentError,Form,hasError,hasErrorMessage,validation,wicket,,"In wicket 1.4, Form#anyComponentError was changed so that it only calls hasErrorMessage() on instances of Form or FormComponent. This is a validation-breaking change. Currently, when Component#error(...) is called for any component which is neither a Form nor FormComponent, the error is ignored by a Form#hasError() check on the form containing this component. Please change it back to check any Component.",wicket 1.4.5,,,,,,,,,,,,,,,,,,09/Feb/10 21:45;rmorrisey;anyComponentErrorTest.zip;https://issues.apache.org/jira/secure/attachment/12435348/anyComponentErrorTest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-09 20:31:47.022,,,no_permission,,,,,,,,,,,203595,,,Fri Mar 05 21:56:20 UTC 2010,,,,,,0|i0kcnb:,116866,,,,,,,,09/Feb/10 20:31;jdonnerstag;please provide a junit test case for us to validate possible patches and to make sure future changes to Wicket core don't accidentially change the behavior. Thanks a lot.,09/Feb/10 21:45;rmorrisey;Attached a quickstart which includes a sample page and a junit test case to demonstrate this behavior. Page currently throws an assertion failure if an error is set on the component (since Form#onSubmit is called instead of Form#onError).,11/Feb/10 18:04;jdonnerstag;couldn't really test it in 1.5,"05/Mar/10 21:56;rmorrisey;Forward-ported the fix to my local copy, and verified that this does correct the issue. Thanks!",,,,,,,,,,,,,,,,,,,,
Versioned form with FileUploadField will expire page if you submit the form twice.,WICKET-2688,12445926,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,t_yano,t_yano,19/Jan/10 12:49,03/Mar/10 04:17,13/Mar/19 23:15,05/Feb/10 04:47,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,1,,,,,,,,"If a form has FileUploadField and versioned, Page, on which the form is, will be expired at second post of the form.
run a attached project file. In this sample program, onSubmit() method of Form always displays same page with an error message. Post the form again, then page will be expired.

This problem will occur if a versioned property of FileUploadField is true. If the property is false, this problem never occurs.

If you use setVersioned() method of Form with FileUploadField, the 'versioned' property of the FileUploadField becomes true automatically, so this problem easily occurs in the timing not anticipated.


I noticed version number of page up twice on 'detach' time, if FileUploadField is versioned.

I expect, this problem might occur only for components with isMultiPart() == true, although I could not found the evidence. 
If so, 'versioned' property of such component must never become true. In addition, setVersioned() method of Form component should check children are Multipart or not, like below.

@Override
public final Component setVersioned(final boolean isVersioned)
{
	super.setVersioned(isVersioned);

	// Search for FormComponents like TextField etc.
	visitFormComponents(new FormComponent.AbstractVisitor()
	{
		@Override
		public void onFormComponent(final FormComponent<?> formComponent)
		{
		    if(!formComponent.isMultiPart()) {  //set true only if the child is not multipart component.
			    formComponent.setVersioned(isVersioned);
			}
		}
	});
	return this;
}",,,,,,,,,,,,,,,,,,,24/Jan/10 09:53;martin-g;WICKET-2688.patch;https://issues.apache.org/jira/secure/attachment/12431239/WICKET-2688.patch,19/Jan/10 12:52;t_yano;wicket-bugtest.zip;https://issues.apache.org/jira/secure/attachment/12430738/wicket-bugtest.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-01-24 09:53:33.105,,,no_permission,,,,,,,,,,,203551,,,Wed Mar 03 04:15:46 UTC 2010,,,,,,0|i0kcq7:,116879,,,,,,,,19/Jan/10 12:52;t_yano;a sample project file.,24/Jan/10 09:53;martin-g;Attaching a patch that prevents tracking of changes during the RequestCycle detach phase.,02/Mar/10 13:28;t_yano;I applied your patch and the patch solved this issue. Thank you.,"02/Mar/10 13:41;martin-g;Tsutomu, this was fixed with another solution in Wicket 1.4.7.
You could download 1.4.7 artefacts from http://people.apache.org/~ivaynberg/wicket-1.4.7/ and try again. There is a vote currently at dev@wicket.apache.org mailing list for the release.","03/Mar/10 04:15;t_yano;I tested with wicket 1.4.7.

- sample project, which I uploaded on this page, works correctly with wicket 1.4.7
- my project, on which I found this issue, DID NOT work correctly with wicket 1.4.7. When I posted same file twice on versioned form, the page expired. I don't find out the reason yet.
  When the form is not versioned, the page works correctly.

",,,,,,,,,,,,,,,,,,,
url-escaping is not undone for requestcodingstrategy,WICKET-1825,12403993,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,annb,annb,09/Sep/08 14:59,02/Mar/10 09:06,13/Mar/19 23:15,19/Jan/10 06:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,,,,,,,0,,,,,,,,"When a resourceUrl with special characters is invoked by Wicket. Wicket does not read it correctly.

In the test-application I add two images.
The first one I call with a special character in the name of the resourceReference and it doesn't work (ERROR - shared resource org.apache.wicket.Application/withSpecialChar%DB%A9 not found).
The second one is the same image but with no special character in the call and that works fine.

Please also review WicketFilter, the method:getLastModified(final HttpServletRequest servletRequest). This need also be fixed.

I resolved the problem by changing the resourceReferenceKey in WicketFilter, getLastModified to:
 final  String resourceReferenceKey = WicketURLDecoder.PATH_INSTANCE.decode(pathInfo.substring(WebRequestCodingStrategy.RESOURCES_PATH_PREFIX.length()));
and I changed addResourceParameters(Request request, RequestParameters parameters) in WebRequestCodingStrategy:
StringBuffer path = new StringBuffer(WicketURLDecoder.PATH_INSTANCE.decode(pathInfo.substring(ix)));",,,,,,,,,,,,,,,,,,,09/Sep/08 15:01;annb;ResourceImgTest.html;https://issues.apache.org/jira/secure/attachment/12389751/ResourceImgTest.html,09/Sep/08 15:01;annb;ResourceImgTest.java;https://issues.apache.org/jira/secure/attachment/12389752/ResourceImgTest.java,09/Sep/08 15:01;annb;TestResourceReference.java;https://issues.apache.org/jira/secure/attachment/12389753/TestResourceReference.java,02/Mar/10 09:02;zbigniewruchala;patch.txt;https://issues.apache.org/jira/secure/attachment/12437588/patch.txt,,,,,4.0,,,,,,,,,,,,,,,,,,,2010-03-02 09:01:19.523,,,no_permission,,,,,,,,,,,202755,,,Tue Mar 02 09:01:19 UTC 2010,,,,,,0|i0kf53:,117270,,,,,,,,09/Sep/08 15:01;annb;Test application with the example of the error.,"02/Mar/10 09:01;zbigniewruchala;The fix produces a lot of : ""No current Application found - defaulting encoding to UTF-8"" entries in my logs which are redundant (WARN level)
The attached patch moves calling WicketURLDecoder.PATH_INSTANCE.decode(..) after thread-local is set.
",,,,,,,,,,,,,,,,,,,,,,
RequestUtils.toAbsolutePath() not output hostname and url-pattern in AJAX,WICKET-2312,12427305,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,smallufo,smallufo,07/Jun/09 19:13,19/Feb/10 13:23,13/Mar/19 23:15,19/Jan/10 00:26,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,,,wicket,,,,3,,,,,,,,"This is my code :

String a1 = RequestUtils.toAbsolutePath(getRequestCycle().urlFor(CurrentPage.class , pps).toString());
System.out.println(""a1 = "" + a1);

Link link = new AjaxFallbackLink(""link"")
{
  @Override
  public void onClick(AjaxRequestTarget target)
  {
    String a2 = RequestUtils.toAbsolutePath(getRequestCycle().urlFor(CurrentPage.class , pps).toString());
    System.out.println(""a2 = "" + a2);
  }
};

The wicket application's url-pattern is ""/app/*""
I am viewing a mounted bookmarkable page : CurrentPage , with an AJAX-link.
I want to get the absolute Path in the AJAX onClick() method ,

Here is the output :

a1 = http://foo.bar/app/CurrentPage/para1/value1
a2 = http:///CurrentPage/para1/value1

a1 is correct , while a2 lacks of hostname and url pattern (which WicketServlet listens to)
","CentOS release 5.2 , systemwide UTF-8 , resin-3.1.6 , use WicketServlet instead of WicketFilter",,,,,,,,,,,,,,WICKET-2717,,,,09/Jun/09 14:34;smallufo;src-wicket-2312.tar.gz;https://issues.apache.org/jira/secure/attachment/12410225/src-wicket-2312.tar.gz,23/Jun/09 17:57;mbrictson;wicket-2312-patch.txt;https://issues.apache.org/jira/secure/attachment/12411558/wicket-2312-patch.txt,23/Jun/09 17:52;mbrictson;wicket-2312-quickstart-1.4rc5.zip;https://issues.apache.org/jira/secure/attachment/12411556/wicket-2312-quickstart-1.4rc5.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-06-22 17:25:22.907,,,no_permission,,,,,,,,,,,203205,,,Fri Feb 19 13:23:34 UTC 2010,,,,,,0|i0kdq7:,117041,,,,,,,,"09/Jun/09 14:34;smallufo;This is my quickstart code :

Step :

Deploy :
The webapp context is ""quickstart""
WicketServlet listens to ""/app/*"" :

  <servlet>
    <servlet-name>TestApp</servlet-name>
    <servlet-class>org.apache.wicket.protocol.http.WicketServlet</servlet-class>
    <init-param>
      <param-name>applicationClassName</param-name>
      <param-value>quickstart.MainApplication</param-value>
    </init-param>
    <init-param>
      <param-name>configuration</param-name>
      <param-value>DEPLOYMENT</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>TestApp</servlet-name>
    <url-pattern>/app/*</url-pattern>
  </servlet-mapping>

The ""CurrentPage"" is mounted to ""/CurrentPage"" by 
  mountBookmarkablePage(""/CurrentPage"" , CurrentPage.class);

Test steps :

Step 1:
user browser to link to http://foo.bar:8080/quickstart/app/CurrentPage

outer = http://foo.bar:8080/quickstart/app/CurrentPage
inner = http://foo.bar:8080/quickstart/app/CurrentPage

both are correct.

But ...

Step 2:
Open browser to connect to :
http://foo.bar:8080/quickstart/app/CurrentPage/key/value
outer = http://foo.bar:8080/quickstart/app/CurrentPage/key/value/
inner = http://foo.bar:8080/CurrentPage/key/value/

""outer"" is correct , but ""inner"" is wrong !
""inner"" lacks of context(""quickstart"") and path(""app"") here.
",22/Jun/09 17:25;mbrictson;I am running into this same problem in 1.4-rc5 and in trunk.,23/Jun/09 17:52;mbrictson;Attaching quickstart that illustrates the problem in Wicket 1.4-rc5.,"23/Jun/09 17:57;mbrictson;I'm attaching a patch for WebRequestCodingStrategy that should fix this problem in trunk.

The solution I'm proposing is to skip the step where ""../"" components are prepended to mounted URLs in the case of an ajax request.","19/Feb/10 13:23;proginov;This solution seems to have created a new bug. We use Bookmarkable page and have a redirection on an ajax link like this : 

Link link = new AjaxLink(""link"") {
  @Override
  public void onClick(AjaxRequestTarget target)  {
    setResponsePage( ModelePagePanier.stdClass );
  }
}; 

The start page is http://website.com/produits/racine/autoportee.html and the link should redirect to http://website.com/panier.html but redirect to http://website.com/produits/racine/panier.html.

The mountpath associated to the class ModelePagePanier is ""panier.html"" and the mount path associated with the start page is ""produits/racine/autoportee.html"".

With wicket 1.4.5 everything works fine but since this modification in 1.4.6 my redirection in ajax links doesn't work anymore.

",,,,,,,,,,,,,,,,,,,
Radio getMarkupId not working correctly,WICKET-2510,12437374,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,fkleinko,fkleinko,06/Oct/09 10:00,14/Feb/10 14:54,13/Mar/19 23:15,05/Feb/10 04:13,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,"the getMarkupId(true) is giving id of the radio

but in the onbeforerender the markupid is changed with a prefix. This prefix is not added when asking getMarkupId",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-19 06:34:40.056,,,no_permission,,,,,,,,,,,203390,,,Mon Oct 19 06:35:32 UTC 2009,,,,,,0|i0kd6f:,116952,,,,,,,,"19/Oct/09 06:34;ivaynberg;not really sure what to do here. the radio needs to tweak its markupid in a certain way, mainly to support javascript traversal of all radios in a group. i guess we will have to rewrite the javascript, perhaps each radio registers itself in a javascript object that represents the group...","19/Oct/09 06:35;ivaynberg;or better yet, we put the prefix into the name attr",,,,,,,,,,,,,,,,,,,,,,
setResponsePage doesn't work with MixedParamUrlCodingStrategy,WICKET-2738,12456049,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,dsouza42,dsouza42,11/Feb/10 18:14,14/Feb/10 12:24,13/Mar/19 23:15,12/Feb/10 12:39,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,,,wicket,,,,0,,,,,,,,"When I call setResponsePage() on a page that uses MixedParamUrlCodingStrategy the URL for the destination page is mixed with the URL from the current page.

In my case, take the URL for a product such as:

/app/product/1402

when the user clicks the ""Buy"" button it adds the product to the shopping cart and calls:

setResponsePage(ShoppingCartPage.class)

resulting in a redirect to:

/app/product/checkout/shoppingcart

when it should be:
/app/checkout/shoppingcart

Works fine in wicket 1.4.5",Wicket 1.4.6 only,,,,,,,,,,,,,,,,,,13/Feb/10 21:54;jdonnerstag;myproject.zip;https://issues.apache.org/jira/secure/attachment/12435788/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-11 19:57:41.008,,,no_permission,,,,,,,,,,,203599,,,Sun Feb 14 12:20:34 UTC 2010,,,,,,0|i0kcn3:,116865,,,,,,,,"11/Feb/10 19:57;ivaynberg;please test with latest 1.4.x snapshot, if still broken please attach a quickstart.","12/Feb/10 12:38;dsouza42;Tested with the latest snapshot and it's fixed.
Thanks",12/Feb/10 12:39;dsouza42;Works on the latest 1.4 snapshot,"13/Feb/10 17:53;vjaka;I do not see SVN commits on JIRA issue and so cannot test whatever the it is fixed and apply a fix, so we reverted to wicket 1.4.5 on our production
1.4.6 version is totally unusable due to this bug if BookmarkablePageRequestTargetUrlCodingStrategy is being used",13/Feb/10 18:04;jdonnerstag;may be your use case is different. Please provide a junit test or quickstart,"13/Feb/10 21:23;vjaka;No, this is the same problem, to reproduce:

1. mount page like:
mount(new BookmarkablePageRequestTargetUrlCodingStrategy(""mail"", MailPage.class, null));

2. navigate to MailPage with PageParameters having ""folder"" -> ""inbox"" (key/value pair), url will be correct : http://localhost:8080/mail/folder/inbox/

3. add a link to this page,
PageParameters params = new PageParameters();
params.put(""folder"", ""new"");
add(new BookmarkablePageLink<MailPage>(""newMessage"", MailPage.class, params)));

4. click on it, you will get error report from tomcat and url in the browser will be http://localhost:8080/mail/folder/inbox/mail/folder/new
The correct url in the browser (and it was so in wicket 1.4.5 and below) would be http://localhost:8080/mail/folder/new

So the problem is that no leading / (context path) is set to the links so the leads to incorrect urls.

PS: I am quite sure that the causes of many exceptions in the console like:
java.lang.ClassCastException: [Ljava.lang.String; cannot be cast to java.lang.String
        at org.apache.wicket.request.target.coding.BookmarkablePageRequestTargetUrlCodingStrategy.decode(BookmarkablePageRequestTargetUrlCodingStrategy.java:91)
        at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.targetForRequest(WebRequestCodingStrategy.java:515)
        at org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:191)
        at org.apache.wicket.RequestCycle.step(RequestCycle.java:1310)
        at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)
        at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
",13/Feb/10 21:54;jdonnerstag;Please check the quickstart. It's working on my computer (jetty),"14/Feb/10 01:56;vjaka;Yes, it works.
Your quick start code and in-project code generates <a href=""../../../mail/folder/new""> - not too pretty but acceptable :)

However, the project generates <a href=""mail/folder/new"">. No idea why neither ../.. nor context root is prepended to the URL...","14/Feb/10 08:39;jdonnerstag;>> Your quick start code and in-project code generates <a href=""../../../mail/folder/new""> - not too pretty but acceptable :)
You described the problem, I anticpated an implemented, but that implementation is different than  yours => that why we ask for quickstarts. 

>>However, the project generates <a href=""mail/folder/new"">. No idea why neither ../.. nor context root is prepended to the URL..
context: Change it via setContextPath(""/"") in Start.java 
why should it prepend ../..??
","14/Feb/10 12:06;vjaka;Ok, I will try to cut out as much as possible from the project to get the exact problem in a single quick-start like project.

It should prepend ""../.."" or ""/"" as the location when we press the link is already ""/mail/folder/inbox"", so the valid URLs should be either started from context path, or navigated to it via ""../"".

I was testing your quickstart in Tomcat (not Jetty), and have no idea how to specify the context path to Wicket, almost sure that it should be detected :)


The problem is that when I start application (absolutely nothing changed) with wicket 1.4.5 jar files everything works correctly and links works, with 1.4.6 does not. I suspect that some URL generation code have been changed and contains a bug inside, but this is probably quite complex scenario. Maybe it is possible to contact you via e-mail etc to send war of the project and some part of the sources so you would be able to see the difference yourself?","14/Feb/10 12:20;vjaka;Most probably the bug was caused by:
https://issues.apache.org/jira/browse/WICKET-2312


Yes, same here
https://issues.apache.org/jira/browse/WICKET-2717
and
http://old.nabble.com/Bookmarkable-link-url-is-broken-in-1.4.6-after-ajax-update-ts27439970.html

Actually WICKET-2717 reverted change from WICKET-2312, so will wait for wicket 1.4.7 bugfix release",,,,,,,,,,,,,
DynamicWizardModel: setActiveStep is called twice,WICKET-2740,12456128,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,vmathon,vmathon,12/Feb/10 10:28,13/Feb/10 16:03,13/Mar/19 23:15,13/Feb/10 16:03,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"DynamicWizardModel constructor calls setActiveStep(startStep);  Thus, the Initial step onInit method is called where as the form is not already created. When calling Wizard init() method, there is a call to DynamicWizardModel reset() method  that leads to a second Initial step onInit method call. This time, the form is created but I have exceptions since I have already added the components of my first step on the first call to onInit.

Removing the call to setActiveStep(startStep); in the DynamicWizardModel constructor solves the bug (note that the activeStep is correctly initialized by the reset method call).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203601,,,2010-02-12 10:28:07.0,,,,,,0|i0kcmn:,116863,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax multipart broken on mounted pages,WICKET-2491,12436616,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vladimir.kovalyuk,vladimir.kovalyuk,25/Sep/09 16:06,09/Feb/10 08:31,13/Mar/19 23:15,25/Oct/09 07:07,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,,,,,0,,,,,,,,"The page is mounted with MixedParamHybridUrlCodingStrategy.
It contains multipart form with FileUploadField and UploadProgressBar components.
It also contains AjaxFallbackButton.
When pressing the button we can see 404 response in ajax debug panel.",,,,,,,,,,,,,,,WICKET-2730,,,,25/Sep/09 16:07;vladimir.kovalyuk;multipart.zip;https://issues.apache.org/jira/secure/attachment/12420563/multipart.zip,29/Sep/09 15:38;vladimir.kovalyuk;wicket-2491-patch.txt;https://issues.apache.org/jira/secure/attachment/12420799/wicket-2491-patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203374,,,2009-09-25 16:06:00.0,,,,,,0|i0kd8n:,116962,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IE does not display ExceptionErrorPage,WICKET-2721,12455439,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,sv3n,sv3n,05/Feb/10 14:36,05/Feb/10 20:29,13/Mar/19 23:15,05/Feb/10 20:29,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,"Same problem as in   WICKET-2718 , in the InternalErrorPage <?xml version=""1.0"" encoding=""UTF-8"" ?> is added.",,,,,,,,,,,,,,,WICKET-2639,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-05 20:29:59.453,,,no_permission,,,,,,,,,,,203582,,,Fri Feb 05 20:29:59 UTC 2010,,,,,,0|i0kcnr:,116868,,,,,,,,05/Feb/10 20:29;jdonnerstag;reverted change for WICKET-26xx,,,,,,,,,,,,,,,,,,,,,,,
More pages missing xml prolog,WICKET-2639,12444158,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,24/Dec/09 10:40,05/Feb/10 20:25,13/Mar/19 23:15,26/Dec/09 08:22,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,"InternalErrorPage.html
ExceptionErrorPage.html",,,,,,,,,,,,,,,WICKET-2599,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-26 08:22:22.619,,,no_permission,,,,,,,,,,,203510,,,Sat Dec 26 08:22:22 UTC 2009,,,,,,0|i0kcuf:,116898,,,,,,,,26/Dec/09 08:22;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Wickettester executeAllTimerBehaviors executes stopped behaviors too,WICKET-2660,12444704,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,robertda,robertda,05/Jan/10 13:37,05/Feb/10 03:29,13/Mar/19 23:15,05/Feb/10 03:29,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,"When attempting to test a page with two ajax timer behaviours the first behaviour is triggered correctly. Then that behaviour is stopped (using the stop function) and a second behaviour is started. If executeAllTimerBehaviors is called again both behaviours are triggered even though one is stopped.

It would be good if the code in BaseWicketTester.executeAllTimerBehaviors(MarkupContainer container) could validate if the behaviour is stopped or not before trying to execute it.",,,,,,,,,,,,,,,,,,,14/Jan/10 18:51;martin-g;WICKET-2660.patch;https://issues.apache.org/jira/secure/attachment/12430281/WICKET-2660.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203528,,,2010-01-05 13:37:07.0,,,,,,0|i0kcsn:,116890,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modal Dialog cannot add AjaxLink when UploadWebRequest is in use,WICKET-2663,12444765,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alexgrant,alexgrant,06/Jan/10 03:42,05/Feb/10 02:59,13/Mar/19 23:15,05/Feb/10 02:59,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,,,,,,,1,,,,,,,,"I have a wicket page, with a URL several levels deep that contains
* An initially hidden file upload field (so that multipart is used)
* A link to open an ajax modal popup
* An initially empty table
I am also using UploadWebRequest to allow the upload progress bar to work.
When I open the popup, type some data and close the popup, it tries to re-render the table with an extra row, which includes an ajax link to re-show the popup to allow editing. This fails.

At least part of the problem is that the ajax response contains an invalid link to wicket-ajax.js. It should start with ""../../"", but that is lost when using UploadWebRequest, as newMultipartWebRequest creates a child request that has no interface parameter and therefore a urlDepth of -1.
Changing the application to use the standard ServletWebRequest solves the problem for Firefox and IE8, but Chrome still fails. I have been unable to determine the cause of this. The Wicket Ajax Debug Log shows this:

ERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element
INFO: Invoking post-call handler(s)...
INFO: Invoking failure handler(s)...
INFO: Response parsed. Now invoking steps...
ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: SyntaxError: Unexpected end of input
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: refocus last focused component not needed/allowed",,,,,,,,,,,,,,,,,,,24/Jan/10 15:52;martin-g;WICKET-2663-problem2.patch;https://issues.apache.org/jira/secure/attachment/12431246/WICKET-2663-problem2.patch,06/Jan/10 03:49;alexgrant;wicket-modal-dialog-add-link-sample-app.zip;https://issues.apache.org/jira/secure/attachment/12429502/wicket-modal-dialog-add-link-sample-app.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-01-24 13:35:37.41,,,no_permission,,,,,,,,,,,203531,,,Tue Jan 26 22:01:15 UTC 2010,,,,,,0|i0kcsf:,116889,,,,,,,,"06/Jan/10 03:48;alexgrant;Attached sample eclipse project containing an application that demonstrates this problem.
Project once running can be accessed at 
http://localhost:8080/wicket-modal-dialog/app",24/Jan/10 13:35;martin-g;It seems Google Chrome has the same problems as Konqueror (both KHTML),"24/Jan/10 15:52;martin-g;Fix the second problem in this ticket: the URLs to resources (wicket-ajax.js, ...) are wrong, they don't have the ""relativePathPrefixToWicketHandler"" because org.apache.wicket.extensions.ajax.markup.html.form.upload.MultipartRequest has no the original RequestParameters.

Now org.apache.wicket.extensions.ajax.markup.html.form.upload.MultipartRequest behaves like org.apache.wicket.protocol.http.servlet.MultipartServletWebRequest.","24/Jan/10 16:00;martin-g;I removed the first patch since it seems the problem was caused by the broken urls to resources files. With fixed org.apache.wicket.extensions.ajax.markup.html.form.upload.MultipartRequest Google Chrome now behaves like Firefox (everything works).

Please test on Internet Explorer.","26/Jan/10 00:08;alexgrant;I have applied your patch (WICKET-2663-problem2.patch) to wicket-1.4.5 (I also tried the trunk but couldn't make it compile).
Firefox 3.5.6 and IE8 both work.
Chrome 3.0 is still broken, with the error mentioned at the bottom of the Description above:

ERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element
INFO: Invoking post-call handler(s)...
INFO: Invoking failure handler(s)...
INFO: Response parsed. Now invoking steps...
ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: SyntaxError: Unexpected end of input
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: refocus last focused component not needed/allowed

This error is particularly bizarre as if I put a web proxy in (to capture the invalid response) the problem goes away.","26/Jan/10 07:48;martin-g;Weird. I'm testing on Chrome for Linux (ver. 4.0.302.2 dev) and the problem disappeared after fixing this.

Try with this patch additionally to the attached one:

Index: src/main/java/org/apache/wicket/ajax/wicket-ajax.js
===================================================================
--- src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(revision 902181)
+++ src/main/java/org/apache/wicket/ajax/wicket-ajax.js	(working copy)
@@ -1222,7 +1222,7 @@
 			   window.setTimeout(notify,2);
 			}.bind(this));
 			
-		    if (Wicket.Browser.isKHTML()) {
+		    if (Wicket.Browser.isKHTML() || Wicket.Browser.isSafari()) {
 		    	// there's a nasty bug in KHTML that makes the browser crash
 		    	// when the methods are delayed. Therefore we have to fire it
 		    	// ASAP. The javascripts that would cause dependency problems are

This was the first patch that I removed.","26/Jan/10 22:01;alexgrant;I have applied your patch, cleared my cache, upgraded to Chrome for Windows v4.0.249.78, and the problem still occurs.
Thank you for trying, though.",,,,,,,,,,,,,,,,,
"SharedResourceRequestTarget sets Status 404 when not found, ignoring any 404 settings",WICKET-2714,12455063,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tapter,tapter,02/Feb/10 14:57,05/Feb/10 02:46,13/Mar/19 23:15,05/Feb/10 02:46,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,,,wicket,,,,0,,,,,,,,"In SharedResourceRequestTarget, Line 186, the code just sets the 404 status when the requested resource was not found which defeats all page not found settings and tomcat error settings:

	((WebResponse)response).getHttpServletResponse().setStatus(
		HttpServletResponse.SC_NOT_FOUND);

We've got in Application:

		mountBookmarkablePage(""/error/notfound"", NotFoundErrorPage.class);

And in the app's web.xml:

	<error-page>
		<error-code>404</error-code>
		<location>/error/notfound</location>
	</error-page>

This works for other cases, but not for this. Probably instead of setStatus a sendError or something like that should be done?

Ways to reproduce:

Create an error page and mount it like shown above. Also add the error-page entry to the web.xml
Now try to access  http://host/app/resources/x.y.z  (thus requesting the resource  x.y.z)
What happens: The ugly default tomcat error page is displayed
What should have happened: The page configured as 404 page should be displayed",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203575,,,2010-02-02 14:57:42.0,,,,,,0|i0kcon:,116872,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AuthenticatedWebSession in wicket-auth-roles does thread-unsafe access to signedIn boolean,WICKET-2715,12455181,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,sebster,sebster,03/Feb/10 16:04,05/Feb/10 02:44,13/Mar/19 23:15,05/Feb/10 02:44,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,,,wicket-auth-roles,,,,0,,,,,,,,"Sessions in Wicket must be made thread safe.

AuthenticatedWebSession in the wicket-auth-roles project is not. It is currently possible that a user clicks logout and this request calls signOut() in one http-thread, and the next request access the page and gets handled via a different thread and still sees the old value of signedIn == true.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203576,,,2010-02-03 16:04:59.0,,,,,,0|i0kcof:,116871,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RedirectPage does not work in IE,WICKET-2718,12455335,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,slowery23,slowery23,04/Feb/10 18:08,05/Feb/10 02:38,13/Mar/19 23:15,05/Feb/10 02:38,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,1,,,,,,,,"The org.apache.wicket.markup.html.pages.RedirectPage rendered in IE results in an ""The XML page cannot be displayed"" error.  When viewing the error in the IE console, you see:

Webpage error details

User Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729)
Timestamp: Thu, 4 Feb 2010 18:00:25 UTC

Message: The server did not understand the request, or the request was invalid.

Line: 0
Char: 0
Code: 0
URI: http://www.w3.org/TR/html4/loose.dtd

RedirectPage.java looks identical, but the following line has been added in 1.4.6 (not present in 1.4.5 and earlier) to the RedirectPage.html and seems the likely culprit:
<?xml version=""1.0"" encoding=""UTF-8"" ?>",IE7 or IE8 (probably earlier IE versions as well),,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203579,,,2010-02-04 18:08:04.0,,,,,,0|i0kcnz:,116869,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MixedParamsUrlCodingStrategy ,classcastexception from Long to String",WICKET-2685,12445868,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vineetsemwal,vineetsemwal,18/Jan/10 21:29,25/Jan/10 17:48,13/Mar/19 23:15,25/Jan/10 17:48,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,,,wicket,,,,0,,,,,,,,"
i see classcastexception can't cast from Long to String at this line in a page(the url does not have page parameters)  at line number 138 in mixedparameterurlcodingstrategy,

String value = param instanceof String[] ? ((String[])param)[0] : (String)param;//line number 138
 cast in else can be clearly avoided,
String value = param instanceof String[] ? ((String[])param)[0] : param.toString();// ie. cast changed to tostring()

i tested that on my custommixed*strategy in which above mentioned is the only change,
everything appears to be working,

original exception in mixedparamurlcodingstrategy i got is as following :-


java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String
at org.apache.wicket.request.target.coding.MixedParamUrlCodingStrategy.appendParameters(MixedParamUrlCodingStrategy.java:138)
at org.apache.wicket.request.target.coding.BookmarkablePageRequestTargetUrlCodingStrategy.encode(BookmarkablePageRequestTargetUrlCodingStrategy.java:149)
at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.pathForTarget(WebRequestCodingStrategy.java:491)
at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.encode(WebRequestCodingStrategy.java:250)
at org.apache.wicket.RequestCycle.encodeUrlFor(RequestCycle.java:811)
at org.apache.wicket.RequestCycle.urlFor(RequestCycle.java:999)
at org.apache.wicket.Component.urlFor(Component.java:3316)
at org.apache.wicket.markup.html.link.BookmarkablePageLink.getURL(BookmarkablePageLink.java:276)
at org.apache.wicket.markup.html.link.Link.onComponentTag(Link.java:408)
at org.apache.wicket.Component.renderComponent(Component.java:2590)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1577)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1501)
at org.apache.wicket.Component.renderComponent(Component.java:2619)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.markup.repeater.AbstractRepeater.renderChild(AbstractRepeater.java:122)
at org.apache.wicket.markup.repeater.AbstractRepeater.onRender(AbstractRepeater.java:103)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1577)
at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:675)
at org.apache.wicket.markup.html.panel.Panel.onComponentTagBody(Panel.java:114)
at org.apache.wicket.Component.renderComponent(Component.java:2619)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1577)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1501)
at org.apache.wicket.Component.renderComponent(Component.java:2619)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)
at org.apache.wicket.markup.resolver.MarkupInheritanceResolver.resolve(MarkupInheritanceResolver.java:66)
at org.apache.wicket.markup.resolver.ComponentResolvers.resolve(ComponentResolvers.java:81)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1418)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1577)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1501)
at org.apache.wicket.Component.renderComponent(Component.java:2619)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)
at org.apache.wicket.markup.resolver.MarkupInheritanceResolver.resolve(MarkupInheritanceResolver.java:73)
at org.apache.wicket.markup.resolver.ComponentResolvers.resolve(ComponentResolvers.java:81)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1418)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1577)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1501)
at org.apache.wicket.Component.renderComponent(Component.java:2619)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1528)
at org.apache.wicket.Page.onRender(Page.java:1545)
at org.apache.wicket.Component.render(Component.java:2450)
at org.apache.wicket.Page.renderPage(Page.java:914)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:261)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:479)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:312)
at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:112)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:361)
at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
at org.mortbay.jetty.Server.handle(Server.java:324)
at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:535)
at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:865)
at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:538)
at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:522)


 				 ","wicket 1.4.5,jetty 6.1.22",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203549,,,Wed Jan 20 09:11:12 UTC 2010,,,,,,0|i0kcqf:,116880,,,,,,,,"19/Jan/10 08:29;vineetsemwal;i see the same problem in Mixedparamhybridurlcodingstrategy.
this time i am getting same exception at line number 129 .
i have checked that in 1.4.5 and the snapshot,

String value = param instanceof String[] ? ((String[])param)[0] :
(String)param;//line number 129
following changed i did in custommixedhybrid*strategy,
String value = param instanceof String[] ? ((String[])param)[0] :
String.valueOf(param);

everything appears to be working..





-- 
regards,
Vineet Semwal
","20/Jan/10 09:11;vineetsemwal;thanks for fixing the issue quickly,
i see similar problem in mixedparamhybridurlstratgey so reopening it
please read my previous comment in detail about the issue.
",,,,,,,,,,,,,,,,,,,,,,
WebResource#getCacheDuration() is not configurable,WICKET-2323,12427657,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,hell,hell,11/Jun/09 15:08,19/Jan/10 07:14,13/Mar/19 23:15,19/Jan/10 07:14,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"There is not possible to set WebResource#getCacheDuration() for WicketAjaxReference and WicketEventReference. I hope that this property should be configurable via e.g. IResourceSettings#defaultCacheDuration().

The similar problem is if you can fully disable caching using Resource#setCacheable() ... there is no available global configuration in IResourceSettings.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-26 16:31:43.56,,,no_permission,,,,,,,,,,,203216,,,Tue Jan 19 07:14:53 UTC 2010,,,,,,0|i0kdpb:,117037,,,,,,,,26/Jun/09 16:31;jdonnerstag;Add global configuration in IResourceSettings to start with (1.4 trunk),19/Jan/10 07:14;ivaynberg;looks like we forgot to mark this as fixed,,,,,,,,,,,,,,,,,,,,,,
MalformedStreamException is silently ignored,WICKET-2208,12422044,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jdonnerstag,jdonnerstag,04/Apr/09 15:06,19/Jan/10 07:06,13/Mar/19 23:15,19/Jan/10 07:06,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"If a FileUpload fails because of a MalformedStreamException, the exception is swallowed and Wicket continues as if no data (filenames) have been provided. No error message, no exception.

Copied from WICKET-2015:

I found back the line where this case seems to create the problem.
If you debug your stuff (without having the file upload set), the code will get an exception in MultiPartFormInputStream, method ""skipPreamble"":

It ends up in the MalformedStreamException, which is swallowed and ""false"" is returned.
Maybe this finished the submission and nothing happens.


public boolean skipPreamble() throws IOException
{
// First delimiter may be not preceeded with a CRLF.
System.arraycopy(boundary, 2, boundary, 0, boundary.length - 2);
boundaryLength = boundary.length - 2;
try
{
// Discard all data up to the delimiter.
discardBodyData();

// Read boundary - if succeeded, the stream contains an
// encapsulation.
return readBoundary();
}
catch (MalformedStreamException e)
{
return false;
}
finally
{
// Restore delimiter.
System.arraycopy(boundary, 0, boundary, 2, boundary.length - 2);
boundaryLength = boundary.length;
boundary[0] = CR;
boundary[1] = LF;
}
}

The exception has as cause: MalformedStreamException: Stream ended unexpectedly

I looked further and the debugger showd that this methods throws the exception : discardBodyData()

By assigning a value to the fileUploadComponent the code does not throw any exception at that point.
",,,,,,,,,,,,,,,WICKET-2015,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203114,,,Sat Apr 04 15:12:47 UTC 2009,,,,,,0|i0ke0f:,117087,,,,,,,,04/Apr/09 15:12;jdonnerstag;Added an error log entry to indicate at least to the admin that something went wrong.,,,,,,,,,,,,,,,,,,,,,,,
InspectorPage (from devutils) is stateful for no valid reason,WICKET-2647,12444249,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,slonopotamus,slonopotamus,28/Dec/09 13:55,19/Jan/10 01:07,13/Mar/19 23:15,19/Jan/10 01:07,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,"The only reason InspectorPage is stateful is new Image(""bug"").

If it is replaced new Image(""bug"", new ResourceReference(InspectorPage.class, ""bug.png"")), then InspectorPage becomes stateless.

I already raised an issue (WICKET-1340) on empty image that finds resource from markup being stateful, but was told that it is desired behavior.
",,,,,,,,,,,,,,,WICKET-1340,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203518,,,2009-12-28 13:55:04.0,,,,,,0|i0kctr:,116895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
checkRendering() throws Exception if TransparentResolver is invisible,WICKET-2679,12445603,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,michael.mosmann,michael.mosmann,15/Jan/10 06:39,17/Jan/10 09:48,13/Mar/19 23:15,17/Jan/10 09:48,1.4.1,1.4.2,1.4.3,1.4.4,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,"When a page has a TransparentResolver which is invisible, then rendering fails, if one child has it's own markup.",,,,,,,,,,,,,,,,,,,15/Jan/10 06:39;michael.mosmann;de.flapdoodle.bugs--wicket-transparent-resolver.zip;https://issues.apache.org/jira/secure/attachment/12430365/de.flapdoodle.bugs--wicket-transparent-resolver.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-17 08:42:32.738,,,no_permission,,,,,,,,,,,203544,,,Sun Jan 17 09:48:12 UTC 2010,,,,,,0|i0kcqn:,116881,,,,,,,,"17/Jan/10 08:42;jdonnerstag;I'm not sure yet what the root cause is, but the problem goes away when you remove SimplePanel(""childMarkup"") from the homepage. Which means the problem could as well be <wicket:container> or a combination of both.",17/Jan/10 08:48;jdonnerstag;Sorry. You mentioned it already: ... when the childmarkup has it's own markup. ,"17/Jan/10 09:16;jdonnerstag;isTransparent is regulary causing users problem which is why we removed it in 1.5. Though it is still possible via TransparentWebContainer or  IComponentResolver.

The underlying problem is that the transparent container doesn't know its children - it can be any child of the parent container. The transparent container potentially could know them but than again only if all its children are rendered (visible == true). Like in your case, where the transparent container (and its children) never get rendered, it is impossible (in 1.4) to determine whether childNoMarkup or childMarkup should be a child of the transparent container or whether it really is a child of the page.

For the sake of performance, we do not render invisble transparent containers, just to be able to determine its children.

Which is why checkRendering sometimes needs to guess. And that is exactly what is happening here (see Page.java 1127). Unfortunately that ""guessing"" fails whenever a a transparent container has a grand child.

That could be fixed, but it remains guessing.",17/Jan/10 09:48;jdonnerstag;improved guessing (see previous comment),,,,,,,,,,,,,,,,,,,,
ModalWindow can't be shown when it is rendered with ajax request,WICKET-2617,12443392,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mihasik,mihasik,15/Dec/09 14:37,15/Jan/10 09:07,13/Mar/19 23:15,16/Dec/09 23:32,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.5,,,wicket,,,,0,,,,,,,,"Regression appeared with 1.4.4 release, in previous releases all worked fine.

I load page in two requests. First one loads very small html, which then loads remaining part with ajax request.
(I do so to pass parameters after '#' to server in similar way as it is done in gmail, but there are other reasons to render ModalWindow with ajax request).
ModalWindow is rendered (but not shown) with second (ajax) request.

The private variable ""shown"" is set to true:
	protected void onBeforeRender()
	{
		shown = makeContentVisible();

Because of following implementation of makeContentVisible method:
	protected boolean makeContentVisible()
	{
		// if user is refreshing whole page, the window will not be shown
		return getWebRequest().isAjax();
	}

But when I call ""show"" method nothing happens:
	public void show(final AjaxRequestTarget target)
	{
		if (shown == false)
		{
			getContent().setVisible(true);
			target.addComponent(this);
			target.appendJavascript(getWindowOpenJavascript());
			shown = true;
		}
	}

Actually there are two problems:
1) behavior has changed
2) I didn't find safe workaround for this problem.
Unsafe workaround as follows, notice, it can break with next wicket release since base ""show"" method is not called in sub class:

class MyModalWindow extends ModalWindow {
	protected boolean visible = false;

	@Override
	protected boolean makeContentVisible() {
		return visible;
	}

	@Override
	public void show(org.apache.wicket.ajax.AjaxRequestTarget target) {
		visible = true;
		getContent().setVisible(true);
		target.addComponent(this);
		target.appendJavascript(getWindowOpenJavascript());
	};

	@Override
	public void close(AjaxRequestTarget target) {
		visible = false;
		super.close(target);
	}
}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-16 15:56:51.748,,,no_permission,,,,,,,,,,,203490,,,Thu Dec 17 10:02:37 UTC 2009,,,,,,0|i0kcx3:,116910,,,,,,,,"16/Dec/09 15:56;ivaynberg;try with latest snapshot, may be related to WICKET-2613",16/Dec/09 21:48;ivaynberg;or provide a quickstart so we can reproduce this.,"16/Dec/09 23:32;ivaynberg;found the regression, should be fixed","17/Dec/09 07:43;mihasik;Igor, thank you for quick response.

I would like to test your changes and provide quickstart if there is still an issue.

Unfortunatelly I can't test your changes because the latest available snapshot is wicket-1.4-20091031.051535-642.
I was looking for latest snapshot at
http://wicketstuff.org/maven/repository/org/apache/wicket/wicket/1.4-SNAPSHOT/
link to this maven repository is provided by
http://wicket.apache.org/getting-wicket.html

Seems like snapshots aren't automatically generated anymore or getting-wicket.html points to wrong/obsolete maven repository.",17/Dec/09 07:55;ivaynberg;check out the source and run mvn install,"17/Dec/09 10:02;mihasik;I've checked revision 891612, all works like a charm now.
Thank you!",,,,,,,,,,,,,,,,,,
FormComponent doesn't properly handle array model types,WICKET-2672,12445300,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,12/Jan/10 14:50,14/Jan/10 21:18,13/Mar/19 23:15,14/Jan/10 21:18,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,"FormComponent doesn't properly handle array model types.

Testcase attached.",,,,,,,,,,,,,,,,,,,12/Jan/10 14:50;slonopotamus;FormComponentTest.java;https://issues.apache.org/jira/secure/attachment/12430018/FormComponentTest.java,14/Jan/10 18:37;martin-g;WICKET-2672.patch;https://issues.apache.org/jira/secure/attachment/12430279/WICKET-2672.patch,14/Jan/10 17:54;martin-g;WICKET-2672.patch;https://issues.apache.org/jira/secure/attachment/12430275/WICKET-2672.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-01-14 17:54:31.33,,,no_permission,,,,,,,,,,,203538,,,Thu Jan 14 21:18:22 UTC 2010,,,,,,0|i0kcrb:,116884,,,,,,,,14/Jan/10 17:54;martin-g;According to http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6500212 it is better to load array classes with Class.forName(),"14/Jan/10 18:37;martin-g;Fix the 'initialize' parameter for Class#forClass().

Why org.apache.wicket.markup.html.form.FormComponent.typeName is a java.lang.String instead of Class<?> ?",14/Jan/10 21:18;jdonnerstag;fixed and test cases added,,,,,,,,,,,,,,,,,,,,,
Form submitting component is not checked for being enabled during submit,WICKET-2570,12440366,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,11/Nov/09 00:52,07/Jan/10 16:28,13/Mar/19 23:15,12/Nov/09 05:57,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,WICKET-2665,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203445,,,2009-11-11 00:52:53.0,,,,,,0|i0kd0v:,116927,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableLabel fails to focus editor upon validation errors,WICKET-2633,12444073,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,pnovotnik,pnovotnik,23/Dec/09 09:13,30/Dec/09 17:02,13/Mar/19 23:15,30/Dec/09 17:02,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"hi all,

the AjaxEditableLabel's #onError implementation fails to properly focus the editor. The problem is the javascript appended to the ajax request target; replacing the lines 460 - 462 in AjaxEditableLabel with the the below code fixes the problem.

{code}
target.appendJavascript(""{var el=wicketGet('"" + editor.getMarkupId() + ""'); el.select(); el.focus();}"");
{code}

a workaround is to subclass AjaxEditableLabel and overide the #onError method.

many thanks in advance,
pete.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203505,,,2009-12-23 09:13:14.0,,,,,,0|i0kcvj:,116903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form.isMultipart() doesn't check FormComponent.isMultipart() on nested components,WICKET-2638,12444157,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,24/Dec/09 10:28,30/Dec/09 16:53,13/Mar/19 23:15,30/Dec/09 16:53,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,Form.isMultipart() doesn't check FormComponent.isMultipart() on nested components. This breaks submitting of stateless forms with multipart FormComponent but no explicit Form.setMultipart(true) call.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203509,,,2009-12-24 10:28:12.0,,,,,,0|i0kcun:,116899,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester javadocs are referring in many places to a component's path but it's not documented anywhere,WICKET-2655,12444316,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,robyf,robyf,29/Dec/09 16:51,30/Dec/09 14:23,13/Mar/19 23:15,30/Dec/09 14:23,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,,,,,0,,,,,,,,"In many places in the WicketTester javadoc there are references to a path parameter explained in the following way:
    path - path to Component

But it's not explained anywhere what a path is, what does it contains, which separator is used there, what's the root of it and so on.

Practically, it's impossible understanding how to use WicketTester from its javadoc because of that.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-29 17:06:06.145,,,no_permission,,,,,,,,,,,203524,,,Wed Dec 30 14:23:49 UTC 2009,,,,,,0|i0kct3:,116892,,,,,,,,"29/Dec/09 17:06;jdonnerstag;1) with Wicket each Component has an ID and that ID must be unique within its scope.
2) You can add Component into a Container
3) Via its path you can get(path) / access to a component any time without keeping its reference. The concept is similar to Java packages except that  "":"" is the separator
4) see getPageRelativePath, getRelativePath 

I'll add a few @see to WicketTester's javadoc",30/Dec/09 14:23;jdonnerstag;javadoc updated,,,,,,,,,,,,,,,,,,,,,,
Resources aren't gziped by default,WICKET-2645,12444246,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mihasik,mihasik,28/Dec/09 13:05,28/Dec/09 13:51,13/Mar/19 23:15,28/Dec/09 13:51,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket-datetime,,,,0,,,,,,,,"Wicket gzips its resources by default. The only exception is wicket-datetime module.
I think it is worth to use the same policy within wicket subprojects, especially taking into account that usage of DatePicker adds more than 100 Kb of uncompressed java scripts.

Here are an headers of request and response:

Request headers:

Host	127.0.0.1:8080
User-Agent	Mozilla/5.0 (X11; U; Linux x86_64; ru; rv:1.9.1.6) Gecko/20091215 Ubuntu/9.10 (karmic) Firefox/3.5.6
Accept	*/*
Accept-Language	ru,en-us;q=0.7,en;q=0.3
Accept-Encoding	gzip,deflate
Accept-Charset	windows-1251,utf-8;q=0.7,*;q=0.7
Keep-Alive	300
Connection	keep-alive
Referer	http://127.0.0.1:8080/?t=1


Response headers:
Server	Apache-Coyote/1.1
Last-Modified	Mon, 21 Dec 2009 07:26:23 GMT
Expires	Mon, 28 Dec 2009 13:42:11 GMT
Cache-Control	max-age=3600
Content-Type	text/javascript;charset=UTF-8
Content-Length	68179
Date	Mon, 28 Dec 2009 12:42:10 GMT
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203516,,,2009-12-28 13:05:02.0,,,,,,0|i0kctz:,116896,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EnumLabel misbehaves with anonymous enum,WICKET-2641,12444191,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,25/Dec/09 10:00,26/Dec/09 08:13,13/Mar/19 23:15,26/Dec/09 08:13,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,"Same problem as was with EnumChoiceRenderer (see WICKET-2609)

protected String resourceKey(T value)
{
	return value.getClass().getSimpleName() + ""."" + value.name();
}

should be changed to:
protected String resourceKey(T value)
{
	return value.getDeclaringClass().getSimpleName() + ""."" + value.name();
}",,,,,,,,,,,,,,,WICKET-2609,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-26 08:13:46.234,,,no_permission,,,,,,,,,,,203512,,,Sat Dec 26 08:13:46 UTC 2009,,,,,,0|i0kcu7:,116897,,,,,,,,26/Dec/09 08:13;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
EnumChoiceRenderer misbehaves with anonymous enum classes,WICKET-2609,12443081,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,slonopotamus,slonopotamus,11/Dec/09 11:27,25/Dec/09 10:00,13/Mar/19 23:15,11/Dec/09 17:29,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.5,1.5-M1,,wicket,,,,0,,,,,,,,"Please find attached testcase reproducing the problem.

Proper fix is to do
return object.getDeclaringClass().getSimpleName() + ""."" + object.name()

instead of
return object.getClass().getSimpleName() + ""."" + object.name()

in EnumChoiceRenderer.resourceKey",,,,,,,,,,,,,,,,,,,11/Dec/09 11:27;slonopotamus;EnumChoiceRendererTest.java;https://issues.apache.org/jira/secure/attachment/12427710/EnumChoiceRendererTest.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-11 16:54:55.832,,,no_permission,,,,,,,,,,,203482,,,Fri Dec 11 17:17:07 UTC 2009,,,,,,0|i0kcxz:,116914,,,,,,,,11/Dec/09 16:54;ivaynberg;we cannot change this in 1.4.x because it alters existing behavior,"11/Dec/09 17:11;slonopotamus;I doubt current behavior makes sense since it produces resource keys without classname at all -> enum constants from different classes get same resource keys. Additionally, every bugfix alters behavior :) But, your word is last here. Let it be 1.5, it just means i won't use it in 1.4","11/Dec/09 17:17;ivaynberg;oh. yeah. good point...i didnt realize it was going to produce a "".foo"" key, i thought it would do EnumChoiceRendererTest$AnonEnum.FOO and you wanted AnonEnum.FOO",,,,,,,,,,,,,,,,,,,,,
Missing XML prolog in wicket-extensions panel htmls,WICKET-2599,12442725,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,08/Dec/09 13:33,24/Dec/09 10:42,13/Mar/19 23:15,12/Dec/09 10:40,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.5,1.5-M1,,wicket-extensions,,,,1,,,,,,,,Almost all wicket-extensions panel HTML files are missing XML prologs. That makes it impossible to use wicket-extensions with throwExceptionOnMissingXmlDeclaration=true,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-12 10:40:15.999,,,no_permission,,,,,,,,,,,203472,,,Sat Dec 12 10:40:15 UTC 2009,,,,,,0|i0kcyn:,116917,,,,,,,,12/Dec/09 10:40;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
Sucessfull login on SignInPanel causes HomePage to become stateful,WICKET-2635,12444094,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,23/Dec/09 13:40,23/Dec/09 17:33,13/Mar/19 23:15,23/Dec/09 17:33,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket-auth-roles,,,,0,,,,,,,,"Quickstart attached.

Steps to reproduce
1. Unpack attached quickstart
2. mvn jetty:run
3. Open http://localhost:8080/login
4. Enter any credentials
Expected: StatelessHomePage opens
Actual: exception happends, StatelessHomePage isn't stateless

Problem analysis:
1. SignInForm manually creates page.
2. AbstractListenerInterfaceRequestTarget.onProcessEvents calls requestCycle.setRedirect(true)
3. RequestCycle.urlFor(final Component component, final RequestListenerInterface listener, ValueMap params) calls page.setPageStateless(Boolean.FALSE)
4. StatelessChecker isn't happy.

Fix is simple - SignInForm.onSignInSucceeded should be:
if (!continueToOriginalDestination())
{
	setResponsePage(getApplication().getHomePage());
}",,,,,,,,,,,,,,,,,,,23/Dec/09 13:41;slonopotamus;2635.tar.gz;https://issues.apache.org/jira/secure/attachment/12428820/2635.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-23 17:33:27.965,,,no_permission,,,,,,,,,,,203506,,,Wed Dec 23 17:33:27 UTC 2009,,,,,,0|i0kcv3:,116901,,,,,,,,23/Dec/09 17:33;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester chooses a disabled component as the source of an AjaxFormSubmit event,WICKET-2616,12443346,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jari,jari,15/Dec/09 09:14,22/Dec/09 16:44,13/Mar/19 23:15,22/Dec/09 16:44,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,"As of 1.4.4, disabled components can no longer submit forms (and rightly so):

http://fisheye6.atlassian.com/browse/wicket/trunk/wicket/src/main/java/org/apache/wicket/markup/html/form/Form.java?r1=835242&r2=829503

BaseWicketTester, however, doesn't check whether a submitting component is enabled when it chooses a component as the source of a submit event, it only checks the visibility:

http://fisheye6.atlassian.com/browse/wicket/trunk/wicket/src/main/java/org/apache/wicket/util/tester/BaseWicketTester.java?r=835641#l1287

We have a TextField with an AjaxFormSubmitBehavior, and in the same form there's a disabled AjaxButton. In our test, we trigger a submit event from the TextField, but BaseWicketTester sets the disabled AjaxButton as the source, causing the check in Form.java to fail and throw an Exception.

In the browser everything works fine, since the AjaxButton's *inputName=value* is not added to the request parameters, as expected.
","Linux, Sun JDK 1.6",,,,,,,,,,,,,,,,,,15/Dec/09 09:15;jari;WICKET-2616.patch;https://issues.apache.org/jira/secure/attachment/12428018/WICKET-2616.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203489,,,Tue Dec 15 12:29:28 UTC 2009,,,,,,0|i0kcxb:,116911,,,,,,,,15/Dec/09 09:15;jari;Patch against trunk attached.,"15/Dec/09 12:29;jari;Prio: major, since we have a bunch of perfectly valid specs failing because of this.",,,,,,,,,,,,,,,,,,,,,,
MethodGetAndSet.setValue uses wrong source to determine which type to convert to when there's no setter,WICKET-2624,12443650,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,17/Dec/09 14:33,22/Dec/09 16:27,13/Mar/19 23:15,22/Dec/09 16:27,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,,,,0,,,,,,,,"MethodGetAndSet.setValue uses wrong source to determine which type to convert to when there's no setter, resulting in exceptions like this:
org.apache.wicket.WicketRuntimeException: Error setting field: private int PropertyResolverTest$DirectFieldSetWithDifferentTypeThanGetter.value on object: PropertyResolverTest$DirectFieldSetWithDifferentTypeThanGetter@396477d9
	at org.apache.wicket.util.lang.PropertyResolver$MethodGetAndSet.setValue(PropertyResolver.java:1150)
	at org.apache.wicket.util.lang.PropertyResolver$ObjectAndGetSetter.setValue(PropertyResolver.java:588)
	at org.apache.wicket.util.lang.PropertyResolver.setValue(PropertyResolver.java:136)
	at PropertyResolverTest.testDirectFieldSetWithDifferentTypeThanGetter(PropertyResolverTest.java:12)

Bug is located in:
converted = converter.convert(value, getMethod.getReturnType());

Instead, it should read:
converted = converter.convert(value, type);

Testcase attached.

Additional thoughts:
if (setMethod != null)
{
  type = getMethod.getReturnType();
}
This is really confusing (we check setMethod presence but get type from getMethod). Luckily, this works as expected because in MethodGetAndSet.findSetter only methods with same (or superclass) type as getter are returned.
",,,,,,,,,,,,,,,,,,,17/Dec/09 14:34;slonopotamus;PropertyResolverTest.java;https://issues.apache.org/jira/secure/attachment/12428294/PropertyResolverTest.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-17 15:10:46.883,,,no_permission,,,,,,,,,,,203496,,,Thu Dec 17 15:10:46 UTC 2009,,,,,,0|i0kcvz:,116905,,,,,,,,"17/Dec/09 15:10;jcompagner;that the type is not used is a bug.
But  that if (set != null) is on purpose

getMethod is always there and if the value will be set throough a setMethod then the getMethod return type will be its type.
(else we have to look at the parameters if the setter but getting the return type is quicker)
",,,,,,,,,,,,,,,,,,,,,,,
Ajax buttons inside ModalWindows don't submit properly,WICKET-2621,12443481,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alexgrant,alexgrant,16/Dec/09 03:01,17/Dec/09 01:13,13/Mar/19 23:15,16/Dec/09 23:19,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.5,1.5-M1,,,,,,0,,,,,,,,"I have a ModalWindow that contains an IndicatingAjaxButton. When I click the button, I get a big Java error complaining that the form submit wasn't multipart.

Digging into the javascript in wicket-ajax.js, I found this from line 1102 in the method handleMultipart

{code}
multipart=multipart||form.enctype==""multipart/form-data"";

if (multipart==false) {
     // nothing to handle
    return false;
 }
{code}

When this executed, multipart was false, and enctype was """" and therefore the submit aborted. This may be the cause.

Here's the Java stacktrace

{noformat}
java.lang.IllegalStateException: ServletRequest does not contain multipart content
	at org.apache.wicket.protocol.http.servlet.MultipartServletWebRequest.<init>(MultipartServletWebRequest.java:113)
	at org.apache.wicket.protocol.http.servlet.MultipartServletWebRequest.<init>(MultipartServletWebRequest.java:83)
	at org.apache.wicket.extensions.ajax.markup.html.form.upload.MultipartRequest.<init>(MultipartRequest.java:41)
	at org.apache.wicket.extensions.ajax.markup.html.form.upload.UploadWebRequest.newMultipartWebRequest(UploadWebRequest.java:66)
	at org.apache.wicket.markup.html.form.Form.handleMultiPart(Form.java:1651)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:850)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:135)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:299)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:479)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:312)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
{noformat}",,,,,,,,,,,,,,,,,,,16/Dec/09 21:54;alexgrant;wicket-2621-sample-app.zip;https://issues.apache.org/jira/secure/attachment/12428226/wicket-2621-sample-app.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-16 15:55:24.897,,,no_permission,,,,,,,,,,,203493,,,Thu Dec 17 01:13:18 UTC 2009,,,,,,0|i0kcwf:,116907,,,,,,,,"16/Dec/09 03:08;alexgrant;I don't know for certain that this appeared in 1.4.4, as we have upgraded directly from 1.4.1. WICKET-2553 was preventing us from using 1.4.2 and 1.4.3.",16/Dec/09 15:55;ivaynberg;got a quickstart?,"16/Dec/09 21:45;ivaynberg;due to a lot of other fixes we have done for ajax-related file uploads you will have to call form.setmultipart(true) yourself. wicket tries its best to detect multipart forms, but its always a good idea to call it explicitly because with ajax there are cases where wicket cannot detect multipart forms early enough.","16/Dec/09 21:49;alexgrant;I've just finished creating a test case to reproduce this one.
The problem is, it's *not* a multipart form.

I'm using a wizard. On the first step of the wizard, there is a file upload component, (and that works correctly). But on the second step, there is no upload component, but the ajax popup fails, because the java Form object still thinks it *is* multipart.",16/Dec/09 21:54;ivaynberg;attach your quickstart and i will take a look,"16/Dec/09 21:56;alexgrant;Thanks. I have attached a zipped standalone Eclipse project.
Visit the URL
http://localhost:8080/wicket-modal-dialog/app/home
Click Next, click to open the popup, then click OK on the popup.",16/Dec/09 21:57;alexgrant;Form.setMultipart(true) does not fix the problem - The Java Form is already in multipart mode (as the one Form is shared by the wizard across all steps and the first step had a upload component). The problem is the ajax submit is not multipart (presumably because there are no upload components on the page).,16/Dec/09 21:57;ivaynberg;now we have a testcase,"16/Dec/09 21:59;alexgrant;Thanks for reopening it. Sorry about the delay, I'm in a different time zone so only recently got your request for a testcase, and it took me a while to isolate the problem.","17/Dec/09 01:04;alexgrant;Thank you for the speedy fix.
I looked at the svn commits (out of curiousity), and noticed these

+	private static short MULTIPART_HARD = 0x01;
+	private static short MULTIPART_HINT = 0x02;

Shouldn't they be final?","17/Dec/09 01:13;ivaynberg;yep, thanks",,,,,,,,,,,,,
File Handle Leak in URLResourceStream,WICKET-2534,12438764,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,adambender,adambender,21/Oct/09 23:05,15/Dec/09 16:41,13/Mar/19 23:15,22/Oct/09 06:44,1.4.1,1.4.2,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,The URLResourceStream constructor is using a UrlConnection to access the lastModifiedDate of jar files. This leads to a known File Handle leak as described here: http://www.mail-archive.com/wicket-user@lists.sourceforge.net/msg20951.html .  The workaround for this issue is also described here. It appears that this workaround has been applied to the URLResourcesStream#lastModifiedTime method and so it could easily be replicated in the constructor to avoid calling lastModifiedTime on the JarUrlResourceConnection.,Any,,,,,,,,,,,,,,WICKET-2613,,,,21/Oct/09 23:07;adambender;UrlResourceStream.java;https://issues.apache.org/jira/secure/attachment/12422862/UrlResourceStream.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203413,,,Wed Oct 21 23:07:29 UTC 2009,,,,,,0|i0kd3z:,116941,,,,,,,,21/Oct/09 23:07;adambender;The attached file contains the workaround described here:http://www.mail-archive.com/wicket-user@lists.sourceforge.net/msg20951.html and is identical to the code used in URLResourceStream#lastModifiedTime,,,,,,,,,,,,,,,,,,,,,,,
Style and variant resolution is broken,WICKET-2298,12426843,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,ivaynberg,ivaynberg,01/Jun/09 18:47,12/Dec/09 12:29,13/Mar/19 23:15,12/Dec/09 12:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"the resolution of style and variant is broken because there is no way to identify them if only one is used. eg panel_foo.html - is foo the style or the variant? for more details and possible solutions refer to

http://markmail.org/thread/lj3luznjnvbun72r

we will need to discuss, as a group, what format to use for the solution.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-02 12:43:20.957,,,no_permission,,,,,,,,,,,203192,,,Sat Dec 12 12:29:00 UTC 2009,,,,,,0|i0kdrz:,117049,,,,,,,,"02/Jun/09 12:43;jcompagner;i dont like prefixes or what ever, i prefer:

/panel_local_style_variant.html

and if 1 is missing just remote it and let it be __ so only the variant will result in this:

/panel___variant.html

but i think that doesnt happen to often
We just have to look what is more often used and place those at the beginning.


","02/Jun/09 13:47;jdonnerstag;I agree. I think the whole mail discussion is mislead. We don't need a mechanism in Wicket to easily read filenames and identify the constituent parts. Wicket simply links them. 

This is from Component.getStyle()

			if (style != null && !"""".equals(style))
			{
				style = variation + ""_"" + style;
			}
			else
			{
				style = variation;
			}

If users define a rule that variations always have to start with a ""_"" whereas style must not, than there will be no filename clash.

But in order for that to work StyleAndVariationResourceNameIterator must be fixed to do what Ned in his very first post requested: consider variation for the iteration as well, which we currently don't do. ","02/Jun/09 14:03;jdonnerstag;The problem will be that we usually call Component.getStyle() to get the combination of variation and style. If we are going to change that, than we need to check every place where getStyle() is used today. Teadious, but probably not complicated. Introducing Component.getStyleAndVariation() (which is equal to todays getStyle()) would make that transition more simple. I still would suggest to make getStyleAndVariation() final and not allow users to change it, since resource name iterator needs to implement that concatenation scheme as well.","02/Jun/09 15:39;ivaynberg;MyPanel_en_us.html

^ is ""en "" the variation and ""us"" the style? this will take more then just making variation start with a ""_"" to fix
",26/Sep/09 13:45;jdonnerstag;Component.getStyle() and getVariation() are now separate. getStyle() no longer returns the variation as well. All resources have been modified as well.. ,12/Dec/09 12:29;jdonnerstag;Has been fixed in 1.5,,,,,,,,,,,,,,,,,,
Some components still escape non-ASCII symbols by default,WICKET-2598,12442721,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,08/Dec/09 13:14,12/Dec/09 10:57,13/Mar/19 23:15,12/Dec/09 10:57,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.5,1.5-M1,,wicket,,,,1,,,,,,,,"With fix for WICKET-1054 Wicket (almost) stopped escaping non-ASCII symbols by default, it calls Strings.escapeMarkup(String) or Strings.escapeMarkup(String, false, false).

However, there are still some places that also call Strings.escapeMarkup with different args.

I used ""Strings.escapeMarkup\(.*, false, true\)"" regex to find them:
AbstractChoice.escapeOptionHtml,
CheckBoxMultipleChoice.onComponentTagBody (the reason i started to dig into this issue)
RadioChoice.onComponentTagBody

They should either call String.escapeMarkup(String) or even use Component.getDefaultModelObjectAsString",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-12 10:57:11.572,,,no_permission,,,,,,,,,,,203471,,,Sat Dec 12 10:57:11 UTC 2009,,,,,,0|i0kcyv:,116918,,,,,,,,12/Dec/09 10:57;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Inheritance layout excludes XML header from output,WICKET-2569,12440295,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,ncurzon,ncurzon,10/Nov/09 15:33,10/Dec/09 21:45,13/Mar/19 23:15,10/Dec/09 21:45,1.3.7,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"When using inheritance layout, if the superclass (Layout class) has an ?xml header at the top, it's excluded from the rendering of subclasses, if they have an associated html file. If the subclass has no .html file associated with it, the ?xml header is preserved in the rendering output.

To reproduce: Create a SuperPage class extending WebPage. At the top of SuperPage.html, put ""<?xml version=""1.0"" encoding=""utf-8""?>"" . Create two subclasses of SuperPage, one with an HTML file and one without. View the sub pages. Notice when the one with an HTML file is rendered, the xml header is excluded.

Expected: The ?xml header should always be preserved in the rendered output as it's vital to the layout.",,,,,,,,,,,,,,,,,,,09/Dec/09 01:35;ncurzon;wicket-2569.patch;https://issues.apache.org/jira/secure/attachment/12427403/wicket-2569.patch,10/Nov/09 15:37;ncurzon;wicket-2569.tgz;https://issues.apache.org/jira/secure/attachment/12424468/wicket-2569.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-11-29 08:18:49.206,,,no_permission,,,,,,,,,,,97002,,,Thu Dec 10 21:45:51 UTC 2009,,,,,,0|i0kd13:,116928,,,,,,,,10/Nov/09 15:37;ncurzon;Attached a project created from the quickstart archetype that reproduces the issue. Just browse to the home page and follow the two links.,10/Nov/09 15:39;ncurzon;I've worked around this by putting a body-only non-escaping label with the header at the top of my layout.,"29/Nov/09 08:18;jdonnerstag;your baseclass contains <wicket:child>, which means your subclass must provide the wicket:extend markup. Wicket should rather throw an exception in case there is no sub-markup, than silently ignore wicket:child. ","29/Nov/09 13:23;dashorst;I'd rather not mandate <wicket:extend> for pages with <wicket:child />, because it is used for overriding the markup completely.",04/Dec/09 07:07;ivaynberg;so whats the verdict here?,07/Dec/09 20:59;jdonnerstag;Wicket should throw an exception since a base clase with <wicket:child> but without a subclass with associated markup containing <wicket:extend> doesn't make sense.,"07/Dec/09 22:20;ncurzon;I'm a little worried the conversation is going astray on this issue..

I filed this bug because the ?xml header is removed when using inheritance layouts. I only brought up the difference between the case with and without markup because I noticed that the behavior in these cases was unexpectedly different, and I thought it may help to debug the issue faster. I now realize that this just makes the bug report confusing, for which I apologize.

I know that when components are added to a page, any ?xml header they define is stripped. A wild guess would be that in the case with markup, the entire page including the subclass is treated as a component somehow and the ?xml header is excluded?","09/Dec/09 01:40;ncurzon;I've attached a patch against 1.4.x that fixes the quickstart and (I think) the bug. When merging markup of a base class and its superclass, currently it seems that the XML header that wins is the one at the bottom of the inheritance tree. I think it makes more sense for the top of the inheritance tree to win... so the ?xml declaration I have in my base Layout appears at the top of my rendered pages as expected.","09/Dec/09 07:11;jdonnerstag;Which file contains the page/panel information and which the extension. The base markup contains the page/panel layout and the ""inherited"" markup the specific extension. In my opinion it is more logical that the base markup (the page layout) provides the xml declaration when merging the markups.","09/Dec/09 07:46;ivaynberg;i agree with juergen, otherwise the child is ""magically"" overriding something in the parent which is inconsistent with how everything else works.","09/Dec/09 14:36;ncurzon;The current behavior IS that the child magically overrides the parent. This is exactly what my patch fixes. After the patch, the ?xml header comes from the parent. In 1.4.3, the ?xml header comes from the child.

You can verify this by using the attached quickstart, and moving the ?xml header from the parent, SuperPage.html, to the child, SuperPageWithMarkup.html. With 1.4.3, the final output has the ?xml header, the one from the child. With 1.4-SNAPSHOT after the patch, the ?xml header is in the final output ONLY if it's in the parent.","10/Dec/09 21:45;jdonnerstag;Because of potential subtle issues with existing 1.4 apps, I'll change it in 1.5 only",,,,,,,,,,,,
1.4.2 enclosure problem,WICKET-2519,12437901,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,girts.ziemelis,girts.ziemelis,12/Oct/09 20:49,10/Dec/09 04:41,13/Mar/19 23:15,27/Oct/09 22:50,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,2,,,,,,,,"I believe there is a enclosure related bug in wicket 1.4.2, which stopped me from upgrading :( Same code works fine with 1.4.1
Finally I narrowed it down to adding following to quick start (attached to problem):

2 lines to HomePage.html
    <wicket:enclosure><br/><a wicket:id=""logout""><wicket:message key=""logout"" /></a></wicket:enclosure>
    <wicket:enclosure><a wicket:id=""login""><wicket:message key=""login"" /></a></wicket:enclosure>

2 lines to HomePage.java
        add(new BookmarkablePageLink<Void>(""logout"", HomePage.class));
        add(new BookmarkablePageLink<Void>(""login"", HomePage.class));
and HomePage.properties
login=Login
logout=Logout

I get following stack trace

WicketMessage: Could not find child with id: login in the wicket:enclosure

Root cause:

org.apache.wicket.WicketRuntimeException: Could not find child with id: login in the wicket:enclosure
     at org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:210)
     at org.apache.wicket.markup.html.internal.Enclosure.ensureAllChildrenPresent(Enclosure.java:249)
     at org.apache.wicket.markup.html.internal.Enclosure.onComponentTagBody(Enclosure.java:169)
     at org.apache.wicket.Component.renderComponent(Component.java:2626)
     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)
     at org.apache.wicket.Component.render(Component.java:2457)
     at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)
     at org.apache.wicket.markup.resolver.EnclosureResolver.resolve(EnclosureResolver.java:61)
     at org.apache.wicket.markup.resolver.ComponentResolvers.resolve(ComponentResolvers.java:81)
     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1418)
     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1528)
     at org.apache.wicket.Page.onRender(Page.java:1545)
     at org.apache.wicket.Component.render(Component.java:2457)
     at org.apache.wicket.Page.renderPage(Page.java:914)
     at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:262)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:468)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:301)
     at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
     at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
     at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
     at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
     at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
     at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
     at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
     at org.mortbay.jetty.Server.handle(Server.java:295)
     at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
     at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)
     at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)
     at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
     at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
     at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)
     at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)

",linux,,,,,,,,,,,WICKET-2506,,,,,,,09/Dec/09 22:46;raboof;enclosures.zip;https://issues.apache.org/jira/secure/attachment/12427529/enclosures.zip,12/Oct/09 20:50;girts.ziemelis;test1.zip;https://issues.apache.org/jira/secure/attachment/12421902/test1.zip,26/Oct/09 11:11;girts.ziemelis;test2.zip;https://issues.apache.org/jira/secure/attachment/12423179/test2.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-10-13 06:01:04.397,,,no_permission,,,,,,,,,,,203399,,,Wed Dec 09 22:46:49 UTC 2009,,,,,,0|i0kd5b:,116947,,,,,,,,"12/Oct/09 20:50;girts.ziemelis;Quicstart attached. Changing wicket version to 1.4.1 in pom, same code works fine ...","13/Oct/09 06:01;jonas;Probably a duplicate of https://issues.apache.org/jira/browse/WICKET-2506
which has already been fixed","26/Oct/09 11:11;girts.ziemelis;Another test case, which seems still not fixed
Works in 1.4.1, still do not work in 1.4.3","26/Oct/09 11:17;girts.ziemelis;I believe it is still not fixed completelly in 1.4.3

HTML:
  <wicket:enclosure child=""protectionTypeHelpLink""><a wicket:id=""protectionTypeHelpLink"" target=""helpWin""><img wicket:id=""protectionTypeIcon"" src=""icon"" alt=""name""/></a></wicket:enclosure>

Java:
        ExternalLink lnk;
        add(lnk = new ExternalLink(""protectionTypeHelpLink"", ""/cont/help/hotel/symbol_help_lv.html"").setContextRelative(true));
        lnk.add(new Image(""protectionTypeIcon""));

Works fine in 1.4.1, but fails in 1.4.3 with stack trace:

WicketMessage: Could not find child with id: protectionTypeHelpLink in the wicket:enclosure

Root cause:

org.apache.wicket.WicketRuntimeException: Could not find child with id: protectionTypeHelpLink in the wicket:enclosure
     at org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:220)
     at org.apache.wicket.markup.html.internal.Enclosure.ensureAllChildrenPresent(Enclosure.java:262)
     at org.apache.wicket.markup.html.internal.Enclosure.onComponentTagBody(Enclosure.java:169)
     at org.apache.wicket.Component.renderComponent(Component.java:2617)

",09/Dec/09 22:46;raboof;quickstart that shows an enclosures-related regression: this also works for 1.4.1 and not for 1.4.2 upwards (tested to igor's preliminary 1.4.4),,,,,,,,,,,,,,,,,,,
Ajax multipart fails for inner forms added via ajax,WICKET-2595,12442125,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mdietze,mdietze,01/Dec/09 18:27,08/Dec/09 01:43,13/Mar/19 23:15,07/Dec/09 08:45,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,1,,,,,,,,"When using a file upload in a nested form (e.g. as required when using modal windows), the file upload will always return null. This bug seems related to   WICKET-2433 which was supposed to be fixed in wicket 1.4.2, but in wicket 1.4.3 this effect was observed by several people (see mailing list). ","Linux i686, glibc 2.10, jdk 1.6.07",,,,,,,,,,,,,,,,,,07/Dec/09 15:22;rdleeper;Form.java.diff;https://issues.apache.org/jira/secure/attachment/12427187/Form.java.diff,01/Dec/09 18:29;mdietze;fileupload-example.zip;https://issues.apache.org/jira/secure/attachment/12426560/fileupload-example.zip,05/Dec/09 02:27;rdleeper;quickstart.jar;https://issues.apache.org/jira/secure/attachment/12427031/quickstart.jar,07/Dec/09 15:22;rdleeper;wicket-ajax.js.diff;https://issues.apache.org/jira/secure/attachment/12427188/wicket-ajax.js.diff,,,,,4.0,,,,,,,,,,,,,,,,,,,2009-12-04 05:27:05.415,,,no_permission,,,,,,,,,,,203469,,,Tue Dec 08 01:43:39 UTC 2009,,,,,,0|i0kcz3:,116919,,,,,,,,"01/Dec/09 18:29;mdietze;The attached file contains a modified version of the ajax upload page from wicket examples. When instanciating the modal window it is added to a wrapper form which causes the upload always to fail. If modifying the code by removing the wrapper form and adding the modal window to the page instead, the upload works. ","04/Dec/09 05:27;ivaynberg;please try with wicket-1.4.x snapshot built from svn, this should already be fixed.","05/Dec/09 02:27;rdleeper;I have attached a quick start that reproduces the error in question.

Note: i have also include my suggested fix to Form and wicket-ajax.js.  The fix does allow the form to be submitted in inline frame.  However, my button.onSubmit is not being called...not sure why.

Note: without the fix, I get a ServletRequest is not a MultipartServletRequest Exception.  To see...move Form.java out of the project and rerun.","07/Dec/09 08:46;ivaynberg;in the future please attach your proposed fixes as patches. it is hard to spot a few line changes here and there in a huge file, so i did not even bother looking....",07/Dec/09 15:22;rdleeper;My apologies.  You had indicated you wanted a quick start so I did.  Here are the changes in svn diff format.  BTW...I modified wicket-ajax.js to keep original enctype and to reset to the original after the form has been submitted.  So these diff are the latest.,"07/Dec/09 16:50;ivaynberg;a quickstart to demonstrate the bug,  patches to demonstrate a solution :)",07/Dec/09 16:50;ivaynberg;have you tried with the latest snapshot? does it work for you now?,08/Dec/09 01:43;rdleeper;works perfect for me...Thanks!,,,,,,,,,,,,,,,,
AutoComplete onfocus behavior only working on last autocomplete field,WICKET-2158,12416532,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,palfred,palfred,10/Mar/09 13:41,30/Nov/09 23:42,13/Mar/19 23:15,30/Nov/09 23:42,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket-extensions,,,,0,,,,,,,,"1.4rc2 wicket-autocomplete.js have some changes in onfocus behavior that seem to be working only for the last autocomplete field. 
It could be cause by a global ""objonfocus"" in Wicket.AutoComplete Initialiaze. The objonfocus seems to be missing in ""pointers of the browser events"".",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-30 23:42:16.66,,,no_permission,,,,,,,,,,,203066,,,Mon Nov 30 23:42:16 UTC 2009,,,,,,0|i0ke67:,117113,,,,,,,,"30/Nov/09 23:42;seitz;resolving this issue as fixed, as of revision 791516 (before the 1.4.0 release) committed by jcompagner (""forgotton declaration of var objonfocus;"")
",,,,,,,,,,,,,,,,,,,,,,,
Warnings flood if incorrect credentials endered on SignInPage,WICKET-2583,12441225,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,19/Nov/09 21:05,29/Nov/09 13:10,13/Mar/19 23:15,29/Nov/09 09:10,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,,,wicket-auth-roles,,,,0,,,,,,,,"WARNING: Couldn't resolve model type of Model:classname=[org.apache.wicket.model.PropertyModel]:nestedModel=[username = ""admin""]:expression=[username] for [MarkupContainer [Component id = username]], please set the type yourself.
20.11.2009 0:04:11 org.apache.wicket.markup.html.form.AbstractTextComponent getModelType
WARNING: Couldn't resolve model type of Model:classname=[org.apache.wicket.model.PropertyModel]:nestedModel=[username = ""admin""]:expression=[password] for [MarkupContainer [Component id = password]], please set the type yourself.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-22 18:05:58.239,,,no_permission,,,,,,,,,,,203458,,,Sun Nov 29 13:10:33 UTC 2009,,,,,,0|i0kd07:,116924,,,,,,,,"22/Nov/09 18:05;jdonnerstag;This has nothing to do with wrong credentials. As the error message says, Wicket is not able to guess the model type. You simply need to tell Wicket via myTextComponent.setModelType() the model type. That's all.
","22/Nov/09 19:08;slonopotamus;Hmm... Let's try once again. This problem isn't on any random page i wrote myself, but on SignInPage from wicket-auth-roles.",29/Nov/09 09:10;jdonnerstag;fixed,29/Nov/09 13:10;slonopotamus;Thanks,,,,,,,,,,,,,,,,,,,,
Javadoc of Component#setOutputMarkupPlaceholderTag is wrong,WICKET-2580,12441045,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,erikvanoosten,erikvanoosten,18/Nov/09 14:29,28/Nov/09 23:52,13/Mar/19 23:15,28/Nov/09 23:52,1.3.7,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"The javadoc of Component#setOutputMarkupPlaceholderTag uses the term ""componentid"" where it should use ""markupid"".

Please update the javadoc from:

  The tag is of form: &lt;componenttag style=""display:none;"" id=""componentid""/&gt;.

to

  The tag is of form: &lt;componenttag style=""display:none;"" id=""markupid""/&gt;.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-28 23:52:10.021,,,no_permission,,,,,,,,,,,203455,,,Sat Nov 28 23:52:10 UTC 2009,,,,,,0|i0kd0n:,116926,,,,,,,,28/Nov/09 23:52;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.markup.html.form.Check should call Component.isEnabledInHierarchy(),WICKET-2582,12441157,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mfrankerl,mfrankerl,19/Nov/09 09:18,28/Nov/09 23:41,13/Mar/19 23:15,28/Nov/09 23:41,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"The Implementation of  onComponentTag() in org.apache.wicket.markup.html.form.Check should call Component.isEnabledInHierarchy() instead of  
""if (!isActionAuthorized(ENABLE) || !isEnabled() || !group.isEnabled())"". This would pass-through the ancestors ""enabled""-flag to the Check Component.

For example component path: "" WebMarkupContainer : CheckGroup : Check ""
Whereas the WebMarkupContainer is disabled. In the current implementation the Check ignores WebMarkupContainer ""enabled""-flag.
",wicket 1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-28 23:41:37.632,,,no_permission,,,,,,,,,,,203457,,,Sat Nov 28 23:41:37 UTC 2009,,,,,,0|i0kd0f:,116925,,,,,,,,28/Nov/09 23:41;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
FeedbackPanel in FormComponentFeedbackBorder throws ConcurrentModificationException,WICKET-2589,12441762,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,michael.mosmann,michael.mosmann,26/Nov/09 10:24,28/Nov/09 22:57,13/Mar/19 23:15,28/Nov/09 22:57,1.4.1,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"In order to draw a border around TextField and FeedbackMessage i have to put FeedbackPanel into FormCompontentFeedbackBorder. But FeedbackPanel in FormComponentFeedbackBorder throws:

java.util.ConcurrentModificationException
     at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:449)
     at java.util.AbstractList$Itr.next(AbstractList.java:420)
     at org.apache.wicket.Component.prepareForRender(Component.java:2236)
     at org.apache.wicket.Component.prepareForRender(Component.java:2260)
     at org.apache.wicket.Page.renderPage(Page.java:893)
     at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:262)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:468)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:301)
     at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1139)
     at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:378)
     at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
     at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
     at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
     at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
     at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
     at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
     at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
     at org.mortbay.jetty.Server.handle(Server.java:324)
     at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:535)
     at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:865)
     at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)
     at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
     at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
     at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
     at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)

",,,,,,,,,,,,,,,,,,,26/Nov/09 10:24;michael.mosmann;de.vergleich.bugs--wicket-bug-feedback.zip;https://issues.apache.org/jira/secure/attachment/12426211/de.vergleich.bugs--wicket-bug-feedback.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-11-28 22:57:37.044,,,no_permission,,,,,,,,,,,203463,,,Sat Nov 28 22:57:37 UTC 2009,,,,,,0|i0kczr:,116922,,,,,,,,26/Nov/09 10:24;michael.mosmann;quickstart attached,28/Nov/09 22:57;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
Unnecessary method calls in IDataProvider,WICKET-2568,12440280,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,msparer,msparer,10/Nov/09 12:38,12/Nov/09 07:13,13/Mar/19 23:15,12/Nov/09 07:13,1.3.0-beta1,1.3.0-beta2,1.3.0-beta3,1.3.0-beta4,1.3.0-final,1.3.0-rc1,1.3.0-rc2,1.3.1,1.3.2,1.3.3,1.3.4,1.3.5,1.3.6,1.3.7,1.4.0,1.4.1,1.4.2,1.4.3,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,1.4-RC2,1.4-RC3,1.4-RC4,1.4-RC5,1.4-RC6,1.4-RC7,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"Referring to the post on the mailinglist (http://old.nabble.com/Unnecessary-method-calls-in-IDataProvider--ts26266771.html), here's a quick summary of the problem:

If the size() method of an IDataProvider returns zero, the iterator(int,int) method should not be called. Calling this method with value zero as second parameter (== count)  _always_ results in returning an empty iterator. Therefore a lot of unnecessary method calls (and thus a lot of unnecessary database hits) could be saved if an empty iterator would be used by the DataView whenever size() returns an int <= 0.

Please find a project attached with a junit test that illustrates the problem. I tested it with all major releases from 1.4.3. down to 1.3.0. with the same result.",,,,,,,,,,,,,,,,,,,10/Nov/09 12:38;msparer;dataview-bug.jar;https://issues.apache.org/jira/secure/attachment/12424459/dataview-bug.jar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203444,,,2009-11-10 12:38:20.0,,,,,,0|i0kd1b:,116929,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreditCardValidator accepts invalid inputs,WICKET-2552,12439478,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mrmarri,mrmarri,30/Oct/09 02:21,08/Nov/09 07:46,13/Mar/19 23:15,08/Nov/09 07:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"(1) The onValidate() method of the CreditCardValidator class returns true for invalid inputs with null or unicode character such as 4\0\0\0\0\0\0\0\0\0\0\0\0\0\0. 
(2) Also there is no length check on the input, therefore even invalid length inputs such as 9845 are accepted. 
(3) There is no check for invalid issuer identifier, i.e.,  840898920205250 is accepted, where 84XXXX is not a valid issuer identifier",,,,,,,,,,,,,,,,,,,03/Nov/09 12:40;joachimrohde;CreditCardValidatorTest.java;https://issues.apache.org/jira/secure/attachment/12423915/CreditCardValidatorTest.java,03/Nov/09 12:40;joachimrohde;WICKET-2552-fix.patch;https://issues.apache.org/jira/secure/attachment/12423914/WICKET-2552-fix.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-10-30 06:01:58.837,,,no_permission,,,,,,,,,,,203429,,,Sun Nov 08 07:46:19 UTC 2009,,,,,,0|i0kd2v:,116936,,,,,,,,30/Oct/09 06:01;jdonnerstag;please provide a patch if you know all the rules,"03/Nov/09 12:40;joachimrohde;Attached you'll find a patch which is more accurate than the current validator which only tries to apply the Luhn algorithm. The patch takes also the prefix of the number and its length into consideration. 
The patch should work for credit card numbers of the following institutes: ""American Express"", ""China UnionPay"", ""Diners Club Carte Blanche"", ""Diners Club International"", ""Diners Club US & Canada"", ""Discover Card"", ""JCB"", ""Laser"", ""Maestro"", ""MasterCard"", ""Solo"", ""Switch"", ""Visa"" or ""Visa Electron"". 

Any other credit card number from a different bank is considered to be invalid.

Additionally a unit test can be found as an attachement.",08/Nov/09 07:46;jdonnerstag;thanks a lot,,,,,,,,,,,,,,,,,,,,,
FilterToolbar fails to render in 1.5-SS,WICKET-2558,12439606,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lgawron,lgawron,31/Oct/09 17:14,07/Nov/09 08:10,13/Mar/19 23:15,07/Nov/09 08:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket-extensions,,,,0,,,,,,,,"Adding FilterToolbar to a DataTable (using wicket 1.5-SS) throws:

org.apache.wicket.markup.MarkupNotFoundException: Markup not found for Component: [MarkupContainer [Component id = filter]]

Please find attached the test project to reproduce this behavior.",,,,,,,,,,,,,,,,,,,31/Oct/09 17:14;lgawron;datatabletest1.zip;https://issues.apache.org/jira/secure/attachment/12423763/datatabletest1.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-31 19:34:00.794,,,no_permission,,,,,,,,,,,203435,,,Sat Nov 07 08:10:56 UTC 2009,,,,,,0|i0kd1z:,116932,,,,,,,,"31/Oct/09 19:34;ivaynberg;juergen, works fine on 1.4.x, something new with your markup fragment?

leszek, i dont recommend using trunk, the code there has not had even a single milestone yet and contains many experimental ideas.","31/Oct/09 19:41;lgawron;I don't mind using trunk. I actually moved to 1.5-SS becaused it resolved some issues which caused me a lot of trouble (forgot what it was).

One more pointer: FilterToolbar used to break even before. I managed to keep it working with:

	@Override
	public boolean getMarkupFragmentEnabled() {
		return false;
	}

in my Application class.

The method is gone now.","31/Oct/09 19:47;ivaynberg;your choice, but keep in mind there will be times when trunk may not compile or everything is broken.",07/Nov/09 08:10;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,
Generified TabbedPanel constructor is too much inflexible,WICKET-2544,12439094,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pedrosans,pedrosans,26/Oct/09 18:33,02/Nov/09 19:09,13/Mar/19 23:15,02/Nov/09 19:09,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket-extensions,,,,0,,,,,,,,"The TabbedPanel constructor:
public TabbedPanel(String id, List<ITab> tabs)
is blocking me from create an TabbedPanel from an list of ITabs implementations, since List<MyITabImplementation> is not an subtype of List<ITab>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-02 19:09:15.463,,,no_permission,,,,,,,,,,,203422,,,Mon Nov 02 19:09:15 UTC 2009,,,,,,0|i0kd3r:,116940,,,,,,,,02/Nov/09 19:09;ivaynberg;constructor now takes list<? extends itab>,,,,,,,,,,,,,,,,,,,,,,,
WebRequestCodingStrategy assumes that a shared resource URL should always be relative to the Wicket handler,WICKET-2554,12439529,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,eric.glass@courtview.com,eric.glass@courtview.com,30/Oct/09 14:05,31/Oct/09 04:05,13/Mar/19 23:15,31/Oct/09 04:05,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"We use an absolute URL for the shared resources and as long as the page is directly under the Servlet context we have no problems, but for pages that have additional paths, then it is converted into a bad relative URL. For Example:

/cjs/app/test.page - This page's shared resource URLs are not modified, so http://localhost:8080/crtv/css/cjs-3.3.1B.css is correct

/cjs/app/orders/contentbuilder.page - This page's shared resource URLs are all modified causing them to be ../http://localhost:8080/crtv/css/cjs-3.3.1B.css, which is bad; and of course with JavaScript it causes us a lot of problems

I propose a simple fix in method: public final CharSequence encode(final RequestCycle requestCycle, final IRequestTarget requestTarget)

Change the following line from:

if (!sharedResourceURL && portletRequest)

To:

if (url.toString().startsWith(""http://"") || url.toString().startsWith(""https://"") || (!sharedResourceURL && portletRequest))


Thanks!","Windows XP Pro, OSGi, Eclipse 3.5, Java 5",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203431,,,2009-10-30 14:05:39.0,,,,,,0|i0kd2f:,116934,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket-ajax.js: Javascript error on submitting of form with wicketSubmitFormById.,WICKET-2553,12439509,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,stuq,stuq,30/Oct/09 11:14,30/Oct/09 15:53,13/Mar/19 23:15,30/Oct/09 15:53,1.4.2,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"In SVN revision 815602 (http://www.mail-archive.com/commits@wicket.apache.org/msg13879.html) some new code is added.

This introduces a new bug where a null button is added to the form. This gives an error in Safari and Firefox and results in a form that doesn't submit.

{code} 
               if (submitButton!=null) {
                       try {
                       var btn = document.createElement(""<input type='hidden' 
name='""+submitButton+""' id='""+iframe.id+""-btn' value='1'/>"");
                       } catch (ex) {
                           var btn = document.createElement(""input"");
                           btn.type=""hidden"";
                               btn.name=submitButton;
                               btn.id=iframe.id+""-btn"";
                               btn.value=""1"";
                       }
               }
               form.appendChild(btn);
{code} 

In the code above, form.appendChild(btn) is called. In my case, the btn is not created yet, because the ""if"" statement is skipped (submitButton == null).

This results in an error.

I think the form.appendChild(btn) line needs to be inside the ""if"" block, so it is not called when the btn does not exist.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-30 15:53:00.999,,,no_permission,,,,,,,,,,,203430,,,Fri Oct 30 15:53:00 UTC 2009,,,,,,0|i0kd2n:,116935,,,,,,,,"30/Oct/09 15:53;ivaynberg;good catch, thanks.",,,,,,,,,,,,,,,,,,,,,,,
setResponsePage redirects to wrong url,WICKET-847,12376029,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,a.klochkov,a.klochkov,15/Aug/07 08:32,28/Oct/09 16:28,13/Mar/19 23:15,07/Nov/08 07:15,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-M3,,wicket,,,,3,,,,,,,,"When I do setResponsePage(MyHomePage.class) IE tries to show me ""my.site.com/./"" url and gets 404 response. 
Firefox just shows ""my.site.com"" without any troubles. I'm using wicket 1.3-beta2 and WicketFilter mapped to /*. 
It's being reproduced under tomcat only, jetty works fine. My tomcat version is 5.5.17. 
Quickstart project which reproduces the bug is attached.",,,,,,,,,,,,,,WICKET-1998,WICKET-2549,,,,15/Aug/07 08:33;a.klochkov;wicket-quickstart.tar.gz;https://issues.apache.org/jira/secure/attachment/12363831/wicket-quickstart.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-16 12:10:56.75,,,no_permission,,,,,,,,,,,201870,,,Tue Dec 30 11:10:12 UTC 2008,,,,,,0|i0khpz:,117688,,,,,,,,"16/Aug/07 12:10;almaw;A workaround for this is probably to mount your homepage in your application init() - mountBookmarkablePage(MyHomePage.class, ""/home"");
Will look into this, though.","23/Aug/07 16:10;a.klochkov;The evil code is in the WebRequestCodingStrategy class:

			// We need to special-case links to the home page if we're at the
			// same level.
			if (result.length() == 0)
			{
				result = ""./"";
			}

A workaround is to override newWebResponse in Application subclass to prevent such redirects

<pre>
        protected WebResponse newWebResponse(HttpServletResponse servletResponse)
	{
		return new BufferedWebResponse(servletResponse) {

			public CharSequence encodeURL(CharSequence url)
			{
				return ""./"".equals(url) ? """" : super.encodeURL(url);
			}
			
		};
	}
</pre>","29/Aug/07 15:15;a.klochkov;A better workaround which solves some issues is to return ""."" instead of empty string. ",03/Nov/07 19:10;almaw;Tomcat is evidently lacking in the relative to absolute URL conversion on the 302 redirect here. We should probably just do it ourselves and not rely on one of the slightly more esoteric bits of the servlet-api spec for it.,"04/Sep/08 12:00;erikvanoosten;I got bitten by this as well (with 1.4-m3).

The failing combination is: Tomcat and IE (6 or 7).

Firefox correctly interprets the ""./"" as """" so its okay to use Firefox + Tomcat.
Jetty converts ""./"" to """", so its okay to use any borwser on Jetty.

My workaround was to patch these two Wicket core files (I can confirm it works when redirecting to the home page):

BookmarkablePageRequestTarget:
-----------8<--------------------------
	public void respond(RequestCycle requestCycle)
	{
		if (pageClassRef != null && pageClassRef.get() != null)
		{
			if (requestCycle.isRedirect())
			{
				IRequestCycleProcessor processor = requestCycle.getProcessor();
				String redirectUrl = processor.getRequestCodingStrategy()
					.encode(requestCycle, this)
					.toString();
// START OF PATCH
                if (redirectUrl.startsWith(""./"")) {
                    redirectUrl = redirectUrl.substring(2);
                }
// END OF PATCH
                requestCycle.getResponse().redirect(redirectUrl);
			}
			else
			{
				// Let the page render itself
				getPage(requestCycle).renderPage();
			}
		}
	}
-----------8<--------------------------


RedirectRequestTarget:
-----------8<--------------------------
	public void respond(RequestCycle requestCycle)
	{
		Response response = requestCycle.getResponse();
		response.reset();
		if (redirectUrl.startsWith(""/""))
		{
			RequestContext rc = RequestContext.get();
			if (rc.isPortletRequest() && ((PortletRequestContext)rc).isEmbedded())
			{
				response.redirect(redirectUrl);
			}
			else
			{
                String location = RequestCycle.get()
                        .getRequest()
                        .getRelativePathPrefixToContextRoot() +
                        this.redirectUrl.substring(1);
// START OF PATCH
                if (location.startsWith(""./"")) {
                    location = location.substring(2);
                }
// END OF PATCH
                response.redirect(location);
			}
		}
		else if (redirectUrl.startsWith(""http://"") || redirectUrl.startsWith(""https://""))
		{
			response.redirect(redirectUrl);
		}
		else
		{
			response.redirect(RequestCycle.get()
				.getRequest()
				.getRelativePathPrefixToWicketHandler() +
				redirectUrl);
		}
	}
-----------8<--------------------------
","27/Sep/08 06:03;ivaynberg;started the quickstart, clicked the link, everything seems to work in ff and ie","07/Nov/08 07:15;ivaynberg;just noticed matijn did commit the code mentioned in the comments, albeit silently. that is why it worked when i tried it.","30/Dec/08 11:10;vjaka;This patch is NOT included in 1.3.5, so fix for version is incorrect. I think it should be reapplied to 1.3.6 version at least.",,,,,,,,,,,,,,,,
InjectorHolder is broken when wicket-ioc.jar is shared between multiple web applications,WICKET-2080,12414093,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mzupanc,mzupanc,05/Feb/09 10:52,27/Oct/09 22:15,13/Mar/19 23:15,27/Oct/09 06:45,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket-spring,,,,2,,,,,,,,"I notice that in case, when I use two web-application on tomcat, sharing spring and wicket libraries, applications start to behave unpredictably.
After short exploring and debug running, I discovered that wicket ""ProxyBean"" return wrong bean from Spring. When I try with ordinary call to Spring context (WebApplicationContextUtils.getRequiredWebApplicationContext(WebApplication.get().getServletContext()).getBean(""testBeanName"");) I get correct bean.

My testCase has been run on tomcat 6.0.18. Shared library are placed under shared lib location in tomcat. All spring and wicket libraries are placed in shared lib location. For test I create webA and webB war archives. In both applications I use bean named ""appIdProvider"" but each application has different implementing class for this bean. When I start tomcat I see in logs, that both spring applicationContext are initialised. First I test webA application and result is what I expect. Next I make call to webB and result isn't what I expect, but result of call to bean injected with @SpringBean is same to call from webA application.
Same story happens if I make first call to webB and after that to webA. In this case call to webB are correct and execution of webA is wrong.
After printing the returned beans I see that annotated beans (@SpringBean) are LazyInitProxyFactory (in test values are ""org.apache.wicket.proxy.LazyInitProxyFactory$JdkHandler@107eafc"") and are same instances in both applications. If I make direct lookup in SpringContext I get back concrete bean and instances of this bean are different for each webapplication.

All this doesn't happens if I deploy both web-application together with all spring and wicket libraries embedded into web application archive (WEB-INF/lib). But deployment of spring and wicket libraries for each application is expensive if I have many web application (using wicket and spring) on same server.
",Java6 tomcat 6.0.18,,,,,,,,,,,,,,,,,,25/Oct/09 20:48;djo.mos;wib.zip;https://issues.apache.org/jira/secure/attachment/12423152/wib.zip,25/Oct/09 23:36;djo.mos;wib2.zip;https://issues.apache.org/jira/secure/attachment/12423157/wib2.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-02-05 12:54:21.374,,,no_permission,,,,,,,,,,,202994,,,Tue Oct 27 22:15:13 UTC 2009,,,,,,0|i0keev:,117152,,,,,,,,"05/Feb/09 12:54;dashorst;In my (strong) opinion, it is a severe antipattern to put libraries for your web application in a shared library path. It causes severe headaches with classloaders, memory errors etc. Don't do it.","05/Feb/09 14:35;mzupanc;So you propose that I use all libraries inside war archive, even If I have 20 applications on same server and all of them use hibernate, spring and wicket?","05/Feb/09 15:37;ivaynberg;in your test you use getBean(""testBeanName"") <== lookup by id, is your spring bean declared thus: @SpringBean(""testBeanName"")

if the above is true....

look inside springcomponentinjector, it associates the spring context with webapplication metadata. set a break point there or add stdout after you call ad(new springcomponentinjector()) in your application to see if the right context is used. start there.

","05/Feb/09 23:00;dashorst;unless you are 100% sure that all 20 applications will always use exactly the same spring, wicket, hibernate versions, and that your users don't mind if all applications need to be shutdown if you upgrade one of the libraries to a newer version. There's enough classloading problems on the hibernate and spring forums related to putting jars into shared libs that I wouldn't go there.","06/Feb/09 09:13;mzupanc;With debuging test applications on Tomcat I figure out, that problem lies in InjectorHolder. 

InjectorHolder have static private variable  ""injector"". With setInjector() variable ""injector"" is set from SpringComponentInjector(). 
At Tomcat and web application startup, first application set ""injector"" and second application then override ""injector"" variable in InjectorHolder. 

All this happens because InjectorHolder is unique per classloader and not like Spring beans, which are applicationContext aware.

If you are interested I could send also demo app.

","06/Feb/09 16:57;ivaynberg;this is exactly why sharing jars between applications is not recommended. anyways, i think there is a way to get around it, but not without making api breaks - eg removing springinjector.set/getinjector() - so we wont be able to make this change until 1.5","24/Oct/09 12:47;djo.mos;Just to mention that this problem also arises when Wicket is used in an OSGi environment. In such a scenario, the wicket jars are installed as bundles in the OSGi container and are shared by all the deployed web apps.

I faced this problem recently, and the only workaround I found was to embed the different webapps in a single bundle and assign a different wicket filter to each. It works but goes against modularization.
",24/Oct/09 22:21;ivaynberg;jawher can you provide a self-contained osgi setup that can replicate this problem? something that is easy to run and debug - preferably using something like our Start class. if i have a testbench then i can probably fix the problem.,"25/Oct/09 20:08;djo.mos;> jawher can you provide a self-contained osgi setup that can replicate this problem? something that is easy to run and debug - preferably using something like our Start class. if i have a testbench then i can probably fix the problem.

Igor: would an eclipse workspace do ? I can provide you with an archive containig 5 projects :
- 2 wicket webapps that'll serve to reproduce the bug
- 2 config bundles (for log4j and jetty)
- 1 bundle that contains a pom.xml. Running maven inside this project's directory will fetch the 27 bundles required for the thing to work.

Once the jars are fetched and isntalled by maven, you'll only have to execute an existing eclipse launch configuration, in a browser, opening http://localhost:9090/app1/ and http://localhost:9090/app2/ in two tabs (or windows) will reproduce this bug.

Is that ok ? (If not, I can try and play a bit with embedding apache felix and launching it from a java main method)",25/Oct/09 20:24;ivaynberg;embedded eclipse workspace sounds perfect,"25/Oct/09 20:48;djo.mos;Okay, so, once the attached wib.zip downloaded and extracted somewhere, let's say in a directory ${wib} :
- execute 'mvn install' in the directory ${wib}/org.djo.tp
- Launch eclipse and import the 5 projects located in ${wib} into your workspace
- In eclipse, double click on the file org.djo.tp/target.target and click on the button ""Set as target platform"" in the top right corner of the editor.
- Click on the run button and select the ""test"" run configuration.
- If everything wen well, after 1 or 2 seconds, you should be able to access the 2 wicket applications from your browser by pointing it to http://localhost:9090/app1/ and http://localhost:9090/app1/

Depending on the order, one of the apps should work and show a ""App [1|2]"" header, the other should cause an exception to show up.

I'll be around should you encounter any issues in the process ;)","25/Oct/09 22:55;ivaynberg;igor.vaynberg@eve ~/dev/src/wib/org.djo.tp
$ mvn install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building Unnamed - org.djo:org.djo.tp:pom:0.0.1-SNAPSHOT
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
Missing:
----------
1) org.springframework.osgi:jetty.start.osgi:jar:1.0.0

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.springframework.osgi -DartifactId=jetty.start.osgi -Dversion=1.0.0 -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there:
      mvn deploy:deploy-file -DgroupId=org.springframework.osgi -DartifactId=jetty.start.osgi -Dversion=1.0.0 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency:
        1) org.djo:org.djo.tp:pom:0.0.1-SNAPSHOT
        2) org.springframework.osgi:jetty.start.osgi:jar:1.0.0

2) org.springframework.osgi:jetty.web.extender.fragment.osgi:jar:1.0.1

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.springframework.osgi -DartifactId=jetty.web.extender.fragment.osgi -Dversion=1.0.1 -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there:
      mvn deploy:deploy-file -DgroupId=org.springframework.osgi -DartifactId=jetty.web.extender.fragment.osgi -Dversion=1.0.1 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency:
        1) org.djo:org.djo.tp:pom:0.0.1-SNAPSHOT
        2) org.springframework.osgi:jetty.web.extender.fragment.osgi:jar:1.0.1

----------
2 required artifacts are missing.

for artifact:
  org.djo:org.djo.tp:pom:0.0.1-SNAPSHOT

from the specified remote repositories:
  com.springsource.repository.bundles.release (http://repository.springsource.com/maven/bundles/release),
  com.springsource.repository.bundles.external (http://repository.springsource.com/maven/bundles/external),
  central (http://repo1.maven.org/maven2)

","25/Oct/09 23:36;djo.mos;Oups, sorry, you need to add this repository :

<repository>
	<id>spring-osgi</id>
	<name>Spring OSGi Friendly Repository</name>
	<url>http://maven.springframework.org/osgi</url>
</repository>

I've uploaded another version of the zip, if you would give it another try :)","26/Oct/09 07:00;ivaynberg;hrm, still cant get the workspace to do what i need. i got the two apps running, great. now i need to import my wicket projects into the workspace and have them used by the osgi container.

i imported wicket, wicket-ioc, and wicket-spring into the workspace, converted them to plugin projects, gave them the appropriate name and version, setup all the dependencies. now when i start the container i get this:

2009-10-25 23:54:41.924::WARN:  failed app
java.lang.NoClassDefFoundError: org/apache/wicket/MetaDataKey
	at org.djo.WebApp2.init(WebApp2.java:11)

which doesnt really make sense....so i mustve set up something wrong...

org.apache.wicket is an exported package in my wicket plugin project, and if the framework can see WicketFilter then why not MetaDataKey, weird.","27/Oct/09 06:45;ivaynberg;i had to add dynamic package import * to wicket modules to get them to work. anyways, fixed. injectorholder now stores the reference in the application metadata instead of a static var.",27/Oct/09 15:57;djo.mos;Kudos Igor ! I'll check this out when 1.4.4 is out.,"27/Oct/09 16:48;ivaynberg;if you check it out now, build the release yourself, you can identify further problems before 1.4.4 is out...

because if you do find another problem in 1.4.4 it will take another month to 1.4.5","27/Oct/09 22:09;djo.mos;True enough.
Tested (accidentally) with trunk (1.5-SNAPSHOT) and this bug is no more.
Now switching to the 1.4 branch to test with this version too.","27/Oct/09 22:15;djo.mos;Works with 1.4-SNAPSHOT too.

Thanks !",,,,,
Wicket doesn't clean up properly when hot-deploying; hangs onto Class references.,WICKET-625,12371149,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,almaw,almaw,07/Jun/07 15:51,27/Oct/09 06:43,13/Mar/19 23:15,27/Oct/09 06:43,1.3.0-beta1,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,wicket-extensions,wicket-spring,,4,,,,,,,,"When you undeploy a webapp, ideally it should go away and its WebAppClassLoader should be garbage collected. There are various reasons this won't happen, but they essentially split into two problems:

1) The App Server has references to classes in the WebAppClassLoader in its own objects (on Tomcat these are typically commons logging statics in StandardContext in catalina, or some of the jakarta code). There's not much you can do about this, short of getting a better app server.

2) You hold references to Class objects loaded by your WebAppClassLoader in static fields in other Classes loaded by your WebAppClassLoader.

Number 2 can be solved by the use of WeakReferences to the Class objects.

Note that you also need to be careful about classes that have Class references internally, such as java.lang.reflect.Method and Field. You can also hold these items in a WeakReference, but they have the potential to be garbage collected randomly, unlike the underlying Class objects.

I have some patches that allow me to start up and shut down a Spring-backed Wicket-based app and have the classloader cope properly. They could probably do with some review.",,,,,,,,,,,,,,,,,,,07/Jun/07 17:30;almaw;WICKET-625.patch;https://issues.apache.org/jira/secure/attachment/12359197/WICKET-625.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-07 21:19:53.186,,,no_permission,,,,,,,,,,,201662,,,Fri Jul 31 16:06:14 UTC 2009,,,,,,0|i0kibj:,117785,,,,,,,,"07/Jun/07 17:30;almaw;The attached patch works.
We need some way to fix the SoftReference stuff better (we should manually clear these caches, I think).","07/Jun/07 17:47;almaw;Note some complexities:
WeakReference is not Serializable and never will be (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4217372). I'm therefore replacing current Class references with the equivalent Class.getName(), which should be fine for our purposes.","07/Jun/07 21:19;jcompagner;i think we have more class problems that we should solve
i already reported that once on the dev list: ""PackageResource and ResourceReferences keeping a class reference"" 
also the DefaultClassResolver is maybe not something we should do..

","18/Jun/07 11:56;almaw;I've now put in a bunch of fixes for this, such that we're probably 80% of the way there. This is the easy 80%, mind you. ;-)
The remaining things are harder to fix, as they mostly references Methods not classes.",18/Jun/07 19:33;almaw;Added cache clean-up on per-application basis for PropertyResolver.,"24/Jun/07 18:14;ivaynberg;here is another thing you might want to look into, if wicket is deployed and undeployed without any url hit you get

RROR - log                        - failed wicket
org.apache.wicket.WicketRuntimeException: There is no application attached to current thread main
	at org.apache.wicket.Application.get(Application.java:170)
	at org.apache.wicket.markup.MarkupCache.<init>(MarkupCache.java:80)
	at org.apache.wicket.settings.Settings.getMarkupCache(Settings.java:1258)
	at org.apache.wicket.Application.internalDestroy(Application.java:827)
	at org.apache.wicket.protocol.http.WebApplication.internalDestroy(WebApplication.java:495)
	at org.apache.wicket.protocol.http.WicketFilter.destroy(WicketFilter.java:104)
	at org.mortbay.jetty.servlet.FilterHolder.doStop(FilterHolder.java:102)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:65)
	at org.mortbay.jetty.servlet.ServletHandler.doStop(ServletHandler.java:162)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:65)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:131)
	at org.mortbay.jetty.servlet.SessionHandler.doStop(SessionHandler.java:124)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:65)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:131)
	at org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:477)
	at org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:513)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:65)
	at org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:131)
	at org.mortbay.jetty.Server.doStop(Server.java:260)
	at org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:65)
	at com.tbs.webapp.StartTbs.main(StartTbs.java:29)",24/Jun/07 19:59;almaw;Thanks. Sorted.,16/Oct/07 06:49;ehillenius;Assigned version (beta 4),"25/Oct/07 12:49;tmaeder;Just for clarification: 

>2) You hold references to Class objects loaded by your WebAppClassLoader in static fields in other Classes loaded by your WebAppClassLoader.

why would this keep the WebAppClassLoader from being garbage collected? Is this an implementation detail of the Sun VM or am I missing something? I don't see where the reference is leaked outside the context of the WebAppClassLoader.","25/Oct/07 13:57;jcompagner;> why would this keep the WebAppClassLoader from being garbage collected? Is this an implementation detail of the Sun VM or am I missing something? I don't see where the reference is leaked outside the context of the WebAppClassLoader. 

i also don't see that directly, but what could be is that that you give classes that are loaded by the webappclassloader to classes that are from the servlet container itself for example if you have a logging.jar in the server/shared lib. And you give classes of the webapp (not shared) to the logging classes and they keep references then there is a problem.","25/Oct/07 14:29;almaw;If you keep references to class objects in static fields, the VM isn't capable of deducing that this is a circular reference.

Method and Field objects internally reference their Class, so you can't hold on to those, either. Equally, you can't put them in a HashMap that's a static field, as it's obviously all the same problem.

You can easily Google for more information on this if you're not convinced.
See for example:
http://www.szegedi.org/articles/memleak.html
http://opensource.atlassian.com/confluence/spring/pages/viewpage.action?pageId=2669
etc.","25/Oct/07 15:54;tmaeder;> If you keep references to class objects in static fields, the VM isn't capable of deducing that this is a circular reference. 

That was exactly my question: why can't the VM see the circular reference? Is this specced behaviour or a bug in the Sun VM?",27/Sep/08 06:31;ivaynberg;marking this as resolved. i believe we have removed all class references...,"31/Jul/09 10:32;interface;I think the problem still exists in Injector class (in 1.4), so this issue should be reopened. There is classToFields field with ""FIXME: WICKET-625..."" comment :), which is used to cache fields to inject for specified class. This map is not cleaned up when hot-deploying.
The patch attached above removes this map (cache), but it has not been applied and I think it is ok, because removing this cache could drastically degrade performance.

My proposal is to use a solution described in this article: http://weblogs.java.net/blog/jhook/archive/2006/12/class_metadata.html
and define classToFields field as a:
WeakHashMap<ClassLoader, ConcurrentHashMap<String, ClassMetaData>>
where a ClassLoader key will be a class loader of injected object's class. When we will use ClassLoader as the key, then the second map can store class names instead of Class<?> references.",31/Jul/09 16:06;jdonnerstag;see previous comment. Applies to 1.4 as well,,,,,,,,,
Class not found when using OSGI class loader,WICKET-2530,12438380,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mhoule,mhoule,17/Oct/09 23:40,18/Oct/09 14:51,13/Mar/19 23:15,18/Oct/09 14:51,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket-guice,,,,0,,,,,,,,"I am presently using Guice and OSGi.  Our OSGi platform is used as a plugin platform for our web application.  We load the OSGi framework and load it into Guice as a service provider.  The plugins can be used to return panel or other wicket components that are then used in the pages.

When one of the plugins components have a Guice injection, there is a class not found problem that is seen when trying to use injected stuff : 
org.apache.wicket.guice.GuiceProxyTargetLocator.locateProxyTarget(GuiceProxyTargetLocator.java:79)

This class not found is because the Guice injector is trying to access the class directly by making a Class.forName.  Since using an OSGi framework, the classloader is not capable of returning the class correctly.

To solve this issue, the wicket-guice integration should use the wicket Classes.resolveClass static method that is using a class resolver that can be changed and check for class in other class loader.",,,,,,,,,,,,,,,,,,,17/Oct/09 23:42;mhoule;wicket-guice-patch.txt;https://issues.apache.org/jira/secure/attachment/12422467/wicket-guice-patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-18 14:51:34.453,,,no_permission,,,,,,,,,,,203410,,,Sun Oct 18 14:51:34 UTC 2009,,,,,,0|i0kd47:,116942,,,,,,,,17/Oct/09 23:42;mhoule;Inserting subversion patch for the problem to be resolved.  Tested locally with our OSGi class resolver and everything works fine afterward.,18/Oct/09 14:51;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
"Easy fix suggestion: In BaseWicketTester 'IFormSubmitting' component should be the submitting component, not just a 'Button'",WICKET-2522,12438054,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mmakundi,mmakundi,14/Oct/09 08:20,17/Oct/09 11:07,13/Mar/19 23:15,17/Oct/09 11:07,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,,,,,0,,,,,,,,"Line ""if (!((formComponent instanceof Button) && (component instanceof Button)) ||""

should be changed into

Line ""if (!((formComponent instanceof IFormSubmittingComponent) && (component instanceof IFormSubmittingComponent)) ||""

See attached quickstart.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,14/Oct/09 08:22;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12422070/Wicket-Quickstart.zip,17/Oct/09 09:31;mmakundi;patch_wicket_2522.txt;https://issues.apache.org/jira/secure/attachment/12422446/patch_wicket_2522.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-10-17 11:07:05.787,,,no_permission,,,,,,,,,,,203402,,,Sat Oct 17 11:07:05 UTC 2009,,,,,,0|i0kd4v:,116945,,,,,,,,"14/Oct/09 08:22;mmakundi;Line ""if (!((formComponent instanceof Button) && (component instanceof Button)) ||""

of ""BaseWicketTester"" should be changed into

Line ""if (!((formComponent instanceof IFormSubmittingComponent) && (component instanceof IFormSubmittingComponent)) ||""

See attached quickstart.",17/Oct/09 09:31;mmakundi;Patch ,17/Oct/09 11:07;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,
DatePicker consume too much memory,WICKET-2525,12438087,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mihasik,mihasik,14/Oct/09 14:30,15/Oct/09 18:10,13/Mar/19 23:15,15/Oct/09 18:10,1.4.0,1.4.1,1.4.2,1.4-RC3,1.4-RC4,1.4-RC5,1.4-RC6,1.4-RC7,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket-datetime,,,,0,,,,,,,,"After changes related to WICKET-1988 DatePicker has two SimpleDateFormat instance members, which were static members before.
As result of it memory consumption has increased seriously. In my application DatePicker consumes 10% of total memory.
Also this change is not good for serialization since SimpleDateFormat internally has a reference to GregorianCalendar which is rather heavy. 

I think the easiest way to fix both issues (WICKET-1988 and this one) is to use date formatter from joda-time. It is thread-safe and so can be declared as static member.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-15 16:13:55.868,,,no_permission,,,,,,,,,,,203405,,,Thu Oct 15 18:10:18 UTC 2009,,,,,,0|i0kd4n:,116944,,,,,,,,15/Oct/09 16:13;dashorst;I'd just keep the format string as a property and recreate the SDF on request. They aren't that heavy to create and the JVM is good at discarding light weight garbage.,15/Oct/09 18:10;jdonnerstag;applied Martijn sugestion,,,,,,,,,,,,,,,,,,,,,,
Inconsistent resource path using <wicket:link> and HeaderContributor after second request,WICKET-2507,12437283,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,interface,interface,05/Oct/09 15:42,09/Oct/09 07:50,13/Mar/19 23:15,07/Oct/09 18:17,1.4.1,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket,,,,0,,,,,,,,"In Wicket 1.4.1, 1.4.2 there is an inconsistency in rendering resource path (eg. for css) when we are using <wicket:link> tag in HTML and HeaderContributor in Java code.
When we enter a page with a linked resource (using: <wicket:link>):
...
    <head>
        <title>Wicket Quickstart Archetype Homepage</title>
		<wicket:link>
			<link href=""main.css"" rel=""stylesheet"" type=""text/css"" media=""screen, projection""/>
		</wicket:link>
    </head>
...

for the very first time (after starting application), a link for main.css is rendered as:

<link href=""resources/com.mycompany.HomePage/main.css"" rel=""stylesheet"" type=""text/css"" media=""screen, projection""/>

But after the second request this link is always rendered as:

<link href=""resources/com.mycompany.HomePage/main_locale.css"" rel=""stylesheet"" type=""text/css"" media=""screen, projection""/>

where ""_locale"" is your current locale string (eg. ""_pl"", ""_de"", ...)
So the locale string is appended to the resource path. In Wicket 1.3.6 the path is always without locale.
You can try attached quickstart-app to see the difference.

When we replace <wicket:link> in html, with CSSPackageResource.getHeaderContribution in code:

add(CSSPackageResource.getHeaderContribution(HomePage.class, ""main.css""));

this link is always rendered as:

<link rel=""stylesheet"" type=""text/css"" href=""resources/com.mycompany.HomePage/main.css"" />

Well I think both ways: using <wicket:link> or header contribution in code, should produce always the same url path for resource and it should not contain ""_locale"" suffix (as in Wicket 1.3.6).",,,,,,,,,,,,,,,,,,,05/Oct/09 15:43;interface;wicket_link_testproject.zip;https://issues.apache.org/jira/secure/attachment/12421296/wicket_link_testproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-06 19:38:51.378,,,no_permission,,,,,,,,,,,203387,,,Fri Oct 09 07:50:04 UTC 2009,,,,,,0|i0kd6v:,116954,,,,,,,,"06/Oct/09 19:38;jdonnerstag;The problem is here: ResourceReference.java

	protected Resource newResource()
	{
		PackageResource packageResource = PackageResource.get(getScope(), getName(), getLocale(),
			getStyle());
		if (packageResource != null)
		{
			locale = packageResource.getLocale();
		}
		else
		{
			throw new IllegalArgumentException(""package resource [scope="" + getScope() + "",name="" +
				getName() + "",locale="" + getLocale() + ""style="" + getStyle() + ""] not found"");
		}
		return packageResource;
	}

The problem is ""locale = packageResource.getLocale();"". Since newResource() is only called on first invocation, on the 2nd it'll find it in the shared resource cache. When taken from the cache, locale is not reset, which is why the 2nd request returns a different URL. 

I'm not yet sure how to fix it. Obviously removing ""locale = ..."" will result in all href containing the locale. Exactly the opposite we want. Simply Ignoring locale will not find the right files and thus is no solution either. 

",07/Oct/09 18:17;jdonnerstag;thanks,"09/Oct/09 07:50;interface;Thanks for solution.

One thing - you should remove:
		<wicket:link>
			<link href=""main.css"" rel=""stylesheet"" type=""text/css"" media=""screen, projection""/>
		</wicket:link>
from the HomePage_2.html in test-case :).",,,,,,,,,,,,,,,,,,,,,
wicket:enclosure does not work if child is a container and not a component (regression from 1.4.1),WICKET-2513,12437585,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ildella,ildella,08/Oct/09 08:59,08/Oct/09 17:36,13/Mar/19 23:15,08/Oct/09 17:36,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket,,,,0,,,,,,,,I attach quickstart. Try with wicket 1.4.1 and you see test will become green. ,,,,,,,,,,,,,,,,,,,08/Oct/09 09:08;ildella;bugs-08102009.war;https://issues.apache.org/jira/secure/attachment/12421613/bugs-08102009.war,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203393,,,Thu Oct 08 09:08:18 UTC 2009,,,,,,0|i0kd67:,116951,,,,,,,,"08/Oct/09 09:08;ildella;Bug2513Test shows the problem. 
Try the war with 1.4.1 and it works. 
Remove the <img> before the <span> and it works also in 1.4.2.",,,,,,,,,,,,,,,,,,,,,,,
always insert encoding in http response header,WICKET-2348,12429086,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,pavel.cernocky,pavel.cernocky,29/Jun/09 12:51,03/Oct/09 13:11,13/Mar/19 23:15,03/Oct/09 13:11,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket,,,,0,,,,,,,,"Real bug:
If IE (6, 7, 8) receives ajax response with different encoding in http header than the originating page has, it throws JS error with message ""System error: -1072896658""

When making page redirect via ajax, the encoding is not set.
When Tomcat is behind Apache httpd (via AJP) and there's no encoding in response, httpd inserts it's own encoding into response header.

These 3 things makes ajax unusable in configuration described above.

Solution:
Always put encoding in response header. Could be added in WebResponse:230, but not sure if it's right place.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-29 15:43:37.511,,,no_permission,,,,,,,,,,,203240,,,Sat Oct 03 13:11:23 UTC 2009,,,,,,0|i0kdm7:,117023,,,,,,,,"29/Jun/09 15:43;ivaynberg;default encoding can be configured in tomcat by setting URIEncoding=""UTF-8"" on your <Connector> in server.xml ","30/Jun/09 05:43;pavel.cernocky;Thanks for tip.
Problem is, that our app is deployed on tomcat with more apps and we don't have access to tomcat config.",03/Oct/09 13:11;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,
"AutoComplete textfield ignores ""visible"" property within hierarchy.",WICKET-2497,12436826,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,annb,annb,29/Sep/09 14:46,03/Oct/09 12:01,13/Mar/19 23:15,03/Oct/09 12:01,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"When writing an autocomplete textfield on a form that is first visible,
and after an ajax call rendered invisible, the autocomplete textfields
on this form get rendered anyway in the ajax response.

The method ""renderAutocompleteHead"" in AbstractAutocompleteBehavior gets executed,
even if the AutoComplete component to which it is attached is not visible within the
component hierarchy. 

Below the snippet of code that solved it for us ...

In the class AbstractAutoCompleteBehavior, a test on the visibility was added.



public void renderHead(IHeaderResponse response) {
        if(this.getComponent().isVisibleInHierarchy()) {
            super.renderHead(response);
            renderAutocompleteHead(response);
        }
    } 


The error becomes visible in the debug window on the webpage.
",,,,,,,,,,,,,,,,,,,30/Sep/09 06:07;annb;AutoCompleteVisibilityBug.zip;https://issues.apache.org/jira/secure/attachment/12420884/AutoCompleteVisibilityBug.zip,30/Sep/09 06:37;annb;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12420887/screenshot-1.jpg,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-10-03 12:01:04.68,,,no_permission,,,,,,,,,,,203379,,,Sat Oct 03 12:01:04 UTC 2009,,,,,,0|i0kd87:,116960,,,,,,,,30/Sep/09 06:07;annb;Demo webapplication,30/Sep/09 06:37;annb;error message,03/Oct/09 12:01;jdonnerstag;fixed in a more generic way in that Component.renderHead() is skipped if the component is not visible in the hierarchy,,,,,,,,,,,,,,,,,,,,,
"in wicket 1.5, rename 1.4-SNAPSHOT to 1.5-SNAPSHOT",WICKET-2499,12437104,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,02/Oct/09 09:47,02/Oct/09 14:59,13/Mar/19 23:15,02/Oct/09 14:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"in wicket 1.5,

please rename the current version in pom.xml from '1.4-SNAPSHOT' to '1.5-SNAPSHOT' ...

--patch included--",,,,,,,,,,,,,,,,,,,02/Oct/09 09:47;pete;rename.patch;https://issues.apache.org/jira/secure/attachment/12421102/rename.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-02 14:59:29.801,,,no_permission,,,,,,,,,,,203380,,,Fri Oct 02 14:59:29 UTC 2009,,,,,,0|i0kd7z:,116959,,,,,,,,02/Oct/09 14:59;ivaynberg;i couldve sworn ive done that already...thanks,,,,,,,,,,,,,,,,,,,,,,,
problems with ISO-8859-1 to UTF-8 convertion,WICKET-2496,12436805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,reiern70,reiern70,29/Sep/09 08:19,29/Sep/09 18:04,13/Mar/19 23:15,29/Sep/09 16:11,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,With WICKET-2451was introduced new logic that allows to create property files on UTF-8. Old property files in ISO-8859-1 are supposed to be converted on the fly to UTF-8. Don't know exactly what is failing but the result is that pages that displayed fine with wicket-1.4.1 no longer do with 1.4.2. I attach a quick-start showing the problem.  ,Windows XP,,,,,,,,,,,,,,,,,,29/Sep/09 08:21;reiern70;test-encoding.zip;https://issues.apache.org/jira/secure/attachment/12420770/test-encoding.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-29 16:11:56.06,,,no_permission,,,,,,,,,,,203378,,,Tue Sep 29 16:11:56 UTC 2009,,,,,,0|i0kd8f:,116961,,,,,,,,29/Sep/09 08:21;reiern70;Quick start project,29/Sep/09 16:11;ivaynberg;will rollback WICKET-2451,,,,,,,,,,,,,,,,,,,,,,
Include component does not handle UTF-8 content correctly,WICKET-2372,12430552,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jeffchiu,jeffchiu,15/Jul/09 21:25,26/Sep/09 12:38,13/Mar/19 23:15,26/Sep/09 12:38,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"To reproduce this bug, use the Include component to include content that contains UTF-8 encoded characters. If the jvm's default charset is anything besides UTF-8, the resulting page mangles the characters.

Include uses a utility class, UrlResourceStream, to make the http connection and grab the data. Internally, UrlResourceStream runs the response through an InputStreamReader (the code is actually in the parent class, AbstractResourceStream). While UrlResourceStream allows you to specify a charset to pass to the InputStreamReader, Include doesn't allow callers to do this, so the default jvm charset is always used.

On my machine, that's ""MacRoman."" Changing the jvm's default charset by using ""-Dfile.encoding=UTF-8"" when starting the jvm causes the content to be included correctly.

Fix is to change Include to have getters/setters so that a character set can be set for each instance, which it then passes along to underlying code as described above.","Mac OS 10.5.7, Java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-26 12:38:33.35,,,no_permission,,,,,,,,,,,203264,,,Sat Sep 26 12:38:33 UTC 2009,,,,,,0|i0kdjr:,117012,,,,,,,,26/Sep/09 12:38;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
JavaDoc: Some JavDoc examples still refer to WicketServlet,WICKET-2386,12431045,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,funkattack,funkattack,21/Jul/09 16:49,26/Sep/09 12:28,13/Mar/19 23:15,26/Sep/09 12:28,1.4.0,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,1.4-RC2,1.4-RC3,1.4-RC4,1.4-RC5,1.4-RC6,1.4-RC7,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"Some JavDoc examples still refer to WicketServlet, instead they should use WicketFilter.

Most important candidate might be 
./wicket-spring/src/main/java/org/apache/wicket/spring/SpringWebApplicationFactory.java

grep . -R --include '*.java' -e 'WicketServlet'
indicates that others might be affected too.


","URL: http://svn.apache.org/repos/asf/wicket/trunk
Repository Root: http://svn.apache.org/repos/asf
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 796366
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-26 12:28:20.947,,,no_permission,,,,,,,,,,,203275,,,Sat Sep 26 12:28:20 UTC 2009,,,,,,0|i0kdif:,117006,,,,,,,,26/Sep/09 12:28;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
DateField.newDateTextField's parameters should be generified,WICKET-2396,12431282,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,vladimir.kovalyuk,vladimir.kovalyuk,23/Jul/09 18:45,26/Sep/09 11:07,13/Mar/19 23:15,26/Sep/09 11:07,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"	protected DateTextField newDateTextField(String id, PropertyModel<Date> dateFieldModel)
	{
		return DateTextField.forShortStyle(id, dateFieldModel);
	}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-26 11:07:14.873,,,no_permission,,,,,,,,,,,203284,,,Sat Sep 26 11:07:14 UTC 2009,,,,,,0|i0kdhb:,117001,,,,,,,,26/Sep/09 11:07;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
RequestCycle urlFor ignores existing parameters when appending provided params,WICKET-2434,12433926,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,cvl,cvl,25/Aug/09 09:32,23/Sep/09 04:27,13/Mar/19 23:15,23/Sep/09 04:27,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"Link with listener and non empty parameters, built in the following fashion: getRequestCycle().urlFor(this, ILinkListener.INTERFACE, parameters) isn't formed correctly.

at RequestCycle 947:
AppendingStringBuffer buff = new AppendingStringBuffer(url);
WebRequestEncoder encoder = new WebRequestEncoder(buff);

This WebRequestEncoder doesn't check, if the parameters are already present in the url provided.

In my case, the url from CharSequence url = encodeUrlFor(target); is already similar to:  ?wicket:interface=:2:admin:container:tabbedPanel:panel:apartments:0:apartmentAddressEditLink:1:ILinkListener::

What WebRequestEncoder does when appending parameters provided explicitly - it simply appends ""?"" mark and then the parameters list.

So resulting url is incorrect and doesn't work:
?wicket:interface=:2:admin:container:tabbedPanel:panel:apartments:0:apartmentAddressEditLink:1:ILinkListener::?height=300&width=300

(notice leading ?height=300&width=300).","macosx 10.5.7, wicket 1.4.0",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203321,,,2009-08-25 09:32:49.0,,,,,,0|i0kdcv:,116981,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavascriptUtils.escapeQuotes() misses escaping double quotes,WICKET-2458,12435186,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tapter,tapter,09/Sep/09 07:16,23/Sep/09 01:40,13/Mar/19 23:15,23/Sep/09 01:40,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"The JavaDoc for org.apache.wicket.util.string.JavascriptUtils.escapeQuotes(CharSequence) states:
""Escape quotes and double quotes so that they can be part of e.g. an alert call.""

But the actual implementation only escapes quotes:

CharSequence s = input;
if (s != null)
{
	s = Strings.replaceAll(s, ""'"", ""\\'"");
}
return s;

Either the javadoc must be amended or the implementation must also escape double quotes which probably would be the better choice as alerts can both specified using single or double quotes.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203343,,,2009-09-09 07:16:25.0,,,,,,0|i0kdbj:,116975,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TabbedPanel rendering bug,WICKET-2478,12436094,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pedrosans,pedrosans,18/Sep/09 20:15,22/Sep/09 22:46,13/Mar/19 23:15,22/Sep/09 22:46,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"In my application I have on TabbedPanel component that has no tab ( will to be removed since make no sense ). Any way, at some point I put the component to an AjaxRequestTarget response, an when the tabbed panel was re-rendered, it throw an java.lang.ArrayIndexOutOfBoundsException: 0 (I'm sending an test case attached)
The problem is that on isTabVisible method, an visibility variable receive the visibility on cache using the tabIndex:

Boolean visible = tabsVisibilityCache[tabIndex];

at this moment, the tabsVisibility is empty ( and tabIndex == 0 )

in my workspace I resolve the exception testing the array lenght (I'm sending a path)

although is an rare occurrence bug, I think wicket should provide an  solution.",,,,,,,,,,,,,,,,,,,21/Sep/09 18:35;pedrosans;patch.txt;https://issues.apache.org/jira/secure/attachment/12420208/patch.txt,18/Sep/09 20:19;pedrosans;tabbedpaneltestel.jar;https://issues.apache.org/jira/secure/attachment/12420069/tabbedpaneltestel.jar,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203362,,,2009-09-18 20:15:50.0,,,,,,0|i0kd9b:,116965,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableChoiceLabel does not detach choices model,WICKET-2477,12436066,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,emu,emu,18/Sep/09 13:56,22/Sep/09 22:39,13/Mar/19 23:15,22/Sep/09 22:39,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"The component org.apache.wicket.extensions.ajax.markup.html.AjaxEditableChoiceLabel never detaches its choices list model, thus keeping this model attached indefinitely. It should detach when the component's own detach method is called, like eg. this:

@Override
public void detachModels() {
	choices.detach();
	super.detachModels();
}

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203361,,,2009-09-18 13:56:46.0,,,,,,0|i0kd9j:,116966,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improper HTML escaping for most wicket components and extensions,WICKET-1311,12387378,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alph,alph,29/Jan/08 13:43,22/Sep/09 14:15,13/Mar/19 23:15,31/Jul/08 06:32,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"All text based components use a central function to escape html markup probably contained in the text.
This is good style but the used method Strings.escapeMarkup() does not fullfill its contract.
It does NOT escape all input but instead GUESSES and so it does not escape the String ""&#"" because it assumes
an entity.
That means it is not possible to display data which looks like a numeric entity.
This utility method should not guess about it's input but escape blindly.
If an entity should be ""tunnelled through"", there should be some kind of attributation.

Using the current code it's not possible to have a text value of e.g. '&#20;' getting properly stored and displayed
as exactly these 5 chars.

(Try it at  http://wicketstuff.org/wicket13/compref/?wicket:interface=:0:::: )

",Web Browser ... :-),,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-26 09:18:55.185,,,no_permission,,,,,,,,,,,202292,,,Thu Jul 31 06:32:02 UTC 2008,,,,,,0|i0kggn:,117484,,,,,,,,26/Mar/08 09:18;jcompagner;igor can you check this for 1.3 and move it if needed,31/Jul/08 06:32;ivaynberg;this change is only going into 1.4 because i do not know the full extent of this change and do not want to pull a rug from under running applications,,,,,,,,,,,,,,,,,,,,,,
"Form.findForm(Component c) bug. When form is part of Border and form component like TextField is inside another Border , component cannot resolve its form.",WICKET-2453,12434945,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,bkalas@gmail.com,bkalas@gmail.com,06/Sep/09 14:42,19/Sep/09 19:44,13/Mar/19 23:15,19/Sep/09 19:44,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"I have Border class which renders Form and some other elements for feedback messages. 
Class included in attachments. 
Into this border i am putting form component which is Panel and in that Panel is another Border.  
Borders form has body container added.

When i submit form i get error ""Could not find Form parent for ...""
It's because Form.findForm method search for Form.class just in nearest component Border and not in all Borders upper in hierarchy. 

",,,,,,,,,,,,,,,,,,,08/Sep/09 21:00;bkalas@gmail.com;myproject.tar.gz;https://issues.apache.org/jira/secure/attachment/12418968/myproject.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-09-08 17:27:19.018,,,no_permission,,,,,,,,,,,203338,,,Sat Sep 19 19:44:46 UTC 2009,,,,,,0|i0kdc7:,116978,,,,,,,,"06/Sep/09 14:51;bkalas@gmail.com;Sorry for ""Class included in attachments""... when i was writing the issue, i thought there is a possibility of including attachments in this jira.",08/Sep/09 17:27;jdonnerstag;A junit test based on WicketTester or a quickstart would be very helpful,08/Sep/09 21:00;bkalas@gmail.com;Small project with unit test failing on this error...,19/Sep/09 19:44;jdonnerstag;fixed. Thanks,,,,,,,,,,,,,,,,,,,,
Building ThreadTest fails in trunk,WICKET-2470,12435818,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aldaris,aldaris,16/Sep/09 12:38,16/Sep/09 15:20,13/Mar/19 23:15,16/Sep/09 15:20,1.5-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"Building the trunk fails at ThreadTest module, because it uses the deprecated NumberValidator in org.apache.wicket.threadtest.apps.app1.Home.java",,300,300,,0%,300,300,,,,,,,,,,,,16/Sep/09 12:41;aldaris;threadtest.patch;https://issues.apache.org/jira/secure/attachment/12419761/threadtest.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203354,,,Wed Sep 16 12:41:17 UTC 2009,,,,,,0|i0kd9z:,116968,,,,,,,,"16/Sep/09 12:41;aldaris;This patch solves the issue, and makes the ThreadTest module buildable.",,,,,,,,,,,,,,,,,,,,,,,
Ajax support for multipart forms broken in a nested form,WICKET-2433,12433831,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mpalka,mpalka,24/Aug/09 09:11,16/Sep/09 05:53,13/Mar/19 23:15,16/Sep/09 05:53,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"Ajax support for multipart forms broken in case of using a nested multipart form. The file does not get uploaded, uploadField.getFileUpload() returns null.","Java: 1.6.0_13; Java HotSpot(TM) Client VM 11.3-b02
System: Windows XP version 5.1 running on x86; Cp1250; pl_PL (nb)",,,,,,,,,,,,,,,,,,24/Aug/09 09:12;mpalka;NestedUploadForm.zip;https://issues.apache.org/jira/secure/attachment/12417455/NestedUploadForm.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203320,,,Mon Aug 24 09:12:32 UTC 2009,,,,,,0|i0kdd3:,116982,,,,,,,,24/Aug/09 09:12;mpalka;A quickstart project to reproduce the issue.,,,,,,,,,,,,,,,,,,,,,,,
Ajax miltipart form submitting ignores setDefaultFormProcessing(false),WICKET-2463,12435402,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vladimir.kovalyuk,vladimir.kovalyuk,11/Sep/09 08:34,16/Sep/09 04:36,13/Mar/19 23:15,16/Sep/09 04:36,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,http://www.nabble.com/defaultFormProcessing-is-no-longer-considered-when-processing--multipart-form-in-ajax-request-td25376538.html,,,,,,,,,,,,,,,,,,,11/Sep/09 08:36;vladimir.kovalyuk;multipart.zip;https://issues.apache.org/jira/secure/attachment/12419281/multipart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203347,,,Fri Sep 11 08:36:07 UTC 2009,,,,,,0|i0kdan:,116971,,,,,,,,11/Sep/09 08:36;vladimir.kovalyuk;simple sample that demonstrates the problem,,,,,,,,,,,,,,,,,,,,,,,
DynamicImageResouce blocks loading of AjaxLazyLoadPanel,WICKET-2100,12414682,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,sgarcia,sgarcia,12/Feb/09 17:59,26/Aug/09 20:50,13/Mar/19 23:15,23/Feb/09 02:33,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,wicket-extensions,,,2,,,,,,,,"The loading process of an image which loads its contents from a DynamicImageResource blocks changing of an AjazLazyLoadPanel from indicating image to content. ""respond(...)"" method of AbstractDefaultAjaxBehavior from AjaxLazyLoadPanel is never called.

Within the attached quick start there is a forced delay because the image is too small and loads too quick  to force the error. I think the problem is that loading the first dynamic resource changes state of the page from ""domready"" to ""load"" and attached AjaxLazyLoadPanel script ignores it's execution. ",,,,,,,,,,,,,,,,,,,12/Feb/09 18:02;sgarcia;TestPage.html;https://issues.apache.org/jira/secure/attachment/12400118/TestPage.html,12/Feb/09 18:03;sgarcia;TestPage.java;https://issues.apache.org/jira/secure/attachment/12400119/TestPage.java,12/Feb/09 18:04;sgarcia;TestPanel.html;https://issues.apache.org/jira/secure/attachment/12400122/TestPanel.html,12/Feb/09 18:03;sgarcia;TestPanel.java;https://issues.apache.org/jira/secure/attachment/12400121/TestPanel.java,,,,,4.0,,,,,,,,,,,,,,,,,,,2009-02-22 20:51:40.512,,,no_permission,,,,,,,,,,,18577,,,Wed Aug 26 20:48:40 UTC 2009,,,,,,0|i0kebz:,117139,,,,,,,,"22/Feb/09 20:51;ivaynberg;matej, i traced the code responsible for this to:

Revision: 546798
Author: knopp
Date: 6/13/07 3:00 AM
Comment:
Ignore Ajax request while regular request for same page is processed

","08/May/09 23:01;rcastro;I tested Wicket 1.3.6 and I can still see this issue, so it may not be (entirely) fixed. My AjaxLazyLoadPanels (with DynamicImageResource on the same page) are never loaded. This is the ajax output:


INFO: Using XMLHttpRequest transport
INFO:
INFO: Initiating Ajax GET request on ../;jsessionid=21EF87A7A34DE750EE3E6320E1F1DD9F?wicket:interface=:0:ticket_panel::IBehaviorListener:0:1&random=0.0253542694566391
INFO: Invoking pre-call handler(s)...
INFO: Channel busy - postponing...
INFO: Received ajax response (31 characters)
INFO:
<ajax-response></ajax-response>
INFO: Response parsed. Now invoking steps...
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: Calling posponed function...
INFO:
INFO: Initiating Ajax GET request on ../;jsessionid=21EF87A7A34DE750EE3E6320E1F1DD9F?wicket:interface=:0:monitor_panel::IBehaviorListener:0:1&random=0.4184016669753995
INFO: Invoking pre-call handler(s)...
INFO: last focus id was not set
INFO: Received ajax response (31 characters)
INFO:
<ajax-response></ajax-response>
INFO: Response parsed. Now invoking steps...
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: last focus id was not set
INFO: focus set on wicketDebugLink
INFO: focus removed from wicketDebugLink","26/Aug/09 20:48;rcastro;I upgraded to 1.4.0 and the same thing:

INFO: Initiating Ajax GET request on ../?wicket:interface=:3:tabpanel:panel:app_graph_panel:1:graph::IBehaviorListener:0:1&random=0.7774967316771
INFO: Invoking pre-call handler(s)...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...
INFO: Channel busy - postponing...",,,,,,,,,,,,,,,,,,,,,
Malformed \uxxxx encoding in MultipleUploadField_sl.properties,WICKET-2430,12433678,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tim@ripe.net,tim@ripe.net,21/Aug/09 12:23,21/Aug/09 15:30,13/Mar/19 23:15,21/Aug/09 15:30,1.3.2,1.3.3,1.3.4,1.3.5,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,,,,,,,0,,,,,,,,"Apperently the MultipleUploadField_sl.properties file contains an invalid unicode character here:

org.apache.wicket.mfu.caption.limited=Datoteke (najve\u\u010d ${max}):

This results in an exception when this file is loaded by wicket:
Caused by: java.lang.IllegalArgumentException: Malformed \uxxxx encoding.
	at java.util.Properties.loadConvert(Properties.java:492)
	at java.util.Properties.load(Properties.java:331)
	at org.apache.wicket.resource.PropertiesFactory.loadPropertiesFile(PropertiesFactory.java:203)
	at org.apache.wicket.resource.PropertiesFactory.loadPropertiesFileAndWatchForChanges(PropertiesFactory.java:289)
	at org.apache.wicket.resource.PropertiesFactory.load(PropertiesFactory.java:118)
	at org.apache.wicket.resource.loader.ComponentStringResourceLoader.loadStringResource(ComponentStringResourceLoader.java:148)
	at org.apache.wicket.resource.loader.ComponentStringResourceLoader.loadStringResource(ComponentStringResourceLoader.java:225)
	at org.apache.wicket.Localizer.getString(Localizer.java:221)
	at org.apache.wicket.Localizer.getString(Localizer.java:112)
	at org.apache.wicket.Component.getString(Component.java:1799)
	at org.apache.wicket.Component.getString(Component.java:1786)
	at org.apache.wicket.markup.html.form.upload.MultiFileUploadField.renderHead(MultiFileUploadField.java:202)
	at org.apache.wicket.Component.renderHead(Component.java:2544)
	at org.apache.wicket.markup.html.form.FormComponentPanel.renderHead(FormComponentPanel.java:183)
	at org.apache.wicket.markup.html.internal.HtmlHeaderContainer$1.component(HtmlHeaderContainer.java:220)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:829)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:844)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:869)
	at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.renderHeaderSections(HtmlHeaderContainer.java:211)
	at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.onComponentTagBody(HtmlHeaderContainer.java:136)
	at org.apache.wicket.Component.renderComponent(Component.java:2471)
	... 45 more

As far as we can tell versions 1.3.2 - 1.3.6 are affected. You may want to check other versions.

This is causing a production issue for us, but.. we will work around it by enforcing the en locale on our users.. which in this case is acceptable.

Cheers,
Tim",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203317,,,2009-08-21 12:23:08.0,,,,,,0|i0kddr:,116985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultDataTable hides NavigationToolbar once and forever,WICKET-2422,12432772,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,michael.mosmann,michael.mosmann,11/Aug/09 13:16,15/Aug/09 18:07,13/Mar/19 23:15,11/Aug/09 15:53,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.1,,,wicket-extensions,,,,0,,,,,,,,"DefaultDataTable does not show NavigationToolbar if initial data does not require more than one page.
DefaultDataTable hides and does not show NavigationToolbar again if data one time does not require more than one page .
",,,,,,,,,,,,WICKET-2402,,,,,,,11/Aug/09 13:18;michael.mosmann;de.vergleich.bugs--wicket-bug-datatable.zip;https://issues.apache.org/jira/secure/attachment/12416197/de.vergleich.bugs--wicket-bug-datatable.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203309,,,Tue Aug 11 16:01:59 UTC 2009,,,,,,0|i0kdf3:,116991,,,,,,,,"11/Aug/09 13:18;michael.mosmann;here is a quickstart for testing purposes..
you can add and remove entries in the list with two links.
",11/Aug/09 13:20;michael.mosmann;in wicket rc3? or rc4? was a similar bug (NavigatorPanel did not override callOnBeforeRenderIfNotVisible()) which is here not the case... so it's not the same problem.. ,"11/Aug/09 16:01;michael.mosmann;i am not sure about this..
IMHO .. the onBeforeRender() and callOnBeforeRenderIfNotVisible() implementation should do the same as the version with overriding isVisible()..
can you explain the bug a little, so that i can get a better picture, why in this example you have to override isVisible() ?
thanks a lot
",,,,,,,,,,,,,,,,,,,,,
FormTester should call detach,WICKET-2378,12430852,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,18/Jul/09 10:37,15/Aug/09 18:06,13/Mar/19 23:15,15/Aug/09 18:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.1,,,wicket,,,,0,,,,,,,,"So after closing WICKET-2377 and thinking it was my fault it actually wasn't...

When calling tester.newFormTester() the constructor of FormTester attaches model objects when visiting the form's children. it should detach these models again:

  *** no models attached
     tester.newFormTester(""form"")
  *** models are attached now!!

Patch included. It compiles clean with current trunk. Please integrate it before going final. The current behavior is different from running wicket on a web server so test cases are not testing the real behavior of wicket.",,,,,,,,,,,,,,,,,,,18/Jul/09 10:37;pete;form_tester_detach.patch;https://issues.apache.org/jira/secure/attachment/12413921/form_tester_detach.patch,18/Jul/09 10:53;pete;form_tester_detach_1_3_x.patch;https://issues.apache.org/jira/secure/attachment/12413922/form_tester_detach_1_3_x.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203270,,,2009-07-18 10:37:25.0,,,,,,0|i0kdjj:,117011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form generates invalid html in appendDefaultButtonField,WICKET-2316,12427428,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,papegaaij,papegaaij,09/Jun/09 08:11,15/Aug/09 16:49,13/Mar/19 23:15,15/Aug/09 16:49,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.1,,,wicket,,,,1,,,,,,,,"The javascript added to the button contains several unescaped &, such as ""b!=null&&b.onclick!=null&&typeof(b.onclick)"", these should be replaced with &amp;. This was already mentioned in ticket 2033, but that ticket is about another problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-08-14 12:43:23.965,,,no_permission,,,,,,,,,,,203209,,,Fri Aug 14 12:43:23 UTC 2009,,,,,,0|i0kdpr:,117039,,,,,,,,"14/Aug/09 12:43;ykarikos;I'm experiencing the same problem on Wicket 1.4.0.

The problem is found on row 1468 in org/apache/wicket/markup/html/form/Form.java. However, I don't have the time ATM to set up wicket build environment, write the unit test and create the patch for the problem.",,,,,,,,,,,,,,,,,,,,,,,
"Not all ""domready"" events are called when two wicket-event.js files are added to the page",WICKET-2423,12432988,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,theorm,theorm,13/Aug/09 13:34,13/Aug/09 15:54,13/Mar/19 23:15,13/Aug/09 15:54,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.1,,,wicket,,,,0,,,,,,,,"When more than one wicket portlets run in a portal a page could get more than one wicket-event.js entry and more than one Wicket.Event.add(window, ""domready"", function() {...});. In this case not all of these ""domready"" functions are executed. 

It happens because Wicket.Event object is created every time browser reaches wicket-event.js entry declaration which in turn causes Wicket.Event.fireDomReadyHandlers function to execute not all functions (this function is called only once when the global variable 'window.loaded' is set to false).

Attached patch fixes the problem by ensuring that Wicket.Event object is created only once.",,,,,,,,,,,,,,,,,,,13/Aug/09 13:35;theorm;wicket-events.patch;https://issues.apache.org/jira/secure/attachment/12416438/wicket-events.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203310,,,2009-08-13 13:34:20.0,,,,,,0|i0kdev:,116990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetRowsPerPage with AjaxFallbackDefaultDataTable,WICKET-2402,12431621,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,chungonn,chungonn,28/Jul/09 18:48,11/Aug/09 15:55,13/Mar/19 23:15,11/Aug/09 15:55,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.1,,,wicket-extensions,,,,0,,,,,,,,"The issue was reported earlier by Anton Veretennikov http://www.nabble.com/setRowsPerPage-with-AjaxFallbackDefaultDataTable-tp22521131p22521131.html.

His proposed solution to override the NavigationToolbar#isVisible works for me too.

  @Override
  public boolean isVisible() {
    return table.getPageCount()>1;
  } ","Ubuntu 9.04, Java build 1.6.0_14-b08",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203289,,,2009-07-28 18:48:23.0,,,,,,0|i0kdgf:,116997,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Localization messages stops working with validators since 1.4-rc2,WICKET-2350,12429184,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aldaris,aldaris,30/Jun/09 10:39,11/Aug/09 12:35,13/Mar/19 23:15,14/Jul/09 03:42,1.4-RC2,1.4-RC4,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,0,,,,,,,,"With the previous 1.3.6 and 1.4-rc1 releases I was capable to restrict a localization message for a validation to only one wicket id e.g. :

in foobar.java
RequiredTextField nameTF = new RequiredTextField(""name"");
nameTF.add(StringValidator.lengthBetween(2, 255));
nameTF.add(new PatternValidator(""[^|:]*""));

and in foobar.properties
name.Required=some text
name.StringValidator.range=some other text
name.PatternValidator=some other text again

So, like this I could have to create an another RequiredTextField named ""password"", and attach to it a different localization message (for example ""password.Required=blabla"").

But somehow with the 1.4-rc2-5 it looks like that this function is broken, it only recognizes the localization text, when I remove the ""name."" prefix from my property.",,7200,7200,,0%,7200,7200,,,,,,,,,,,,30/Jun/09 10:42;aldaris;validation-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12412154/validation-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-30 21:37:13.983,,,no_permission,,,,,,,,,,,203242,,,Tue Aug 11 12:35:43 UTC 2009,,,,,,0|i0kdlr:,117021,,,,,,,,30/Jun/09 10:42;aldaris;This is a quickstart to show the problem.,"30/Jun/09 21:37;ivaynberg;the proper format of the override key is formid.componentid.key, you are missing the formid part. this was considered a bug in earlier versions of wicket and was fixed.

the format is outlined on this page

http://cwiki.apache.org/WICKET/localization-and-skinning-of-applications.html

which has not been changed since jan 2008.","02/Jul/09 17:28;javadoc;So that 

myForm.myField=works
myField=works as well (!)
myForm.myField.Required=works
myField.Required=doesnt.

looks quite inconsistent to me? what am i missing? ",03/Jul/09 15:50;ivaynberg;rethinking this. using field.key is handy in more global property files. need to try to find and revisit the reasons why this was removed.,"11/Aug/09 12:35;mblicha;after update from 1.4-rc to 1.4.0 i see the opposite behaviour:

myField.Required = works
Required = does not

so now i'm not getting any messages from default Application.properties",,,,,,,,,,,,,,,,,,,
KittenCaptcha example broken,WICKET-2394,12431271,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,23/Jul/09 16:46,23/Jul/09 17:42,13/Mar/19 23:15,23/Jul/09 17:42,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,1.4-RC2,1.4-RC3,1.4-RC4,1.4-RC5,1.4-RC6,1.4-RC7,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,0,,,,,,,,"KittenCaptcha example broken

Nullpointer thrown

ERROR - RequestCycle               - 
java.lang.NullPointerException
	at org.apache.wicket.extensions.captcha.kittens.KittenCaptchaPanel$2.onEvent(KittenCaptchaPanel.java:183)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:299)


Following diff does the trick. But maybe this is platform dependent as I currently can test undre linux environment.

Index: src/main/java/org/apache/wicket/extensions/captcha/kittens/KittenCaptchaPanel.java
===================================================================
--- src/main/java/org/apache/wicket/extensions/captcha/kittens/KittenCaptchaPanel.java	(revision 796623)
+++ src/main/java/org/apache/wicket/extensions/captcha/kittens/KittenCaptchaPanel.java	(working copy)
@@ -170,7 +170,7 @@
 				// ajax request passing in mouse co-ordinates
 				return generateCallbackScript(""showLoadingIndicator(); wicketAjaxGet('"" +
 					getCallbackUrl(onlyTargetActivePage) +
-					""&amp;x=' + getEventX(this, event) + '&amp;y=' + getEventY(this, event)"");
+					""&x=' + getEventX(this, event) + '&y=' + getEventY(this, event)"");
 			}
 
 			@SuppressWarnings(""unchecked"")


","Server & Browsers running on:
Linux DLKA-59HZ13J 2.6.28-13-generic #45-Ubuntu SMP Tue Jun 30 19:49:51 UTC 2009 i686 GNU/Linux

Browser: Firefox and Konqueror

URL: http://svn.apache.org/repos/asf/wicket/trunk
Repository Root: http://svn.apache.org/repos/asf
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 796623
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203282,,,2009-07-23 16:46:19.0,,,,,,0|i0kdhj:,117002,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MarkupComponentBorder fails to close stream (?),WICKET-2392,12431227,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,raboof,raboof,23/Jul/09 08:31,23/Jul/09 16:32,13/Mar/19 23:15,23/Jul/09 16:20,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,0,,,,,,,,"MarkupComponentBorder, in findMarkupStream, creates a MarkupResourceStream but doesn't close it.

Shouldn't this stream be closed after the call to Application.get().getMarkupSettings().getMarkupParserFactory().newMarkupParser(markupResourceStream).parse(); ?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203280,,,2009-07-23 08:31:00.0,,,,,,0|i0kdhr:,117003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tag '<BODY>'has a mismatched close tag at '</SPAN>' ,WICKET-2391,12431208,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,kankan zhou,kankan zhou,23/Jul/09 03:01,23/Jul/09 16:32,13/Mar/19 23:15,23/Jul/09 16:15,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket-auth-roles,,,,0,,,,,,,,in the wicket-auth-roles-1.4-rc7.jar!/org/apache/wicket/authentication/panel/SignInPanel_ja.html tag '<BODY>'has a mismatched close tag at '</SPAN>' ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203279,,,2009-07-23 03:01:54.0,,,,,,0|i0kdhz:,117004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page.checkRendering fails after setting BorderBodyContainer visiblity to false,WICKET-2368,12430369,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mfrankerl,mfrankerl,14/Jul/09 13:14,14/Jul/09 15:16,13/Mar/19 23:15,14/Jul/09 15:16,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,0,,,,,,,,"After toggling visibility of the BorderBodyContainer to false the Page.checkRendering method fails in line 1157, claiming an iterator IllegalStateException. This happens because iterator.remove() is called twice for a child component in the border component, if the body is not visible.

My Code:

public class TogglePanel extends Border {
	private boolean expanded = true;

	public TogglePanel(String id, IModel<String> titleModel) {
		super(id, titleModel);

		Link link = new Link(""title"") {

			@Override
			public void onClick() {
				expanded = !expanded;
				getBodyContainer().setVisible(expanded);
			}
		};
		link.add(new Label(""titleLabel"", titleModel));

		add(link);
	}

}

Markup:

<wicket:border>
	<h3 class=""collapse"" wicket:id=""title"">
		<span class=""label"" wicket:id=""titleLabel"">Panel Title</span>
		<a class=""foldicon"">&nbsp;</a>
	</h3>
	<wicket:body />
</wicket:border>

","      <groupId>org.apache.wicket</groupId>
      <artifactId>wicket</artifactId>
      <version>1.4-rc5</version>",,,,,,,,,,,,,,,,,,14/Jul/09 15:05;jdonnerstag;wicket-2368.patch;https://issues.apache.org/jira/secure/attachment/12413437/wicket-2368.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-07-14 15:05:35.348,,,no_permission,,,,,,,,,,,203260,,,Tue Jul 14 15:16:53 UTC 2009,,,,,,0|i0kdk7:,117014,,,,,,,,14/Jul/09 15:05;jdonnerstag;I attached a test case which I wanted to add to the existing once to prevent the problem from happening in the future again. But actually it doesn't fail. May be you can have a look at it and modify it so that it fails. It seems something is missing in your story.,14/Jul/09 15:16;jdonnerstag;fixed. Thanks,,,,,,,,,,,,,,,,,,,,,,
Radio#onComponentTag uses Objects.equal instead of model comparator,WICKET-2277,12425466,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,14/May/09 14:26,13/Jul/09 08:48,13/Mar/19 23:15,15/May/09 06:07,1.4-RC2,1.4-RC3,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"Radio#onComponentTag uses 
Objects.equal instead of modelcomparator from RadioGroup. Because of that, it is impossible to use custom model comparator in RadioGroup as
RadioGroup must contain values that pass equality check with values in Radios (otherwise, Radios aren't marked as checked in html).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-15 06:07:54.038,,,no_permission,,,,,,,,,,,203174,,,Mon Jul 13 08:48:10 UTC 2009,,,,,,0|i0kdtr:,117057,,,,,,,,"14/May/09 14:34;slonopotamus;Also affects 1.4-rc3, 1.4-rc4: http://fisheye6.atlassian.com/browse/wicket/trunk/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java?r=762860#l191",15/May/09 06:07;jdonnerstag;thanks,15/May/09 06:56;slonopotamus;Wow! Great respect for such fast response & fix.,13/Jul/09 08:48;slonopotamus;Confirming that fix works in 1.4-rc6.,,,,,,,,,,,,,,,,,,,,
Problem with displaying expired page.,WICKET-2346,12428947,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wahu,wahu,26/Jun/09 11:13,06/Jul/09 16:16,13/Mar/19 23:15,06/Jul/09 16:16,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC7,,,wicket,,,,0,,,,,,,,"PageExpiredError Page is not displayed any more. I'm getting error page containing apache.wicket.protocol.http.request.InvalidUrlException instead.

In WebRequestCycleProcessor.resolve() method, when PageExpiredException is thrown, it is wrapped with InvalidUrlException. Because of that this exception can't be identified in AbstractRequestCycleProcessor.respond(...) and as the result expired page is not shown.

If I understand the code well, the recently added try-catch block which is responsible for wrapping every WicketRuntimeException with InvalidUrlException seems to be a problem here.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203238,,,2009-06-26 11:13:54.0,,,,,,0|i0kdmf:,117024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<wicket:enclosure> bug: setObject(null) called for excplicitly invisible fields in a non-visible enclosure,WICKET-1391,12390076,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,edvin,edvin,03/Mar/08 19:29,02/Jul/09 07:33,13/Mar/19 23:15,28/Mar/08 20:47,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"It seems that the value for fields that are made invisible because a surrounding enclosure is actually lost on submit of the form.

Consider the following code:

public class HomePage extends WebPage {
    private MyObject myObject;
    
    public HomePage(final PageParameters parameters) {
        myObject = new MyObject();
        myObject.setField1(""field1Value"");
        myObject.setField2(""field2Value"");
       
    Form f = new Form(""f"", new CompoundPropertyModel(myObject));
        add(f);

        f.add(new TextField(""field1"").setVisible(false));
        f.add(new TextField(""field2""));
       
        f.add(new Button(""submit"") {
            @Override public void onSubmit() {
                System.out.println(""Field 2 value should be 'field2Value' but is : "" + myObject.getField2());
            }
        });
    }

    class MyObject implements Serializable {
        private String field1;
        private String field2;
       
        public String getField1() {
            return field1;
        }
        public void setField1(String field1) {
            this.field1 = field1;
        }
        public String getField2() {
            return field2;
        }
        public void setField2(String field2) {
            this.field2 = field2;
        }
    }
}

With the following markup:

<form wicket:id=""f"">
    <wicket:enclosure child=""field1"">
         <input type=""text"" wicket:id=""field1""/>
         <input type=""text"" wicket:id=""field2""/>
    </wicket:enclosure>
    <input type=""submit"" wicket:id=""submit""/>
</form>

Field1 keeps it's value onSubmit, but the value for field2 is lost, and my model object has null in field2. If I implicitly call setVisible(false) on the TextField for field2, the value is kept onSubmit.

Igor put better like this I guess:

when the page renders none of the fields are shown. after submit,
however, myobject.getfield1() is still ""field1value"" but
myobject.getfield2() is null - which implies that textfield2 is still
processed even though it is inside an enclosure that has been hidden.",,,,,,,,,,,,,,,,,,,03/Mar/08 19:32;edvin;myproject.zip;https://issues.apache.org/jira/secure/attachment/12376999/myproject.zip,27/Mar/08 07:40;ivaynberg;wicket-1391-draft.patch.txt;https://issues.apache.org/jira/secure/attachment/12378687/wicket-1391-draft.patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-03-27 07:40:31.534,,,no_permission,,,,,,,,,,,202364,,,Fri Mar 28 17:57:44 UTC 2008,,,,,,0|i0kg9r:,117453,,,,,,,,03/Mar/08 19:32;edvin;Attached is a quickstart project showing the error,27/Mar/08 07:40;ivaynberg;a draft patch to solve this problem. the patch is not very elegant and we need to decide if we want to apply it or if there is a better way to do this.,"28/Mar/08 05:17;ivaynberg;the patch is rather ugly and there is really no way to do this properly within 1.3.1

for 1.5 the idea is to create a true ""transparent""/nvisible container that can actually insert itself in between the children properly but be invisible as far user getparent/add/get/iterator/traversals are concerned. the visibleinhierarchy call can then take these invisible containers's visibility into account.

so an enclosure resolver will actualy insert an invisible container as a non-auto component into the hierarchy and then move all the children that are inside this enclosure into this container

so instead of it looking like this (textfield is inside an enclosure)

parent->form->textfield
parent->enclosure

it will look like this
parent->form->transparent container->textfield","28/Mar/08 08:25;edvin;Would it be possible to atleast give a warning when this situation 
occurs in 1.3.x? The current situation can mean a potential dataloss 
without the developer knowing about it, as each time a new user saves a 
form built this way, data in the hidden fields will actually be lost 
from the database upon save, and that's a MAJOR issue I think.

-- Edvin

","28/Mar/08 17:57;ivaynberg;alright, im going to try and squeeze in a fix using an alternative approach. see how that works out...",,,,,,,,,,,,,,,,,,,
JavaDoc inconsistent to the code,WICKET-2335,12428382,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,funkattack,funkattack,19/Jun/09 17:08,26/Jun/09 20:15,13/Mar/19 23:15,26/Jun/09 20:15,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,,,,,0,,,,,,,,"Index: wicket/src/main/java/org/apache/wicket/Component.java
===================================================================
--- wicket/src/main/java/org/apache/wicket/Component.java	(revision 786581)
+++ wicket/src/main/java/org/apache/wicket/Component.java	(working copy)
@@ -4376,7 +4376,8 @@
 
 	/**
 	 * Sets the id of this component. This method is private because the only time a component's id
-	 * can be set is in its constructor.
+	 * can be set is in its constructor. Something is wrong here: The javadoc says the method is
+	 * private, but it is not!
 	 * 
 	 * @param id
 	 *            The non-null id of this component
",trunk,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-26 20:15:23.234,,,no_permission,,,,,,,,,,,203228,,,Fri Jun 26 20:15:23 UTC 2009,,,,,,0|i0kdnj:,117029,,,,,,,,26/Jun/09 20:15;jdonnerstag;fixed. thanks,,,,,,,,,,,,,,,,,,,,,,,
"JavaDoc, point out the need of a super call.",WICKET-2336,12428384,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,funkattack,funkattack,19/Jun/09 17:21,26/Jun/09 19:45,13/Mar/19 23:15,26/Jun/09 19:45,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,,,,,0,,,,,,,,"JavaDoc, point out the need of a super call.

Or move the code out of there to get rid of the need for the super call in an override.

Index: wicket/src/main/java/org/apache/wicket/Component.java
===================================================================
--- wicket/src/main/java/org/apache/wicket/Component.java	(revision 786581)
+++ wicket/src/main/java/org/apache/wicket/Component.java	(working copy)
@@ -3932,6 +3932,8 @@
 	/**
 	 * Processes the component tag.
 	 * 
+	 * Overrides of this method most likely should call the super implementation.
+	 * 
 	 * @param tag
 	 *            Tag to modify
 	 */
",trunk,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-26 19:45:35.318,,,no_permission,,,,,,,,,,,203229,,,Fri Jun 26 19:45:35 UTC 2009,,,,,,0|i0kdnb:,117028,,,,,,,,26/Jun/09 19:45;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester doesn't invoke Application.newAjaxRequestTarget for ajax request target,WICKET-2313,12427335,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lankvelt,lankvelt,08/Jun/09 08:11,22/Jun/09 05:15,13/Mar/19 23:15,22/Jun/09 05:15,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,,,wicket,,,,0,,,,,,,,"When the BaseWicketTester creates a new ajax request target, it does not invoke the application but creates one by itself.  This makes it impossible to use the tester when application-specific ajax request target subclassing is used.
",,,,,,,,,,,,,,,,,,,08/Jun/09 08:13;lankvelt;WICKET-2313.patch;https://issues.apache.org/jira/secure/attachment/12410111/WICKET-2313.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-22 05:15:39.694,,,no_permission,,,,,,,,,,,203206,,,Mon Jun 22 05:15:39 UTC 2009,,,,,,0|i0kdpz:,117040,,,,,,,,08/Jun/09 08:13;lankvelt;A patch for the 1.3.x branch.,22/Jun/09 05:15;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
"RatingPanel doesn't ""wrap"" models",WICKET-2333,12428322,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mihasik,mihasik,19/Jun/09 07:07,21/Jun/09 15:27,13/Mar/19 23:15,21/Jun/09 15:27,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,wicket-extensions,,,,0,,,,,,,,"I tried to pass instances of ComponentPropertyModel class to RatingPanel constructor,
but it leads to IllegalStateException(""Wrapper should have been called"") on attempt to call ComponentPropertyModel.getObject method.

Fix is rather trivial, see attached patch.",,,,,,,,,,,,,,,,,,,19/Jun/09 07:08;mihasik;RatingPanel.diff;https://issues.apache.org/jira/secure/attachment/12411192/RatingPanel.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-21 15:27:21.83,,,no_permission,,,,,,,,,,,203226,,,Sun Jun 21 15:27:21 UTC 2009,,,,,,0|i0kdnz:,117031,,,,,,,,21/Jun/09 15:27;jdonnerstag;applied. Thanks,,,,,,,,,,,,,,,,,,,,,,,
Form gets submitted using AjaxSubmitBehavior when sub-form has error's,WICKET-2202,12421850,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,thyzz,thyzz,02/Apr/09 09:17,19/Jun/09 18:55,13/Mar/19 23:15,19/Jun/09 18:55,1.4-RC2,1.4-RC3,1.4-RC4,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,wicket,,,,0,,,,,,,,"from http://www.nabble.com/Should-a-form-submit-when-sub-form-has-error%27s--tt22803314.html

I have a main-form where I add a panel that contains another form.
This sub-form contains a formvalidator that gives the error.
However the main-form is submitted, but the feedbackpanel does show the error message set in the sub-form's validator.

I'll attach 2 patches with testcases displaying the behavior in wicket 1.3 vs 1.4

(As a side note, I had to rename the org.apache.wicket.markup.html.form.validation.TestHomePage to org.apache.wicket.markup.html.form.validation.HomePageTest to get the test to run when building wicket)",,,,,,,,,,,,,,,,,,,02/Apr/09 09:22;thyzz;WICKET-2202-tests-1.3.patch;https://issues.apache.org/jira/secure/attachment/12404426/WICKET-2202-tests-1.3.patch,02/Apr/09 09:22;thyzz;WICKET-2202-tests-1.4.patch;https://issues.apache.org/jira/secure/attachment/12404427/WICKET-2202-tests-1.4.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-04-03 19:50:49.382,,,no_permission,,,,,,,,,,,203109,,,Fri Jun 19 18:55:46 UTC 2009,,,,,,0|i0ke1b:,117091,,,,,,,,"02/Apr/09 09:22;thyzz;Fixes a problem where the testcases did not run.
Displays the problem of a form containing a sub-form with error's that does get submitted (1.4) while in 1.3 it does not submit the form
",02/Apr/09 09:26;thyzz;The problem seems to be in the changes made to Form#anyFormComponentError() for wicket-2025,"02/Apr/09 10:06;thyzz;The problem is caused by the the fact that the IVisitor is changed from a Component.IVisitor to a FormComponent.IVisitor. 

But the panel containing the form is not of type FormComponent, so child (form)components are never checked.



Second side note, the testcase that should test if the form inside the border is validated correctly also works with the old implementation of the Form#anyFormComponentError() from before wicket-2025. So it doesn't check the problem that  wicket-2025 should have fixed.","03/Apr/09 19:50;jdonnerstag;Are you sure your testcases are correct? I think it should be assertTrue. Why do think these form submits should fail?

	public void testWithPanelAjax()
	{
....
		assertFalse((page.getFormSubmitted() & HomePage.AJAX) == HomePage.AJAX);
	}

	/**
	   * 
	   */
	public void testWithPanelForm()
	{
.....
		assertFalse((page.getFormSubmitted() & HomePage.NORMAL) == HomePage.NORMAL);
	}
",04/Apr/09 08:01;jdonnerstag;Form and the testcases have been fixed. Thanks.,"16/Jun/09 07:13;robsonke;Hi Juergen,

Thanks for trying to fix this issue. As a colleague of Thijs I started using this fix with nested forms. But there still is a problem with the formvalidators on nested forms. The test you added according to Thijs' patch is not exactly the same as the one Thijs provided. There's a minor difference in 

HomePageTest.testWithPanelForm()
HomePageTest.testWithPanelAjax()

You added it with the assertTrue() check but it's actually an assertFalse(). Now the tests pass but they shoudn't. 

We suspect that the problem lies in FeedbackMessages.hasMessageFor(). The provided component is not equal to the message.getReporter() which result in a return value ""false"". But we're not sure about that. It might have another cause.","16/Jun/09 07:59;thyzz;Reopening the issue.

To clarify, the 'assertFalse' test was intentional. The form should not get submitted as there was an error thrown.",19/Jun/09 18:55;jdonnerstag;fixed,,,,,,,,,,,,,,,,
AjaxFormSubmitBehavior throws an NullPointerException when getForm() is overridden,WICKET-2330,12428138,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zluspai@freemail.hu,zluspai@freemail.hu,17/Jun/09 15:49,17/Jun/09 16:05,13/Mar/19 23:15,17/Jun/09 16:05,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,,,,,0,,,,,,,,"I have an AjaxFormSubmitBehavior where I don't pass the form parameter in the constructor, but have overridden the getForm() method to find the related form. (The form is not parent of the button this behavior is attached to, so can not be found by the behavior itself).


When I ""click"" on the button attached, the form is submitted nicely, but after the onSubmit call I get this exception:


java.lang.NullPointerException

   at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:142)
   at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:166)
   at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:299)
   at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:113)
   at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
   at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1240)
   at org.apache.wicket.RequestCycle.step(RequestCycle.java:1319)


Having a look at the source it seems there is a but at this line in AjaxFormSubmitBehavior:


   @Override
   protected void onEvent(AjaxRequestTarget target)
   {
       ...
       if (form.findParent(Page.class) != null)
       ...
   }

I think that should be :
   ... getForm().findParent(Page.class)


unless, there is a good reason not to be so?

Btw; I am using wicket version 1.4rc4. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203223,,,2009-06-17 15:49:56.0,,,,,,0|i0kdo7:,117032,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StatelessForm submitted to the wrong page,WICKET-1897,12407227,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aditsu,aditsu,25/Oct/08 17:37,16/Jun/09 20:29,13/Mar/19 23:15,16/Jun/09 20:29,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,,,,,1,,,,,,,,"I made a small application to reproduce the problem. You can download it from http://aditsu.net/wickettest.zip , I'll try to attach it too.
Dependencies: jetty 6, wicket 1.4-m3, slf4j, log4j
Steps to reproduce:
1. Run the test.Start class
2. Open http://localhost:8080 in a browser
3. Open http://localhost:8080/page2 in a new tab
4. Go to the first tab and click submit

Result:

WicketRuntimeException: unable to find component with path form on stateless page [Page class = test.Page2, id = 0, version = 0]

It looks like the 2 pages are created with the same id in 2 different pagemaps, but when I submit the form, it goes to the second pagemap and finds the second page (with no form on it).",,,,,,,,,,,,,,,,,,,04/Mar/09 20:48;kan.izh;jira1897.patch;https://issues.apache.org/jira/secure/attachment/12401459/jira1897.patch,25/Oct/08 17:39;aditsu;wickettest.zip;https://issues.apache.org/jira/secure/attachment/12392825/wickettest.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-03-04 20:48:45.336,,,no_permission,,,,,,,,,,,202823,,,Wed Mar 04 20:48:45 UTC 2009,,,,,,0|i0kezj:,117245,,,,,,,,04/Mar/09 20:48;kan.izh;Patch to fix the problem and unit-test.,,,,,,,,,,,,,,,,,,,,,,,
IChoiceRenderer generic type parameters are wrong throughout the AbstractChoice class hierarchy,WICKET-2325,12427762,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,maxb,maxb,12/Jun/09 16:22,12/Jun/09 17:24,13/Mar/19 23:15,12/Jun/09 17:24,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,wicket,,,,0,,,,,,,,"All the AbstractChoice components currently make use of an IChoiceRenderer<T>. They should more properly make use of an IChoiceRenderer<? super T>. The excessive strictness of the type parameter prevents users from defining a singleton choicerenderer that can be used for a variety of different choice components for different but related classes.

Example use-case: Most of my persistent beans implement INamedPersistentObject, providing getName() and getPrimaryKey() methods. This is enough to implement an IChoiceRenderer<INamedPersistentObject>. I wish to declare a singleton instance of this and reuse it for various choice components on various concrete types, but currently can't without messy casts.

I have set priority=blocker on this bug because it is an API issue which really needs consideration before 1.4 is released, as depending on how strict an API/ABI compatibility policy is used, it might be considered unfixable once 1.4 is released GA.",,,,,,,,,,,,,,,,,,,12/Jun/09 16:23;maxb;choicerenderer-generics.patch;https://issues.apache.org/jira/secure/attachment/12410491/choicerenderer-generics.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203218,,,2009-06-12 16:22:41.0,,,,,,0|i0kdov:,117035,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormTester.setValue should throw exception if not FormComponent,WICKET-2310,12427277,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mmakundi,mmakundi,06/Jun/09 11:47,06/Jun/09 17:13,13/Mar/19 23:15,06/Jun/09 17:13,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"Should throw exception if not formComponent:

	public void setValue(final String formComponentId, final String value)
	{
		checkClosed();

		Component component = workingForm.get(formComponentId);
		if (component == null)
		{
			throw new IllegalArgumentException(
				""Unable to set value. Couldn't find component with name: "" + formComponentId);
		}
		if (component instanceof IFormSubmittingComponent)
		{
			setFormSubmittingComponentValue((IFormSubmittingComponent)component, value);
		}
		else if (component instanceof FormComponent)
		{
			setFormComponentValue((FormComponent<?>)component, value);
		}
	}
",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203203,,,2009-06-06 11:47:49.0,,,,,,0|i0kdqf:,117042,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteBehavior: Selected input not modiefied when selected with keyboard,WICKET-2289,12426484,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,sfussenegger,sfussenegger,27/May/09 16:08,03/Jun/09 16:25,13/Mar/19 23:15,03/Jun/09 16:25,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,,,wicket-extensions,,,,0,,,,,,,,"AbstractAutoCompleteRenderer.getOnSelectJavascriptExpression(Object) allows to eval some JS code in order to modify the selected input (see Javadoc). However, this method is applied differently for values selected by mouse clicks (as expected) or keyboard (wrong). When selected using the keyboard, any changes are ignored.

The keyboard related code should be changed from:

if(handleSelection(value)) {
obj.value = value;
if(typeof objonchange==""function"") objonchange(event);
}

to

if(value = handleSelection(value)) {
obj.value = value;
if(typeof objonchange==""function"") objonchange(event);
}",,300,300,,0%,300,300,,,,,,,,,,,,27/May/09 16:09;sfussenegger;wicket-autocomplete.js.diff;https://issues.apache.org/jira/secure/attachment/12409181/wicket-autocomplete.js.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203186,,,Wed May 27 17:38:14 UTC 2009,,,,,,0|i0kdsf:,117051,,,,,,,,27/May/09 16:09;sfussenegger;patch for wicket-autocomplete.js,27/May/09 17:38;sfussenegger;sorry for those mistakes,,,,,,,,,,,,,,,,,,,,,,
[devutils] RequestsPage is broken,WICKET-2304,12426993,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,maxb,maxb,03/Jun/09 00:52,03/Jun/09 05:38,13/Mar/19 23:15,03/Jun/09 05:38,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,,,,,0,,,,,,,,RequestsPage is broken - the markup and java component hierarchy are out of sync,,,,,,,,,,,,,,,,,,,03/Jun/09 00:53;maxb;WICKET-2304.patch;https://issues.apache.org/jira/secure/attachment/12409718/WICKET-2304.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203197,,,Wed Jun 03 00:53:15 UTC 2009,,,,,,0|i0kdrb:,117046,,,,,,,,03/Jun/09 00:53;maxb;Fix.,,,,,,,,,,,,,,,,,,,,,,,
[devutils] Can only inspect pages in same pagemap as the inspector,WICKET-2305,12426995,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,maxb,maxb,03/Jun/09 01:26,03/Jun/09 05:32,13/Mar/19 23:15,03/Jun/09 05:32,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,,,,,0,,,,,,,,"The InspectorPage presents a list of pagemaps and pages contained within them, with links to inspect the contents of each page ID.

However, when one of these is clicked it tries to resolve the page ID within the current pagemap of the inspector page itself, which is quite possibly not the case.

Here is a patch which passes the pagemap name alongside the page ID and looks it up appropropriately.",,,,,,,,,,,,,,,,,,,03/Jun/09 01:26;maxb;WICKET-2305.patch;https://issues.apache.org/jira/secure/attachment/12409720/WICKET-2305.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203198,,,2009-06-03 01:26:40.0,,,,,,0|i0kdr3:,117045,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractTree - setting root to null causes NullPointerException,WICKET-1922,12408156,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,vlastimil.dolejs,vlastimil.dolejs,10/Nov/08 15:36,03/Jun/09 00:41,13/Mar/19 23:15,03/Jun/09 00:41,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,1.4-RC5,,wicket,,,,0,,,,,,,,"I have TreeTable with some nodes, perform some filtering of them and update tree model. If result of filtering is nothing (empty Tree) I set setRoot(null) on the tree model. This send treeStructureChanged event to all listeners (to my TreeTable) with parameter TreeModelEvent which is constructed with null TreePath parameter. This cause NullPointerException in AbstractTree (implements TreeModelListener).
I propose this fix:
org.apache.wicket.markup.html.tree.AbstractTree

/**
	 * @see javax.swing.event.TreeModelListener#treeStructureChanged(javax.swing.event.TreeModelEvent)
	 */
	public final void treeStructureChanged(TreeModelEvent e)
	{
                          // empty root
                          if(e.getTreePath() == null) {
			invalidateAll();
                          } 
		else {
			// get the parent node of changed nodes
			TreeNode node = (TreeNode)e.getTreePath().getLastPathComponent();

			// has the tree root changed?
			if (e.getTreePath().getPathCount() == 1 && node.equals(rootItem.getModelObject()))
			{
				invalidateAll();
			}
			else
			{
				invalidateNodeWithChildren(node);
			}
		}
	}",JDK 1.6.0_01,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202846,,,2008-11-10 15:36:53.0,,,,,,0|i0kew7:,117230,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"wicketTester.executeAjaxEvent(combo, ""onchange""); works with 1.4-rc1 but not anymore with 1.4-rc2",WICKET-2261,12424786,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mmakundi,mmakundi,07/May/09 06:40,01/Jun/09 19:38,13/Mar/19 23:15,01/Jun/09 19:38,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,1,,,,,,,,Try the attached Unit Test.,,18000,18000,,0%,18000,18000,,,,,,,,,,,,07/May/09 06:42;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12407428/Wicket-Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-07 09:24:10.058,,,no_permission,,,,,,,,,,,203159,,,Mon Jun 01 19:38:22 UTC 2009,,,,,,0|i0kdvz:,117067,,,,,,,,07/May/09 06:42;mmakundi;The attachment has a JUnit test which passes in wicket 1.4 rc-1  but fails in 1.4 rc-2,"07/May/09 09:24;martin-g;Try with 1.4-rc4 (curently we vote for its release).
 I'm using a lot executeAjaxEvent in my tests and I had no problems with it.","07/May/09 09:34;mmakundi;Hi Martin!

rc4 is probably not available via maven repositories? If not, please
run the quickstart for me and let me know if it works. If it does, I
will vote too ;) (BTW: Where can I vote?)

**
Martin

","07/May/09 12:56;martin-g;http://www.nabble.com/-VOTE--Release-Wicket-1.4-rc4-td23399800.html

Cheers Martin","07/May/09 13:18;mmakundi;THE QUICKSTART IT FAILS IN RC4 TOO!!!

**
Martin
",01/Jun/09 19:38;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,
"WicketTester.executeAjaxEvent(AjaxButton, ""onclick""); results in clicking of another submit button if its model value is not null.",WICKET-2274,12425365,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mmakundi,mmakundi,13/May/09 19:36,01/Jun/09 17:50,13/Mar/19 23:15,01/Jun/09 17:50,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,1,,,,,,,,"WicketTester.executeAjaxEvent(AjaxButton, ""onclick""); results in clicking of another submit button if its model value is not null.

See attached Quickstart.",,18000,18000,,0%,18000,18000,,,,,,,,,,,,13/May/09 19:37;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12408033/Wicket-Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-06-01 17:50:33.729,,,no_permission,,,,,,,,,,,203171,,,Mon Jun 01 17:50:33 UTC 2009,,,,,,0|i0kduf:,117060,,,,,,,,"13/May/09 19:37;mmakundi;In this example the wicketTester.clicks the ajax button, but another button's onSubmit gets called.",01/Jun/09 17:50;jdonnerstag;fixed and added test case,,,,,,,,,,,,,,,,,,,,,,
TabbedPanel uses too much generics (revert WICKET-2153),WICKET-2292,12426563,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,erikvanoosten,erikvanoosten,28/May/09 09:08,28/May/09 15:56,13/Mar/19 23:15,28/May/09 15:56,1.4-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"Please revert WICKET-2153.

By declaring the list of tabs as List<? extends ITab> you are saying that the list contains elements with some super type that is a subtype of ITab. Having this type there is no way of knowing which exact supertype that is, just that it is a subclass of ITab. The result is that you can only add null to the list. Of course this is non-sense; TabbedPanel uses ITab and not some unknown subclass thereof.

To demonstrate: right now you can not do:
ITab tab = ...;
tabbedPanel.getTabs().add(tab);

To properly solve WICKET-2153, the user should cast his/her list to List<ITab> or just create a list of that type in the first place.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203189,,,2009-05-28 09:08:16.0,,,,,,0|i0kds7:,117050,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
proper onBeforeRender() for NavigationToolbar,WICKET-2286,12426013,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lgawron,lgawron,21/May/09 11:11,28/May/09 15:40,13/Mar/19 23:15,28/May/09 15:40,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket-extensions,,,,0,,,,,,,,this relates to WICKET-2175. As the previous issue is already resolved I have created a new issue. Patch attached.,,600,600,,0%,600,600,,,,,,,,,,,,21/May/09 11:12;lgawron;NavigationToolbar.patch;https://issues.apache.org/jira/secure/attachment/12408686/NavigationToolbar.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203183,,,Thu May 21 11:12:15 UTC 2009,,,,,,0|i0kdsn:,117052,,,,,,,,21/May/09 11:12;lgawron;patch,,,,,,,,,,,,,,,,,,,,,,,
MockHttpServletRequest is broken when used with CryptedUrlWebRequestCodingStrategy,WICKET-2281,12425674,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,alexgit,alexgit,17/May/09 09:33,21/May/09 11:20,13/Mar/19 23:15,21/May/09 11:20,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,,,,,0,,,,,,,,"Upgraded to 1.3.6. One of my test cases started to fail with 
org.apache.wicket.WicketRuntimeException: Internal error parsing wicket:interface = ?x=GR7uTj8e-D8FE0tmM9vvYcwdiASd9OJ5GgveAhSNaig
     
I tracked down the issue to MockHttpServletRequest .setRequestToComponent()
In line 1253 it check for url starting with 6*. However, in CryptedUrlWebRequestCodingStrategy following encryption is employed:

198:					queryString = shortenUrl(queryString).toString();
199:
200:					// encrypt the query string
201:					String encryptedQueryString = urlCrypt.encryptUrlSafe(queryString);


shortenUrl will replace 'wicket:interface=' with '6*' but then it gets immediately encrypted, consequently MockHttpServletRequest  will never recognize it correctly.

",,,,,,,,,,,,,,,,,,,18/May/09 08:08;alexgit;FooTestPages.java;https://issues.apache.org/jira/secure/attachment/12408361/FooTestPages.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-17 10:13:07.508,,,no_permission,,,,,,,,,,,203178,,,Thu May 21 11:20:39 UTC 2009,,,,,,0|i0kdt3:,117054,,,,,,,,17/May/09 10:13;jdonnerstag;Would it be possible for you to create a small testcase / quickstart? Would make things easier for us. Thanks.,18/May/09 04:35;alexgit;I will pull together test as soon as I can. ,"18/May/09 08:08;alexgit;This file is isolated version of what I had happened in my project. It worked fine with 1.3.4 but fails in 1.3.6

Also, it seems to be the problem with WicketTester, as just replacing startegy for default (non crypto) lets tests to pass but application works ok with actual crypto strategy.


Actual error:

org.apache.wicket.WicketRuntimeException: Internal error parsing wicket:interface = ?x=1CGY*r6glQ4KCuP4yb7tM6Z8ooJsVOZYi7u94wvq-Aw
        at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.addInterfaceParameters(WebRequestCodingStrategy.java:579)
        at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.addInterfaceParameters(WebRequestCodingStrategy.java:550)
        at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.decode(WebRequestCodingStrategy.java:200)
        at org.apache.wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.decode(CryptedUrlWebRequestCodingStrategy.java:109)
        at org.apache.wicket.Request.getRequestParameters(Request.java:171)
        at org.apache.wicket.RequestCycle.step(RequestCycle.java:1278)
        at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1399)
        at org.apache.wicket.RequestCycle.request(RequestCycle.java:529)
        at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:495)
        at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:483)
        at org.apache.wicket.util.tester.BaseWicketTester.executeListener(BaseWicketTester.java:248)
        at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:233)
        at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:277)
        at foo.FooTestPages.testClientBidListPage(FooTestPages.java:52)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at junit.framework.TestCase.runTest(TestCase.java:164)
        at junit.framework.TestCase.runBare(TestCase.java:130)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:120)
        at junit.framework.TestSuite.runTest(TestSuite.java:230)
        at junit.framework.TestSuite.run(TestSuite.java:225)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.114 sec <<< FAILURE!",21/May/09 11:20;jdonnerstag;Thanks for your help,,,,,,,,,,,,,,,,,,,,
wicket-devutils is missing in wicket-assembly-all.xml and not mentioned in README,WICKET-2273,12425191,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rfoerthe,rfoerthe,12/May/09 08:56,13/May/09 04:04,13/Mar/19 23:15,13/May/09 04:04,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,,,,,0,,,,,,,,"wicket-devutils is not included in wicket distribution files. 
This is  caused by the fact that it is not configured in assembly descriptor.
Therefore it is not possible to build Wicket from distribution src directory. 

wicket-devutils is also not mentioned in README.

I've attached a fixed version of assembly descriptor.
",,,,,,,,,,,,,,,,,,,12/May/09 11:11;rfoerthe;wicket-assembly-all.xml;https://issues.apache.org/jira/secure/attachment/12407862/wicket-assembly-all.xml,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203170,,,2009-05-12 08:56:18.0,,,,,,0|i0kdun:,117061,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
open/close div tags are rendered erroneously,WICKET-2272,12425188,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,swanthe,swanthe,12/May/09 08:42,12/May/09 20:57,13/Mar/19 23:15,12/May/09 20:57,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"Div tags are rendered erroneously if written as an open/close tag.
<div/> is rendered as <div> with the closing tag appended at the end of page in wicket-1.4-rc4, while <div></div> is rendered correct. Div as open/close tag works fine in wicket-1.4-rc2 even though it gets rendered as separate open and close tags.","windows, firefox 3.0.10, IE7",,,,,,,,,,,,,,,,,,12/May/09 08:44;swanthe;diverror.rar;https://issues.apache.org/jira/secure/attachment/12407854/diverror.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-05-12 20:57:33.466,,,no_permission,,,,,,,,,,,203169,,,Tue May 12 20:57:33 UTC 2009,,,,,,0|i0kduv:,117062,,,,,,,,"12/May/09 08:44;swanthe;qickstart with two pages, one with div tags as open/close and one page with div tags written as separate open and close tags",12/May/09 20:57;jdonnerstag;fixed. Thanks,,,,,,,,,,,,,,,,,,,,,,
PropertyResolver$ArrayPropertyGetSet does not call setAccessible(true) on method,WICKET-2188,12421476,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,michael.mosmann,michael.mosmann,28/Mar/09 13:35,11/May/09 15:38,13/Mar/19 23:15,11/May/09 15:38,1.4-RC2,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"Because PropertyResolver$ArrayPropertyGetSet does not call setAccessible(true) on method, bean class must be public.

error message:
---------------------------------------
WicketMessage: Error calling index property method: public java.lang.String org.apache.BugExamplePage$DummyBean.getKind(int) on object: org.apache.BugExamplePage$DummyBean@8ca8ac

Root cause:

java.lang.IllegalAccessException: Class org.apache.wicket.util.lang.PropertyResolver$ArrayPropertyGetSet can not access a member of class org.apache.BugExamplePage$DummyBean with modifiers ""public""
at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:65)
....
----------------------------------------",,,,,,,,,,,,,,,,,,,11/May/09 07:36;michael.mosmann;org.apache.wicketbug.zip;https://issues.apache.org/jira/secure/attachment/12407754/org.apache.wicketbug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-28 13:56:02.879,,,no_permission,,,,,,,,,,,203096,,,Mon May 11 07:35:57 UTC 2009,,,,,,0|i0ke33:,117099,,,,,,,,28/Mar/09 13:56;jcompagner;do you have a test case that fails?,"09/May/09 06:43;ivaynberg;not enough information, please provide a test case or a more detailed description.",11/May/09 07:35;michael.mosmann;i've build a testcase.. see attachment,,,,,,,,,,,,,,,,,,,,,
DatePicker inserts incorrect format date,WICKET-2133,12415823,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nobutaka,nobutaka,27/Feb/09 21:26,09/May/09 07:07,13/Mar/19 23:15,09/May/09 07:07,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket-datetime,,,,0,,,,,,,,"1. Add DateTextField component with DateConverter overrides 
   public method ""getDatePattern"" like below

   @Override
   public String getDatePattern() {
   	return ""yyyyMMdd"";
   }

2. Popup date picker and select single digit month/day
   ex. select 2009/01/01 on date picker

3. Date picker inserts incorrect format date into a text field.
   ex.  ""20090101"" expected but was ""200911""

Maybe it is caused by Javascript functions in 
org/apache/wicket/extensions/yui/calendar/wicket-date.js,
Wicket.DateTime.parseDate and Wicket.DateTime.substituteDate. 
","XP SP3, IE6, Firefox 3",,,,,,,,,,,,,,,,,,27/Feb/09 21:29;nobutaka;TestPage.html;https://issues.apache.org/jira/secure/attachment/12401139/TestPage.html,27/Feb/09 21:30;nobutaka;TestPage.java;https://issues.apache.org/jira/secure/attachment/12401140/TestPage.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203041,,,2009-02-27 21:26:52.0,,,,,,0|i0ke8f:,117123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException after jetty restart with persistent sessions,WICKET-2099,12414668,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,asfernandes,asfernandes,12/Feb/09 15:13,05/May/09 15:22,13/Mar/19 23:15,05/May/09 15:15,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"I start Jetty with a savePeriod (HashSessionManager) of 4 seconds. When I restart it, a NPE is logged each 4s. After some (not all) page loads, the exception stop.

Since NPE is never a feature, I suggest to apply that patch. Or something else more appropriate, if you understand the problem better.

Index: wicket/src/main/java/org/apache/wicket/protocol/http/pagestore/DiskPageStore.java
===================================================================
--- wicket/src/main/java/org/apache/wicket/protocol/http/pagestore/DiskPageStore.java	(revisão 740670)
+++ wicket/src/main/java/org/apache/wicket/protocol/http/pagestore/DiskPageStore.java	(cópia de trabalho)
@@ -1165,7 +1165,7 @@
 		else if (page instanceof SerializedPageWithSession)
 		{
 			SerializedPageWithSession serialized = (SerializedPageWithSession)page;
-			if (serialized.page.get() == SerializedPageWithSession.NO_PAGE)
+			if (serialized.page != null && serialized.page.get() == SerializedPageWithSession.NO_PAGE)
 			{
 				// stripped page, need to restore it first
 				result = restoreStrippedSerializedPage(serialized);
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-18 09:07:55.717,,,no_permission,,,,,,,,,,,203013,,,Tue May 05 15:22:57 UTC 2009,,,,,,0|i0kec7:,117140,,,,,,,,18/Feb/09 09:07;jcompagner;do you also have a full stacktrace for us to see how that happens?,"20/Feb/09 12:31;asfernandes;Stack trace:

java.lang.NullPointerException
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.prepareForSerialization(DiskPageStore.java:1168)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.writeObject(SecondLevelCacheSessionStore.java:381)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
	at org.mortbay.jetty.servlet.HashSessionManager$Session.save(HashSessionManager.java:555)
	at org.mortbay.jetty.servlet.HashSessionManager.saveSessions(HashSessionManager.java:400)
	at org.mortbay.jetty.servlet.HashSessionManager$1.run(HashSessionManager.java:165)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
","05/May/09 11:12;asfernandes;Any chance to have my patch applied?

I'm using a modified RC2 (or 3) for a long time with it...",05/May/09 15:15;knopp;Applied to trunk. ,05/May/09 15:22;asfernandes;Thanks!,,,,,,,,,,,,,,,,,,,
"AutoCompleteTextField - javascript error ""type mismatch"" in line 227 in IE",WICKET-1504,12393515,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nielsbo,nielsbo,09/Apr/08 10:27,05/May/09 14:53,13/Mar/19 23:15,11/Nov/08 17:39,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket-extensions,,,,0,,,,,,,,"I just swithed from 1.3.2 to 1.3.3 and that resultet in a javascript error ""type mismatch"" in line 227, 
wich is this line in wicket-autocomplete.js: 

        menu.style.zIndex=index==""auto""?index:Number(index)+1;

Only in IE (6.0) - firefox works fine. 
",IE 6.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-14 23:31:26.347,,,no_permission,,,,,,,,,,,202468,,,Tue Nov 11 12:10:44 UTC 2008,,,,,,0|i0kfy7:,117401,,,,,,,,14/Apr/08 23:31;seitz;fixed,"29/Oct/08 14:15;shellverma;I am using wicket-extensions v 1.3.5 and see the javascript ""Type Mismatch"" error on Line 287 of wicket-autocomplete.js
 This error comes on IE6.0 only. Firefox works ok.",29/Oct/08 18:40;md283aa;I can reproduce this error on IE7.0 as well.,"29/Oct/08 19:02;md283aa;I have replaced line 287 in wicket-autocomplete.js 

container.style.zIndex=(!isNaN(Number(index))?Number(index)+1:index);

with the corresponding line from 1.3.4

container.style.zIndex=(Number(index)!=Number.NaN?Number(index)+1:index);

Than it works again. I have tested it with IE6, IE7 anf FF",29/Oct/08 21:37;nielsbo;Since the bug is back in 1.3.5 I reopen this Issue.,"11/Nov/08 12:10;whoover.nemours;It was also brought up in the forum that there is a typo in AutoCompleteTextField.java

Line 257 should be like this:
	tag.put(""autocomplete"", ""off"");
instead of this
	tag.put(""autocomplete"", ""false"");",,,,,,,,,,,,,,,,,,
AutoCompleteTextField - gives a type mismatch error on IE - version wicket-1.4-rc1,WICKET-1960,12409276,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dipu_esp,dipu_esp,26/Nov/08 15:30,05/May/09 08:13,13/Mar/19 23:15,04/May/09 17:09,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,1.4-RC4,,wicket-extensions,,,,4,,,,,,,,"wicket-autocomplete.js
function function showAutoComplete()
line 291 container.style.zIndex=(!isNaN(Number(index))?Number(index)+1:index);

looks like IE doesn't like big i in zIndex, IE seem to be be happy with zindex 

not sure if that's the correct way to resolve the issue.",,,,,,,,,,,,,,,,,,,26/Nov/08 15:31;dipu_esp;wicket-autocomplete-patch.txt;https://issues.apache.org/jira/secure/attachment/12394756/wicket-autocomplete-patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-26 16:31:08.633,,,no_permission,,,,,,,,,,,202881,,,Tue May 05 08:13:35 UTC 2009,,,,,,0|i0kerz:,117211,,,,,,,,26/Nov/08 15:31;dipu_esp;patch with the mentioned fix ,26/Nov/08 16:31;jthomerson;I'm pretty sure this was already fixed.  I just ran into the same yesterday.  Upgraded from rc1 to snapshot and it's working.  Just commenting on it so that whoever goes to fix it doesn't spin their wheels trying to reproduce if it's already working.,"27/Nov/08 10:34;dipu_esp;In the current trunk,  it's reverted back to container.style.zIndex=(Number(index)!=Number.NaN?Number(index)+1:index);  and it works,
but its working because some thing else is broken 

when the value of  index ='auto';
the expression  (Number(index)!=Number.NaN?Number(index)+1:index);  return NaN, 
this looks wrong to me it should be returning 'auto' 

for example if you run the following line in javascript console in firebug you will get NaN 
var index ='auto';(Number(index)!=Number.NaN?Number(index)+1:index)

if you run Number(index) it return NaN

but Number(index)!=Number.NaN yields true (looks wrong to me)","27/Nov/08 11:18;bendis;Mathematically, the NaN (Not a Number) is unequal to all other numbers, +-Inf and *itself* because it just has no concrete value... The isNaN function is the correct way to test whether a value is NaN or not.

So the expression
    Number(index)!=Number.NaN?Number(index)+1:index
is in fact just
    Number(index)+1

Regards,
Bendis","28/Nov/08 09:00;dipu_esp;that's exactly the reason why I say reverting back to  
container.style.zIndex=(Number(index)!=Number.NaN?Number(index)+1:index); 
on the trunk is not quite right

if  index = 'auto' (or any non number ) 
the expression Number(index)!=Number.NaN?Number(index)+1:index 
will result in Number(index)+1 

if  index = 100 (a number ) 
then also expression Number(index)!=Number.NaN?Number(index)+1:index
will result in  Number(index)+1 

and I can't think of a condition in which it will result in index and that looks wrong to me 


Regards
Dipu

","13/Feb/09 11:26;steen e;What happens when you change

    container.style.zIndex=(!isNaN(Number(index))?Number(index)+1:index);
    to
    container.style.zindex=(!isNaN(Number(index))?Number(index)+1:index);

is that you define a new member, called 'zindex', on the style object and hence won't get the type mismatch error.

I think the correct solution would be something like this:

    container.style.zIndex = isNaN(index) ? 20 : index;

assuming the z-index should be the same as the parent z-index. If the parent index is NaN a random number >1
should be assigned.","19/Mar/09 20:46;rviper;same problem with IE 8 resulting in an javascript error

""zIndex"" is OK, but ""Number(index)!=Number.NaN"" is not right

what's wrong with ""container.style.zIndex=(!isNaN(Number(index))?Number(index)+1:index)""? 

thanks
","04/May/09 08:29;percederberg;This is also an issue in the 1.3.x release series.

I agree with Steen Elvstrøm. We've patched our local copy like this instead:

        if (!isNaN(new Number(index))) {
            container.style.zIndex=(new Number(index)+1);
        }

Wicket doesn't need to mess with the z-index unless the offset parent z-index isn't numeric. Should probably be available in some kind of utility function.","05/May/09 08:13;percederberg;Great, thanks!",,,,,,,,,,,,,,,
Pages stored in Session.touchedPages aren't detached when part of ModalWindow,WICKET-2130,12415662,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,dashorst,dashorst,26/Feb/09 13:06,26/Apr/09 19:22,13/Mar/19 23:15,26/Apr/09 19:22,1.3.5,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,"Creating a ModalWindow with a Page causes the newly constructed page not to be detached.

The page is stored in Session.touchedPages, but that list isn't properly processed at the end of the request for detaching.

I'll try to create a testcase for this.",,,,,,,,,,,,,,,,,,,26/Feb/09 14:38;dashorst;wicket-2130.tgz;https://issues.apache.org/jira/secure/attachment/12401046/wicket-2130.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-26 19:11:52.135,,,no_permission,,,,,,,,,,,203039,,,Sun Apr 26 19:11:52 UTC 2009,,,,,,0|i0ke8n:,117124,,,,,,,,"26/Feb/09 13:29;dashorst;this tarball creates a wicket test case in src/test/java/org/apache/wicket/wicket2130

untar it in jdk-1.4/wicket
","26/Feb/09 14:27;dashorst;Patch below fixes the unit test, but causes multiple detaches for normal pages. I'd suggest setting the ATTACHED flag in the Page constructor. Typically a page is constructed in an Attached state, but might not be rendered until a next request (and only then pass through onAttach()).

Index: src/main/java/org/apache/wicket/Session.java
===================================================================
--- src/main/java/org/apache/wicket/Session.java	(revision 746413)
+++ src/main/java/org/apache/wicket/Session.java	(working copy)
@@ -57,11 +57,10 @@
  * holds the Page. So {@link Component#getSession()} traverses the component hierarchy to the root
  * Page and then calls {@link Page#getSession()}.
  * 
- * <li><b>Access via Thread Local </b>- In the odd case where neither a RequestCycle nor a
- * Component is available, the currently active Session for the calling thread can be retrieved by
- * calling the static method Session.get(). This last form should only be used if the first two
- * forms cannot be used since thread local access can involve a potentially more expensive hash map
- * lookup.
+ * <li><b>Access via Thread Local </b>- In the odd case where neither a RequestCycle nor a Component
+ * is available, the currently active Session for the calling thread can be retrieved by calling the
+ * static method Session.get(). This last form should only be used if the first two forms cannot be
+ * used since thread local access can involve a potentially more expensive hash map lookup.
  * 
  * <li><b>Locale </b>- A session has a Locale property to support localization. The Locale for a
  * session can be set by calling {@link Session#setLocale(Locale)}. The Locale for a Session
@@ -103,9 +102,9 @@
  * <li><b>Removal </b>- Pages can be removed from the Session forcibly by calling remove(Page) or
  * removeAll(), although such an action should rarely be necessary.
  * 
- * <li><b>Flash Messages</b>- Flash messages are messages that are stored in session and are
- * removed after they are displayed to the user. Session acts as a store for these messages because
- * they can last across requests.
+ * <li><b>Flash Messages</b>- Flash messages are messages that are stored in session and are removed
+ * after they are displayed to the user. Session acts as a store for these messages because they can
+ * last across requests.
  * 
  * @author Jonathan Locke
  * @author Eelco Hillenius
@@ -388,8 +387,8 @@
 	 * <p>
 	 * By calling this method, the session will be bound (made not-temporary) if it was not bound
 	 * yet. It is useful for cases where you want to be absolutely sure this session object will be
-	 * available in next requests. If the session was already bound ({@link ISessionStore#lookup(Request) returns a session}),
-	 * this call will be a noop.
+	 * available in next requests. If the session was already bound (
+	 * {@link ISessionStore#lookup(Request) returns a session}), this call will be a noop.
 	 * </p>
 	 */
 	public final void bind()
@@ -1367,6 +1366,9 @@
 			for (int i = 0; i < touchedPages.size(); i++)
 			{
 				Page page = (Page)touchedPages.get(i);
+
+				// ensure pages are detached when shared through the pagemaps
+				page.detach();
 				page.getPageMap().put(page);
 				dirty = true;
 			}
","26/Feb/09 14:38;dashorst;untar in jdk-1.4/wicket

generates a testcase package in src/test/java/org/apache/wicket/wicket2130

Run the tests to see it fail.
",26/Apr/09 19:11;knopp;I think your fix is correct. We have to detach the page there. It's better to detach some pages twice than to have pages not detached at all.,,,,,,,,,,,,,,,,,,,,
WicketSessionFilter doesn't takes into account WebApplication#getSessionAttributePrefix(WebRequest),WICKET-2151,12416372,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,martin-g,martin-g,07/Mar/09 17:30,26/Apr/09 18:34,13/Mar/19 23:15,07/Mar/09 20:25,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,"WicketSessionFilter#init(FilterConfig), line 139 constructs the 'sessionKey' without taking into account the return value of WebApplication#getSessionAttributePrefix(WebRequest).

Patch:

Index: protocol/http/servlet/WicketSessionFilter.java
===================================================================
--- protocol/http/servlet/WicketSessionFilter.java	(revisión: 725053)
+++ protocol/http/servlet/WicketSessionFilter.java	(copia de trabajo)
@@ -28,6 +28,7 @@
 import javax.servlet.http.HttpSession;
 
 import org.apache.wicket.Session;
+import org.apache.wicket.protocol.http.WebApplication;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -136,7 +137,8 @@
 			log.debug(""filterName/ application key set to "" + filterName);
 		}
 
-		sessionKey = ""wicket:"" + filterName + "":"" + Session.SESSION_ATTRIBUTE_NAME;
+		WebApplication application = WebApplication.get(filterName);
+		sessionKey = application.getSessionAttributePrefix(null) + Session.SESSION_ATTRIBUTE_NAME;
 
 		if (log.isDebugEnabled())
 		{
",Any,,,,,,,,,,,,,,WICKET-2243,WICKET-2180,,,07/Mar/09 17:37;martin-g;quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12401687/quickstart.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-19 13:29:33.982,,,no_permission,,,,,,,,,,,203059,,,Thu Mar 19 13:29:33 UTC 2009,,,,,,0|i0ke6v:,117116,,,,,,,,"19/Mar/09 13:29;drzewo;The applied patch breaks things. According to the servlet specs, the order in which container initializes filters is undefined. The patch code assumes that the appropriate wicket filter serving wicket application has already been inited. As I cannot reopen this issue, I'm filing another one.",,,,,,,,,,,,,,,,,,,,,,,
DatePicker doesn't work when CryptedUrlWebRequestCodingStrategy is in effect,WICKET-2231,12423360,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,drzewo,drzewo,21/Apr/09 11:44,26/Apr/09 17:07,13/Mar/19 23:15,26/Apr/09 17:07,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-datetime,,,,0,,,,,,,,"With CryptedUrlWebRequestCodingStrategy, when url rewriting is the effective session tracking mechanism, the ResourceReference for the wicket-date.js is rendered incorrectly, as it bears the crypted target, but the key to decrypt this piece of information is not referable, as it is kept in the session, which in turn cannot be resolved as had been stripped from the generated url just before being put into the map of variables to be interpolated with DatePicker.js. As a resolution, a single call to Strings.stripJSessionId() should be removed.",,,,,,,,,,,,,,,,,,,21/Apr/09 11:48;drzewo;datepicker.patch;https://issues.apache.org/jira/secure/attachment/12406026/datepicker.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-26 17:07:10.851,,,no_permission,,,,,,,,,,,203135,,,Sun Apr 26 17:07:10 UTC 2009,,,,,,0|i0kdz3:,117081,,,,,,,,26/Apr/09 17:07;jdonnerstag;fixed thanks,,,,,,,,,,,,,,,,,,,,,,,
YUI library used by Wicket Extensions - DateTime isn't IE8 compatible,WICKET-2220,12422443,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,para,para,09/Apr/09 07:04,24/Apr/09 23:47,13/Mar/19 23:15,09/Apr/09 13:30,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-datetime,wicket-extensions,,,0,,,,,,,,"YUI library included with Wicket Extensions - DateTime (and potentially others) is the version 2.3.0 which has compatability issues with Internet Explorer 8. The recommended version of YUIlib which is IE8 compliant is 2.7.0.

The specific issue I hit was DateTimeField causing block on loading almost random resources on my page, after a while IE8 reported the following error:

------
Webpage error details

User Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)
Timestamp: Thu, 9 Apr 2009 06:53:18 UTC


Message: Unknown runtime error
Line: 12
Char: 1986
Code: 0
URI: [hidden to protect the guilty].YuiLib/calendar/calendar-min.js
------

Related discussion: http://www.nabble.com/Layout-Manager-causing-IE-8-to-freeze.-td22381589.html",Internet Explorer 8,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-09 13:30:27.692,,,no_permission,,,,,,,,,,,203125,,,Fri Apr 24 23:47:19 UTC 2009,,,,,,0|i0kdzj:,117083,,,,,,,,09/Apr/09 13:30;jdonnerstag;done. Please test it. ,24/Apr/09 23:47;tahitiangabriel;Will wicket 1.3.x be upgraded to YUI 2.7?,,,,,,,,,,,,,,,,,,,,,,
typo in pom.xml,WICKET-2234,12423492,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,22/Apr/09 18:35,22/Apr/09 20:05,13/Mar/19 23:15,22/Apr/09 20:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,,,,,0,,,,,,,,jdk-1.4/pom.xml contains an typo. patch is included.,,,,,,,,,,,,,,,,,,,22/Apr/09 18:36;pete;optimise.patch;https://issues.apache.org/jira/secure/attachment/12406152/optimise.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,97232,,,2009-04-22 18:35:45.0,,,,,,0|i0kdyn:,117079,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bounds error in PageableListView#getCurrentPage(),WICKET-2181,12417323,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jluini,jluini,19/Mar/09 20:59,12/Apr/09 21:34,13/Mar/19 23:15,12/Apr/09 21:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"In the getCurrentPage() method of class PageableListView, the following code:

while ((currentPage * rowsPerPage) > getList().size())
{
           currentPage--;
}

checks if ""first cell if out of range"". However, the index of that first cell is (currentPage * rowsPerPage), and then the comparison with getList().size() should use a "">="" instead a "">"".",,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-12 21:34:59.156,,,no_permission,,,,,,,,,,,203089,,,Sun Apr 12 21:34:59 UTC 2009,,,,,,0|i0ke3z:,117103,,,,,,,,"12/Apr/09 21:34;jdonnerstag;tested with library example by removing the last two entries. Before the change a empty 3rd page is present, which effectively doesn't exist. After that change page 2 is render after removing the two entries.",,,,,,,,,,,,,,,,,,,,,,,
DiskPageStore::convertToPage cleanup,WICKET-2223,12422671,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mlaccetti,mlaccetti,12/Apr/09 18:48,12/Apr/09 20:11,13/Mar/19 23:15,12/Apr/09 20:11,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"String type = page != null ? page.getClass().getName() : null;
throw new IllegalArgumentException(""Unknown object type + type"");

should be:

String type = page != null ? page.getClass().getName() : null;
throw new IllegalArgumentException(""Unknown object type"" + type);",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-12 20:11:24.696,,,no_permission,,,,,,,,,,,203128,,,Sun Apr 12 20:11:24 UTC 2009,,,,,,0|i0kdzb:,117082,,,,,,,,12/Apr/09 20:11;jdonnerstag;fixed. Thanks,,,,,,,,,,,,,,,,,,,,,,,
still doesn't seem to work - AjaxEditableChoiceLabel ignores ChoiceRenderer in newLabel(...),WICKET-2196,12421608,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,nobutaka,nobutaka,31/Mar/09 01:33,12/Apr/09 11:38,13/Mar/19 23:15,12/Apr/09 11:38,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-extensions,,,,1,,,,,,,,"AjaxEditableChoiceLabel doesn't take any ChoiceRenderer passed in the constructor into account when creating the Label. I believe it defaults to the toString() of the modelObject, which isn't exactly optimal.",,,,,,,,,,,WICKET-1590,,,,,,,,31/Mar/09 01:36;nobutaka;patch.txt;https://issues.apache.org/jira/secure/attachment/12404201/patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-31 19:48:34.719,,,no_permission,,,,,,,,,,,203103,,,Sun Apr 12 11:38:23 UTC 2009,,,,,,0|i0ke27:,117095,,,,,,,,31/Mar/09 01:35;nobutaka;It still doesn't seem to work because it doesn't use the return value of renderer.getDisplayValue(),"31/Mar/09 19:48;tahitiangabriel;I've tried with 1.3.5,1.3-snaphot and 1.4-snapshot and it doesn't work. The display value is not correct.
",12/Apr/09 11:38;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,
FormTester does not toggle selected values when using selectMultiple,WICKET-2104,12414758,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,ray_bon@telus.net,ray_bon@telus.net,13/Feb/09 16:30,08/Apr/09 07:56,13/Mar/19 23:15,08/Apr/09 07:56,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"FormTester.selectMultiple only appends values, there is no way to replace or 'uncheck' items in a multiple select. This is contrary to the documentation in the source which does mention a toggle.
This is different from issue WICKET-1893. The solution there affects the model prior to submit().

Following are three methods that could be added to implement the toggle capability:
add to inner class
	protected abstract class ChoiceSelector :

		/**
		 * Implements removal of current selection(s) to allow toggle behaviour of assignValueToFormComponent.
		 * 
		 * @param formComponent
		 *            a <code>FormComponent</code>
		 */
		protected void doUnSelect()	// should this be final?
		{
			// multiple selectable should remove unselected option(s)
			removeFormComponentValues(formComponent);
		}

add to FormTester

	/**
	 * Simulates selecting multiple options for the <code>FormComponent</code>. The
	 * method only support multiple selectable <code>FormComponent</code>s.
	 * 
	 * @see #select(String, int)
	 * 
	 * @param formComponentId
	 *            relative path (from <code>Form</code>) to the selectable
	 *            <code>FormComponent</code>
	 * @param indexes
	 *            index of the selectable option, starting from 0
	 * @param toggle
	 *            set to <code>true</code> to clear existing selected option(s)
	 *            set to <code>false</code> to append to existing selected option(s)
	 */
	public void selectMultiple(String formComponentId, int[] indexes, boolean toggle)
	{
		checkClosed();

		ChoiceSelector choiceSelector = choiceSelectorFactory.createForMultiple((FormComponent)workingForm.get(formComponentId));
		
		if (toggle)
		{
			choiceSelector.doUnSelect();
		}

		selectMultiple(formComponentId, indexes);
	}

add to FormTester

	/**
	 * Removes <code>FormComponent</code>'s values from request parameter.
	 * 
	 * @param formComponent
	 *            a <code>FormComponent</code>
	 */
	private void removeFormComponentValues(FormComponent formComponent)
	{
		if (parameterExist(formComponent))
		{
			Map newParameters = new HashMap();	// could also get parameters from request and clear()
			newParameters.put(formComponent.getInputName(), new String[0]);
			baseWicketTester.getServletRequest().setParameters(newParameters);
		}
	}
","Ubuntu 8.04, Java 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-24 12:07:02.269,,,no_permission,,,,,,,,,,,203017,,,Wed Apr 08 07:56:49 UTC 2009,,,,,,0|i0kebb:,117136,,,,,,,,"24/Feb/09 12:07;thrantal;See the original mailing list discussion

  http://www.nabble.com/FormTester-selectMultiple-CheckBoxMultipleChoice-help-td21971209.html#a22004300

for a potential workaround.

If working workarounds can be found, we'll only tackle this in Wicket 1.5.","08/Apr/09 07:56;jdonnerstag;added FormTester:selectMultiple(String formComponentId, int[] indexes, final boolean replace). The ""replace"" parameter allows to reset any existing selection first.
",,,,,,,,,,,,,,,,,,,,,,
FormTester.setValue should throw excecption if the component does not exist,WICKET-2124,12415392,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mmakundi,mmakundi,23/Feb/09 19:28,08/Apr/09 07:25,13/Mar/19 23:15,08/Apr/09 07:25,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"FormTester.setValue or FormTester.select should throw some exception if the component does not exist on the page.

",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-08 07:25:03.742,,,no_permission,,,,,,,,,,,203035,,,Wed Apr 08 07:25:03 UTC 2009,,,,,,0|i0ke9b:,117127,,,,,,,,08/Apr/09 07:25;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
Form#getMaxSize() -> no custom format,WICKET-2174,12417086,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,hell,hell,17/Mar/09 20:26,07/Apr/09 19:25,13/Mar/19 23:15,07/Apr/09 19:25,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"Hi,

I found problem with format of 'maxSize' property in component Form:

final Map<String, Object> model = new HashMap<String, Object>();
model.put(""exception"", e);
model.put(""maxSize"", getMaxSize());

... the main problem is if you want modify 'look and feel' of the Bytes format in error messages.

Can you add e.g. new method String formatMaxSize() or something similar? The other solution is modification of toString of bean Bytes to get results look like 300kB (now there is 300K ... this is not good for common users). Or is there other simple way how to do this?

Regards,
H.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-07 19:25:48.84,,,no_permission,,,,,,,,,,,203082,,,Tue Apr 07 19:25:48 UTC 2009,,,,,,0|i0ke4v:,117107,,,,,,,,"07/Apr/09 19:25;jdonnerstag;Introduced Form#onFileUploadException(final FileUploadException e,
		final Map<String, Object> model) which you may subclass to modify or extend the Model which turn can be used for the messages.
",,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester should not hardcode UTF-8 in isComponentOnAjaxResponse,WICKET-2197,12421689,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,vmathon,vmathon,31/Mar/09 17:17,07/Apr/09 13:32,13/Mar/19 23:15,07/Apr/09 13:32,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,,,,,0,,,,,,,,"UTF-8 encoding should not be hard coded in BaseWicketTester.isComponentOnAjaxResponse:

boolean isAjaxResponse = ajaxResponse.startsWith(""<?xml version=\""1.0\"" encoding=\""UTF-8\""?><ajax-response>""); 

Moreover, it is very hard to work around this limitation due to a poor design of BaseWicketTester, Result and so on.

regards
Vincent",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-07 13:32:17.938,,,no_permission,,,,,,,,,,,203104,,,Tue Apr 07 13:32:17 UTC 2009,,,,,,0|i0ke1z:,117094,,,,,,,,07/Apr/09 13:32;jdonnerstag;fixed thanks,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.settings.Settings#addStringResourceLoader(final IStringResourceLoader loader) does not conform to its JavaDoc,WICKET-2199,12421772,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lhunath,lhunath,01/Apr/09 13:51,07/Apr/09 13:00,13/Mar/19 23:15,07/Apr/09 13:00,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,1,,,,,,,,"The JavaDoc states that:

	/**
	 * Add a string resource loader to the chain of loaders. If this is the first call to this
	 * method since the creation of the application settings then the existing chain is cleared
	 * before the new loader is added.
	 * 
	 * @param loader
	 *            The loader to be added
	 */
	void addStringResourceLoader(final IStringResourceLoader loader);

However, the implementation of this in org.apache.wicket.settings.Settings does not conform to the ""If this is the first call to this method since the creation of the application settings then the existing chain is cleared before the new loader is added."".  It simply adds it to the list of stringResourceLoaders:
	/**
	 * @see org.apache.wicket.settings.IResourceSettings#addStringResourceLoader(org.apache.wicket.resource.loader.IStringResourceLoader)
	 */
	public void addStringResourceLoader(final IStringResourceLoader loader)
	{
		stringResourceLoaders.add(loader);
	}

This causes issues when you're trying to add a custom resourceLoader to your application which defines a key which is already defined by some of the existing resourceLoaders.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-07 13:00:21.624,,,no_permission,,,,,,,,,,,203106,,,Tue Apr 07 13:00:21 UTC 2009,,,,,,0|i0ke1r:,117093,,,,,,,,"07/Apr/09 13:00;jdonnerstag;I updated the javadoc. 

	 * @see #addStringResourceLoader(IStringResourceLoader)
	 * @see #addStringResourceLoader(int, IStringResourceLoader)
	 * @see #getStringResourceLoaders()

The last one getStringResourceLoaders() gives you full control over the StringResource loader list

	public List<IStringResourceLoader> getStringResourceLoaders()
	{
		return stringResourceLoaders;
	}
",,,,,,,,,,,,,,,,,,,,,,,
MetaPattern.PERCENT matches an empty string,WICKET-2211,12422057,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,nobutaka,nobutaka,04/Apr/09 23:22,05/Apr/09 07:57,13/Mar/19 23:15,05/Apr/09 07:57,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"MetaPattern.PERCENT matches an empty string. The implementation of the public constant

org.apache.wicket.util.parse.metapattern.MetaPattern.PERCENT
http://svn.apache.org/viewvc/wicket/releases/wicket-1.4-rc2/wicket/src/main/java/org/apache/wicket/util/parse/metapattern/MetaPattern.java?view=markup
is

	/** Constant for percent. */
	public static final MetaPattern PERCENT = new MetaPattern("""");

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-05 07:57:15.839,,,no_permission,,,,,,,,,,,203117,,,Sun Apr 05 07:57:15 UTC 2009,,,,,,0|i0ke07:,117086,,,,,,,,05/Apr/09 07:57;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Unexpected RuntimeException: RestartResponseException in onBeforeRender of cached page,WICKET-2200,12421807,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,ckuehne,ckuehne,01/Apr/09 19:12,05/Apr/09 07:53,13/Mar/19 23:15,05/Apr/09 07:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"The issue is described here: http://www.nabble.com/Unexpected-RuntimeException%3A-RestartResponseException-in-onBeforeRender-of-cached-page-td21683689.html

I also attached a quickstart testcase to the newsgroup entry. 

Note regarding the quickstart testcase:
Tthe problem does not show up in the automated test case. It does show up however if you run jetty and then click ""TabbedPanels""-->""intercept""-->""Tabbed Panel"". 

 The difference between the test case and the browser variant seems to be that in the former the AbortException is ultimately (after being rethrown nested in a WicketRuntimeException) caught in the WebRequestCycle.step() method (where a while-loop looks for the cause until it finds the AbortException). In the latter variant the AbortException is caught (also after being rethrown nested in a WicketRuntimeException) in the WebRequestCycle.redirectTo() method where the test of instanceof AbortException fails because the outer exception is a WicketRuntimeException.","Mac OS, Safari ",,,,,,,,,,,,,,,,,,01/Apr/09 19:33;ckuehne;onbeforerender.zip;https://issues.apache.org/jira/secure/attachment/12404372/onbeforerender.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-05 07:53:50.259,,,no_permission,,,,,,,,,,,203107,,,Sun Apr 05 07:53:50 UTC 2009,,,,,,0|i0ke1j:,117092,,,,,,,,05/Apr/09 07:53;jdonnerstag;fixed. Thanks.,,,,,,,,,,,,,,,,,,,,,,,
WicketTester clickLink on submitLink fails with conversion error,WICKET-2203,12421868,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,dashorst,dashorst,02/Apr/09 13:31,04/Apr/09 21:09,13/Mar/19 23:15,04/Apr/09 21:09,1.3.5,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,,,,,0,,,,,,,,"When clicking with WicketTester  a submitlink that is situated outside a Form, clickLink doesn't process the input correctly. It tries to set null on the inputs (which fails for int properties for obvious reasons).

I've attached a quickstart that exhibits this behavior.",,,,,,,,,,,,,,,,,,,02/Apr/09 14:05;dashorst;wicket-2203.tar.gz;https://issues.apache.org/jira/secure/attachment/12404446/wicket-2203.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-04 21:09:33.551,,,no_permission,,,,,,,,,,,203110,,,Sat Apr 04 21:09:33 UTC 2009,,,,,,0|i0ke13:,117090,,,,,,,,04/Apr/09 21:09;jdonnerstag;patch and test cases applied to trunk,,,,,,,,,,,,,,,,,,,,,,,
Empty File Upload field breaks validation of other fields in WicketTester.,WICKET-2015,12412024,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,kmaja,kmaja,09/Jan/09 12:21,04/Apr/09 15:09,13/Mar/19 23:15,04/Apr/09 15:09,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"Submitting form with empty FileUpload -field break validations of other fields in WicketTester:
- TextField mandatority (field.setRequired(true)).
- TextField input length validation (field.add(StringValidator(lengthBetween(...)))).
- DropDownChoice validation does not ""see"" selection.

If File Upload -field is filled, then validations above work.
Form submits manually without a problem in web browser.","Windows XP SP3, Eclipse IDE, Wicket 1.4-rc1.",,,,,,,,,,,,,,,,,,19/Jan/09 11:35;kmaja;Wicket-Quickstart-Update.zip;https://issues.apache.org/jira/secure/attachment/12398220/Wicket-Quickstart-Update.zip,10/Jan/09 23:33;jdonnerstag;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12397624/Wicket-Quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-01-09 15:35:57.496,,,no_permission,,,,,,,,,,,202931,,,Sat Apr 04 15:09:52 UTC 2009,,,,,,0|i0kem7:,117185,,,,,,,,"09/Jan/09 15:35;behrica;I have the same problem in version 1.3.5 as well.
I debugged it once, and found the root cause somewhere deep in Wicket.

My work-around was to always set a value in the file upload field with the form tester. ","09/Jan/09 17:14;behrica;I found back the line where this case seems to create the problem.
If you debug your stuff (without having the file upload set), the code will get an exception in MultiPartFormInputStream, method ""skipPreamble"":

It ends up in the MalformedStreamException, which is swallowed and ""false"" is returned. 
Maybe this finished the submission and nothing happens.


	public boolean skipPreamble() throws IOException
	{
		// First delimiter may be not preceeded with a CRLF.
		System.arraycopy(boundary, 2, boundary, 0, boundary.length - 2);
		boundaryLength = boundary.length - 2;
		try
		{
			// Discard all data up to the delimiter.
			discardBodyData();

			// Read boundary - if succeeded, the stream contains an
			// encapsulation.
			return readBoundary();
		}
		catch (MalformedStreamException e)
		{
			return false;
		}
		finally
		{
			// Restore delimiter.
			System.arraycopy(boundary, 0, boundary, 2, boundary.length - 2);
			boundaryLength = boundary.length;
			boundary[0] = CR;
			boundary[1] = LF;
		}
	}

The exception has as cause: MalformedStreamException: Stream ended unexpectedly

I looked further and the debugger showd that this methods throws the exception : discardBodyData()

By assigning a value to the fileUploadComponent the code does not throw any exception at that point.",10/Jan/09 23:33;jdonnerstag;note that you testcases were wrong. You forgot to set the value. I've attached an updated project. Please review. Based on these testcases there is no bug in current 1.4 trunk.,"12/Jan/09 08:46;kmaja;I disagree that my example was incorrect. I presume submitting a form without field input is the correct way to test if field is set to require input. Fields setValue()-method is not needed for that test. Anyway i checked my examples and expanded them.

Wicket-Quickstart-Update covers also the following malfunctions in file upload:
- TextField input length validation (field.add(StringValidator(lengthBetween(...)))).
- DropDownChoice validation does not ""see"" selection.

Thanks to Carsten for degugging note! Hopefully it helps someone to fix the bug. I found already a patch to Wicket 1.4-RC2. Maybe it sticks: https://issues.apache.org/jira/browse/WICKET-1931.","12/Jan/09 20:24;jdonnerstag;Your latest quickstart prove my point. Your tests are wrong. Please see below 

BTW, all tests are against 1.4 trunk.


TestFileUploadWithTextField.java
	/**
	 * File is uploaded: Missing text field input is 
	 * required as supposed to in form submit.
	 */
	public void testSubmit_FileUploaded_NoInput() {
		formTester.setFile(fileUploadId, new File(testUploadFilePath), ""UTF-8"");
		formTester.submit();
		tester.assertNoErrorMessage();
		//assertEquals(1, tester.getMessages(FeedbackMessage.ERROR).size());
	}
	
You did not provide a value for the TextField which is setRequired(true). Since you are not setting a value for TextValue, you receive an error message. assertNoErrorMessage() == ""assert that NO error message has been reported"". Wicket it right. Your test is wrong.
	
	/**
	 * No File Uploaded: Text field is not required in 
	 * submit as supposed to.
	 */
	public void testSubmit_NoFileUploaded_NoInput() {
		formTester.submit();
		tester.assertNoErrorMessage();
	}

Same as above. No value for TextField with setRequired(true) => error message. Wicket it right. Your test is wrong.

With HTML there is nothing such as a null value. Hence """" means empty. Hence the following test reports an error
	
	/**
	 * No File Uploaded: Text field is not required in 
	 * submit as supposed to.
	 */
	public void testSubmit_NoFileUploaded_EmptyValues() {
		formTester.setValue(textFieldId, """");
		formTester.submit();
		tester.assertNoErrorMessage();
	}

Your test is wrong. No bug.

	
	/**
	 * No file uploaded: Too short text field input 
	 * validation malfunctions on form submit.
	 */
	public void testSubmit_NoFileUploaded_TooShortInput() {
		formTester.setValue(textFieldId, textTooShortInput);
		formTester.submit();
		tester.assertNoErrorMessage();
	}

You even wrote it in your comment. The value is too short, hence you expect an error message. But that is not what you test. You are testing that there is no error message. => No bug. Your test is wrong


The same, just that the text is too long. You expect an error, but your test is about finding no error message.	
	/**
	 * No file uploaded: Too long text field input 
	 * validation malfunctions on form submit.
	 */
	public void testSubmit_NoFileUploaded_TooLongInput() {
		formTester.setValue(textFieldId, textTooLongInput);
		formTester.submit();
		tester.assertNoErrorMessage();
	}

and so on and so on.","12/Jan/09 21:13;behrica;I did not take a close look at the quick start test. In our case the situation was:

1. FileUpload is not required
2. No other fields of the form where required

In this situation the submission of the form via the tester without setting any fields seemed not do anything.
No error messages appeared and the models of the form components were not updated. In this situation I ran it with the debugger, with seemed to show that the form submission process fails silently in the middle.

My workaround was to set a value to the not required fileupload and the form submission worked as expected (no error messages and models updated).
","17/Jan/09 14:09;jdonnerstag;I modified Kari's test cases to test it, but I was not able to reproduce your problem. It seems to work fine. Could you please provide a quickstart or TestCase. Thanks.","19/Jan/09 11:35;kmaja;Thank you for feedback. Tests are now fixed. 
Includes 6 tests, 3 of them fails because of FileUpload-field.","24/Jan/09 21:40;jdonnerstag;I run your latest tests on the current trunk. All tests except 1 were executed successfully. The only test that failed was 

	public void testSubmit_ValidTextField_NoFile() {
		formTester.setValue(textFieldId, 
				FileUploadError.THIS_VALUE_SHOULD_THROW_EXCEPTION);
		try {
			formTester.submit();
			fail(""Value not succesfully submitted."");
		} catch (RuntimeException rex) {
			assertEquals(""Special value: "" + 
					FileUploadError.THIS_VALUE_SHOULD_THROW_EXCEPTION, 
					rex.getMessage());
		}
	}

Here FileUploadError.THIS_VALUE_SHOULD_THROW_EXCEPTION == ""this value should throw exception"". And this is the constraint: inputField.add(StringValidator.lengthBetween(3, 10)); Obviously the text is longer than 10 chars. Hence you get a validation error and not your expected exception. I'm sorry, but your test is wrong which means that all test pass successfully.

","26/Jan/09 08:02;kmaja;If my tests do not prove the bug, then they do not prove the opposite either. It would be a worth wile to look at FileUpload handling code in Wicket and make sure. 

The point in this forum is that users help designers to improve the product. Point is not perfecting the test cases. Or am I wrong?","26/Jan/09 09:31;jdonnerstag;You are completly right. But look, you reported a major bug and what is well appreciated by every core developer, you provided test cases. Unfortunately some of your test cases were wrong. Correcting these test cases proved that wicket does what it is supposed to do. In order to improve our test coverage I added your test cases to the core test classes. Please correct me if I'm wrong, but until now we do not have a single failing test case for FileUpload which makes me think why it is time worthwile spend on FileUpload if there are other bugs waiting to be fixed. ","26/Jan/09 10:05;behrica;There is somehow a problem with the tester and file upload.
I use wicket 1.3.4 (but it's the same with 1.3.5)

I have the following test code, which works perfectly:

		FormTester mandateFormTester=tester.newFormTester(""mandateForm"");
		mandateFormTester.setFile(""newdocContainer:fileName"", new org.apache.wicket.util.file.File(file), ""text/plain"");
		mandateFormTester.setValue(""mandateNumber"", ""123"");
		mandateFormTester.submit(""saveBtn"");
		tester.assertNoErrorMessage();
		tester.assertInfoMessageStartsWith(""Mandate saved:"");


If I remove the ""mandateFormTester.setFile""  (which is marked as ""required"") I do NOT get an validation error, as I would except. Instead the test fails on the last line, so there is no info message, which means for my code that the form did not get submitted.

In a previous version of my code the fileupload was not required, but I had the same problem. 

Without call tester.setFile() it seems to not submit the form. As I said in my previous comment, I found with the debugger an non-catched exception in class MultiPartFormInputStream, method ""skipPreamble"". 

I will try now with 1.4-RC1 and let you know.
",04/Apr/09 15:09;jdonnerstag;I close this one because no issue was found. I've added additional test cases for verification.,04/Apr/09 15:09;jdonnerstag;Please see WICKET-2208 as a follow issue on the MalformedStreamException issue.,,,,,,,,,,
Conversion Exception Thrown for Submitting A Page with Multiple Forms within A Border ,WICKET-2134,12415894,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,sshark,sshark,02/Mar/09 02:45,04/Apr/09 09:34,13/Mar/19 23:15,04/Apr/09 09:34,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,1,,,,,,,,"""org.apache.wicket.util.convert.ConversionException: Can't convert null value to a primitive class: int for setting it on"" exception thrown when submitting a Page with multiple Forms within a Border. A ""Bordered"" Page with a single Form would not have this problem manifests. Also, if the Page by itself (not contained in a Border) is alright too.","JDK 1.5, OS X",,,,,,,,,,,,,,,,,,02/Mar/09 02:46;sshark;myproject.zip;https://issues.apache.org/jira/secure/attachment/12401214/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-02 16:02:54.193,,,no_permission,,,,,,,,,,,203042,,,Sat Apr 04 09:34:23 UTC 2009,,,,,,0|i0ke87:,117122,,,,,,,,02/Mar/09 02:46;sshark;Codes to show the bug,"02/Mar/09 16:02;soulspirit;When the current form is contained in a Border, all Border's children (including already-visited children and other forms) are visited.

It looks like the problem rises at Form.visitFormComponentsPostOrder(FormComponent.IVisitor), during the validation process:

if (getParent() instanceof Border)
{
	FormComponent.visitFormComponentsPostOrder(getParent(), visitor);
}

It seems to me that this piece code breaks everything.",04/Apr/09 09:34;jdonnerstag;Fixed and added a test case. Thanks.,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextField shows completion list even if focus is not in the text field anymore,WICKET-1827,12404243,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,jari,jari,12/Sep/08 12:26,04/Apr/09 08:43,13/Mar/19 23:15,24/Sep/08 15:30,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,,,wicket-extensions,,,,0,,,,,,,,"We have a form with multiple AutoCompleteTextFields in it. If the user enters text in text field A, and moves focus to text field B immediately (within the throttle delay) e.g. using tab, the autocompletion list appears in text field A even though it doesn't have the focus anymore.

Looking at wicket-autocomplete.js, the fix should be pretty straightforward, i.e. just check whether the input still has focus at the time when the autocompletion list is shown (in doUpdateChoices(resp)). This works for me:

--- wicket-extensions/src/main/java/org/apache/wicket/extensions/ajax/markup/html/autocomplete/wicket-autocomplete.js	(revision 694678)
+++ wicket-extensions/src/main/java/org/apache/wicket/extensions/ajax/markup/html/autocomplete/wicket-autocomplete.js	(working copy)
@@ -304,9 +304,9 @@
 
     function doUpdateChoices(resp){
     
-    	// check if the input hasn't been cleared in the meanwhile
+    	// check that the input still has focus and hasn't been cleared in the meanwhile
     	var input=wicketGet(elementId);
-   		if (!cfg.showListOnEmptyInput && (input.value==null || input.value=="""")) {
+   		if ((Wicket.Focus.getFocusedElement() != input) || (!cfg.showListOnEmptyInput && (input.value==null || input.value==""""))) {
    			hideAutoComplete();
    			return;
    		}
","Ubuntu/Firefox 3.0.1, OS X/Safari 3.1.2, Win XP/IE6, Win XP/IE7",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-24 15:30:20.424,,,no_permission,,,,,,,,,,,202756,,,Sat Apr 04 08:43:06 UTC 2009,,,,,,0|i0kf4v:,117269,,,,,,,,12/Sep/08 12:31;jari;typo,"15/Sep/08 09:08;jari;Affects Wicket 1.3.4. Tested quickly with IE6/IE7, verified that the bug exists for both, and that the fix also works for both.",24/Sep/08 15:30;jcompagner;i still have to port this to 1.4 but it is fixed for 1.3.5,04/Apr/09 08:43;mk3dk;Is there a workaround to get this fixed for 1.4?,,,,,,,,,,,,,,,,,,,,
DefaultObjectStreamFactory needs Application during deserialization,WICKET-2195,12421590,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,30/Mar/09 21:04,30/Mar/09 21:25,13/Mar/19 23:15,30/Mar/09 21:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,,,,,0,,,,,,,,During session replication deserialization is likely to happen outside request thread ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203102,,,2009-03-30 21:04:50.0,,,,,,0|i0ke2f:,117096,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SignInPanel_ja.html doesn't  close span tag,WICKET-1935,12408476,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,atsushikanaya,atsushikanaya,14/Nov/08 08:12,21/Mar/09 06:17,13/Mar/19 23:15,17/Nov/08 20:31,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-auth-roles,,,,0,,,,,,,,"Line 21 of SignInPanel_ja.html
  <BODY><wicket:panel><SPAN wicket:id=""feedback"">
doesn't close SPAN tag.

It should be like this:
  <BODY><wicket:panel><SPAN wicket:id=""feedback"" />

","WinXP Professional SP3, Java SE 6 Update 10, NetBeans 6.5 RC1",,,,,,,,,,,,,,,,,,21/Mar/09 06:17;t-kojima;SignInPanel_ja.html.rewrite;https://issues.apache.org/jira/secure/attachment/12402867/SignInPanel_ja.html.rewrite,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-03-21 06:17:09.738,,,no_permission,,,,,,,,,,,202858,,,Sat Mar 21 06:17:09 UTC 2009,,,,,,0|i0keuf:,117222,,,,,,,,"21/Mar/09 06:17;t-kojima;unresolved in 1.4-RC2.

L38 in 1.4-rc2:
</TD></TR></TBODY></TABLE></FORM></wicket:panel></SPAN></BODY></HTML>

should be:
</TD></TR></TBODY></TABLE></FORM></wicket:panel></BODY></HTML>


attach a rewrited HTML file for your reference.",,,,,,,,,,,,,,,,,,,,,,,
Invalid nested form tag name when the form is not visible and setoutputmarkupplaceholdertag(true) has been called,WICKET-2166,12416816,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mmakundi,mmakundi,13/Mar/09 08:00,13/Mar/09 14:40,13/Mar/19 23:15,13/Mar/09 14:40,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"when the an innerform is invisible and you called setoutputmarkupplaceholdertag(true), onComponentTag not processed and an invalid form tag name results: 

<form wicket:id=rootform>
  <form wicket:id=nestedform style=""display: none"">
</form></form>

Component.render(final MarkupStream markupStream) {

...

if (determineVisibility()) {

 // render -> replace form with div

} else if (markupStream != null)
{
 if (getFlag(FLAG_PLACEHOLDER))
 {
 final ComponentTag tag = markupStream.getTag();
 renderPlaceholderTag(tag, getResponse()); ///////////////////////
Here form does not replace ""form"" with ""div""
}
markupStream.skipComponent();
}
",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203074,,,Fri Mar 13 08:19:34 UTC 2009,,,,,,0|i0ke5r:,117111,,,,,,,,"13/Mar/09 08:00;mmakundi;Sends internet explorer ballistic so it is major, though easy to workaround.","13/Mar/09 08:02;mmakundi;Suggested fix 1:

(nested) forms should simply be allowed to have any tag name the programmer desires and not always forcefully overwrite ""form"" with ""div"". Ofcourse backward compatibility must be met.","13/Mar/09 08:02;mmakundi;Suggested fix 2:

@Override
       protected void renderPlaceholderTag(ComponentTag tag, Response response)
       {
               if (isRootForm())
               {
                       super.renderPlaceholderTag(tag, response);
               }
               else
               {
                       response.write(""<div "");
                       if (getOutputMarkupId())
                       {
                               response.write("" id=\"""");
                               response.write(getMarkupId());
                               response.write(""\"""");
                       }
                       response.write("" style=\""display:none\""></div>"");
               }
       }","13/Mar/09 08:19;mmakundi;Suggested fix 3:
@Override
       protected void renderPlaceholderTag(ComponentTag tag, Response response)
       {
               if (!isRootForm())
               {
   tag.setName(""div"");
               }
               super.renderPlaceholderTag(tag, response);
       }",,,,,,,,,,,,,,,,,,,,
StringResourceModel's Localizer cannot be overwritten,WICKET-2156,12416512,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pparson,pparson,10/Mar/09 10:36,10/Mar/09 17:47,13/Mar/19 23:15,10/Mar/09 17:47,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,"According to the Javadoc setLocalizer() should be used to overwrite a StringResourceModel's Localizer.

However, the localizer property is overwritten later by the load() method. 

Overriding getLocalizer() does not work either, since getString() uses the localizer property directly.

I think the load method should check whether the property is set already before applying the application's localizer.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-10 17:47:03.542,,,no_permission,,,,,,,,,,,203064,,,Tue Mar 10 17:47:03 UTC 2009,,,,,,0|i0ke6f:,117114,,,,,,,,10/Mar/09 17:47;ivaynberg;overriding getlocalizer() should work now,,,,,,,,,,,,,,,,,,,,,,,
FormComponentPanel should not add a name attribute,WICKET-2140,12415988,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,papegaaij,papegaaij,03/Mar/09 09:56,03/Mar/09 16:31,13/Mar/19 23:15,03/Mar/09 16:31,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,"FormComponent adds a name attribute in onComponentTag. This behaviour is inherited by FormComponentPanel, but is not valid for the latter. Often a FormComponentPanel is a div or span, for which the name attribute is not allowed.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203048,,,2009-03-03 09:56:50.0,,,,,,0|i0ke7j:,117119,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
beforeRender not called for behaviour added to ComponentTag,WICKET-2049,12413252,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,medavid,medavid,26/Jan/09 12:47,26/Feb/09 21:29,13/Mar/19 23:15,26/Feb/09 21:08,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"When adding a IMarkupFilter and adding a behaviour to the ComponentTag, the beforeRender method is never called, only onComponentTag will be called, but by then it is too late to modify the component.


Usecase: I would like to make components hidden if the markup contains wicket:hidden=""hidden"". For this i need to modify the components visiblitiy depending on if the markup contains that attribute.

The attached quickstart will never reach the System.out.println(""beforeRender: should hide component""); in HiddenComponentMarkupFilter",,,,,,,,,,,,,,,,,,,26/Jan/09 12:49;medavid;ComponentTagAddBehaviourBug.zip;https://issues.apache.org/jira/secure/attachment/12398728/ComponentTagAddBehaviourBug.zip,26/Feb/09 21:09;jdonnerstag;HiddenComponentsMarkupFilter.java;https://issues.apache.org/jira/secure/attachment/12401066/HiddenComponentsMarkupFilter.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-02-23 20:33:21.698,,,no_permission,,,,,,,,,,,202963,,,Thu Feb 26 21:29:19 UTC 2009,,,,,,0|i0kei7:,117167,,,,,,,,26/Jan/09 12:49;medavid;quickstart demonstrating the bug,23/Feb/09 20:33;jdonnerstag;beforeRender is invoked before the render process. But only during the render process the component associated to the markup tag is dynamically identified and thus only than the behavior you attached to the ComponentTag can be handled. I don't see any way to fix it. But there is another solution: please see WicketRemoveTagHandler,"26/Feb/09 13:45;medavid;Neither do I see any way to fix, but the WicketRemoveTagHandler way is not a solution, as then the java component hierarchy will no longer match the markup hierarchy","26/Feb/09 14:21;jdonnerstag;If you just want to make it invisible by default, why don't you just change your Page/Container constructor and make the component invisible?","26/Feb/09 15:01;medavid;we have pages(containing forms) that have a different markup for each client using the application. We differ using the setStyle method in Wicket. Usually it is just some layout, but sometimes it is that certain fields need to be removed. In the current situation we can do two things: hardcode it in the page, checking the style/ client name or hacking around it using a display:none in the markup. Both options don't satisfy me, so I was looking for a different solution. Any other alternative approaches are welcome","26/Feb/09 15:52;medavid;Adding the following override to a component will allow for the expected behaviour, but it has to be added on a per-component basis:


		private boolean hasHiddenAttribute = false;
        	@Override
        	public boolean isVisible() {
        		if(getMarkupStream()!= null) {
        			try{
	        			ComponentTag tag = getMarkupStream().getTag();
	        			final String value = tag.getAttributes().getString(ComponentTag.DEFAULT_WICKET_NAMESPACE + "":hidden"");
	        			System.out.println(""value1: "" + value);
	        			if(""hidden"".equals(value)) {
	        				hasHiddenAttribute = true;	
	        			}
        			} catch(MarkupException e) {
        				
        			}
        		}
        		return super.isVisible() && !hasHiddenAttribute;
        	}",26/Feb/09 21:06;jdonnerstag;found a rather simple solution,"26/Feb/09 21:08;jdonnerstag;You now can do something like in your IMarkupFilter. 

tag = new ComponentTag(tag)
{
	public void onBeforeRender(final Component component, final MarkupStream markupStream) 
	{
		super.onBeforeRender(component,markupStream);

		IValueMap attr = markupStream.getTag().getAttributes();
		String value = attr.getString(ComponentTag.DEFAULT_WICKET_NAMESPACE + "":hidden"");
		if (""hidden"".equals(value)) 
		{
			component.setVisibilityAllowed(false);
		}
	}
};",26/Feb/09 21:09;jdonnerstag;Attached an updated version of your IMarkupFilter which does the trick,"26/Feb/09 21:29;medavid;Nice fix, thanks!",,,,,,,,,,,,,,
Invalid javascript when setStripJavascriptCommentsAndWhitespace is enabled,WICKET-2060,12413609,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,papegaaij,papegaaij,30/Jan/09 12:28,23/Feb/09 19:24,13/Mar/19 23:15,23/Feb/09 19:24,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"When setStripJavascriptCommentsAndWhitespace is enabled (for example in deployment mode), some javascript files get corrupted. For example, the following line (notice the 2 spaces after 'return')
return  this.__unbind__(type, fn);
is compacted to
return
this.__unbind__(type, fn);
which does not execute the unbind function.",,,,,,,,,,,,,,,,,,,30/Jan/09 12:31;papegaaij;jquery.hotkeys-0.7.8.js;https://issues.apache.org/jira/secure/attachment/12399120/jquery.hotkeys-0.7.8.js,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-23 19:24:23.296,,,no_permission,,,,,,,,,,,202974,,,Mon Feb 23 19:24:23 UTC 2009,,,,,,0|i0kehb:,117163,,,,,,,,30/Jan/09 12:31;papegaaij;The file that triggers the problem (see line 85),23/Feb/09 19:24;jdonnerstag;seems to be fixed. See JavascriptStripperTest.java,,,,,,,,,,,,,,,,,,,,,,
Misplaced IllegalStateExceptions when accessing stateful URL with different session,WICKET-2107,12414888,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,msparer,msparer,16/Feb/09 18:07,23/Feb/09 19:15,13/Mar/19 23:15,23/Feb/09 19:15,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"partly copied from the mailing list (http://www.nabble.com/exception-handling-for-session-dependent-URLs-to22037821.html):

I recently came across a link to one of my projects where a user linked to a session dependent URL such as /?wicket:interface=:0::IBehaviorListener:2:3
when clicking on that URL, a PageExpiredException gets thrown and a redirect to the SessionExpiredPage takes place. So far so good - that's the way it should be.
However this works only for the first request (as long as the user doesn't have a session). If the user has a session and clicks on that link different exceptions might get thrown. with the URL mentioned above I've seen either a IllegalStateException (when it couldn't find a IBehaviorListener with the corresponding ID) or a ClassCastException (when it tried to cast a HeaderContributor to an IBehaviorListener in BehaviorRequestTarget). 

Apart from the ClassCastException, which definitely shouldn't occur, I don't think that IllegalStateExceptions should be thrown in (all of) those cases, as clicking on a session dependent link with a wrong session isn't a far fetched scenario.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-16 18:18:19.407,,,no_permission,,,,,,,,,,,203020,,,Mon Feb 23 19:15:45 UTC 2009,,,,,,0|i0keav:,117134,,,,,,,,16/Feb/09 18:18;ivaynberg;we should always throw page-expiredexception and return a session-expired page with a 404 for any url-parsing-related errors,"23/Feb/09 19:15;jdonnerstag;Fixed, thanks",,,,,,,,,,,,,,,,,,,,,,
interceptContinuationURL with umlauts not encoded,WICKET-2061,12413615,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,svenmeier,svenmeier,30/Jan/09 13:27,23/Feb/09 18:47,13/Mar/19 23:15,17/Feb/09 12:56,1.3.5,1.3.6,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"This is my second try to fix Wicket's encoding of redirects to intercepted URLs.
Instead of reopening WICKET-2007, I decided to create this new issue and make a clean start.

When Wicket redirects to an intercept page, it stores the original URL in PageMap#interceptContinuationURL.
		// The intercept continuation URL should be saved exactly as the
		// original request specified.
		...
			interceptContinuationURL = ""/"" + cycle.getRequest().getURL();

Note that comment and code are not in sync:
Instead of saving *exactly* the original request, a new URL is generated. ServletWebRequest#getURL() includes special characters non-encoded. Thus on a later continuation, the redirect to the original URL fails in case of special characters (umlauts in our case).

We're now using a subclass of ServletWebRequest, which utilizes the requestURI:

	public String getURL()
	{
		// servletPath is de-encoded, so use requestURI minus contextPath instead
		// String url = getServletPath();
		String url = httpServletRequest.getRequestURI().substring(
				httpServletRequest.getContextPath().length());

		final String pathInfo = getHttpServletRequest().getPathInfo();
		...
	}

I cannot say if this solution has unwanted side effects though.",,,,,,,,,,,,,,,,,,,31/Jan/09 16:28;svenmeier;encodingtest.zip;https://issues.apache.org/jira/secure/attachment/12399205/encodingtest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-17 12:56:48.799,,,no_permission,,,,,,,,,,,202975,,,Mon Feb 23 18:47:10 UTC 2009,,,,,,0|i0keh3:,117162,,,,,,,,"31/Jan/09 16:28;svenmeier;The promised example.

Note that the problem occurs only, if the umlauts are part of the request path.",17/Feb/09 12:56;jdonnerstag;thanks. Fixed in 1.4 trunk,"19/Feb/09 20:36;knopp;Juergen, the unit tests are broken on Mac. Obviously the default encoding of java file is not the same as you used (RequestEncodingTest). Can you escape the accented characters in strings?",19/Feb/09 20:46;jdonnerstag;done,"23/Feb/09 18:47;svenmeier;Juergen, thank you very much for attending this issue - works fine now.",,,,,,,,,,,,,,,,,,,
IResourceStream.close is not called by ResourceStreamRequestTarget,WICKET-2109,12414945,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,asfernandes,asfernandes,17/Feb/09 12:07,22/Feb/09 20:23,13/Mar/19 23:15,22/Feb/09 20:23,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,ResourceStreamRequestTarget.detach does nothing.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203022,,,2009-02-17 12:07:11.0,,,,,,0|i0keaf:,117132,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester fails to execute AjaxBehavior (onclick) due to old requestCycle (this bug is caused by bugfix WICKET-254),WICKET-2114,12415158,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mmakundi,mmakundi,19/Feb/09 18:18,22/Feb/09 13:16,13/Mar/19 23:15,22/Feb/09 13:16,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"WicketTester fails to execute AjaxBehavior (onclick) due to old requestCycle. This bug results from bugfix WICKET-254 (http://issues.apache.org/jira/browse/WICKET-254)

See attached Quickstart

Known workaround:
// Add following line before your tester.executeAjaxEvent:
tester.setupRequestAndResponse(true);

@see
http://issues.apache.org/jira/browse/WICKET-254",,18000,18000,,0%,18000,18000,,,,,,,,,,,,19/Feb/09 18:20;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12400538/Wicket-Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-22 13:16:01.959,,,no_permission,,,,,,,,,,,203026,,,Sun Feb 22 13:16:01 UTC 2009,,,,,,0|i0ke9z:,117130,,,,,,,,"19/Feb/09 18:20;mmakundi;The unit test will reproduce the bug. 

Workaround: add
tester.setupRequestAndResponse(true); before the executeAjaxEvent.","19/Feb/09 18:24;mmakundi;To be precise: the ajax event does not fail in the test, but the requestCycleProcessor will think it is a bookmarkable page and it will re-instantiate the whole page.. so the AJAX fails.",22/Feb/09 13:16;jdonnerstag;The problem actually is that the ajax behavior is not properly executed by WicketTester if a Button is used to submit the form. Fixed that,,,,,,,,,,,,,,,,,,,,,
i18n package resource resolving depends too much on available locale,WICKET-1868,12406271,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,13/Oct/08 01:08,20/Feb/09 19:22,13/Mar/19 23:15,20/Dec/08 17:49,1.3.4,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"Instead of just depending on the session's locale, our i18n resolving algorithm should look at the form of the file names as well. For instance, if we get a request for /web/resources/foo.Bar/test_en_US.css, it should recognize that test is the base form, and try en and en_US on top of that, regardless of the locale that is was set in the session.",,,,,,,,,,,,,,,WICKET-1908,,,,13/Oct/08 22:07;ivaynberg;test.txt;https://issues.apache.org/jira/secure/attachment/12392043/test.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-10-13 20:20:57.477,,,no_permission,,,,,,,,,,,202795,,,Fri Feb 20 19:22:06 UTC 2009,,,,,,0|i0kf1b:,117253,,,,,,,,13/Oct/08 01:14;ehillenius;fixed in 1.3.x branch and trunk,13/Oct/08 20:20;ivaynberg;this change broke all resource lookups. i unrolled it from svn. make sure you run the tests when you checkin.,13/Oct/08 21:48;ehillenius;I ran all the tests!!!!!!!!!!!! they passed,"13/Oct/08 21:50;ehillenius;before blindly rolling back, can you at least tell me what you think is broken about them? It actually fixed quite a large problem for us that's been around even since when you worked for us, all tests passed and I haven't seen any issues with them anymore on our live site. It is quite possible that I missed something, but just rolling back without saying anything else about it isn't very helpful.","13/Oct/08 21:55;jcompagner;i also didnt encounter broken tests.
I was running the tests just befor and after i updated the rollback but this didnt result in other test results for me.","13/Oct/08 21:58;ehillenius;There were three unit tests in WebResponseExceptionsTest broken before I started working on the fix, and those three are still broken. I just ran tests in Eclipse again, and everything else passes. I didn't try maven as I'm out of time due to issues I'm trying to track with disksessionstore","13/Oct/08 22:00;ivaynberg;when i updated this morning and ran our app none of the resources were resolving.

i then ran wicket tests and there were 26 failures (in resource related classes) and 20 errors because markup did not match since resources were not being looked up.

i traced the problem to resourcenameiterator, basically next() was no longer returning the full path to the resource. so instead of /foo/bar/Baz_en_us it was returning .en_us and thus the property factory could not load any property files.

i looked at svn history for resourcenameiterator and unrolled your last patch...all tests (with the exception of the one you modified) passed, so i unrolled the change.

so nothing was done blindly.

i did not have time to go and look at what exactly was broken, especially since martijn wants to build 1.3.5 today/tomorrow.

nothing was lost, the patches are still in svn tab of this issue so they can be easily reapplied...","13/Oct/08 22:06;ivaynberg;hold on, i am rerunning the tests, will attach the results in a sec so you guys see what i see",13/Oct/08 22:07;ivaynberg;tests failure log,13/Oct/08 22:08;ivaynberg;the test log is from wicket trunk,13/Oct/08 22:11;ehillenius;running from Windows I see,"13/Oct/08 22:14;ivaynberg;interesting.

looking into teamcity logs i can see your commit did not break 1.3.x, but it did break trunk. you think this is a jdk5/6 issue?

http://wicketstuff.org/teamcity/viewLog.html?tab=buildResultsDiv&buildTypeId=bt2&buildId=1970

","13/Oct/08 22:22;ehillenius;Aw, dang, you're right. It's not a jdk5/6 issues, because they fail on jdk5 here as well. I guess I only tested on the 1.3 branch assuming that the fix was so local it wouldn't have a consequence for trunk. The interesting part of course is why that matters so much.",13/Oct/08 22:22;ivaynberg;i reapplied the change to wicket-1.3.x since it seems to work there fine. can you see why trunk is freaking out?,13/Oct/08 22:32;ehillenius;I'll try,06/Nov/08 07:53;ivaynberg;any news?,"06/Nov/08 07:56;eelco12;Nope. I can try this weekend.

Eelco

",20/Dec/08 17:49;jdonnerstag;applied patch to 1.4-rc2. From the comments I understand it has been applied to 1.3 already.,"20/Feb/09 19:22;ivaynberg;applied in:

*728321	12/20/08 9:48 AM	4	jdonnerstag	wicket-1868: i18n package resource resolving depends too much on available locale

Juergen, can you put the jira key in the comment capitalized - WICKET-1868 instead of wicket-1868 - that way jira's svn plugin can properly relate the issue to the commit. thanks!",,,,,
Localizer never caches resources when component is not given,WICKET-2102,12414742,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,pavel.cernocky,pavel.cernocky,13/Feb/09 13:07,18/Feb/09 18:41,13/Mar/19 23:15,18/Feb/09 18:41,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"In org.apache.wicket.Localizer.getString(String, Component, IModel, String) there's this code:

// If this component is not yet added to page we do not want to check
// cache as we can generate an invalid cache key
if ((cache != null) && addedToPage)
{
	cacheKey = getCacheKey(key, component);
}

If the component is null, then addedToPage is always false, thus cacheKey is never populated and possibly found resource is never put in cache.

The condition should be:
if ((cache != null) && (component == null || addedToPage))

Cheers,
Palo",,,,,,,,,,,,,,,,,,,13/Feb/09 13:08;pavel.cernocky;diff.patch;https://issues.apache.org/jira/secure/attachment/12400185/diff.patch,18/Feb/09 10:24;pavel.cernocky;diff2.patch;https://issues.apache.org/jira/secure/attachment/12400406/diff2.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-02-13 16:14:34.777,,,no_permission,,,,,,,,,,,203015,,,Wed Feb 18 18:41:50 UTC 2009,,,,,,0|i0kebr:,117138,,,,,,,,13/Feb/09 16:14;jdonnerstag;thanks,"18/Feb/09 10:17;pavel.cernocky;It was not so easy as I expected.
Cache key should contain locale, which is taken from Component, so when no Component is given cache will be populated with string from first requested locale and will return it also for all other locales.","18/Feb/09 10:23;pavel.cernocky;Attached diff2.patch contains fix which pulls out locale from session (when no component is given) and appends it to cacheKey.
It's not the cleanest solution (to access Session here), but definitely faster than before.",18/Feb/09 18:41;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,
Stripping comments causes StackOverflowError in XmlPullParser,WICKET-2105,12414869,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,dashorst,dashorst,16/Feb/09 13:24,17/Feb/09 20:31,13/Mar/19 23:15,17/Feb/09 20:31,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"For some reason, parsing our HTML resources results in a StackOverflowError in one of our pages. I've put a breakpoint  in the stacktrace that resulted in the StackOverflowError, and captured the following start of the trace:

Thread [btpool0-0] (Suspended (breakpoint at line 4078 in Pattern$BranchConn))	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Single(Pattern$BmpCharProperty).match(Matcher, int, CharSequence) line: 3366	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Dot(Pattern$CharProperty).match(Matcher, int, CharSequence) line: 3345	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.match(Matcher, int, CharSequence) line: 4295	
	Pattern$GroupTail.match(Matcher, int, CharSequence) line: 4227	
	Pattern$BranchConn.match(Matcher, int, CharSequence) line: 4078	
	Pattern$Single(Pattern$BmpCharProperty).match(Matcher, int, CharSequence) line: 3366	
	Pattern$Branch.match(Matcher, int, CharSequence) line: 4114	
	Pattern$GroupHead.match(Matcher, int, CharSequence) line: 4168	
	Pattern$Loop.matchInit(Matcher, int, CharSequence) line: 4314	
	Pattern$Prolog.match(Matcher, int, CharSequence) line: 4251	
	Pattern$Slice.match(Matcher, int, CharSequence) line: 3482	
	Pattern$Curly.match0(Matcher, int, int, CharSequence) line: 3782	
	Pattern$Curly.match(Matcher, int, CharSequence) line: 3744	
	Pattern$Slice.match(Matcher, int, CharSequence) line: 3482	
	Matcher.match(int, int) line: 1127	
	Matcher.matches() line: 502	
	MarkupParser.removeComment(String) line: 497	
	MarkupParser.parseMarkup() line: 341	
	MarkupParser.parse() line: 270	
	SimpleMarkupLoader.loadMarkup(MarkupContainer, MarkupResourceStream, IMarkupLoader, boolean) line: 52	
	InheritedMarkupMarkupLoader.loadMarkup(MarkupContainer, MarkupResourceStream, IMarkupLoader, boolean) line: 62	
	DefaultMarkupLoader.loadMarkup(MarkupContainer, MarkupResourceStream, IMarkupLoader, boolean) line: 55	
	MarkupCache.loadMarkup(MarkupContainer, MarkupResourceStream, boolean) line: 458	
	MarkupCache.loadMarkupAndWatchForChanges(MarkupContainer, MarkupResourceStream, boolean) line: 553	
	MarkupCache.getMarkup(MarkupContainer, Class, boolean) line: 319	
	MarkupCache.getMarkupStream(MarkupContainer, boolean, boolean) line: 215	
	LoginPage$2(MarkupContainer).getAssociatedMarkupStream(boolean) line: 343	
	ContainerWithAssociatedMarkupHelper.renderHeadFromAssociatedMarkupFile(HtmlHeaderContainer) line: 72	
	LoginPage$2(WebMarkupContainerWithAssociatedMarkup).renderHeadFromAssociatedMarkupFile(HtmlHeaderContainer) line: 72	
	LoginPage$2(Panel).renderHead(HtmlHeaderContainer) line: 134	
	HtmlHeaderContainer$1.component(Component) line: 220	
	LoginPage(MarkupContainer).visitChildren(Class, Component$IVisitor) line: 829	
	LoginPage(MarkupContainer).visitChildren(Component$IVisitor) line: 869	
	HtmlHeaderContainer.renderHeaderSections(MarkupContainer, HtmlHeaderContainer) line: 211	
	HtmlHeaderContainer.onComponentTagBody(MarkupStream, ComponentTag) line: 136	
	HtmlHeaderContainer(Component).renderComponent(MarkupStream) line: 2480	
	HtmlHeaderContainer(MarkupContainer).onRender(MarkupStream) line: 1411	
	HtmlHeaderContainer(Component).render(MarkupStream) line: 2317	
	LoginPage(MarkupContainer).autoAdd(Component, MarkupStream) line: 223	
	HtmlHeaderResolver.resolve(MarkupContainer, MarkupStream, ComponentTag) line: 78	
	LoginPage(MarkupContainer).renderNext(MarkupStream) line: 1324	
	LoginPage(MarkupContainer).renderAll(MarkupStream) line: 1427	
	LoginPage(Page).onRender(MarkupStream) line: 1470	
	LoginPage(Component).render(MarkupStream) line: 2317	
	LoginPage(Page).renderPage() line: 904	
	BookmarkablePageRequestTarget.respond(RequestCycle) line: 231	
	WebRequestCycleProcessor(AbstractRequestCycleProcessor).respond(RequestCycle) line: 104	
	EduArteRequestCycle(RequestCycle).processEventsAndRespond() line: 1181	
	EduArteRequestCycle(RequestCycle).step() line: 1252	
	EduArteRequestCycle(RequestCycle).steps() line: 1353	
	EduArteRequestCycle(RequestCycle).request() line: 493	
	WicketFilter.doGet(HttpServletRequest, HttpServletResponse) line: 355	
	WicketFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 200	
	ServletHandler$CachedChain.doFilter(ServletRequest, ServletResponse) line: 1084	
	ServletHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 360	
	SecurityHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 216	
	SessionHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 181	
	WebAppContext(ContextHandler).handle(String, HttpServletRequest, HttpServletResponse, int) line: 726	
	WebAppContext.handle(String, HttpServletRequest, HttpServletResponse, int) line: 405	
	Server(HandlerWrapper).handle(String, HttpServletRequest, HttpServletResponse, int) line: 152	
	Server.handle(HttpConnection) line: 324	
	HttpConnection.handleRequest() line: 505	
	HttpConnection$RequestHandler.headerComplete() line: 829	
	HttpParser.parseNext() line: 514	
	HttpParser.parseAvailable() line: 211	
	HttpConnection.handle() line: 380	
	SocketConnector$Connection.run() line: 228	
	QueuedThreadPool$PoolThread.run() line: 488	

The markup that is being searched is the following:

{BEGIN MARKUP}
[if lt IE 7]>
	<div id=""ie6warn"">
		<div class=""highlight"">U gebruikt Internet Explorer 6 of ouder. Deze applicatie vereist functionaliteit die niet door deze browser ondersteund wordt.</div>
		Het is aan te raden een van de volgende browsers te gebruiken: 
		<table>
			<tr>
				<td class=""unit_80""><a href=""http://www.firefox.com"" id=""firefoxlink"" class=""logolink""></a></td>
				<td class=""unit_130""><a href=""http://www.microsoft.com/ie"" id=""ielink"" class=""logolink""></a></td>
				<td class=""unit_80""><a href=""http://www.opera.com"" id=""operalink"" class=""logolink""></a></td>
				<td class=""unit_130""><a href=""http://www.apple.com/safari"" id=""safarilink"" class=""logolink""></a></td>
			</tr>
			<tr class=""browsernames"">
				<td>Firefox 3</td>
				<td>Internet Explorer 7</td>
				<td>Opera 9.5</td>
				<td>Safari 3</td>
			</tr>
		</table>
		<div class=""right"">Klik <a href=""#"" id=""continueLink"">hier</a> om toch uw eigen browser te gebruiken.</div>
	</div>
	<![endif]
{END MARKUP}

Increasing the stack size will alleviate the problem, though this is not too complex a markup that such a measure should be necessary. I'll try to create a quickstart that illustrates this problem...


",,,,,,,,,,,,,,,,,,,16/Feb/09 14:19;dashorst;wicket-2105.tgz;https://issues.apache.org/jira/secure/attachment/12400280/wicket-2105.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-17 20:31:06.188,,,no_permission,,,,,,,,,,,203018,,,Tue Feb 17 20:31:06 UTC 2009,,,,,,0|i0keb3:,117135,,,,,,,,16/Feb/09 14:19;dashorst;This quickstart also includes a testcase.,16/Feb/09 14:21;dashorst;the culprit is setStripComments(true). Disabling that will let the unit test pass.,16/Feb/09 14:39;dashorst;I propose to add this testcase as a unit test to the wicket suite....,"17/Feb/09 20:31;jdonnerstag;See http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5050507
See http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6337993

Changed the regex
",,,,,,,,,,,,,,,,,,,,
What to do with the wicket dtd?,WICKET-693,12372297,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,thrantal,dashorst,dashorst,24/Jun/07 21:39,16/Feb/09 18:05,13/Mar/19 23:15,01/Dec/08 14:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,site,wicket,,,2,,,,,,,,"The current dtd is located at the wicket.sf.net site, and may not even work. 

We need to come up with a solution for the wicket dtd and fix this for the future:

./jdk-1.4/wicket/src/site/resources/DTD/wicket-1.0-xhtml11.dtd: SYSTEM ""http://wicket.sourceforge.net/DTD/wicket-xhtml1.dtd""
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-27 04:38:16.202,,,no_permission,,,,,,,,,,,201725,,,Mon Feb 16 18:05:41 UTC 2009,,,,,,0|i0ki6v:,117764,,,,,,,,"27/Jul/07 04:38;thrantal;Maybe this is not the ideal solution, but I have found using this

  http://svn.apache.org/repos/asf/wicket/trunk/jdk-1.4/wicket/wicket-xhtml1-strict.dtd

like that 

  <html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:wicket=""wicket-xhtml1-strict.dtd"" xml:lang=""en"" lang=""en"">

in the HTML files good enough. I'm not sure if it's any different from the default version from W3C though.

Then I have just registered the wicket-specific things as custom elements and attributes in the HTML editor of my IDE (IDEA). You only need to do it once per element / attribute anyway. Of course it would be nice if they could come directly from the DTD.",20/Aug/07 20:37;dashorst;Next release,"12/Jun/08 22:51;thrantal;Is there a way to put them here

http://wicket.apache.org/wicket-1.0-xhtml11.dtd
http://wicket.apache.org/wicket-1.1-xhtml11.dtd
http://wicket.apache.org/wicket-1.2-xhtml11.dtd
http://wicket.apache.org/wicket-1.3-xhtml11.dtd
http://wicket.apache.org/wicket-1.4-xhtml11.dtd
http://wicket.apache.org/wicket-1.5-xhtml11.dtd
...

for each release?

And would it make any sense?-)",06/Jul/08 13:05;dashorst;Moved to next milestone release.,"31/Oct/08 04:22;thrantal;OK, I think I got it... You can do something like this

http://wicket.apache.org/dtds.data/wicket-1.0-xhtml11.dtd","01/Dec/08 14:13;thrantal;Well, now the current DTD is available here

http://wicket.apache.org/dtds.data/wicket-xhtml1.3-strict.dtd

http://wicket.apache.org/dtds.data/wicket-xhtml1.4-strict.dtd

and it can be referenced if someone knows the correct way :) Adding the xmlns:wicket attribute above seems to help IntelliJ IDEA to get that into use, even though it doesn't seem to be valid HTML.

Better ideas are welcome.","16/Feb/09 12:31;kan.izh;This DTD defines only wicket:id and wicket:preview attributes, but doesn't define any wicket elements. Is it just not finished or am I missing something?
Answering previous question, you need make a <!DOCTYPE>, which will point to the wicket-xhtml1.4-strict.dtd, but it will not work well while .dtd is not complete. Afair, in IDEA it's possible to name file as .xhtml, instead .html, it gives more strict validations.","16/Feb/09 18:05;ivaynberg;this is not a priority for core devs. if a user wants to submit a complete dtd we will be happy to include it. each markup editor allows you to either learn or disable the tags, so there are plenty of very easy workaround. in fact, most editors will be happy with xmlns:wicket in your html tag. anyways, feel free to submit a better version.",,,,,,,,,,,,,,,,
SignInPanel.onSignInSucceeded call the correct method on IPageFactory,WICKET-2103,12414754,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,crashedworld,crashedworld,13/Feb/09 15:31,16/Feb/09 11:31,13/Mar/19 23:15,13/Feb/09 18:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-auth-roles,,,,0,,,,,,,,"The onSignInSucceeded method is calling newPage(Class, PageParameters) with PageParameters = null. Instead of this, the call should be changed to use the newPage(Class) method instead. 

setResponsePage(getApplication().getSessionSettings().getPageFactory().newPage(getApplication().getHomePage(), (PageParameters)null));

should be changed to

setResponsePage(getApplication().getSessionSettings().getPageFactory().newPage(getApplication().getHomePage()));


This is releated to WICKET-2092.",,,,,,,,,,,,,,,WICKET-2092,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-13 18:52:15.355,,,no_permission,,,,,,,,,,,203016,,,Mon Feb 16 11:31:59 UTC 2009,,,,,,0|i0kebj:,117137,,,,,,,,13/Feb/09 18:52;jdonnerstag;thanks,"16/Feb/09 11:31;crashedworld;wow, that was fast! Thank you for fixing this! I'm really looking forward for the final 1.4 Release!",,,,,,,,,,,,,,,,,,,,,,
NPE when clearing DateTimeField ,WICKET-2083,12414154,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,ig0774,ig0774,05/Feb/09 23:06,13/Feb/09 17:17,13/Mar/19 23:15,13/Feb/09 17:17,1.4-RC1,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-datetime,,,,0,,,,,,,,"setDate() doesn't properly handle null values for the date parameter. When date is null the instance date field is properly set to null but the hours and minutes fields remain untouched, so if hours had previously been set, a NPE is thrown by line 239. I'll attach a test case to demonstrate the behavior and a proposed patch.",Java 5+,1800,1800,,0%,1800,1800,,,,,,,,,,,,05/Feb/09 23:07;ig0774;DateTimeFieldTestCase.java;https://issues.apache.org/jira/secure/attachment/12399601/DateTimeFieldTestCase.java,05/Feb/09 23:07;ig0774;patch.diff;https://issues.apache.org/jira/secure/attachment/12399602/patch.diff,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-02-13 17:17:38.839,,,no_permission,,,,,,,,,,,202997,,,Fri Feb 13 17:17:38 UTC 2009,,,,,,0|i0keen:,117151,,,,,,,,05/Feb/09 23:07;ig0774;Test case,05/Feb/09 23:07;ig0774;Proposed patch,13/Feb/09 17:17;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,
Error feedback is hidden by lower level messages,WICKET-2091,12414382,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,fidlej,fidlej,09/Feb/09 14:22,11/Feb/09 22:04,13/Mar/19 23:15,11/Feb/09 22:04,1.3.4,1.4-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,"A DEBUG, INFO or WARNING feedback message hides a later added ERROR message.
The FeedbackMessages.hasErrorMessageFor() is unable to find it.

The problem is inside FeedbackMessages.hasMessageFor(component, level).
It checks only the first found message for the given component.
It should not stop on a message with a lower error level.

",Wicket 1.3.4 and Wicket SVN,,,,,,,,,,,,,,,,,,11/Feb/09 21:07;wfaler;WICKET-2091-test.txt;https://issues.apache.org/jira/secure/attachment/12400039/WICKET-2091-test.txt,11/Feb/09 21:43;olizilla;WICKET-2091-test2.patch;https://issues.apache.org/jira/secure/attachment/12400045/WICKET-2091-test2.patch,11/Feb/09 21:29;cfmdobbie;wicket-2190-fix.patch;https://issues.apache.org/jira/secure/attachment/12400042/wicket-2190-fix.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-02-11 21:07:23.707,,,no_permission,,,,,,,,,,,203005,,,Wed Feb 11 21:43:04 UTC 2009,,,,,,0|i0kedr:,117147,,,,,,,,"11/Feb/09 21:07;wfaler;I have attached a patch with unit-tests for this bug.

Given the code currently in SVN the test fails (as expected), however I think a patch fixing the issue is forthcoming from another source momentarily, after which the test should pass..",11/Feb/09 21:29;cfmdobbie;Patch attached to fix issue. FeedbackMessages.hasMessageFor altered to cope with multiple messages. ,"11/Feb/09 21:43;olizilla;LWUG strikes again. Another unit test that shows up the same issue, but this time all in one class.",,,,,,,,,,,,,,,,,,,,,
error in modal.js wrong use of typeof,WICKET-2095,12414467,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,chaviv,chaviv,10/Feb/09 09:58,10/Feb/09 16:56,13/Mar/19 23:15,10/Feb/09 16:56,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,,,,,0,,,,,,,,"error in javascript code

line 780: 
if (typeof(this.oldParent != ""undefined"")) -> if (typeof(this.oldParent) != ""undefined"")",javascript language error so any enviroment,,,,,,,,,,,,,,,,,,10/Feb/09 10:00;chaviv;typeof_error_v1.patch;https://issues.apache.org/jira/secure/attachment/12399901/typeof_error_v1.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-10 16:56:58.353,,,no_permission,,,,,,,,,,,203009,,,Tue Feb 10 16:56:58 UTC 2009,,,,,,0|i0kecv:,117143,,,,,,,,10/Feb/09 16:56;knopp;Applied to 1.3 branch and trunk,,,,,,,,,,,,,,,,,,,,,,,
Inevitable UnknownSizeException with HTTPS,WICKET-1861,12405889,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,javadoc,javadoc,07/Oct/08 08:01,09/Feb/09 17:50,13/Mar/19 23:15,09/Feb/09 17:13,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"When using a FileUploadField in a HTTPS environment, the request always returns a request-size of -1.
In that case, FileUploadBase rejects to process the reuqest, no matter what (or if) a maxSize is defined:

org.apache.wicket.util.upload.FileUploadBase:236 (wicket 1.4m3)

if (requestSize == -1) {
 throw new UnknownSizeException( ""the request was rejected because its size is unknown"");
}

this makes it impossible to use fileUploads with HTTPS in this environment at all.

I think, this _sanity check_ should not be done if either HTTPS is used, or the developer does not care (expressed by not setting any maxSize).
",Caucho Resin 3.2 behind apache2,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-07 10:11:58.299,,,no_permission,,,,,,,,,,,202788,,,Mon Feb 09 17:50:16 UTC 2009,,,,,,0|i0kf27:,117257,,,,,,,,07/Oct/08 10:11;dashorst;sounds like a resin/apache problem. Our app uses https exclusively through apache/tomcat and have no problems with file uploads.,"07/Oct/08 13:10;javadoc;Thanks! Good to know. Just to make sure: You do use _FileUploads_ via HTTPS ?
I´ll take it to caucho support then. In the meantime, however it would be nice to be able to turn it off without patching the source.","07/Oct/08 19:58;dashorst;yes, more than we would like our users to do. It bogs our database/filesystem with all those word documents they upload.","07/Oct/08 20:27;javadoc;Thanks Martijn, i´ll take it to caucho then.
",20/Dec/08 20:51;jdonnerstag;seems to be no Wicket problem according to the discussion,09/Feb/09 15:31;knopp;Can't we omit the check if no maxSize is set?,"09/Feb/09 17:13;ivaynberg;the check now looks like this:

if (requestSize == -1 && getSizeMax() != Long.MAX_VALUE)

if you have it set to max then obviously you dont care how big it is - so knowing the size ahead of time doesnt really matter.

yes this is a caucho problem because they dont set the right headers or whatever, but we can also handle it if it makes sense.","09/Feb/09 17:50;javadoc;Awesome, thanks Igor! 

btw: on the caucho side there is a fix for 4.x branch, so it only effects 3.2.x.
For details: http://bugs.caucho.com/view.php?id=2995",,,,,,,,,,,,,,,,
SerializationChecker issue,WICKET-2077,12414036,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,a701440,a701440,04/Feb/09 20:59,08/Feb/09 03:29,13/Mar/19 23:15,08/Feb/09 03:29,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,"When the static initialization of the SerializationChecker class fails (one of the methods is not available) it throws a runtime exception which marks the SerializationChecker class as unavailable in the JVM. Using the SerializationChecker class after that to check for SerializationChecker .isAvailable is pointless because it throws the ClassNotFound exception.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-06 07:08:21.492,,,no_permission,,,,,,,,,,,202991,,,Sun Feb 08 03:29:35 UTC 2009,,,,,,0|i0kefb:,117154,,,,,,,,06/Feb/09 07:08;ivaynberg;how can one of the methods not be available?,"08/Feb/09 00:39;a701440;Some embedded JVMs we work with do not implement LOOKUP. 
This leaves us without any workarounds short of modifying the source. 
There is no easy way to turn the use of SerializationChecker off.

By the way what was the intent of the SerializationChecker.isAvailable() any way if not to check whether it works on the target JVM?","08/Feb/09 03:29;ivaynberg;i changed the code so it does not throw a runtime exception - which is what cause your embedded jvm to not load the class. instead it now logs a warning.

there is an easy way to turn it off, simply install your own IObjectStreamFactory that does not use the checker. the simplest variant can be

class myfactory extends DefaultObjectStreamFactory {
  public ObjectOutputStream newObjectOutputStream(final OutputStream out) throws IOException
		{return new ObjectOutputStream(out);}
}

",,,,,,,,,,,,,,,,,,,,,
pb to access to this on event onchange on the AutoCompleteTextField,WICKET-2005,12411702,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,olivier.dutrieux@pasteur.fr,olivier.dutrieux@pasteur.fr,05/Jan/09 18:15,06/Feb/09 11:16,13/Mar/19 23:15,01/Feb/09 19:01,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-extensions,,,,1,,,,,,,,"I would like create a component that extends AjaxEditableLabel with replace TextField with AjaxEditableAutoComplete.
And I discovert a problem in the wicket-autocomplete.js when the event onchange is rewriting (line 83) :

83// WICKET-1280
84        objonchangeoriginal=obj.onchange; 
85        obj.onchange=function(event){
86      		if(mouseactive==1)return false;
87      		if(typeof objonchangeoriginal==""function"")objonchangeoriginal();
88      	}
89        objonchange=obj.onchange;


the problem is that the objonchangeoriginal function can't access to the this object, and it's necessary because I change the onchange event on AjaxEditableAutoComplete in case I extends AjaxEditableLabel with this :

	editor.add(new EditorAjaxBehavior()	{
			private static final long serialVersionUID = 1L;
			@Override
			protected void onComponentTag(ComponentTag tag) {
				super.onComponentTag(tag);
				final String saveCall = ""{wicketAjaxGet('"" + getCallbackUrl() +	""&save=true&'+this.name+'='+wicketEncode(this.value)); return true;}"";
				tag.put(""onchange"", saveCall);
			}
		});


then the best way to solve the problem is to change the invocation of objonchangeoriginal function with that :

83// WICKET-1280
84        objonchangeoriginal=obj.onchange; 
85        obj.onchange=function(event){
86      		if(mouseactive==1)return false;
87      		if(typeof objonchangeoriginal==""function"")objonchangeoriginal.apply(this, [event]);
88      	}
89        objonchange=obj.onchange;


all invocation of function need to be change this with new invocation on the wicket-autocomplete.js file

You find on attach file a simple example that's show the problem. And my version of wicket-autocomplete.js that solve the problem.

Duto","Windows XP, Firefox 3.0, IE7, safari 3.0",,,,,,,,,,,,,,,,,,05/Jan/09 20:10;olivier.dutrieux@pasteur.fr;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12397144/screenshot-1.jpg,05/Jan/09 20:01;olivier.dutrieux@pasteur.fr;src.zip;https://issues.apache.org/jira/secure/attachment/12397140/src.zip,05/Jan/09 20:09;olivier.dutrieux@pasteur.fr;wicket-autocomplete.js;https://issues.apache.org/jira/secure/attachment/12397143/wicket-autocomplete.js,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-01-05 20:38:23.662,,,no_permission,,,,,,,,,,,202921,,,Fri Feb 06 11:16:23 UTC 2009,,,,,,0|i0kenr:,117192,,,,,,,,05/Jan/09 20:00;olivier.dutrieux@pasteur.fr;I simple test that's add a AutoCompleteTextField on form. And I overwrite the onchange script to display (on javascripty alert) the id of AutoCompleteTextField. And the id is undefined. It's not normal and it's due to the how the the original onchange event is execute on the wicket-autocomplete.js.,05/Jan/09 20:01;olivier.dutrieux@pasteur.fr;I simple test that's add a AutoCompleteTextField on form. And I overwrite the onchange script to display (on javascripty alert) the id of AutoCompleteTextField. And the id is undefined. It's not normal and it's due to the how the the original onchange event is execute on the wicket-autocomplete.js.,"05/Jan/09 20:09;olivier.dutrieux@pasteur.fr;This is my patched version of wicket-autocomplete.js : That's solve the problem for all events :

affected lines : 
87 : if(typeof objonchangeoriginal==""function"")objonchangeoriginal.apply(this, [event]);
97 : if(typeof objonblur==""function"")objonblur.apply(this, [event]);
108 : if(typeof objonfocus==""function"")objonfocus.apply(this, [event]);
143 : if(typeof objonchange==""function"") objonchange.apply(this, [event]);
152 : if(typeof objonkeydown==""function"")objonkeydown.apply(this, [event]);
181 : if(typeof objonkeyup==""function"")objonkeyup.apply(this, [event]);
192 : if(typeof objonkeypress==""function"")objonkeypress.apply(this, [event]);
356 : if (typeof objonchange==""function"") {objonchange.apply(wicketGet(elementId), [event]);}
","05/Jan/09 20:38;seitz;thx olivier,
unfortunately, one of my raid5 drives crashed and my computer is still rebuilding the raid.
it takes 5-10 minutes for eclipse to just start, so i'll have to postpone this until my computer is ready for action again.",07/Jan/09 17:52;olivier.dutrieux@pasteur.fr;I hope it's not to bad for your system :-S,"27/Jan/09 08:28;dutrieux;Do you have some news about my issue Gerolf Seitz ?

Best regards","02/Feb/09 07:56;olivier.dutrieux@pasteur.fr;Well done but I think you forget to correct the line 357 : 

if (typeof objonchange==""function"") {objonchange();}

patch ==> if (typeof objonchange==""function"") {objonchange.apply(wicketGet(elementId), [event]);}

best regards",02/Feb/09 21:35;ivaynberg;see any other spots i missed?,06/Feb/09 11:16;olivier.dutrieux@pasteur.fr;No I think it's ok now. Thinks very much.,,,,,,,,,,,,,,,
Wicket-Examples Nested example fails with a NPE,WICKET-2071,12413835,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,kinabalu,kinabalu,03/Feb/09 00:45,03/Feb/09 16:23,13/Mar/19 23:15,03/Feb/09 16:23,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-examples,,,,0,,,,,,,,"The ""nested"" wicket-examples page errors out with a NPE.  Patch included replaces this with an empty list.",,,,,,,,,,,,,,,,,,,03/Feb/09 00:46;kinabalu;wicket-examples-recursivepanel.patch;https://issues.apache.org/jira/secure/attachment/12399319/wicket-examples-recursivepanel.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202985,,,Tue Feb 03 00:46:12 UTC 2009,,,,,,0|i0kefr:,117156,,,,,,,,03/Feb/09 00:46;kinabalu;modification to recursivepanel to pass in an empty list instead of a null.  don't know if this ever worked passing a null,,,,,,,,,,,,,,,,,,,,,,,
FormComponentPanel does not work correctly inside a Border,WICKET-2027,12412685,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,asfernandes,asfernandes,18/Jan/09 00:20,02/Feb/09 07:19,13/Mar/19 23:15,19/Jan/09 07:48,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Attached a quickstart and a patch. The problem is that some actions need to be done in post-order, but the border support in Form does it in pre-order.

To reproduce:
- Enter something on both fields
- Click submit
- The DateField model is not updated
",,,,,,,,,,,,,,,,,,,18/Jan/09 00:20;asfernandes;datefieldtest.tar.gz;https://issues.apache.org/jira/secure/attachment/12398156/datefieldtest.tar.gz,18/Jan/09 00:21;asfernandes;patch.diff;https://issues.apache.org/jira/secure/attachment/12398157/patch.diff,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-01-19 07:48:10.922,,,no_permission,,,,,,,,,,,202942,,,Mon Jan 19 07:48:10 UTC 2009,,,,,,0|i0kekn:,117178,,,,,,,,18/Jan/09 00:20;asfernandes;Test case.,18/Jan/09 00:21;asfernandes;Patch.,"19/Jan/09 07:48;jdonnerstag;thanks, fixed.",,,,,,,,,,,,,,,,,,,,,
class cast exception (String) in MixedParamUrlCodingStrategy with additional params with patch,WICKET-1484,12393227,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mikisan,mikisan,05/Apr/08 10:59,01/Feb/09 19:19,13/Mar/19 23:15,01/Feb/09 19:19,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,1,,,,,,,,"MixedParamUrlCodingStrategy has a bug in

MixedParamUrlCodingStrategy

appendParameters

		if (!parameterNamesToAdd.isEmpty())
		{
			boolean first = true;
			final Iterator iterator;
			if (UnitTestSettings.getSortUrlParameters())
			{
				iterator = new TreeSet(parameterNamesToAdd).iterator();
			}
			else
			{
				iterator = parameterNamesToAdd.iterator();
			}
			while (iterator.hasNext())
			{
				url.append(first ? '?' : '&');
				String parameterName = (String)iterator.next();
@@@			String value = (String)parameters.get(parameterName);
			
url.append(urlEncode(parameterName)).append(""="").append(urlEncode(value));
				first = false;
			}
		}

where value should be a String[] not a String.


like in AbstractRequestTargetUrlCodingStrategy

appendParameters

	String[] values = (String[])value;
	for (int i = 0; i < values.length; i++)
	{
		appendValue(url, entry.getKey().toString(), values[i]);
	}

it works ok after patching MixedParamUrlCodingStrategy to

       if (!parameterNamesToAdd.isEmpty()) {
           boolean first = true;
           final Iterator iterator;
           if (UnitTestSettings.getSortUrlParameters()) {
               iterator = new TreeSet(parameterNamesToAdd).iterator();
           } else {
               iterator = parameterNamesToAdd.iterator();
           }
           while (iterator.hasNext()) {
               url.append(first ? '?' : '&');
               String parameterName = (String) iterator.next();
               Object value = parameters.get(parameterName);
               if (value != null) {
                   if (value instanceof String[]) {
                       String[] values = (String[]) value;
                       for (String element : values) {

url.append(this.urlEncode(parameterName)).append(""="").append(this.urlEncode(element));
                       }
                   } else {

url.append(this.urlEncode(parameterName)).append(""="").append(this.urlEncode(value.toString()));
                   }
               }
               first = false;
           }
       }

",,,,,,,,,,,,,,,,,,,10/Apr/08 12:32;yor;1484_patch.txt;https://issues.apache.org/jira/secure/attachment/12379835/1484_patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-04-10 12:32:43.389,,,no_permission,,,,,,,,,,,202451,,,Sun Feb 01 19:19:45 UTC 2009,,,,,,0|i0kfzr:,117408,,,,,,,,"10/Apr/08 12:32;yor;Created the patch, like Michael suggested in his comment","15/Apr/08 13:57;erikvanoosten;An alternative is to replace the getParameterMap() method in ServletWebRequest like this:

	public Map getParameterMap()
	{
		// Lazy-init parameter map. Only make one copy. It's more efficient, and
		// we can add stuff to it (which the BookmarkablePage stuff does).
		if (parameterMap == null)
		{
			parameterMap = new HashMap(httpServletRequest.getParameterMap());

            // Replace single value parameter arrays with a single string.
            for (Iterator i = parameterMap.keySet().iterator(); i.hasNext(); )
            {
                Object key = i.next();
                Object value = parameterMap.get(key);
                if ((value instanceof String[]) && ((String[]) value).length == 1)
                {
                    parameterMap.put(key, ((String[]) value)[0]);
                }
            }
        }
		// return a mutable copy
		return parameterMap;
	}
",01/Feb/09 19:19;ivaynberg;seems to be already fixed,,,,,,,,,,,,,,,,,,,,,
Wicket tries to decode servlet path that already has been decoded by servlet container,WICKET-1663,12396847,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,boris.pasko,boris.pasko,27/May/08 06:43,01/Feb/09 19:10,13/Mar/19 23:15,01/Feb/09 19:10,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC2,,wicket,,,,0,,,,,,,,"If you try to submit a query containing percent sign, for example, you will get something like this:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
WicketMessage: Can't instantiate page using constructor public ru.yellteam.web.webPages.ShowYellowPage(org.apache.wicket.PageParameters) and argument 3 = ""1"" 2 = ""-"" 0 = ""English"" 1 = ""%""

Root cause:

java.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: ""/-""
at java.net.URLDecoder.decode(URLDecoder.java:173)
at org.apache.wicket.protocol.http.RequestUtils.decode(RequestUtils.java:122)
at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getRelativePathPrefixToContextRoot(ServletWebRequest.java:177)
at ru.yellteam.web.webPages.ShowYellowPage.<init>(ShowYellowPage.java:46)
at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:154)
at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:96)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.newPage(BookmarkablePageRequestTarget.java:268)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.getPage(BookmarkablePageRequestTarget.java:283)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.processEvents(BookmarkablePageRequestTarget.java:210)
at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:151)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:874)
at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)
at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)
at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)
at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)
at java.lang.Thread.run(Thread.java:595)

Complete stack:

org.apache.wicket.WicketRuntimeException: Can't instantiate page using constructor public ru.yellteam.web.webPages.ShowYellowPage(org.apache.wicket.PageParameters) and argument 3 = ""1"" 2 = ""-"" 0 = ""English"" 1 = ""%""
at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:175)
at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:96)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.newPage(BookmarkablePageRequestTarget.java:268)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.getPage(BookmarkablePageRequestTarget.java:283)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.processEvents(BookmarkablePageRequestTarget.java:210)
at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)

java.lang.reflect.InvocationTargetException
at sun.reflect.GeneratedConstructorAccessor16.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:154)
at org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:96)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.newPage(BookmarkablePageRequestTarget.java:268)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.getPage(BookmarkablePageRequestTarget.java:283)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.processEvents(BookmarkablePageRequestTarget.java:210)
at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

The root cause of the problem is org.apache.wicket.protocol.http.servlet.ServletWebRequest line 177:
String servletPath = RequestUtils.decode(getServletPath());

where getServletPath() is :
	public String getServletPath()
	{
		return httpServletRequest.getServletPath();
	}

Basically what happens is that at line 177 Wicket tries to decode an url that was already decoded by Apache servlet container. URLDecoder sees something like '%/-' in the string to be decoded and blows up.
This problem could be fixed by replacing line 177 with:
		// MODIFIED BY BORISMAN
		// WAS: String servletPath = RequestUtils.decode(getServletPath());
		String servletPath = getServletPath();


",Apache Tomcat 5.5.25,,,,,,,,,,,WICKET-1624,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202610,,,2008-05-27 06:43:35.0,,,,,,0|i0kfk7:,117338,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Generated urls for mounted pages contain redundant trailing ""/""",WICKET-2065,12413703,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,drzewo,drzewo,31/Jan/09 22:56,01/Feb/09 18:22,13/Mar/19 23:15,01/Feb/09 18:22,1.3.5,1.3.6,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Is it OK (i.e. ""by design"" as opposed to ""by mistake"") that the urls generated for the mounted pages end up with the ""/""?

Provided that there's a page that expects single parameter (here: ""content"")...
public class HelpPage extends WebPage {
public HelpPage(PageParameters p) {
super(p);
add(new DynamicContentPanel(""contentPanel"", new Model<String>(p.getString(""content""))));
}
}

...and it is mounted in the Application#init()
mount(new BookmarkablePageRequestTargetUrlCodingStrategy(""help"", HelpPage.class, null));

...and further referred to somewhere else as:
add(new BookmarkablePageLink(""helpPage"", HelpPage.class, new PageParameters(""content=a"")));

the url in the generated markup is in the following form:
http://localhost:8080/dummy-web/help/content/a/;jsessionid=11624C6125F8DF4867E3218676D79A29

While IMHO it should read:
http://localhost:8080/dummy-web/help/content/a;jsessionid=11624C6125F8DF4867E3218676D79A29

It looks even more awkward when there are more parameters and part of them is encoded as a query string:
http://localhost:8080/dummy-web/help/content/a/?param2=value2/;jsessionid=11624C6125F8DF4867E3218676D79A29

The page parameter for both cases is resolved correctly by the HelpPage's constructor, so it seems that even though there's an extra ""/"" at the end of the url it gets omitted.
Then why bother generating it?

I stumbled upon an issue https://issues.apache.org/jira/browse/WICKET-765. Apart from the compatibility with wicket 1.2 I see no rationale for trailing ""/"". Looking at implementations of IRequestTargetUrlCodingStrategy I come to the conclusion the the ""append(""/"")"" is being overused and redundant especially when it is preceded by the following code which makes sure that the ""/"" is in place before adding another parameter.",,,,,,,,,,,,,,,,,,,31/Jan/09 23:14;drzewo;o.a.w.r.t.coding.patch;https://issues.apache.org/jira/secure/attachment/12399216/o.a.w.r.t.coding.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202979,,,Sat Jan 31 23:14:49 UTC 2009,,,,,,0|i0kegn:,117160,,,,,,,,"31/Jan/09 23:14;drzewo;Proposed patch makes sure that each parameter before being added to the generated url is precedeeded by ""/"" rather than being unconditionally appended by  a ""/"" regardless it is the last one or not. Sorry for several lines of code in the patch changed due to ide formatting diffs. Be warned that several test cases that fail due to the differences in generated output markup are not corrected by this patch. The test cases that fail (and require to update their respective expected output markup):
  testIndexedUrlMountedPageWithComponentThatUsesUrlForResourceListener(org.apache.wicket.request.target.coding.IndexParamWithStatelessIFrameTest)
  testIndexedLink(org.apache.wicket.markup.html.link.IndexedParamUrlCodingTest)
  testStatelessDefaultUrlCodingStrategy(org.apache.wicket.request.target.coding.StatelessStatefullUrlCodingStrategyTest)
  testStatefullDefaultUrlCodingStrategy(org.apache.wicket.request.target.coding.StatelessStatefullUrlCodingStrategyTest)
  testStatelessIndexedUrlCodingStrategy(org.apache.wicket.request.target.coding.StatelessStatefullUrlCodingStrategyTest)
  testStatefullIndexedUrlCodingStrategy(org.apache.wicket.request.target.coding.StatelessStatefullUrlCodingStrategyTest)
  testStatelessHybridUrlCodingStrategy(org.apache.wicket.request.target.coding.StatelessStatefullUrlCodingStrategyTest)
  testStatefullHybridUrlCodingStrategy(org.apache.wicket.request.target.coding.StatelessStatefullUrlCodingStrategyTest)
  testAppendParametersAppendingStringBufferMap1(org.apache.wicket.request.target.coding.MixedParamUrlCodingStrategyTest)
  testAppendParametersAppendingStringBufferMap2(org.apache.wicket.request.target.coding.MixedParamUrlCodingStrategyTest)
  testAppendParametersAppendingStringBufferMap5(org.apache.wicket.request.target.coding.MixedParamUrlCodingStrategyTest)
  testAppendParametersAppendingStringBufferMap6(org.apache.wicket.request.target.coding.MixedParamUrlCodingStrategyTest)
  testPage(org.apache.wicket.util.parse.metapattern.parsers.IndexedParamTest)
  testStatelessComponentPageWithMount(org.apache.wicket.stateless.StatelessComponentTest)
  testStatelessComponentPageWithParamsWithMount(org.apache.wicket.stateless.StatelessComponentTest)
  testStatelessComponentPageWithParamsWithIndexMount(org.apache.wicket.stateless.StatelessComponentTest)",,,,,,,,,,,,,,,,,,,,,,,
AjaxFormChoiceComponentUpdatingBehavior affects checkboxes even if component uses radios and vice-versa,WICKET-1677,12397253,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wboyce@panix.com,wboyce@panix.com,01/Jun/08 20:28,01/Feb/09 08:41,13/Mar/19 23:15,01/Feb/09 08:41,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"I have a form with two radio buttons.  Depending which radio the user selects, I show one form or another form.  I'm using an AjaxFormChoiceComponentUpdatingBehavior attached to the RadioGroup.  One of the forms has a checkbox.  The checkbox triggers an ajax update--even though the AjaxFormChoiceComponentUpdatingBehavior is attached to a RadioGroup.  AjaxFormChoiceComponentUpdatingBehavior should only affect the appropriate controls based on whether it is attached to a choice component that uses radios or checkboxes.  If a developer really wants both, then he can use two AjaxFormChoiceComponentUpdatingBehavior instances.

I've attached a patch. ",,,,,,,,,,,,,,,,,,,01/Jun/08 20:30;wboyce@panix.com;AjaxFormChoiceComponentUpdatingBehavior.patch;https://issues.apache.org/jira/secure/attachment/12383196/AjaxFormChoiceComponentUpdatingBehavior.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202623,,,2008-06-01 20:28:45.0,,,,,,0|i0kfj3:,117333,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AutoLinkResolver does not work with <a href=""#internal"">Internal link</a>",WICKET-1567,12394790,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mickeh,mickeh,25/Apr/08 11:35,01/Feb/09 07:25,13/Mar/19 23:15,01/Feb/09 07:25,1.3.2,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,,,wicket,,,,0,,,,,,,,"I think the title says it all.
Try adding: <a href=""#internal"">Internal link</a>
in a page using the AutoLinkResolver and you have repeated the bug.

Hint:
PathInfo pathInfo = new PathInfo(""#internal"");
creates a PathInfo with anchor == null.",,,,,,,,,,,,,,,,,,,24/Dec/08 10:56;jthomerson;1567.patch;https://issues.apache.org/jira/secure/attachment/12396733/1567.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-12-24 10:56:54.12,,,no_permission,,,,,,,,,,,202526,,,Wed Dec 24 10:56:54 UTC 2008,,,,,,0|i0kfs7:,117374,,,,,,,,"24/Dec/08 10:56;jthomerson;Attached is a patch to fix this - simply ported some code from the 1.4 (trunk) branch into 1.3 - it was already fixed in trunk.

This patch is against 1.3.x branch.",,,,,,,,,,,,,,,,,,,,,,,
Wizard buttons (previous / finish) aren't enabled when they should be,WICKET-2063,12413644,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jthomerson,jthomerson,30/Jan/09 18:09,31/Jan/09 20:42,13/Mar/19 23:15,31/Jan/09 20:42,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"When using the Wizard component in 1.4-SNAPSHOT (sometime after 1.4-RC1), the previous and finish buttons don't enable when they should.  I have found that this is because isEnabledInHierarchy is called multiple times, with the first time being during the POST process, before the wizard step is advanced to the next step.  Since the step has not advanced when isEnabled is calculated, you get the following behavior:

1 - click ""next"" from first step to second - the ""previous"" button should be enabled, but it's not
2 - the ""finish"" button never is enabled, even on the last step
",,,,,,,,,,,,,,,,,,,31/Jan/09 15:39;jdonnerstag;2063.patch;https://issues.apache.org/jira/secure/attachment/12399204/2063.patch,30/Jan/09 18:13;jthomerson;2063.patch;https://issues.apache.org/jira/secure/attachment/12399142/2063.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-01-31 15:39:20.165,,,no_permission,,,,,,,,,,,202977,,,Sat Jan 31 20:42:50 UTC 2009,,,,,,0|i0kegv:,117161,,,,,,,,"30/Jan/09 18:13;jthomerson;Here are some more details about those two phases:

When you click to go from the first step to the second, this is the stack trace where the cached isEnabled flag is first calculated (incorrectly - before step has advanced)

Thread [btpool0-3] (Suspended)	
	PreviousButton(Component).isEnabledInHierarchy() line: 4386	
	Form$21(Form$ValidationVisitor).formComponent(IFormVisitorParticipant) line: 165	
	FormComponent<T>.visitFormComponentsPostOrderHelper(Component, FormComponent$IVisitor) line: 415	
	FormComponent<T>.visitFormComponentsPostOrderHelper(Component, FormComponent$IVisitor) line: 402	
	FormComponent<T>.visitFormComponentsPostOrderHelper(Component, FormComponent$IVisitor) line: 402	
	FormComponent<T>.visitFormComponentsPostOrder(Component, FormComponent$IVisitor) line: 374	
	Form<T>.visitFormComponentsPostOrder(FormComponent$IVisitor) line: 1158	
	Form<T>.validateComponents() line: 2013	
	Form<T>.validate() line: 1993	
	Form<T>.process() line: 937	
	Form<T>.process(IFormSubmittingComponent) line: 908	
	Form<T>.onFormSubmitted() line: 876	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: not available	
	Method.invoke(Object, Object...) line: not available	
	RequestListenerInterface.invoke(Page, Component) line: 182	
	ListenerInterfaceRequestTarget.processEvents(RequestCycle) line: 73	
	WebRequestCycleProcessor(AbstractRequestCycleProcessor).processEvents(RequestCycle) line: 91	
	WebRequestCycle(RequestCycle).processEventsAndRespond() line: 1192	
	WebRequestCycle(RequestCycle).step() line: 1271	
	WebRequestCycle(RequestCycle).steps() line: 1370	
	WebRequestCycle(RequestCycle).request() line: 501	
	WicketFilter.doGet(HttpServletRequest, HttpServletResponse) line: 455	
	WicketFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 288	
	ServletHandler$CachedChain.doFilter(ServletRequest, ServletResponse) line: 1084	
	ServletHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 360	
	SecurityHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 216	
	SessionHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 181	
	WebAppContext(ContextHandler).handle(String, HttpServletRequest, HttpServletResponse, int) line: 712	
	WebAppContext.handle(String, HttpServletRequest, HttpServletResponse, int) line: 405	
	Server(HandlerWrapper).handle(String, HttpServletRequest, HttpServletResponse, int) line: 139	
	Server.handle(HttpConnection) line: 313	
	HttpConnection.handleRequest() line: 506	
	HttpConnection$RequestHandler.content(Buffer) line: 844	
	HttpParser.parseNext() line: 644	
	HttpParser.parseAvailable() line: 211	
	HttpConnection.handle() line: 381	
	SocketConnector$Connection.run() line: 227	
	BoundedThreadPool$PoolThread.run() line: 442	


After adding my patch, this is where it's calculated correctly for the second time (after the step has advanced)

Thread [btpool0-3] (Suspended)	
	PreviousButton(Component).isEnabledInHierarchy() line: 4386	
	PreviousButton(FormComponent<T>).onComponentTag(ComponentTag) line: 1461	
	PreviousButton(Button).onComponentTag(ComponentTag) line: 198	
	PreviousButton(Component).renderComponent(MarkupStream) line: 2523	
	PreviousButton(MarkupContainer).onRender(MarkupStream) line: 1521	
	PreviousButton(Component).render(MarkupStream) line: 2377	
	WizardButtonBar(MarkupContainer).renderNext(MarkupStream) line: 1399	
	WizardButtonBar(MarkupContainer).renderComponentTagBody(MarkupStream, ComponentTag) line: 1586	
	WizardButtonBar(MarkupContainer).renderAssociatedMarkup(String, String) line: 668	
	WizardButtonBar(Panel).onComponentTagBody(MarkupStream, ComponentTag) line: 114	
	WizardButtonBar(Component).renderComponent(MarkupStream) line: 2552	
	WizardButtonBar(MarkupContainer).onRender(MarkupStream) line: 1521	
	WizardButtonBar(Component).render(MarkupStream) line: 2377	
	Form<T>(MarkupContainer).renderNext(MarkupStream) line: 1399	
	Form<T>(MarkupContainer).renderComponentTagBody(MarkupStream, ComponentTag) line: 1586	
	Form<T>(MarkupContainer).onComponentTagBody(MarkupStream, ComponentTag) line: 1510	
	Form<T>.onComponentTagBody(MarkupStream, ComponentTag) line: 1845	
	Form<T>(Component).renderComponent(MarkupStream) line: 2552	
	Form<T>(MarkupContainer).onRender(MarkupStream) line: 1521	
	Form<T>.onRender(MarkupStream) line: 1916	
	Form<T>(Component).render(MarkupStream) line: 2377	
	StaticWizard(MarkupContainer).renderNext(MarkupStream) line: 1399	
	StaticWizard(MarkupContainer).renderComponentTagBody(MarkupStream, ComponentTag) line: 1586	
	StaticWizard(MarkupContainer).renderAssociatedMarkup(String, String) line: 668	
	StaticWizard(Panel).onComponentTagBody(MarkupStream, ComponentTag) line: 114	
	StaticWizard(Component).renderComponent(MarkupStream) line: 2552	
	StaticWizard(MarkupContainer).onRender(MarkupStream) line: 1521	
	StaticWizard(Component).render(MarkupStream) line: 2377	
	WizardPage(MarkupContainer).renderNext(MarkupStream) line: 1399	
	WizardPage(MarkupContainer).renderAll(MarkupStream) line: 1537	
	WizardPage(Page).onRender(MarkupStream) line: 1515	
	WizardPage(Component).render(MarkupStream) line: 2377	
	WizardPage(Page).renderPage() line: 919	
	WebRequestCycle.redirectTo(Page) line: 166	
	ListenerInterfaceRequestTarget(PageRequestTarget).respond(RequestCycle) line: 58	
	WebRequestCycleProcessor(AbstractRequestCycleProcessor).respond(RequestCycle) line: 104	
	WebRequestCycle(RequestCycle).processEventsAndRespond() line: 1200	
	WebRequestCycle(RequestCycle).step() line: 1271	
	WebRequestCycle(RequestCycle).steps() line: 1370	
	WebRequestCycle(RequestCycle).request() line: 501	
	WicketFilter.doGet(HttpServletRequest, HttpServletResponse) line: 455	
	WicketFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 288	
	ServletHandler$CachedChain.doFilter(ServletRequest, ServletResponse) line: 1084	
	ServletHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 360	
	SecurityHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 216	
	SessionHandler.handle(String, HttpServletRequest, HttpServletResponse, int) line: 181	
	WebAppContext(ContextHandler).handle(String, HttpServletRequest, HttpServletResponse, int) line: 712	
	WebAppContext.handle(String, HttpServletRequest, HttpServletResponse, int) line: 405	
	Server(HandlerWrapper).handle(String, HttpServletRequest, HttpServletResponse, int) line: 139	
	Server.handle(HttpConnection) line: 313	
	HttpConnection.handleRequest() line: 506	
	HttpConnection$RequestHandler.content(Buffer) line: 844	
	HttpParser.parseNext() line: 644	
	HttpParser.parseAvailable() line: 211	
	HttpConnection.handle() line: 381	
	SocketConnector$Connection.run() line: 227	
	BoundedThreadPool$PoolThread.run() line: 442	
","30/Jan/09 18:13;jthomerson;This patch fixes the problem, but it does not address the root problem - that most likely, all cached metadata should be cleared between the ""post"" and ""render"" phases.","31/Jan/09 15:39;jdonnerstag;I think the patch is going into the right direction. Currently ENABLED_IN_HIERARCHY_CACHE_KEY is reset in Component.detach, but it should be internalBeforeRender.

The updated patch attached 
- changes ENABLED_IN_HIERARCHY_CACHE_KEY from MetaData to simple Boolean. There is no good reason why this is a MetaDat
- updates places where isEnabled() is used but isEnabledInHierarchy is better/faster because of the cached value.",31/Jan/09 15:39;jdonnerstag;updated patch,31/Jan/09 20:42;ivaynberg;cache flag is now cleared in internalbeforerender() for all components,,,,,,,,,,,,,,,,,,,
AjaxPreprocessingCallDecorator calls the delegate decorator before itself (same behavior as AjaxPostprocessingCallDecorator),WICKET-2057,12413404,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ronaldtm,ronaldtm,27/Jan/09 20:00,30/Jan/09 17:29,13/Mar/19 23:15,30/Jan/09 17:29,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"AjaxPreprocessingCallDecorator calls the delegate decorator before itself (same behavior as AjaxPostprocessingCallDecorator), when it should call itself before the delegate.","Ubuntu Linux, Java 6, Netbeans",,,,,,,,,,,,,,,,,,27/Jan/09 20:03;ronaldtm;AjaxPostprocessingCallDecoratorTest.java;https://issues.apache.org/jira/secure/attachment/12398837/AjaxPostprocessingCallDecoratorTest.java,27/Jan/09 20:02;ronaldtm;AjaxPreprocessingCallDecorator.java.patch;https://issues.apache.org/jira/secure/attachment/12398835/AjaxPreprocessingCallDecorator.java.patch,27/Jan/09 20:02;ronaldtm;AjaxPreprocessingCallDecoratorTest.java;https://issues.apache.org/jira/secure/attachment/12398836/AjaxPreprocessingCallDecoratorTest.java,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202971,,,Tue Jan 27 20:03:49 UTC 2009,,,,,,0|i0kehj:,117164,,,,,,,,27/Jan/09 20:02;ronaldtm;Correction patch,27/Jan/09 20:02;ronaldtm;Unit test for the issue,27/Jan/09 20:03;ronaldtm;Additional unit test for AjaxPostprocessorCallDecorator,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester can't find the pageLink field using reflection when you override the PageLink class.,WICKET-2030,12412846,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lhunath,lhunath,20/Jan/09 16:02,24/Jan/09 22:45,13/Mar/19 23:15,24/Jan/09 22:45,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Currently, BaseWicketTester (line 524) does this:

	public <C extends Page> Result isPageLink(String path, Class<C> expectedPageClass)
	{
		PageLink<?> pageLink = (PageLink<?>)getComponentFromLastRenderedPage(path);
		try
		{
			Field iPageLinkField = pageLink.getClass().getDeclaredField(""pageLink"");
			iPageLinkField.setAccessible(true);
			IPageLink iPageLink = (IPageLink)iPageLinkField.get(pageLink);
			return isEqual(expectedPageClass, iPageLink.getPageIdentity());
		}

The problem manifests when you want to customize a page link's onClick by overriding it like this:

new PageLink<AuthPage>(""pageLink"", AuthPage.class) {

            private static final long serialVersionUID = 1L;

            @Override
            public void onClick() {

                Foo.bar();

                super.onClick();
            }
});


As a result; the BaseWicketTester tries to look for the pageLink field in the anonymous class instead of the privately declared pageLink field in the PageLink class.

BaseWicketTester should either go down the tree:

for(Class type = pageLink.getClass(); type != Object.class; type = type.getSuperclass())

Or a getter should be made for the pageLink field. (This is what Java wants you to do).",,,,,,,,,,,,,,,,,,,23/Jan/09 15:48;lhunath;pagelink.patch;https://issues.apache.org/jira/secure/attachment/12398580/pagelink.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-01-24 22:45:45.106,,,no_permission,,,,,,,,,,,202945,,,Sat Jan 24 22:45:45 UTC 2009,,,,,,0|i0kekf:,117177,,,,,,,,23/Jan/09 15:48;lhunath;This patch fixes this issue by going down the component's class hierarchy; checking whether every class in the hierarchy has a pageLink field.,24/Jan/09 22:45;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
FormComponent cookie persistent issue,WICKET-2011,12411933,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mk3dk,mk3dk,08/Jan/09 09:29,17/Jan/09 16:06,13/Mar/19 23:15,17/Jan/09 16:06,1.3.5,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"The FormComponent doesnt persistent the cookie correct when there is no context path and the cookie is created on a mounted page. The cookie is created by cannot be retrieved again from the formcomponent. Either the retrieval logic is wrong or the cookie is created wrongly.

See this thread for more information:
http://www.nabble.com/FormComponent-cookie-persistent-issue-td21197389.html",Doesnt matter which os or on which platform you are running,,,,,,,,,,,,,,,,,,08/Jan/09 09:31;mk3dk;myproject.rar;https://issues.apache.org/jira/secure/attachment/12397399/myproject.rar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-01-13 21:31:02.243,,,no_permission,,,,,,,,,,,202927,,,Sat Jan 17 16:06:30 UTC 2009,,,,,,0|i0kemv:,117188,,,,,,,,08/Jan/09 09:31;mk3dk;Use the Start.java to run the example. Because the example should be performed without a context path.,"13/Jan/09 21:31;jdonnerstag;without mountBookmarkablePage: Cookie Path = /
with mountBookmarkablePage: Cookie Path = /homepage/wicket:interface/:0:loginPanel:loginForm::IFormSubmitListener::/

Enable logging with log4j.logger.org.apache.wicket.markup.html.form.persistence=DEBUG to see that wicket always provided an empty path

The 'path' is set via: cookie.setPath(getWebRequest().getHttpServletRequest().getContextPath()); 
With and without mountBookmarkablePage the path was set to """", the context path. This empty path leads than to the browser applying the requestUri instead.

When loading the cookie, the requestUri used however is /homepage, which of course leads to the browser not returning the cookie (path does not match).

This far I got for now. More to come next time.

",15/Jan/09 23:44;mk3dk;I have tried to deploy the application on a tomcat server in case this was jetty related. But the same behavior occurs on the tomcat server when deploying to root context.,"17/Jan/09 16:06;jdonnerstag;fixed. If context path == """", than use ""/""",,,,,,,,,,,,,,,,,,,,
Not possible to call getRowCount() in override of isVisible() for DataView,WICKET-2012,12411945,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,ptrthomas,ptrthomas,08/Jan/09 13:42,17/Jan/09 15:06,13/Mar/19 23:15,17/Jan/09 15:06,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"I am using a DataView and I was trying to override isVisible() and use ""this.getRowCount()"" to decide if the table should be rendered or not.  But this results in a stack overflow because DataView#getRowCount() internally calls isVisibleInHierarchy().

The use case is trying to hide a table header row when there are no search results.  The implementation of getRowCount() in AbstractPageableView (Wicket 1.3.5) starts like this:

        if (!isVisibleInHierarchy())
        {
            return 0;
        }

Was wondering - is that part really necessary?  I wanted to use an enclosure but that also results in isVisible() calls all over the place.  I could work around this for now by using a separate web markup container for hiding the table header row.

My message to the mailing list: http://www.nabble.com/trouble-controlling-visibility-of-dataview-td21265778.html#a21265778

I just searched Nabble and found this had come up before:

http://www.nabble.com/enclosures-and-dataview-td14258879.html#a14258879

Let me know if you need a quickstart or more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-17 14:58:54.769,,,no_permission,,,,,,,,,,,202928,,,Sat Jan 17 15:06:52 UTC 2009,,,,,,0|i0kemn:,117187,,,,,,,,"17/Jan/09 14:58;jdonnerstag;I'm not really an expert for DataView. Looking at getRowCount() it seems that the row count is cached, hence the isVisibleInHierarchy() call is not there for performance reason. 

		if (!isVisibleInHierarchy())
		{
			return 0;
		}

		if (isItemCountCached())
		{
			return getCachedItemCount();
		}

Checking the call hierarchy it seems to be that depending on the row count a number of other activities are triggered. Retung 0 from getRowCount() seems to prevent that. I don't think it can be removed.
",17/Jan/09 15:06;jdonnerstag;introduced new method getItemCount which is extracted from getRowCount but still uses the cached count if possible.,,,,,,,,,,,,,,,,,,,,,,
isVisible should not be called after detach,WICKET-2025,12412598,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,erikvanoosten,erikvanoosten,16/Jan/09 14:19,17/Jan/09 13:54,13/Mar/19 23:15,17/Jan/09 13:54,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"I think isVisible should not be called after detach to prevent model reloads.

I found one call to isVisible after detach in method ComponentRequestTarget#respond(RequestCycle). That method initiates a detach and then calls page.endComponentRender. This leads to a call to Page#checkRendering which calls isVisibleInHierarchy() and from there isVisible(). Method checkRendering only does something when the debug setting 'componentUseCheck' is enabled (which according to the javadoc is true by default). 

Short term workaround: set debug setting 'componentUseCheck' to false.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-16 14:34:30.772,,,no_permission,,,,,,,,,,,202940,,,Sat Jan 17 13:54:43 UTC 2009,,,,,,0|i0kel3:,117180,,,,,,,,16/Jan/09 14:34;dashorst;This check is only enabled during development mode. It is turned off in deployment mode.,16/Jan/09 14:45;erikvanoosten;In that case the javadoc of IDebugSettings needs an update. It does not change the importance of this issue.,17/Jan/09 13:54;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,
Forms are not validated correctly inside a border,WICKET-2026,12412599,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,asfernandes,asfernandes,16/Jan/09 14:22,17/Jan/09 13:35,13/Mar/19 23:15,17/Jan/09 13:35,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Attached a quickstart:
- On the first (without border) form, enter something on the second field and click submit
- onError is called, as the first field is required
- On the second (in a border) form, enter something on the second field and click submit
- onSubmit is incorrectly called, as the first field is required

Attached a patch that seems to fix the problem.",,,,,,,,,,,,,,,,,,,16/Jan/09 14:23;asfernandes;bordervalidationtest.tar.gz;https://issues.apache.org/jira/secure/attachment/12398070/bordervalidationtest.tar.gz,16/Jan/09 14:23;asfernandes;patch.diff;https://issues.apache.org/jira/secure/attachment/12398071/patch.diff,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-01-17 13:35:29.152,,,no_permission,,,,,,,,,,,202941,,,Sat Jan 17 13:35:29 UTC 2009,,,,,,0|i0kekv:,117179,,,,,,,,16/Jan/09 14:23;asfernandes;Quickstart.,16/Jan/09 14:23;asfernandes;Patch.,17/Jan/09 13:35;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,
TextFilteredPropertyColumn needs different generic for FilterModel,WICKET-1997,12411404,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jkriesten,jkriesten,29/Dec/08 12:26,15/Jan/09 17:24,13/Mar/19 23:15,15/Jan/09 17:24,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,Like ChoiceFilteredPropertyColumn: TextFilteredPropertyColumn needs separate generic for the FilterModel ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202913,,,2008-12-29 12:26:36.0,,,,,,0|i0keov:,117197,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validation messages aren't cleared on success.,WICKET-2019,12412283,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lhunath,lhunath,13/Jan/09 10:36,13/Jan/09 21:36,13/Mar/19 23:15,13/Jan/09 20:38,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"When triggering validation messages on a form component, they aren't cleared anymore when afterward we fix our validation problem.

The following code demonstrates this issue by making a form with a single text field that is set as required. First, we submit the form without filling in the field.  We expect that to cause an error.  Which it does.  Then, we set a value in the field, and submit again.  We expect that to pass validation.  It does not, however.

Instead, we get this exception:
junit.framework.AssertionFailedError: expect no error message, but contains
   Field 'field' is required.
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at org.apache.wicket.util.tester.WicketTester.assertNoErrorMessage(WicketTester.java:493)
	at test.spike.net.link.safeonline.TinyTests.wicketTest(TinyTests.java:93)


Code:


package test.spike;

import org.apache.wicket.Page;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.form.Form;
import org.apache.wicket.markup.html.form.TextField;
import org.apache.wicket.protocol.http.WebApplication;
import org.apache.wicket.util.tester.FormTester;
import org.apache.wicket.util.tester.WicketTester;
import org.junit.Test;

public class TinyTests {

    public static class MyApp extends WebApplication {

        @Override
        public Class<? extends Page> getHomePage() {

            return MyPage.class;
        }
    }

    public static class MyPage extends WebPage {

        public MyPage() {

            add(new MyForm(""form""));
        }


        class MyForm extends Form<String> {

            private static final long serialVersionUID = 1L;


            public MyForm(String id) {

                super(id);

                TextField<String> f = new TextField<String>(""field"");
                f.setRequired(true);
                add(f);
            }
        }
    }


    @Test
    public void wicketTest() {

        WicketTester wicket = new WicketTester(new MyApp());
        wicket.processRequestCycle();

        FormTester form = wicket.newFormTester(""form"");
        form.submit();

        wicket.assertErrorMessages(new String[] { ""Field 'field' is required."" });

        form = wicket.newFormTester(""form"");
        form.setValue(""field"", ""foo"");
        form.submit();

        wicket.assertNoErrorMessage();  // <- Exception line.
    }
}


<html>
    <body>
        <form wicket:id=""form"">
            <input wicket:id=""field"" />
            <input type=""submit"" />
        </form>
    </body>
</html>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-13 20:38:33.68,,,no_permission,,,,,,,,,,,202934,,,Tue Jan 13 21:36:32 UTC 2009,,,,,,0|i0kelr:,117183,,,,,,,,"13/Jan/09 20:38;jdonnerstag;WicketTester:

		// Set request cycle so it won't detach automatically and clear messages
		// we want to check
		cycle.setAutomaticallyClearFeedbackMessages(false);

To reset the messages you could use (and that is what had to do in the past)
getWicketSession().clearFeedbackMessages().

In life systems resetting the feedback messages does work. Did you test it? You didn't mention it in your report.

But it can be improved. There is no reason why form.submit() cannot clear the feedback message. Latest by than they should be reset. That is change I did and it should testers life a bit easier.
","13/Jan/09 20:50;lhunath;The reason I made this test case was because it was failing in our live system.

So yes, this issue also occurs in live systems (Wicket + JBoss AS).  Am I supposed to do a Session.get().clearFeedbackMessages() in onBeforeRender?

If so, that can probably be improved; the wicket user shouldn't have to implement this behaviour himself - that's something the Wicket framework should take care of, imho.",13/Jan/09 21:36;jdonnerstag;I used your code for a life system and it works with 1.4 trunk without any problems. The messages are reset. The problem only occured with WicketTester. There should be no need to use clearFeedbackMessages(). ,,,,,,,,,,,,,,,,,,,,,
Session doesn't get invalidated when using RestartResponseException.,WICKET-2013,12412015,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,lhunath,lhunath,09/Jan/09 11:05,11/Jan/09 21:52,13/Mar/19 23:15,11/Jan/09 21:52,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"When invalidating a session using Session.get().invalidateNow(), I normally want to stop processing the current request.  When I do this in a constructor of a page which might be extended by another page, I don't want any other code to get exected.  Not my own, not that of any possible pages extending my page.

To do this, I throw an AbortException or a RestartResponseException.  However, it seems the session isn't actually properly cleaned this way.

The following code demonstrates the problem:

{code:title=TinyTests.java}
package test.spike;

import org.apache.wicket.Page;
import org.apache.wicket.Request;
import org.apache.wicket.Response;
import org.apache.wicket.RestartResponseException;
import org.apache.wicket.Session;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.protocol.http.WebApplication;
import org.apache.wicket.protocol.http.WebSession;
import org.apache.wicket.util.tester.WicketTester;
import org.junit.Test;


public class TinyTests {

    public static class MyApp extends WebApplication {

        /**
         * {@inheritDoc}
         */
        @Override
        public Class<? extends Page> getHomePage() {

            return MyPage.class;
        }

        /**
         * {@inheritDoc}
         */
        @Override
        public Session newSession(Request request, Response response) {

            return new MySession(request);
        }
    }

    public static class MySession extends WebSession {

        public MySession(Request request) {

            super(request);
        }

        public static MySession get() {

            return (MySession) Session.get();
        }


        private static final long serialVersionUID = 1L;
        private String            name;


        public void setName(String name) {

            this.name = name;
        }

        public String getName() {

            return name;
        }
    }

    public static class MyPage extends WebPage {

        public MyPage() {

            if (MySession.get().getName() != null) {
                Session.get().invalidateNow();
                throw new RestartResponseException(getClass());
            }
        }
    }


    @Test
    public void wicketTest() {

        WicketTester wicket = new WicketTester(new MyApp());
        wicket.processRequestCycle();

        MySession.get().setName(""foo"");
        wicket.processRequestCycle();
    }
}
{code}

{code:title=TinyTests$MyPage.html}
<html>
</html>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-11 13:08:26.279,,,no_permission,,,,,,,,,,,202929,,,Sun Jan 11 21:52:30 UTC 2009,,,,,,0|i0kemf:,117186,,,,,,,,"09/Jan/09 11:07;lhunath;Okay, my formatting wasn't applied, that kind of sucked.

In any case; the above code causes the following exception; because the MyPage constructor can't get rid of the active session which has a name set in it:

java.lang.IllegalStateException: Request processing executed 100 steps, which means it is probably in an infinite loop.
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1361)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:498)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:484)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:472)
	at test.spike.net.link.safeonline.TinyTests.wicketTest(TinyTests.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)
	at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)
	at org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

","11/Jan/09 13:08;jdonnerstag;From Session.invalidateNow()
/**
* Invalidates this session immediately. Calling this method will remove all Wicket components
* from this session, which means that you will no longer be able to work with them.
*/

Session.invalidateNow() does not unset the Session. The Session object can still be accessed via Session.get(), but the invalidated flag is set (Session.get().isSessionInvalidated()). If you want to avoid that you can ever access a invalited session you may modify MySession.get() follows

public static MySession get()
{
MySession session = (MySession)Session.get();
if ((session != null) && session.isSessionInvalidated())
{
session = (MySession)Session.findOrCreate();
}
return session;
} ","11/Jan/09 15:54;lhunath;I understand that within the same request you can still access the Session.  Though, I expect that after restarting the request or aborting it; using respectively a RestartResponseException or AbortException, the Session will get cleaned up and the next response will be generated based off a session-less request.

Especially so with the AbortException; which causes the next request to a wicket page to come from a new HTTP request, where the HTTP session cookie should not be present anymore.

Correct me if I'm mistaken.

If this functionality is not currently as is intended, then perhaps we should considder making this the intended behaviour for the reasons explained in the bug description.  Mainly, that when I want to invalidate my session, I want to stop the current request processing (because it relies on an active session, and I clearly have the intent to get rid of it, eg, for the purpose of a logout -- I don't want the user's login details to show on the logout page; or run the risk of somebody else implementing my code getting access to that data after having issued a logout).",11/Jan/09 21:52;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,
"FormTester (BaseWicketTester.executeAjaxEvent[component,event]) submits also buttons that are hidden (isVisible=false) resulting in exception",WICKET-2016,12412122,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mmakundi,mmakundi,10/Jan/09 19:22,11/Jan/09 10:50,13/Mar/19 23:15,11/Jan/09 10:50,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"FormTester (BaseWicketTester.executeAjaxEvent[component,event]) submits also buttons that are hidden (isVisible=false) resulting in exception.

I am trying to ajax-click the visible button, but the formTester arranges even the hidden button to be submitted.. the form processing assumes the hidden button is now the submitting button.. and it is hidden, so an exception is thrown:

org.apache.wicket.WicketRuntimeException: Submit Button hiddenButton (path=form:hiddenButton) is not visible
	at org.apache.wicket.markup.html.form.Form$2.component(Form.java:604)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:859)
	at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:874)
	at org.apache.wicket.markup.html.form.Form.findSubmittingButton(Form.java:588)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:852)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:132)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:166)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:299)
	at org.apache.wicket.util.tester.BaseWicketTester.executeAjaxEvent(BaseWicketTester.java:1170)
	at org.apache.wicket.util.tester.BaseWicketTester.executeAjaxEvent(BaseWicketTester.java:1080)
	at com.mycompany.TestHomePage.testAjaxSubmitWhileAnotherButtonIsNotVisible(TestHomePage.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

I would assume this is an easy fix to the BaseWicketTester.executeAjaxEvent[component,event]) method where it visits the form components...

An invasive workaround: Just set your hidden button temporarily visible (from within your wickettest) while executing the ajax event ;)",,7200,7200,,0%,7200,7200,,,,,,,,,,,,10/Jan/09 19:23;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12397610/Wicket-Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-01-11 10:50:40.63,,,no_permission,,,,,,,,,,,202932,,,Sun Jan 11 10:50:40 UTC 2009,,,,,,0|i0kelz:,117184,,,,,,,,"10/Jan/09 19:23;mmakundi;A wicket quickstart for repeating the bug, test case included.","11/Jan/09 10:50;jdonnerstag;thanks, fixed",,,,,,,,,,,,,,,,,,,,,,
tests failed - last trunk revision - 731610,WICKET-2004,12411696,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,hell,hell,05/Jan/09 16:36,05/Jan/09 19:58,13/Mar/19 23:15,05/Jan/09 19:58,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"-------------------------------------------------------------------------------
Test set: org.apache.wicket.markup.html.form.LocalizedErrorMessageTest
-------------------------------------------------------------------------------
Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.071 sec <<< FAILURE!
testWICKET_1927(org.apache.wicket.markup.html.form.LocalizedErrorMessageTest)  Time elapsed: 0.017 sec  <<< FAILURE!
junit.framework.AssertionFailedError:
expect (1):
   'foo' ist kein g?ltiger Wert f?r 'Integer'.
but was (1):
   'foo' ist kein g?ltiger Wert f?r 'Integer'.
        at junit.framework.Assert.fail(Assert.java:47)
        at org.apache.wicket.util.tester.WicketTesterHelper.failWithVerboseMessage(WicketTesterHelper.java:136)
        at org.apache.wicket.util.tester.WicketTesterHelper.assertEquals(WicketTesterHelper.java:121)
        at org.apache.wicket.util.tester.WicketTester.assertErrorMessages(WicketTester.java:418)
        at org.apache.wicket.markup.html.form.LocalizedErrorMessageTest.testWICKET_1927(LocalizedErrorMessageTest.java:91)","Kubuntu, Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-05 19:50:00.771,,,no_permission,,,,,,,,,,,202920,,,Mon Jan 05 19:58:58 UTC 2009,,,,,,0|i0kenz:,117193,,,,,,,,05/Jan/09 19:50;jdonnerstag;I'm not able to reproduce it. I've tested it on XP; Java 1.6.0_11-b03,05/Jan/09 19:58;jdonnerstag;thanks. Fixed,,,,,,,,,,,,,,,,,,,,,,
"""input"" tag with type=""image"" results in null pointer exception in AutoLinkResolver",WICKET-1513,12393658,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mickeh,mickeh,10/Apr/08 13:46,02/Jan/09 14:08,13/Mar/19 23:15,02/Jan/09 14:08,1.3.2,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,2,,,,,,,,"Something like:
<input type=""image"" value=""Sign up"" src=""images/ok.png"" />
should reproduce the error (this is valid XHTML).

or:
<embed src=""flash.swf"" />

or:
<anything src=""..."" />

java.lang.NullPointerException
     at org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo.<init>(AutoLinkResolver.java:249)
     at org.apache.wicket.markup.resolver.AutoLinkResolver.resolveAutomaticLink(AutoLinkResolver.java:808)
     at org.apache.wicket.markup.resolver.AutoLinkResolver.resolve(AutoLinkResolver.java:742)
     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1324)
     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1427)
     at org.apache.wicket.Page.onRender(Page.java:1460)",,,,,,,,,,,,,,,,,,,01/Dec/08 05:35;jthomerson;1513.patch;https://issues.apache.org/jira/secure/attachment/12394986/1513.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-12-01 05:31:12.509,,,no_permission,,,,,,,,,,,202476,,,Fri Jan 02 14:08:07 UTC 2009,,,,,,0|i0kfx3:,117396,,,,,,,,01/Dec/08 05:31;jthomerson;Here's a patch that fixes it by adding the appropriate resolvers to AutoLinkResolver.,"01/Dec/08 05:32;jthomerson;Note that this bug is still in 1.4 (trunk), and this patch is against trunk.","01/Dec/08 05:35;jthomerson;This patch is updated to also handle the embed tag - missed that in my haste to upload the first one.  It now handles input and embed tags.  Note that it does not handle the ""anything"" tag :)","29/Dec/08 15:09;jdonnerstag;patch applied to 1.4 trunk.
Thanks","02/Jan/09 14:08;ivaynberg;patch applied, marking resolved...",,,,,,,,,,,,,,,,,,,
The method name 'renderOnEventJavacript' of IHeaderResponse is misspelling of 'renderOnEventJavascript',WICKET-1989,12411119,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,t_yano,t_yano,21/Dec/08 17:50,30/Dec/08 13:22,13/Mar/19 23:15,30/Dec/08 13:22,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"The method name 'renderOnEventJavacript' of IHeaderResponse should be 'renderOnEventJavascript'. It is a misspelling.
",every platform,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-30 13:22:31.273,,,no_permission,,,,,,,,,,,202907,,,Tue Dec 30 13:22:31 UTC 2008,,,,,,0|i0kepz:,117202,,,,,,,,30/Dec/08 13:22;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
"String.replaceAll(regex, replacement). The dot in "".html"" I guess is meant to be literal",WICKET-1994,12411293,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jdonnerstag,jdonnerstag,24/Dec/08 09:20,30/Dec/08 13:20,13/Mar/19 23:15,30/Dec/08 13:20,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"In PackageResourceGuard

	protected boolean acceptAbsolutePath(String path)
	{
...		
		if (""html"".equals(ext) &&
			getClass().getClassLoader().getResource(path.replaceAll("".html"", "".class"")) != null)
		{
			return false;
		}
		return acceptExtension(ext);
	}

String.replaceAll(regex, replacement). I guess it must be replaceAll(""\\.html"", "".class"") instead.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202911,,,Tue Dec 30 13:20:14 UTC 2008,,,,,,0|i0kepb:,117199,,,,,,,,30/Dec/08 13:20;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
setResponsePage(Application#getHomePage()) mounted as / (default) vs. ajax requests,WICKET-1916,12407935,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,hell,hell,06/Nov/08 12:01,29/Dec/08 15:15,13/Mar/19 23:15,29/Dec/08 15:15,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Hi,

I'm using a week old version of wicket 1.4-SNAPSHOT and there is one ugly bug ... in ajax request cannot be send redirect to homepage ... setResponsePage(Application#getHomePage()) because there is return onlu one byte as the response a in Ajax Debug Console I see this: 

---
INFO: Using XMLHttpRequest transport
INFO: 
INFO: Initiating Ajax POST request on ?wicket:interface=:3:loginSwitchPanel:loginPanel:form:submit::IActivePageBehaviorListener:0:&wicket:ignoreIfNotActive=true&random=0.03614674718119204
INFO: Invoking pre-call handler(s)...
INFO: Received ajax response (1 characters)
INFO: 
 
ERROR: Error while parsing response: Could not find root <ajax-response> element
INFO: Invoking post-call handler(s)...
INFO: Invoking failure handler(s)...
---

If I mount the homepage to for example /home then is all ok.

I can try to compile last trunk version of wicket 1.4-SNAPSHOT but there is 7 failed tests:

Failed tests:
  testAjaxHeaderContribution(org.apache.wicket.ajax.AjaxHeaderContributionTest)
  testDoubleAjaxHeaderContribution(org.apache.wicket.ajax.AjaxHeaderContributionTest)
  testBufferedExceptionErrorPage(org.apache.wicket.protocol.http.WebResponseExceptionsTest)
  testExceptionErrorPage(org.apache.wicket.protocol.http.WebResponseExceptionsTest)
  testExpirePage(org.apache.wicket.protocol.http.WebResponseExceptionsTest)
  testInternalErrorPage(org.apache.wicket.protocol.http.WebResponseExceptionsTest)
  testDomReadyOrder(org.apache.wicket.ajax.DomReadyOrderTest)

Tests run: 722, Failures: 7, Errors: 0, Skipped: 0
---

Thx for help!
H.
",,,,,,,,,,,,,,,,,,,24/Dec/08 03:04;jthomerson;1916.patch;https://issues.apache.org/jira/secure/attachment/12396708/1916.patch,16/Dec/08 14:51;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12396192/Wicket-Quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-11-06 19:26:42.715,,,no_permission,,,,,,,,,,,202841,,,Mon Dec 29 15:15:37 UTC 2008,,,,,,0|i0kewv:,117233,,,,,,,,06/Nov/08 19:26;ivaynberg;try compiling it now or provide a quickstart,"07/Nov/08 07:15;ivaynberg;Martijn, this has to do with changes you made for WICKET-847",07/Nov/08 10:19;hell;The compilation works fine now:-) But the AJAX bug is still there:-(,"18/Nov/08 10:02;hell;Hi, is there any estimate of date when this bug will be fixed? Thx.","10/Dec/08 19:52;hell;Hi, is there some advance in fixing this bug? Thx.","16/Dec/08 14:51;mmakundi;Wicket quickstart for replicating this bug has been attached.

Click the button saying ""Click this button and observe Wicket Ajax Debug"" and observe wicket ajax debug output, you will see:

ERROR: Error while parsing response: Could not find root <ajax-response> element
","24/Dec/08 03:04;jthomerson;Here is a patch that fixes it.  It seems to only be a problem when you are redirecting to the homepage because the URL is ""./"" and BookmarkablePageRequestTarget strips this from the redirect URL, leading to a blank redirect URL.

A core dev may see a better way of fixing this, but this patch works.",29/Dec/08 15:15;jdonnerstag;thanks,,,,,,,,,,,,,,,,
DateTimeField does not correct the timezone properly,WICKET-1314,12387508,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,rgravener,rgravener,30/Jan/08 23:05,23/Dec/08 21:01,13/Mar/19 23:15,23/Dec/08 21:01,1.3.4,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-datetime,,,,0,,,,,,,,"The DateTimeField has a DateTextField which uses a styledateconverter with timezone correction set to true which is not needed since the DateTimeField accounts for the TimeZone correction.  Another problem is that the DateTimeField only sets the timezone of the date (from local->client), causing the date to be corrected to the local time.  This should instead cause the local time to reflect that of the clients time.   
",,,,,,,,,,,,,,,,,,,15/Oct/08 21:15;rgravener;DATETIMEFIELD.TXT;https://issues.apache.org/jira/secure/attachment/12392203/DATETIMEFIELD.TXT,30/Jan/08 23:08;rgravener;dtf.patch;https://issues.apache.org/jira/secure/attachment/12374421/dtf.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-10-15 22:10:02.983,,,no_permission,,,,,,,,,,,202295,,,Tue Dec 23 21:01:28 UTC 2008,,,,,,0|i0kggf:,117483,,,,,,,,30/Jan/08 23:08;rgravener;Enclosed is a patch.,15/Oct/08 21:14;rgravener;Need to correct the time in the onBeforeRender as well.,15/Oct/08 21:15;rgravener;updated patch.,15/Oct/08 22:10;dashorst;can't fix an already released release.,"03/Dec/08 00:38;thrantal;Ryan (or others), could you maybe explain in an easy way what impact does this have? I looked at the current code and the patch, but don't understand what effect does changing the timezone of the date being edited have (I'm just getting the same date value displayed before and after the patch).","03/Dec/08 04:07;rgravener;If your server is EST and the client is PST, it will convert server time-> local time when data is displayed to the user and local time-> server time when the user posts data.  In order to test this, you need two operating systems running.  Change the timezone on each and run the server on one, and use your browser on the other.  Also make sure you gather extended browser information http://people.apache.org/~tobrien/wicket/apidocs/org/apache/wicket/settings/IRequestCycleSettings.html",23/Dec/08 21:01;jdonnerstag;thanks,,,,,,,,,,,,,,,,,
Wrong path separator in reloading classloader patterns,WICKET-1360,12389079,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,memeplex,memeplex,20/Feb/08 04:20,23/Dec/08 20:47,13/Mar/19 23:15,23/Dec/08 20:47,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"public class WildcardMatcherHelper
{
        [....]
	/** Default path separator: ""/"" */
	public static final char PATHSEP = '/';    <---- should be '.'



",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-23 20:47:55.186,,,no_permission,,,,,,,,,,,202338,,,Tue Dec 23 20:47:55 UTC 2008,,,,,,0|i0kgdb:,117469,,,,,,,,23/Dec/08 20:47;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
SqlTimestampConverter drops the date portion of a Timestamp,WICKET-1647,12396468,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,flavius17,flavius17,21/May/08 03:01,23/Dec/08 19:15,13/Mar/19 23:15,23/Dec/08 19:15,1.3.1,1.3.2,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"
When SqlTimestampConverter#convertToString is called, it formats the Timestamp with DateFormat.SHORT,
which returns only the time portion of the Timestamp.  Since a Timestamp represents an instant in history,
information is being lost.

The Date and Time should be be returned.",Any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-11-01 07:51:16.032,,,no_permission,,,,,,,,,,,202599,,,Tue Dec 23 19:15:33 UTC 2008,,,,,,0|i0kflr:,117345,,,,,,,,"21/May/08 03:02;flavius17;There is a small thread on this at nabble here:

http://www.nabble.com/Why-does-SqlTimestampConverter-only-use-the-time-portion-of-the-timestamp--to16034937.html#a16034937
","01/Nov/08 07:51;a_wronski@gazeta.pl;When fixing it maybe we can add a date pattern in constructor like in the org.apache.wicket.datetime.PatternDateConverter
It would be very useful.",23/Dec/08 19:15;jdonnerstag;added a constructor which allows to provide the DateFormat.<type>,,,,,,,,,,,,,,,,,,,,,
Inconsisting Handling of id mismatch on wicket:container,WICKET-1750,12400353,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,16/Jul/08 07:45,21/Dec/08 10:06,13/Mar/19 23:15,21/Dec/08 10:06,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"  Given this simple case:


public class Home extends WebPage {

    public Home() {
        add(new EmptyPanel(""test""));
    }
}


and the following HTML page:

<span wicket:id='test2'/>

Please notice that the ids do not match.

Executing this app will give the following Exception:


WicketMessage: Unable to find component with id 'test2' in [Page class =
com.myapp.wicket.Home, id = 0, version = 0]. This means that you declared
wicket:id=test2 in your markup, but that you either did not add the
component to your page at all, or that the hierarchy does not match.


Whereas when using a wicket:container instead of a HTML tag, like this:


<wicket:container wicket:id='test2'/>


And when the ids doesn't match, Wicket throws the following exception:


WicketMessage: Failed to handle: <wicket:container wicket:id='test2'/>


Which is quite cryptic at the first glance.


Original: http://mail-archives.apache.org/mod_mbox/wicket-dev/200803.mbox/%3c15908468.post@talk.nabble.com%3e

We ran across same problem too.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-21 10:06:10.197,,,no_permission,,,,,,,,,,,202689,,,Sun Dec 21 10:06:10 UTC 2008,,,,,,0|i0kfbr:,117300,,,,,,,,21/Dec/08 10:06;jdonnerstag;error message improved. Thanks,,,,,,,,,,,,,,,,,,,,,,,
Default lookup keys don't work when UseDefaultOnMissingResource is false,WICKET-1851,12405206,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,tapter,tapter,26/Sep/08 07:38,20/Dec/08 22:05,13/Mar/19 23:15,20/Dec/08 22:05,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"When in Application the following is set:
getResourceSettings().setThrowExceptionOnMissingResource(false);
getResourceSettings().setUseDefaultOnMissingResource(false);
then a noisy but very visible message is displayed for every missing resource. Unfortunately, calls to  getLocalizer().getString() then return this warning message instead of the often used default """" for which it is being checked afterwards. This leads to the effect that this warning message is considered a valid value.
Example:
org.apache.wicket.markup.html.form.AbstractSingleSelectChoice -> getDefaultChoice(final Object selected)
There's this code:

String option = getLocalizer().getString(getId() + "".null"", this, """");
if (Strings.isEmpty(option)) {
	option = getLocalizer().getString(""null"", this, CHOOSE_ONE);
}

With the above settings, the 'null' property is NEVER found, as the first call already returns the message ""[Warning: String resource for 'form.field.null' not found]"", which is not empty.
The expected behaviour though would be to also try to lookup the 'null' value.
This seems to apply to other classes as well as I for example never got the global  Required  property to work as each  form.field.Required  property returns the error message....",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-20 22:05:19.928,,,no_permission,,,,,,,,,,,202779,,,Sat Dec 20 22:05:19 UTC 2008,,,,,,0|i0kf2v:,117260,,,,,,,,"26/Sep/08 07:41;tapter;The same but even more disturbing applies, if the
ThrowExceptionOnMissingResource setting is true
Then the exception from the first statement is propagated, leading to a 'Unexpected RuntimeException' instead of that the second getString() is tried first.

There should probably be a further getString() method which doesn't adhere to the global settings to allow the second statement to execute at all.",20/Dec/08 22:05;jdonnerstag;extracted method getStringIgnoreSettings() to allow for such scenarios,,,,,,,,,,,,,,,,,,,,,,
DateTimeField: small bugs,WICKET-1863,12405990,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,marie,marie,08/Oct/08 08:07,20/Dec/08 21:00,13/Mar/19 23:15,20/Dec/08 21:00,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-datetime,,,,0,,,,,,,,"Hello, 

I found 2 different bugs that makes my applications react in the wrong way :

- onBeforeRender:378
When the modelobject-date is null, the hours and minutes are not set to null to. Now only date is set to null. 
I use this object with ajax, and when the DateTimeField loads with a new modelobject, the hours- and minutesfield holds the old value.  If not clear, I can make a quickstart.

- setDate:231
This function adjusts the modelobject with the filled in date. But the hours and minutes aren't add.
I have overridden the function so it would work correctly. My code:
public void setDate(Date date)
	{
            super.setDate(date);
            System.out.println(""setDate ["" + date + ""]"");
            MutableDateTime modelDate = new MutableDateTime(date);
            Integer hours = getHours();
            Integer minutes = getMinutes();
            boolean use12HourFormat = use12HourFormat();
            if (hours != null) {
                modelDate.set(DateTimeFieldType.hourOfDay(), hours.intValue() % (use12HourFormat ? 12 : 24));
                modelDate.setMinuteOfHour((minutes != null) ? minutes.intValue() : 0);
            }
            setDefaultModelObject(modelDate.toDate());
	}

Thanks a lot ! Marieke.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-20 21:00:00.53,,,no_permission,,,,,,,,,,,202790,,,Sat Dec 20 21:00:00 UTC 2008,,,,,,0|i0kf1z:,117256,,,,,,,,20/Dec/08 21:00;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
ResourceNameIterator problem with files with undescore in name,WICKET-1908,12407589,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,artaban,artaban,31/Oct/08 12:31,20/Dec/08 19:37,13/Mar/19 23:15,20/Dec/08 19:37,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"when the page HTML file is located on the path, that contains _to_ in name (and to is not ment as a locale), (ResourceNameIterator:103) matches this position, (ResourceNameIterator:115) founds it, the path is shortened (ResourceNameIterator:153) and the whole process results in the HTML resource not being found.","JDK 1.6.0_10, Windows",,,,,,,,,,,,,,,,,,31/Oct/08 12:32;artaban;WICKET-1908-test.zip;https://issues.apache.org/jira/secure/attachment/12393148/WICKET-1908-test.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-10-31 18:18:52.238,,,no_permission,,,,,,,,,,,202834,,,Sat Dec 20 19:37:48 UTC 2008,,,,,,0|i0kexz:,117238,,,,,,,,31/Oct/08 12:32;artaban;example of application that doesn't work because of the issue,"31/Oct/08 18:18;ivaynberg;_ is really the only separator we can safely use on any filesystem for separators, and because it is not supposed to be used in classnames i dont think there is anything wrong with that. may i ask why you are using it in your class names?","03/Nov/08 06:07;artaban;I don't have problem with _ being separator. I guess that as _ is allowed in classname, there shouldn't be any 'is not supposed to' thing. My problem is that when there is _to_ somewhere in classname or path, the 'no modified' path and classname is not checked.. eg. the _to_ is treated as locale without any doubts..
btw. I found out, that it has worked in wicket 1.3.4","03/Nov/08 06:31;ivaynberg;well, im going to bet it is was broken by WICKET-1868. if you have any ideas on how to fix it while still supporting WICKET-1868 im all ears.","20/Dec/08 19:37;jdonnerstag;made identification of language, country and variation more strict but still compliant  (see http://java.sun.com/j2se/1.4.2/docs/api/java/util/Locale.html for more details)",,,,,,,,,,,,,,,,,,,
UrlValidator doesn't working when using a hostname in the url,WICKET-1926,12408240,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,yossis,yossis,11/Nov/08 13:29,20/Dec/08 08:24,13/Mar/19 23:15,20/Dec/08 08:24,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Tried a variety of urls (http://localhost, http://localhost:8080, etc.) and they all fail.
And it worked in version 1.3.4",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-20 08:24:33.474,,,no_permission,,,,,,,,,,,89255,,,Sat Dec 20 08:24:33 UTC 2008,,,,,,0|i0kevr:,117228,,,,,,,,20/Dec/08 08:24;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Generics: IOptionRenderer vs IChioceRenderer,WICKET-1977,12410604,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,stefan lindner,stefan lindner,12/Dec/08 19:21,17/Dec/08 17:20,13/Mar/19 23:15,17/Dec/08 17:20,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"The definition of IOptionRenderer is

	Interface IOptionRenderer<T>
		java.lang.String getDisplayValue(java.lang.Object object)  

the definition of IChoiceRenderer is

	Interface IChoiceRenderer<T>
		java.lang.Object getDisplayValue(T object)  

Why is the parameter getDisplayValue method of IOptionRenderer an Object and not of Type T? The method should be

	Interface IOptionRenderer<T>
		java.lang.String getDisplayValue(T object) 

and the method getModel should be

	public IModel<ComServerBean> getModel(Tvalue) {...
","Wicket 1.4 Trunk (Dec. 12, 2008)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202896,,,2008-12-12 19:21:25.0,,,,,,0|i0keqv:,117206,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Outdated JavaDoc content in MarkupContainer class,WICKET-1963,12409460,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,valentine2008,valentine2008,28/Nov/08 21:50,07/Dec/08 11:14,13/Mar/19 23:15,07/Dec/08 11:14,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"In the JavaDoc of MarkupContainer, the following is not correct:

--------------------------
...Children can be added by calling the add() method, and they can be looked up using a dotted path. For example, if a container called ""a"" held a nested container ""b"" which held a nested component ""c"", then a.get(""b.c"") would return the Component with id ""c"". ...
------------------

In the code of MarkupContainer, we use Component.PATH_SEPARATOR, which is "":"". The example in JavaDoc should be updated to 
use a.get(""b:c"")  rather than a.get(""b.c"").
-------------------------------------------------------------
	/**
	 * Get a child component by looking it up with the given path.
	 * 
	 * @param path
	 *            Path to component
	 * @return The component at the path
	 */
	public final Component get(final String path)
	{
		// Reference to this container
		if (path == null || path.trim().equals(""""))
		{
			return this;
		}

		// Get child's id, if any
		final String id = Strings.firstPathComponent(path, Component.PATH_SEPARATOR);

		// Get child by id
		Component child = children_get(id);

		// If the container is transparent, than ask its parent.
		// ParentResolver does something quite similar, but because of <head>,
		// <body>, <wicket:panel> etc. it is quite common to have transparent
		// components. Hence, this is little short cut for a tiny performance
		// optimization.
		if ((child == null) && isTransparentResolver() && (getParent() != null))
		{
			child = getParent().get(path);
		}

		// Found child?
		if (child != null)
		{
			final String path2 = Strings.afterFirstPathComponent(path, Component.PATH_SEPARATOR);
			// Recurse on latter part of path
			return child.get(path2);
		}

		return child;
	}
--------------------------------------------------------------",Windows Environment,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-07 11:14:07.553,,,no_permission,,,,,,,,,,,202884,,,Sun Dec 07 11:14:07 UTC 2008,,,,,,0|i0kerj:,117209,,,,,,,,07/Dec/08 11:14;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
ParentResourceEscapePathTest fails on OS X using cmd line maven,WICKET-1781,12401896,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,dashorst,dashorst,07/Aug/08 13:45,03/Dec/08 01:37,13/Mar/19 23:15,03/Dec/08 01:37,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,,,,,0,,,,,,,,"using commandline java 1.4 and maven (2.0.9) I get the attached failure.

",,,,,,,,,,,,,,,,,,,17/Sep/08 16:43;joern.zaefferer;ParentResourceEscapePathTest-patch.diff;https://issues.apache.org/jira/secure/attachment/12390289/ParentResourceEscapePathTest-patch.diff,07/Aug/08 13:48;dashorst;org.apache.wicket.ParentResourceEscapePathTest.txt;https://issues.apache.org/jira/secure/attachment/12387733/org.apache.wicket.ParentResourceEscapePathTest.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-09-17 16:41:55.838,,,no_permission,,,,,,,,,,,202717,,,Wed Dec 03 01:37:54 UTC 2008,,,,,,0|i0kf9b:,117289,,,,,,,,"17/Sep/08 16:41;joern.zaefferer;The test, which works fine eg. on my Windows system, specifies are reversed order for the type and src attributes, when comparing to the html template.

A wild guess would be that attributes for the read html template are put into a HashMap, and the order differs between platforms due to different HashMap implementations. Not very convincing...

Anyway, I'm attaching a patch that ""fixes"" the test, making it correctly fail.","03/Dec/08 01:37;thrantal;Martijn (or others), do you have the possibility to try this out now on a Mac?",,,,,,,,,,,,,,,,,,,,,,
FormTester doesn't correctly submit a form when a FileUploadField was not set (which is not required),WICKET-1931,12408326,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,a_wronski@gazeta.pl,a_wronski@gazeta.pl,12/Nov/08 10:54,26/Nov/08 18:51,13/Mar/19 23:15,26/Nov/08 18:51,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,2,,,,,,,,"FormTester doesn't correctly submit a form when  a FileUploadField was not set.
This file is not required.

So it is impossible to create a real test because I am forced to always set a File to check to whole form.

There was discussion about this problem here: http://www.nabble.com/FormTester-and-FileUploadField-td18566869.html


I will be very grateful if you can fix it :)
Artur","Windows XP PL SP 2, Java 1.6.0_10",,,,,,,,,,,,,,,,,,26/Nov/08 10:12;mrico;wicket-1931.patch;https://issues.apache.org/jira/secure/attachment/12394726/wicket-1931.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-26 10:12:33.331,,,no_permission,,,,,,,,,,,202854,,,Wed Nov 26 10:12:33 UTC 2008,,,,,,0|i0kev3:,117225,,,,,,,,"26/Nov/08 10:12;mrico;I had the same problem and noticed that the class MockHttpServletRequest doesn't handle multipart form requests correct  if no files are available (uploadedFiles == null || uploadedFiles.size() == 0). 
I created a patch which adds a new test case in FormTesterTest and a possible bugfix in 
MockHttpServletRequest.",,,,,,,,,,,,,,,,,,,,,,,
rc1 generics - RatingPanel,WICKET-1948,12408978,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aditsu,aditsu,21/Nov/08 05:36,26/Nov/08 18:26,13/Mar/19 23:15,26/Nov/08 18:26,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"RatingPanel now requires an IModel<Integer> for the rating, but I was using IModel<Double>. How can I show ""rated 3.6 from 7 votes"" now? Can it use IModel<? extends Number> instead?",,,,,,,,,,,,,,,WICKET-1949,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202870,,,2008-11-21 05:36:29.0,,,,,,0|i0ketj:,117218,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component.isVisibilityAllowed() not consulted before calling onBeforeRender(),WICKET-1954,12409094,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dukehoops,dukehoops,23/Nov/08 22:29,26/Nov/08 18:07,13/Mar/19 23:15,26/Nov/08 18:07,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"I have a component whose parent does this:

class Parent extends Panel

private Component child;

onBeforeRender()
{
child.setVisibilityAllowed(false);
super.onBeforeRender();
}

I would expect child's onBeforeRender() to not be executed but it is, because Component.internalBeforeRender calls isVisible() rather than determineVisibility().

Shouldn't the following line in Component.internalBeforeRender():

                if ((isVisible() || callOnBeforeRenderIfNotVisible()) && !getFlag(FLAG_RENDERING) &&
                        !getFlag(FLAG_PREPARED_FOR_RENDER))

be this:

                if ((determineVisibility() || callOnBeforeRenderIfNotVisible()) && !getFlag(FLAG_RENDERING) &&
                        !getFlag(FLAG_PREPARED_FOR_RENDER))
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202875,,,2008-11-23 22:29:19.0,,,,,,0|i0kesv:,117215,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
isEnabled called even if component is not Visible,WICKET-1953,12409065,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jimlars,jimlars,23/Nov/08 16:24,23/Nov/08 17:14,13/Mar/19 23:15,23/Nov/08 17:14,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"in the Form class i came across this code (not by accident thow :-))

if (component.isEnabled() && component.isEnableAllowed() &&
    component.isVisibleInHierarchy())
{
        ((IFormModelUpdateListener)component).updateModel();
}

The result of this is that isEnabled is called on components that is not even visible
I would like this changed to:

if (component.isVisibleInHierarchy() &&
    component.isEnabled() && component.isEnableAllowed())
{
        ((IFormModelUpdateListener)component).updateModel();
}




",,,,,,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202874,,,2008-11-23 16:24:29.0,,,,,,0|i0ket3:,117216,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileUpload.writeToTempFile uses field Id as filename - Windows doesn't support some characters,WICKET-1930,12408278,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,miojo,miojo,11/Nov/08 19:02,12/Nov/08 15:01,13/Mar/19 23:15,12/Nov/08 00:27,1.3.5,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,1,,,,,,,,"The component FileUpload tries to create a temporary file using the multipart fieldname's id.

That id has invalid characters - not supported on Windows environments, for example.",Windows,,,,,,,,,,,,,,,,,,12/Nov/08 11:10;steve.swinsburg;patch-FileUpload-formatted.diff;https://issues.apache.org/jira/secure/attachment/12393784/patch-FileUpload-formatted.diff,11/Nov/08 19:02;miojo;patch-FileUpload.diff;https://issues.apache.org/jira/secure/attachment/12393722/patch-FileUpload.diff,12/Nov/08 11:10;steve.swinsburg;patch-Files-formatted.diff;https://issues.apache.org/jira/secure/attachment/12393783/patch-Files-formatted.diff,11/Nov/08 19:02;miojo;patch-Files.diff;https://issues.apache.org/jira/secure/attachment/12393721/patch-Files.diff,,,,,4.0,,,,,,,,,,,,,,,,,,,2008-11-12 11:10:26.909,,,no_permission,,,,,,,,,,,202853,,,Wed Nov 12 15:01:47 UTC 2008,,,,,,0|i0kevb:,117226,,,,,,,,12/Nov/08 11:10;steve.swinsburg;Attached properly formatted versions of the original patches (line endings were not set correctly),"12/Nov/08 15:01;ivaynberg;steve, you fixed the patches after the issue has already been resolved...",,,,,,,,,,,,,,,,,,,,,,
WicketTester.clickLink and IndexedParamUrlCodingStrategy don't work together,WICKET-1794,12402738,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,striderapache,striderapache,20/Aug/08 20:30,11/Nov/08 18:20,13/Mar/19 23:15,11/Nov/08 18:20,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,,,,,0,,,,,,,,"IndexedParamUrlCodingStrategy.appendParameters expects String->String map:
....
		while (parameters.containsKey(String.valueOf(i)))
		{
			String value = (String)parameters.get(String.valueOf(i));
...
but BaseWicketTester.clickLink converts page params to String->String[] map:
....
					PageParameters parameters = (PageParameters)getParametersMethod.invoke(
						bookmarkablePageLink, (Object[])null);
					setParametersForNextRequest(parameters.toRequestParameters());
...
And as result we have type cast exception.",,,,,,,,,,,,,,,,,,,11/Nov/08 04:55;miojo;patch-WICKET-1794.diff;https://issues.apache.org/jira/secure/attachment/12393680/patch-WICKET-1794.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-11 04:55:53.877,,,no_permission,,,,,,,,,,,202728,,,Tue Nov 11 04:55:53 UTC 2008,,,,,,0|i0kf87:,117284,,,,,,,,"11/Nov/08 04:55;miojo;Patch attached.

The fix is to check for a String array inside appendParameters as wouldn't be a good idea  to change WicketTester.

Bruno",,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.util.string.Strings#stripJSessionId StringIndexOutOfBoundsException,WICKET-1871,12406355,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ywtsang,ywtsang,14/Oct/08 02:45,06/Nov/08 08:18,13/Mar/19 23:15,06/Nov/08 08:18,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"input:
http://abc.com/xx/yy.html?code=a%E2%8C%A9=en&amp;section=DDD&amp;d=173amp;

passing the about input to method

org.apache.wicket.util.string.Strings#stripJSessionId

will introduce StringIndexOutOfBoundsException

because ""?"" appears before "";""


","windows XP, jetty",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202798,,,2008-10-14 02:45:13.0,,,,,,0|i0kf0v:,117251,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WebRequestCycleProcessor.resolveHomePageTarget for empty path with enforceMounts=true provokes 403 - ""Direct access not allowed for mounted targets""",WICKET-1898,12407271,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,olivermatz,olivermatz,27/Oct/08 12:03,06/Nov/08 08:07,13/Mar/19 23:15,06/Nov/08 08:07,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Scenario: WebApplication.getHomePage() returns a page that is also mounted to a non-empty path by WebApplication.mountBookmarkablePage(). Besides, we have getSecuritySettings().setEnforceMounts(true).  Upon a request for the servlet's root URL (i.e., with requestParameters.getPath()==""""), the method
WebRequestCycleProcessor.resolve will throw a AbortWithWebErrorCodeException(403) with error message ""Direct access not allowed for mounted targets"".

This is because WebRequestCycleProcessor.resolveHomePageTarget correctly returns a non-null target, so that the else-branch starting in line 190 of file WebRequestCycleProcessor.java is reached.  

The comment says ""a target was found, but not by looking up a mount"", which is misleading, because the szenario should desirably work even though property enforceMounts has been set to true.

The only (terrible) workaound I have found is to override WebRequestCycleProcessor.resolveHomePageTarget() to return null and establish a home-page-like thing by overriding WebRequestCodingStrategy.urlCodingStrategyForPath() for the empty path.",Wicket 1.4-m3,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-11-06 08:07:55.235,,,no_permission,,,,,,,,,,,202824,,,Thu Nov 06 08:07:55 UTC 2008,,,,,,0|i0kezb:,117244,,,,,,,,06/Nov/08 08:07;ivaynberg;i added a check that excludes a bookmarkablepagerequesttarget if it points to the same page class as the homepage.,,,,,,,,,,,,,,,,,,,,,,,
Form.appendDefaultButtonField produces invalid JavaScript if Ajax is disabled,WICKET-1914,12407847,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tapter,tapter,05/Nov/08 11:56,05/Nov/08 16:53,13/Mar/19 23:15,05/Nov/08 16:53,1.3.4,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"Form.appendDefaultButtonField produces a line like this:
<input type=""submit"" name=""buttons:next"" onclick="" var b=Wicket.$('next2'); if (typeof(b.onclick) != 'undefined') {  var r = b.onclick.bind(b)(); if (r != false) b.click(); } else { b.click(); };  return false;""  />

If Ajax is disabled,  var b=Wicket.$('next2')  is invalid, as Wicket  is not defined. I'm not familiar with what the bind() method does or whether it is needed or not, but the error is ugly and appears whenever a user tries to submit a Form by pressing Enter instead of clicking on the submit button.
My proposed fix uses getElementById to get a reference to the submit component. Which requires that the markup ID is present.
This can either be done on the fly inside  appendDefaultButtonField()  or maybe better in  setDefaultButton().

Here's the fix that works for me on non-ajax pages:

      protected void appendDefaultButtonField (MarkupStream markupStream, ComponentTag openTag) {
				
				AppendingStringBuffer buffer = new AppendingStringBuffer();

				// div that is not visible (but not display:none either)
				buffer.append(""<div style=\""width:0px;height:0px;position:absolute;left:-100px;top:-100px;overflow:hidden\"">"");

				// add an empty textfield (otherwise IE doesn't work)
				buffer.append(""<input type=\""text\"" autocomplete=\""false\""/>"");

				// add the submitting component
				final Component submittingComponent = (Component) getDefaultButton();
				submittingComponent.setOutputMarkupId(true);
				
				buffer.append(""<input type=\""submit\"" name=\"""");
				buffer.append(getDefaultButton().getInputName());
				buffer.append(""\"" onclick=\"" var b=document.getElementById('"");
				buffer.append(submittingComponent.getMarkupId());
				buffer.append(""'); if (b) { if (typeof(b.onclick) != 'undefined') { var r = b.onclick.bind(b)(); if (r != false) b.click(); } else { b.click(); }  return false;}\"""");
				buffer.append("" />"");
				
				// close div
				buffer.append(""</div>"");

				getResponse().write(buffer);
			}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202839,,,2008-11-05 11:56:16.0,,,,,,0|i0kexb:,117235,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use WebRequestEncoder everywhere a query string is constructed,WICKET-550,12368960,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,jbq,jbq,09/May/07 21:31,30/Oct/08 23:53,13/Mar/19 23:15,30/Oct/08 23:53,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 22:49:21.828,,,no_permission,,,,,,,,,,,201598,,,Thu Oct 30 23:53:30 UTC 2008,,,,,,0|i0kikn:,117826,,,,,,,,10/Jun/07 22:49;almaw;I think this will have to wait for 1.4.x,"12/Jun/08 22:44;thrantal;So the idea is that WebRequestEncoder should always create a properly encoded query string with ?:s and &:s in their place?

Does WebRequestEncoder need some changes to be usable everywhere? I tried using it in MockHttpServletRequest.getQueryString(), and a couple of tests started failing right away, something to do with null values. 

I got it working in RequestCycle.urlFor() though, and committed that. But I couldn't easily find other relevant placed where WebRequestEncoder could be used right away; for example in RequestCycle.urlFor() you need a non-encoding version of essentially the same stuff in some other situation...

It seems that to get this cleaned up properly, we need a WicketUrl or some such class that can encapsulate the different URL mungling.",06/Jul/08 13:05;dashorst;Moved to next milestone release.,"06/Jul/08 19:25;thrantal;I wouldn't do more of this in 1.4, but would create WicketUrl or something like that in 1.5.",30/Oct/08 23:53;ivaynberg;i think we do this by now,,,,,,,,,,,,,,,,,,,
Component.visitParents visits the calling component as well,WICKET-1220,12384463,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,b.molenkamp,b.molenkamp,12/Dec/07 07:13,30/Oct/08 15:00,13/Mar/19 23:15,30/Oct/08 06:10,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"I see that Component.visitParents() also visits the component on which the call is made. Is this behavior correct?

If so, I think that the method name is a little bit confusing. The method MarkupContainer.visitChildren() doesn't visit the calling component, but only it's children (as the method name suggests).
","Windows XP, JDK 1.5.0_10",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-12 18:54:44.663,,,no_permission,,,,,,,,,,,202211,,,Thu Oct 30 15:00:05 UTC 2008,,,,,,0|i0kgpr:,117525,,,,,,,,12/Dec/07 18:54;ivaynberg;too late to do this for 1.3,06/Jul/08 13:05;dashorst;Moved to next milestone release.,"30/Oct/08 10:56;jcompagner;i dont know if i like this change
i like the behavior (we in servoy have the exact same things and we also start that the component you ask it for)

this could break a lot of code that depended on that the everything is checked
for example i do this in a behavior or something like that:

component.findParent(Form.class)

if you do that on a form class itself somehow then i expect to find it., after this change i have to manually check the component itself first.

I guess renaming would be better then: visitHierachy() or something like that


Also we do that now already for years (i think from the beginning) as far as i can see so this is quite a big behavior change. I dont like the behavior change and i like the previous implementation better anyway. (just update docs i would say)","30/Oct/08 15:00;ivaynberg;i dont care which way we go but this issue has been open for a long time. you want roll it back and rename the method.

as far as i can see findparent() doesnt check the current class, but properly starts with the parent.

i think its really stupid that visitparents visits the current component, so -1 on just updating the javadocs. either leave it or rename the method.",,,,,,,,,,,,,,,,,,,,
CheckBox incorrectly converts its model value when a custom Boolean converter is installed - again,WICKET-1904,12407436,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,hell,hell,29/Oct/08 17:27,29/Oct/08 20:07,13/Mar/19 23:15,29/Oct/08 18:27,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC1,,wicket,,,,0,,,,,,,,"Hi,

I tried the last version of wicket (built from trunk svn) and there is one old bug again:

see https://issues.apache.org/jira/browse/WICKET-330

There was removed the default Boolean converter ... and the bug is again active.

Thx for fixing,
H.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-29 18:27:24.913,,,no_permission,,,,,,,,,,,202830,,,Wed Oct 29 20:07:09 UTC 2008,,,,,,0|i0keyf:,117240,,,,,,,,"29/Oct/08 17:35;hell;This code was removed ... and is necessary.

	/**
	 * CheckBox will by default always just use the boolean converter because the implementation
	 * expects that the string is can be converted to a boolean {@link Strings#isTrue(String)}
	 * 
	 * @see org.apache.wicket.Component#getConverter(java.lang.Class)
	 */
	@Override
	public <X> IConverter<X> getConverter(Class<X> type)
	{
		/*
		 * FIXME johan: why is this override here? it doesnt make any sense. if i say
		 * checkbox.getconverter(Integer.class) why is it still giving me a boolean converter???
		 */
		return (IConverter<X>)BooleanConverter.INSTANCE;
	}
","29/Oct/08 18:27;ivaynberg;checkbox now has its own hardcoded converter that is made to work with html's ""on"" value","29/Oct/08 18:40;hell;Hi,

there is one more small bug ...  the new converter CheckBoxConverter is never used ...

There should be:

return CheckBoxConverter.INSTANCE;

instead of:

return super.getConverter(type);

Thx,
H.","29/Oct/08 18:44;ivaynberg;my code here reads:

@Override
	public final IConverter getConverter(Class<?> type)
	{
		if (Boolean.class.equals(type))
		{
			return CheckBoxConverter.INSTANCE;
		}
		else
		{
			return super.getConverter(type);
		}
	}

so it should use the checkboxconverter for boolean values...","29/Oct/08 18:51;hell;your code looks good, but the code is not in trunk version ... may be the code is in 1.3 brach ...","29/Oct/08 20:00;ivaynberg;strange, try updating again","29/Oct/08 20:07;hell;Thx,
H.",,,,,,,,,,,,,,,,,
RadioChoice disable certain choice bug,WICKET-1903,12407425,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,fkleinko,fkleinko,29/Oct/08 15:18,29/Oct/08 18:00,13/Mar/19 23:15,29/Oct/08 18:00,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC1,,,,,,0,,,,,,,,"I want to disable certain values of a dropdown choice.

But the isDisabled is never called only the isEnabled and i don't know the choice in here.","XP, Tomcat,",7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202829,,,2008-10-29 15:18:33.0,,,,,,0|i0keyn:,117241,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spelling error in fonts list in CaptchaImageResource,WICKET-1901,12407408,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tapter,tapter,29/Oct/08 11:04,29/Oct/08 17:49,13/Mar/19 23:15,29/Oct/08 17:49,1.3.4,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC1,,wicket-extensions,,,,0,,,,,,,,"In  org.apache.wicket.extensions.markup.html.captcha.CaptchaImageResource  there's a spelling error in the font list used which leads to the first entry being useless:
124:  private List fontNames = Arrays.asList(new String[] { ""Helventica"", ""Arial"", ""Courier"" });

Helventica should be Helvetica",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202827,,,2008-10-29 11:04:45.0,,,,,,0|i0kez3:,117243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BrowserInfoForm markup has reference to non existent component,WICKET-1867,12406261,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rgravener,rgravener,12/Oct/08 21:36,16/Oct/08 20:33,13/Mar/19 23:15,13/Oct/08 00:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,,,wicket,,,,0,,,,,,,,BrowserInfoForm.html markup has reference to non existent component.,,,,,,,,,,,,,,,,,,,12/Oct/08 21:37;rgravener;BrowserInfoForm.diff;https://issues.apache.org/jira/secure/attachment/12391971/BrowserInfoForm.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202794,,,Sun Oct 12 21:37:04 UTC 2008,,,,,,0|i0kf1j:,117254,,,,,,,,"12/Oct/08 21:37;rgravener;-   <input type=""text"" wicket:id=""SVGsupport"" />",,,,,,,,,,,,,,,,,,,,,,,
WicketTester executeAjaxEvent onclick generating non-AJAX response,WICKET-1582,12395217,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,thrantal,spatula,spatula,02/May/08 19:07,14/Oct/08 07:41,13/Mar/19 23:15,14/Oct/08 07:41,1.3.4,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"Executing: 
		tester.executeAjaxEvent(""linky"", ""onclick"");
		tester.assertComponentOnAjaxResponse(component);
throws an exception saying ""The Previous response was not an AJAX response. You need to execute an AJAX event, using clickLink, before using this assert"" although executeAjaxEvent should be resulting in an AJAX response (and prior to 1.3.3 it did).

Executing tester.clickLink(""linky""), which probably should be equivalent to the above executeAjaxEvent, does work.

I'll attach a simple testcase demonstrating this behaviour.",Wicket 1.3-SNAPSHOT as of today,,,,,,,,,,,,,,,,,,02/May/08 19:17;spatula;wicket1582.jar;https://issues.apache.org/jira/secure/attachment/12381336/wicket1582.jar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-09-29 03:46:19.393,,,no_permission,,,,,,,,,,,202541,,,Tue Oct 14 07:41:11 UTC 2008,,,,,,0|i0kfqf:,117366,,,,,,,,"02/May/08 19:17;spatula;Simple test case showing nonequivalent behaviour between executeAjaxEvent(""foo"", ""onclick"") and clickLink(""foo""). ","29/Sep/08 03:46;thrantal;Nick,

Thanks for reporting!

I now ""fixed"" this in 1.3.x and trunk by making this possible

{code:java}
        @Test
        public void testClickingAjaxLinkWithOnclick() {
            final WicketTester tester = new WicketTester() {
            @Override
            protected WebRequestCycle resolveRequestCycle() {
                    return setupRequestAndResponse(true);
            }
        };
        tester.startPage(MyPage.class);

        final Component component = tester.getComponentFromLastRenderedPage(""spanny"");
        assertNotNull(component);
        
        tester.executeAjaxEvent(""linky"", ""onclick"");
        tester.assertComponentOnAjaxResponse(component);
{code}

The reasoning can be found in this thread (hard to get the Nabble link right in this Jira without Confluence markup)

http://www.nabble.com/WICKET-1582-blocked-by-WICKET-254-td19521561.html#a19521561

Theoretically, the default could be the other way around, but then it would change the current behaviour and make existing tests fail :/ Anyway I think that in big projects you tend to have common places where WicketTester gets initialised and where you can change this if you want it in all your tests.

Are you happy with this solution and can the issue be closed? Or do you have better ideas?",14/Oct/08 07:41;thrantal;Resolving for now to not block releases because of this. Please create a new issue if you're not happy with this workaround.,,,,,,,,,,,,,,,,,,,,,
Unfound markup information is not entirely cached even in deployment mode,WICKET-1857,12405674,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,thrantal,thrantal,thrantal,03/Oct/08 03:49,03/Oct/08 03:59,13/Mar/19 23:15,03/Oct/08 03:59,1.3.4,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"Unfound markup information is not entirely cached even in deployment mode, which causes performance problems. The problem has a very broad effect, because checking for non-existent localised versions of markup causes a lot of cases of unfound markup. This showed up first in our load tests, and was later confirmed by profiling.

If you don't have the localised version of your markup to your current locale, this markup is looked for but never found. This bug causes the lookup to repeat on every request when the component is repainted, which becomes a major problem in a case with a lot of ajax repaints.

You can reproduce the problem with Wicket 1.3.3 easily, for example by putting the log4j.logger.org.apache.wicket.markup.MarkupCache=DEBUG setting in log4j.properties and running Wicket examples in deployment mode. I added several items to the Ajax todo list and this appeared in console repeatedly

DEBUG - MarkupCache                - Load markup: cacheKey=org.apache.wicket.examples.ajax.builtin.TodoList$AddItemsContaineren_UShtml
DEBUG - MarkupCache                - Markup not found: org.apache.wicket.examples.ajax.builtin.TodoList$AddItemsContaineren_UShtml

This is caused by the bug that in MarkupCache, the unfound markup information is stored only in markupCache and not in markupKeyCache. I fixed this in the naïve way but we should really refactor the cache handling so that it does not rely on the same calls being duplicated to markupCache and markupKeyCache .",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202785,,,Fri Oct 03 03:59:31 UTC 2008,,,,,,0|i0kf2f:,117258,,,,,,,,03/Oct/08 03:59;thrantal;Committed fix to both trunk and 1.3.x,,,,,,,,,,,,,,,,,,,,,,,
DiskPageStore should write the sessions index file to disk on destroy (from WicketFilter.destroy()),WICKET-1161,12382549,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,jcompagner,jcompagner,14/Nov/07 20:44,27/Sep/08 07:45,13/Mar/19 23:15,27/Sep/08 07:45,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,,,wicket,,,,0,,,,,,,,"We have to save the sessions index to disk from the DiskPageStore when we get a shutdown/destroy from the servlet container
(I hope that that that event will be called on a servlet container shutdown and on a undeploy/redeploy of the webapp.)

Then with a destroy we save it. When we are fired up again we read that file and also delete the file immediantly.

Then when the page store is created and the file isn't there it can delete all the page stores files that are currently on disk
because the destroy didn't happen so it was a crash or a hard kill and there won't be any sessions anyway.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-20 20:15:09.453,,,no_permission,,,,,,,,,,,202160,,,Sun Jan 20 20:15:09 UTC 2008,,,,,,0|i0kgvj:,117551,,,,,,,,"20/Jan/08 20:15;knopp;This is basically done, but it would be nice to cleanup file entries for which there is no record in index (e.g. files that were left there when server instance was killed, etc.)",,,,,,,,,,,,,,,,,,,,,,,
StringResourceModel may fail to format numbers using MessageFormat,WICKET-1719,12399174,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aaime,aaime,27/Jun/08 14:34,27/Sep/08 07:44,13/Mar/19 23:15,27/Sep/08 07:44,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"StringResourceModel API seems to suggest it's possible to use it without a Component reference using the following approach:

{code}
m = new StringResourceModel(""key"", null, new Model(...), new Object[] {p1, p2, ...});
m.setLocalizer(xxxApplication.get().getResourceSettings().getLocalizer());
return m.toString()
{code}

Unfortunately the above will fail with an exception if the message uses the MessageFormat approach and one of the parameters
is a number, since the locale field in StringResourceModel won't be initialized, and will then be passed as null to new MessageFormat(value, locale) at line 514 of StringResourceFormat.

I'm using the following crude workaround:

{code}
StringResourceModel rm = new StringResourceModel(key, null, model, params) {
            @Override
            public void setLocalizer(Localizer localizer) {
                super.setLocalizer(localizer);
                // crude hack to force into the StringResoruceLoader to grab a locale,
                // which is needed to format numbers with the MessageFormat approach
                load();
            }
        };
        rm.setLocalizer(GeoServerApplication.get().getResourceSettings().getLocalizer());
        return rm.getString();
{code}

but boy, this looks ugly... Creating a custom subclass that does locale loading in the
constructor would look better, but still quite ugly...",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202659,,,2008-06-27 14:34:52.0,,,,,,0|i0kffb:,117316,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component.toString() is unsafe ,WICKET-622,12371106,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nilia,nilia,07/Jun/07 05:20,27/Sep/08 07:33,13/Mar/19 23:15,27/Sep/08 07:33,1.2.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,,,wicket,,,,0,,,,,,,,"I add a component to its container when the page is initialized, BEFORE
it is rendered and before page model finished to initialize.
if log4j is configured to enable wicket debug, the container toString()
is called.
This method invokes isVisible() of the container.
I have overridden isVisible(), to query the page model before deciding
whether the component is actually visible.
I assumed this method is called when the component is rendered, and by
that time the model is completely initialized.
However, since it was called before component rendering, my code failed
and the page failed to be created.
To sum up, toString() of Component should be safe.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-07 09:55:58.967,,,no_permission,,,,,,,,,,,201659,,,Sun Aug 12 08:50:42 UTC 2007,,,,,,0|i0kic7:,117788,,,,,,,,"07/Jun/07 09:55;jcompagner;in 1.3 its already safe:


		if (detailed)
		{
			final Page page = findPage();
			if (page == null)
			{
				return new StringBuffer(""[Component id = "").append(getId()).append(
						"", page = <No Page>, path = "").append(getPath()).append(""."").append(
						Classes.simpleName(getClass())).append(""]"").toString();
			}
			else
			{
				return new StringBuffer(""[Component id = "").append(getId()).append("", page = "")
						.append(getPage().getClass().getName()).append("", path = "").append(
								getPath()).append(""."").append(Classes.simpleName(getClass()))
						.append("", isVisible = "").append((isRenderAllowed() && isVisible()))
						.append("", isVersioned = "").append(isVersioned()).append(""]"").toString();
			}
		}
		else
		{
			return ""[Component id = "" + getId() + ""]"";
		}
	
so if we don't find a page many things are not called.","07/Jun/07 10:42;nilia;the same code appears in 1.2.2 as well.
the page is already set, but the model is not completely initialized.
This is probably my fault and I should reverse the order.
However, toString() should not fail Container.add() .","07/Jun/07 14:49;ehillenius;I think that the thing that is wrong here is that toString calls this method with detailed == true. Why don't we make that false explicitly use this method with detailed == true when we use it for e.g. printing out the component etc?
","15/Jun/07 01:08;almaw;Hmmm, this is still an issue in trunk, now I look. I think toString() on Component should call toString(false). Worse, toString(false) on MarkupContainer calls super.toString(true) regardless.

It's difficult to get Eclipse to tell me what calls .toString() ;-)

I guess we should just turn detailed output off and call it explicitly when we find we need it, or when people whinge.","12/Aug/07 08:50;jdonnerstag;IMO the output of Component.toString(false) is too simple. Which is probably why MarkupContainer.toString(detailed) calls super.toString(true). 

i think we should 
- make Component.toString(false) more meaningful
- and change MarkupContainer.toString(detailed) to call super.toString(detailed)

Since most people will use toString(), they are with the not-so-detailed output anyway. ",,,,,,,,,,,,,,,,,,,
AbstractRequestTargetUrlCodingStrategy(line 174) throws confusing exception. It would be better redirect to 404-page in this case. ,WICKET-1648,12396475,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,atuzhikov,atuzhikov,21/May/08 07:57,27/Sep/08 07:19,13/Mar/19 23:15,27/Sep/08 07:19,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,4,,,,,,,,"Steps to reproduce: 
When user manually types incorrect URL, this confusing exception will be thrown.

SEVERE: Internal error for /eshop/profile/p
java.lang.IllegalStateException: URL fragment has unmatched key/value pair: p
	at org.apache.wicket.request.target.coding.AbstractRequestTargetUrlCodingStrategy.decodeParameters(AbstractRequestTargetUrlCodingStrategy.java:174)
	at org.apache.wicket.request.target.coding.BookmarkablePageRequestTargetUrlCodingStrategy.decode(BookmarkablePageRequestTargetUrlCodingStrategy.java:76)
	at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.targetForRequest(WebRequestCodingStrategy.java:476)
	at org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:175)

",,172800,172800,,0%,172800,172800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-21 08:09:21.664,,,no_permission,,,,,,,,,,,202600,,,Tue Aug 19 08:15:20 UTC 2008,,,,,,0|i0kflj:,117344,,,,,,,,21/May/08 08:09;ivaynberg;we should still log a warning,19/Aug/08 08:15;slonopotamus;Still present in 1.4-M3,,,,,,,,,,,,,,,,,,,,,,
IAjaxIndicatorAware/WicketAjaxIndicatorAppender with AutoCompleteTextField doesn't work,WICKET-1839,12404502,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jkriesten,jkriesten,17/Sep/08 09:17,27/Sep/08 07:12,13/Mar/19 23:15,27/Sep/08 07:12,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket-extensions,,,,0,,,,,,,,"When adding IAjaxIndicatorAware/WicketAjaxIndicatorAppender to an AutoCompleteTextField to indicate loading of remote data, the Indicator isn't activated.

On a side note: AbstractAutoCompleteBehavior#onBind adds another AbstractDefaultAjaxBehavior which is unnecessary since AbstractAutoCompleteBehavior extends that already.",Any,,,,,,,,,,,,,,,,,,17/Sep/08 09:23;jkriesten;indicator-test.tar.gz;https://issues.apache.org/jira/secure/attachment/12390249/indicator-test.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202767,,,Wed Sep 17 09:23:05 UTC 2008,,,,,,0|i0kf3r:,117264,,,,,,,,17/Sep/08 09:23;jkriesten;Test case.,,,,,,,,,,,,,,,,,,,,,,,
Using AbstractAjaxTimerBehavior and mounting that page gives exception,WICKET-1376,12389719,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,okrohne,okrohne,27/Feb/08 19:03,27/Sep/08 06:44,13/Mar/19 23:15,27/Sep/08 06:44,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,1,,,,,,,,"AbstractAjaxTimerBehavior renders a table every 3 seconds.
A DataView is used to populate the table.
I have tried mountBookmarkablePage(), QueryStringUrlCodingStrategy and  MixedParamUrlCodingStrategy.

Root cause:

java.lang.IllegalStateException: URL fragment has unmatched key/value pair: amp
at org.apache.wicket.request.target.coding.AbstractRequestTargetUrlCodingStrategy.decodeParameters(AbstractRequestTargetUrlCodingStrategy.java:174)
at org.apache.wicket.request.target.coding.BookmarkablePageRequestTargetUrlCodingStrategy.decode(BookmarkablePageRequestTargetUrlCodingStrategy.java:76)
at org.apache.wicket.protocol.http.request.WebRequestCodingStrategy.targetForRequest(WebRequestCodingStrategy.java:475)
at org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:175)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1224)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:261)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:581)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
at java.lang.Thread.run(Thread.java:613)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-09 15:20:22.802,,,no_permission,,,,,,,,,,,202351,,,Sat Sep 27 06:44:06 UTC 2008,,,,,,0|i0kgb3:,117459,,,,,,,,09/Mar/08 15:20;jcompagner;do you have a testcase?,"11/Mar/08 19:34;okrohne;Hi,

I can not extract a test case from my project but I could reproduce it
with the clock example from:
http://wicketstuff.org/wicket13/ajax/clock.1


I changed in ClockPage.java

 //clock.add(new AjaxSelfUpdatingTimerBehavior(Duration.seconds(5)));
 this.add(new AjaxSelfUpdatingTimerBehavior(Duration.seconds(5)));

In the wicket application i mounted;
mountBookmarkablePage(""/clock"", ClockPage.class);

I seems to be an issue if the entire page has the AjaxSelfUpdatingTimerBehavior .



","28/Mar/08 11:24;seitz;i couldn't reproduce the illegalargumentexception with the clock example.
however, adding a page to the ajaxrequesttarget doesn't work anyways.

we could check whether the component is a page and then instead of 
adding the page to the target, add it's children (via addChildren).
but this probably fails in most situations, as all children would have to 
have called .setOutputMarkupId(true).
but maybe we can add check and just ignore those?","29/Mar/08 13:44;jcompagner;yeah self updating page doesn't make much sense.
If you do that we could just send a redirect to that page so that it refreshes the complete page..","10/Apr/08 12:34;ajacoby;I just got this error for the first time last night on my app, which has been in production for a couple of weeks now.  It's not using ajax self-updating behavior, though the page in question does have an ajax auto-complete text field on it.

The stack trace appears to be virtually identical, so I won't repost it.  However, I thought the request log might be useful: you can see how &amp; in the request param gets translated into the url: the page is mounted at ""/student"", but on a later request it's translated to ""/student/amp"".

[09/Apr/2008:21:22:05 -0400] ""GET /SummerProgram/student?wicket:interface=:2:regForm:bizAddressBorder:institutionName::IActivePageBehaviorListener:1:&amp;wicket:ignoreIfNotActive=true&q=N&random=0.14365558698773384 HTTP/1.1"" 200 1 ""http://www.icpsr.umich.edu/SummerProgram/student?"" ""Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_4_11; en) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13""

[09/Apr/2008:21:22:05 -0400] ""GET /SummerProgram/student/amp;wicket:ignoreIfNotActive/true/random/0.14365558698773384/q/N/ HTTP/1.1"" 200 8473 ""http://www.icpsr.umich.edu/SummerProgram/student?"" ""Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_4_11; en) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13""

[09/Apr/2008:21:22:05 -0400] ""GET /SummerProgram/student/amp;wicket:ignoreIfNotActive/true/random/0.14365558698773384/q/js/safe_onload.js HTTP/1.1"" 200 8473 ""http://www.icpsr.umich.edu/SummerProgram/student/amp;wicket:ignoreIfNotActive/true/random/0.14365558698773384/q/N/"" ""Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_4_11; en) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13""

This is on wicket 1.3.1.",01/May/08 18:22;ajacoby;Yesterday I upgraded to 1.3-snapshot from 27 April and I'm still seeing it.,27/Sep/08 06:44;ivaynberg;ajax request target now supports repainting of the page - if the page is the same,,,,,,,,,,,,,,,,,
gecko: ajax javascript reference rendering problem,WICKET-1746,12400021,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,hell,hell,10/Jul/08 13:44,26/Sep/08 06:58,13/Mar/19 23:15,18/Sep/08 23:48,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,1,,,,,,,,"Hi,

i tried render the javascript as:

public void renderHead(IHeaderResponse response) {
  response.renderJavascriptReference(contextPath + ""js/test.js"");
}

The test.js is in webapp/js/test.js (out of classpath). All works greatly in Opera but in FF (gecko) is there a problem in wicket-ajax.js (the code is form trunk version): 

836: if (Wicket.Browser.isGecko()) {
837:     var href = document.location.href;
838:     var lastIndexOf = href.lastIndexOf('/');
839:         if (lastIndexOf > 0)
840:         {
841:                 url = href.substring(0,lastIndexOf+1) + url;
842:        }
843:}

Why is there this fix/workaround? This works only for relative path but for absolute is this code broken.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-18 23:48:32.79,,,no_permission,,,,,,,,,,,202685,,,Fri Sep 26 06:58:27 UTC 2008,,,,,,0|i0kfbz:,117301,,,,,,,,18/Sep/08 23:48;knopp;removed the workaround. might be a leftover or fix for some  bug in ff beta,"26/Sep/08 06:58;erikvanoosten;As a workaround, add the following behavior to your page (javascript based on wicket 1.3.4):

private static class WicketAjaxRelativePathFixBehaviour extends AbstractBehavior
{
	private static final long serialVersionUID = 1L;

	@Override
	public void renderHead(IHeaderResponse response)
	{
		String script = ""if (Wicket && Wicket.Ajax && Wicket.Ajax.Request) {""+
				""Wicket.Ajax.Request.prototype.doGet = function() {"" + 
				""	if (this.precondition()) {"" + 
				""		this.transport = Wicket.Ajax.getTransport();"" + 
				""		var url = this.createUrl();"" + 
				""		this.log(\""GET\"", url);"" + 
				""		Wicket.Ajax.invokePreCallHandlers();"" + 
				""		var t = this.transport;"" + 
				""		if (t != null) {"" + 
				""			t.open(\""GET\"", url, this.async);"" + 
				""			t.onreadystatechange = this.stateChangeCallback.bind(this);"" + 
				""			/*set a special flag to allow server distinguish between ajax and non-ajax requests*/"" + 
				""			t.setRequestHeader(\""Wicket-Ajax\"", \""true\"");"" + 
				""			t.setRequestHeader(\""Wicket-FocusedElementId\"", Wicket.Focus.lastFocusId || \""\"");"" + 
				""			t.setRequestHeader(\""Accept\"", \""text/xml\"");"" + 
				""			t.send(null);"" + 
				""			return true;"" + 
				""		} else {"" + 
				""			this.failure();"" + 
				""       	return false;"" + 
				""		}"" + 
				""	} else {"" + 
				""		Wicket.Log.info(\""Ajax GET stopped because of precondition check, url:\"" + this.url);"" + 
				""		this.done();"" + 
				""		return true;"" + 
				""	}"" + 
				""}}"";
		response.renderOnDomReadyJavascript(script);
	}
}
",,,,,,,,,,,,,,,,,,,,,,
Get rid of raw Model usage,WICKET-1745,12399983,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,thrantal,thrantal,thrantal,10/Jul/08 03:07,25/Sep/08 03:02,13/Mar/19 23:15,25/Sep/08 03:02,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"Currently new Model<List<C>> does not work, and because of this there are for instance raw Model()s in AbstractChoice.

I think that we can just change Model<T extends Serializable> to Model<T>.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-10 03:39:56.57,,,no_permission,,,,,,,,,,,202684,,,Thu Sep 25 03:02:51 UTC 2008,,,,,,0|i0kfc7:,117302,,,,,,,,10/Jul/08 03:39;ivaynberg;does Model.of(list) help?,"15/Jul/08 03:19;thrantal;Thanks Igor, it helps in some of the cases but now the raw Model is in there :)
Let's see if I can come up with a supportable solution.","25/Sep/08 03:02;thrantal;As far as I can tell, done.",,,,,,,,,,,,,,,,,,,,,
HybridUrlCodingStrategy and StatelessForm ( or StatelessLink ) results in invalid parameter encoding,WICKET-1343,12388671,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,demirr,demirr,14/Feb/08 14:10,19/Sep/08 00:05,13/Mar/19 23:15,19/Sep/08 00:05,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"I put a header component on one of my pages which contains a statelessform ( or stateless link ) .  I mounted the page with a HybridUrlCodingStrategy . When you request the page like this

http://localhost:9696/mountpath/param1/param1value, 

stateless form attaches another parameter which shows the forms IFormListener target. The new url is like this :

http://localhost:9696/mountpath/param1/param1value/wicket:interface/%3A0%3Aheader%3AloggedOutView%3AloginForm%3A%3AIFormSubmitListener%3A%3A/.0

I haven't covered all the source code for now but  i think the form changes the page parameters object so i think HybridUrlCodingStrategy must clone initial page parameters before putting it to page metadata. But not sure that this will cause any other problems ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-17 15:42:21.585,,,no_permission,,,,,,,,,,,202323,,,Sun Feb 17 15:42:21 UTC 2008,,,,,,0|i0kgef:,117474,,,,,,,,"15/Feb/08 17:09;demirr;The same problem occurs when you use IndexedHybridUrlCodingStrategy. Actually for the above, i changed newPage() method on HybridUrlCodingStrategy  like this,

protected Page newPage(Class pageClass, RequestCycle requestCycle)
		{
			Page page = super.newPage(pageClass, requestCycle);
			page.setMetaData(PAGE_PARAMETERS_META_DATA_KEY,
				(Serializable)getPageParameters().clone());
			page.setMetaData(ORIGINAL_TRAILING_SLASHES_COUNT_METADATA_KEY, new Integer(
				originalUrlTrailingSlashesCount));
			return page;
		}

Now there is no problem. It works. But i couldn't figure out how to change IndexedHybridUrlCodingStrategy. There is such code inside the method name  ""appendParameters"" on this file which throws exception

if (i != parameters.size())
		{
			throw new WicketRuntimeException(
					""Not all parameters were encoded. Make sure all parameter names are integers in consecutive order starting with zero. Current parameter names are: "" +
							parameters.keySet().toString());
		}

The problem is, if you set one page parameter with key ""0"", then StatelessForm ( or StatelessLink  ) also adds another one with key ""wicket:interface"" So the size of the parameters map is not equal to ""i"" variable.

I'm trying to find the right way but i need some help. Is there anybody reading these issues ? 

","17/Feb/08 15:42;knopp;Hi, i fixed the HybridUrlCodingStrategy (add the page parameters cloning). However, the indexedhybridurlcoding strategy can't really be fixed. Indexed coding strategy can't really work with stateless interface listener. This will probably be resolved in future wicket version.",,,,,,,,,,,,,,,,,,,,,,
Escaping DiskPageStore SessionFolder needed,WICKET-1399,12390383,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,fguerzoni,fguerzoni,06/Mar/08 19:02,19/Sep/08 00:04,13/Mar/19 23:15,19/Sep/08 00:04,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"When sessionId=8y4bxNcyiScVVV6QtVp9lg**.node1 Wicket can't create the temp directory because the name contains invalid character (at least on windows).
So a FileNotFoundException is thrown.
The use case happens when tomcat is configured as (in order to work with apache module mod_jk)

    <!-- Define an AJP 1.3 Connector on port 8009 -->
    <Connector port=""8009"" address=""${jboss.bind.address}"" protocol=""AJP/1.3""
         emptySessionPath=""true"" enableLookups=""false"" redirectPort=""8443"" />
         <Engine name=""jboss.web"" defaultHost=""localhost"" jvmRoute=""node1"">

My very temp solution (to let things go) is 

	private File getSessionFolder(String sessionId, boolean create)
	{
		File storeFolder = getStoreFolder();
		File sessionFolder = new File(storeFolder, sessionId.replace('*','_'));
		if (create && sessionFolder.exists() == false)
		{
			mkdirs(sessionFolder);
		}
		return sessionFolder;
	}

I think that a global solution is needed to fix the problem.
","win xp, sun jdk 1.5.0_12, jboss-4.2.2.ga+tomcat-5.5",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-08 17:05:31.003,,,no_permission,,,,,,,,,,,202372,,,Fri May 23 08:30:39 UTC 2008,,,,,,0|i0kg8v:,117449,,,,,,,,08/Mar/08 17:05;jcompagner;introduce a makeValidFile() method?,09/Mar/08 09:11;knopp;Committed a very basic fix,23/May/08 08:30;vladimir.piskarev;Should also escape ':',,,,,,,,,,,,,,,,,,,,,
Problem closing a ModalWindow when used through an IFrame,WICKET-1120,12381606,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,mahavishnu7,mahavishnu7,01/Nov/07 10:57,18/Sep/08 23:27,13/Mar/19 23:15,18/Sep/08 23:27,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,2,,,,,,,,"I'm doing some POC testing to find out how a wicket application could be used through an IFrame and noticed that closing of a ModalWindow fails.

My setup:

Application A: 
-a dummy html page that has an IFrame
-the contents of the IFrame is requested from Application B
<iframe src=""http://localhost:8080/mywicketapp/app/"" width=""100%"" height=""500""></iframe>

Application B:
-a Wicket application that uses a ModalWindow
-deployed to tomcat:  http://localhost:8080/mywicketapp/


Problem:
The ModalWindow is not closed when OK ( or Cancel ) button is clicked when Application B is used throug IFrame of Application A.
OK button performs the actual action (in my case deletes an item from a list) but is not closed after the execution of the action.

Closing of the ModalWindow works normally when Application B is not used through an IFrame.

Reproducing the problem:

You can test this by creating a html page with this source:

<html>
<body>
<iframe src=""http://www.wicket-library.com/wicket-examples/ajax/modal-window.1"" width=""100%"" height=""100%""></iframe>
</body>
</html>

And then open ""Show modal dialog with panel"" and try to close the dialog.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-14 10:20:07.371,,,no_permission,,,,,,,,,,,202123,,,Thu Sep 18 23:27:57 UTC 2008,,,,,,0|i0kgz3:,117567,,,,,,,,"14/Nov/07 10:20;jcompagner;matej, must this be fixed for 1.3?",21/Nov/07 02:21;knopp;No. And I definitely don't see any reason for this to be a blocker.,"18/Jan/08 16:38;rdonahue;I have also seen this problem in the Facebook version of our app which is rendered inside a Facebook IFrame  (this video shows the problem http://www.utipu.com/app/tip/id/537/ ) .  Any links or buttons that I add to the modal window work fine and close the window as expected, but the ""X"" in the top right corner does not work.  I have added a ""Close this window"" link to all of our modal windows for now, but this obviously clutters the window and could confuse users when trying to decide how to close the window.","10/Apr/08 10:40;pasfilip;I vote for this being included in the 1.3.4 release if posssible at all. It is in our case a major showstopper.
It has caused us a lot of frustration to find the true root cause of this problem.
If you decide not to update this for a 1.3 release the least you guys can do is clearly document that the modal window is not
working when used inside an iframe. 
In our application we tried using the js for the modal window to show the contents of another application (on another domain) through
this iframe. (after aligning the domains in the document) everything works except for the behavior of the modal window being very very wrong.
When we load a modal window thorugh js not throuh wicket and then load another modal window within a lot fails.

Please do make this a higher priority. Also if you pass to java 5 for wicket 1.4 i'm all in favor of fixing this also in a patch release for 1.3 for those poor suckers like us still stuck on 1.4. Normally not for much long but at least another few months.",06/Jul/08 13:05;dashorst;Moved to next milestone release.,18/Sep/08 23:27;knopp;commited fix for 1.3 branch and trunk,,,,,,,,,,,,,,,,,,
JavaScriptStripper breaks prototype.js ,WICKET-1520,12393692,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,jjviana,jjviana,10/Apr/08 18:16,18/Sep/08 22:57,13/Mar/19 23:15,18/Sep/08 22:57,1.3.2,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,,,,,,,4,,,,,,,,"
JavaScriptStripper is used to strip whitespace and comments from JavaScript files if the resource settings for the application enable that behavior.

The problem is it breaks prototype.js version 1.6.0  (a heavily used JavaScript library, used by many components like wicketstuff-scriptaculous ). 
It changes the library so that the line that reads:

  document.write(""<script id=__onDOMContentLoaded defer src=//:><\/script>"");

becomes:

 document.write(""<script id=__onDOMContentLoaded defer src=


This is enough to render useless any application that relies on scriptaculous . The funny part is that it only happen if the application mode is DEPLOYMENT, as in DEVELOPMENT this code is not active.

I suggest dropping this functionality altogether - the logic for doing the stripping  is extremely complicated and what is the point of stripping whitespace and comments  from something that is going to be gzip compressed anyway?



",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-19 13:32:22.24,,,no_permission,,,,,,,,,,,202483,,,Fri Aug 29 09:39:08 UTC 2008,,,,,,0|i0kfwn:,117394,,,,,,,,19/May/08 13:32;slonopotamus;Get the same error here.,31/May/08 06:19;ivaynberg;i think this was already fixed?,31/May/08 08:38;slonopotamus;Also affects wicket-1.4-m1,31/May/08 08:58;knopp;This should be already fixed. Can you try latest trunk?,08/Aug/08 18:18;carloc;Also getting problems with jquery.,08/Aug/08 20:01;knopp;With what version? Have you tested latest branch/trunk?,29/Aug/08 09:39;slonopotamus;Bug doesn't appear in wicket-1.4-m3,,,,,,,,,,,,,,,,,
DiskPageStore-FileNotFoundException,WICKET-1773,12401672,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,jkriesten,jkriesten,05/Aug/08 05:23,17/Sep/08 20:23,13/Mar/19 23:15,17/Sep/08 20:23,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,,,wicket,,,,0,,,,,,,,"With the current 1.3-Snapshot, I encounter problems with DiskPageStore:

---8<---
09:30:43.151 ERROR [.wicket.protocol.http.pagestore.DiskPageStore] - Error flushing page
java.lang.RuntimeException: java.io.FileNotFoundException: /usr/local/www/services/local.silberlicht.de/html/WEB-INF/tmp/Silberlicht-filestore/abcgm_hyTIaiqgnqDNmUr/pm-null (No such file or directory)
    at org.apache.wicket.protocol.http.pagestore.FileChannelPool.newFileChannel(FileChannelPool.java:104)
    at org.apache.wicket.protocol.http.pagestore.FileChannelPool.getFileChannel(FileChannelPool.java:171)
    at org.apache.wicket.protocol.http.pagestore.DiskPageStore$SessionEntry.savePage(DiskPageStore.java:241)
    at org.apache.wicket.protocol.http.pagestore.DiskPageStore.flushPagesToSaveList(DiskPageStore.java:891)
    at org.apache.wicket.protocol.http.pagestore.DiskPageStore$PageSavingThread.run(DiskPageStore.java:961)
    at java.lang.Thread.run(Thread.java:613)
Caused by: java.io.FileNotFoundException: /usr/local/www/services/local.silberlicht.de/html/WEB-INF/tmp/Silberlicht-filestore/abcgm_hyTIaiqgnqDNmUr/pm-null (No such file or directory)
    at java.io.RandomAccessFile.open(Native Method)
    at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
    at org.apache.wicket.protocol.http.pagestore.FileChannelPool.newFileChannel(FileChannelPool.java:99)
    ... 5 common frames omitted
---8<---

The path /usr/local/www/services/local.silberlicht.de/html/WEB-INF/tmp/Silberlicht-filestore/ actually exists and has the proper rights - so creation of temporary directories/files should be possible (actually, the directory was created by the wicket app).

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-17 16:08:36.019,,,no_permission,,,,,,,,,,,202709,,,Wed Sep 17 20:23:41 UTC 2008,,,,,,0|i0kfa7:,117293,,,,,,,,"04/Sep/08 13:07;jkriesten;
Behavior is reproducable when sessions are invalidated not within wicket but e.g. Spring Security.

It turns out that DiskPageStore#unbind calls flushPagesToSaveList() which again tries to write to the no longer existing SessionStore.

Just clearing the list of pages instead of trying to write them solves the problem:

---8<---
public void unbind(String sessionId)
        {       
                SessionEntry entry = (SessionEntry)sessionIdToEntryMap.remove(sessionId);
                if (entry != null)
                {               
                        if (isSynchronous())
                        {       
                                entry.unbind();
                        }               
                        else    
                        {
                                List pages = getPagesToSaveList(sessionId);
                                if( pages!=null )
                                        pages.clear();
                                entry.unbind();
                                pagesToSaveAll.remove(sessionId);
                        }
                }
        }
---8<---
","17/Sep/08 16:08;miojo;If there's no reason to write pages from an invalid session, I think that is the correct behavior to just clear the list.

Any other thought ?",17/Sep/08 20:23;knopp;I think that's the proper behavior too. Committed change for 1.3 branch and trunk,,,,,,,,,,,,,,,,,,,,,
quickstart guide doesn't work for snapshots,WICKET-1259,12385565,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,syl,syl,04/Jan/08 06:22,16/Sep/08 20:32,13/Mar/19 23:15,04/Jan/08 22:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,0,,,,,,,,"I'm creating wicket quickstart from archetype and use command from http://wicket.apache.org/quickstart.html. If I choose version 1.3.0-snapshot, it fails saying ""Embedded error: Archetype does not exist."" Though maven command works if I choose other versions.

There was such a problem before 1.3.0 release.",Maven version: 2.0.4,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-04 07:20:55.121,,,no_permission,,,,,,,,,,,202246,,,Sat Jan 05 20:42:27 UTC 2008,,,,,,0|i0kgmf:,117510,,,,,,,,"04/Jan/08 07:20;ivaynberg;this is not a bug, but i think we should add some sort of message about this. basically the snapshot archetype is only available to people who have checked out wicket locally and mvn installed it. maybe when that option is selected a div should be made visible letting people know this....","04/Jan/08 22:16;seitz;for the impatient, have a look at [0].
the rest has to ""wait"" until the wiki site is exported to the website.

[0] http://cwiki.apache.org/confluence/display/WICKETxSITE/QuickStart","05/Jan/08 08:42;syl;Thanks.

I realise that archetype-snapshot is not a wicket snapshot, but anyway from user's point of view it's a bit strange that I can download wicket-snapshot (I mean from wicketstuff repository), but to create quickstart project which uses wicket-snapshot you have to build wicket from svn (according to quickstart page).

It's not that I have problems with that (I create quickstart for 1.3.0 version and then change pom to use wicket-snapshot), it's just that I think it might be a bit confusing for other people.","05/Jan/08 12:25;seitz;it's just how archetypes work. maven first looks in your local repository and if it doesn't find the archetype, it looks in the ""official"" repositories.
i think you can put the wicketstuff repository in ~/.m2/settings.xml and maven will also look in the wicketstuff repository for the snapshot archetype.","05/Jan/08 14:45;syl;> i think you can put the wicketstuff repository in ~/.m2/settings.xml and maven will also look in the wicketstuff repository for the snapshot archetype

Hm.. that's better than what I did.

Then maybe it would make more sense to add to command something like -DremoteRepositories=http://repo1.maven.org/maven/,http://wicketstuff.org/maven/repository/  rather than suggest to build wicket?","05/Jan/08 14:50;frankbille;Does -DremoteRepositories really work? That would be great, and much nicer than people to have to build themselves.","05/Jan/08 15:02;syl;It works for me with maven 2.0.4. For maven 1.x  there is ""maven.repo.remote"" property.","05/Jan/08 20:42;seitz;Dmitry, thanks a lot for the hint. didn't know such thing existed.
i updated the wiki page. the website should be updated within an hour max (iirc).

btw, I tested it with maven 2.0.6",,,,,,,,,,,,,,,,
AutoCompleteTextField's *scrollable* suggestion list disappeared when a mouse pointing to the scroll bar in IE6/7,WICKET-1350,12388833,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,andychu,andychu,16/Feb/08 04:33,16/Sep/08 20:32,13/Mar/19 23:15,27/Mar/08 00:12,1.3.0-final,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"if we define the following CCS to fix the height of the suggestion list, the list will become to be scrollable when it is overflow, for example, there are 100 suggestions should be shown.

div.wicket-aa {
	height: 200px;
	overflow: auto;
}

if a user moves his mouse to the scroll bar, the suggestion list will disappear immediately in IE6/7 but  in FF. The reason is that the *onblur* event of the text field is triggered in IE but in FF.  At the moment the mouse pointing to the scroll bar, Wicket.AutoComplete.mouseactive is 0, therefore, hideAutoComplete() was called. That's why the suggestion list  disappeared in IE6/7.


",IE6/7,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-26 09:07:47.062,,,no_permission,,,,,,,,,,,202329,,,Thu Mar 27 00:12:16 UTC 2008,,,,,,0|i0kge7:,117473,,,,,,,,26/Mar/08 09:07;jcompagner;Gerolf can you look at this if it is fixable for 1.3? else change it to 1.4/1.5,"26/Mar/08 11:19;seitz;same issue has been worked on here: http://dev.rubyonrails.org/ticket/4782
i'll take a closer look later today.","27/Mar/08 00:12;seitz;simple fix:
add mouseout and mouseover listener to the choiceDiv (instead of  mouseover/mouseout on list-nodes) and set mouseactive accordingly
",,,,,,,,,,,,,,,,,,,,,
Enter in AutoCompleteTextField with AjaxFormSubmitBehavior on change-event submits form multiple times,WICKET-1454,12392455,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,seitz,seitz,27/Mar/08 15:35,16/Sep/08 20:32,13/Mar/19 23:15,27/Mar/08 21:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,0,,,,,,,,"when the autocomplete menu is hidden, hitting enter in an autocomplete-textbox submits the form several times (due to event handling in onkeydown, onkeyup, onkeypress)

we should kill the event in 2 of the 3 eventhandlers. which one would be the best to keep?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-27 15:45:33.711,,,no_permission,,,,,,,,,,,202422,,,Thu Mar 27 21:54:12 UTC 2008,,,,,,0|i0kg27:,117419,,,,,,,,"27/Mar/08 15:45;janne;I think onkeypress is the safest bet.

http://www.quirksmode.org/js/keys.html","27/Mar/08 21:05;seitz;the problem is that onkeydown executes the original onchange (attached AFSB) event handler of the textbox when KEY_ENTER is pressed and doesn't kill the event.
next, onkeypress doesn't kill the event because no item is selected, which leads to the form being submitted via a non-ajax roundtrip.

now what we could/should do is NOT call onchange in onkeydown in the KEY_ENTER block, as browsers only fire the change event when the textbox loses focus.

wdyt?","27/Mar/08 21:54;seitz;i think the following behavior is what a user would expect: (focus is always on textbox)

menu visible, select item with keyboard, ENTER -> invoke onchange of textbox
menu visible, ESC, ENTER -> submit form
menu visible, no item selected, ENTER -> submit form
menu visible, click on item with mouse -> invoke onchange of textbox
menu hidden, ENTER -> submit form
type some letters, click somewhere on the page -> invoke onchange of textbox

",,,,,,,,,,,,,,,,,,,,,
StyleDateConverter does not use the components Locale when formatting.,WICKET-1401,12390406,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,ned.collyer,ned.collyer,07/Mar/08 02:44,16/Sep/08 20:32,13/Mar/19 23:15,07/Mar/08 23:58,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket-datetime,,,,0,,,,,,,,"The StyleDateConverter class does not use .withLocale(getLocale()) in the getFormat() method.

This means that any ""LL"" formatted dates do not have the correct translations present when outputting words (eg, month).

protected DateTimeFormatter getFormat() {
  DateTimeFormatter dtf = DateTimeFormat.forPattern(getDatePattern()).withPivotYear(2000);
  return dtf;
}

should be

protected DateTimeFormatter getFormat() {
  DateTimeFormatter dtf = DateTimeFormat.forPattern(getDatePattern()).withLocale(getLocale()).withPivotYear(2000);
  return dtf;
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-07 23:58:42.202,,,no_permission,,,,,,,,,,,202374,,,Fri Mar 07 23:58:42 UTC 2008,,,,,,0|i0kg8f:,117447,,,,,,,,07/Mar/08 23:58;seitz;thanks,,,,,,,,,,,,,,,,,,,,,,,
StringResourceModel does not escape interpolated properties,WICKET-1015,12379138,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,crumley,crumley,26/Sep/07 20:11,16/Sep/08 20:32,13/Mar/19 23:15,04/Nov/07 01:43,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"StringResourceModel does not escape single quotes from interpolated strings which causes unexpected behavior when using with message formatters.

Consider the following string:
mystring=This string contained ${property} and message formatter placeholders {0}.

new StringResourceModel(""mystring"", component, model, new Object[] {""some string""});

${property} = _resolved'property_

The following string is passed to MessageFormat: This string contained _resolved'property_ and message formatter placeholders {0}.

This will cause MessageFormat to not replace {0} with the first parameter because it is waiting for another single quote to end the escaping.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:16.252,,,no_permission,,,,,,,,,,,202023,,,Tue Oct 16 06:46:16 UTC 2007,,,,,,0|i0kh7r:,117606,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",,,,,,,,,,,,,,,,,,,,,,,
Time fields in DateTimeField not required also when required = true,WICKET-1151,12382358,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,rfasciolo,rfasciolo,12/Nov/07 17:07,16/Sep/08 20:32,13/Mar/19 23:15,12/Nov/07 18:25,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket-datetime,,,,0,,,,,,,,When a user inputs only a date in a field generated by DateTimeField with setRequired(true) the system is not giving any errors for the missing time. The returned value in that scenario has always 12:00 as time.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-12 18:25:38.896,,,no_permission,,,,,,,,,,,202150,,,Mon Nov 12 18:25:38 UTC 2007,,,,,,0|i0kgwn:,117556,,,,,,,,"12/Nov/07 18:25;seitz;added propagation of DTF#isRequired for minutesField and hoursField in onBeforeRender.
also added propagation of DTF#isEnabled && DTF#isEnableAllowed in onBeforeRender for all input fields",,,,,,,,,,,,,,,,,,,,,,,
DatePicker#getConfigureYUIBasePath() is useless or never called,WICKET-901,12376997,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,vincent.demay@anyware-tech.com,vincent.demay@anyware-tech.com,28/Aug/07 13:32,16/Sep/08 20:32,13/Mar/19 23:15,30/Oct/07 23:11,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket-datetime,,,,0,,,,,,,,I don't know what this method is supposed to do but it is never called,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:18.824,,,no_permission,,,,,,,,,,,201921,,,Tue Oct 30 23:11:26 UTC 2007,,,,,,0|i0khj3:,117657,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",30/Oct/07 23:11;seitz;fixed: removed the method,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableMultiLineLabel + race condition / ,WICKET-1499,12393402,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,jkriesten,jkriesten,08/Apr/08 12:39,16/Sep/08 20:32,13/Mar/19 23:15,09/Apr/08 11:46,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M1,,wicket-extensions,,,,0,,,,,,,,"
There are two issues concerning AjaxEditableMultiLineLabel:

a) Race condition cancel editing

Using 'Esc' to cancel editing might lead to two events to be fired: first onKeypress is executed - which leads to bluring the component in Opera. This results in the onblur-event firing and the input is submitted!

Changing the code in onComponentTag to

                        protected void onComponentTag(ComponentTag tag)
                        {       
                                super.onComponentTag(tag);
                                final String saveCall = ""{wicketAjaxGet('"" + getCallbackUrl() +
                                        ""&save=true&'+this.name+'='+wicketEncode(this.value)); return false;}"";
                        
                                final String cancelCall = ""{wicketAjaxGet('"" + getCallbackUrl() +
                                        ""&save=false'); this.onblur=''; return false;}"";
                
                                final String keypress = ""var kc=wicketKeyCode(event); if (kc==27) "" + cancelCall +
                                        ""; "";
                        
                                tag.put(""onblur"", saveCall);
                                tag.put(""onkeypress"", keypress);
                        }

stops onblur being fired.

This might also apply for AjaxEditableLabel - though I haven't seen this happening there yet.


b) Displaying defaultNullLabel on empty String Model:

Should behave like AjaxEditableLabel, i.e.:

            protected void onComponentTagBody(MarkupStream markupStream, ComponentTag openTag)
            {
                Object modelObject = getModelObject();
                if (modelObject == null || """".equals(modelObject))
                {
                    replaceComponentTagBody(markupStream, openTag, defaultNullLabel());
                }
                else
                {
                    super.onComponentTagBody(markupStream, openTag);
                }
            } 

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-09 11:46:19.316,,,no_permission,,,,,,,,,,,202464,,,Wed Apr 09 11:46:19 UTC 2008,,,,,,0|i0kfyn:,117403,,,,,,,,09/Apr/08 11:46;seitz;fixed. thx.,,,,,,,,,,,,,,,,,,,,,,,
java.lang.IllegalAccessError when changing AjaxEditableLabel ,WICKET-1239,12385086,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,a_wronski@gazeta.pl,a_wronski@gazeta.pl,21/Dec/07 13:46,16/Sep/08 20:32,13/Mar/19 23:15,02/Feb/08 20:52,1.3.0-final,1.3.0-rc2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket-extensions,,,,4,,,,,,,,"When changing AjaxEditableLabel system throws:

java.lang.IllegalAccessError: tried to access method
org.apache.wicket.Component.onModelChanging()V from class
org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1
    at
org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1.onModelChanging
(AjaxEditableLabel.java:273)
    at org.apache.wicket.Component.modelChanging(Component.java:2058)
    at org.apache.wicket.Component.setModelObject(Component.java:2823)
    at org.apache.wicket.markup.html.form.FormComponent.updateModel(
FormComponent.java:992)
    at org.apache.wicket.markup.html.form.FormComponent.processInput(
FormComponent.java:874) 
[...]

The probem is in methd:

        protected FormComponent newEditor(MarkupContainer parent, String componentId, IModel model)
        {
                TextField editor = new TextField(componentId, model)
                {
                        private static final long serialVersionUID = 1L;

                        protected void onModelChanged()
                        {
                                super.onModelChanged();
                                AjaxEditableLabel.this.onModelChanged();  //here is a bug
                        }

                        protected void onModelChanging()
                        {
                                super.onModelChanging();
                                AjaxEditableLabel.this.onModelChanging();  //here is a bug
                        }
                };
                editor.setOutputMarkupId(true);
                editor.setVisible(false);
                editor.add(new EditorAjaxBehavior());
                return editor;
        } 

AjaxEditableLabel.this.XXXXXX is not visible.


Artur
","Windows XP Pro SP2, Java 1.6.0_03-b05",,,,,,,,,,,,,,,,,,25/Mar/08 22:41;egulatee;code.java;https://issues.apache.org/jira/secure/attachment/12378595/code.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-31 00:47:12.246,,,no_permission,,,,,,,,,,,202227,,,Thu Mar 27 11:10:04 UTC 2008,,,,,,0|i0kgo7:,117518,,,,,,,,31/Dec/07 00:47;frejo;Same problem on Mac OS X 10.5.1 Java SE 1.5.0_13-b05-237. But it works on 1.3.0-rc1,"06/Jan/08 21:02;seitz;unfortunately i haven't been able to reproduce this bug on my machine (several tomcat versions, jetty, several java versions),
but I'm aware that even the examples on wicketstuff.org don't work.

it would be great if somebody could provide instructions on how i have to setup my environment so i can reproduce this bug.","07/Jan/08 15:40;a_wronski@gazeta.pl;Use the example code from:
http://wicketstuff.org/wicket13/ajax/editable-label.1

When you confirm the label changing the error appears.","07/Jan/08 17:29;seitz;i have even run the examples on multiple servlet containers, java version.
so far, i've been unable to reproduce it.","08/Jan/08 11:35;ejeklint;I think this is a bug in some JRE's, not in the code. An anonymous class should have access to an enclosing class' inherited protected methods - onComponentChanged() and onComponentChanging() in this case - but obviously the JRE things differently.

A solution/workaround is to declare 

	@Override
	protected void onModelChanged() {
		super.onModelChanged();
	}

	@Override
	protected void onModelChanging() {
		super.onModelChanging();
	}


in AjaxEditableLabel and all should be fine. At least it works for me on Mac 10.5.1 with Java 1.5.0.","08/Jan/08 11:58;seitz;that's been my suspicion too.

unfortunately, the fix you suggested doesn't help much, because we wouldn't even have to override the methods when we're just calling the method in the super class.
the lines you removed were introduced by WICKET-1097.

i'll investigate more tonight.","08/Jan/08 17:57;tahitiangabriel;Don't know if that's helping you, but I've the same problem with jdk1.5.0_10 - tomcat 6.0.10 and eclipse 3.3.
It's OK with wicket 1.3rc1 and below and doesn't work with wicket 1.3r2 and above.

","31/Jan/08 08:14;seitz;Per, applied your fix, thx","02/Feb/08 14:34;seitz;after redeploying wicket-examples on wicketstuff.org, the exception is still thrown.

http://wicketstuff.org/wicket13/ajax/editable-label","02/Feb/08 17:55;edvin;I have checked and double-checked. This IS resolved in trunk now. I created a quickstart-project and put the code from the example in 
HomePage.java and HomePage.html. Then I verified that the error was there with 1.3.0. Then I synced wicket against trunk and did a mvn clean 
install in my wicket-folder. Then I changed the pom for the example-project to wicket-version 1.3-SNAPSHOT and did mvn eclipse:eclipse. 
Without any other modification, it then works.

This is on Linux with jdk1.6.0_04.

-- Edvin


","02/Feb/08 20:52;seitz;finally let's resolve/close this one.
the build script of our build server still used the 1.3.0-SNAPSHOT versions (rather than the new 1.3-SNAPSHOT versions)
johan, thanks for fixing that.
edvin, thanks for double checking again.","15/Mar/08 02:12;guigouz;This bug is hapenning on Wicket 1.3.2 running on Glassfish on Mac OS X 10.5.2 (jdk 1.5), full track trace of the error follows

StandardWrapperValve[WicketApplication]: PWC1406: Servlet.service() for servlet WicketApplication threw exception
java.lang.IllegalAccessError: tried to access method org.apache.wicket.Component.onModelChanging()V from class org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1
        at org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1.onModelChanging(AjaxEditableLabel.java:294)
        at org.apache.wicket.Component.modelChanging(Component.java:2097)
        at org.apache.wicket.Component.setModelObject(Component.java:2863)
        at org.apache.wicket.markup.html.form.FormComponent.updateModel(FormComponent.java:1016)
        at org.apache.wicket.markup.html.form.FormComponent.processInput(FormComponent.java:898)
        at org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$EditorAjaxBehavior.respond(AjaxEditableLabel.java:122)
        at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:288)
        at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:100)
        at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)
        at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)
        at org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)
        at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)
        at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
        at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
        at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:121)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:718)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:831)
        at org.apache.catalina.core.ApplicationFilterChain.servletService(ApplicationFilterChain.java:411)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:317)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:198)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:390)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:198)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:288)
        at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:271)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:202)
        at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:632)
        at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:577)
        at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:94)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:206)
        at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:632)
        at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:577)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:571)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:1080)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:150)
        at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:632)
        at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:577)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:571)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:1080)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:270)
        at com.sun.enterprise.web.connector.grizzly.DefaultProcessorTask.invokeAdapter(DefaultProcessorTask.java:637)
        at com.sun.enterprise.web.connector.grizzly.DefaultProcessorTask.doProcess(DefaultProcessorTask.java:568)
        at com.sun.enterprise.web.connector.grizzly.DefaultProcessorTask.process(DefaultProcessorTask.java:813)
        at com.sun.enterprise.web.connector.grizzly.DefaultReadTask.executeProcessorTask(DefaultReadTask.java:339)
        at com.sun.enterprise.web.connector.grizzly.DefaultReadTask.doTask(DefaultReadTask.java:261)
        at com.sun.enterprise.web.connector.grizzly.DefaultReadTask.doTask(DefaultReadTask.java:212)
        at com.sun.enterprise.web.connector.grizzly.TaskBase.run(TaskBase.java:265)
        at com.sun.enterprise.web.connector.grizzly.ssl.SSLWorkerThread.run(SSLWorkerThread.java:106)
","25/Mar/08 22:39;egulatee;This bug is happening on Wicket 1.3.2 running on Tomcat on Mac OS X 10.5.2 (jdk 1.6), full stack trace follows:

SEVERE: Servlet.service() for servlet HelloWorldApplication threw exception
java.lang.IllegalAccessError: tried to access method org.apache.wicket.Component.onModelChanging()V from class org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1
	at org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1.onModelChanging(AjaxEditableLabel.java:294)
	at org.apache.wicket.Component.modelChanging(Component.java:2097)
	at org.apache.wicket.Component.setModelObject(Component.java:2863)
	at org.apache.wicket.markup.html.form.FormComponent.updateModel(FormComponent.java:1016)
	at org.apache.wicket.markup.html.form.FormComponent.processInput(FormComponent.java:898)
	at org.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$EditorAjaxBehavior.respond(AjaxEditableLabel.java:122)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:288)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:100)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:121)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:690)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:637)

Furthermore I extended AjaxEditableLabel and overrode suggested methods.   See attached file.



","26/Mar/08 08:33;jcompagner;you really dont use 1.3.2 because see what we already do:

	/**
	 * Dummy override to fix WICKET-1239
	 *
	 * @see org.apache.wicket.Component#onModelChanging()
	 */
	protected void onModelChanging()
	{
		super.onModelChanging();
	}

we already override it. and Line 294 shouldn't call Component.onModelChanging but first that method.
","27/Mar/08 11:10;egulatee;Johan,

Thanks.  Even though my ivy dependancies were pointing to wicket 1.3, it would see tomcat has older versions deployed.
It works now after cleaning out stuff.
",,,,,,,,,
Form inside VelocityPanel throws WicketRuntimeException: Unable to find the markup for the component.,WICKET-1268,12385826,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,peacekeeper,peacekeeper,09/Jan/08 06:34,16/Sep/08 20:32,13/Mar/19 23:15,28/Mar/08 11:11,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"I am trying to have a Form inside a VelocityPanel, but I get the following Exception:

WicketMessage: Unable to find the markup for the component. That may be due to transparent containers or components implementing IComponentResolver: [MarkupContainer [Component id = form, page = simplevelocity.SimpleVelocityPage, path = 3:velocity:form.MyForm, isVisible = true, isVersioned = true]]

Root cause:

org.apache.wicket.WicketRuntimeException: Unable to find the markup for the component. That may be due to transparent containers or components implementing IComponentResolver: [MarkupContainer [Component id = form, page = simplevelocity.SimpleVelocityPage, path = 3:velocity:form.MyForm, isVisible = true, isVersioned = true]]
at org.apache.wicket.MarkupFragmentFinder.find(MarkupFragmentFinder.java:118)
at org.apache.wicket.Component.locateMarkupStream(Component.java:3584)
at org.apache.wicket.Component.getMarkupAttributes(Component.java:1359)
at org.apache.wicket.markup.html.form.Form.getMethod(Form.java:1310)
at org.apache.wicket.markup.html.form.Form.onComponentTag(Form.java:1457)
at org.apache.wicket.Component.renderComponent(Component.java:2400)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1354)
at org.apache.wicket.markup.html.form.Form.onRender(Form.java:1588)
at org.apache.wicket.Component.render(Component.java:2266)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1240)
at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1370)
at org.apache.wicket.velocity.markup.html.VelocityPanel.onComponentTagBody(VelocityPanel.java:228)
at org.apache.wicket.Component.renderComponent(Component.java:2429)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1354)
at org.apache.wicket.Component.render(Component.java:2266)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1240)
at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1370)
at org.apache.wicket.Page.onRender(Page.java:1442)
at org.apache.wicket.Component.render(Component.java:2266)
at org.apache.wicket.Page.renderPage(Page.java:891)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:231)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1100)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1169)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1245)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:489)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:228)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445)
at java.lang.Thread.run(Thread.java:595)

I also have a Label inside the VelocityPanel, which works fine.",Win XP / Tomcat 6.0,,,,,,,,,,,,,,,,,,09/Jan/08 06:41;peacekeeper;simplevelocity.zip;https://issues.apache.org/jira/secure/attachment/12372763/simplevelocity.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-03-28 11:11:08.184,,,no_permission,,,,,,,,,,,202253,,,Fri Mar 28 11:11:08 UTC 2008,,,,,,0|i0kgl3:,117504,,,,,,,,"09/Jan/08 06:41;peacekeeper;Attached is an Eclipse project that shows the issue.

SimpleVelocityPage is the WebPage that contains a MyVelocityPanel
(SimpleVelocityPage source: http://pastebin.com/f1ddf33a)

MyVelocityPanel is a VelocityPanel that contains a Label and a MyForm
(MyVelocityPanel source: http://pastebin.com/f54712348)

MyVelocityPanel.vm is the velocity markup for MyVelocityPanel
(MyVelocityPanel.vm source: http://pastebin.com/f62e99b50)

MyForm is a simple Form
(MyForm source: http://pastebin.com/f510bf2dd)","28/Mar/08 11:11;seitz;fixed:
VelocityPanel implements IMarkupResourceStreamProvider and returns the evaluated velocity template (which doesn't get cached).
onBeforeRender checks that child components can only be added if the generated markup should be parsed.",,,,,,,,,,,,,,,,,,,,,,
Border bodycontainer doesn't render a markup placeholder,WICKET-1173,12382916,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,memeplex,memeplex,20/Nov/07 21:27,16/Sep/08 20:32,13/Mar/19 23:15,30/Nov/07 22:46,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,0,,,,,,,,A border with getBodyContainer().setOutputMarkupPlaceholderTag(true); doesn't generate a placeholder after its body is hidden. I've attached an example.,,,,,,,,,,,,,,,,,,,20/Nov/07 21:27;memeplex;border.tgz;https://issues.apache.org/jira/secure/attachment/12369920/border.tgz,29/Nov/07 18:00;cafesolo;hideableborder.zip;https://issues.apache.org/jira/secure/attachment/12370564/hideableborder.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-11-24 20:27:40.69,,,no_permission,,,,,,,,,,,202171,,,Fri Nov 30 22:46:05 UTC 2007,,,,,,0|i0kguv:,117548,,,,,,,,"24/Nov/07 20:27;seitz;i think you somehow misuse the bodyContainer. for one, the wicket:body tag is not even rendered when you run the application in standard deployment mode (see MarkupSettings->stripWicketTags).

as for your example:
<wicket:border>
<a wicket:id=""hideLink"">Hide/Show</a>
<wicket:body></wicket:body>					
</wicket:border>

i'd suggest wrapping the body in a separate container and hiding/showing the container instead:
(code based on your example)
HTML:
<wicket:border>
<a wicket:id=""hideLink"">Hide/Show</a>
<div wicket:id=""bodyWrapper""><wicket:body></wicket:body></div>
</wicket:border>

JAVA:
public class HideableBorder extends Border {
	private WebMarkupContainer wrapper 

	public HideableBorder(String name) {
		super(name);
		addHideLink();
		wrapper= new WebMarkupContainer(""bodyWrapper"");
		wrapper.setOutputMarkupPlaceholderTag(true);
		wrapper.setVisible(false);
	}

	private void addHideLink() {
		add(new AjaxLink(""hideLink"") {
			public void onClick(AjaxRequestTarget target) {
				wrapper.setVisible(!wrapper.isVisible());
				target.addComponent(wrapper);
			}
		});
	}
}","28/Nov/07 02:59;seitz;just to save you some time, the suggested solution doesn't work.

my speculation:
when the bodycontainer is set visible and is rendered again, the ""originalMarkupStream"" in Border.BorderBodyContainer.onComponentTagBody(MarkupStream, ComponentTag) is still at the position like it was after the Border has been initially rendered.
as a consequence, MarkupContainer#renderComponentTagBody (which is called for the BorderBodyContainer) doesn't render the tagbody, because the call to markupStream.hasMore() (which is actually the before mentioned originalMarkupStream) returns false and does the body of the while loop for rendering the children is not executed.
",29/Nov/07 18:00;cafesolo;The attached code (hideableborder.zip) doesn't work unless you call getApplication().getDebugSettings().setComponentUseCheck(false);,"30/Nov/07 22:46;seitz;it's fixed now in trunk.

note that you still should implement this like a suggested in my first comment.
relying on wicket:body is not a good idea, as it is stripped out anyway if the application is run in deployment mode.
also: wicket tags are not rendered in ajax request, so there's a second reason for not doing this.

please try again with the necessary modifications to your usecase (wrapping wicket:body with a WebMarkupContainer), 
and reopen this issue if it still doesn't work.",,,,,,,,,,,,,,,,,,,,
[PATCH] Javascript error in IE7 when selecting a date,WICKET-1007,12379040,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,medavid,medavid,25/Sep/07 13:34,16/Sep/08 20:32,13/Mar/19 23:15,25/Sep/07 19:32,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-datetime,,,,0,,,,,,,,"When selecting a date in IE7 I get a javascript error on line 227 in wicket-date.js. In this line there is the following check:

if (typeof(field.onchange) != 'undefined' ) field.onchange();

in IE7 this gives a warning due to field.onchange being null (which is user defined instead of undefined). Changing the check as follows solves this problem for me:

if (typeof(field.onchange) != 'undefined' && field.onchange != null) field.onchange();

",IE7,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202015,,,2007-09-25 13:34:12.0,,,,,,0|i0kh8n:,117610,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Manifests use incorrect Dynamic-ImportPackage header,WICKET-1649,12396484,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,awilkinson,awilkinson,21/May/08 10:10,16/Sep/08 20:32,13/Mar/19 23:15,24/May/08 00:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,,,,,1,,,,,,,,"The OSGi bundle manifests in the Wicket JARs are using the wrong dynamic import package header. They currently use the header Dynamic-ImportPackage, the header should be DynamicImport-Package. The current manifests cause a number of classloading problems with Wicket when running in an OSGi environment.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-21 14:58:35.313,,,no_permission,,,,,,,,,,,202601,,,Sat May 24 00:56:56 UTC 2008,,,,,,0|i0kflb:,117343,,,,,,,,21/May/08 14:58;jcompagner;and another one :),24/May/08 00:56;seitz;fixed. thanks,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextField's suggestion list *disappeared* when it is used inside a ModalWindow,WICKET-1329,12388045,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,andychu,andychu,07/Feb/08 06:24,16/Sep/08 20:32,13/Mar/19 23:15,27/Mar/08 23:13,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"When an AutoCompleteTextField is used in panel showed inside a ModalWindow,  the dropdown list for suggestions will be disappeared. The reason is that the z-index of a normal ModalWindow is 20000 while the z-index of the dropdown list is 10000.  And there is no way to set this parameter programatically. Therefore, the dropdown list  is masked by the ModalWindow.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-27 23:13:19.108,,,no_permission,,,,,,,,,,,202309,,,Thu May 08 18:23:58 UTC 2008,,,,,,0|i0kgfj:,117479,,,,,,,,"27/Mar/08 23:13;seitz;i set the z-index to 30000, so it's higher than modalwindow's z-index.",31/Mar/08 20:41;seitz;i changed it so that the autocomplete menu detects the zIndex of its offsetParent and sets its own zIndex to that value + 1.,"07/Apr/08 16:07;erikvanoosten;When the fix in [WICKET-1355] is applied, the changes for this bug should probably be undone.","08/May/08 18:23;seitz;Erik, why do you think so?
afaik, the z-index is independent from the position. 
so we need both fixes.",,,,,,,,,,,,,,,,,,,,
Using nested wicket:enclosure throws exception,WICKET-1263,12385681,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,dakr,dakr,07/Jan/08 09:12,16/Sep/08 20:32,13/Mar/19 23:15,07/Jan/08 14:37,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"When using nested wicket:enclosure tags an Unexpected RuntimeException is thrown in case the visibility of the outer enclosure was set to false.

Message of the exception: 
WicketMessage: Expected close tag for <wicket:enclosure child=""..."">

In Wicket 1.3.0-rc2 everything worked fine.",,,,,,,,,,,,,,,,,,,07/Jan/08 09:14;dakr;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12372606/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-07 14:37:51.307,,,no_permission,,,,,,,,,,,202249,,,Mon Jan 07 14:37:51 UTC 2008,,,,,,0|i0kglr:,117507,,,,,,,,07/Jan/08 09:14;dakr;Quickstart provided,07/Jan/08 14:37;seitz;enclosure now calls skipToMatchingCloseTag instead of skipUntil for an invisible enclosure,,,,,,,,,,,,,,,,,,,,,,
DatePicker wrong positioning,WICKET-1236,12384854,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,iger,iger,18/Dec/07 11:01,16/Sep/08 20:32,13/Mar/19 23:15,19/Dec/07 21:06,1.3.0-rc1,1.3.0-rc2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-datetime,,,,1,,,,,,,,"Adding a DateField component to a WebPage and putting it low enough to be out of screen (so that one has to scroll down to reach the DateField-related icon) makes related DatePicker to show in a wrong position (apparently, some fixed vertical position, which could appear out of the visible screen at all)

The problem goes away if I use calendar.js, DatePicker.js and wicket-date.js files from 1.3.0-beta3.


Included is a testcase, somewhat it works only in Firefox, Opera throws the following error in javascript console (this problem also goes away if I switch to wicket-datetime-1.3.0-beta3.jar):

script thread
Error:
name: TypeError
message: Statement on line 63: Type mismatch (usually a non-object value used where an object is required)
Backtrace:
  Line 63 of inline#1 script in http://localhost:8080/datepicker/app/
    Wicket.DateTime.init({widgetId : ""date1"", componentId : ""date1"", calendarInit : {WEEKDAYS_MEDIUM : [""Sun"", ""Mon"", ""Tue"", ""Wed"", ""Thu"", ""Fri"", ""Sat""], WEEKDAYS_1CHAR : [""S"", ""M"", ""T"", ""W"", ""T"", ""F"", ""S""], MONTHS_LONG : [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""], WEEKDAYS_LONG : [""Sunday"", ""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday""], MONTHS_SHORT : [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""], title : ""&nbsp;"", close : true, WEEKDAYS_SHORT : [""Su"", ""Mo"", ""Tu"", ""We"", ""Th"", ""Fr"", ""Sa""]}, datePattern : ""dd/MM/yy"", alignWithIcon : true, enableMonthYearSelection : false, fireChangeEvent : true, hideOnSelect : true});
  Line 46 of inline#1 script in http://localhost:8080/datepicker/app/
    initdate1DpJs();
  Line 1316 of linked script http://localhost:8080/datepicker/app/resources/org.apache.wicket.extensions.yui.YuiLib/yuiloader-beta.js
    this.onLoadComplete(this);
  Line 1296 of linked script http://localhost:8080/datepicker/app/resources/org.apache.wicket.extensions.yui.YuiLib/yuiloader-beta.js
    self.loadNext(name);
  Line 22 of inline#1 script in http://localhost:8080/datepicker/app/
    loaderCallback();
  Line 1297 of linked script http://localhost:8080/datepicker/app/resources/org.apache.wicket.extensions.yui.YuiLib/yuiloader-beta.js
    m.verifier(name, (function ()
{
  self.loadNext(name);
}
));
  Line 375 of linked script http://localhost:8080/datepicker/app/resources/org.apache.wicket.extensions.yui.YuiLib/yuiloader-beta.js
    YUI.loaders[i].loadNext(mname);
  Line 154 of linked script http://localhost:8080/datepicker/app/resources/org.apache.wicket.extensions.yui.YuiLib/yahoo/yahoo.js
    ls[i](m);
  Line 4951 of linked script http://localhost:8080/datepicker/app/resources/org.apache.wicket.extensions.yui.YuiLib/calendar/calendar.js
    YAHOO.register(""calendar"", YAHOO.widget.Calendar, {version : ""2.3.0"", build : ""442""});",,,,,,,,,,,,,,,,,,,18/Dec/07 11:07;iger;datepicker-positioning-bug.zip;https://issues.apache.org/jira/secure/attachment/12371856/datepicker-positioning-bug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-19 21:06:26.282,,,no_permission,,,,,,,,,,,202224,,,Wed Dec 19 21:06:26 UTC 2007,,,,,,0|i0kgof:,117519,,,,,,,,"19/Dec/07 21:06;seitz;fixed, form now on, also the scroll offset is taken into account when the datepicker is positioned.
i tested it with FF2.0.0.11, IE6, IE7, Opera 9.2.3 under Windows XP

can somebody with a mac test it too with the provided quickstart and trunk?",,,,,,,,,,,,,,,,,,,,,,,
FeedbackMessages don't get cleaned up in an AJAX request when renderstrategy is REDIRECT_TO_RENDER,WICKET-1046,12379782,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,seitz,seitz,05/Oct/07 22:04,16/Sep/08 20:32,13/Mar/19 23:15,05/Oct/07 22:12,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"the following check in Session#cleanupFeedbackMessages always fails for AjaxRequests when the renderstrategy REDIRECT_TO_RENDER is used.
this leads to FeedbackMessages not being removed from the session.

if (Application.get().getRequestCycleSettings().getRenderStrategy() != IRequestCycleSettings.REDIRECT_TO_RENDER || (!RequestCycle.get().isRedirect()))

RequestCycle.get().isRedirect()  in case of a WebRequestCycle returns true for Ajax requests.

fix:
mark Session#cleanupFeedbackMessages as abstract and implement it in WebSession with an additional check ""|| ((WebRequest)RequestCycle.get().getResponse).isAjax()""",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202052,,,2007-10-05 22:04:45.0,,,,,,0|i0kh4v:,117593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Syntactic errors in the manifest OSGi headers,WICKET-1645,12396334,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,djo.mos,djo.mos,19/May/08 17:50,16/Sep/08 20:32,13/Mar/19 23:15,20/May/08 11:17,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket-datetime,,,,0,,,,,,,,"Hello,
  Not exactly sure about the error location, but upon deployment on a OSGi container (SpringSource Application Context, based on Equinox), I get the following trace:


[2008-05-19 19:39:26.041] fs-watcher               <SPOP0004W> The bundle '/home/djo/Java/servers/springsource-ap-1.0.0.beta3/repository/bundles/usr/wicket-datetime-1.4-m2.jar' could not be provisioned is its manifest is malformed. The error encountered whilst parsing the manifest was: The manifest identified by Name 'Wicket Date/Time', Symbolic Name 'org.apache.wicket.wicket-datetime', and Version '1.4.0.m2' has the following errors [org.antlr.runtime.NoViableAltException on 'Package Header [Import]' at Char: 768,org.antlr.runtime.NoViableAltException on 'Package Header [Export]' at Char: 101]",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-19 21:11:29.69,,,no_permission,,,,,,,,,,,202597,,,Tue May 20 11:17:19 UTC 2008,,,,,,0|i0kfm7:,117347,,,,,,,,19/May/08 21:11;jcompagner;i think you also where busy with other stuff for this right?,"19/May/08 21:16;seitz;i think this is because we have a folder (not package) called ""yahoo-dom-event"" and in the osgi manifest, this is in the import and export package header.","20/May/08 06:08;seitz;Jawher, could you try again with latest trunk?","20/May/08 09:44;djo.mos;Hi and thanks for the impressively fast response :-O

> Jawher, could you try again with latest trunk? 

Erm ... I'm more than willing to do, but how ? you mean rebuild the project from SVN ? Should I use maven ?
Arent't there some nightlies ?","20/May/08 10:12;seitz;the latest snapshots can be found in our maven repository: http://wicketstuff.org/maven/repository

the specific wicket-datetime.jar for 1.4-SNAPSHOT is here: 
http://wicketstuff.org/maven/repository/org/apache/wicket/wicket-datetime/1.4-SNAPSHOT/wicket-datetime-1.4-20080520.074737-86.jar","20/May/08 11:12;djo.mos;Thanks Gerolf.
I've retrieved the latest snapshot of date-time and tested it => It deploys perfectly well, and no more problems with the manifest \o/

Excellent work ! Many thanks.

Cheers,
Jawher.","20/May/08 11:17;seitz;the ""yahoo-dom-event"" folder is no longer in the Import-/Export-Package header.
also see http://markmail.org/message/ghsnpspirv57vtin",,,,,,,,,,,,,,,,,
Invalid Cookie Names for persistence used according to RFC (doesn't work in tomcat 6.x),WICKET-1834,12404343,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,thecoolace,thecoolace,15/Sep/08 08:37,16/Sep/08 19:36,13/Mar/19 23:15,16/Sep/08 19:36,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"Wicket uses "":"" to build up the cookie name out of different components (e.g.""signInPanel:signInForm:username""). This violates the cookie spec (RFC 2965 and RFC 2616). According to this spec a cookie must be an av-pair

av-pairs    =     av-pair *("";"" av-pair)
av-pair     =     attr [""="" value]              ; optional value
attr        =     token
value       =     token | quoted-string

and token is:

token          = 1*<any CHAR except CTLs or separators>
separators     = ""("" | "")"" | ""<"" | "">"" | ""@""
                      | "","" | "";"" | "":"" | ""\"" | <"">
                      | ""/"" | ""["" | ""]"" | ""?"" | ""=""
                      | ""{"" | ""}"" | SP | HT

Note that the cookie name MUST be a token and a token MUST NOT contain "":""

That's why tomcat 6.x delivers (correctly with best guess) ""signInPanel"" as cookie name for the above example.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-16 19:31:58.123,,,no_permission,,,,,,,,,,,202762,,,Tue Sep 16 19:36:27 UTC 2008,,,,,,0|i0kf4f:,117267,,,,,,,,"16/Sep/08 19:31;dashorst;1.3.x contains JDK 1.5 or 1.6 code, needs fixing for 1.4 sdk (and the unit test didn't run!)",16/Sep/08 19:36;dashorst;Fixed compilation error and the unit test in 1.3.x,,,,,,,,,,,,,,,,,,,,,,
"<wicket:enclosure child=""xxx""> bug when located as first level son of a non transparent border ",WICKET-1188,12383336,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aangenieux,aangenieux,27/Nov/07 17:57,10/Sep/08 16:10,13/Mar/19 23:15,10/Sep/08 16:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,,,wicket,,,,0,,,,,,,,"I can't tell since extacly for which version this does not work, or if it's a long time bug, but it does not work the current trunk (27 nov 2007).

Example markup :
<!-- This is a non transparent border -->
<span wicket:id=""actionsBorder"">
   <wicket:enclosure child=""newLink"">
      <div class=""action"">
         <a wicket:id=""newLink""><img wicket:id=""newButton"" /></a>
      </div>
   </wicket:enclosure>
</span>

always throws a MarkupException during onComponentTagBody method of Enclosure class.

It seems that the child lookup based on the 'child' parameter of the Enclosure tag is erroneous : when it asks its parent to resolve the component with childId, it only finds the Enclosure element, thus failing to locate the child BELOW enclosure.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-01 10:37:48.6,,,no_permission,,,,,,,,,,,202184,,,Wed Sep 10 15:34:45 UTC 2008,,,,,,0|i0kgsf:,117537,,,,,,,,01/Dec/07 10:37;jdonnerstag;thanks. has been fixed,"01/Dec/07 12:55;aangenieux;Thank you, that was quick ;)

Cheers,

Antoine.


","09/Sep/08 14:02;sfussenegger;I have the exact same problem with Wicket 1.3.4. I stepped through the code and found out that Border.get(String path) doesn't consider a border's body container to be special. Therefore, this doesn't work:

<!-- This is a non transparent border -->
<span wicket:id=""actionsBorder"">
   <wicket:enclosure child=""newLink"">
      <div class=""action"">
         <a wicket:id=""newLink""><img wicket:id=""newButton"" /></a>
      </div>
   </wicket:enclosure>
</span>

while this does work:

<!-- This is a non transparent border -->
<span wicket:id=""actionsBorder"">
   <wicket:enclosure child=""_body:newLink"">
      <div class=""action"">
         <a wicket:id=""newLink""><img wicket:id=""newButton"" /></a>
      </div>
   </wicket:enclosure>
</span> 

(My border has it's own child components, if this makes a difference)","09/Sep/08 17:11;ivaynberg;can you please create a quickstart, or better yet a unit test?","10/Sep/08 09:26;aangenieux;I don't think I have any code left with this problem, as i've used 
markup containers and overloaded isVisible method to avoid this issue, 
but i'll find  some time this weekend to make a quick start and unit test ;)

Should I do this on the 1.3 or 1.4 branch ? (I have projects on both 
versions nowdays and haven't tried in on 1.4...)

Cheers,

Antoine.


-- 
Antoine Angénieux
Associé

Clinigrid
5, avenue Mozart
75016 Paris, France
+336 60 21 09 18
aangenieux@clinigrid.com


","10/Sep/08 14:36;ivaynberg;1.4 would be better, thanks","10/Sep/08 15:34;aangenieux;I tried on current trunk for 1.4 and 1.3, and it works out just fine...

I then switched to 1.3.4, and then again it runs just fine...

I still can upload the quickstart if you want, but I don't really see 
the point ;)

Maybea Stefan can provide its own quickstart demonstrating this bug ?

Anyway, the original bugfix still applies to my usecase ;)




",,,,,,,,,,,,,,,,,
Embedded forms do not support multipart,WICKET-1820,12403729,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zta,zta,05/Sep/08 00:12,06/Sep/08 18:30,13/Mar/19 23:15,06/Sep/08 18:30,1.3.4,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket-extensions,,,,0,,,,,,,,"When a MultiFileUploadInput is used in a WizardStep, the files queued for upload are silently ignored when the Upload button is pushed.

An example application is attached.

Simply download, extract, compile (mvn package), deploy, and follow the instructions on the page.
There are two examples: A working on where the MultiFileUploadInput is used on a separate Page,
and a b0rken one where it's used in a WizardStep.","glassfish, wicket + wicket-extensions 1.4M3",,,,,,,,,,,,,,,,,,05/Sep/08 00:13;zta;asklandd-wicket-wizard-bug.tar.bz2;https://issues.apache.org/jira/secure/attachment/12389549/asklandd-wicket-wizard-bug.tar.bz2,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202750,,,2008-09-05 00:12:17.0,,,,,,0|i0kf5j:,117272,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Invalid procedure call or argument"" on AJAX call with IE7",WICKET-1788,12402323,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,joril,joril,13/Aug/08 16:00,03/Sep/08 17:06,13/Mar/19 23:15,03/Sep/08 17:06,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"I have a Button that shows a JS alert and then executes an AJAX call.
It works fine under Firefox 2, but fails under IE7.. The alert appears, I click ""ok"" and then I get the ""Initiating Ajax GET request..."" inside ""WICKET AJAX DEBUG"", but it doesn't reach my serverside handler.
After clicking ""ok"", in the bottom-left corner of the window appears a javascript error: ""Invalid procedure call or argument"", line 849, code 0.

Original discussion: http://www.nabble.com/Button-with-confirmation-with-IE7-td18944137.html

I'll add a quickstart and a patch in a moment.","Windows XPsp2, IE7",,,,,,,,,,,,,,,,,,13/Aug/08 16:01;joril;invalidprocedure_quickstart.tgz;https://issues.apache.org/jira/secure/attachment/12388159/invalidprocedure_quickstart.tgz,13/Aug/08 16:02;joril;invalidprocedurecall_ie7.patch;https://issues.apache.org/jira/secure/attachment/12388160/invalidprocedurecall_ie7.patch,18/Aug/08 10:36;joril;invalidprocedurecall_ie7.patch2;https://issues.apache.org/jira/secure/attachment/12388423/invalidprocedurecall_ie7.patch2,,,,,,3.0,,,,,,,,,,,,,,,,,,,2008-08-18 19:45:59.512,,,no_permission,,,,,,,,,,,202723,,,Wed Sep 03 17:06:40 UTC 2008,,,,,,0|i0kf8v:,117287,,,,,,,,13/Aug/08 16:01;joril;Quickstart (Eclipse project ),13/Aug/08 16:02;joril;Patch tested with Firefox 2 and IE7,13/Aug/08 16:08;joril;Forgot to mention: could be the same problem as https://issues.apache.org/jira/browse/WICKET-1585,"18/Aug/08 10:36;joril;Sorry, the check for lastFocusId ""null-ness"" is required on Ajax POST too, not just Ajax GET","18/Aug/08 19:45;knopp;Committed to trunk and 1.3 branch.
",03/Sep/08 17:06;knopp;should be fixed,,,,,,,,,,,,,,,,,,
JavascriptStripper ignores context when looking for multiline comments,WICKET-1806,12403233,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,joern.zaefferer,joern.zaefferer,28/Aug/08 09:20,31/Aug/08 18:04,13/Mar/19 23:15,31/Aug/08 18:04,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,,,wicket,,,,0,,,,,,,,"org.apache.wicket.util.string.JavascriptStripper#stripCommentsAndWhitespace doesn't check the context when looking for multiline comments. In my case, it interprets the default accept header in the jQuery source code as a multiline comment:

accepts: {
	xml: ""application/xml, text/xml"",
	html: ""text/html"",
	script: ""text/javascript, application/javascript"",
	json: ""application/json, text/javascript"",
	text: ""text/plain"",
	_default: ""*/*""
}

The culprit being this string: ""*/*""

I don't have a patch and I wouldn't try to write my own JS parser. Maybe replacing the current implementation with a Rhino-based one is an option. Its available via Maven:

<dependency>
    <groupId>rhino</groupId>
    <artifactId>js</artifactId>
    <version>1.7R1</version>
</dependency>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-31 09:35:05.036,,,no_permission,,,,,,,,,,,202737,,,Sun Aug 31 18:04:30 UTC 2008,,,,,,0|i0kf6v:,117278,,,,,,,,31/Aug/08 09:35;knopp;I added the testcase you've provided to Javascript stripper test and it strips it just fine. No problem at all. Can you attach the whole javascript that fails to get stripped successfully? ,"31/Aug/08 11:10;joern.zaefferer;I tested it with jQuery 1.2.6, which contains the offending line. The stripping didn't fail (no exception), but the resulting code got messed up.",31/Aug/08 11:15;joern.zaefferer;Here is the file: http://code.google.com/p/jqueryjs/downloads/detail?name=jquery-1.2.6.js,"31/Aug/08 18:04;knopp;Fixed, committed for 1.3 branch and trunk. ",,,,,,,,,,,,,,,,,,,,
Border fails to render if its contents are not visible by default,WICKET-1789,12402487,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mmakundi,mmakundi,16/Aug/08 06:04,31/Aug/08 07:08,13/Mar/19 23:15,31/Aug/08 07:08,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"If the ""contents"" -element is visible=false during the first time the page is loaded, Wicket crashes

<wicket:border>
	<fieldset style=""padding: 0px;"">
	<legend> 
	  <input type=""button"" wicket:id=""toggle_contents_button"" value=""Click here to show/hide""> 
	  <span wicket:id=""legend""></span> 
	</legend> 
	
	<span wicket:id=""contents"">
		<wicket:body />
	</span>
	
	</fieldset>

</wicket:border>


Unexpected RuntimeException:

WicketMessage: Expected close tag for <span id=""show_hide_bordera"" wicket:id=""show-hide-border"">
[markup = file:/C:/workspaces/testspace/border-bug/target/classes/org/wicket/quickstart/HomePage.html
<html>
<head>
<title>Wicket Quickstart Archetype Homepage</title>
</head>
<body>
<strong>Wicket Quickstart Archetype Homepage</strong>
<br/><br/>
<span wicket:id=""message"">message will be here</span>
Show-hide -content:
<form wicket:id=""form"">
<span wicket:id=""show-hide-border"">Rendering the border crashes if its contents are hidden by default.</span>
</form>
</body>
</html>

, index = 12, current = [Raw markup]]

Root cause:

org.apache.wicket.markup.MarkupException: Expected close tag for <span id=""show_hide_bordera"" wicket:id=""show-hide-border"">
[markup = file:/C:/workspaces/testspace/border-bug/target/classes/org/wicket/quickstart/HomePage.html",,300,300,,0%,300,300,,,,,,,,,,,,16/Aug/08 06:07;mmakundi;border-bug-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12388354/border-bug-quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202724,,,Sat Aug 16 06:07:53 UTC 2008,,,,,,0|i0kf8n:,117286,,,,,,,,"16/Aug/08 06:07;mmakundi;Quickstart application for reproducing the border bug.

Try running it and it should crash.

However, if you adjust the border contents to be visible by default (HomePage.java and ShowHideBorder constructor), it will render just fine and continue operating. This suggests to me that it is a bug as it fails only if the contents are hidden by default.",,,,,,,,,,,,,,,,,,,,,,,
AjaxSubmitLink in Internet Explorer does not work with Wicket's automatically genreated id's,WICKET-1787,12402204,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,asgaut,asgaut,12/Aug/08 12:09,26/Aug/08 15:21,13/Mar/19 23:15,25/Aug/08 19:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,,,,,0,,,,,,,,"When using AjaxSubmitLink, and the markupid for a wicket element is not explicitly set, AjaxSubmitLink will not work with internet explorer. When clicking on your AjaxSubmitLink while running Internet Explorer, nothing will happen.

Here is an example:
html file:
<img wicket:id=""img_unlock"" >

java file:
ContextImage unlockImage = new ContextImage(""img_unlock"", new Model(""pathtoimage/unlockedgray.png""));

Since the id attribute is not set, wicket will now generate the output id id=""id"". For some reason AjaxSubmitLink in Internet Explorer does not understand this (Firefox does). Here is the HTML output:

<img class=""ajaximg"" src=""../pathtoimage/unlockedgray.png"" onClick=""var wcall=wicketSubmitFormById('i3', '../?wicket:interface=:2:new_loancase:application_form:header:img_unlock::IActivePageBehaviorListener:0:1&amp;wicket:ignoreIfNotActive=true', null,null,null, function() {return Wicket.$$(this)&amp;&amp;Wicket.$$('i3')}.bind(this));;""
id=""id"">


The solution is to explicit add the markupid, like this:
unlockImage.setOutputMarkupId(true);
unlockImage.setMarkupId(""mynewdistinctid"");


Would it not be better if wicket automatically generated another name for the id attribute than ""id""? Can this be done? Or is there a workaround I am not aware of?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-12 15:10:14.916,,,no_permission,,,,,,,,,,,202722,,,Tue Aug 26 15:21:54 UTC 2008,,,,,,0|i0kf93:,117288,,,,,,,,"12/Aug/08 12:14;asgaut;Here is someone who had the same problem, posted recently:
http://www.nabble.com/Wicket-1.4m3---AjaxButton,-AjaxSubmitLink-in-ModalWindow-in-IE-7-Problem---td18912755.html","12/Aug/08 15:10;ivaynberg;can you provide a quickstart please? looking at the code in component#getmarkupid(boolean) it looks like the id will always have a number appended to it, so wicket should never generate ""id"" id, but rather ""id0"" id...","13/Aug/08 06:12;asgaut;Before I provide a quickstart, I would like to mention that I am running Wicket version 1.3.3. Is this number appending something new in 1.3.4?","13/Aug/08 06:19;ivaynberg;i am not sure, you should try 1.3.4 and the latest snapshot as well...","21/Aug/08 12:33;asgaut;Checked the 1.3.4 code, the problem still remains.

I debugged through the method:
public String getMarkupId(boolean createIfDoesNotExist) in the class Component.java

...and found the bug. When Wicket executes this piece of code:
String markupIdPostfix = Integer.toHexString(generatedMarkupId).toLowerCase();

You will get ""d"" returned when 13 is the generatedMarkupId number. The method will then finally return ""id"" as the markupId!

10 will return ""a"", 11 will return ""b"", 12 will return ""c"" and so on. 

Why do you hex the numbers? 

And how can we get around this? We are going into production with our web application and need a fix/workaround as soon as possible.","25/Aug/08 19:54;ivaynberg;in 1.3 branch and trunk the prefix is ""id"" not ""i"" so this should no longer happen","26/Aug/08 06:08;asgaut;Okay, thanks. When is the release date for that fix? Currently our fix is to overwrite the Component class and remove the hexing. That worked.

Could you tell me why you use the toHexString method please? Why not just convert the number over to a string? Is it just to avoid long numbers? Just curious.","26/Aug/08 15:21;ivaynberg;for a release date you should ask on the list

re hexing: yes, it is to shorten the id values",,,,,,,,,,,,,,,,
AbstractTransformerBehavior can't be added to a page,WICKET-1565,12394770,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,memeplex,memeplex,25/Apr/08 08:13,24/Aug/08 14:12,13/Mar/19 23:15,24/Aug/08 14:12,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"Fix:

leave just 

tag.put(""xmlns:wicket"", ""http://wicket.apache.org"");

in onComponentTag. And put the rest (response replacement) into beforeRender.

This is because onComponentTag is not called for pages.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-24 14:12:33.146,,,no_permission,,,,,,,,,,,202524,,,Sun Aug 24 14:12:33 UTC 2008,,,,,,0|i0kfsf:,117375,,,,,,,,"27/Apr/08 17:23;memeplex;See also https://issues.apache.org/jira/browse/WICKET-1566, which describes another issue with extending this behavior to pages.",24/Aug/08 14:12;jdonnerstag;fixed. Thanks.,,,,,,,,,,,,,,,,,,,,,,
NPE in EnclosureResolver,WICKET-1583,12395223,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jonl,jonl,02/May/08 20:34,24/Aug/08 13:44,13/Mar/19 23:15,24/Aug/08 13:44,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"
if you put a single wicket:container in a wicket:enclosure, it will NPE looking for a ""child"" attribute.  you can work around by either changing the container to a div (in which case it will correctly default to the single child) or by adding a child=""name"" attribute to the enclosure to explicitly specify the single child.

Caused by: java.lang.NullPointerException
	at org.apache.wicket.markup.resolver.EnclosureResolver.resolve(EnclosureResolver.java:59)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1324)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1476)
	at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:639)
	at org.apache.wicket.markup.html.panel.Panel.onComponentTagBody(Panel.java:112)
	at org.apache.wicket.Component.renderComponent(Component.java:2478)
	... 47 common frames omitted

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-24 13:44:36.081,,,no_permission,,,,,,,,,,,202542,,,Sun Aug 24 13:44:36 UTC 2008,,,,,,0|i0kfq7:,117365,,,,,,,,24/Aug/08 13:44;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
"When markup type is XML, getLocalizer().getString( ""xyz"", (WebPage) ) throws Exception",WICKET-1796,12402748,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,bgooren,bgooren,20/Aug/08 23:56,24/Aug/08 10:28,13/Mar/19 23:15,24/Aug/08 07:25,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"When using

@Override
    public String getMarkupType()
    {
        return ""xml"";
    }

in a webpage, I cannot use getLocalizer().getString( ""xyz"", this ) anymore. I traced it back to

Caused by: org.xml.sax.SAXParseException: Document root element ""order"", must match DOCTYPE root ""null"".

Apparently, the wicket localizer (org.apache.wicket.resource.loader.ComponentStringResourceLoader.loadStringResource, line 142) decides to look for an XML properties file. Normally, this would be ok. But now, since I have an XML file in place which is the markup for the webpage, localization breaks. Wicket thinks that my markup file is an XML properties file.

Right now it's either XML markup and no localization for that page, or HTML markup.",n/a,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-08-21 06:51:47.98,,,no_permission,,,,,,,,,,,97359,,,Sun Aug 24 10:28:36 UTC 2008,,,,,,0|i0kf7z:,117283,,,,,,,,"21/Aug/08 00:00;bgooren;Note: A workaround is available. I can put a <WebpageName>.properties file in place. As long as it contains all localized strings used in the webpage, it works.

Unfortunately, this means duplicating a lot of strings from my Application.properties into this secondary properties file.","21/Aug/08 06:51;jdonnerstag;It is a known problem. Localizer searches for *.properties and *.xml but doesn't know that it should it ignore the xml file if the markup type is xml as well. And we don't validate the <properties>.xml schema neither. The problem really is that Localizer for good reason (see mails in the archive) knows only about the component class, its locale, style and variant. Just the information needed to search for the file (properties or xml).

What are the options to fix it:
a) add the component markup type and forward it to the localizer as well. Thus telling localizer to ignore *.xml files. But wait: all *.xml files or just specific ones? For all combination of locales, style and variant?
b) define a xml namespace for xml properties files and only if present, localizer should handle it. If not exception are ignored (may be logged)

any other idea?","21/Aug/08 12:43;bgooren;a) tricky, as I expected. Of course, it should still be possible to have properties in an XML file when the markup type is XML.
b) that would mean you need to cache that the given XML file cannot be handled, to prevent it from being parsed/checked on every run. Not sure if you handle that case; I know you cache properties the other way around (on succesfully loading them).

My suggestion is this:
Put xml properties in files with a "".properties.xml"" extension and (combined with your option (a)) ignore "".xml"" when the markup type is XML.

As a purist (haha) I would even say: drop the simple "".xml"" extension for XML properties, and always put them in a "".properties.xml"" file. But unfortunately, that would break all existing applications out there using simple "".xml"" properties files.","24/Aug/08 07:25;jdonnerstag;Please see below for an example on how to configure another file extension for xml properties files. E.g. by changing it to ""xmlProperties"" any conflicts can be avoided.

	/**
	 * @throws Exception
	 */
	public void testRenderHomePage_3() throws Exception
	{
		IPropertiesFactory myFac = new MyPropertiesFactory(tester.getApplication());
		tester.getApplication().getResourceSettings().setPropertiesFactory(myFac);

		executeTest(XmlPage_3.class, ""XmlPageExpectedResult_3.xml"");
	}

	/**
	 * 
	 */
	private class MyPropertiesFactory extends PropertiesFactory
	{
		/**
		 * Construct.
		 * 
		 * @param application
		 */
		public MyPropertiesFactory(Application application)
		{
			super(application);

			getPropertiesLoaders().clear();
			getPropertiesLoaders().add(new PropertiesFilePropertiesLoader());
			getPropertiesLoaders().add(new XmlFilePropertiesLoader(""xmlProperties""));
		}
	}
",24/Aug/08 10:28;bgooren;Great solution! Thanks Juergen.,,,,,,,,,,,,,,,,,,,
Overflow when setting Expires header in WebResource ,WICKET-1777,12401777,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,sfussenegger,sfussenegger,06/Aug/08 13:00,06/Aug/08 15:27,13/Mar/19 23:15,06/Aug/08 15:27,1.3.4,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"problematic code:

response.setDateHeader(""Expires"", System.currentTimeMillis() + (getCacheDuration() * 1000));

getCacheDuration() * 1000 is an integer operation causing an overflow if getCacheDuration() is set to be > MAX_INT/1000 seconds (approx. 25 days) which is by far less than the w3c recommendation for ""never expires"": 

""To mark a response as ""never expires,"" an origin server sends an Expires date approximately one year from the time the response is sent. HTTP/1.1 servers SHOULD NOT send Expires dates more than one year in the future.""
http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21

changing getCacheDuration() to return long or forcing a long operation fixes the problem:

response.setDateHeader(""Expires"", System.currentTimeMillis() + getCacheDuration() * 1000L);",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202713,,,2008-08-06 13:00:26.0,,,,,,0|i0kf9r:,117291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Quickstart's archetype misses maven compiler configuration,WICKET-1776,12401758,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,miojo,miojo,06/Aug/08 06:35,06/Aug/08 06:40,13/Mar/19 23:15,06/Aug/08 06:40,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket-quickstart,,,,0,,,,,,,,"The pom.xml for Quickstart's archetype doesn't has the Maven Compiler Plugin configuration. This causes a compilation failure as Quickstart's source code is suited for Java 1.5

[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

WicketApplication.java:[22,13] generics are not supported in -source 1.3
(use -source 5 or higher to enable generics)
	public Class<HomePage> getHomePage()",Any,,,,,,,,,,,,,,,,,,06/Aug/08 06:36;miojo;archetype-compiler-plugin.patch;https://issues.apache.org/jira/secure/attachment/12387616/archetype-compiler-plugin.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202712,,,2008-08-06 06:35:25.0,,,,,,0|i0kf9z:,117292,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractRequestTargetUrlCodingStrategy improper user of URLEncoder.encode,WICKET-1627,12395941,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,donohoedigital,donohoedigital,13/May/08 16:10,03/Aug/08 14:52,13/Mar/19 23:15,03/Aug/08 14:52,1.3.1,1.3.2,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,1,,,,,,,,"The use of URLEncoder.encode is incorrect in this scenario.  The URLEncoder is meant for encoding query string values - not values that appear in the path portion of a URI.

Because the AbstractRequestTargetUrlCodingStrategy is used by other classes to encode values that appear in the path, problems can occur when that path has spaces.   For example, the parameter ""message with spaces and+some+pluses"" is encoded as follows in a URL:

http://localhost:8080/bugs/home/message/message+with+spaces+and%2Bsome%2Bpluses/

However, the resulting request.getServletPath() call returns this:

/home/message/message+with+spaces+and+some+plusses=bug/ 

Note that the + in the path are not turned back into spaces.  This is the correct behavior and is seen in both Tomcat and Jetty.

See the RFC (http://www.ietf.org/rfc/rfc2396.txt) for a full description of what should or should not be encoded.

	/**
	 * Url encodes a string
	 * 
	 * @param string
	 *            string to be encoded
	 * @return encoded string
	 */
	protected String urlEncode(String string)
	{
		try
		{
			return URLEncoder.encode(string, Application.get().getRequestCycleSettings()
					.getResponseRequestEncoding());
		}
		catch (UnsupportedEncodingException e)
		{
			log.error(e.getMessage(), e);
			return string;
		}

	}",Tomcat or Jetty (probably others),,,,,,,,,,,,,,,,,,18/May/08 22:06;donohoedigital;1627and1624.v4.patch;https://issues.apache.org/jira/secure/attachment/12382276/1627and1624.v4.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-13 19:14:42.682,,,no_permission,,,,,,,,,,,202581,,,Fri Aug 01 18:54:08 UTC 2008,,,,,,0|i0kfnr:,117354,,,,,,,,"13/May/08 19:14;jcompagner;ehmm if i have this param:

message=message with spaces and+some+plusses

i add that to an url. Then no matter what url coding strategy i am using
if i do later on:

PageParameters.getString(""message"") i want exactly this: ""message with spaces and+some+plusses"" as the value..

so how to encode that correctly?","13/May/08 19:37;donohoedigital;I have code working to fix this.  It is a bit involved - it took me all day to figure it out and I had to dig into the RFC2396 as well as jetty/tomcat source.


I'll post the code shortly.  I think there is another possible bug related to this area which I'll also note shortly.

The problem boils down to the fact that you have to URL encode differently based on whether it is a query string parameter (?foo=bar) or a path parameter (/foo/bar/). ","13/May/08 20:01;donohoedigital;Here is the patch which address both 1624 and 1627.  

I had to create a WicketURLEncoder and WicketURLDecoder to replace java.net.URLEncoder and java.net.URLDecoder respectively.

I search in the wicket project and replaced the usages with this new class.  I also deprecated the RequestUtils decode/encode API.

See the RFC http://www.ietf.org/rfc/rfc2396.txt for details of what is and is not allowed in URLs.  The main issue boils down to the encoding of spaces with '+' as is done by java.net.URLEncoder.  While this is okay for query parameters, it is not for the path portion of a URL.  The server will not decode +'s to spaces in a path component.

There are still some things that need to be addressed:

1) Hardcoding of ""UTF-8"" versus Application.get().getRequestCycleSettings().getResponseRequestEncoding()

There are many places (notably RequestCycle and RequestUtils) that hardcode UTF-8 when decoding  and encoding values.  Cleary this will cause an issue if the application's request encoding is not UTF-8.

2)  I think RequestCycle.urlFor has a bug in it.  I noted this in the comments.  Essentially, values are beeing URL-encoded and put into PageParameters.  This likely leads to double-encoding if a mount strategy is used.

I would request that developers with more experience in the code base review my changes and comment on #1 and #2 above.","14/May/08 15:57;donohoedigital;I've revised the patch:

1) Moved the fetching of the requerst/response encoding into the WicketURLEncoder/WicketURLDecoder.  I did this because every caller was doing it anyhow and it cleans up the code.

2) Removed hard-coded UTF-8 references used for encoding/decoding.  Now all classes use the application setting.","14/May/08 20:57;jcompagner;WebRequestCodingStrategy.
protected CharSequence encode(RequestCycle requestCycle,
		IListenerInterfaceRequestTarget requestTarget)

there we create an url without any encoding

for example i expected more test to fail this is for example an output StatelessStatefullUrlCodingStrategyTest 
and then the file: StatefulPage_QueryString_Result.html

there this is the result:

		<a href=""?wicket:bookmarkablePage=%3Aorg.apache.wicket.markup.html.autolink.Index"" wicket:id=""indexLink"">go to index</a>
			<a href=""?wicket:interface=:0:actionLink::ILinkListener::"" wicket:id=""actionLink"">Link clicked <span wicket:id=""linkClickCount"">0</span> times</a>
		<form action=""statefull?wicket:interface=%3A0%3Astatelessform%3A%3AIFormSubmitListener%3A%3A"" wicket:id=""statelessform"" method=""post"" id=""statelessform1""><div style=""display:none""><input type=""hidden"" name=""statelessform1_hf_0"" id=""statelessform1_hf_0"" /></div>


so you see the frist is a bookmarkable that seems to have encoded
the second is a call that goes through the above encode method and nothing is done
the third is a mount encoder that does encode the wicket:interface
Why is for example there : in wicket:interface not encoded but it is in the value? (%3A)

and the question is is it really needed? i like the clean ?wicket:interface=:0:actionLink::ILinkListener::

i guess we should make a few more test also with QueryCoding strategy where the mount has utf8? and params also have some stuff that needs to be encoded","14/May/08 21:29;donohoedigital;RFC 2396 states that the colon is a reserved symbol in query strings.  Thus, anything after a ? needs to have the colon encoded.  Anything prior to a ? can have a colon.

The WicketURLEncoder / WicketURLDecoder I created in the patch tries to capture these rules.

I'll have to look at the examples above.","15/May/08 07:31;jcompagner;hmm but that is horrible if a colon is encoded
because then the default wicket url (the redirect url) will be completely blown up.
and as far as i can see it works fine.
The strange thing is that colons in the url before the ? looks weird to me.. in the query it looks fine.","15/May/08 16:08;donohoedigital;The RFC says that a "":"" in the query string is reserved.   So, technically any wicket URL that passed a "":"" in the query string that is not encoded is in violation of the RFC.  Why the "":"" is reserved is not clear (the RFC is not specific, but I suspect it is due to the use of colon earlier in the path like http://foo:8080).  

What happens in practice is obviously another matter.  It clearly seems to work not encoded.  We could perhaps mark the ':' as not needing encoding in the WicketURLEncoder.QUERY_INSTANCE.  Will this cause problems in the future?  Unlikely.  However, does Wicket wish to violate the RFC purposefully?

Regardless of the disposition of the colon, there are clearly places where encoding is done inconsistently, incorrectly or perhaps the worst violation:  double-encoding.    There is a very real need to encode path components differently from query string components.  My patch attempts to lay the framework for the correct encoding logic by clearly having path and query encoding instances.

Perhaps other Wicket developers can comment here.  I've looked at the code a little more in-depth and there doesn't seem to be a centralized place that path/query encoding is done.  What is the history here?","15/May/08 18:13;donohoedigital;As an example of the inconsistency:

When I have a normal form in my page [form = new Form(...)], the action gets output as follows:

    action=""?wicket:interface=:1:form::IFormSubmitListener::""

When I make the change to [form = new StatelessForm(...)], changing nothing else, the action changes to:

    action=""search/-/-/0?wicket%3Ainterface=%3A1%3Aform%3A%3AIFormSubmitListener%3A%3A""

Aside from the ""search/-/-/0"" addition, which is expected due to the mount strategy I'm using, the query string is URL encoded.","15/May/08 18:32;donohoedigital;I strongly suspect that this bug:

https://issues.apache.org/jira/browse/WICKET-1580

is closely related.","15/May/08 20:27;donohoedigital;I'm working on a test to show how the four types of forms behave (all combinations of Form/Statelessform  with GET/POST):

RUNNING: org.apache.wicket.integration.encoding.StatefulGetPage
    <form action="""" wicket:id=""form"" id=""form1"" method=""get"">
    <input type=""hidden"" name=""form1_hf_0"" id=""form1_hf_0"" />
    <input type=""hidden"" name=""wicket:interface"" value="":0:form::IFormSubmitListener::"" />

RUNNING: org.apache.wicket.integration.encoding.StatefulPostPage
    <form action=""?wicket:interface=:1:form::IFormSubmitListener::"" wicket:id=""form"" id=""form2"" method=""post"">
    <input type=""hidden"" name=""form2_hf_0"" id=""form2_hf_0"" />

RUNNING: org.apache.wicket.integration.encoding.StatelessGetPage
    <form action="""" wicket:id=""form"" id=""form3"" method=""get"">
    <input type=""hidden"" name=""form3_hf_0"" id=""form3_hf_0"" />
    <input type=""hidden"" name=""wicket:bookmarkablePage"" value=""%3Aorg.apache.wicket.integration.encoding.StatelessGetPage"" />
    <input type=""hidden"" name=""wicket:interface"" value=""%3A2%3Aform%3A%3AIFormSubmitListener%3A%3A"" />

RUNNING: org.apache.wicket.integration.encoding.StatelessPostPage
    <form action=""?wicket:bookmarkablePage=%3Aorg.apache.wicket.integration.encoding.StatelessPostPage&amp;wicket:interface=%3A3%3Aform%3A%3AIFormSubmitListener%3A%3A"" wicket:id=""form"" id=""form4"" method=""post"">
    <input type=""hidden"" name=""form4_hf_0"" id=""form4_hf_0"" />

As you can see, sometimes the wicket:interface value is url-encoded; other times it is not.  In the Stateless Get example, the wicket:interface is incorrectly URL encoded (it should not be because the browser does a 2nd URL-encode when submitting which causes BUG 1580).  It should be HTML escaped however.","16/May/08 13:24;donohoedigital;So this is the most up-to-date RFC on the topic:

http://tools.ietf.org/html/rfc3986#section-3.4

This version also seems to indicate that the colon is reserved, but the query definition doesn't make explicit use of it, so I think it is safe to use the : in the query without URL-encoding...","16/May/08 20:37;donohoedigital;Ok, I've create a patch and fixed all the test cases.  Prior to this pach, Wicket was inconsistent about when it encoded query params.  For example, there were many instances where you would get

  &lta href=""?wicket:bookmarkablePage=%3Aorg.apache.wicket.markup.html.link.XmlPage"">Home</a>

Note the : before the = and the %3A after.

This patch makes everything totally consistent.  I had to adjust the expected results for several unit tests.

So, the summary of changes:

1) New WicketURLEncoder and WicketURLDecoder classes with static instances for QUERY and PATH components.
2) Consistent and correct usage of these classes.  I think I've found every place in the code and use the appropriate one based on case.
3) Fixed the double-unencoding of the servlet path.
4) Fixed the double-encoding of some query params in requestCycle.urlFor
5) Fixed incorrect Form hidden field encoding
",18/May/08 22:06;donohoedigital;Minor change to patch - updated WicketURLEncoder to encode ; after I realized it is used in paths to separate jsession-id.  Also made class more subclassable.,"19/May/08 22:52;jcompagner;i applied the patch. what i still find strange is that we still have places where we dont encode stuff like at least 2 encode methods of WebRequestCodingStrategy, i guess we also need to look at that a bit more",20/May/08 02:34;donohoedigital;Thanks Johan.  I'll take a look at that class to see if I can offer any insight.,06/Jul/08 13:05;dashorst;Moved to next milestone release.,"31/Jul/08 06:19;ivaynberg;doug, are we ready to close this and 1624?",01/Aug/08 18:54;donohoedigital;Yes.,,,,,
Generify PropertyColumn,WICKET-1756,12400933,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,sualeh,sualeh,24/Jul/08 17:54,28/Jul/08 18:41,13/Mar/19 23:15,28/Jul/08 18:40,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket-extensions,,,,0,,,,,,,,"PropertyColumn overrides populateItem incorrectly. PropertyColumn has:
public void populateItem(Item item, String componentId, IModel model)

whereas ICellPopulator has:
	void populateItem(final Item<ICellPopulator<T>> cellItem, final String componentId,
		final IModel<T> rowModel);

This makes it hard to extend PropertyColumn.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-28 17:26:15.12,,,no_permission,,,,,,,,,,,202695,,,Mon Jul 28 18:26:41 UTC 2008,,,,,,0|i0kfb3:,117297,,,,,,,,"28/Jul/08 17:26;ivaynberg;sorry, dont really see what the problem is...","28/Jul/08 18:26;sualeh;When I try to override PropertyColumn, I get the following Eclipse compiler exception:

Name clash: The method populateItem(Item<ICellPopulator<Bug>>, String, IModel<Bug>) of type new BugsTable.ModelPropertyColumn<Bug>(){} has the same erasure as populateItem(Item, String, IModel) of type PropertyColumn<T> but does not override it",,,,,,,,,,,,,,,,,,,,,,
Allow Access to AutoCompleteTextField AutoCompleteBehavior,WICKET-1736,12399805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,whoover.nemours,whoover.nemours,08/Jul/08 11:43,28/Jul/08 18:26,13/Mar/19 23:15,28/Jul/08 18:24,1.3.4,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"Currently there is no easy way to access the AutoCompleteBehavior of the AutoCompleteTextField. This is useful when dynamically enabling/disabling the behavior (among other reasons). 

The current code is:
{code}
	public AutoCompleteTextField(String id, IModel model, Class type,
		IAutoCompleteRenderer renderer, AutoCompleteSettings settings)
	{
		super(id, model, type);
		// this disables Firefox autocomplete
		add(new SimpleAttributeModifier(""autocomplete"", ""off""));

		add(new AutoCompleteBehavior(renderer, settings)
		{

			private static final long serialVersionUID = 1L;

			protected Iterator getChoices(String input)
			{
				return AutoCompleteTextField.this.getChoices(input);
			}

		});
	}
{code}

One solution to this is to extract the creation of the AutoCompleteBehavior to a method:
{code}
	public AutoCompleteTextField(final String id, final IModel model, final Class<?> type, final IAutoCompleteRenderer renderer, final AutoCompleteSettings settings) {
		super(id, model, type);
		// this disables Firefox autocomplete
		add(new SimpleAttributeModifier(""autocomplete"", ""off""));

		final AutoCompleteBehavior autoCompleteBehavior = createAutoCompleteBehavior(renderer, settings);
		if (autoCompleteBehavior == null) {
			throw new NullPointerException(""Auto complete behavior cannot be null"");
		}
		add(autoCompleteBehavior);
	}

	protected AutoCompleteChoiceBehavior createAutoCompleteBehavior(final IAutoCompleteRenderer renderer, final AutoCompleteSettings settings) {
		return new AutoCompleteChoiceBehavior(renderer, settings);
	}

	public class AutoCompleteChoiceBehavior extends AutoCompleteBehavior {
		public AutoCompleteChoiceBehavior(final IAutoCompleteRenderer renderer, final AutoCompleteSettings settings) {
			super(renderer, settings);
		}
		protected final Iterator<?> getChoices(final String input) {
			return AbstractAutoCompleteTextField.this.getChoices(input);
		}
	}
{code}",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202675,,,2008-07-08 11:43:11.0,,,,,,0|i0kfdb:,117307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IncompatibleClassChangeError  in FileChannelPool,WICKET-1757,12401081,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,adrienleroy,adrienleroy,26/Jul/08 13:05,26/Jul/08 17:59,13/Mar/19 23:15,26/Jul/08 17:59,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,wicket,,,,0,,,,,,,,"Hello,
I'am actually starting a new project using wicket and spring, i originally started with wicket-1.3.4 and everything was working properly.
Yesterday I decided to migrate to wicket-1.4-m3 an after migrating my sources files to use Generic and compiling properly, I experience the following issue deploying the application :

ERROR: 2008-07-26 14:47:07,451: StandardContext: Exception starting filter CadeauApplication
java.lang.IncompatibleClassChangeError
        at org.apache.wicket.protocol.http.pagestore.FileChannelPool.<init>(FileChannelPool.java:76)
        at org.apache.wicket.protocol.http.pagestore.DiskPageStore.<init>(DiskPageStore.java:501)
        at org.apache.wicket.protocol.http.pagestore.DiskPageStore.<init>(DiskPageStore.java:605)
        at org.apache.wicket.protocol.http.pagestore.DiskPageStore.<init>(DiskPageStore.java:614)
        at org.apache.wicket.protocol.http.WebApplication.newSessionStore(WebApplication.java:624)
        at org.apache.wicket.Application.internalInit(Application.java:947)
        at org.apache.wicket.protocol.http.WebApplication.internalInit(WebApplication.java:521)
        at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:558)
        at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:221)
        at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:302)
        at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:78)
        at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3635)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4222)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:760)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:740)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:544)
        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:831)
        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:515)
        at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1231)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:457)
        at com.sun.jmx.mbeanserver.DynamicMetaDataImpl.invoke(DynamicMetaDataImpl.java:213)
        at com.sun.jmx.mbeanserver.MetaDataImpl.invoke(MetaDataImpl.java:220)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:815)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:784)
        at org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1394)
        at org.apache.catalina.manager.HTMLManagerServlet.doPost(HTMLManagerServlet.java:217)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:525)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:174)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:874)
        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)
        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)
        at java.lang.Thread.run(Thread.java:595)

I looked into FileChannelPool source file and the error seems to come with the current line in the class constructor when logging:

 log.debug(""Starting file channel pool with capacity of "" + capacity + "" channels"");

thanks for your help

","I'am using Gnu/linux, Gentoo flavor with java version ""1.5.0_16"", I 'am using netbeans and maven for my project. The application use spring and hiberntate.  The application server is tomcat 5.5.26. The log4j librairies are log4j-1.2.14.jar,slf4j-api-1.2.jar,slf4j-log4j12-1.5.2.jar
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-26 15:18:50.055,,,no_permission,,,,,,,,,,,202696,,,Sat Jul 26 17:59:38 UTC 2008,,,,,,0|i0kfav:,117296,,,,,,,,"26/Jul/08 15:18;jcompagner;do you get this everytime including when cleanin up your work dir of tomcat?

It looks to me that it wants to (de)serialize something where the class now is changed for. If you start clean it should work fine.

Maybe matej can also have a look
It looks weird to me that it happens on that log line..","26/Jul/08 17:19;adrienleroy;My work dir is clean each time i try to deploy the application.

I tried to deploy the application on another computer and this time i get this error:

ERROR: 2008-07-26 18:22:17,591: StandardContext: Exception starting filter CadeauApplication
java.lang.IncompatibleClassChangeError: Class org.apache.log4j.Logger does not implement the requested interface org.slf4j.Logger

I also recompile wicket-1.4-m3 by removing the line in FileChannelPool.java and get a similar error in Application.java when trying to log.


","26/Jul/08 17:59;adrienleroy;I found the origin of the issue, 

i am using nlog4j instead of log4j, but even by adding an exclusion for log4j in my pom.xml files, my application was package with log4j and nlog4j.
because there were two logging services i had this issue, i remove nlog4j dependencies and add a new one for log4j and my application is deploying normally.

I have to check on the maven side for this.
thanks for your help",,,,,,,,,,,,,,,,,,,,,
AjaxLink doesn't work for Wicket 1.3.3,WICKET-1529,12393871,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tomasz.prus,tomasz.prus,14/Apr/08 10:25,18/Jul/08 04:27,13/Mar/19 23:15,18/Jul/08 04:27,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,I have AjaxLink which works good in Wicket 1.3.2 but doens't work whe i change version to 1.3.3. ,"Windows, Jetty 6.1.6",,,,,,,,,,,,,,,,,,14/Apr/08 10:28;tomasz.prus;SearchPanel.html;https://issues.apache.org/jira/secure/attachment/12380056/SearchPanel.html,14/Apr/08 10:28;tomasz.prus;SearchPanel.java;https://issues.apache.org/jira/secure/attachment/12380055/SearchPanel.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-07-18 04:27:24.943,,,no_permission,,,,,,,,,,,202491,,,Fri Jul 18 04:27:24 UTC 2008,,,,,,0|i0kfvz:,117391,,,,,,,,18/Jul/08 04:27;ivaynberg;please reopen if still broken in 1.3.4 and provide a quickstart,,,,,,,,,,,,,,,,,,,,,,,
"When used in inherited markup, <wicket:link> tries to load a class with an illegal name",WICKET-1731,12399627,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,wboyce@panix.com,wboyce@panix.com,04/Jul/08 17:22,15/Jul/08 00:27,13/Mar/19 23:15,13/Jul/08 15:32,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"Here are the classes involved.  Each one has a .html markup file.  The actual app is more complicated than this, but I've reduced it to a simple example.

myapp.TemplatePage: Page with standard header that is extended by all other pages.  Includes this autolink:

    <wicket:link><a href=""HomePage.html"">Home</a></wicket:link>

myapp.HomePage: Main page of the application.
myapp.login.LoginPage: Requests a user's login and password.

When I try to access LoginPage, I get a NoClassDefFoundError:  IllegalName: myapp/HomePage

I have determined why this is occurring.  AutoLinkResolver resolves autolinks to classes first by trying to load a class relative to the page's package, then relative to the parent page's package.  However, the first time it calls Packages.absolutePath, it passes the output to Strings.replaceAll to replace forward slashes with periods, while the second time, it doesn't, which leads to the IllegalName error.

The solution is to invoke the class-name-mangling logic from AutoLinkResolver.java lines 396-400 again after the call to Packages.absolutePath on line 428.

Also, I'm suspicious of the logic for handling parent markup containers in AutoLinkResolver.  It uses ""if"" instead of ""while.""  What if the autolink was two levels up in the inheritance hierarchy?  I think that it should walk the parent links until it finds a null, not just check the first one.","Mac OS X 10.4.11, Java 1.5.0_13, Tomcat 6.0.16",,,,,,,,,WICKET-1634,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-14 09:55:31.427,,,no_permission,,,,,,,,,,,202670,,,Tue Jul 15 00:27:24 UTC 2008,,,,,,0|i0kfdz:,117310,,,,,,,,"14/Jul/08 09:55;roland.huss;WICKET-1634 is the same issue (including a patch), so this one can be closed, too",14/Jul/08 09:56;roland.huss;very same issue,"15/Jul/08 00:27;wboyce@panix.com;How about my comment at the end?

""Also, I'm suspicious of the logic for handling parent markup containers in AutoLinkResolver. It uses 'if' instead of 'while.' What if the autolink was two levels up in the inheritance hierarchy? I think that it should walk the parent links until it finds a null, not just check the first one.""


",,,,,,,,,,,,,,,,,,,,,
ClassName needs conversion from Path to dotted notation in AutoLinkResolver,WICKET-1634,12396033,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,roland.huss,roland.huss,14/May/08 16:09,14/Jul/08 14:55,13/Mar/19 23:15,14/Jul/08 14:55,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,,,,,0,,,,,,,,"Current svn snapshot contains the following code in AutoLinkResolver.newAutoComponent:

                                        if (clazz != null)
					{
						// Href is relative. Resolve the url given relative to
						// the current page
						className = Packages.absolutePath(clazz, pathInfo.path);

						try
						{
							clazz = defaultClassResolver.resolveClass(className);
							return new AutolinkBookmarkablePageLink(autoId, clazz,
								pathInfo.getPageParameters(), pathInfo.anchor);
						}
						catch (ClassNotFoundException ex)
						{
							log.warn(""Did not find corresponding java class: "" + className);
							// fall through
						}
					}

This obviously fails since Packages.absolutePath() return a path whereas the class resolver expects a classname. Simply add the conversion as in the beginning of this method (or even better, extrract this conversion into an utility method)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-14 14:55:18.207,,,no_permission,,,,,,,,,,,202588,,,Mon Jul 14 14:55:18 UTC 2008,,,,,,0|i0kfnb:,117352,,,,,,,,14/Jul/08 14:55;ivaynberg;fixed via WICKET-1731,,,,,,,,,,,,,,,,,,,,,,,
ResourceStreamRequestTarget.configure set wrong ContentLength for non-ascii characters,WICKET-1704,12398429,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vklidu,vklidu,17/Jun/08 13:55,13/Jul/08 15:21,13/Mar/19 23:15,13/Jul/08 15:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"CharSequence export = DataBase.getInstance().exportDiscounts();
ResourceStreamRequestTarget target = new ResourceStreamRequestTarget(new StringResourceStream(export, ""text/plain""));
target.setFileName(""discounts.csv"");
RequestCycle.get().setRequestTarget(target);

If export contains non-ascii characters. e.g. ěščřžýáíé, is wrong set up the ContentLength of the response. ContentLength is set up with number of characters, but must be set up with number of bytes. Response on output is not all.

Be sure that byte[].length != ""čřžýá"".length()



ResourceStreamRequestTarget.java method configure:

// WICKET-473 Allow IResourceStream.length() to return -1
		long len = resourceStream.length();
		if (len >= 0)
		{
			// and the content length
			response.setContentLength(len);
		}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-17 17:32:58.867,,,no_permission,,,,,,,,,,,202647,,,Sun Jul 06 13:05:17 UTC 2008,,,,,,0|i0kfgv:,117323,,,,,,,,"17/Jun/08 17:24;vklidu;Thanks for fast fix. But it isnt correct, because array of bytes depends on charset.
Better is

               if (getCharset() != null) {
                    try {
                        return getString().getBytes(getCharset().name()).length;
                    } catch (UnsupportedEncodingException e) {
                        throw someException...
                    }
                } else {
                    return getString().getBytes().length;
                }","17/Jun/08 17:32;ivaynberg;thanks, you couldve just provided a patch from the get go :)","30/Jun/08 15:24;vklidu;The same bug in class org.apache.wicket.util.resource.StringBufferResourceStream. Maybe others, that extends org.apache.wicket.util.resource.AbstractStringResourceStream or generally implements IStringResourceStream.",06/Jul/08 13:05;dashorst;Moved to next milestone release.,,,,,,,,,,,,,,,,,,,,
remove obsolete check from LocalizedImageResource,WICKET-1728,12399525,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,03/Jul/08 09:25,11/Jul/08 15:48,13/Mar/19 23:15,11/Jul/08 15:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"LocalizedImageResource contains an unnecessary check for parent-relative resources that is not needed anymore:

  WicketRuntimeException: ""The 'src' attribute must not contain 
  any of the following strings: '..', './', '/.': ........

Since WICKET-1428 was successfully closed wicket can handle parent-relative (..) links (in both 1.3 and 1.4).

So please remove this check:

  org.apache.wicket.markup.html.image.resource.LocalizedImageResource:

  private void loadStaticImage(final String path)
  {
	  if ((path.indexOf("".."") != -1) || (path.indexOf(""./"") != -1) || (path.indexOf(""/."") != -1))
	  {
		  throw new WicketRuntimeException(
			  ""The 'src' attribute must not contain any of the following strings: '..', './', '/.': path="" + path);
	  }

      // .... SNIP ....
  }


I did several tests with 1.3 and 1.4. Everything works like a charm now (once that nasty check is away :-)",,,,,,,,,,,,,,,,,,,11/Jul/08 08:11;pete;wicket-1728-for-1.3.x.patch;https://issues.apache.org/jira/secure/attachment/12385846/wicket-1728-for-1.3.x.patch,11/Jul/08 08:11;pete;wicket-1728-for-1.4.x.patch;https://issues.apache.org/jira/secure/attachment/12385847/wicket-1728-for-1.4.x.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202667,,,Fri Jul 11 08:11:22 UTC 2008,,,,,,0|i0kfef:,117312,,,,,,,,11/Jul/08 08:11;pete;I uploaded the patches for 1.3.x and 1.4.x including a corresponding wicket test case,,,,,,,,,,,,,,,,,,,,,,,
Clicking on AjaxLink (when used on a page mounted through QueryStringUrlCodingStrategy) after session-expiry throws a NullPointerException in IE and Safari (i.e. in BookmarkableListenerInterfaceRequestTarget.processEvents),WICKET-1724,12399401,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,mfarhans,mfarhans,01/Jul/08 21:28,03/Jul/08 00:35,13/Mar/19 23:15,02/Jul/08 17:33,1.3.3,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-M3,,wicket,,,,0,,,,,,,,"Clicking an AjaxLink (after session-expiry period) on a page mounted through QueryStringUrlCodingStrategy results in a NullPointerException in 

Root cause:java.lang.NullPointerException     
at org.apache.wicket.request.target.component.BookmarkableListenerInterfaceRequestTarget.processEvents(BookmarkableListenerInterfaceRequestTarget.java:131)   
at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:91)     
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1171)     
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1248)     
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1349)     
at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)     
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:387)     
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:199)     
at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1088)     
at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)     
at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)     
at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)     
at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:729)     
at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)    
at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)  
at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)   
at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)     
at org.mortbay.jetty.Server.handle(Server.java:324)    
at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)    
at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)   
at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)    
at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)     
at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)  
at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)   
at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)
","JDK 5.0, RHEL 4",,,,,,,,,,,,,,,,,,01/Jul/08 21:31;mfarhans;myproject.zip;https://issues.apache.org/jira/secure/attachment/12385054/myproject.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-07-02 17:33:01.556,,,no_permission,,,,,,,,,,,202663,,,Thu Jul 03 00:35:11 UTC 2008,,,,,,0|i0kfev:,117314,,,,,,,,"01/Jul/08 21:31;mfarhans;Attached is the quick-start project, with HomePage containing the AjaxLink and a Form/textfield. The homepage.class is mounted through QueryStringURLCodingStrategy. Also the session-timeout period in the web.xml has been set to 1 minute.

",02/Jul/08 03:36;mfarhans;The issue occurs not just with QueryStringURLCodingStrategy but with all extensions of BookmarkablePageRequestTargetUrlCodingStrategy...,"02/Jul/08 04:17;mfarhans;Let me add, something i noticed lately is that 1 out of 5 times it works fine and the SessionExpiry page is shown..",02/Jul/08 17:33;knopp;I've committed fix to both 1.3 and current trunk. Please test and if the problem persist reopen the issue.,"03/Jul/08 00:35;mfarhans;Thanks for the quick fix, Matej. Verified on 1.3 branch and it looks good, both in Safari and IE.",,,,,,,,,,,,,,,,,,,
ModalWindow JavaScript does not restore tabIndexes correctly on IE 6,WICKET-1713,12398960,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,thrantal,thrantal,25/Jun/08 03:59,27/Jun/08 23:41,13/Mar/19 23:15,25/Jun/08 04:07,1.3.3,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-M3,,wicket-extensions,,,,0,,,,,,,,"Attached quickstart reproduces the problem before the fix. The problem is that if there are many input elements and some of them have tabindexes set, they are not restored properly when the modal window is closed.

It seems that when you do getElementsByTagName, IE 6 does not always return them in the same order.

I fixed this by using a custom javascript object property ""hiddenTabIndex"" to store the information directly to the manipulated element instead of the array. Object-oriented Javascript programming to save the world :)

It would be great if Matej and other javascript / ModalWindow experts could have a look!","IE 6, tested on Windows XP and CrossOver on Linux",,,,,,,,,,,,,,,,,,26/Jun/08 03:29;thrantal;modal-window-tabindex-problem.zip;https://issues.apache.org/jira/secure/attachment/12384732/modal-window-tabindex-problem.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-06-27 23:41:57.985,,,no_permission,,,,,,,,,,,202654,,,Fri Jun 27 23:41:57 UTC 2008,,,,,,0|i0kfg7:,117320,,,,,,,,"25/Jun/08 04:00;thrantal;To reproduce the problem, move from one text field to another with tab on IE, click ""Show modal window"", close the modal window, and try moving from one text field to another with tab again","25/Jun/08 04:07;thrantal;Interesting, I tried svn.eu.apache.org for the 1.3.x commit, but it seems like it does not come up in the Subversion commits tab. Maybe it's better not to use the EU mirror then.","25/Jun/08 04:08;thrantal;Ah there it is, just with some delay.",26/Jun/08 03:29;thrantal;A quickstart reproducing a further problem that occurs when elements with stored tabindexes are updated via ajax,26/Jun/08 03:32;thrantal;Would be great if you could check if this makes sense,"27/Jun/08 23:41;knopp;Hi, sorry for late response. Looks good to me.",,,,,,,,,,,,,,,,,,
PackagedTextTemplate does not load resource from application resource stream locator,WICKET-1714,12399033,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ritesht,ritesht,25/Jun/08 20:46,25/Jun/08 21:12,13/Mar/19 23:15,25/Jun/08 21:12,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-M3,,wicket,,,,0,,,,,,,,"Here is my post to the dev list...

file a jira issue

-igor

On Wed, Jun 25, 2008 at 11:23 AM, Ritz123 <ritesh.trivedi@...> wrote:

>
> I did some investigation and seems like there is a bug.
>
> PackagedTextTemplate @line:92 is creating a new ResourceStreamLocator()
> instead of using the one from the application. This is causing resources to
> be not found if you have custom resource stream loader registered with the
> application.
>
> line 92: private static final IResourceStreamLocator streamLocator = new
> ResourceStreamLocator();
>
> Can Wicket dev confirm?
>
>
> Ritz123 wrote:
>>
>> Hi,
>>
>> I am trying to use PackagedTextTemplate to load the template, but seems
>> like its not looking for the resource in the application registered
>> resource stream locator. I get resource not found exception.
>>
>> HeaderContributor.forCss and forJavascript has worked fine and has found
>> resource in the folders for application stream location without any
>> issues.
>>
>>
>>
>
> --
> View this message in context: http://www.nabble.com/Re%3A-PackagedTextTemplate-does-not-load-resource-from-application-resource-stream-locator----BUG---tp18116540p18116540.html
> Sent from the Wicket - Dev mailing list archive at Nabble.com.
> ",Any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202655,,,2008-06-25 20:46:36.0,,,,,,0|i0kffz:,117319,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GuiceComponentInjector mishandles static fields,WICKET-1705,12398437,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,cowwoc,cowwoc,17/Jun/08 16:27,20/Jun/08 16:58,13/Mar/19 23:15,20/Jun/08 16:58,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket-guice,,,,0,,,,,,,,"GuiceComponentInjector mistakenly wraps static fields with serializable proxies. These CGLIB proxies impose limitations (must have default constructor, may not have final methods, etc) on fields which are not strictly necessary. The new implementation allows the use of Binder.requestStaticInjection() which is more flexible.",,,,,,,,,,,,,,,,,,,18/Jun/08 05:06;cowwoc;guice2.patch;https://issues.apache.org/jira/secure/attachment/12384179/guice2.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202648,,,Wed Jun 18 05:41:34 UTC 2008,,,,,,0|i0kfgn:,117322,,,,,,,,"18/Jun/08 05:06;cowwoc;- GuiceComponentInjector no longer injects into static fields (this was breaking Binder.requestStaticInjection())
- Error reports are now more verbose","18/Jun/08 05:41;cowwoc;Here is a more detailed explanation of the problem:

http://google-guice.googlecode.com/files/Guice%201.0%20User%27s%20Guide.pdf page 19/22 states ""Guice never performs static injection automatically. You must use Binder to explicitly request that the Injector inject your static members after startup:

binder.requestStaticInjection(User.class);""

and the example code right above this paragraph clearly shows that they're talking about static fields marked with @Inject. The problem is that the existing implementation of GuiceComponentInjector does not check whether a field is static or not before injecting its value. This patch adds the necessary check so only non-static fields are injected.",,,,,,,,,,,,,,,,,,,,,,
AjaxFormComponentUpdatingBehavior not working correctly when using IE 7,WICKET-1646,12396438,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,frankbille,jfowler06,jfowler06,20/May/08 18:41,18/Jun/08 21:47,13/Mar/19 23:15,18/Jun/08 21:35,1.3.4,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,3,,,,,,,,"AjaxFormComponentUpdatingBehavior works with Firefox, but doesn't work when using IE7.  
I also observed similar problems when using AjaxEventBehavior as well. 
The error returned via the ajax debug console was: ""Could not locate ajax transport. Your browser does not support the required XMLHttpRequest object or wicket could not gain access to it"".

Below is a simple example that should demonstrate the problem.

Example.java
============================================================
package example.page;

import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.markup.html.form.Form;
import org.apache.wicket.markup.html.form.TextField;
import org.apache.wicket.model.CompoundPropertyModel;
import org.apache.wicket.model.PropertyModel;

public class Example extends WebPage {
		 private int age;

		 public Example() {
		 		 Form form = new Form(""form"", new CompoundPropertyModel(this));
		 		 add(form);

		 		 final Label label = new Label(""label"", new PropertyModel(this, ""age""));
		 		 label.setOutputMarkupId(true);
		 		 add(label);

		 		 final TextField age = new TextField(""age"");
		 		 age.add(new AjaxFormComponentUpdatingBehavior(""onblur"") {

		 		 		 /**
		 		 		  * 
		 		 		  */
		 		 		 private static final long serialVersionUID = 1L;

		 		 		 protected void onUpdate(AjaxRequestTarget target) {
		 		 		 		 System.out.println(""onUpdate triggered"");
		 		 		 		 target.addComponent(label);
		 		 		 }

		 		 });
		 		 form.add(age);
		 }

		 public int getAge() {
		 		 return age;
		 }

		 public void setAge(int age) {
		 		 this.age = age;
		 }

}

Example.html
==================================================
<html>
<head>
		 <title>Test</title>
</head>
<body>

		 <div>
		 		 <label wicket:id=""label"">My Label Goes Here</label>
		 </div>
		 <form wicket:id=""form"">
		 		 <div>Age: <input type=""text"" wicket:id=""age"" /></div>
		 		 <div>
		 		 		 <input type=""submit"" value=""Submit"" />
		 		 </div>
		 </form>
</body>
</html>","OS: Windows XP SP2
ServletContainer: Jetty 6.1.6
Browser: IE 7",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-20 20:15:40.947,,,no_permission,,,,,,,,,,,202598,,,Wed Jun 18 21:35:59 UTC 2008,,,,,,0|i0kflz:,117346,,,,,,,,"20/May/08 20:15;jcompagner;i think that you have security settings or policy settings in IE that is a bit to restrictive

all examples i test for IE7 work fine.","21/May/08 15:48;jfowler06;I determined that the cause of my issue was related to a browser setting. Native XMLHttp was not enabled. 
Unfortunately, this option is disabled for everyone in my company by default.  Would it be possible to try and use
native XMLHttp for IE7 by default, but if the XMLHttpRequest object is null fallback to the old approach? The code in question
is in wicket-ajax.js (see snippet below).

/**
 * The Ajax class handles low level details of creating and pooling XmlHttpRequest objects,
 * as well as registering and execution of pre-call, post-call and failure handlers.
 */
 Wicket.Ajax = { 
 	// Creates a new instance of a XmlHttpRequest
	createTransport: function() {
	    var transport = null;
	    if (Wicket.Browser.isIELessThan7() && window.ActiveXObject) {
	        transport = new ActiveXObject(""Microsoft.XMLHTTP"");
	    } else if (window.XMLHttpRequest) {
	        transport = new XMLHttpRequest();
	    } 
	    
	    if (transport == null) {
	        Wicket.Log.error(""Could not locate ajax transport. Your browser does not support the required XMLHttpRequest object or wicket could not gain access to it."");
	    }    
	    return transport;
	},
","03/Jun/08 17:58;brian.diekelman;Unfortunately the code that fixed Jarmar's IE7 broke ours.

We're on a similarly locked down configuration of IE 7 within our organization.  In this case this is going to break in any large organization that has ActiveX objects disabled.

Removing 'Wicket.Browser.isIELessThan7() &&' (as in Wicket 1.3.3) fixes the issue.

Because of how a lot of organizations lock down IE, it really should try as many options as possible before failing.  For instance, here's how a few ajax libraries do it:

MooTools:

return $try(function(){
  return new XMLHttpRequest();
}, function(){
  return new ActiveXObject('MSXML2.XMLHTTP');
});

- '$try' looks weird because it's a cross browser abstraction
- this will try to use a native XMLHttpRequest first, if that fails in any way it will revert to the ActiveXObject

JQuery:
// Create the request object; Microsoft failed to properly
// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available
var xhr = window.ActiveXObject ? new ActiveXObject(""Microsoft.XMLHTTP"") : new XMLHttpRequest();

- those comments are from the jQuery devs... maybe they know something we don't?  They get a lot more eyes on their ajax stuff than we do...
","03/Jun/08 18:14;brian.diekelman;So what about something like:


 Wicket.Ajax = {
  // Creates a new instance of a XmlHttpRequest
createTransport: function() {
var transport = null;

if (window.ActiveXObject) {
  transport = new ActiveXObject(""Microsoft.XMLHTTP"");
}

if (transport == null && window.XMLHttpRequest) {
  transport = new XMLHttpRequest();
}

if (transport == null) {
Wicket.Log.error(""Could not locate ajax transport. Your browser does not support the required XMLHttpRequest object or wicket could not gain access to it."");
}
return transport;
}, 


Still tries to default to ActiveX, but if it's not available reverts to native?","05/Jun/08 15:17;lfulton;This is what i currently do.  I followed microsofts documentation on how to fallback to using a ActiveX object if native XMLHTTP is disabled (http://msdn.microsoft.com/en-us/library/ms537505(VS.85).aspx) and simply added the following to wicket-ajax.js.  You just need to make sure this snippet is inserted before Wicket.Ajax = { ...  is called.  

/** 
 * Check to see if the native XMLHttpRequest has been disabled for IE7,
 * if so fallback to using the ActiveXObject.
 */
if (Wicket.Browser.isIE7() && !window.XMLHttpRequest) {
    window.XMLHttpRequest = function() {
        try {
            return new ActiveXObject('MSXML2.XMLHTTP.3.0');
        }
        catch (ex) {
            return null;
        }
    }
} 

I have been using this for awhile on our production server and have had no problems.  I hope this can be incorporated into 1.3.4.","05/Jun/08 17:25;brian.diekelman;Good info.  Thanks Lonnie.

I was concerned about compatibility of the MSXML object, so I looked this up: http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx

To keep it here for posterity:

- MSXML 6.0 - it is ""in the box"" on Vista and available for download on Win2k, XP, and 2003.  It has the best security, performance, reliability, and W3C conformance
- MSXML 3.0 is our preferred ""fallback"" - It is installed on every OS from a fully patched Win2k SP4 installation on up, so it requires ""zero-deployment"" and is serviced regularly with the OS
- MSXML 4.0 was released to the web about 5 years ago, but at this point has been superseded by MSXML 6.0 and is only intended to support legacy applications
- MSXML 5.0 for Microsoft Office Applications is purpose-built for Office applications and isn't intended for broad deployment.  Internet Explorer 7 actually has the MSXML5 components ""off-by-default"" in the Internet zone so your customers will get a goldbar for each MSXML5 control on a page if your code tries to instantiate it.  The best recommendation is to avoid MSXML5 in your web apps (only machines with Office 2003 or higher will have it, anyway.).","11/Jun/08 20:29;frankbille;Brian: The comment you made about JQuery is interesting. I have checked the jquery svn (http://dev.jquery.com/changeset/1627) and it points to this issue: 

http://dev.jquery.com/ticket/963
","11/Jun/08 22:53;brian.diekelman;Just in case that link dies later, the issue was that the 'file://' protocol with the IE7 native XMLHttpRequest doesn't work (and does work with the ActiveX object).

So I guess at this point, what reason is there to use the native implementation on IE7 other than if ActiveX is disabled?  I don't see any benefits.",11/Jun/08 23:53;knopp;What's the usecase of file:// URLs anyway? I don't really think such thing can work in any but the qute specific circumstances. ,"12/Jun/08 01:26;brian.diekelman;Oh, don't get me wrong.  I'm not saying the 'file://' issue is anywhere close to the showstopper in this case.  I personally couldn't imagine a scenario where I'd use that in a production application.

The issue is that right now we use either the native XMLHttpRequest or the ActiveX implementation.  I'm saying that 'either/or' isn't the right way to go.  We need to try to use the best one for the browser (based on capability detection, not browser sniffing), then fall back to the other if our first choice isn't available.

I referenced the jQuery example because it's simple and it works.  As of now the code checked into subversion doesn't work on a large number of computers (as posted above, anywhere with restricted IE settings).  On top of that, our stuff used to work until a fairly recent change that added the 'Wicket.Browser.isIE7() && ' between 1.3.3 and current trunk (I noticed it in 1.4-M1/M2).

I say at least revert back to the 1.3.3 code.  That didn't appear to have any compatibility issues and the changed code doesn't appear to have any benefits.","18/Jun/08 21:35;frankbille;It should work now, but it of cause needs to be tested on other browsers to make sure that we haven't introduced some new weirdness.",,,,,,,,,,,,,
org.apache.wicket.markup.html.CompressedPackageResource$CompressingResourceStream.cache needs to avoid being serialized,WICKET-1701,12398258,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,janne,drafkind,drafkind,13/Jun/08 20:13,13/Jun/08 21:21,13/Mar/19 23:15,13/Jun/08 21:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,0,,,,,,,,"I have approximately this code:

AjaxLink openCloseLink = new AjaxLink(""openCloseLink"");

openCloseLink.add(new Image(""icon"", new CompressedResourceReference(MyComponent.class, ""icon.gif"")));

The openCloseLink gets serialized during normal wicket operations, 
which causes a serialization error, see stacktrace below. 

My guess: the ""cache"" field needs to be marked ""transient"" in 
org.apache.wicket.markup.html.CompressedPackageResource$CompressingResourceStream

----
---- STACKTRACE BELOW!
----

ERROR - Error serializing object class com.traversetechnologies.dhs.gmo.schemaexporter.page.TestPage [object=[Page class = com.traversetechnologies.dhs.gmo.schemaexporter.page.TestPage, id = 0, version = 0, ajax = 3]]
org.apache.wicket.util.io.SerializableChecker$WicketNotSerializableException: Unable to serialize class: java.lang.ref.SoftReference
Field hierarchy is:
  0 [class=com.traversetechnologies.dhs.gmo.schemaexporter.page.TestPage, path=0]
    private java.lang.Object org.apache.wicket.MarkupContainer.children [class=[Ljava.lang.Object;]
      private org.apache.wicket.util.lang.Bytes org.apache.wicket.markup.html.form.Form.maxSize[1] [class=org.apache.wicket.markup.html.form.Form, path=0:myform2]
        private java.lang.Object org.apache.wicket.MarkupContainer.children [class=[Ljava.lang.Object;]
          private java.lang.Object org.apache.wicket.markup.html.form.FormComponent.validators[1] [class=com.traversetechnologies.dhs.gmo.schemaexporter.page.component.SelectableTree, path=0:myform2:mytree]
            private java.lang.Object org.apache.wicket.MarkupContainer.children [class=[Ljava.lang.Object;]
              private java.lang.Object org.apache.wicket.MarkupContainer.children[0] [class=com.traversetechnologies.dhs.gmo.schemaexporter.page.component.SelectableTree$3, path=0:myform2:mytree:allCheck]
                final org.apache.wicket.markup.repeater.RefreshingView com.traversetechnologies.dhs.gmo.schemaexporter.page.component.SelectableTree$3.val$rowView [class=com.traversetechnologies.dhs.gmo.schemaexporter.page.component.SelectableTree$2, path=0:myform2:mytree:row]
                  private java.lang.Object org.apache.wicket.MarkupContainer.children [class=[Ljava.lang.Object;]
                    private java.lang.Object org.apache.wicket.MarkupContainer.children[0] [class=org.apache.wicket.markup.repeater.Item, path=0:myform2:mytree:row:19]
                      private java.lang.Object org.apache.wicket.MarkupContainer.children [class=[Ljava.lang.Object;]
                        java.lang.Object org.apache.wicket.Component.data[0][1][1] [class=com.traversetechnologies.dhs.gmo.schemaexporter.page.component.SelectableTree$2$2, path=0:myform2:mytree:row:19:openCloseLink]
                          private java.lang.Object org.apache.wicket.MarkupContainer.children [class=org.apache.wicket.markup.html.image.Image, path=0:myform2:mytree:row:19:openCloseLink:icon]
                            private final org.apache.wicket.markup.html.image.resource.LocalizedImageResource org.apache.wicket.markup.html.image.Image.localizedImageResource [class=org.apache.wicket.markup.html.image.resource.LocalizedImageResource]
                              private org.apache.wicket.Resource org.apache.wicket.markup.html.image.resource.LocalizedImageResource.resource [class=org.apache.wicket.markup.html.CompressedPackageResource]
                                private final org.apache.wicket.util.resource.IResourceStream org.apache.wicket.markup.html.CompressedPackageResource.resourceStream [class=org.apache.wicket.markup.html.CompressedPackageResource$1]
                                  private java.lang.ref.SoftReference org.apache.wicket.markup.html.CompressedPackageResource$CompressingResourceStream.cache [class=java.lang.ref.SoftReference] <----- field that is not serializable
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:349)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:395)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:395)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:395)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:395)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:395)
        at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:618)
        at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:541)
        at org.apache.wicket.util.io.SerializableChecker.writeObjectOverride(SerializableChecker.java:687)
        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:322)
        at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:127)
        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:322)
        at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1100)
        at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:200)
        at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:814)
        at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:327)
        at org.apache.wicket.Session.requestDetached(Session.java:1391)
        at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1097)
        at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1368)
        at org.apache.wicket.RequestCycle.request(RequestCycle.java:500)
        at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:387)
        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:199)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.NotSerializableException: java.lang.ref.SoftReference
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1156)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
        at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:119)
        ... 23 more

",winxp sp2 - netbeans 6.1 - tomcat 6.0.16 - java 1.6,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-13 21:00:06.266,,,no_permission,,,,,,,,,,,202644,,,Fri Jun 13 21:21:55 UTC 2008,,,,,,0|i0kfh3:,117324,,,,,,,,13/Jun/08 21:00;janne;I'll fix this but are you sure it's a good idea to compress gif images instead of using regular PackageResource?,13/Jun/08 21:21;janne;fixed,,,,,,,,,,,,,,,,,,,,,,
NPE in RequestLogger,WICKET-1699,12398176,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,falcor,falcor,12/Jun/08 16:48,13/Jun/08 00:14,13/Mar/19 23:15,13/Jun/08 00:14,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,wicket,,,,0,,,,,,,,"RequestLogger throws an NPE at line 200 because the field 'active' is never assigned a value when the class is instantiated.  In older versions (I am migrating from 1.3.3) this field was just a native int so the value would default to 0, but sometime between 1.3.3 and 1.4m2 it has changed to an AtomicInteger and never assigned a value via new AtomicInteger() or new AtomicInteger(someInt).",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-12 22:47:42.94,,,no_permission,,,,,,,,,,,202642,,,Thu Jun 12 22:48:51 UTC 2008,,,,,,0|i0kfhb:,117325,,,,,,,,12/Jun/08 22:47;jwcarman;Looks like Igor already fixed this one.  Can someone please resolve/close it?,"12/Jun/08 22:48;jwcarman;In case anyone's interested, it looks like this was fixed in revision 661205.",,,,,,,,,,,,,,,,,,,,,,
HtmlHandler can't handle tags not requiring closed tags if the tag names are uppercase,WICKET-1682,12397388,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,freemant,freemant,03/Jun/08 15:48,03/Jun/08 17:08,13/Mar/19 23:15,03/Jun/08 17:08,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,0,,,,,,,,"In HtmlHandler.java, the requiresCloseTag() method only looks the tag name in the Map, without considering the char case:

	public static boolean requiresCloseTag(final String name)
	{
		return doesNotRequireCloseTag.get(name) == null;
	}

Because the keys are all lower case:

	static
	{
		// Tags which are allowed not be closed in HTML
		doesNotRequireCloseTag.put(""p"", Boolean.TRUE);
		doesNotRequireCloseTag.put(""br"", Boolean.TRUE);
		doesNotRequireCloseTag.put(""img"", Boolean.TRUE);
		doesNotRequireCloseTag.put(""input"", Boolean.TRUE);
		doesNotRequireCloseTag.put(""hr"", Boolean.TRUE);
		doesNotRequireCloseTag.put(""link"", Boolean.TRUE);
		doesNotRequireCloseTag.put(""meta"", Boolean.TRUE);
	}

it will fail if uppercase tag names are used in the markup.

I've verified that it dies with the following simple markup:

<html>
<body>
<BR>
</body>
</html>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202628,,,2008-06-03 15:48:50.0,,,,,,0|i0kfin:,117331,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in BookmarkablePageRequestTarget,WICKET-1676,12397252,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,donohoedigital,donohoedigital,01/Jun/08 19:26,01/Jun/08 20:52,13/Mar/19 23:15,01/Jun/08 20:52,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,wicket,,,,0,,,,,,,,"In BookmarkablePageRequestTarget line 292 

   for (Entry<String, Object> entry : pageParameters.entrySet()) 
   { 
       final Object value = entry.getValue(); 
*      if (value.getClass().isArray()) 
       [...] 
   } 

I'm getting a NPE.  Values can be null in PageParameters, so you should check null here. 

Also found that BookmarkablePageRequestTarget(String pageMapName, Class<C> pageClass) wasn't correct (wasn't passing pageMap).",any,,,,,,,,,,,,,,,,,,01/Jun/08 19:27;donohoedigital;bookmarkable.patch;https://issues.apache.org/jira/secure/attachment/12383195/bookmarkable.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202622,,,Sun Jun 01 19:27:23 UTC 2008,,,,,,0|i0kfjb:,117334,,,,,,,,"01/Jun/08 19:27;donohoedigital;Added null check, fixed BookmarkablePageRequestTarget(String pageMapName, Class<C> pageClass) constructor and a couple of other minor tweaks recommended by intellij.",,,,,,,,,,,,,,,,,,,,,,,
Update Javadoc for AbstractValidator,WICKET-1544,12394107,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jdpatterson,jdpatterson,16/Apr/08 13:59,31/May/08 06:05,13/Mar/19 23:15,31/May/08 06:05,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,0,,,,,,,,"AbstractValidator.validate(Component) javadoc says ""if none satisfies your need, subclass CustomValidator."" CustomValidator no longer exists and I assume this should be AbstractValidator.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202505,,,2008-04-16 13:59:50.0,,,,,,0|i0kfun:,117385,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Time.valueOf() does not clear miliseconds,WICKET-1670,12397035,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,rhansen,rhansen,28/May/08 23:52,30/May/08 18:20,13/Mar/19 23:15,30/May/08 18:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,0,,,,,,,,There is an issue in  org.apache.wicket.util.time.Time.java where miliseconds aren't cleared when getting a Time.valueOf() object..,,300,300,,0%,300,300,,,,,,,,,,,,28/May/08 23:53;rhansen;TimeValueOf.patch;https://issues.apache.org/jira/secure/attachment/12382988/TimeValueOf.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202616,,,Wed May 28 23:53:01 UTC 2008,,,,,,0|i0kfjj:,117335,,,,,,,,28/May/08 23:53;rhansen;simple one liner for the issue...,,,,,,,,,,,,,,,,,,,,,,,
Add getterfor IPageable to PagingNavigation,WICKET-1547,12394180,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jdpatterson,jdpatterson,17/Apr/08 08:23,25/May/08 06:57,13/Mar/19 23:15,25/May/08 06:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,,,,,0,,,,,,,,I want to reference the pageable from my subclass of PagingNavigation but need to keep an extra reference in my subclass.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202508,,,2008-04-17 08:23:47.0,,,,,,0|i0kfuf:,117384,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WebPage.onAfterRender compares configurationType String using ==  operator, not equals method",WICKET-1636,12396047,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,maxb,maxb,14/May/08 19:23,25/May/08 06:34,13/Mar/19 23:15,25/May/08 06:34,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-M3,,,,,,0,,,,,,,,"See http://svn.apache.org/repos/asf/wicket/trunk/wicket/src/main/java/org/apache/wicket/markup/html/WebPage.java onAfterRender method, line reading:

{code}
		if (getApplication().getConfigurationType() == Application.DEVELOPMENT)
{code}

A String is being compared for identity, not equality, which is incorrect.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202589,,,2008-05-14 19:23:12.0,,,,,,0|i0kfmv:,117350,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
llegalStateException when refreshing a WebMarkupContainer containing a AjaxFallbackDefaultDataTable with one of the columns is a AjaxEditableLabel which refreshes the markup container on submit,WICKET-1593,12395413,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,eric.gulatee@gmail.com,eric.gulatee@gmail.com,06/May/08 13:06,22/May/08 19:52,13/Mar/19 23:15,22/May/08 19:52,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"llegalStateException when refreshing a WebMarkupContainer containing a AjaxFallbackDefaultDataTable where one of the columns is a AjaxEditableLabel which refreshes the markup container on submit

Attached is the html + page + component to recreate the issue.

Stack Trace as follows:
java.lang.IllegalStateException: No Page found for component [MarkupContainer [Component id = cell, page = <No Page>, path = 1:cells:5:cell.QuantityLabel]]
     at org.apache.wicket.Component.getPage(Component.java:1658)
     at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:689)
     at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:605)
     at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:520)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:104)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1172)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1243)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1331)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:363)
     at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:124)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:690)",Same behaviour on windows XP & macosx 10.5,,,,,,,,,,,,,,,,,,06/May/08 13:18;eric.gulatee@gmail.com;TestAjaxDataTable.html;https://issues.apache.org/jira/secure/attachment/12381505/TestAjaxDataTable.html,06/May/08 13:18;eric.gulatee@gmail.com;TestAjaxDataTable.java;https://issues.apache.org/jira/secure/attachment/12381506/TestAjaxDataTable.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202552,,,Thu May 22 19:49:53 UTC 2008,,,,,,0|i0kfpz:,117364,,,,,,,,06/May/08 13:25;eric.gulatee@gmail.com;Edit the telehpone column to procedure the stack trace,"22/May/08 19:49;eric.gulatee@gmail.com;Removing the call to super.onSubmit in the overriden onSubmit method resolves the issue.

There doesn't seem to be any negative side effects to commentin gout the call to parent.onSubmit()


The error message is really hard to follow and misleading.

Especially considering, this is all that is in the AjaxEditableLabel.onSubmit()
label.setVisible(true);
editor.setVisible(false);
target.addComponent(AjaxEditableLabel.this);
target.appendJavascript(""window.status='';"");
",,,,,,,,,,,,,,,,,,,,,,
SqlTimestampConverter and it's Date and Time friends die on null and other breakage.,WICKET-735,12373340,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,logi,logi,09/Jul/07 21:35,18/May/08 07:59,13/Mar/19 23:15,26/Aug/07 17:46,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,,,,,0,,,,,,,,"For a null value the following method in SqlTimestampConverter and similar for Date and Time will get a null from the superclass and throw an NPE.

public Object convertToObject(String value, Locale locale)
{
	return new Timestamp(((Date)super.convertToObject(value, locale)).getTime());
}

Also, the superclass will use the locale's default formating for a java.util.Date object, which may be suitable for one of java.sql.Date, java.sql.Time and java.sql.Timestamp, but never for all three. In my locale it is appropriate for java.sql.Date and any java.sql.Time will return a string of ""1.1.1""",,,,,,,,,,,,,,,,,,,09/Jul/07 21:39;logi;SqlTimeConverter.java;https://issues.apache.org/jira/secure/attachment/12361442/SqlTimeConverter.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-21 14:57:53.646,,,no_permission,,,,,,,,,,,201766,,,Sun May 18 07:59:20 UTC 2008,,,,,,0|i0ki1z:,117742,,,,,,,,09/Jul/07 21:39;logi;A proposed working SqlTimeConverter. Four lines can be changed to create equivalent SqlDateConverter and SqlTimstampeConverter classes (untested),10/Jul/07 00:37;logi;...obviously we want to *throw* the exception in the attached code and not *return* it.,21/Aug/07 14:57;jbq;Looks reasonable to do for the next release,"26/Aug/07 17:34;knopp;Looks good to me, will commit it.","18/May/08 07:59;mmakundi;There is a fixed version of the SqlDateConverter in the trunk. This fix appars to be only in 1.3.0-beta4.

Is there a reason why this has not been included in the latest builds, 1.4-m1 for example?

Nevertheless, it still has a bug:

2008-05-17 17:33:35,034 93204 [btpool0-8] ERROR RequestCycle  -
java.util.Date cannot be cast to java.sql.Date
java.lang.ClassCastException: java.util.Date cannot be cast to java.sql.Date
       at org.apache.wicket.util.convert.converters.SqlDateConverter.convertToObject(SqlDateConverter.java:43)

Here is the proposed fix:

- return (Date)parse(getDateFormat(locale), value, locale);
+ return new Date(((java.util.Date)parse(getDateFormat(locale), value, locale)).getTime());

Probably similar fix is needed for the Timestamp version?",,,,,,,,,,,,,,,,,,,
IE bug causes wicket problems when id auto generation is active,WICKET-1632,12396030,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tomdesmet,tomdesmet,14/May/08 15:47,17/May/08 21:53,13/Mar/19 23:15,17/May/08 21:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,,,wicket,,,,0,,,,,,,,"
http://www.nabble.com/IE-bug-causes-wicket-problems-when-id-auto-generation-is-active-td17231936.html

There seems to be a bug in Internet Explorer in the following scenario ...

<html>
<head></head>
<body>
<form id=""ic""><img id=""id""/></form>
<script language=""javascript"">
var form = document.getElementById('ic');
alert(form.getAttribute('id'));
</script>
</body>
</html>

If an image on a form has an id that has as id content the text ""id"", then something strange happens in IE.
You get an [object] instead of the actual id content. This can happen when the wicket automatic id generation is used. 
Could there be a workaround included within wicket to avoid this bug? 
(We have spent quite some time to debug this issue, so if wicket can include a workaround, it can save others the same debugging work)

Thank you very much.","Internet Explorer (Verified on version 6.0)
Verified in wicket 1.3.3",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-17 21:53:27.309,,,no_permission,,,,,,,,,,,202586,,,Sat May 17 21:53:27 UTC 2008,,,,,,0|i0kfnj:,117353,,,,,,,,"17/May/08 21:53;seitz;IDs are now generated with the prefix ""id""",,,,,,,,,,,,,,,,,,,,,,,
"""ava.lang.IllegalStateException: No Page found for component"" when collapsing nodes in a LinkTree",WICKET-1366,12389333,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,sebster,sebster,22/Feb/08 18:07,07/May/08 22:26,13/Mar/19 23:15,07/May/08 09:36,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket,,,,0,,,,,,,,"I'm trying to have a wicket LinkTree collapse and expand subtrees when I click on the respective nodes. I have the following code:

        tree = new LinkTree(""tree"", createTreeModel()) {
            @Override
            protected void onNodeLinkClicked(final TreeNode node, final BaseTree tree, final AjaxRequestTarget target) {
                if (!node.isLeaf()) {
                    if (tree.getTreeState().isNodeExpanded(node)) {
                        collapseAll(node);
                    } else {
                        expandAll(node);
                    }
                    tree.updateTree(target);
                } else {
                    System.out.println(Arrays.toString(((DefaultMutableTreeNode) node).getUserObjectPath()));
                }
            }
        };


with the methods expandAll/collapseAll as follows:

    protected void collapseAll(final TreeNode treeNode) {
        tree.getTreeState().collapseNode(treeNode);
        for (final Enumeration e = treeNode.children(); e.hasMoreElements();) {
            collapseAll((TreeNode) e.nextElement());
        }
    }

    protected void expandAll(final TreeNode treeNode) {
        tree.getTreeState().expandNode(treeNode);
        for (final Enumeration e = treeNode.children(); e.hasMoreElements();) {
            expandAll((TreeNode) e.nextElement());
        }
    }

However, I keep getting the following errors (specifically, this happens when I collapse a subtree first, and then collapse a subtree of which the other subtree is a sibling):

java.lang.IllegalStateException: No Page found for component [MarkupContainer [Component id = 200, page = <No Page>, path = 200.AbstractTree$TreeItem]]
     at org.apache.wicket.Component.getPage(Component.java:1639)
     at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:689)
     at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:605)
     at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:520)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1172)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
     at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
     at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-23 13:06:50.675,,,no_permission,,,,,,,,,,,202344,,,Sat Feb 23 14:49:39 UTC 2008,,,,,,0|i0kgcf:,117465,,,,,,,,"23/Feb/08 13:06;freemant;The problem is in LinkIconPanel:

	protected void onNodeLinkClicked(TreeNode node, BaseTree tree, AjaxRequestTarget target)
	{
		tree.getTreeState().selectNode(node, !tree.getTreeState().isNodeSelected(node));
		tree.updateTree(target);
	}

In updateTree() some TreeItems are added to the request target but later they are removed because a subtree is collapsed. So, either not call updateTree() or make the AjaxRequestTarget more intelligent: skip those components that have been removed from the page.","23/Feb/08 14:49;knopp;Hi, the check in AjaxRequestTarget is intentional. Problem is that the tree update should be called only once during request before the actual render. I'll see if I can do that automatic somehow.",,,,,,,,,,,,,,,,,,,,,,
ClassCastException in MixedUrlCodingStrategy,WICKET-1521,12393733,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,dleangen,dleangen,11/Apr/08 08:56,07/May/08 09:10,13/Mar/19 23:15,07/May/08 07:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,,,,,0,,,,,,,,"Line 154 expect a String. Sometimes a String is returned, sometimes String[] is returned.

Guess this has something to do with the javax.servlet api.",,,,,,,,,,,,,,,,,,,11/Apr/08 08:58;dleangen;MixedParamUrlCodingStrategy.diff;https://issues.apache.org/jira/secure/attachment/12379910/MixedParamUrlCodingStrategy.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202484,,,Tue May 06 05:52:02 UTC 2008,,,,,,0|i0kfwf:,117393,,,,,,,,"11/Apr/08 08:58;dleangen;Patch for this issue.

Sorry about the code formatting. My Eclipse keeps doing this to me...","06/May/08 05:52;dleangen;Any plan to patch this for an upcoming release?

Thanks!",,,,,,,,,,,,,,,,,,,,,,
AjaxEditableLabel cancel broken on Safari,WICKET-1581,12395163,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,ajacoby,ajacoby,01/May/08 21:11,07/May/08 07:53,13/Mar/19 23:15,07/May/08 07:53,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M2,,,wicket-extensions,,,,0,,,,,,,,"Hitting the escape key doesn't work to cancel an edit in AjaxEditableLabel with Safari 3.1.1 (and wicket 1.3.3 - nice symmetry in the versions :)).

http://www.wicketstuff.org/wicket13/ajax/editable-label

Works on Firefox.","Safari 3.1.1, OS X",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-04 15:37:46.228,,,no_permission,,,,,,,,,,,202540,,,Sun May 04 15:37:46 UTC 2008,,,,,,0|i0kfqn:,117367,,,,,,,,"01/May/08 21:21;ajacoby;Forgot to mention, same problem for AjaxEditableMultiLineLabel.",04/May/08 15:37;jcompagner;i dont have safari/osx so matej this is one for you,,,,,,,,,,,,,,,,,,,,,,
Palette does not support ajax behavior,WICKET-1574,12394926,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,nielsvk,nielsvk,28/Apr/08 17:05,05/May/08 18:57,13/Mar/19 23:15,04/May/08 15:56,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M2,,,wicket-extensions,,,,0,,,,,,,,"http://wicketframework.org/wicket-extensions/apidocs/wicket/extensions/markup/html/form/palette/Palette.html says:

----------------

Ajaxifying the palette: The palette itself cannot be ajaxified because it is a panel and therefore does not receive any javascript events. Instead ajax behaviors can be attached to the recorder component which supports the javascript onchange event. The recorder component can be retrieved via a call to getRecorderComponent(). Example:

       Form form=new Form(...);
       Palette palette=new Palette(...);
       palette.getRecorderComponent().add(new AjaxFormComponentUpdatingBehavior(""onchange"") {...});

----------------

However getRecorderComponent() returns null.

Also see http://www.nabble.com/%22option-transfer%22-widget-to16837723.html#a16839739",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-04 15:56:11.201,,,no_permission,,,,,,,,,,,202533,,,Mon May 05 18:57:47 UTC 2008,,,,,,0|i0kfrb:,117370,,,,,,,,"04/May/08 15:56;ivaynberg;see updated javadoc in snapshot. basically instead of getrecordercomp().add(..) override newrecordercomponent()
","05/May/08 18:57;nielsvk;thanks for the quick response, works like a charm",,,,,,,,,,,,,,,,,,,,,,
MetaDataRoleAuthorizationStrategy.unauthorize() doesn't work,WICKET-1152,12382359,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mrmean,dr_vedge,dr_vedge,12/Nov/07 17:07,01/May/08 20:29,13/Mar/19 23:15,01/May/08 20:29,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket-auth-roles,,,,0,,,,,,,,"Try this:
MetaDataRoleAuthorizationStrategy.unauthorize(this, RENDER, ""USER"");
The page will still be rendered for user with USER role.

The following will work fine to prevent rendering by anybody:
MetaDataRoleAuthorizationStrategy.authorize(this, RENDER, """");
",,0,0,,0%,0,0,,,,,,,,,,,,24/Apr/08 20:12;mrmean;wicket-1152.patch;https://issues.apache.org/jira/secure/attachment/12380866/wicket-1152.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-14 14:40:50.731,,,no_permission,,,,,,,,,,,202151,,,Thu May 01 20:29:45 UTC 2008,,,,,,0|i0kgwf:,117555,,,,,,,,14/Nov/07 14:40;jcompagner;do you have a unit testcase for this ?,24/Mar/08 14:24;jcompagner;maurice is security man,"24/Apr/08 20:07;mrmean;I can reproduce this with the following testcase (see bottom). However judging by the code this behavior was never intended. the method unauthorize might be better named removePreviouslyGrantedAuthorization.
I will discuss this on the list.

public void testRemove2()
	{
		WicketTester tester = new WicketTester();
		tester.setupRequestAndResponse();
		Label label = new Label(""label"", ""text"");
		Action mambo = new Action(""mambo"");
		MetaDataRoleAuthorizationStrategy strategy = new MetaDataRoleAuthorizationStrategy(
				new IRoleCheckingStrategy()
				{

					public boolean hasAnyRole(Roles roles)
					{
						return false;
					}
				});
		label.setMetaData(MetaDataRoleAuthorizationStrategy.ACTION_PERMISSIONS,
				new ActionPermissions());
		MetaDataRoleAuthorizationStrategy.unauthorize(label, mambo, ""johan"");
		assertFalse(strategy.isActionAuthorized(label, mambo));
		tester.processRequestCycle();
		tester.destroy();
	}","24/Apr/08 20:12;mrmean;This is the patch i applied to the 1.3 branch, so that we may later apply it to trunk also.",01/May/08 20:29;mrmean;unauthorize now has the effect of removing an authorized role (if previously authorized) or denying authorization for every role if there are no remaining authorized roles.,,,,,,,,,,,,,,,,,,,
AjaxEventBehavior does not check for component.isEnableAllowed before adding the ajax event to the tag,WICKET-1575,12394974,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mrmean,mrmean,mrmean,29/Apr/08 09:49,01/May/08 15:39,13/Mar/19 23:15,01/May/08 15:39,1.3.2,1.3.3,1.3.4,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket,,,,0,,,,,,,,"Currently AjaxEventBehavior only checks component.isEnabled before applying the ajax event to the tag. This could result in an UnauthorizedActionException when the ajax event is received by wicket.
The behavior should also check for component.isEnableAllowed.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202534,,,Tue Apr 29 12:02:17 UTC 2008,,,,,,0|i0kfr3:,117369,,,,,,,,29/Apr/08 12:02;mrmean;commits can't be made at this time due to infra structure problems.,,,,,,,,,,,,,,,,,,,,,,,
Widen Generics for Lists/Iteratos,WICKET-1512,12393655,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,shake,shake,10/Apr/08 13:30,18/Apr/08 05:37,13/Mar/19 23:15,18/Apr/08 05:37,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M1,,,wicket,,,,0,,,,,,,,"It is important to widen the generics for collections.
For example it is better (and sometimes necessary) to change the signature of  org.apache.wicket.markup.repeater.data.IDataProvider#iterator to:

Iterator<? extends T> iterator(int first, int count);

I will create and add a patch later.",,,,,,,,,,,,,,,,,,,10/Apr/08 13:50;shake;Widening_Generics_for_IDataProvider.patch;https://issues.apache.org/jira/secure/attachment/12379842/Widening_Generics_for_IDataProvider.patch,10/Apr/08 14:13;shake;two_parameters.patch;https://issues.apache.org/jira/secure/attachment/12379850/two_parameters.patch,14/Apr/08 20:22;shake;widening_collections.patch;https://issues.apache.org/jira/secure/attachment/12380109/widening_collections.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2008-04-10 13:35:57.365,,,no_permission,,,,,,,,,,,202475,,,Mon Apr 14 20:22:38 UTC 2008,,,,,,0|i0kfxb:,117397,,,,,,,,10/Apr/08 13:35;jcompagner;i wait for your patch..,10/Apr/08 13:50;shake;Widening Generics for IDataProvider. Everything compiles fine. I changed ContactDataProvider to show the consequences.....,"10/Apr/08 14:13;shake;Maybe I am wrong - so please correct me.
But I think this version is more correct.

org.apache.wicket.markup.repeater.data.IDataProvider#iterator doesn't return the same type as model() in every case. There could happen some magic within the model() method that creates some sort of representation.
","12/Apr/08 15:26;jcompagner;igor: IDataprovider is more you baby.
Can you check these generics..","12/Apr/08 21:41;ivaynberg;i definitely do not like the two types on idataprovider. any mentioned transformation can occur as an iterator adapter returned from iterator() method. 99% of cases declaring idataprovider<person,person> will get incredibly annoying.

also widening i am not sure about. what is the usecase there? in order for widening to be needed you have to explicitly return a super-typed iterator. so why not properly declare the idataprovider type in the first place?","14/Apr/08 14:42;shake;You are right: Having two types is very, very annoying. I suggest to avoid that (I just created that patch - didn't apply it at my local code base - nobody wants to apply it ;-).

I just wanted to start a discussion about that. I think it *is* possible to return an iterator of foo while the getModel() method returns a model containing bar.
I don't know if that is a misuse or not. But if you decide to add only *one* parameter, you should know that you might break some code...


About the widening: I will create a sample that shows the problem...","14/Apr/08 19:24;shake;Two things: Why didn't you add the type parameter to org.apache.wicket.markup.repeater.data.IDataProviderExample.NumberProvider#model?
I think it is missing there.

And here comes the example showing the problem with the missing ""? extends"". 

[code]
public class IDataProviderExample {
  public static void main( String[] args ) {
    List<Integer> integers = Arrays.asList( 1, 2, 3, 4 );
    List<Double> doubles = Arrays.asList( 1.0, 2.0, 3.0, 4.0 );

    IDataProvider<Number> myProvider0 = new NumberProvider( integers );
    IDataProvider<Number> myProvider1 = new NumberProvider( doubles );

  }

  private static class NumberProvider implements IDataProvider<Number> {
    private final List<? extends Number> backingList;

    private NumberProvider( List<? extends Number> backingList ) {
      this.backingList = backingList;
    }

    public Iterator<Number> iterator( int first, int count ) {
      return backingList.subList( first, first + count ).iterator();
    }

    public int size() {
      return backingList.size();
    }

    public IModel<Number> model( Number object ) {
      return new Model( object );
    }

    public void detach() {
    }
  }
}
[/code]

Explanation: http://blog.cedarsoft.eu/


And yes, I know that it is annoying to type the additional ""? extends"" all the time. But remember that a Collection<? extends Foo> is something completely different than Collection<Foo>.

Many times programmers the programmers avoid using ""? extends"" to realize later that they should fix that later (but now it is an incomaptible change). 
GlazedList is such an example where the things went completely wrong. They fixed some issues within the latest snapshots - but not all...

And poorly used Generics are the root of all evil ;-) - at least things are messed up...


","14/Apr/08 20:22;shake;One more patch that widens some other collections, too.",,,,,,,,,,,,,,,,
PagingNavigator calls factory methods from constructor,WICKET-1548,12394207,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,17/Apr/08 14:51,18/Apr/08 02:16,13/Mar/19 23:15,18/Apr/08 02:16,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M1,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202509,,,2008-04-17 14:51:22.0,,,,,,0|i0kfu7:,117383,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enclosure permanently hides direct children after it has been itself hidden once,WICKET-1536,12394011,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,15/Apr/08 17:04,15/Apr/08 18:54,13/Mar/19 23:15,15/Apr/08 18:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M1,,wicket,,,,0,,,,,,,,"enclosure calls setvisibilityallowed(false) on children, but never resets it back to true",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202498,,,2008-04-15 17:04:11.0,,,,,,0|i0kfvb:,117388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.MarkupContainer swallows AbortException,WICKET-1418,12390899,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,mrmean,pete,pete,12/Mar/08 23:03,13/Apr/08 15:56,13/Mar/19 23:15,13/Apr/08 11:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M1,,wicket,,,,0,,,,,,,,"MarkupContainer#onBeforeRenderChildren() will catch exceptions of type org.apache.wicket.AbortException and remap them to a WicketRuntimeException. This is obviously wrong.

For example when throwing a RestartResponseException the exception will be remapped to WicketRuntimeException and the response will not be restarted but the error page will be shown.

I attached a usecase to demonstrate this bug.",,,,,,,,,,,,,,,,,,,12/Mar/08 23:03;pete;bugtest.zip;https://issues.apache.org/jira/secure/attachment/12377736/bugtest.zip,13/Mar/08 12:59;pete;wicket-1418-pertl.patch;https://issues.apache.org/jira/secure/attachment/12377779/wicket-1418-pertl.patch,13/Mar/08 00:39;ivaynberg;wicket-patch;https://issues.apache.org/jira/secure/attachment/12377741/wicket-patch,12/Apr/08 20:30;mrmean;wicket133.patch;https://issues.apache.org/jira/secure/attachment/12379985/wicket133.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2008-03-13 00:39:53.587,,,no_permission,,,,,,,,,,,202389,,,Sun Apr 13 11:19:55 UTC 2008,,,,,,0|i0kg6f:,117438,,,,,,,,"13/Mar/08 00:39;ivaynberg;attached proposed general solution in wicket-patch
","13/Mar/08 11:58;pete;I think first wrapping AbortExceptions and later on unwrapping them again is wrong. The AbortException should just be passed up to the RequestProcessor and then processed.

We certainly don't want exceptions like that:

RuntimeException
  -> RuntimeException
     -> AbortException

the RuntimeException around are just useless...

So I would not crawl up the stacktrace until we find an AbortException but just catch and rethrow it to prevent it from being wrapped.

Patch included.",13/Mar/08 15:27;ivaynberg;but then we have to do that everywhere we catch a runtime exception...,"13/Mar/08 15:56;pete;What's the motivation behind wrapping AbortExceptions?

And, yes, this should indeed happen anywhere you catch RuntimeException...

Pass it, not wrap it

Otherwise you probably would have to change RequestCycle#step() in line 1256 (current trunk) to unwrap AbortExceptions before processing them
","13/Mar/08 16:23;ivaynberg;maybe we better take this to the list...i created a thread for this issue there, but to answer your questions:

> What's the motivation behind wrapping AbortExceptions?
when that code was written there was no abortexception. also, most times, you dont think about checking for it, just wrap and rethrow

> And, yes, this should indeed happen anywhere you catch RuntimeException...
if we never forget to do the check that would work :)

> Pass it, not wrap it
see above :)

> Otherwise you probably would have to change RequestCycle#step() in line 1256 (current trunk) to unwrap AbortExceptions before processing them
i dont see why we would have to unwrap abort exceptions themselves....","12/Apr/08 20:30;mrmean;Igor's patch can not be applied to wicket 1.33, this patch contains the same changes for wicket 1.33.
additionally it contains the testcase provided by peter ertl as a junit testcase.",12/Apr/08 21:44;ivaynberg;feel free to apply this. like i said it is fine by me. and i guess no one was really against it on the list.,13/Apr/08 11:19;mrmean;fixed in 1.3.4 and 1.4 m1,,,,,,,,,,,,,,,,
EmptyStackException parsing HTML,WICKET-1508,12393589,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jonl,jonl,09/Apr/08 22:38,13/Apr/08 07:02,13/Mar/19 23:15,13/Apr/08 07:02,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M1,,,wicket,,,,0,,,,,,,,"
I do not have an easy repro case for this, but it might be worth looking at whether the code should be more defensive.

java.util.EmptyStackException
	at org.apache.wicket.util.collections.ArrayListStack.peek(ArrayListStack.java:101)
	at org.apache.wicket.util.collections.ArrayListStack.pop(ArrayListStack.java:84)
	at org.apache.wicket.markup.parser.filter.HtmlHandler.nextTag(HtmlHandler.java:134)
	at org.apache.wicket.markup.parser.filter.WicketRemoveTagHandler.nextTag(WicketRemoveTagHandler.java:60)
	at org.apache.wicket.markup.parser.filter.WicketLinkTagHandler.nextTag(WicketLinkTagHandler.java:94)
	at org.apache.wicket.markup.parser.AbstractMarkupFilter.nextComponentTag(AbstractMarkupFilter.java:82)
	at org.apache.wicket.markup.parser.filter.WicketNamespaceHandler.nextTag(WicketNamespaceHandler.java:72)
	at org.apache.wicket.markup.parser.AbstractMarkupFilter.nextComponentTag(AbstractMarkupFilter.java:82)
	at org.apache.wicket.markup.parser.filter.WicketMessageTagHandler.nextTag(WicketMessageTagHandler.java:81)
	at org.apache.wicket.markup.parser.AbstractMarkupFilter.nextComponentTag(AbstractMarkupFilter.java:82)
	at org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler.nextTag(HtmlHeaderSectionHandler.java:77)
	at org.apache.wicket.markup.parser.filter.HeadForceTagIdHandler.nextTag(HeadForceTagIdHandler.java:77)
	at org.apache.wicket.markup.parser.AbstractMarkupFilter.nextComponentTag(AbstractMarkupFilter.java:82)
	at org.apache.wicket.markup.parser.filter.OpenCloseTagExpander.nextTag(OpenCloseTagExpander.java:51)
	at org.apache.wicket.markup.parser.AbstractMarkupFilter.nextComponentTag(AbstractMarkupFilter.java:82)
	at org.apache.wicket.markup.parser.filter.EnclosureHandler.nextTag(EnclosureHandler.java:76)
	at org.apache.wicket.markup.parser.filter.RelativePathPrefixHandler.nextTag(RelativePathPrefixHandler.java:116)
	at org.apache.wicket.markup.MarkupParser.getNextTag(MarkupParser.java:302)
	at org.apache.wicket.markup.MarkupParser.parseMarkup(MarkupParser.java:322)
	at org.apache.wicket.markup.MarkupParser.parse(MarkupParser.java:270)
	at org.apache.wicket.markup.loader.SimpleMarkupLoader.loadMarkup(SimpleMarkupLoader.java:52)
	at org.apache.wicket.markup.loader.InheritedMarkupMarkupLoader.loadMarkup(InheritedMarkupMarkupLoader.java:62)
	at org.apache.wicket.markup.loader.DefaultMarkupLoader.loadMarkup(DefaultMarkupLoader.java:55)
	at org.apache.wicket.markup.MarkupCache.loadMarkup(MarkupCache.java:433)
	at org.apache.wicket.markup.MarkupCache.loadMarkupAndWatchForChanges(MarkupCache.java:523)
	at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:319)
	at org.apache.wicket.markup.MarkupCache.getMarkupStream(MarkupCache.java:215)
	at org.apache.wicket.MarkupContainer.getAssociatedMarkupStream(MarkupContainer.java:343)
	at org.apache.wicket.Page.onRender(Page.java:1453)
	at org.apache.wicket.Component.render(Component.java:2315)
	at org.apache.wicket.Page.renderPage(Page.java:906)
	at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:231)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:104)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1172)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1243)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1331)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:363)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:291)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:841)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:639)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)",,,,,,,,,,,,,,,,,,,10/Apr/08 13:02;yor;1508_patch.txt;https://issues.apache.org/jira/secure/attachment/12379840/1508_patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-04-10 13:02:54.791,,,no_permission,,,,,,,,,,,202471,,,Sun Apr 13 07:02:48 UTC 2008,,,,,,0|i0kfxr:,117399,,,,,,,,"10/Apr/08 13:02;yor;If checks the size of the stack once and is then able to do multiple pops without size-check.

The patch I added should prevent that and throw the ParseException (""Tag ... has a mismatched close tag at ..."") when the stack is empty.

",12/Apr/08 15:33;jcompagner;juergen can you check the patch?,13/Apr/08 07:02;jdonnerstag;svn 647532,,,,,,,,,,,,,,,,,,,,,
Bug in order of rendered links within <wicket:head> ?,WICKET-1487,12393256,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jdonnerstag,jdonnerstag,06/Apr/08 07:59,06/Apr/08 07:59,13/Mar/19 23:15,06/Apr/08 07:59,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"From: ""Matej Knopp"" <matej.knopp@gmail.com>
Date: March 25, 2008 11:51:20 AM PDT
To: users@wicket.apache.org
Subject: Re: Bug in order of rendered links within <wicket:head> ?
Reply-To: users@wicket.apache.org

I agree that we should. But I'm not sure why the order is like this. Juergen?

-Matej

On Tue, Mar 25, 2008 at 7:43 PM, Igor Vaynberg <igor.vaynberg@gmail.com> wrote:

    matej? do we guarantee the order? looks like we should?

    -igor




    On Tue, Mar 25, 2008 at 11:36 AM, Justin Morgan - Logic Sector
    <jmorgan@logicsector.com> wrote:

        Still wondering if anyone has any input on this...?  Thanks for any
        help!

        To clarify, the pages are specified like so...

        AbstractMasterPage (  <--  extends WebPage)
               <wicket:head>
                   <link type=""text/css"" rel=""stylesheet"" href=""css/
        AbstractMasterPage.css""/>
               </wicket:head>

        AbstractStaticTextPage (  <--  extends AbstractMasterPage)
               <wicket:head>
                   <link type=""text/css"" rel=""stylesheet"" href=""css/
        AbstractStaticTextPage.css""/>
               </wicket:head>

        StaticTextPage (  <--  extends AbstractStaticTextPage)
               <wicket:head>
                   <link type=""text/css"" rel=""stylesheet"" href=""css/
        StaticTextPage.css""/>
               </wicket:head>

        But in the rendered HTML, the CSS links show up in the *wrong order*:

           <head>
                   <link href=""css/AbstractMasterPage.css"" type=""text/css""
        rel=""stylesheet""/>
                  <link href=""css/StaticTextPage.css"" type=""text/css""
        rel=""stylesheet""/>
                  <link href=""css/AbstractStaticTextPage.css"" type=""text/
        css"" rel=""stylesheet""/>
          </head>

        This results in parent-CSS overriding child-CSS, which is wrong.

        Thanks again for any help!



        On Mar 25, 2008, at 1:19 AM, Justin Morgan - Logic Sector wrote:

            I'm having an issue with links to CSS files in Wicket 1.3.1.  The
            problem is the ordering of the links in the rendered HTML.  The page
            inheritance hierarchy goes like this:
            AbstractMasterPage --> AbstractStaticTextPage --> StaticTextPage

            However, the list of links brought in via the <wicket:head> section
            are:
            <link from AbstractMasterPage>
            <link from StaticTextPage >
            <link from AbstractStaticTextPage >

            This is causing problems because of the way CSS inheritance works
            with regard to CSS import order.  In other words, it means that the
            AbstractStaticTextPage CSS link is overriding the contents of the
            StaticTextPage CSS link.  This is the reverse of the way I think it
            *should* work (I want CSS declarations in StaticTextPage to override
            AbstractStaticTextPage, as you'd expect).

            Any ideas?  Thanks for any help!

            Justin

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202454,,,Sun Apr 06 07:59:52 UTC 2008,,,,,,0|i0kfzj:,117407,,,,,,,,"06/Apr/08 07:59;jdonnerstag;I is currently working fine if inheritance is just one level deep. But
if it is 2 or more level deep than each higher level gets inserted
after the first <wicket:head>. E.g.

<script href=""basebase.css""/>
<script href=""base.css""/>

<script href=""basebase.css""/>
 <-- gets inserted here ><script href=""extension.css""/>
<script href=""base.css""/>

should be like
<script href=""basebase.css""/>
<script href=""base.css""/>
<script href=""extension.css""/>

Juergen",,,,,,,,,,,,,,,,,,,,,,,
Changing tag name and expanding open-close to open-body-close prints old tag name,WICKET-1458,12392570,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jdpatterson,jdpatterson,28/Mar/08 17:20,30/Mar/08 08:37,13/Mar/19 23:15,30/Mar/08 08:37,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"I do this:
					@Override
					protected void onComponentTag(ComponentTag tag)
					{
						tag.setName(""select"");
						if (tag.isOpenClose())
						{
							tag.setType(XmlTag.OPEN);
						}
						super.onComponentTag(tag);
					}

and the close tag that is generated is not a ""select"" but the old ""input""

This can be fixed in Component line 2485:

							// Close the manually opened panel tag.
							getResponse().write(openTag.syntheticCloseTagString());

could be changed to 

							// Close the manually opened panel tag.
							getResponse().write(tag.syntheticCloseTagString());


",,,,,,,,,,,,,,,,,,,29/Mar/08 00:10;seitz;WICKET-1458.patch;https://issues.apache.org/jira/secure/attachment/12378831/WICKET-1458.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-03-29 00:10:58.237,,,no_permission,,,,,,,,,,,202426,,,Sun Mar 30 08:37:08 UTC 2008,,,,,,0|i0kg1j:,117416,,,,,,,,"29/Mar/08 00:10;seitz;patch that fixes the issue.

Jürgen, could you take a look at this please?
 you're way more familiar with markup processing.","29/Mar/08 08:55;jdonnerstag;Even though the patch might work, I wonder whether it is a good idea. Actually I would much rather throw an exception if someone wants to change the name of a tag. No everything that is possible is useful. What is the use case for this?

Juergen","29/Mar/08 09:07;jdpatterson;I was trying to avoid having to create FormComponentPanels or Panels for a dynamically generated form (kind of like bean edit panel).  e.g. I changed an <input> tag into a <select> tag.

But I agree that this is not the best approach.  Perhaps throwing an exception is better.","29/Mar/08 16:13;seitz;Jürgen, do you want to throw an exception in general or just for this specific situation (changing name and type)?
because we need the ability to change tagnames eg. for nested forms.","29/Mar/08 18:14;jdonnerstag;Looking at where setName is used, it becomes obvious that it can not be removed. And since it is used elsewhere in the very same situation, I do not see how we can throw an exception. Unfortunately that leaves us only with the patch. ",30/Mar/08 08:37;jdonnerstag;fixed (and junit test added),,,,,,,,,,,,,,,,,,
Problem with ajax form submission inside model window in IE and Safari ,WICKET-1462,12392642,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,29/Mar/08 21:11,29/Mar/08 22:03,13/Mar/19 23:15,29/Mar/08 22:03,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202430,,,2008-03-29 21:11:42.0,,,,,,0|i0kg1b:,117415,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StreamCorruptedException/PageStore/Serialization broken because ObjectOutputStream was not flushed,WICKET-1445,12392228,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,niclas,niclas,25/Mar/08 06:21,28/Mar/08 23:42,13/Mar/19 23:15,25/Mar/08 06:40,1.3.1,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,The Objects.objectToByteArray() method incorrectly forgets to flush/close the ObjectOutputStream it uses. This can create corrupt object streams.,,,,,,,,,,,,,,,,,,,25/Mar/08 06:21;niclas;wicket-close-stream.patch;https://issues.apache.org/jira/secure/attachment/12378537/wicket-close-stream.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-03-25 06:40:04.927,,,no_permission,,,,,,,,,,,202413,,,Fri Mar 28 23:42:40 UTC 2008,,,,,,0|i0kg3j:,117425,,,,,,,,25/Mar/08 06:21;niclas;This patch should fix this problem.,25/Mar/08 06:40;ivaynberg;good catch!,"25/Mar/08 08:11;niclas;Actually, not quite that fast...

IObjectStreamFactory has the weirdest construct....

What on earth's name is this for? And the close() of the patch above will now instead be a NPE. 
I think Eelco need to explain himself.

public ObjectOutputStream newObjectOutputStream(final OutputStream out) throws IOException
{
    final ObjectOutputStream oos = new ObjectOutputStream(out);
    return new ObjectOutputStream()
    {
        protected void writeObjectOverride(final Object obj) throws IOException
        {
            try
            {
                oos.writeObject(obj);
            }
            catch (IOException e)
            {
                if (SerializableChecker.isAvailable())
                {
                    // trigger serialization again, but this time gather
                    // some more info
                    new SerializableChecker((NotSerializableException)e).writeObject(obj);
                    // if we get here, we didn't fail, while we
                    // should;
                    throw e;
                }
                throw e;
            }
            catch (RuntimeException e)
            {
                log.error(""error writing object "" + obj + "": "" + e.getMessage(), e);
                throw e;
            }
        }
    };
}
","25/Mar/08 08:26;jcompagner;thats for our SerializableChecker so that people gets a nice result where it exactly goes wrong

And i guess you mean why make a new ObjectOutputStream and then another one to do that?
That has to be only a default constructor call sets the enableOverride = true; to the right value
else you cant have the writeObjectOverride method..

i will fix this by adding 2 more methods, flush and close that will delegate also..","25/Mar/08 08:54;niclas;But honestly, you guys are raping the intention of the serialization system...
","25/Mar/08 09:04;jcompagner;not really, we dont rape to much (if you dont look at the Wicket In and OutputStreams :) )
That one is just one extra delegate so that we can exactly say what object and what field is going wrong, because that is really lacking in OOS.

Maybe the construct isnt that nice instead of this:
	final ObjectOutputStream oos = new ObjectOutputStream(out);
			return new ObjectOutputStream()
			{
				protected void writeObjectOverride(final Object obj) throws IOException
				{

it should be this

			return new ObjectOutputStream()
			{
	                        final ObjectOutputStream oos = new ObjectOutputStream(out);
				
                               protected void writeObjectOverride(final Object obj) throws IOException

Then it is much more clear that we just wrap 1 in another and then you also see that we really need to flush and close the inner one because that is our state.

				{","26/Mar/08 02:23;dleangen;I didn't see anything go by regarding the NPE that happens after application of this patch.

Has the NPE been fixed, too?",26/Mar/08 08:35;jcompagner;yes that null pointer shouldn't happen with the latest code,"28/Mar/08 19:07;danielyien;After making all changes above and applying the patch (I'm using wicket 1.3.2), I'm still getting this NPE:

ERROR Objects () - Error serializing object class MyPage [object=[Page class = MyPage id = 0, version = 0]]
java.lang.NullPointerException
	at java.io.ObjectOutputStream.flush(Unknown Source)
	at java.io.ObjectOutputStream.close(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1093)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:197)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:810)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)

Does anyone have any idea what is causing this problem? It wasn't happening on wicket 1.2.","28/Mar/08 23:42;jcompagner;that patch about is not right no.

You just should use the 1.3 snaphost (so 1.3.3) there it is fixed just fine.",,,,,,,,,,,,,,
WIcket Filter ignoring query parameters on redirect,WICKET-1416,12390883,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,atberman,atberman,12/Mar/08 20:24,24/Mar/08 23:14,13/Mar/19 23:15,24/Mar/08 23:14,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"If you do a get on http://yoursite/yourapp?id=3 for the first time, Wicket will redirect to the home page and ignore the query params.   The issue is on line 255 of WicketFilter where it builds the URL.  It neglects to take into account the query params.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-24 23:14:00.416,,,no_permission,,,,,,,,,,,202387,,,Mon Mar 24 23:14:00 UTC 2008,,,,,,0|i0kg6n:,117439,,,,,,,,24/Mar/08 23:14;almaw;Fixed in r640638.,,,,,,,,,,,,,,,,,,,,,,,
BundleStringResourceLoader throws NPE if component is null,WICKET-1415,12390860,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tonyvegas,tonyvegas,12/Mar/08 17:06,23/Mar/08 05:15,13/Mar/19 23:15,23/Mar/08 05:15,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"When an AjaxServerAndClientTimeFilter calls its method ""getStatusString"", no component is set as attached object. Thus, when calling loadStringResource(final Component component, final String key) in BundleStringResourceLoader, a NullPointerException is thrown.

The error occured after we added a BundleStringResourceLoader to our applicationsettings (webApplication.getResourceSettings().addStringResourceLoader(blah))

Stacktrace:
java.lang.NullPointerException
	at org.apache.wicket.resource.loader.BundleStringResourceLoader.loadStringResource(BundleStringResourceLoader.java:94)
	at org.apache.wicket.Localizer.getString(Localizer.java:221)
	at org.apache.wicket.Localizer.getString(Localizer.java:131)
	at org.apache.wicket.markup.html.AjaxServerAndClientTimeFilter.getStatusString(AjaxServerAndClientTimeFilter.java:97)
	at org.apache.wicket.markup.html.AjaxServerAndClientTimeFilter.filter(AjaxServerAndClientTimeFilter.java:62)
	at org.apache.wicket.Response.filter(Response.java:104)
	at org.apache.wicket.protocol.http.BufferedWebResponse.filter(BufferedWebResponse.java:123)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1104)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1334)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:493)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at com.planetj.servlet.filter.compression.CompressingFilter.doFilter(CompressingFilter.java:222)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:313)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:830)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202386,,,2008-03-12 17:06:23.0,,,,,,0|i0kg6v:,117440,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester.startPage(Class) does not trigger WebRequestCycle.onBeginRequest,WICKET-1434,12391799,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lvonk,lvonk,18/Mar/08 22:14,23/Mar/08 02:49,13/Mar/19 23:15,23/Mar/08 02:49,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"While using WicketTester to test my WebApplication that is using a custom WebRequestCycle and WebRequestCycleProcessor I noticed that WicketTester does not follow the same RequestCycle as it would do when running in a real live environment resulting in MyWebRequestCycle.onBeginRequest not being called.

Using startPage(Page) will call MyWebRequestCycle.onBeginRequest but then the IRequestTarget that is resolved from the Request indicates the Request comes from the DummyHomePage.testPage link. 

Can startPage be implemented that it really resembles the real live environment? After some research and testing I came up with this implementation, maybe it can be used:

public Page startPage(Class pageClass) {
  WebRequestCycle requestCycle = super.setupRequestAndResponse();
  requestCycle.getRequest().getRequestParameters().setBookmarkablePageClass(pageClass.getName());
  super.processRequestCycle(requestCycle);
  return super.getLastRenderedPage();
}",,,,,,,,,,,,,,,WICKET-1435,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202403,,,2008-03-18 22:14:27.0,,,,,,0|i0kg53:,117432,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester.clickLink(String) only triggers the WebRequestCycle.onEndRequest,WICKET-1435,12391802,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,lvonk,lvonk,18/Mar/08 22:20,23/Mar/08 02:49,13/Mar/19 23:15,23/Mar/08 02:49,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"This issue is somewhat related to WICKET-1434.

The WebRequestCycle.onBeginRequest is called in a real live environment.

I created an implementation for WicketTester for clicking AjaxLink's that triggers the onBeginRequest but I can't really asses if it breaks something. Maybe it can be used as example or something:

class MyWicketTester extends WicketTester {
       public void clickAjaxLink(String linkPath) {
            WebRequestCycle cycle = super.setupRequestAndResponse();
            cycle.getRequest().getRequestParameters().setInterfaceName(IBehaviorListener.class.getSimpleName());
            cycle.getRequest().getRequestParameters().setBehaviorId(""0"");
            cycle.getRequest().getRequestParameters().setComponentPath(getComponentFromLastRenderedPage(linkPath).getPath());
            super.processRequestCycle(cycle);
        }
}

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202404,,,2008-03-18 22:20:43.0,,,,,,0|i0kg4v:,117431,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form processing throws NPE if button.onsubmit() moves the button or its parents out of the component hierarchy,WICKET-1430,12391662,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,17/Mar/08 18:56,17/Mar/08 18:58,13/Mar/19 23:15,17/Mar/08 18:58,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,if button.onsubmit() takes the button out of hierarchy form processing breaks. the reason is that after onsubmit() of the button is ran wicket will call button.getform() which returns null because the button is out of the component hierarchy,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202400,,,2008-03-17 18:56:58.0,,,,,,0|i0kg5j:,117434,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Localizer doesn't honor style when caching property lookups,WICKET-1361,12389090,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tesh11,tesh11,20/Feb/08 09:26,10/Mar/08 15:43,13/Mar/19 23:15,09/Mar/08 07:36,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"In Wicket 1.2.6, we created some properties files like:

Foo.properties
Foo_style1.properties
Foo_style2.properties

and used StringResourceModel to look up property values.  This worked correctly as in 1.2.6, Localizer didn't cache the property lookups and respected the style.  However, in 1.3, Localizer now caches the lookups but doesn't respect the style when creating the cache key (though it does append the locale to the end of the cache key).

The side-effects of this are that whatever style is in use when a property is first looked up, that property value will be returned for all subsequent lookups regardless of style.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-10 15:38:44.066,,,no_permission,,,,,,,,,,,202339,,,Mon Mar 10 15:43:25 UTC 2008,,,,,,0|i0kgd3:,117468,,,,,,,,"10/Mar/08 09:13;tesh11;Hi Igor,

You obviously know the code much better than I do, so please forgive me if this is not correct.  But, it appears as though the variation is always returned along with the style in Component.getStyle() and that's a final method so no one can change it.  In that case, including the variation explicitly in the cache key would be unnecessary, right?

Thanks,
Meetesh","10/Mar/08 15:38;ivaynberg;for now it does, but in 1.4 it will be split out. we meant to do it in 1.3 but forgot.",10/Mar/08 15:42;tesh11;that's good to know.  thanks for the information and we'll keep that in mind for migration.,"10/Mar/08 15:43;ivaynberg;i commented out the localizer line for now, and added a todo for 1.4",,,,,,,,,,,,,,,,,,,,
"Having instance variables referencing pages causes memory leaks, StackOverflowErrors and ClassCastExceptions",WICKET-1365,12389272,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,henrik.lundahl,henrik.lundahl,22/Feb/08 00:37,09/Mar/08 09:46,13/Mar/19 23:15,09/Mar/08 09:46,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"Having references (instance variables), in objects reachable from the component hierarchy, to pages other than the ""current"" page, causes memory leaks StackOverflowErrors and sometimes ClassCastExceptions.

This seems to be due to the special serialization code implemented in Page, even if I haven't been able to pinpoint exactly where the problem lies. Standard serialization handles cycles between objects if the deserialization or serialization is done using the same ObjectInputStream or ObjectOutputStream, but here each Page is being deserialized in different ObjectInputStreams.

Looking at the stack traces from the StackOverflowErrors it's easy to see that it's the deserialization that goes over the same pages over and over again (although it's new instances).

The ClassCastExceptions where because the Page.numericId was zero when serializing them in Page.writeObject, causing the wrong Page to be deserialized in readObject. By looking at the code I can't really understand how the numericId can become zero, except for in the first page. The only thing I can think of is if it's being serialized by another thread before it's initialized.

Our application is ""AJAX only"" with a main page built up of quite a lot of components in a quite deep hierarchy. When discovering this problem, there was one panel with seven different AjaxLinks that opened ModalWindows, where some of the ModalWindows had fields referencing the contained iframe pages. Clicking around on the links soon made the memory and CPU consumption rise and after a while one of the mentioned errors occurred.

Even if I thought that it would, neither turning off page versioning nor setting ISessionSettings.setPageIdUniquePerSession(true) seemed to have any effect.

After redesigning the code a bit, removing all the field references to Pages, it seems to work fine again. I realize that having such references isn't a very good design even without this problem. Perhaps it shouldn't be supported at all. It might be, though, that some users have done this and don't know it's a problem (yet).

Although in the above case it was only AJAX, I've made an example application that also shows that the same problems occurs using normal links, and pages with references between them. I'll attach that example in a couple of minutes.
",,,,,,,,,,,,,,,,,,,22/Feb/08 00:43;henrik.lundahl;ModalWindowTest.zip;https://issues.apache.org/jira/secure/attachment/12376187/ModalWindowTest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-23 07:19:54.54,,,no_permission,,,,,,,,,,,202343,,,Sat Mar 01 23:10:29 UTC 2008,,,,,,0|i0kgcn:,117466,,,,,,,,"22/Feb/08 00:43;henrik.lundahl;Just click around on the links and soon you'll get an OutOfMemoryError. If you increase the maximum heap size you'll likely get a StackOverflowError.

As you can see in the code, I've added som large objects. This is just to decrease the number of clicks needed before the errors occur. It seems that the problem gets much worse when you have a deep and wide component hierarchy.
",23/Feb/08 07:19;knopp; I've commited fix for this problem. Can you please check if it fixes the OOM for you?,"24/Feb/08 19:38;henrik.lundahl;I'm sorry, but I hardly notice any difference. Have you tested with the quick-start example I've attached?","26/Feb/08 09:41;knopp;Hi,

of course I have. I can't get the OOM now (it was very simple before the fix). Can you please make sure that you are running the quickstart with latest trunk and that you don't have the old snapshots somewhere in your classpath? Also I'm not sure if the current snapshot contains the fix (though it should).","26/Feb/08 14:30;henrik.lundahl;I checked out the latest code from http://svn.apache.org/repos/asf/wicket/trunk, added a log statement in org.apache.wicket.Page.writeReplace (which didn't exist before the fix), installed it into my maven repository, ran the test project using first jetty and then tomcat and verified that the log statement was printed. I still get OOME by the seventh or eighth AJAX link click (with -Xmx64M). Do you have any ideas on what I can have overlooked here?","29/Feb/08 11:31;knopp;Actually, I can still reproduce the OOM with the modal window test, though the non-ajax stuff works ok for me. I'll take a look at it.","29/Feb/08 12:16;knopp;Actually, this one was not related to the first OOM problem. This was just a DiskPageStore cache getting OOM. I've fixed that by using SoftReferences. You wouldn't probably encounter this one in production, as it would only happen with very small heap size (like the 64M)

Can you please check if the problem is fixed for you? ",01/Mar/08 23:10;henrik.lundahl;It's fixed. Great job! Thanks!,,,,,,,,,,,,,,,,
When no request target is found for url we should let other filters/servers process the url instead of trying to serve the resource,WICKET-1356,12388945,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,18/Feb/08 21:35,09/Mar/08 08:27,13/Mar/19 23:15,09/Mar/08 08:27,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202335,,,2008-02-18 21:35:49.0,,,,,,0|i0kgdj:,117470,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inline documentation,WICKET-1342,12388651,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,14/Feb/08 10:25,09/Mar/08 01:24,13/Mar/19 23:15,09/Mar/08 01:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,,,,,0,,,,,,,,"svn diff ./jdk-1.5/wicket-examples/src/main/
Index: jdk-1.5/wicket-examples/src/main/webapp/WEB-INF/web.xml
===================================================================
--- jdk-1.5/wicket-examples/src/main/webapp/WEB-INF/web.xml     (Revision 627698)
+++ jdk-1.5/wicket-examples/src/main/webapp/WEB-INF/web.xml     (Arbeitskopie)
@@ -45,6 +45,10 @@
                <param-value>deployment</param-value>
        </context-param>
 
+<!--
+       Parameter used by Spring to locate its context configuration used for creating
+       a WebApplicationContext.  
+-->
        <context-param>
                <param-name>contextConfigLocation</param-name>
                <param-value>classpath:applicationContext.xml</param-value>
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202322,,,2008-02-14 10:25:30.0,,,,,,0|i0kgen:,117475,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MiniMap IndexOutOfBoundsException when empty,WICKET-1383,12389851,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jdpatterson,jdpatterson,29/Feb/08 09:10,08/Mar/08 20:45,13/Mar/19 23:15,08/Mar/08 20:45,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"findKey() assumes that there is at least one entry in the map

This checks first:



Index: /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/util/collections/MiniMap.java
===================================================================
--- /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/util/collections/MiniMap.java	(revision 614519)
+++ /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/util/collections/MiniMap.java	(working copy)
@@ -118,13 +118,16 @@
 	 */
 	public Object get(final Object key)
 	{
-		// Search for key
-		final int index = findKey(key);
-
-		if (index != -1)
+		if (size > 0)
 		{
-			// Return value
-			return values[index];
+			// Search for key
+			final int index = findKey(key);
+
+			if (index != -1)
+			{
+				// Return value
+				return values[index];
+			}
 		}
 
 		// Failed to find key

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202358,,,Mon Mar 03 15:28:57 UTC 2008,,,,,,0|i0kgan:,117457,,,,,,,,03/Mar/08 15:28;jdpatterson;Oh actually the problem was in findKey() so the fix should go in there,,,,,,,,,,,,,,,,,,,,,,,
FormComponent.error(ivalidationerror) error needs to show tried resource keys,WICKET-1400,12390386,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aabraham,aabraham,06/Mar/08 19:54,08/Mar/08 19:58,13/Mar/19 23:15,08/Mar/08 19:58,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"Please see the following discussion from Wicket forum 
http://www.nabble.com/Having-problems-with-resource-keys-in-a-form-which-has-two-panels-of-the-same-kind-td15881597.html","Windows XP, Eclipse, Java 1.4",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202373,,,2008-03-06 19:54:39.0,,,,,,0|i0kg8n:,117448,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in palette.html,WICKET-1353,12388889,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,guellepump,guellepump,17/Feb/08 22:01,17/Feb/08 22:12,13/Mar/19 23:15,17/Feb/08 22:12,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket-extensions,,,,0,,,,,,,,"In the file 
wicket-extensions:/src/main/java/org/apache/wicket/extensions/markup/html/form/palette/Palette.html is a typo.

The first table tags attribute celpadding="""" must be cellpadding=""""","Linux, Java 1.5, Apache 6.0.24",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202332,,,2008-02-17 22:01:36.0,,,,,,0|i0kgdz:,117472,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Wicket-spring Fix for classloading in a clustered Weblogic 9.x,WICKET-279,12362600,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,weaver,weaver,12/Feb/07 16:44,11/Feb/08 11:13,13/Mar/19 23:15,02/May/07 21:34,1.2.3,1.2.4,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-spring,,,,0,,,,,,,,"This patch addresses an issue with classloading performed by wicket.proxy.LazyInitProxyFactory within the context of a Weblogic Server 9.2 clustered application environment (stack trace at the bottom of the email).  The long and the short of it is that
Thread.currentThread().getContextClassLoader() will fail to load the proxied interface.  The fix was quite simple: catch the IAE and attempt to load the interface using the current classloader (LazyInitProxyFactory.class.getClassLoader()).  This works like a charm and I have had in production for almost 3 months now with no issues whatsoever.


Stacktrace from WLS 9.2

<Nov 20, 2006 10:23:18 AM EST> <Error> <Kernel> <BEA-000802> <ExecuteRequest fai

led

 java.lang.IllegalArgumentException: interface com.ugs.it.partnersxpress.util.Or

derTrackingBeanFactory is not visible from class loader.

java.lang.IllegalArgumentException: interface com.ugs.it.partnersxpress.util.Ord

erTrackingBeanFactory is not visible from class loader

        at weblogic.rjvm.ResponseImpl.unmarshalReturn(ResponseImpl.java:195)

        at weblogic.rmi.internal.BasicRemoteRef.invoke(BasicRemoteRef.java:224)

        at weblogic.cluster.replication.ReplicationManager_920_WLStub.update(Unk

nown Source)

        at weblogic.cluster.replication.ReplicationManager.updateSecondary(Repli

cationManager.java:525)

        at weblogic.servlet.internal.session.ReplicatedSessionData.syncSession(R

eplicatedSessionData.java:516)

        Truncated. see log file for complete stacktrace

java.lang.IllegalArgumentException: interface com.ugs.it.partnersxpress.util.Ord

erTrackingBeanFactory is not visible from class loader

        at java.lang.reflect.Proxy.getProxyClass(Proxy.java:345)

        at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:564)

        at wicket.proxy.LazyInitProxyFactory.createProxy(LazyInitProxyFactory.ja

va:124)

        at wicket.proxy.LazyInitProxyFactory$ProxyReplacement.readResolve(LazyIn

itProxyFactory.java:206)

        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

        Truncated. see log file for complete stacktrace

> 

<Nov 20, 2006 10:23:18 AM EST> <Error> <Kernel> <BEA-000802> <ExecuteRequest fai

led

 java.lang.IllegalArgumentException: interface com.ugs.it.partnersxpress.util.Or

derTrackingBeanFactory is not visible from class loader.

java.lang.IllegalArgumentException: interface com.ugs.it.partnersxpress.util.Ord

erTrackingBeanFactory is not visible from class loader

        at weblogic.rjvm.ResponseImpl.unmarshalReturn(ResponseImpl.java:195)

        at weblogic.rmi.internal.BasicRemoteRef.invoke(BasicRemoteRef.java:224)

        at weblogic.cluster.replication.ReplicationManager_920_WLStub.update(Unk

nown Source)

        at weblogic.cluster.replication.ReplicationManager.updateSecondary(Repli

cationManager.java:525)

        at weblogic.servlet.internal.session.ReplicatedSessionData.syncSession(R

eplicatedSessionData.java:516)

        Truncated. see log file for complete stacktrace

java.lang.IllegalArgumentException: interface com.ugs.it.partnersxpress.util.Ord

erTrackingBeanFactory is not visible from class loader

        at java.lang.reflect.Proxy.getProxyClass(Proxy.java:345)

        at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:564)

        at wicket.proxy.LazyInitProxyFactory.createProxy(LazyInitProxyFactory.ja

va:124)

        at wicket.proxy.LazyInitProxyFactory$ProxyReplacement.readResolve(LazyIn

itProxyFactory.java:206)

        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

        Truncated. see log file for complete stacktrace

> 


",Weblogic 9.2 (clustered environment) on Solaris 10.0,,,,,,,,,,,,,,,,,,12/Feb/07 16:45;weaver;fix-wls-clustered-classloading.patch;https://issues.apache.org/jira/secure/attachment/12350939/fix-wls-clustered-classloading.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-02-11 11:13:10.705,,,no_permission,,,,,,,,,,,201352,,,Mon Feb 11 11:13:10 UTC 2008,,,,,,0|i0kj8n:,117934,,,,,,,,11/Feb/08 11:13;thrantal;Could this also be fixed in 1.2 (1.2.7 maybe)? This would fix some problems of deployin 1.2 applications to WLS cluster.,,,,,,,,,,,,,,,,,,,,,,,
PrependingStringBuffer.hashCode() doesn't meet its contract,WICKET-1294,12386610,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,18/Jan/08 14:46,09/Feb/08 20:32,13/Mar/19 23:15,09/Feb/08 20:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,,,,,0,,,,,,,,"PrependingStringBuffer.hashCode() doesn't meet its contract

Test code showing this:

svn diff
Index: jdk-1.4/wicket/src/test/java/org/apache/wicket/util/string/PrependingStringBufferTest.java
===================================================================
--- jdk-1.4/wicket/src/test/java/org/apache/wicket/util/string/PrependingStringBufferTest.java  (Revision 613174)
+++ jdk-1.4/wicket/src/test/java/org/apache/wicket/util/string/PrependingStringBufferTest.java  (Arbeitskopie)
@@ -70,5 +70,18 @@
                assertTrue(psb.equals(psb));
        }
 
+       /**
+        * Test if implementation of hashCode() meets its <a
+        * href=""http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Object.html#hashCode()"">contract<a>.
+        * 
+        * @throws Exception
+        */
+       public void testHash() throws Exception
+       {
+               PrependingStringBuffer foo = new PrependingStringBuffer(""foo"");
+               PrependingStringBuffer bar = new PrependingStringBuffer(""foo"");
+               assertTrue(foo.equals(bar));
+               assertEquals(foo.hashCode(), bar.hashCode());
+       }
 
 }
"," svn info
Pfad: .
URL: https://svn.apache.org/repos/asf/wicket/trunk
Basis des Projektarchivs: https://svn.apache.org/repos/asf
UUID des Projektarchivs: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 613174
Knotentyp: Verzeichnis
Plan: normal
Letzter Autor: ivaynberg
Letzte geänderte Rev: 612893
Letztes Änderungsdatum: 2008-01-17 18:57:14 +0100 (Do, 17 Jan 2008)
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202278,,,2008-01-18 14:46:45.0,,,,,,0|i0kghz:,117490,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TextArea trims content when saved,WICKET-1308,12387230,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,handyande,handyande,26/Jan/08 23:26,09/Feb/08 20:15,13/Mar/19 23:15,09/Feb/08 20:15,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"the TextArea uses the default convertValue( String[] ) method which trims it's content.
This causes me problems, so my component needs to be defined thus:

            add( new TextArea( ""content"" )
            {
                protected Object convertValue(String[] value) throws ConversionException
                {
                    return value != null && value.length > 0 && value[0] != null ? value[0] : null;
                }
            });

Which overrides and removes the trim() call.
Suggest this override should be in TextArea, maybe optional?","java 5 on safari and firefox, though it does not matter ;)",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-09 20:15:43.667,,,no_permission,,,,,,,,,,,202290,,,Sat Feb 09 20:15:43 UTC 2008,,,,,,0|i0kggv:,117485,,,,,,,,09/Feb/08 20:15;ivaynberg;see FormComponent#shouldTrimInput(),,,,,,,,,,,,,,,,,,,,,,,
Script in RenderHead method of AjaxFormChoiceComponentUpdatingBehavior needs fixing,WICKET-1271,12385855,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,dipu_esp,dipu_esp,09/Jan/08 11:23,25/Jan/08 15:49,13/Mar/19 23:15,14/Jan/08 21:18,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"The script in the renderHead method of AjaxFormChoiceComponentUpdatingBehavior assumes that the  Radio Component will be the immediate child of the RadioGroup Component, But in some or in most of the cases that is not correct.

That is not the case even in the Wicket Examples, in examples the hierarchy is RadioGroup/ListView/Radio.

I have maodied the rendered script to work for RadioGroup/ListView/Radio hierarchy. 

And the Patch is attached.

Regards
Dipu


",,,,,,,,,,,,WICKET-1258,,,,,,,09/Jan/08 11:26;dipu_esp;AjaxFormChoiceComponentUpdatingBehavior_patch_revision_610340.txt;https://issues.apache.org/jira/secure/attachment/12372786/AjaxFormChoiceComponentUpdatingBehavior_patch_revision_610340.txt,25/Jan/08 14:33;verhage;patch.txt;https://issues.apache.org/jira/secure/attachment/12374041/patch.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-01-25 14:33:32.642,,,no_permission,,,,,,,,,,,202256,,,Fri Jan 25 14:33:32 UTC 2008,,,,,,0|i0kgkn:,117502,,,,,,,,09/Jan/08 11:27;dipu_esp;Patch for the rendered Script in AjaxFormChoiceComponentUpdatingBehavior,"25/Jan/08 14:33;verhage;More elegant way of fetching descendant input elements, without cumbersome loop

/edit:
Grmbl, nevermind my patch, doesn't seem to work in firefox...

/edit 2:
I stand corrected, my patch seems to also work within firefox. However, if I declare my HTML like:

<table>
  <tr>
    <span wicket:id=""radiogroup"" id=""someid"">
      <td><input wicket:id=""radio1"" /></td>
      <td><input wicket:id=""radio1"" /></td>
    </span>
  </tr>
</table>

won't work as firefox does not accept the span tag between <tr> and <td>, and therefore will return a single node of #text when calling document.getElementById('someid').childNodes. Placing the span outside the table works. IE doesn't seem too picky about this.",,,,,,,,,,,,,,,,,,,,,,
PrependingStringBuffer.equals(Object obj) is not reflexive,WICKET-1290,12386491,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,17/Jan/08 12:22,17/Jan/08 17:57,13/Mar/19 23:15,17/Jan/08 17:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"PrependingStringBuffer.equals(Object obj) is not reflexive

TestCase showing this:


 svn diff
Index: jdk-1.4/wicket/src/test/java/org/apache/wicket/util/string/PrependingStringBufferTest.java
===================================================================
--- jdk-1.4/wicket/src/test/java/org/apache/wicket/util/string/PrependingStringBufferTest.java  (Revision 612392)
+++ jdk-1.4/wicket/src/test/java/org/apache/wicket/util/string/PrependingStringBufferTest.java  (Arbeitskopie)
@@ -56,4 +56,17 @@
                psb.prepend('1');
                assertEquals(""1234567890"", psb.toString());
        }
+
+       /**
+        * Test <a
+        * href=""http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Object.html#equals(java.lang.Object)"">reflexivity<a>
+        * of the equals implementation.
+        * 
+        * @throws Exception
+        */
+       public void testEqualsReflexive() throws Exception
+       {
+               PrependingStringBuffer psb = new PrependingStringBuffer(""foo"");
+               assertTrue(psb.equals(psb));
+       }
 }
"," svn info
Pfad: .
URL: https://svn.apache.org/repos/asf/wicket/trunk
Basis des Projektarchivs: https://svn.apache.org/repos/asf
UUID des Projektarchivs: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 612392
Knotentyp: Verzeichnis
Plan: normal
Letzter Autor: gseitz
Letzte geänderte Rev: 612310
Letztes Änderungsdatum: 2008-01-16 00:38:25 +0100 (Mi, 16 Jan 2008)
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202274,,,2008-01-17 12:22:51.0,,,,,,0|i0kgin:,117493,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxFormChoiceComponentUpdatingBehavior assumes Radio/Choice items are a direct child of the group in the client-side DOM,WICKET-1258,12385528,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mclark00,mclark00,03/Jan/08 20:53,14/Jan/08 21:18,13/Mar/19 23:15,14/Jan/08 21:18,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"In the reference behavior, the attachFormChoiceHandlers javascript function being rendered in onRenderHead incorrectly assumes that the individual choices we're attaching events to (the Radio or CheckBox components) are direct children of the group.

64) asb.append(""function attachChoiceHandlers(markupid, callbackscript) {\n"");
65) asb.append("" var choiceElement = document.getElementById(markupid);\n"");
66) asb.append("" for( var x = 0; x < choiceElement.childNodes.length; x++ ) {\n"");
67) asb.append(""   if (choiceElement.childNodes[x] && choiceElement.childNodes[x].tagName) {\n"");
68) asb.append(""     var tag = choiceElement.childNodes[x].tagName.toLowerCase();\n"");
69) asb.append(""     if (tag == 'input') {\n"");
70) asb.append(""       Wicket.Event.add(choiceElement.childNodes[x],'click', callbackscript);"");
71) asb.append(""     }\n"");
72) asb.append(""   }\n"");
73) asb.append("" }\n"");
74) asb.append(""}\n"");

The problem is the loop on line 66 - it only loops through direct child nodes, when in reality there could be other elements (like spans) in between the RadioGroup and the Radio in the dom, especially if for some reason the Radio was included as a part of another Component, which was actually added to the RadioGroup.

The fix should be simple, but I don't know the appropriate Wicket-approved function of recursing through children in the client-side.

As a side note, is there a reason this recursion is done on the client-side rather than on the server-side?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-04 07:22:39.764,,,no_permission,,,,,,,,,,,202245,,,Fri Jan 04 07:22:39 UTC 2008,,,,,,0|i0kgmn:,117511,,,,,,,,"03/Jan/08 21:40;mclark00;FYI - I think we figured out why it's done on the server-side, and that might be because of the  interactions with ListView and other MarkupContainers who might be modifying the structure of the component hierarchy after the behavior's renderHead method.  So the remaining problem is just that the client-side javscript referenced above does not recurse through all descendants, it's just looking at immediate children.","04/Jan/08 07:22;ivaynberg;johan, this one is yours right?",,,,,,,,,,,,,,,,,,,,,,
FLAG_HAS_BEEN_RENDERED is set when rendering invisible components,WICKET-1275,12386083,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,weazelb0y,weazelb0y,11/Jan/08 21:38,14/Jan/08 21:08,13/Mar/19 23:15,14/Jan/08 21:08,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"I attached an example project so you can see exactly what the problem is. Just unzip, mvn eclipse:eclipse (or whatever) and import the project and run it.

Basically I have a couple radio buttons and want to display different Palettes and other options based on the radio button picked. When I click on a radio button I get the following error:

WicketMessage: Unable to find component with id 'recorder' in [MarkupContainer [Component id = options1Palette, page = wicketbug.Home, path = 10:form:container:options1Palette.Palette, isVisible = true, isVersioned = true]]. This means that you declared wicket:id=recorder in your markup, but that you either did not add the component to your page at all, or that the hierarchy does not match.
[markup = jar:file:/home/jtoth/.m2/repository/org/apache/wicket/wicket-extensions/1.3.0/wicket-extensions-1.3.0.jar!/org/apache/wicket/extensions/markup/html/form/palette/Palette.html

If you comment lines 73 and 74 in Home.java so the palettes are displayed from the start everything works fine.

Let me know if you need anything else.

Thanks!",,,,,,,,,,,,,,,,,,,11/Jan/08 21:40;weazelb0y;wicket-bug.zip;https://issues.apache.org/jira/secure/attachment/12373012/wicket-bug.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-14 06:35:32.015,,,no_permission,,,,,,,,,,,202259,,,Mon Jan 14 21:08:02 UTC 2008,,,,,,0|i0kgk7:,117500,,,,,,,,"14/Jan/08 06:35;ivaynberg;i tried to look into it, but ran out of time. matej can you take a look, youve actually tweaked the request target recently so maybe this is a regression.

basically we never cascade the onbeforerender() to all children. we call component.preparerender() and that calls onbeforerender() but only on that component.

this error happens because palette creates the recorder lazily in its onbeforerender callback, and since that is never invoked...
",14/Jan/08 21:08;knopp;Problem was in HAS_BEEN_RENDERED flag setting for invisible components. Fixing this fixed the quick start,,,,,,,,,,,,,,,,,,,,,,
Choice components do not propery update models if type is set,WICKET-1285,12386216,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,14/Jan/08 19:32,14/Jan/08 19:32,13/Mar/19 23:15,14/Jan/08 19:32,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,formcomponent.convertinput() checks if type is set and if it is it bypasses convertvalue() and uses a converter directly - which means if type is set choice component's choice renderer is bypassed and the submitted id value is set as the model object instead of the choice it represents.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202269,,,Mon Jan 14 19:32:59 UTC 2008,,,,,,0|i0kgj3:,117495,,,,,,,,14/Jan/08 19:32;ivaynberg;choice components settype() not throw an exception for non-null types,,,,,,,,,,,,,,,,,,,,,,,
AjaxFormSubmitBehavior doesn't work well with nested forms,WICKET-1282,12386212,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,14/Jan/08 19:09,14/Jan/08 19:16,13/Mar/19 23:15,14/Jan/08 19:16,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202266,,,2008-01-14 19:09:19.0,,,,,,0|i0kgjb:,117496,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in ListMultipleChoice.updateModel(),WICKET-1270,12385851,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,maentele,maentele,09/Jan/08 10:57,14/Jan/08 06:42,13/Mar/19 23:15,14/Jan/08 06:42,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"I noticed a NullPointerException when I cleared a Form with a ListMultipleChoice to its original state.
In updateModel() following statement causes a NPE when something was selected in the multiple select but in the original state nothing was selected:

selectedValues.addAll((Collection)getConvertedInput());

getConvertedInput() is null, so ArrayList.addAll() operates on the null value and throws the NPE.",,,,,,,,,,,,,,,,,,,09/Jan/08 11:08;maentele;WICKET-1270.patch;https://issues.apache.org/jira/secure/attachment/12372784/WICKET-1270.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202255,,,Wed Jan 09 11:08:44 UTC 2008,,,,,,0|i0kgkv:,117503,,,,,,,,09/Jan/08 11:08;maentele;Simple patch which first checks if getConvertedInput() is null.,,,,,,,,,,,,,,,,,,,,,,,
modal.js conflicts with mootools and possibly other javascript frameworks. + patch fix,WICKET-1249,12385315,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,victori,victori,29/Dec/07 07:54,12/Jan/08 21:30,13/Mar/19 23:15,12/Jan/08 21:30,1.3.0-rc2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket-extensions,,,,0,,,,,,,,"Modal.js  issues

1. Modal.js defines Class instead of Wicket.Class. Modal.js tries to define new Wicket classes via Class instead of Wicket.Class.xxx.
2. Object.extend conflicts with mootools, so I created a new Wicket class Wicket.Object with an extend method.

Here is the patch against wicket-extensions trunk. This works perfectly with mootools-trunk

http://temp.fabulously40.com/~victori/modalconflictfix.patch",linux / jdk 1.6 etc,,,,,,,,,,,,,,,,,,05/Jan/08 04:16;victori;modalconflictfix.patch;https://issues.apache.org/jira/secure/attachment/12372551/modalconflictfix.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-04 07:04:30.7,,,no_permission,,,,,,,,,,,202236,,,Sat Jan 05 04:16:12 UTC 2008,,,,,,0|i0kgnj:,117515,,,,,,,,"04/Jan/08 07:04;ivaynberg;it would be great if you could attach that patch to this jira issue as an attachment and check the ""attach under asl2"" attachment option. that makes it much easier licensing wise for us to integrate that patch directly.",05/Jan/08 04:16;victori;patch fix,,,,,,,,,,,,,,,,,,,,,,
"When no component is focused on AjaxRequestTarget, wicket tries to focus element with id 'null'",WICKET-1277,12386118,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,12/Jan/08 19:14,12/Jan/08 19:15,13/Mar/19 23:15,12/Jan/08 19:15,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202261,,,2008-01-12 19:14:33.0,,,,,,0|i0kgjz:,117499,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binding to a BigDecimal don't honor browser locale,WICKET-1254,12385388,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ziba,ziba,01/Jan/08 15:00,10/Jan/08 04:23,13/Mar/19 23:15,10/Jan/08 04:23,1.3.0-rc2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"Binding from a TextField to a BigDecimal property does not honor the Locale used by the browser.

With the pt_BR locale configured in Firefox, binding ""0,25"" to a Double works as expected giving 0.25 value, but to a BigDecimal it gives the error ""'0,25' não é um BigDecimal válido.""

It is a major problem with localized applications.","Windows XP, Firefox 2.0.0.11, tomcat-5.5.25, Java 1.6.0_03",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-01-01 19:35:19.391,,,no_permission,,,,,,,,,,,202241,,,Thu Jan 10 00:27:57 UTC 2008,,,,,,0|i0kgnb:,117514,,,,,,,,"01/Jan/08 19:35;frankbille;Don't set fix version, if it's not actually fixed in that version.","07/Jan/08 22:00;seitz;you can easily create a subclass of AbstractNumberConverter and do the conversion yourself with DecimalFormat.

i agree that this might be confusing as it ""somehow"" works.
i'd say we should either provide a BigDecimalConverter as default or remove the ""broken"" magic default conversion (which is pretty much impossible right now)

what do others think?","10/Jan/08 00:27;ziba;Yes, it is easy to create a BigDecimalConverter, but as it is a type provided by Java itself, it makes sense to include such a converter in core Wicket... We should apply the ""Principle of Least Surprise""!

I used the converter below and it worked fine:

     class BigDecimalConverter extends AbstractDecimalConverter {

        protected Class getTargetType() {
            return BigDecimal.class;
        }

        public Object convertToObject(String value, Locale locale) {
            if (value == null || value.trim().equals(""""))
                return null;

            NumberFormat format = getNumberFormat(locale);
            try {
                return format.parse(value);
            } catch (Exception e) {
                throw newConversionException(""Cannot parse '"" + value + ""' using format "" + format,
                        value, locale).setFormat(format);
            }
        }
    }
",,,,,,,,,,,,,,,,,,,,,
CheckBox.setRequired() is not picked up in 1.3-final,WICKET-1260,12385589,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,edvin,edvin,04/Jan/08 15:47,07/Jan/08 03:37,13/Mar/19 23:15,07/Jan/08 03:37,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,,,,0,,,,,,,,"I found that when upgrading from 1.3-rc2 to 1.3-final, the setRequired() on a CheckBox I had was no longer registered as a field-error when posting the form with no value in the checkbox.

Steps to reproduce:

Create a quickstrart project and put the following in the HomePage.java:

public class HomePage extends WebPage {
    public HomePage(final PageParameters parameters) {
    	add(new FeedbackPanel(""feedback""));
    	
    	Form f = new Form(""f"");
    	add(f);
    	
    	CheckBox agree = new CheckBox(""agree"", new Model());
    	agree.setRequired(true);
    	f.add(agree);
    	
    	Button submit = new Button(""submit"");
    	f.add(submit);
    }
}


Then HomePage.html:

<html xmlns:wicket=""http://wicket.apache.org"">
    <body>
    	<div wicket:id=""feedback"">Feedback</div>
    	
        <form wicket:id=""f"">
			<label>Agree</label>
			<input type=""checkbox"" wicket:id=""agree"" />
			
			<input type=""submit"" wicket:id=""submit"" />        	
        </form>
    </body>
</html>

With 1.3-final I don't get a feedback/error message. With 1.3-rc2, the feedback message ""Field 'agree' is required."" shows up when I post the form.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202247,,,2008-01-04 15:47:11.0,,,,,,0|i0kgm7:,117509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Submit button, multipart content and UploadProgressBar",WICKET-812,12375282,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,linuxroot,linuxroot,03/Aug/07 09:13,05/Jan/08 23:23,13/Mar/19 23:15,05/Jan/08 23:23,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket-extensions,,,,0,,,,,,,,"When I use UploadProgressBar, then onSubmit method of SubmitButton not function. I can not also find submit button with findSubmittingButton method of Form. I search this problem. And I find only - submit button is not in http request parameter.","windows xp, firefox 2.0.0.6
",,,,,,,,,,,,,,,,,,07/Sep/07 21:54;linuxroot;wicket-bug-812.tar.gz;https://issues.apache.org/jira/secure/attachment/12365379/wicket-bug-812.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-21 14:54:05.113,,,no_permission,,,,,,,,,,,201838,,,Sun Dec 23 01:13:46 UTC 2007,,,,,,0|i0khtj:,117704,,,,,,,,"21/Aug/07 14:54;jbq;Would you mind filing an example source code, preferably in the form of a ""quickstart"" project?","07/Sep/07 21:54;linuxroot;I uploaded an example of this problem. When you run this application, you can see form with upload file field, upload progress bar and submit button. When you click on submit upload button than you see -  onSubmit method of form is called, but onSubmit method of submit button is not called.","16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.","23/Dec/07 01:13;seitz;the problem seems to be that the generated onSubmit attribute of the form ends with ""return false;"" (generated by UploadProgressBar).
after removing this piece of code, the submit button and other formfields are sent with the submission.

does anybody know, why ""return false"" is in there?
the author is supposed to be ""Andrew Lombardi"".",,,,,,,,,,,,,,,,,,,,
UploadProgressBar incompatible with submit buttons onSubmit method (in FireFox at least),WICKET-1194,12383614,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,handyande,handyande,30/Nov/07 11:06,05/Jan/08 23:23,13/Mar/19 23:15,05/Jan/08 23:23,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket-extensions,,,,0,,,,,,,,"The UploadProgressBar calls form.submit() which, in Firefox at least (not Safari) bypasses the onSubmit methods of the submit buttons.
This is a mighty pain for me, as the onSubmit of buttons is just as important as that of the form...","Java 5 on OSX and Ubuntu, testing in FireFox 1.x and 2",,,,,,,,,,,WICKET-812,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-16 18:19:57.802,,,no_permission,,,,,,,,,,,202190,,,Sun Dec 16 18:19:57 UTC 2007,,,,,,0|i0kgrr:,117534,,,,,,,,"16/Dec/07 18:19;jcompagner;yes upload progress bar cancels the current submit and then immediately does the submit of its own
Maybe we still can figure out which button is pressed and at that as a param?
",,,,,,,,,,,,,,,,,,,,,,,
Javadoc for IConverter need to be more clear regarding nullable arguments,WICKET-1179,12383054,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,sbailliez,sbailliez,22/Nov/07 11:31,29/Dec/07 14:30,13/Mar/19 23:15,11/Dec/07 05:37,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-final,,,wicket,,,,0,,,,,,,,"The javadoc of the IConverter does not mention the possibility of the arguments being null or not.

They obviously can be but we can find a lot of different logic in the different converters regarding if the value is null or empty string or if the locale is null or not, this should help bring more consistency in the implementation if the interface mentions clearly what is supposed to receive. 

I could question whether each converter need to handle the fact we could have a null Locale, surely the caller can have this default locale set so that we can assert that Locale is never null.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202175,,,2007-11-22 11:31:11.0,,,,,,0|i0kgtz:,117544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<wicket:enclosure> bug, still calls getObject() on enclosed Models even if the content isn't rendered",WICKET-1200,12383771,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,edvin,edvin,03/Dec/07 07:20,29/Dec/07 14:30,13/Mar/19 23:15,26/Dec/07 23:44,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-final,,,wicket,,,,0,,,,,,,,"Steps to reproduce:

- Create a quickstart project:

mvn archetype:create -DarchetypeGroupId=org.apache.wicket \
-DarchetypeArtifactId=wicket-archetype-quickstart \
-DarchetypeVersion=1.3.0-rc1 \
-DgroupId=no.sysedata \
-DartifactId=enclosurebug

mvn eclipse:eclipse 

- Add two labels to HomePage.java. Let Label1 return isVisible=false, and implement a Model where getObject() writes to stdout for Label2:

package no.sysedata;

import org.apache.wicket.PageParameters;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.model.Model;

public class HomePage extends WebPage {
    private static final long serialVersionUID = 1L;

    public HomePage(final PageParameters parameters) {
        add(new Label(""label1"") {
            @Override public boolean isVisible() {
                return false;
            }
        });

        add(new Label(""label2"", new Model() {
            @Override public Object getObject() {
                System.out.println(""Getting object of model 2"");
                return ""MODEL2 OBJECT"";
            }
        }));
    }
} 

- In HomePage.html, add an enclosure around the two labels and let label1 be the controlling component for the enclosure:

<html>
    <head>
        <title>Wicket Enclosure Bug</title>
    </head>
    <body>
        <wicket:enclosure child=""label1"">
                 <span wicket:id=""label1"">Label 1</span>
                 <span wicket:id=""label2"">Label 2</span>
        </wicket:enclosure>
    </body>
</html> 

- When you run the project, you'll get the following on stdout:

""Getting object of model 2""

And the rendered HTML when hitting the homepage is:

<html>
    <head>
        <title>Wicket Enclosure Bug</title>
    </head>
    <body>
        <wicket:enclosure child=""label1""></wicket:enclosure>
    </body>
</html> 

If I add:

    @Override protected void init() {
        getMarkupSettings().setStripWicketTags(true);
    }

to WicketApplication.java, the markup is:

<html>
    <head>
        <title>Wicket Enclosure Bug</title>
    </head>
    <body>
       
    </body>
</html>

.. but the stdout is still the same.
",n/a,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-11 05:25:02.609,,,no_permission,,,,,,,,,,,202193,,,Wed Dec 26 23:44:50 UTC 2007,,,,,,0|i0kgqv:,117530,,,,,,,,"11/Dec/07 05:25;ivaynberg;argh, i just looked at how enclosure works and actually when it is not visible it still renders all the components, albeit into a null stream. this means that if you hide something with an expensive model you still take a hit even though the enclosure is not visible.

i am thinking instead of actually rendering things into a null stream we simply skip over them...just forward the markupstream to the </wicket:enclosure> tag in enclosure.oncomponenttagbody()... will something like this work?","16/Dec/07 22:56;seitz;juergen replaced this:

markupStream.skipUntil(openTag.getName());

with this:

Response response = getResponse();
getRequestCycle().setResponse(NullResponse.getInstance());
try
{
	super.onComponentTagBody(markupStream, openTag);
}
finally
{
	getRequestCycle().setResponse(response);
}

to fix WICKET-993.

however, i tested it with:

markupStream.skipToMatchingCloseTag(openTag);

and also the failing code in WICKET-993 works as expected.

what was the original intention for rendering to a nullresponse?",16/Dec/07 23:03;ivaynberg;i would imagine one of the things is the rendered component check. components inside the enclosure are visible but not rendered...,26/Dec/07 23:44;jdonnerstag;since the 993 test case is working without as well .... I can imagine I changed it while trying to find a fix and didn't validate it later on.,,,,,,,,,,,,,,,,,,,,
"Inside a html tag wicket:message's attribute cannot contain colon : in it, it uses the first colon and tokenizes the rest to be the resource_identifier. Need some way to use colon in the attribute name.",WICKET-1229,12384679,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,aabraham,aabraham,14/Dec/07 18:24,29/Dec/07 14:30,13/Mar/19 23:15,15/Dec/07 18:41,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-final,,,wicket,,,,0,,,,,,,,"I am trying to use wicket:message inside a tag in the following format wicket:message=""attribute:resource_identifier""

The attribute:resource_identifier passed as a value to the wicket:message uses the colon to tokenize the attribute and the resource_identifier. Now, The attribute which I am using is a custom attribute  ""ric:title"" (without quotes) which also has a colon in it. 

Currently, I have a tag with a custom attribute ric:title and the resource_identifier for it is page.title <div wicket:message=""ric:title:page.title"" />, the problem is wicket takes the first colon which is part of my attribute and takes the rest as the resource_identifier and looks for it in the property file and then throws an error.

How can I tell wicket to ignore the colon in the attribute name...? and I've tried using slash in front of the colon and it didn't work, I've tried using ascii html entity encoding for colon, which is &#58; and didn't work.

So, please make a way to use colon in the attribute.

Something like the following would be nice <div wicket:message="" 'ric:title'  : page.title"">, which allows the user to set the attribute name in the markup within single quoutes. 

I am hoping to see this fixed.

Thanks","Windows XP, JDK1.4, Jetty Server, Eclipse Europa",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-15 18:41:30.422,,,no_permission,,,,,,,,,,,202219,,,Sat Dec 15 18:41:30 UTC 2007,,,,,,0|i0kgp3:,117522,,,,,,,,"15/Dec/07 18:41;ivaynberg;wicket will now look for the last : in the attribute name, so

my:attr:key it will be tokenized into my:attr=key",,,,,,,,,,,,,,,,,,,,,,,
WicketTester.assertComponentOnAjaxResponse fails if AJAX response contains line breaks,WICKET-555,12369113,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,jsalvata@apache.org,jsalvata@apache.org,11/May/07 14:52,19/Dec/07 13:21,13/Mar/19 23:15,10/Jul/07 16:33,1.2.6,1.2.7,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"(Note: I've found this on 1.2.6 -- I'm reporting as existing on later versions based on reading the code.)

When any of the components replaced by an AJAX response renders multiple HTML lines, or if the AJAX response contains line breaks for any other reasons, the WicketTester.assertComponentOnAjaxResponse always returns false.

I've traced this to this statement:

		boolean isComponentInAjaxResponse = ajaxResponse.matches("".*<component id=\"""" + markupId
				+ ""\"" ?>.*"");

which never matches if ajaxResponse contains a \n because, in Java RegExps, the dot doesn't match these unless DOTALL is set (and it is not by default).

In the latest version I've found in SVN (sorry I'm not yet quite familiar with the codebase,) this code has been moved unchanged to org.apache.wicket.util.tester.BaseWicketTester.java -- so I assume the bug is still there.

The easiest solution is to add a single-line ""(?s)"" flag in front of the regular expression:

		boolean isComponentInAjaxResponse = ajaxResponse.matches(""(?s).*<component id=\"""" + markupId
				+ ""\"" ?>.*"");
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-10 16:04:50.116,,,no_permission,,,,,,,,,,,201603,,,Wed Dec 19 13:21:53 UTC 2007,,,,,,0|i0kijz:,117823,,,,,,,,"10/Jul/07 16:04;almaw;Please don't set fix versions without consultation, particularly not for version 2.0 (discontinued)! The developers will do this.",10/Jul/07 16:33;almaw;Fixed in trunk.,10/Jul/07 16:49;almaw;(In r555001.),"19/Dec/07 13:21;mpe;It looks as there's still a problem in trunk (and 1.3.0-rc2) in this regexp. Can't confirm if it's something to do with JDK version (I'm using 1.5.0_13), but I needed to change this:

""(?s).*<component id=\"""" + markupId + ""\"" ?>.*""

to this (grouping in the end):

""(?s).*<component id=\"""" + markupId + ""\"" (?>.*)""

for it to match my ajax response (or alternatively to ""(?s).*<component id=\"""" + markupId + ""\"" .*"").",,,,,,,,,,,,,,,,,,,,
Wicket html files do not have xml prolog,WICKET-1139,12382179,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,slonopotamus,slonopotamus,09/Nov/07 11:47,15/Dec/07 19:22,13/Mar/19 23:15,02/Dec/07 09:56,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,2,,,,,,,,"We want to enforce all our pages to explicitly specify xml prolog in order to avoid troubles with encodings (unfortunately we are not ASCII-speaking). We want to do that by specifying invalid defaultMarkupEncoding. This way we will get exceptions for all htmls that didn't declare encoding. However it is not possible at the moment because many wicket built-in html files do not have xml prolog.

Fix is very simple: just add <?xml version=""1.0"" encoding=""UTF-8"" ?> to your html files.",n/a,,,,,,,,,,,,,,WICKET-1224,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-09 12:15:09.41,,,no_permission,,,,,,,,,,,97031,,,Sun Dec 02 10:17:26 UTC 2007,,,,,,0|i0kgxj:,117560,,,,,,,,"09/Nov/07 12:15;dashorst;I think this has some adverse side effects for the rest of the world that *dont'* want your behavior. I think it triggers a different rendering engine in browsers, so we really don't want to force that onto our users.

You can create your own servlet filter that prepends the response with this declaration if it is missing. No biggy IMO. If you want a more permanent solution, I suggest creating your own copy of Wicket with the markup files modified to your liking.","09/Nov/07 12:21;slonopotamus;Well, I'm not speaking about outputting xml prolog to users. I'm speaking about using it when loading markup files.

Outputting xml prolog to users is handled by stripXmlDeclarationFromOutput in IMarkupSettings.","09/Nov/07 12:23;jcompagner;But are they all saved as utf-8?
And do we have internally files that really need that encoding when loading? ",09/Nov/07 12:25;slonopotamus;That was just an example. You should specify real file encoding. The thing is that it will be explicitly specified and wicket won't rely on system default charset when loading them.,"14/Nov/07 14:57;jcompagner;can we just add the UTF-8 encoding to all our files?
Are they then saved as UTF-8 as well? 
Also if it is panel then we can do it. Because that part is just for loading. But if it are pages then it is not that easy because then we also have that in the resulting page as far as i know.","14/Nov/07 15:42;slonopotamus;Your files are ASCII-only and so they do not care a lot about exact encoding. You can specify UTF-8 or ISO 8859-1 (or some other because all encodings (as far as I know) have same byte numbers for ASCII symbols).

Affected files (list may be incomplete):
org/apache/wicket/markup/html/panel/FeedbackPanel.html
org/apache/wicket/markup/html/panel/EmptyPanel.html
org/apache/wicket/markup/html/pages/RedirectPage.html
org/apache/wicket/markup/html/pages/PageExpiredErrorPage.html
org/apache/wicket/markup/html/pages/InternalErrorPage.html
org/apache/wicket/markup/html/pages/ExceptionErrorPage.html
org/apache/wicket/markup/html/pages/AccessDeniedPage.html","14/Nov/07 18:55;jdonnerstag;the encoding given in the markup file is always only used for loading the data and will never be forwarded to the client browser. We use Settings (and configureResponse) to determine what goes into the response and that setting is applied to all responses (except you define different in configureResponse).

In my opinion this is not a valid request. Our internal markup files do not contain any none-ascii characters. If a user wants to supersede with an extended subclass and add <?xml ..> to the his own markup than that is perfectly fine. As mentioned above we are using it for loading only and it is perfectly fine to mix and match different encoding. No <?xml ..> means that the JVM / OS default will be used.","14/Nov/07 19:22;slonopotamus;Hi, Juergen. I do not ask to specify any encoding to be sent to client. And I do not ask to specify default encoding for parsing of all markup files or for client output. I just ask to explicitly specify any encoding that you consider appropriate for Wicket built-in html files. It doesn't have to be UTF-8. It can have absolutely any value that will allow correct file reading.

I know that this encoding is used for loading only. The point is that we want to force all html files in our application to explicitly specify encoding (because platform default may [an will] be inacceptable). And in current situation we have to duplicate all Wicket htmls with addition of xml prolog.

As additional argument, you cannot be sure that all current and future encodings that can possibly be set as platform default will correctly load your html files. So explicit specifying will protect you against possible environment-specific errors.","14/Nov/07 23:01;jcompagner;yeah i see your point, we have to fix this and set some encoding in the file so that the readers uses that.
because platform specific can be any thing and if we save it in 8859 then another system can be on a completely different encoding and tries to load those files with something else.

i just have to check if we change the page (ExceptionErrorPage) then we have to strip that again from the real output because thats by default always utf-8. But maybe we already do that","02/Dec/07 09:56;jdonnerstag;- fixed all wicket core markup files
- IMarkupSettings.set/getThrowExceptionOnXmlDeclarationMissing() (disabled by default)",02/Dec/07 10:17;slonopotamus;Wow. Thanks :),,,,,,,,,,,,,
ModalWindow does not function under Opera ,WICKET-536,12368724,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,jklappen,jklappen,06/May/07 00:49,09/Dec/07 11:22,13/Mar/19 23:15,26/Aug/07 16:10,1.2.6,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket-extensions,,,,0,,,,,,,,"Initial ModalWindow appears, but with the title: ""Blank Page"".  The window remains unpopulated.","Version
9.20 
Build
638
Platform
Linux
System
i686, 2.6.20-15-generic
Qt library
3.3.7
Java
Java Runtime Environment installed,

Windows XP, Opera 9.22, JDK 1.5.0_09",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-11 11:25:06.981,,,no_permission,,,,,,,,,,,201586,,,Sun Aug 26 15:11:06 UTC 2007,,,,,,0|i0kilr:,117831,,,,,,,,11/Jun/07 11:25;knopp;I can't reproduce it. Does it also happen with the modal window from wicket-examples?,"26/Jun/07 06:13;jklappen;Yes, I can.  I deployed the wicket-examples.war on Glassfish v2 b40 and used the following Opera version:

Opera Version information
Version 9.21 
Build 641
Platform Linux
System i686, 2.6.20-16-generic
Qt library 3.3.7
Java Runtime Environment installed","28/Jul/07 22:32;jozic;I updated the bug with new info: it is reproduced in 1.3.0 beta2 under Windows XP, Opera 9.22, JDK 1.5.0_09.

When testing Opera with standard wicket examples it looks working, but my own dialogs with components are empty. While FF and IE work quite well. ","29/Jul/07 09:48;knopp;Make sure you have wicket:id stripped out of output, opera can't handle it. Also make sure that you don't put block element (e.g. div) to inline elements (e.g. span), some browsers choke on that.

Application.getMarkupSettings.setStripWicketTags(true) turns on the wicket:id stripping.","29/Jul/07 14:26;jozic;I've checked it after your hint, without wicket:it tags, but unfortunately the result was the same.
I\ve set setStripWicketTags(true) and viewed generated source. There were no wiclet:if tags, but this didin't help.

as for block elements, that is my html file fragment (i think it's fine):

<form wicket:id=""invoiceForm"" action="""">

    <div wicket:id=""dataTableHolder"">
        <table wicket:id=""table"" class=""dataview"" cellspacing=""0"">[table]</table>
    </div>

    <div wicket:id=""modal""></div>
    <br/>
    <input type=""button"" wicket:id=""newInvoice""/>
</form>","06/Aug/07 07:39;pbakker;I can reproduce this in Opera with the examples from the Wicket website: http://www.wicketstuff.org/wicket13/ajax/modal-window.1

And info fromt he Opera browser:
Version - 9.22
Build - 8801
Platform - Win32
System - Windows XP
Java - Sun Java Runtime Environment version 1.6
XHTML+Voice - Plug-in not loaded

When you click the ""show modal dialog with a page""  link on the forementioned URL, the modal dialog opens, but nothing is loaded into it. The cursor becomes a ""loading"" cursor and nothing happens.

(there also seems to be a sort of redraw issue in Opera when closing the modal dialogs. the bottom part of the screen does not get redraws upon closing the dialg/

Paul
","06/Aug/07 08:23;knopp;That's weird. Opera seems to be awfully inconsistent browser. The dialog works for me, apart from the redraw on close issue that i can reproduce.","26/Aug/07 15:11;knopp;Okay, i was able to reproduce this issue with opera / windows and the window now opens. However, I'm unable to fix the redraw issues.",,,,,,,,,,,,,,,,
AbstractAjaxTimerBehavior triggered more than expected after a new Ajax rendering,WICKET-745,12373534,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,xavier,xavier,11/Jul/07 16:28,02/Dec/07 23:14,13/Mar/19 23:15,02/Dec/07 23:14,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,2,,,,,,,,"When an AbstractAjaxTimerBehavior is rendered in an AjaxResponse due to another Ajax callback than the one triggered by the timer itself, it sends a new setTimeout javascript call to the client, causing the client to call the timer more frequently than expected: x+1 times as expected, where x is the number of times the behavior is rendered in a separate Ajax response.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 14:57:02.806,,,no_permission,,,,,,,,,,,201775,,,Sun Dec 02 23:14:21 UTC 2007,,,,,,0|i0ki0f:,117735,,,,,,,,21/Aug/07 14:57;jbq;Looks reasonable to do for the next release,"26/Aug/07 17:14;knopp;Should be fixed, can you please confirm?","22/Nov/07 01:03;mclark00;The problem with this change is that it prevents an AbstractAjaxTimerBehavior (and this an AjaxSelfUpdatingTimerBehavior) from being initially added via Ajax.  Our app is basically a single-page application, and we need to be able to add a component to he page and have it start updating itself.  This broke completely with Beta4 because of this change.

If there is a workaround I can't see right now, I would be happy to implement it.  Perhaps subclass and override onRenderHead?  I imagine we would run into the same problem that you were trying to fix here.","02/Dec/07 23:14;seitz;fixed.
instead of not rendering the head if the current request is an ajax request ( if (!stopped &&  request.isAjax() == false) ),
the AbstractAjaxTimerBehavior now stores whether the head has already been rendered (ajax or normal request don't matter) or not
in private boolean headRendered, like this:

private boolean headRendered = false;

// in renderHead
if (!stopped && !headRendered)
{
	headRendered = true;
	response.renderOnLoadJavascript(getJsTimeoutCall(updateInterval));
}

i also updated the unit test to reflect this change",,,,,,,,,,,,,,,,,,,,
Use non-default namingPolicy when creating Proxies via CGLib,WICKET-1162,12382590,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,javadoc,javadoc,15/Nov/07 15:24,02/Dec/07 09:07,13/Mar/19 23:15,02/Dec/07 09:07,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket-guice,,,,0,,,,,,,,"As soon, as i use bindInterceptor(...) to an Instance, i run into a problem injecting this (CGLib enhanced) instance to a Component.

The exception thrown: 

java.lang.LinkageError: loader (instance of  org/mortbay/jetty/webapp/WebAppClassLoader): attempted  duplicate class definition for name: ""org/codesmell/jpadao/AbstractEntityDao$$FastClassByCGLIB$$aaf4cf30""
     at java.lang.ClassLoader.defineClass1(Native Method)
     at java.lang.ClassLoader.defineClass(ClassLoader.java:620)
     at java.lang.reflect.Method.invoke(Method.java:597)
     at com.google.inject.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:384)
     at com.google.inject.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:219)
     at com.google.inject.cglib.reflect.FastClass$Generator.create(FastClass.java:64)
     at com.google.inject.cglib.proxy.MethodProxy.helper(MethodProxy.java:92)
     at com.google.inject.cglib.proxy.MethodProxy.init(MethodProxy.java:56)
     at com.google.inject.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:186)
     at com.google.inject.InterceptorStackCallback$InterceptedMethodInvocation.proceed(InterceptorStackCallback.java:66)

I assume the problem should disappear, if LazyInitProxyFactory.createProxy(...) was patched like:
[...]
CGLibInterceptor handler = new CGLibInterceptor(type, locator);
Enhancer e = new Enhancer();
e.setInterfaces(new Class[] {Serializable.class, ILazyInitProxy.class,
			IWriteReplace.class});
e.setSuperclass(type);
e.setCallback(handler);
e.setNamingPolicy(SOME_WICKET_SPECIFIC_NAMING_POLICY); // <- single new line
return e.create();
[...]","Guice 1.0,",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-02 09:07:59.537,,,no_permission,,,,,,,,,,,202161,,,Sun Dec 02 09:07:59 UTC 2007,,,,,,0|i0kgvb:,117550,,,,,,,,"15/Nov/07 17:53;javadoc;i can confirm the above workaround.

adding:

                e.setNamingPolicy(new DefaultNamingPolicy()
                {
                    public String getClassName(final String prefix, final String source, final Object key,
                            final Predicate names)
                    {
                        return super.getClassName(""WICKET_""+prefix, source, key, names);
                    }

                });

did the trick as expected, so that Guicy-Interceptors can be used together with wicket-guice.",02/Dec/07 09:07;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
wicket-jmx ignores wicket.mbean.server.class property,WICKET-1191,12383554,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,wlfshmn,wlfshmn,29/Nov/07 19:27,02/Dec/07 08:46,13/Mar/19 23:15,02/Dec/07 08:46,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket-jmx,,,,0,,,,,,,,"loaded property is never used. patch does the intended assignation, but as I don't use jmx, the code is not tested beyond compile and successfull completion of existing unit tests.",,,,,,,,,,,,,,,,,,,29/Nov/07 19:27;wlfshmn;jmx-server-class-init.patch.gz;https://issues.apache.org/jira/secure/attachment/12370575/jmx-server-class-init.patch.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-12-02 08:46:14.905,,,no_permission,,,,,,,,,,,202187,,,Sun Dec 02 08:46:14 UTC 2007,,,,,,0|i0kgrz:,117535,,,,,,,,02/Dec/07 08:46;jdonnerstag;thanks.,,,,,,,,,,,,,,,,,,,,,,,
Wicket Tags confuse firefox on ajax request,WICKET-1174,12382938,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,knopp,knopp,21/Nov/07 02:23,21/Nov/07 02:23,13/Mar/19 23:15,21/Nov/07 02:23,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,,,,,0,,,,,,,,When ajax response contains wicket tags (such as <wicket:panel>) Firefox is sometimes confused and interprets the response wrong. This also happen in opera (even more often). I don't see any reason why the wicket tags shouldn't be stripped on ajax requests.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202172,,,2007-11-21 02:23:27.0,,,,,,0|i0kgun:,117547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong version of slf4j-log4j12 causes Exception in ModificationWatcherTask,WICKET-1156,12382377,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,micfra,micfra,12/Nov/07 20:06,13/Nov/07 07:48,13/Mar/19 23:15,12/Nov/07 21:27,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket-quickstart,,,,0,,,,,,,,"Running quickstart as explained on http://wicket.apache.org/quickstart.html works fine. But running the jetty-container, expecting a reload after a file modification won't work because of wrong version of slf4j-log4j12. The generated pom.xml creates a dependency to version 1.0.1but the required version is at least 1.4.2.

I found that solution here: http://www.nabble.com/AbstractMethodError-in-logging-t4678942.html

Greetz
MicFra
","Windows XP, Eclipse 3.3.1, Maven 2.0.4, Apache Wicket 1.3.0-rc1",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-12 20:25:53.742,,,no_permission,,,,,,,,,,,202155,,,Tue Nov 13 07:48:26 UTC 2007,,,,,,0|i0kgvz:,117553,,,,,,,,"12/Nov/07 20:25;seitz;can you please check again what version of wicket you're using?
because the slf4j-log4j12 version in the generated pom.xml is definitely 1.4.2 for rc1","12/Nov/07 20:34;micfra;Sorry for that. In 1.3.0-rc1 everything is fine.

I generated the project yesterday with help of http://wicket.apache.org/quickstart.html. Maybe there was an update of that page over night?","12/Nov/07 20:54;seitz;reopened, because this shouldn't be marked as fixed, but rather as invalid","12/Nov/07 21:27;almaw;Reopening because this was a real bug, so I'm going to mark it fixed for the right version.","13/Nov/07 07:48;seitz;Al, thanks for the correction",,,,,,,,,,,,,,,,,,,
AbstractTree utilizes Collections.EMPTY_LIST for a node's children container which causes errors when adding children,WICKET-1148,12382311,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,rdleeper,rdleeper,12/Nov/07 04:45,12/Nov/07 23:49,13/Mar/19 23:15,12/Nov/07 23:49,1.3.0-beta1,1.3.0-beta2,1.3.0-beta3,1.3.0-beta4,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,0,,,,,,,,"AbstractTree utilizes Collections.EMPTY_LIST for a node's children container.  This assumes that this node will never have children during its lifecycle as EMPTY_LIST will always be empty since it does not support add(int, Object)

To fix, change item = Collections.EMPTY_LIST with item = new ArrayList(0);

private final void buildItemChildren(TreeItem item)
	{
		List items;

		// if the node is expanded
		if (isNodeExpanded((TreeNode)item.getModelObject()))
		{
			// build the items for children of the items' treenode.
			items = buildTreeItems(nodeChildren((TreeNode)item.getModelObject()),
					item.getLevel() + 1);
		}
		else
		{
			// it's not expanded, just set children to an empty list
			//items = Collections.EMPTY_LIST;
                        items = new ArrayList(0);
		}

		item.setChildren(items);
	}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202148,,,2007-11-12 04:45:30.0,,,,,,0|i0kgwv:,117557,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DateTextField.setEnabled() is not propagated to attached DatePicker,WICKET-1118,12381558,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,31/Oct/07 14:36,02/Nov/07 09:27,13/Mar/19 23:15,02/Nov/07 09:27,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-datetime,,,,0,,,,,,,,"DatePicker stays enabled even if the DateTextField it is attached to is disabled.
It is even able to change the DateTextField's shown value.

Instead the DatePicker should be disabled to, or maybe not shown at all.

Attached is a Quickstart-patch showing the effect.","$ svn info
Path: .
URL: http://svn.apache.org/repos/asf/wicket/trunk/jdk-1.4/wicket-quickstart
Repository Root: http://svn.apache.org/repos/asf
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 590679
Node Kind: directory
Schedule: normal
Last Changed Author: gseitz
Last Changed Rev: 584954
Last Changed Date: 2007-10-16 00:48:12 +0200 (Tue, 16 Oct 2007)",,,,,,,,,,,,,,,,,,31/Oct/07 14:38;funkattack;datePicker.patch;https://issues.apache.org/jira/secure/attachment/12368767/datePicker.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-31 19:43:10.723,,,no_permission,,,,,,,,,,,202121,,,Fri Nov 02 09:27:02 UTC 2007,,,,,,0|i0kgzj:,117569,,,,,,,,31/Oct/07 14:38;funkattack;Quickstart patch showning the unwelcome effect.,"31/Oct/07 19:43;ivaynberg;i have committed a fix. rather pressed for time, could you confirm it now works properly?","02/Nov/07 09:27;funkattack;I can confirm, It serves our needs.
Thank you.",,,,,,,,,,,,,,,,,,,,,
NullPointerException in HybridUrlCodingStrategy,WICKET-1101,12381124,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,sullis,sullis,25/Oct/07 05:19,01/Nov/07 09:15,13/Mar/19 23:15,01/Nov/07 09:15,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"
There is a bug in the HybridUrlCodingStrategy

My web page contains some Wicket Ajax components.  When the browser sends a Wicket Ajax request to the server, I get this:

java.lang.NullPointerException
     at org.apache.wicket.request.target.coding.HybridUrlCodingStrategy$HybridBookmarkablePageRequestTarget.respond(HybridUrlCodingStrategy.java:813)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1097)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1166)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1245)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:489)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:343)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:193)
     at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:132)
     at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:71)
     at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.handleWebAppDispatch(WebAppRequestDispatcher.java:974)
     at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.dispatch(WebAppRequestDispatcher.java:564)
     at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.forward(WebAppRequestDispatcher.java:200)
     at com.ibm.ws.webcontainer.srt.WebAppInvoker.doForward(WebAppInvoker.java:119)
     at com.ibm.ws.webcontainer.srt.WebAppInvoker.handleInvocationHook(WebAppInvoker.java:276)
     at com.ibm.ws.webcontainer.cache.invocation.CachedInvocation.handleInvocation(CachedInvocation.java:71)
     at com.ibm.ws.webcontainer.srp.ServletRequestProcessor.dispatchByURI(ServletRequestProcessor.java:182)
     at com.ibm.ws.webcontainer.oselistener.OSEListenerDispatcher.service(OSEListener.java:334)
     at com.ibm.ws.webcontainer.http.HttpConnection.handleRequest(HttpConnection.java:56)
     at com.ibm.ws.http.HttpConnection.readAndHandleRequest(HttpConnection.java:618)
     at com.ibm.ws.http.HttpConnection.run(HttpConnection.java:439)
     at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:672)
","JRE 1.4.2
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-25 16:10:51.133,,,no_permission,,,,,,,,,,,202105,,,Thu Nov 01 09:15:13 UTC 2007,,,,,,0|i0kh0n:,117574,,,,,,,,"25/Oct/07 16:10;knopp;This is kinda weird, can you please create a quickstart? I'll look at that as soon as I can reproduce the problem.",01/Nov/07 09:15;knopp;I managed to reproduce this. It happens when page expires.,,,,,,,,,,,,,,,,,,,,,,
Strings.replaceAll giving StringIndexOutOfBoundsException,WICKET-1119,12381575,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jdpatterson,jdpatterson,31/Oct/07 20:00,31/Oct/07 20:54,13/Mar/19 23:15,31/Oct/07 20:54,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"When replacing & characters it craps out.. this fixes it:

Index: /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/util/string/Strings.java
===================================================================
--- /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/util/string/Strings.java	(revision 589777)
+++ /Users/John/Development/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/util/string/Strings.java	(working copy)
@@ -1327,7 +1327,7 @@
 		}
 		else
 		{
-			matchIndex = s.toString().indexOf(searchString);
+			matchIndex = s.toString().indexOf(searchString, pos);
 		}
 		return matchIndex;
 	}

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202122,,,2007-10-31 20:00:36.0,,,,,,0|i0kgzb:,117568,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LocalizedImageResource does not serialize locale/style fields,WICKET-1062,12380193,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,johnray,johnray,11/Oct/07 21:28,30/Oct/07 20:48,13/Mar/19 23:15,30/Oct/07 20:48,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,1,,,,,,,,"I have a page where clicking an AjaxLink causes an Image to be updated. In the onClick()  method of the link I change the image via setImageResourceReference(). I then call AjaxRequestTarget.addComponent(image) to have the image rendered.

Everything works great when the page is first loaded however if I navigate to a different page and then back again the image doesn't update the first time I click the link. The problem is that the LocalizedImageResource saves the current locale/style in transient fields when it is first created. By navigating to a different page and then back again it causes the class to get serialized and the locale and style are initialized to null. In setSrcAttribute() this code then compares the locale against the image component's locale.

Locale l = component.getLocale();
String s = component.getStyle();
if (resourceKind == null ||
	(!Objects.equal(locale, component.getLocale()) || !Objects.equal(style, component
			.getStyle())))
{
	// Get new component locale and style
	locale = component.getLocale();
	style = component.getStyle();

	// Invalidate current resource so it will be reloaded/recomputed
	resourceReference = null;
	resource = null;
}

Since the local in LocalizedImageResource was not serialized it never matches and my call to setImageResourceReference() is basically ignored. 

If you just remove the transient keyword from the locale and style fields it fixes the problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:17.176,,,no_permission,,,,,,,,,,,202068,,,Tue Oct 30 20:48:31 UTC 2007,,,,,,0|i0kh3z:,117589,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.","30/Oct/07 20:48;seitz;seems like matej fixed this by removing ""transient"" in rev. 588200.
please reopen if necessary.",,,,,,,,,,,,,,,,,,,,,,
wantonselectionchangednotification does not work in embedded forms,WICKET-1112,12381475,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,30/Oct/07 17:49,30/Oct/07 17:49,13/Mar/19 23:15,30/Oct/07 17:49,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202115,,,2007-10-30 17:49:49.0,,,,,,0|i0kgzr:,117570,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getMarkupId generates ID which contains special characters which should be escaped or replaced,WICKET-995,12378864,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alexandru.objelean,alexandru.objelean,21/Sep/07 13:13,30/Oct/07 05:24,13/Mar/19 23:15,30/Oct/07 05:24,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"This is about how wicket generates dynamically markupID.

I have, for instance, the following markup component:
<input wicket:id=""quantity.noOfUnits"" />

The generated markupId for this component looks like the following: quantity.noOfUnits1232 .

I suggest to escape any css valid specifiers from the generated markupId, by replacing them with something else (for instance '_' character).

The problem appear when I am trying to identify the component by it's id using some js library (like jQuery) and as a consequence the result of this query: $(""#quantity.noOfUnits1232"") is invalid. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-25 07:29:25.374,,,no_permission,,,,,,,,,,,202003,,,Tue Oct 30 05:24:02 UTC 2007,,,,,,0|i0kh9b:,117613,,,,,,,,"25/Sep/07 07:29;rholmes;The period is a valid character in an HTML ID. See http://www.w3.org/TR/html4/types.html#type-id.

To refer to an HTML ID with a period in a CSS selector context, the period must be escaped. If JQuery does not support this, it is a JQuery bug and should be filed with them.

The automatic transformation of certain characters by a framework is exactly the kind of magic behavior that confuses users and therefore I think the recommended ""fix"" is a bad idea.

Furthermore, since no actual bug has been reported here, this issue should probably be resolved as invalid.


","25/Sep/07 17:13;ivaynberg;hrm, i already made this change!

ryan, start a vote on the list to have it undone. i dont really care either way because these ids are automatically generated anyways.","25/Sep/07 17:28;almaw;I think we should keep it - it won't hurt anyone and will work around ""bugs"" in frameworks like JQuery that are probably rather common.","26/Sep/07 06:04;alexandru.objelean;I agree with Alastair. A developer cannot confused by something that is generated automatically. Nobody really cares if the generated markup ID is ""quantity1"",  ""quantity_1"", ""quantity.1"" or ""quantity-1"".

Also, it's not a jquery bug at all. The '.' character is interpreted as a css class. So, the $(""#quantity.noOfUnits1232"") translates in element with ID ""quantity"" and css class ""noOfUnits1232"".

","26/Sep/07 08:39;dashorst;Repeating that something is not a bug is not making it more true. Alex have you even bothered to read http://www.w3.org/TR/html4/types.html#type-id ?

The specification of HTML and CSS are clearly in conflict: the ""."" *IS* a valid character in markup ID's. You can look it up.

Furthermore, #foo.bar does not point to element foo with class bar, it points to element foo, or at least it should: the class is extra garbage that should not be included if the developer is worth his money.

So in effect JQuery, you, the CSS committee, the world and the universe are buggy.

That said: replacing the period with a _ *IS* dangerous as it will generate quite some buggy code in the wicket case. An underscore character is a valid Java character for names of properties. There are (gak!) people that don't use camelcase, but underscores to separate proper nouns in propertynames. This clearly is not a two way conversion, and therefore should not be used as a conversion for the separation between properties.
","26/Sep/07 08:40;dashorst;I agree with Ryan, see my previous comment","26/Sep/07 08:59;alexandru.objelean;Well, I did bother to read the w3c specification... As you can read above, I didn't suggest to replace the '.' character with an underscore '_' mandatory, it could be replaced with a number or another character (anything that is still valid). 
Also, before creating this JIRA issue, I asked Matej if he considered it to be a bug. Igor also thought that this issue can be fixed without any problems since he fixed it already.
I'm still not convinced that changing the generated markup id is a dangerous thing, maybe you can give me an example?

I propose to make a vote between the core developers, since there are two different points of view.

PS: I do not insist on this issue to be fixed, I just think that it would solve a real world related problem without causing any troubles to anybody else.

Alex","26/Sep/07 09:16;gwynevans;My view is that we shouldn't be doing any 'magic' that we can avoid, and this looks to me that to be one that we can avoid, as the '.' appears to be valid in this position, so I'm a bit concerned about this on two levels - For the second, could there be issues if the HTML author has two id's ""field.index"" and ""field_index"", for instance?

","26/Sep/07 09:24;alexandru.objelean;Wicket already does a lot of magic, because it generates unique markup id by appending some number. The way I see the purpose of Component#getMarkupId method is to ensure that the element ID is really unique. Thus, it doesn't matter if I have ""field.index"" or ""field_index"" because the generated markupID will be different for each component (for instance: filed_index123 & field_index124).",26/Sep/07 14:00;ivaynberg;@martijn: actually the underscore in the id is not a problem as the first thing the code does is escape an underscore with two underscores. give me a bit of credit :),"26/Sep/07 17:05;rholmes;To expand on Gwyn's second point, another potential issue could arise if you have a component with id ""field"" that has a child ""index"" plus a component with id ""field.index"" at the same level as ""field"", due to the use of '_' as a hierarchy separator in markup id's.","26/Sep/07 17:39;rholmes;On second thought, the issue I described above could occur right now, since you can use '_' in a component id (plus I hadn't read Igor's latest comment). Perhaps a substitution character other than '_' should be considered.

I have to bring up one more criticism though. If this is a good idea, shouldn't Wicket also transform other characters that could be confusing, although legal, in a CSS context? For example, a space.",26/Sep/07 18:41;alexandru.objelean;In wicket-1.3.x branch the underscore is not used as a hierarchy separator. I,30/Oct/07 05:24;ivaynberg;closing for now. i think the way it works currently is good enough for 1.3,,,,,,,,,,
XHTML code in AjaxFormSubmitBehavior.getPreconditionScript() is not well formed.,WICKET-1107,12381296,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,zlate.tele,zlate.tele,27/Oct/07 09:07,28/Oct/07 21:57,13/Mar/19 23:15,28/Oct/07 21:57,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"XHTML code in AjaxFormSubmitBehavior.getPreconditionScript() is not well formed.
See patch...",,,,,,,,,,,,,,,,,,,27/Oct/07 09:08;zlate.tele;AjaxFormSubmitBehavior_prescript.diff;https://issues.apache.org/jira/secure/attachment/12368536/AjaxFormSubmitBehavior_prescript.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202110,,,2007-10-27 09:07:51.0,,,,,,0|i0kh07:,117572,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Form with ajaxsubmitbutton won't submit after error,WICKET-645,12371591,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,marie,marie,14/Jun/07 06:00,16/Oct/07 06:35,13/Mar/19 23:15,16/Oct/07 06:35,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,1,,,,,,,,"Posted on the mailing list :
Hello, 

I'm using the Apache Wicket incubating 1.3 and updated my existing application. 
One of my forms wasn't working anymore. I isolated my problem in the code below. 
I'm using a form with an AjaxSubmitButton. On my form, one of my components is required. 
When user doesn't fill in field and presses the ajaxsubmitbutton, he gets an alert telling hem to fill in the required field. 
When user then fills in field and presses submitbutton again, the onError is again called instead of the onsubmit. 

Is this a bug (or is it already reported)? 
Thanks in advance. 

------------------------------------------------------------------------------------------------------------------------------ 

public class TestPage extends WebPage { 
  public TestPage() { 
    Form frm = new TestForm(""form""); 
    frm.add(new TestSubmitButton(""button"", frm)); 
    frm.add(new RequiredTextField(""name"", new PropertyModel(frm, ""name""))); 
    add(frm); 
  } 
  
  public class TestForm extends Form { 
    private String name = null; 
    public TestForm(String id){ 
      super(id); 
    } 
    public void setName(String name){ 
      name = name; 
    } 
    public String getName(){ 
      return name; 
    } 
  } 
  
  public class TestSubmitButton extends AjaxSubmitButton { 
    public TestSubmitButton(String id, Form form) { 
      super(id, form); 
    } 

    protected void onSubmit(AjaxRequestTarget ajaxRequestTarget, Form form){ 
      System.out.println(""Form submitted""); 
    } 

    protected void onError(final AjaxRequestTarget target, Form form) { 
      target.appendJavascript(""alert('Fill in all fields.');""); 
    } 
  } 
}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:35:09.188,,,no_permission,,,,,,,,,,,201680,,,Tue Oct 16 06:35:09 UTC 2007,,,,,,0|i0ki9b:,117775,,,,,,,,"19/Jun/07 07:02;marie;Hello,

I found my workaround for this.
I need to add the Feedbackpanel to my form and append it to my target when the ajax onError method is called.
In the Feedbackpanel following code is important :
           final FeedbackMessage message = (FeedbackMessage)listItem.getModelObject();
           message.markRendered();
When the feedbackmessages aren't rendered, they are never cleared in the cleanupFeedbackMessages() from the session.

I want to handle the error messages myself, so I added the feedbackpanel, but added style=""display:none"" to it. In 1.2.6 I could handle the error messages without adding the feedbackpanel.",16/Oct/07 06:35;ehillenius;Should be fixed as part of another issue recently.,,,,,,,,,,,,,,,,,,,,,,
Stateless pages bind to http session,WICKET-1072,12380395,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,jdpatterson,jdpatterson,14/Oct/07 00:44,15/Oct/07 22:39,13/Mar/19 23:15,15/Oct/07 22:39,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,The example application stateless binds to an http session for a stateless page.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202077,,,2007-10-14 00:44:30.0,,,,,,0|i0kh3b:,117586,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't enter data in any input field after closing modal window,WICKET-1061,12380182,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,rmorrisey,rmorrisey,11/Oct/07 18:20,15/Oct/07 17:33,13/Mar/19 23:15,13/Oct/07 13:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,wicket-extensions,,,0,,,,,,,,"I found that the input type=""text"" fields in our app couldn't be edited sometimes after closing a ModalWindow dialog. I thought at first that it might be an issue with our javascript or a custom component, but I've pared it down to a quickstart that doesn't use any of our code. Instructions for reproducing the problem are on the quickstart page.

Thanks,
Russell
",IE 6 with SP 2; wicket-1.3.0-SNAPSHOT.,,,,,,,,,,,,,,,,,,11/Oct/07 18:21;rmorrisey;quickstart-textFieldFreeze.zip;https://issues.apache.org/jira/secure/attachment/12367592/quickstart-textFieldFreeze.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-13 13:45:34.827,,,no_permission,,,,,,,,,,,202067,,,Mon Oct 15 17:33:11 UTC 2007,,,,,,0|i0kh47:,117590,,,,,,,,11/Oct/07 18:21;rmorrisey;Follow the instructions in this quickstart (Eclipse project) to reproduce the issue in IE6.,"13/Oct/07 13:45;knopp;Hi, thanks for the report and quickstart. This indeed is a weird bug that affects both IE6 and IE7. I've commited a workaround.","15/Oct/07 17:33;rmorrisey;Okay, I tested it and the issue is fixed in my app, also. That was fast. Thanks a lot, Matej!
",,,,,,,,,,,,,,,,,,,,,
Image resource parameters fail to output in src attribute,WICKET-1074,12380399,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,nathan@technically.us,nathan@technically.us,14/Oct/07 04:28,14/Oct/07 22:15,13/Mar/19 23:15,14/Oct/07 22:14,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"Resource parameters that are passed to an image constructor are set in its localizedImageResource instance, but are erased in the onComponentTag method. In Image line 229 getImageResourceReference() returns the reference from the localized resource, and then in the not-null if block calls localizedImageResource.setResourceReference(resourceReference), which sets the resource parameters to null in LocalizedImageResource line 212. That line should pass in the object's resourceReference field instead of null, or else the Image.getImageResourceReference() method should be reevaluated. Should it return null in the base class, instead of calling localized image resource? (It doesn't seem to be called from anywhere but onComponentTag.)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-14 22:13:04.314,,,no_permission,,,,,,,,,,,202079,,,Sun Oct 14 22:13:04 UTC 2007,,,,,,0|i0kh33:,117585,,,,,,,,"14/Oct/07 22:13;knopp;Actually, this seems to be already fixed (Juergen's commit).",,,,,,,,,,,,,,,,,,,,,,,
Amersand escaped twice for ResourceLink href,WICKET-1047,12379829,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,nathan@technically.us,nathan@technically.us,07/Oct/07 17:21,14/Oct/07 22:15,13/Mar/19 23:15,14/Oct/07 22:14,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"When passing a ValueMap with multiple parameters to ResourceLink, the ampersand for the second and any higher parameters is escaped twice. For example:

ResourceLink(""link"", new ResourceReference(""largePressImage""), new ValueMap(""id=20,idx=0""))

yields an href of

../../resources/org.apache.wicket.Application/largePressImage?idx=0&amp;amp;id=20

(this will not decode)

Internally, ResourceLink calls getRequestCycle().urlFor(resourceReference, resourceParameters) at line 126 which gives an escaped URL. Then its Link superclass escapes the ampersand a second time at line 423.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-14 21:56:42.681,,,no_permission,,,,,,,,,,,202053,,,Sun Oct 14 21:56:42 UTC 2007,,,,,,0|i0kh4n:,117592,,,,,,,,"07/Oct/07 17:30;nathan@technically.us;This is similar to WICKET-559, which was fixed by removing the escaping from the superclass. Here I'm not sure that's desirable, since some user inputs may not already be escaped. Ampersands could be replaced by regex only if they aren't already escaped, though in some cases double escaping might be the correct behavior (if an ampersand appears within a query value?).

Some clarification is needed (in the method documentation for urlFor and getUrl) as to where escaping is expected and if inputs and outputs are escaped.",14/Oct/07 21:56;knopp;I believe that urlFor definitely should not escape the URL. As escaping should be done only in certain cases. Thus I'm removing the escaping WebRequestCodingStrategy.,,,,,,,,,,,,,,,,,,,,,,
parameters for Image never used when using a ResourceReference,WICKET-1039,12379618,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,rdleeper,rdleeper,03/Oct/07 22:37,14/Oct/07 08:41,13/Mar/19 23:15,14/Oct/07 08:41,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"When using parameters (ValueMap) for an Image with a ResourceReference, they are essentially wiped out because of the code in onComponentTag().

<code>
public final void onComponentTag(...) {
       ...
                final ResourceReference resourceReference = getImageResourceReference();
                if (resourceReference != null)
                {
                        localizedImageResource.setResourceReference(resourceReference);
                }
      ...
}
</code> 

This in turns calls LocalizedImageResource.setResourceReference( resourceReference, null ). Which nulls out the parameters set in the constructor.

A possible change would to change LocalizedImageResource.setResourceReference( resourceRef ) to the following:

<code>
	public final void setResourceReference(final ResourceReference resourceReference)
	{
		setResourceReference(resourceReference, resourceParameters);
	}

</code>
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-14 08:41:37.072,,,no_permission,,,,,,,,,,,202045,,,Sun Oct 14 08:41:37 UTC 2007,,,,,,0|i0kh5j:,117596,,,,,,,,03/Oct/07 22:45;rdleeper;Wicket-1039 is a duplicate of 1022,14/Oct/07 08:41;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
StyleSheetReference doesn't take style/locale into account,WICKET-1051,12379891,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,medavid,medavid,08/Oct/07 20:54,14/Oct/07 08:30,13/Mar/19 23:15,14/Oct/07 08:30,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"StyleSheetReference (in essence PackagedResourceReference) doesn't take the style and locale into account as is common for resource loaders.

Changing PackagedResourceReference line 102 from
				ResourceReference ref = new ResourceReference(referer, f);
to
				ResourceReference ref = new ResourceReference(referer, f, getLocale(), getStyle());
fixes this issue",-,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-14 08:30:55.765,,,no_permission,,,,,,,,,,,202057,,,Sun Oct 14 08:30:55 UTC 2007,,,,,,0|i0kh4f:,117591,,,,,,,,14/Oct/07 08:30;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
NullPointer in FileCleaner causes infinite loop,WICKET-1065,12380228,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,grove,grove,12/Oct/07 10:08,14/Oct/07 08:03,13/Mar/19 23:15,14/Oct/07 08:03,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"While hot deploying a Wicket application from Eclipse to a Tomcat instance the ""File Reaper"" thread seems to go into an infinite loop making the CPU running at 100%. From the thread dump it is clear that a NullPointerException is being thrown on line 61 in FileCleaner.java. Looking at the source code reveals that the ReferenceQueue q member in FileCleaner is null.

""File Reaper"" daemon prio=10 tid=0x08265c00 nid=0x18cf runnable [0x9a2d9000..0x9a2d9f30]
   java.lang.Thread.State: RUNNABLE
	at java.lang.Throwable.fillInStackTrace(Native Method)
	- locked <0x701b0000> (a java.lang.NullPointerException)
	at java.lang.Throwable.<init>(Throwable.java:181)
	at java.lang.Exception.<init>(Exception.java:29)
	at java.lang.RuntimeException.<init>(RuntimeException.java:32)
	at java.lang.NullPointerException.<init>(NullPointerException.java:36)
	at org.apache.wicket.util.file.FileCleaner$1.run(FileCleaner.java:61)
","OpenSuse 10.3, Java 1.6.0 update 3, Apache Tomcat 5.5.25, Eclipse 3.3.0",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-14 08:03:36.146,,,no_permission,,,,,,,,,,,202071,,,Sun Oct 14 08:03:36 UTC 2007,,,,,,0|i0kh3r:,117588,,,,,,,,14/Oct/07 08:03;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableChoiceLabel doesn't work in IE 6,WICKET-1014,12379133,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,aakoch,aakoch,26/Sep/07 19:15,13/Oct/07 12:40,13/Mar/19 23:15,13/Oct/07 12:40,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket-extensions,,,,0,,,,,,,,"When the AjaxEditableChoiceLabel is clicked on, it turns into a drop down as expected, but then, without any other user input (clicking, etc.) it changes back to a label before there's a chance to change the value. It seems like it might be an issue with the focus, but I haven't been able to pin it down yet.","Wicket 1.3.0-Beta3
Windows XP SP 2
Internet Explorer 6.0.2900.2180
",,,,,,,,,,,,,,,,,,26/Sep/07 19:16;aakoch;AjaxEditableChoiceLabelPage.html;https://issues.apache.org/jira/secure/attachment/12366604/AjaxEditableChoiceLabelPage.html,26/Sep/07 19:17;aakoch;AjaxEditableChoiceLabelPage.java;https://issues.apache.org/jira/secure/attachment/12366605/AjaxEditableChoiceLabelPage.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-10-13 12:39:59.846,,,no_permission,,,,,,,,,,,202022,,,Sat Oct 13 12:39:59 UTC 2007,,,,,,0|i0kh7z:,117607,,,,,,,,26/Sep/07 19:16;aakoch;.html file to recreate the error,26/Sep/07 19:17;aakoch;Java file to recreate error,"26/Sep/07 19:18;aakoch;Wicket Ajax debug window output:
INFO: 
INFO: Initiating Ajax GET request on ?wicket:interface=:0:name:label::IBehaviorListener:0:-1&random=0.6403308751835941
INFO: Invoking pre-call handler(s)...
INFO: Received ajax response (2077 characters)
INFO: 
<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><header-contribution encoding=""wicket1"" ><![CDATA[<head xmlns:wicket=""http://wicket.apache.org""><script type=""text/javascript"" src=""resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js""></script> 
<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/wicket-ajax.js""></script> 
<script type=""text/javascript"" id=""wicket-ajax-debug-enable""><!--/*--><![CDATA[/*><!--*/
wicketAjaxDebugEnable=true;
/*-->]^]^>*/</script>

<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/wicket-ajax-debug.js""></script> 
</head>]]></header-contribution><component id=""name1"" ><![CDATA[<span wicket:id=""name"" id=""name1""><wicket:panel><select onkeypress=""var kc=wicketKeyCode(event); if (kc==27) {wicketAjaxGet('?wicket:interface=:0:name:editor::IBehaviorListener:0:-1&wicket:ignoreIfNotActive=true&save=false'); return true;} else if (kc!=13) { return true; } else {wicketAjaxGet('?wicket:interface=:0:name:editor::IBehaviorListener:0:-1&wicket:ignoreIfNotActive=true&save=true&'+this.name+'='+wicketEncode(this.value)); return false;}"" wicket:id=""editor"" name=""name:editor"" onchange=""{wicketAjaxGet('?wicket:interface=:0:name:editor::IBehaviorListener:0:-1&wicket:ignoreIfNotActive=true&save=true&'+this.name+'='+wicketEncode(this.value)); return true;}"" onblur=""{wicketAjaxGet('?wicket:interface=:0:name:editor::IBehaviorListener:0:-1&wicket:ignoreIfNotActive=true&save=true&'+this.name+'='+wicketEncode(this.value)); return false;}"" id=""editor3"">
<option selected=""selected"" value=""0"">Arnold</option>
<option value=""1"">Alex</option>
<option value=""2"">Adam</option>
</select></wicket:panel></span>]]></component><evaluate><![CDATA[{ var el=wicketGet('editor3');  el.focus();   if (el.createTextRange) {      var v = el.value; var r = el.createTextRange();      r.moveStart('character', v.length); r.select(); } }]]></evaluate><evaluate><![CDATA[Wicket.Focus.setFocusOnId('editor3');]]></evaluate></ajax-response>
INFO: Response parsed. Now invoking steps...
INFO: focus set on editor3 from serverside
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: focus set on editor3
INFO: Calling focus on editor3
INFO: 
INFO: Initiating Ajax GET request on ?wicket:interface=:0:name:editor::IBehaviorListener:0:-1&wicket:ignoreIfNotActive=true&save=true&name:editor=0&random=0.32760623773406166
INFO: Invoking pre-call handler(s)...
INFO: focus set on editor3
INFO: Received ajax response (1088 characters)
INFO: 
<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><header-contribution encoding=""wicket1"" ><![CDATA[<head xmlns:wicket=""http://wicket.apache.org""><script type=""text/javascript"" src=""resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js""></script> 
<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/wicket-ajax.js""></script> 
<script type=""text/javascript"" id=""wicket-ajax-debug-enable""><!--/*--><![CDATA[/*><!--*/
wicketAjaxDebugEnable=true;
/*-->]^]^>*/</script>

<script type=""text/javascript"" src=""resources/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/wicket-ajax-debug.js""></script> 
</head>]]></header-contribution><component id=""name1"" ><![CDATA[<span wicket:id=""name"" id=""name1""><wicket:panel><span wicket:id=""label"" onclick=""var wcall=wicketAjaxGet('?wicket:interface=:0:name:label::IBehaviorListener:0:-1', function() { }.bind(this), function() { }.bind(this));"" id=""label2""><p>Arnold</p></span></wicket:panel></span>]]></component><evaluate><![CDATA[window.status='';]]></evaluate></ajax-response>
INFO: Response parsed. Now invoking steps...
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: Couldn't set focus on  not on the page anymore","13/Oct/07 12:39;knopp;Removed setting focus from appendJavascript, as it was causing the disappear problem in IE6. The functionality remains same, as the focus is set through target.focusComponent(editor)",,,,,,,,,,,,,,,,,,,,
setResponsePage(PageClass) doesn't take current pagemap into account,WICKET-1042,12379706,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,04/Oct/07 20:14,06/Oct/07 23:03,13/Mar/19 23:15,06/Oct/07 23:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202048,,,2007-10-04 20:14:10.0,,,,,,0|i0kh53:,117594,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
feedback panels not being updated when inside repeaters,WICKET-836,12375798,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,memeplex,memeplex,10/Aug/07 21:51,03/Oct/07 17:36,13/Mar/19 23:15,07/Sep/07 16:16,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,see the attached example,,,,,,,,,,,,,,,,,,,10/Aug/07 21:51;memeplex;FeedbackPage.html;https://issues.apache.org/jira/secure/attachment/12363627/FeedbackPage.html,10/Aug/07 21:52;memeplex;FeedbackPage.java;https://issues.apache.org/jira/secure/attachment/12363628/FeedbackPage.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-21 13:09:52.833,,,no_permission,,,,,,,,,,,201859,,,Wed Oct 03 17:36:51 UTC 2007,,,,,,0|i0khqv:,117692,,,,,,,,21/Aug/07 13:09;jbq;Looks reasonable to do for the next release,"26/Aug/07 17:53;knopp;Right now we call updateFeedback() before calling beforeRender() on components, thus the feedback panels in repeater don't even exist at that point. I think we should call updateFeedback() when the hierarchy is complete.",31/Aug/07 04:41;ivaynberg;what was the reason for specifically calling updatefeedback() _before_ onbeginrender(). it had something to do with repeaters - maybe because they remove components...but i dont remember what it was exactly now. we might have to do a second traversal.,"31/Aug/07 04:42;ivaynberg;see my comment, do you remember what the reason was?",31/Aug/07 18:01;knopp;I don't. Guess we will have to try and see.,"01/Sep/07 12:21;knopp;Actually, I'm not sure that we should do anything about it. It's not true that feedback panel is not update. Feedback panel should be updated regardless of whether updateFeedback was called or not. If it's not called. the panel should be updated on render. The updateFeedback method is only for getting feedback from components that might be removed in onBeforeRender (which is also the place  where feedback in repeaters are constructed). 

The problem that we have now, is that when there is an error message registered _after_ updateFeedback has been called, the panel doesn't display that message (e.g. register feedback message in populateItem(), the panel outside list will not display the message)","01/Sep/07 13:12;knopp;There seems to be bigger problem :-(

Let's say we have this hierarchy:

 FeedbackPanel
 ListView

inside listView's onPopulateItem we call item.info(""something"");
That string will not be shown inside FeedbackPanel, because feedback panel onBeforeRender is called before the listitem is built.","01/Sep/07 13:15;memeplex;I'm using a custom feedback panel as a temporary workaround for this
problem. The panel is only visible when there is feedback registered for its
target component. It has no need to be updated for this, it's just a matter
of overriding isVisible and using the right message filter. I wonder if
wicket's own feedback panels couldn't be implemented this way, instead of
relying on being explicitly notified.

","01/Sep/07 15:23;knopp;Okay, so Johan finally reminded me what updateFeedback() is for. The good thing is, that since we store messages in session, we no longer need it.

it was meant to collect feedback messages from component that would be removed in onBeforeRender. Such as when there are textfields in ListView with setReuseItems(false). Now since we store feedback messages ins session, they are not discarded when component is removed and we can safely ditch the updateFeedback() method (and thus all those stupid traversal that we had all over the place).

However, we still need IFeedback, but only as a marker interface. We need to be sure that onBeforeRender on IFeedback components is called _after_ all other (non feedback) component's onBeforeRender was called. So that we can collect all feedback messages, even from things like repeaters. 

I've already implemented this, but I'll need to test it properly before commiting.",01/Sep/07 17:43;knopp;Okay. I've commited the code. I hope I haven't broken the world. Which wouldn't surprise me at all.,"03/Oct/07 09:59;knopp;Hi, It's not feedback that is broken. It's the FormComponentFeedbackIndicator/Border that is broken. Looking at the code, probably changing updateFeedback to onBeforeRender should fix the problem.

As for the other FeedbackPanel problem you mention, can you be more specific? I haven't noticed any problem with it.","03/Oct/07 17:36;jmosser;Matej,
  Having looked more in depth at the Wicket code I agree with your assessment.

Regarding what I thought might have been issues with FeedbackPanel, I now believe there is no problem.  The odd behavior in my app was the result of changes outside the scope of this issue.  

<off-topic>
I have some form components that were using AjaxFormComponentUpdatingBehavior to handle 'onFocus' and 'onChange' events.  It appears that the API of AjaxFormComponentUpdatingBehavior has changed slightly with 1.3.0.  In Wicket 1.2.6, AjaxFormComponentUpdatingBehavior would invoke the onUpdate(...) method even if the component was 'invalid'.  This basically forced subclasses to check if the component had errors by way of getFormComponent().hasErrorMessage().  This has now been changed to be more atomic: onUpdate(...) is invoked when an update occurs and onError(...) is invoked when (validation) errors occur.  A couple of quick code changes in my app and all is back to normal.
</off-topic>

Sorry for the confusion on that part.

Does a separate issue need to be created to handle the FormComponentFeedbackIndicator/Border issue?

Regards,
  JM",,,,,,,,,,,,
Resource.getParameters() empty when resource is mounted,WICKET-631,12371324,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,cserepj,cserepj,09/Jun/07 17:00,01/Oct/07 06:31,13/Mar/19 23:15,30/Sep/07 19:53,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,1,,,,,,,,"After migrating my application from 1.2.6 to 1.3.0-incubating-SNAPSHOT mounted shared resources (rss feeds, uploaded images) stopped working.

DynamicWebResource.getParameters().getXXX() returns with null if the resource is mounted via Application.mountSharedResource but it works fine when the resource is not mounted.
",wicket 1.3.0-incubating-SNAPSHOT running on Glassfish and JDK 1.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 18:32:19.841,,,no_permission,,,,,,,,,,,201667,,,Mon Oct 01 06:31:57 UTC 2007,,,,,,0|i0kian:,117781,,,,,,,,"10/Jun/07 17:10;cserepj;Resource.getParameters() just calls:

RequestCycle.get().getRequest().getParameterMap()

I see the hack for WICKET-400 in BookmarkablePageRequestTarget.java that puts in the parameters into the map when the request target is a bookmarkable page. 

Anybody feels like helping me out with this? I cannot go live with new features until this is resolved (my rss feeds won't work without a fix)

Thanks:)","10/Jun/07 18:32;ehillenius;Could you help us create a unit test for this (so it should currently fail)? That'll make it easier for us to fix, and when we have that unit test, we can be sure it stays fixed.","10/Jun/07 18:34;ehillenius;Just look at the test cases in Wicket for an idea how to do this, and you could attach the Java source to this issue. Would be a great help!","10/Jun/07 19:09;ehillenius;Alternatively, and easier method might be to add an example to Wicket examples that displays your use case and (optionally) write a unit test using jwebunit like you can find in the wicket-examples project. That'll give people another example of what they can do with Wicket, and it's also a bit more a blackbox test (as you're doing actual requests rather than mock requests) compared to the unit tests like they can be found in core.","26/Jun/07 14:30;cserepj;I think I've found the line that causes this problem. In Resource.java:

finally
		{
			// Really really really make sure parameters are cleared
			parameters.set(null);
		}

is called in the end of onResourceRequested(). This method gets called in the PROCESS_EVENTS step.

The code before this is:

cycle.setRequestTarget(new ResourceStreamRequestTarget(resourceStream));

Which sets a new RequestTarget but doesn't yet call my custom DynamicWebResource's getResourceState method (where I'm calling getParameters())

When the lifecycle of the request continues we enter into the RESPOND step which eventually calls my subclassed DynamicWebResource and it's getResourceStream method. At this time the Resource's threadlocal for parameters is already null.

If the page is not mounted then Resource.getParameters() can still access the parameters through RequestCycle.get().getRequest().getParameters(), but when the resource is mounted, this fails.

Can someone check out why you really really really have to make sure that the parameters are cleared in the PROCESS_EVENTS step? I guess you didn't want to have objects lying around in the ThreadLocal, but that should really be moved after the resource finished assembling the response to the request.

Is calling Resource.getParameters() illegal from the getResourceState method of DynamicWebResource? 

The hack in Resource.getParameters which falls back to the RequestCycle is also quite ugly and I think should be reconsidered (I haven't found the code snippet which clears that when the request is finished)

Thanks,

janos","26/Jun/07 15:12;cserepj;checked: if I delete the finally block from Resource.onResourceRequested then getParameters() works when called from getResourceState()

I think Resource should have another method that could be called from ResourceStreamRequestTarget's detach or respond method which would clear the parameter threadlocal after the resource handled the request...



","02/Jul/07 07:24;karlmdavis;I just wanted to confirm this bug.  I sent out a long email to the listserv a minute ago that covers an easy way to hack around it, but I'll repeat the relevant portions here for the record:

In my DynamicWebResource class, I added a ""cachedParams"" ThreadLocal and cache the parameter ValueMap during setHeaders(WebResponse) in it, because the parameters get wiped out before getResourceState() is called.  Here's the code for that in case anyone needs it:

public class SomeResource extends DynamicWebResource
{
	private static ThreadLocal<ValueMap> cachedParams;

	...

	/**
	 * @see org.apache.wicket.markup.html.DynamicWebResource#setHeaders(org.apache.wicket.protocol.http.WebResponse)
	 */
	@Override
	protected void setHeaders(WebResponse response)
	{
		super.setHeaders(response);
		cachedParams.set(getParameters());
	}

	...
	
	/**
	 * @see org.apache.wicket.markup.html.DynamicWebResource#getResourceState()
	 */
	@Override
	protected ResourceState getResourceState()
	{
		ValueMap params = cachedParams.get();
		...
	}
}
",02/Jul/07 12:53;jcompagner;what do you exactly do in the response phase that you also need there the params?,"02/Jul/07 13:00;cserepj;getResourceState is called only in the response phase. That's where I would like to access parameters and set up a ResourceState object:

 protected DynamicWebResource.ResourceState getResourceState() {
        final Long id;
        try {
            id = getParameters().getLong(""id"");
        } catch (StringValueConversionException ex) {
            return null;
        }
        final int variant = getParameters().getInt(""variant"", 0);
        
        return new DynamicWebResource.ResourceState() {
         ...
        }
}

In 1.2.6 this works, in 1.3.0 it doesn't. ","02/Jul/07 21:42;cserepj;Karl,

Thanks for the workaround, I haven't used setHeaders before and would have never noticed that the parameters threadlocal is not null at the time it is called. I'm using the workaround with www.szeretgom.hu right now with 1.3.0-beta2 :)",20/Aug/07 20:37;dashorst;Next release,"29/Sep/07 15:44;jcompagner;So in the end it is only a problem with mounted/shared resources because the getRequest().getParameters() are the unresolved once:


""If the page is not mounted then Resource.getParameters() can still access the parameters through RequestCycle.get().getRequest().getParameters(), but when the resource is mounted, this fails.""


i changed the method now:

	protected ValueMap getParameters()
	{
		if (parameters.get() == null)
		{
			return new ValueMap(RequestCycle.get().getRequest().getRequestParameters()
					.getParameters());
		}
		return (ValueMap)parameters.get();
	}

this should fix it.",30/Sep/07 19:53;jcompagner;i think i have fixed it with svn revision 580776,01/Oct/07 06:31;frankbille;I haven't cut the beta4 release yet :),,,,,,,,,,
setRenderAllowed not called in Tree items,WICKET-973,12378263,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,buealb,buealb,14/Sep/07 09:16,30/Sep/07 14:53,13/Mar/19 23:15,30/Sep/07 14:53,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"I'm using Tree component. I have problems with the rendering of the children of an TreeItem. If I look the code of Component.renderComponent, after of calling to beforeRender(), you check if component and its children are allowed to be rendered (setRenderAllowed). Also you check markRendering() method.

But in Tree component, when you have to do the rendering of the TreeItem, only beforeRender() method is called, and setRenderAllowed() and markRendering() methods of the children never are called.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201984,,,2007-09-14 09:16:25.0,,,,,,0|i0khcf:,117627,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Static Pages -> Passing URI to a Wicket page == 404 Error,WICKET-977,12378338,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,olegtaranenko,olegtaranenko,15/Sep/07 07:01,24/Sep/07 20:29,13/Mar/19 23:15,24/Sep/07 20:29,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-examples,,,,0,,,,,,,,Broken url,Windows/Jetty/Firefox,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-15 23:32:51.927,,,no_permission,,,,,,,,,,,201987,,,Mon Sep 24 20:29:02 UTC 2007,,,,,,0|i0khbr:,117624,,,,,,,,15/Sep/07 23:32;ivaynberg;i dont really understand what this is about...could you please explain in more detail?,"17/Sep/07 05:52;olegtaranenko;cd C:\OpenSource\org\apache\wicket\trunk\jdk-1.5\wicket-examples
mvn jetty:run
http://localhost:8080/wicket-examples/staticpages/
click on ""Passing URI to a Wicket page""


Result ::
HTTP ERROR: 404

NOT_FOUND

RequestURI=/wicket-examples/staticpages/pages/path/to/hello.html

Powered by Jetty://

suspicious patch is

Revision: 573525
Author: jbq
Date: 12:04:15, 07 September 2007
Message:
WICKET-795 Easy access to final rendered page source
----
Modified : /wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/staticpages/Application.java
Added : /wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/staticpages/CapturingBookmarkablePageRequestTarget.java
Added : /wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/staticpages/CapturingBookmarkablePageRequestTargetUrlCodingStrategy.java
Added : /wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/staticpages/EmailPage.html
Added : /wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/staticpages/EmailPage.java
Modified : /wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/staticpages/Home.java



",17/Sep/07 06:03;ivaynberg;can you try with trunk? works fine over here: http://wicketstuff.org/wicket13/staticpages/,23/Sep/07 16:14;ivaynberg;appears fixed between time reported and now,"24/Sep/07 16:44;ivaynberg;confirmed, doesnt work. jbq its your stuff, mind taking a look?","24/Sep/07 20:29;jbq;Fixed, thanks for reporting.",,,,,,,,,,,,,,,,,,
wicket:enclosure doesn't work with multiple child components,WICKET-993,12378823,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,dashorst,dashorst,20/Sep/07 22:25,23/Sep/07 14:27,13/Mar/19 23:15,23/Sep/07 14:27,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"<div wicket:id=""example3"">
    <h3>Example 3 using wicket:enclosure</h3>
    <span wicket:id=""label1""></span><br />
    <span wicket:id=""label2""></span><br />
    <wicket:enclosure child=""label3"">
        <span wicket:id=""label3""></span><br />
        <span wicket:id=""label4""></span><br />
    </wicket:enclosure>
</div>

        WebMarkupContainer example3 = new WebMarkupContainer(""example3"");
        example3.add(new Label(""label1"", ""label 1""));
        example3.add(new Label(""label2"", ""label 2""));
        example3.add(new Label(""label3"", ""label 3""));
        example3.add(new Label(""label4"", ""label 4""));

        add(example3);

        example3.get(""label3"").setVisible(false);

Gives an error that label4 is not added to the page",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-22 05:59:40.453,,,no_permission,,,,,,,,,,,202001,,,Sun Sep 23 14:27:15 UTC 2007,,,,,,0|i0kh9r:,117615,,,,,,,,"20/Sep/07 22:26;dashorst;WicketMessage: The component(s) below failed to render. A common problem is that you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered).

1. [Component id = label4, page = wicket.in.action.chapter06.operations.OperationsPage, path = 6:example3:label4.Label, isVisible = true, isVersioned = false]

Root cause:

org.apache.wicket.WicketRuntimeException: The component(s) below failed to render. A common problem is that you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered).

1. [Component id = label4, page = wicket.in.action.chapter06.operations.OperationsPage, path = 6:example3:label4.Label, isVisible = true, isVersioned = false]

     at org.apache.wicket.Page.checkRendering(Page.java:1078)
     at org.apache.wicket.Page.renderPage(Page.java:892)
     at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:225)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1025)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1094)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1173)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:483)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:277)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:129)
     at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1041)
     at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:354)
     at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:226)
     at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:627)
     at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:141)
     at org.mortbay.jetty.Server.handle(Server.java:269)
     at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:430)
     at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:687)
     at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:492)
     at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:199)
     at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:339)
     at org.mortbay.jetty.nio.HttpChannelEndPoint.run(HttpChannelEndPoint.java:270)
     at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)","22/Sep/07 05:59;jdonnerstag;Though I was able to reproduce it, I wonder what the the use case is? Or are you asking for a better error message?

Juergen",22/Sep/07 08:29;dashorst;The usecase is that the enclosure should hide all child components when the identified component by the child attribute is hidden. The idea is that you don't need to add your own web markup container for this. Otherwise the child id is a useless attribute -> with only one child component it is easy to detect the visiblity.,23/Sep/07 14:27;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,
Localizer complains about component not being added to the page when the component is a page,WICKET-990,12378764,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,msandori,msandori,20/Sep/07 15:16,21/Sep/07 16:00,13/Mar/19 23:15,21/Sep/07 16:00,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"In Localizer, this code doesn't correctly detect when the component is actually a page:

public String getString(final String key, final Component component, final IModel model,
			final String defaultValue) throws MissingResourceException
	{
		final IResourceSettings resourceSettings = Application.get().getResourceSettings();

		boolean addedToPage = (component != null && null != component.findParent(Page.class));
		if (!addedToPage)
		{
			logger
					.warn(
							""Tried to retrieve a localized string for a component that has not yet been added to the page. ""
									+ ""This can sometimes lead to an invalid or no localized resource returned. ""
									+ ""Make sure you are not calling Component#getString() inside your Component's constructor. ""
									+ ""Offending component: {}"", component);
		}

This results in excessive warnings in the logs when attempting to use the Page as the root for a resource lookup. This is such a common idiom that it should be accounted for. For instance, the javadoc description for StringResourceModel includes examples of using the page as the component for the resource lookup.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201998,,,2007-09-20 15:16:19.0,,,,,,0|i0kha7:,117617,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax requests may happen before DOM is ready,WICKET-994,12378840,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,salk31,salk31,21/Sep/07 08:08,21/Sep/07 11:28,13/Mar/19 23:15,21/Sep/07 11:28,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"If an Ajax request submits a form that was ""recently"" updated via Wicket Ajax (using innerHTML) the DOM may not yet be complete so the request is invalid.

Please find attached a Wicket application (unzip into src directory and point web.xml at TestWicketApplication). The quickest way to demonstrate the problem is to get focus on the submit button and hold down the return key. This code updates the whole form, in order to keep the test small, in our production code only a few fields are updated but the problem is the same.

Please let me know if I should change the test to be more useful.","FF 2, IE 6",,,,,,,,,,,,,,,,,,21/Sep/07 08:09;salk31;test.zip;https://issues.apache.org/jira/secure/attachment/12366336/test.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-21 11:28:18.062,,,no_permission,,,,,,,,,,,202002,,,Fri Sep 21 11:28:18 UTC 2007,,,,,,0|i0kh9j:,117614,,,,,,,,21/Sep/07 08:09;salk31;Description of how to use the file in initial posting.,21/Sep/07 11:28;knopp;Already fixed.,,,,,,,,,,,,,,,,,,,,,,
NPE in Component.remove(final IBehavior behavior),WICKET-981,12378414,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,funkattack,funkattack,17/Sep/07 09:28,20/Sep/07 06:38,13/Mar/19 23:15,20/Sep/07 06:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,,,,,0,,,,,,,,"If the behaviors are null a NPE is thrown

Proposal:

martinfunk@IT02 /cygdrive/c/martinf/svn/wicket-trunk
$ svn diff ./jdk-1.4/wicket/src/main/java/org/apache/wicket/ -r HEAD
Index: jdk-1.4/wicket/src/main/java/org/apache/wicket/Component.java
===================================================================
--- jdk-1.4/wicket/src/main/java/org/apache/wicket/Component.java       (revision 576323)
+++ jdk-1.4/wicket/src/main/java/org/apache/wicket/Component.java       (working copy)
@@ -1894,7 +1894,7 @@
                {
                        throw new IllegalArgumentException(""Argument `behavior` cannot be null"");
                }
-               if (!behaviors.contains(behavior))
+               if (behaviors == null || !behaviors.contains(behavior))
                {
                        throw new IllegalStateException(
                                        ""Tried to remove a behavior that was not added to the component. Behavior: "" +
",current trunk,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201991,,,2007-09-17 09:28:23.0,,,,,,0|i0khbb:,117622,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setresponsepage() does not properly redirect from ajax requests,WICKET-796,12374726,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ivaynberg,ivaynberg,26/Jul/07 20:54,16/Sep/07 22:57,13/Mar/19 23:15,16/Sep/07 22:57,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"if you are on a mounted page with parameters, lets say

/context/page/param1/param2/

and you call setresponsepage() from an NORMAL link on that page you will land on
/context/?wicket:interface=...

which is correct, however if you do it from an ajax link like so: onclick(ajaxrequesttarget target) { setresponsepage(new mypage()); } you will land on 

/context/page/param1/param2/?wicket:interface=...

which is INCORRECTl. notice that the mount and params were not stripped. also now because wicket thinks url depth is 0 urls will break, for example a resource requested from that page will be:

/context/page/param1/param2/resources/..... woopsie

why this happens:

when setresponsepage is called the ?wicket:interface:foo::: url is constructed and passed to webresponse.redirect(url) which in turn calls httpServletResponse.sendRedirect(url); for normal responses or httpServletResponse.addHeader(""Ajax-Location"", url); for ajax responses. the big difference is how servletresponse handles this, and from the javadoc: This method can accept relative URLs; the servlet container will convert the relative URL to an absolute URL before sending the response to the client. 

so what needs to be done is that httpServletResponse.addHeader(""Ajax-Location"", url); also needs to mangle the url and make it absolute.

since you are the proxy guy and i dont know how this will play into that i am assigning it to you
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-26 22:22:08.084,,,no_permission,,,,,,,,,,,201824,,,Sat Sep 01 21:20:16 UTC 2007,,,,,,0|i0khv3:,117711,,,,,,,,26/Jul/07 22:22;almaw;I'm not going to have chance to look at this 'til Tuesday. Will do so then.,01/Aug/07 08:54;almaw;I *think* I've nailed this one. Please test.,"01/Aug/07 09:08;jbq;Be careful, you left the alert()s in the code.","01/Aug/07 16:44;almaw;Yeah, whoops! ;-)
I've digged those out, needless to say.

Igor - can you test this out and get back to me?",01/Aug/07 17:17;ehillenius;Doesn't work for my case unfortunately. Hopefully I can gather some details later this week.,26/Aug/07 17:49;knopp;Works for me fine. ,01/Sep/07 20:52;ehillenius;I still have to check it. I don't think it's critical as it's not a very common use case.,"01/Sep/07 20:57;knopp;Okay, this still doesn't work.
If you are on mounted page with parameters, such as /links/param/value
then the redirect works, but all resources on rendered page are prepended by way too much ../","01/Sep/07 21:20;knopp;I've fixed this by disabling redirect to buffer for AJAX request (as it break everything, since the URL is wrong)",,,,,,,,,,,,,,,
embedded jetty configuration stops working on beta3,WICKET-925,12377420,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,sdmiski,sdmiski,04/Sep/07 11:07,16/Sep/07 13:07,13/Mar/19 23:15,16/Sep/07 13:07,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"When using beta3 with embedded configuration, which means there is no web.xml, but wicket servlet instance is injected in jetty server context. During the startup application generates NPE in (DiskPageStore.java:486) which means that wicket servlet cannot retrieve temp dir... Adding the following line before string the application resolves the question:

serverContext.setAttribute(""javax.servlet.context.tempdir"", new File("".""));

I am not sure if this is just treating effect and not the cause which can be related to recent WicketFilter/WicketServlet 'thread' questions ?

Attached simple hello world application reproduce this...","Windows 2000sp4, Java 1.6.0-b105",,,,,,,,,,,,,,,,,,04/Sep/07 11:08;sdmiski;jettyWicket.zip;https://issues.apache.org/jira/secure/attachment/12365060/jettyWicket.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201939,,,2007-09-04 11:07:57.0,,,,,,0|i0khgv:,117647,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndicatingAjaxFallbackLink does not remove indicator if the link itself is added via ajax,WICKET-722,12373008,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,mvoigt,mvoigt,04/Jul/07 16:37,16/Sep/07 12:07,13/Mar/19 23:15,16/Sep/07 12:07,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"Any link extending IndicatingAjaxFallbackLink that adds itself to the AjaxRequestTarget via:

@Override
public void onClick(AjaxRequestTarget target) {
    //do stuff
   if (target != null) {
           target.addComponent(this);
       } else {
           setResponsePage(getPage());
      }
}

This results in adding the indicator-span to the page every time that link is clicked, if clicked 5 times there are 5 indicator-spans visible. Reloading the page or target.addComponent(containerThatContainsTheLink) removes the indicators.






","Windows XP, JBoss-4.2.0GA, JDK 1.5",,,,,,,,,,,,,,,,,,28/Aug/07 23:31;faceman;WICKET-722.patch;https://issues.apache.org/jira/secure/attachment/12364728/WICKET-722.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-28 23:31:20.948,,,no_permission,,,,,,,,,,,201754,,,Tue Aug 28 23:31:20 UTC 2007,,,,,,0|i0ki3b:,117748,,,,,,,,28/Aug/07 23:31;faceman;removes an existing indicator before rendering another one,,,,,,,,,,,,,,,,,,,,,,,
Image#getResource always returns null even if there is a resource,WICKET-974,12378271,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,14/Sep/07 10:10,15/Sep/07 21:09,13/Mar/19 23:15,15/Sep/07 21:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"When trying to implement a subclass of org.apache.wicket.markup.html.image that automatically shows/hides (using isVisible) depending on if there is image data to show I stumbled upon the following:

	/**
	 * @return Resource returned from subclass
	 */
	protected Resource getImageResource()
	{
		return null;
	}

the same for

	/**
	 * @return ResourceReference returned from subclass
	 */
	protected ResourceReference getImageResourceReference()
	{
		return null;
	}


this is confusing and the javadoc should be more verbose on the intention that caused this design.

due to the fact that 
   
  private final LocalizedImageResource localizedImageResource = new LocalizedImageResource(this);

is private and not protected there is no way except overriding all the setters

	public void setImageResource(final Resource imageResource)
	public void setImageResourceReference(final ResourceReference resourceReference)
	public void setImageResourceReference(final ResourceReference resourceReference, final ValueMap parameters)
	public Component setModel(IModel model)

to detect if the image is 'blank' (having no src attribute) or has some data.

I think it would make sense to add

  protected final LocalizedImageResource getLocalizedImageResource()
  {
    return this.localizedImageResource;
  }


So it's easy to implement something like this:

  Image imageTag = new Image(""test"")
    {
      public boolean isVisible()
      {
        return getLocalizedImageResource() != null;
      }
  };
  add(imageTag);

  if(database.has.image.for.product)
  {
    imageTag.setImageResource(......);
  }
  // if product has no image the image tag is not rendered",,,,,,,,,,,,,,,,,,,14/Sep/07 10:25;pete;image.patch;https://issues.apache.org/jira/secure/attachment/12365838/image.patch,15/Sep/07 21:09;ivaynberg;mylyn-context.zip;https://issues.apache.org/jira/secure/attachment/12365919/mylyn-context.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201985,,,Fri Sep 14 10:25:40 UTC 2007,,,,,,0|i0khc7:,117626,,,,,,,,"14/Sep/07 10:25;pete;Well, I was wrong (thanks gerolf)

localizedImageResource is never null so the better approach would be to provide non-null getters for 

protected Resource getImageResource()
protected ResourceReference getImageResourceReference() 

I will attach a patch...",,,,,,,,,,,,,,,,,,,,,,,
WebRequestCodingStrategy is not synchronized,WICKET-946,12377831,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,johnray,johnray,08/Sep/07 21:15,15/Sep/07 21:03,13/Mar/19 23:15,15/Sep/07 21:03,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"The WebRequestCodingStrategy class uses a TreeMap to store mounted pages however there is no synchronization done. This will cause problems if pages are being mounted/unmounted by one thread while web requests are being served from a different one. It could also cause problems if two threads try to mount/unmount pages at the same time.

I'll include a patch to fix this as well as a new version of the java file that you can use if you want

Keep up the good work",,,,,,,,,,,,,,,,,,,08/Sep/07 21:16;johnray;WebRequestCodingStrategy-patch;https://issues.apache.org/jira/secure/attachment/12365415/WebRequestCodingStrategy-patch,08/Sep/07 21:15;johnray;WebRequestCodingStrategy.java;https://issues.apache.org/jira/secure/attachment/12365414/WebRequestCodingStrategy.java,15/Sep/07 21:03;ivaynberg;mylyn-context.zip;https://issues.apache.org/jira/secure/attachment/12365918/mylyn-context.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-09-12 05:34:47.015,,,no_permission,,,,,,,,,,,201958,,,Sat Sep 15 21:03:19 UTC 2007,,,,,,0|i0khen:,117637,,,,,,,,12/Sep/07 05:34;ivaynberg;what exactly is the usecase for this? you are only meant to mount/unmount pages in your application.init() method,12/Sep/07 15:00;johnray;The usecase is to create a kind of content management system or WIKI. I basically want user's to be able to add/remove pages while the application is running. ,"12/Sep/07 15:49;ivaynberg;such a usecase is commonly handled by mounting a ""dispatch"" page.

so you would mount a dispatch page to lets say /page mount with indexed url coding strat, and then pass in the name of the page as a param

so if you want to display page foo the url would be /page/foo instead of just /foo

if foo is representated by an actual wicket page then the dispatch page can throw a restartresponseexception and hard-redirect to page foo.

makes sense?","12/Sep/07 16:20;johnray;The way my application is currently written it has a number of pages created the standard wicket way. However the user can add a page dynamically anyplace they want. The issues with having a dispatch page is that it restricts the possible URLs of any of the dynamic pages. For instance if I have the following top level pages

  /index
  /page1
  /page2

If the user then wants to add a couple pages to the top level you end up with the following

 /index
 /page1
 /page2
 /page/foo1
 /page/foo2

I would also need to create a dispatch page in each of my applications directories when the application is first started just in case the user wants to add a page there. I do see where your coming from though and perhaps I should be looking at patching into wicket farther up chain. When I saw the unmount method I assumed this was the best place and just thought the synchronization was an oversight.",15/Sep/07 21:03;ivaynberg;applied patch,,,,,,,,,,,,,,,,,,,
Buggy behaviour in FormComponentPanel.setRequired(boolean),WICKET-775,12374267,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,kadirsener,kadirsener,20/Jul/07 15:25,15/Sep/07 20:59,13/Mar/19 23:15,15/Sep/07 20:58,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"When you set a required flag for a FormComponentPanel in a form,  the component does not check its children while validating if it is required or not, and throws ""required"" exception!  Because ""checkRequired()"" method that inherited from FormComponent calls ""getInput()"", then that method calls ""getInputAsArray()"", and then the last called method ""getInputAsArray"" looks for values from the http request parameters with the formComponentPanel name. Hence there is no any parameter in request with the formComponentPanel name, it thinks itself as empty and throws the validation error.  IMHO, FormComponentPanel class should override ""checkRequired()"" method or ""getInput()"" method to delegate work to its children components.",,,,,,,,,,,,,,,,,,,15/Sep/07 20:58;ivaynberg;mylyn-context.zip;https://issues.apache.org/jira/secure/attachment/12365917/mylyn-context.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-01 18:48:47.411,,,no_permission,,,,,,,,,,,201803,,,Sat Sep 15 20:59:41 UTC 2007,,,,,,0|i0khwv:,117719,,,,,,,,01/Sep/07 18:48;knopp;What do we do about it?,"03/Sep/07 11:00;kadirsener;if you ask my solution about this issue for my project, i created a base class that extends FormComponentPanel, and overriden getInput() as below. It is working fine.

public abstract class BaseFormComponentPanel extends FormComponentPanel {

	public BaseFormComponentPanel (String id) {
		super(id);
	}


	public BaseFormComponentPanel (String id, IModel model) {
		super(id, model);
	}

	
	/**
	 * Gets compound input from its child components.
	 */
	@Override
	public abstract Object getConvertedInput();
	
	

	//--- a trick for FormComponentPanel.isRequired() bug. (see http://issues.apache.org/jira/browse/WICKET-775)
	@Override
	public String getInput() {
		String input = super.getInput();
		if (input==null && getConvertedInput()!=null) {
			return getConvertedInput().toString();
		}
		return null;
	}
}",15/Sep/07 20:59;ivaynberg;this was already fixed in beta3 if i remember correctly,,,,,,,,,,,,,,,,,,,,,
Wicket Contrib Date Picker Not Picking Up Date Properly In CompoundPropertyModel,WICKET-937,12377669,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,carloc,carloc,06/Sep/07 15:10,15/Sep/07 13:41,13/Mar/19 23:15,15/Sep/07 13:41,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"My Date Picker is not being picked up properly when I switched to Wicket 1.3.0-beta2
I used a compound property model in my form. and placed a user object
Before switching to beta2 the Date was picked up properly

I'm using wicket-stuff wicket-contrib-datepicker 1.3-SNAPSHOT","Ubuntu, Wicket 1.3.0-beta2, Jetty",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-12 05:52:35.125,,,no_permission,,,,,,,,,,,201950,,,Sat Sep 15 13:41:38 UTC 2007,,,,,,0|i0khfj:,117641,,,,,,,,12/Sep/07 05:52;ehillenius;can you please test with beta3 of both wicket and wicket-datetime please?,"13/Sep/07 00:57;carloc;It works fine on the latest snapshot in the trunk.

Thanks",15/Sep/07 13:41;carloc;It's already fixed at the latest snapshot.,,,,,,,,,,,,,,,,,,,,,
Bug In Wicket Listing Using DataTables,WICKET-956,12377966,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,carloc,carloc,11/Sep/07 11:27,12/Sep/07 15:46,13/Mar/19 23:15,12/Sep/07 15:46,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"I Keep on getting This Error For Every LIsting Page When I switched from 1.0-beta2 to 1.0-beta3

WicketMessage: Expected close tag for <th class=""wicket_orderNone"" wicket:id=""header"">
[markup = jar:file:/home/carloc/.m2/repository/org/apache/wicket/wicket-extensions/1.3.0-beta3/wicket-extensions-1.3.0-beta3.jar!/org/apache/wicket/extensions/markup/html/repeater/data/table/HeadersToolbar.html
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements. See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the ""License""); you may not use this file except in compliance with
the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<wicket:panel>
<tr class=""headers"">
<span wicket:id=""headers"">
<th wicket:id=""header""><span wicket:id=""label"">[header-label]</span></th>
</span>
</tr>
</wicket:panel>, index = 6, current = '<span wicket:id=""label"">' (line 20, column 27)]

Root cause:

org.apache.wicket.markup.MarkupException: Expected close tag for <th class=""wicket_orderNone"" wicket:id=""header"">
[markup = jar:file:/home/carloc/.m2/repository/org/apache/wicket/wicket-extensions/1.3.0-beta3/wicket-extensions-1.3.0-beta3.jar!/org/apache/wicket/extensions/markup/html/repeater/data/table/HeadersToolbar.html
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements. See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the ""License""); you may not use this file except in compliance with
the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<wicket:panel>
<tr class=""headers"">
<span wicket:id=""headers"">
<th wicket:id=""header""><span wicket:id=""label"">[header-label]</span></th>
</span>
</tr>
</wicket:panel>, index = 6, current = '<span wicket:id=""label"">' (line 20, column 27)]
at org.apache.wicket.markup.MarkupStream.throwMarkupException(MarkupStream.java:472)
at org.apache.wicket.Component.renderClosingComponentTag(Component.java:3748)
at org.apache.wicket.Component.renderComponent(Component.java:2197)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1305)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.markup.repeater.AbstractRepeater.renderChild(AbstractRepeater.java:115)
at org.apache.wicket.markup.repeater.AbstractRepeater.onRender(AbstractRepeater.java:96)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:642)
at org.apache.wicket.markup.html.panel.Panel.onComponentTagBody(Panel.java:112)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1305)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.markup.repeater.AbstractRepeater.renderChild(AbstractRepeater.java:115)
at org.apache.wicket.markup.repeater.AbstractRepeater.onRender(AbstractRepeater.java:96)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:642)
at org.apache.wicket.markup.html.panel.Panel.onComponentTagBody(Panel.java:112)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1305)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1305)
at org.apache.wicket.markup.html.form.Form.onComponentTagBody(Form.java:1580)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.markup.html.form.Form.onRender(Form.java:1619)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.markup.html.border.Border$BorderBodyContainer.resolve(Border.java:366)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1211)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1305)
at org.apache.wicket.markup.html.border.Border$BorderBodyContainer.onComponentTagBody(Border.java:347)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1370)
at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:642)
at org.apache.wicket.markup.html.border.Border.onComponentTagBody(Border.java:284)
at org.apache.wicket.Component.renderComponent(Component.java:2189)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1315)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1200)
at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1332)
at org.apache.wicket.Page.onRender(Page.java:1433)
at org.apache.wicket.Component.render(Component.java:2013)
at org.apache.wicket.Page.renderPage(Page.java:922)
at org.apache.wicket.protocol.http.WebRequestCycle.redirectTo(WebRequestCycle.java:165)
at org.apache.wicket.request.target.component.PageRequestTarget.respond(PageRequestTarget.java:59)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1038)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1108)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1177)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:500)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:261)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:127)
at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
at org.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:471)
at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:568)
at org.mortbay.http.HttpContext.handle(HttpContext.java:1530)
at org.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:633)
at org.mortbay.http.HttpContext.handle(HttpContext.java:1482)
at org.mortbay.http.HttpServer.service(HttpServer.java:909)
at org.mortbay.http.HttpConnection.service(HttpConnection.java:820)
at org.mortbay.http.HttpConnection.handleNext(HttpConnection.java:986)
at org.mortbay.http.HttpConnection.handle(HttpConnection.java:837)
at org.mortbay.http.SocketListener.handleConnection(SocketListener.java:245)
at org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:357)
at org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:534)

Markup

The problem is in ""jar:file:/home/carloc/.m2/repository/org/apache/wicket/wicket-extensions/1.3.0-beta3/wicket-extensions-1.3.0-beta3.jar!/org/apache/wicket/extensions/markup/html/repeater/data/table/HeadersToolbar.html"":

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the ""License""); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<wicket:panel>
    <tr class=""headers"">
        <span wicket:id=""headers"">
            <th wicket:id=""header""><span wicket:id=""label"">[header-label]</span></th>
        </span>
    </tr>
</wicket:panel>","Ubuntu
Eclipse
Jetty",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-12 05:32:50.973,,,no_permission,,,,,,,,,,,201968,,,Wed Sep 12 11:04:02 UTC 2007,,,,,,0|i0khdj:,117632,,,,,,,,"11/Sep/07 11:40;carloc;Every listing in our application doesn't work because of this bug
We are using AjaxDefaultDataTable","12/Sep/07 05:32;ivaynberg;afaik this has already been fixed in trunk, can you try a snapshot?","12/Sep/07 11:04;carloc;Yes

Thank You.
I tried latest snapshot",,,,,,,,,,,,,,,,,,,,,
Second and subsequent ajax component updates fail in Safari,WICKET-938,12377715,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,nathan@technically.us,nathan@technically.us,07/Sep/07 01:38,11/Sep/07 12:02,13/Mar/19 23:15,11/Sep/07 12:02,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"Ajax updates in Safari will work the first time, but not on subsequent ajax requests (nothing happens). The same pages work fine in Firefox, or in Safari if I revert to beta2. The Safari javascript console doesn't show any error, but the Wicket ajax debug window has messages like this one:

ERROR: Component with id [[feedback15]] a was not found while trying to perform markup update. Make sure you called component.setOutputMarkupId(true) on the component whose markup you are trying to update.

Outputting the markup id isn't the problem, since it works for the first request. It seems that the markup id has fallen out of sync between the browser and the server. ","Mac OS 10.4.10, Safari 2.0.4",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-07 09:15:34.265,,,no_permission,,,,,,,,,,,201951,,,Tue Sep 11 12:02:56 UTC 2007,,,,,,0|i0khfb:,117640,,,,,,,,"07/Sep/07 09:15;knopp;I will need a quick start for this. Otherwise I can't reproduce it. I need the specific markup that causes this, as this is related to safari DOM replacement. Also please try this with latest snapshot, the DOM replacement method has changed since beta 3 IIRC.","07/Sep/07 10:13;knopp;Looks like the method changed before beta 3, so if there is problem with beta 3 it is in trunk as well. So I'll need at least the markup before replacement and the new markup (ajax response).
","11/Sep/07 10:31;mindhaq;I also had a problem with Konqueror / Safari and Ajax updates in beta 3, and I can confirm it works now with the current snapshot.

(see http://www.nabble.com/Ajax-error-in-Safari---Konqueror-tf4415279.html)",11/Sep/07 12:02;nathan@technically.us;Likewise! The problem I was seeing is gone in the current snapshot.,,,,,,,,,,,,,,,,,,,,
Default button does not provide button name,WICKET-954,12377937,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,11/Sep/07 04:35,11/Sep/07 04:36,13/Mar/19 23:15,11/Sep/07 04:36,1.3.0-beta1,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"When the default button is set in a form, the name property should be rendered too, so that the right button is executed rather than just the form's onsubmit method.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201966,,,2007-09-11 04:35:43.0,,,,,,0|i0khdr:,117633,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"the javadoc of FormComponent.updateModel() states: "".. it expect

> that the object is already converted through the convert() call"", but
FormComponent.updateModel() documentation bug",WICKET-951,12377879,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,wensveen,wensveen,10/Sep/07 09:58,10/Sep/07 11:30,13/Mar/19 23:15,10/Sep/07 11:30,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,site,,,,0,,,,,,,,"The javadoc of FormComponent.updateModel() states: ""Updates this components' model from the request, it expect that the object is already converted through the convert() call.""

Aside from the minor grammar flaw, there is no FormComponent.convert() method.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-10 11:30:04.53,,,no_permission,,,,,,,,,,,201963,,,Mon Sep 10 11:30:04 UTC 2007,,,,,,0|i0khe7:,117635,,,,,,,,"10/Sep/07 11:30;jcompagner;i changed it to:

/**
	 * Updates this components model from the request, it expects that the object is already
	 * converted through the convertInput() call that is called by the validate() method when a form
	 * is being processed.
	 * 
	 * By default it just does this:
	 * 
	 * <pre>
	 * setModelObject(getConvertedInput());
	 * </pre>
	 * 
	 * DO NOT CALL THIS METHOD DIRECTLY UNLESS YOU ARE SURE WHAT YOU ARE DOING. USUALLY UPDATING
	 * YOUR MODEL IS HANDLED BY THE FORM, NOT DIRECTLY BY YOU.
	 */",,,,,,,,,,,,,,,,,,,,,,,
textfield strings are not trimmed when performing validation (conversion).,WICKET-934,12377641,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,alexandru.objelean,alexandru.objelean,06/Sep/07 10:16,08/Sep/07 16:19,13/Mar/19 23:15,07/Sep/07 06:55,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"I've discovered the following issue:
When using a DateTextField in a form (with the format: dd/MM/yyyy), user by mistake add an extra space (for instance: ""06/09/2007 "") and submit the form. The are two problems:

1) I would expect the convertor to convert this value correct, but the AbstractConverter.parse method throws a ConversionException because: (position.getIndex() != stringValue.length()).

2) The above exception is not reported anywhere, because validate method does not check if the input is valid after converting its value: 

Forum link: ""http://www.nabble.com/Re%3A-Wicket-validation-flaw--p12519433.html""",,,,,,,,,,,,,,,,,,,07/Sep/07 06:55;ivaynberg;mylyn-context.zip;https://issues.apache.org/jira/secure/attachment/12365325/mylyn-context.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-07 06:34:45.618,,,no_permission,,,,,,,,,,,201947,,,Sat Sep 08 16:19:01 UTC 2007,,,,,,0|i0khg7:,117644,,,,,,,,07/Sep/07 06:34;ivaynberg;added a comment to the above mentioned thread,"08/Sep/07 14:57;freemant;For 1), getInput() is indeed not trimming the nput.

For 2), it does report the error:

			final IConverter converter = getConverter(getType());
			try
			{
				convertedInput = converter.convertToObject(getInput(), getLocale());
			}
			catch (ConversionException e)
			{
				ValidationError error = new ValidationError();
				if (e.getResourceKey() != null)
				{
					error.addMessageKey(e.getResourceKey());
				}
				...
			}
","08/Sep/07 16:19;ivaynberg;see subversion commits tab, its already fixed :)",,,,,,,,,,,,,,,,,,,,,
AbstractRepeater#onBeforeRender should not be final,WICKET-935,12377645,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,alexandru.objelean,alexandru.objelean,06/Sep/07 12:06,07/Sep/07 09:00,13/Mar/19 23:15,07/Sep/07 09:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"<quote>
""Some time ago onBeforeRender was called always, even if the component
was not visible. This had caused problems with repeaters, therefore
this restriction - to make sure onPopulate is called only when
component is visible. But now that's no longer necessary. ""
 - Matej Knopp
</quote>
",Affects Versions: 1.3.0-SNAPSHOT (from 6 sept 2007),,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-07 09:00:29.834,,,no_permission,,,,,,,,,,,201948,,,Fri Sep 07 09:00:29 UTC 2007,,,,,,0|i0khfz:,117643,,,,,,,,"07/Sep/07 09:00;jcompagner;fixed now it is not final anymore
we still have an onPopulate that is implemented by the Concreet Repeaters and then made final.",,,,,,,,,,,,,,,,,,,,,,,
FormTester Does Not Properly Handle DropDownChoice With Null Model,WICKET-635,12371360,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,severian,severian,11/Jun/07 08:46,05/Sep/07 15:08,13/Mar/19 23:15,05/Sep/07 15:08,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"See this thread: <http://www.nabble.com/FormTester%2C-DropDownChoice---Validation-tf3884382.html#a11009710>.
The FormTester constructor contains a code block like:
-----------------------------------------------------------------------------------------------------------------------
else if ((formComponent instanceof DropDownChoice) || (formComponent instanceof RadioChoice) || (formComponent instanceof CheckBox)) { 
    setFormComponentValue(formComponent, formComponent.getValue());
}

This means that a DropDownChoice with a null model (i.e.. no selection) gets a post value of ""-1"", instead of """" (empty string).
This in turn means that it incorrectly passes a ""required"" validation check.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 15:15:20.04,,,no_permission,,,,,,,,,,,201670,,,Wed Sep 05 15:08:16 UTC 2007,,,,,,0|i0kiaf:,117780,,,,,,,,21/Aug/07 15:15;jbq;Looks reasonable to do for the next release,"31/Aug/07 05:14;ivaynberg;where does -1 come from? fc.getvalue() is final and afict it will return """" not -1 if modelobject is null",04/Sep/07 07:43;jbq;Gerry do you have a few classes handy for us to reproduce the problem?,"04/Sep/07 10:18;severian;I don't think I need to provide any classes, as you guys seem to have fixed the problem already.

Igor: the ""-1"" is coming from AbstractSingleSelectChoice.getModelValue(), when the model is null.  This was true in beta1, and is still true in beta4.


However, in beta1, FormComponent.validate() looked like:

public final void validate()
    {
        validateRequired();
        convert();
        validateValidators();
    }

and the initial ValidateRequired() check passed, because of the ""-1"".


Whereas in beta3, FormComponent.validate() looks like:

public final void validate()
    {
        validateRequired();
        if (isValid())
        {
            convertInput();

            if (isValid() && isRequired() && getConvertedInput() == null && isInputNullable())
            {
                reportRequiredError();
            }

            if (isValid())
            {
                validateValidators();
            }
        }
    }

The initial validateRequired() still passes due to the ""-1"".  But the ""getConvertedInput() == null"" clause is triggered, and causes the correct validation error to subsequently occur.

I won't pretend to understand what's going on here, seems like validating a required field has to be done both before and after input conversion.  But it does seem to work now...",05/Sep/07 15:08;ivaynberg;i added a seperate issues for 1.4 to remove that creepy constant,,,,,,,,,,,,,,,,,,,
Inconsistent use of Button vs. IFormSubmittingComponent,WICKET-922,12377391,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,dleangen,dleangen,04/Sep/07 02:25,05/Sep/07 12:17,13/Mar/19 23:15,05/Sep/07 12:17,1.3.0-beta4,1.3.0-final,1.3.0-rc2,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"Inconsistent use of the new IFormSubmittingComponent interface.

Discussion here: http://www.nabble.com/Change-of-Button-interface-tf4370155.html",,,,,,,,,,,,,,,,,,,05/Sep/07 08:38;dleangen;Form-Change_Button_to_IFormSubmittingComponent.diff;https://issues.apache.org/jira/secure/attachment/12365150/Form-Change_Button_to_IFormSubmittingComponent.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-05 12:17:35.061,,,no_permission,,,,,,,,,,,201936,,,Wed Sep 05 12:17:35 UTC 2007,,,,,,0|i0khh3:,117648,,,,,,,,"04/Sep/07 02:27;dleangen;The following methods are used in Form, but are not defined in IFormSubmittingComponent:

  defaultButton.isVisibleInHierarchy()
  defaultButton.isEnabled()
  defaultButton.getMarkupId()
","05/Sep/07 08:38;dleangen;Patch file.

The patch changes use of Button implementation for use of IFormSubmittingComponent interface.

In some of the methods, the IFormSubmittingComponent is cast to Component.

Comments and variable names are also updated to reflect the change.


Other than the change from Button to IFormSubmittingComponent, there are no other changes to the api. Therefore, some method names remain inconsistent (such as setDefaultButton, and so on).","05/Sep/07 12:17;jcompagner;applied the patch.

We could rename some methods but i think setDefaultButton is still a right name (from an UI perspective)
and now we don't break api, so i think this is ok.",,,,,,,,,,,,,,,,,,,,,
ExceptionErrorPage only works with WebResponse,WICKET-929,12377496,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,oliver.henlich,oliver.henlich,04/Sep/07 21:21,04/Sep/07 22:42,13/Mar/19 23:15,04/Sep/07 22:42,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"Trying to get the html source of a wicket page by making the RequestCycle write to a StringResponse. 

The issue is discussed at length on the mailing list:

http://www.nabble.com/How-to-get-HTML-source-code-from-a-wicket-page-(was-on-old-list)-tf4276165.html#a12171769
http://www.nabble.com/How-to-get-HTML-source-code-from-a-wicket-page-tf3968790.html#a12044817

Stacktrace: 
----------- 
11:45:49.263 WARN!! Exception for /app/?wicket:interface=:1:linkDumpHtml::ILinkListener:: 
org.apache.wicket.WicketRuntimeException: Internal Error: Could not render error page class org.apache.wicket.markup.html.pages.InternalErrorPage 
  at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:165) 
  at org.apache.wicket.RequestCycle.step(RequestCycle.java:1142) 
  at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1176) 
  at org.apache.wicket.RequestCycle.request(RequestCycle.java:499) 
  at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:257) 
  at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:126) 
  at javax.servlet.http.HttpServlet.service(HttpServlet.java:689) 
  at javax.servlet.http.HttpServlet.service(HttpServlet.java:802) 
  at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:360) 
  at org.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:294) 
  at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:558) 
  at org.mortbay.http.HttpContext.handle(HttpContext.java:1714) 
  at org.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:507) 
  at org.mortbay.http.HttpContext.handle(HttpContext.java:1664) 
  at org.mortbay.http.HttpServer.service(HttpServer.java:863) 
  at org.mortbay.http.HttpConnection.service(HttpConnection.java:775) 
  at org.mortbay.http.HttpConnection.handleNext(HttpConnection.java:939) 
  at org.mortbay.http.HttpConnection.handle(HttpConnection.java:792) 
  at org.mortbay.http.SocketListener.handleConnection(SocketListener.java:201) 
  at org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:289) 
  at org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:455) 
Caused by: java.lang.ClassCastException: org.apache.wicket.response.StringResponse cannot be cast to org.apache.wicket.protocol.http.WebResponse 
  at org.apache.wicket.protocol.http.WebRequestCycle.getWebResponse(WebRequestCycle.java:108) 
  at org.apache.wicket.markup.html.pages.ExceptionErrorPage.configureResponse(ExceptionErrorPage.java:107) 
  at org.apache.wicket.Page.onRender(Page.java:1419) 
  at org.apache.wicket.Component.render(Component.java:1941) 
  at org.apache.wicket.Page.renderPage(Page.java:927) 
  at org.apache.wicket.request.target.component.PageRequestTarget.respond(PageRequestTarget.java:64) 
  at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103) 
  at org.apache.wicket.RequestCycle.respond(RequestCycle.java:1046) 
  at org.apache.wicket.RequestCycle.step(RequestCycle.java:1112) 
  ... 19 more",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-04 22:42:24.794,,,no_permission,,,,,,,,,,,201943,,,Tue Sep 04 22:42:24 UTC 2007,,,,,,0|i0khgn:,117646,,,,,,,,"04/Sep/07 22:42;jbq;Fixed, thanks for reporting!  Note that MockWebApplication.postProcessRequestCycle() was also suffering of the same problem.",,,,,,,,,,,,,,,,,,,,,,,
If a form includes a DataTable with AjaxEditableLabels and the form should be refresh an exception occurs when a user switches between a changed label to another,WICKET-895,12376930,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,mailman,mailman,27/Aug/07 13:04,01/Sep/07 22:23,13/Mar/19 23:15,01/Sep/07 22:23,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"A normal Form includes a DataTable which includes some AjaxEditableLabels.
If the user changes the contens of a label and the label has an effect of the whole DataTable the complete from has to be refreshed. But if the user switches between one label to another, an exception occurs.

UseCase:
click on label and change the value
to leave the label click another labe in the DataTabel
--> an exception should occur","Win2000, Eclipse 3.2, Java 1.5, Firefox 2.0.6, ",,,,,,,,,,,,,,,,,,27/Aug/07 13:05;mailman;wicket_quick.zip;https://issues.apache.org/jira/secure/attachment/12364605/wicket_quick.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-27 17:16:06.792,,,no_permission,,,,,,,,,,,201915,,,Tue Aug 28 17:16:47 UTC 2007,,,,,,0|i0khjz:,117661,,,,,,,,"27/Aug/07 13:05;mailman;this is a maven project for eclipse.

wicket quickstart 1.3","27/Aug/07 17:16;knopp;Yeah, this thing is haunting us from ajax day one. ",28/Aug/07 17:16;knopp;This should be fixed in trunk. Can you please test and confirm?,,,,,,,,,,,,,,,,,,,,,
Automatic multi-window support drops URL fragment identifier,WICKET-889,12376875,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,spatula,spatula,25/Aug/07 15:57,01/Sep/07 17:57,13/Mar/19 23:15,01/Sep/07 17:57,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"If a bookmarkable link contains a fragment identifier (e.g. #foo) and automatic multi-window support is enabled, if that URL is opened in a new window or new tab, the fragment identifier is dropped.

For example, shift-clicking on this URL in Firefox to open it in a new window, or right clicking it and opening it in a new tab:

    http://beta.morons.org/tally-ho/article/read/7613/findMsg%3D159236#159236

Results in a redirect in the new tab/window to this URL:

    http://beta.morons.org/tally-ho/article/read/7613/findMsg%3D159236/wicket:pageMapName/wicket-0

The redirection is expected, but losing the fragment identifier (#159236) is not.  The redirect should have been to:

    http://beta.morons.org/tally-ho/article/read/7613/findMsg%3D159236/wicket:pageMapName/wicket-0#159236

(It may be relevant that in this case the fragment identifier was added using a Behavior attached to the BookmarkableLink.)

The workaround is to turn off automatic multi-window support.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201910,,,2007-08-25 15:57:43.0,,,,,,0|i0khlb:,117667,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PagingNavigationLink leaves long URL,WICKET-794,12374679,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,tmaeder,tmaeder,26/Jul/07 15:05,01/Sep/07 17:56,13/Mar/19 23:15,01/Sep/07 17:56,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-extensions,,,,0,,,,,,,,"1) I have a DefaultDataTable which shows a Number of Pages
2) I click on the navigation link for the second page (""2"")
3) I end up with a link like this:

http://localhost:8080/ffpro_web2/?wicket:interface=:0:wizard:form:view:instrumentSelection:searchResult:topToolbars:1:toolbar:span:navigator:navigation:1:pageLink::ILinkListener::

I would expect to end up on a new version of the previous page url.

The problem seems to be that PagingNavigationLink.onClick() does a setRedirect(false).

Similar actions like sorting seem to redirect to a different version of the same page.",Tomcat 5.5,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201822,,,2007-07-26 15:05:40.0,,,,,,0|i0khvb:,117712,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException accessing Session.get() from own Resource implementation,WICKET-878,12376738,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,tsinger,tsinger,23/Aug/07 19:17,01/Sep/07 11:46,13/Mar/19 23:15,01/Sep/07 11:46,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"I'm getting following assertion:

java.lang.IllegalStateException: you can only locate or create sessions in the context of a request cycle 
org.apache.wicket.Session.findOrCreate(Session.java:250) 
org.apache.wicket.Session.get(Session.java:279) 
com.syntevo.hpsmart.DownloadResource.getResourceStream(DownloadResource.java:18) 
org.apache.wicket.protocol.http.WicketFilter.getLastModified(WicketFilter.java:708) 
org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:122)

See this thread for details: http://www.nabble.com/DownloadLink-hanging-tf4299990.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-27 00:56:58.033,,,no_permission,,,,,,,,,,,201899,,,Thu Aug 30 09:21:54 UTC 2007,,,,,,0|i0khmv:,117674,,,,,,,,"27/Aug/07 00:56;knopp;I think we should create RequestCycle before asking ResourceReference for resource. And later, when we are creating the RequestCycle, we should check if there already is an instance attached to current thread.
Anyone has any objections?","27/Aug/07 09:06;knopp;I commited a possible fix, can you please try it if works for you?","27/Aug/07 09:12;tsinger;How do I build it without maven, e.g. with ANT?","27/Aug/07 09:19;ehillenius;Get the snapshot here: http://wicketstuff.org/maven/repository/org/apache/wicket/wicket/1.3.0-SNAPSHOT/

Automatically deployed from bamboo.","27/Aug/07 09:26;knopp;The snapshots will probably won't be recent enough so you'll have to wait couple of hours.
And you can't build wicket without maven, we don't support ant build anymore.","27/Aug/07 10:09;tsinger;OK, I've integrated the sources in the IDE and got it compiling. But due to a change in the QueryStringUrlCodingStrategy (?) no page except the first one works - I need to first solve that problem...","27/Aug/07 11:16;knopp;That's weird, the QueryStringUrlCodingStrategy seem to work fine for me. What exactly is the problem?","27/Aug/07 11:55;knopp;I recommend to update the snapshot again, as I've fixed a bug when request cycle was not cleaned up properly.","30/Aug/07 08:50;tsinger;Although I'm using wicket's trunk at rev. 570773, I'm still getting the above assertion.

Maybe I'm doing something obvious wrong:  I'm trying the invoke Session.get() in the doFilter() method of my Filter implementation.",30/Aug/07 09:21;ehillenius;You have to place the filter mapping of the wicket session filter before your own filter though. And make sure the paths match of course.,"30/Aug/07 09:21;knopp;The problem now is that your doFilter is invoked before WicketFilter.doFilter, thus the Wicket session thread local is not set yet. If you really need this, you have to use WicketSessionFilter and make sure that it is invoked before your filter. 

",,,,,,,,,,,,,
"Tree not ""redrawn"" when resetting root node",WICKET-914,12377281,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,rdleeper,rdleeper,31/Aug/07 22:52,01/Sep/07 11:19,13/Mar/19 23:15,01/Sep/07 11:19,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"I have a tree that I reset the root node when a user selects on another component (Component A).  However, the tree is not ""redrawn"" until I click on the tree (the previous tree contents are shown).

Have called Tree.invalidateAll() and
DefaultTreeModel.nodeStructureChanged(tnode )
DefaultTreeModel.nodeChanged( tnode )
DefaultTreeModel.reload() ",,,,,,,,,,,,,,,,,,,31/Aug/07 22:55;rdleeper;wicketTest-src.jar;https://issues.apache.org/jira/secure/attachment/12364928/wicketTest-src.jar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-01 11:18:31.636,,,no_permission,,,,,,,,,,,201928,,,Sat Sep 01 11:19:43 UTC 2007,,,,,,0|i0khhr:,117651,,,,,,,,"31/Aug/07 22:55;rdleeper;This is a complete eclipse project.  If this is too much, all one needs to do is reference test.tree.TestTreePage","01/Sep/07 11:18;knopp;Hi, thanks for quickstart. This was indeed a bug in Tree, where the root node change was not properly detected. It should be fixed now. I also added convenience updateTree() method, which takes care of looking up the AjaxRequestTarget during ajax response, so it can be called from a TreeStateListener handler.

Thus to ""fix"" your example, you'll have to:

change 
 bTree.invalidateAll() to  bTree.updateTree()  in your ATreeStateListener.nodeSelected();

remove
  nodeStructureChanged(root);
  nodeChanged(root); 
  from BTreeModel.setData, as the model takes care of it automatically.",01/Sep/07 11:19;knopp;Also naither the reload() method is necessary ,,,,,,,,,,,,,,,,,,,,,
It is impossible to inject primitives,WICKET-906,12377160,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,slonopotamus,slonopotamus,30/Aug/07 12:02,31/Aug/07 15:28,13/Mar/19 23:15,30/Aug/07 15:44,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-spring,,,,2,,,,,,,,subj,,,,,,,,,,,,,,,WICKET-603,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201923,,,2007-08-30 12:02:13.0,,,,,,0|i0khif:,117654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modification Watcher Task Log,WICKET-883,12376792,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,korbinian,korbinian,24/Aug/07 10:11,31/Aug/07 05:33,13/Mar/19 23:15,31/Aug/07 05:33,1.3.0-beta1,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"when deploying wicket in dev-mode you get repeating

13864 [ModificationWatcher Task] ERROR org.apache.wicket.util.resource.UrlResourceStream 's

usually per resource missing 1 per second - this is not a real error as wickets resources are not mandatory and should therefore not produce this error and flood the logfiles with it",General - environement here is Glassfish V2 RC4,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201904,,,2007-08-24 10:11:24.0,,,,,,0|i0khm7:,117671,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Markup hirarchy gets messed up when value of  attribute 'background' is a relative path,WICKET-871,12376581,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,funkattack,funkattack,22/Aug/07 12:11,31/Aug/07 03:58,13/Mar/19 23:15,31/Aug/07 03:58,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,,,,,0,,,,,,,,"$ svn diff -r HEAD
Index: src/main/java/org/apache/wicket/quickstart/Index.java
===================================================================
--- src/main/java/org/apache/wicket/quickstart/Index.java       (Revision 568574)
+++ src/main/java/org/apache/wicket/quickstart/Index.java       (Arbeitskopie)
@@ -17,6 +17,7 @@
 package org.apache.wicket.quickstart;
 
 import org.apache.wicket.PageParameters;
+import org.apache.wicket.markup.html.basic.Label;
 
 /**
  * Basic bookmarkable index page.
@@ -35,5 +36,6 @@
         */
        public Index(final PageParameters parameters)
        {
+           this.add(new Label(""myname"", ""Whishing that this is not a bug.""));
        }
 }
Index: src/main/java/org/apache/wicket/quickstart/Index.html
===================================================================
--- src/main/java/org/apache/wicket/quickstart/Index.html       (Revision 568574)
+++ src/main/java/org/apache/wicket/quickstart/Index.html       (Arbeitskopie)
@@ -5,6 +5,9 @@
     <body>
         <h1>QuickStart</h1>
         <p>This is your first Wicket application.</p>
+       <span background=""images/bg.jpg"">
+               <p wicket:id=""myname"">Hello</p>
+       </span>
     </body>
 </html>
 
",,,,,,,,,,,,,,,,,,,30/Aug/07 22:31;funkattack;RelativePathPrefixHandler.patch;https://issues.apache.org/jira/secure/attachment/12364853/RelativePathPrefixHandler.patch,30/Aug/07 22:20;funkattack;RelativePathPrefixHandlerTest.patch;https://issues.apache.org/jira/secure/attachment/12364852/RelativePathPrefixHandlerTest.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-31 03:58:32.439,,,no_permission,,,,,,,,,,,201893,,,Fri Aug 31 03:58:32 UTC 2007,,,,,,0|i0khnr:,117678,,,,,,,,30/Aug/07 22:20;funkattack;The attachment contains a testcase for prooving the bug.,"30/Aug/07 22:31;funkattack;The attached file RelativePathPrefixHandler.patch contains the solution I'd propose.
(plus some minor edditing Eclipse did)
But be warned the solution might not follow the DRY principle close enough, as the introduced
private static class TransparentWebMarkupContainer
already exists like that in:
org.apache.wicket.markup.resolver.MarkupInheritanceResolver.TransparentWebMarkupContainer","31/Aug/07 03:58;ivaynberg;doh, i fixed this earlier today but didnt notice it was already in jira",,,,,,,,,,,,,,,,,,,,,
AbstractChoice not taking into account html escape settings,WICKET-881,12376753,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,memeplex,memeplex,23/Aug/07 22:34,31/Aug/07 03:54,13/Mar/19 23:15,31/Aug/07 03:54,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"The setEscapeModelStrings setting is just ignored. Here is the suspicious code (~ line 390):

String display = displayValue;
[...]
CharSequence escaped = Strings.escapeMarkup(display, false, true);
buffer.append(escaped);
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201902,,,2007-08-23 22:34:28.0,,,,,,0|i0khmn:,117673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Injecting a reference to a bean which is of a final class fails,WICKET-603,12370519,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,wensveen,wensveen,30/May/07 10:37,30/Aug/07 12:02,13/Mar/19 23:15,11/Jun/07 13:43,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-spring,,,,0,,,,,,,,"When using the @SpringBean annotation, injecting a bean that is of a final class such as String, fails. This is because LazyInitProxyFactory tries to create a subclass of the bean which will obviously fail when that class is marked final.

A possible fix would be to test the modifiers of the injected field for Modifier.isFinal(..), when this is true don't create a proxy but return the object directly.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 22:15:06.643,,,no_permission,,,,,,,,,,,201643,,,Mon Jul 02 08:17:50 UTC 2007,,,,,,0|i0kien:,117799,,,,,,,,"10/Jun/07 22:15;almaw;If they're not careful, people can obviously make a final class that is ApplicationContextAware, and we'll end up serializing the entire context, which is bad.

The use of Strings as Beans is very odd - taking dependency injection a bit too far, IMHO. If you have a good use case, I guess we could special-case String. You could always have a factory bean which returned the String, though. I think that would be proxyable.",11/Jun/07 13:43;almaw;Fixed for Strings only in r546147.,"02/Jul/07 08:17;wensveen;Thanks for fixing this. I sometimes use spring to inject configuration values too, which might be mis-use of spring, but works quite well.

Special-casing String is fine by me, as that is the only case I ever use :)",,,,,,,,,,,,,,,,,,,,,
[nsIXMLHttpRequest.open] nsresult: 0x80004005 after calling behavior from iframe,WICKET-905,12377131,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,memeplex,memeplex,29/Aug/07 23:34,30/Aug/07 01:05,13/Mar/19 23:15,30/Aug/07 01:05,1.3.0-beta3,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"Below is a description copy pasted from the irc channel. Please take into account that you must mount the attached example at a depth-2 path (as <context>/<app>/iframe/wicket) or otherwise fix the url from hideBehavior.getCallback().replace(""../"", """") (line 60 of WicketAjaxPage, I don't know of a better way of doing this, adding the behavior to the iframe doesn't work either).

>igor, do you remember that a couple of days ago i asked you about calling an ajax behavior from an iframe?
>i managed to do it using a vanilla XmlHttpRequest to reenter wicket through the behavior and then parsing the wicket response ""by hand""
> but i tried a lot of combinations to avoid that hack to, the closer i got was patching the behavior url a bit, to get it relative to the main page, not the iframe, and spitting out a bit of javascript on the top window to be called by the iframe
> the behavior is executed and the ajax reponse is correctly handled, but then every other ajax request fail
> with this: uncaught exception: [Exception... ""Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIXMLHttpRequest.open]"" nsresult: ""0x80004005 (NS_ERROR_FAILURE)"" location: ""JS frame :: javascript: eval(__firebugTemp__); :: anonymous :: line 1"" data: no]
> I have a quickstart for this, do you think it's a bug in wicket?",,,,,,,,,,,,,,,,,,,29/Aug/07 23:35;memeplex;iframe.tgz;https://issues.apache.org/jira/secure/attachment/12364800/iframe.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201922,,,Thu Aug 30 01:05:45 UTC 2007,,,,,,0|i0khin:,117655,,,,,,,,"29/Aug/07 23:43;memeplex;One more remark: replacing the onHide behavior callback with a custom handler that does a GET httpxmlrequest or prototype ajax.request to the same -fixed- url, and then parses the response in an adhoc way, lets me do succesive ajax requests without raising the 0x80004005 error. It seems to be something involving firefox and wicket management of ajax requests, maybe it's related to the abort call that's done on the transport, dunno.","30/Aug/07 01:05;memeplex;I solved this wrapping the behavior js call inside  window.setTimeout(function() {  }, 0); so that the context *really* is the top window, as matej wisely pointed out. Later I will post a howto into the wiki showing how to upload a file from a different iframe and call a behavior on the top frame to get rid of the iframe or something afterwards.",,,,,,,,,,,,,,,,,,,,,,
WicketSessionFilter doesn't work with 1.3,WICKET-897,12376975,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,28/Aug/07 07:11,28/Aug/07 07:15,13/Mar/19 23:15,28/Aug/07 07:15,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"The unfortunate thing about not eating our own dogfood this case (though I guess a test would have helped as well) is that it turns out that WicketSessionFilter was broken all along for Wicket 1.3. The reason for that is because the application key, which is used for determining the key used for storing the session object in the HttpSession, changed from being based on the servlet path to the filter name.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201917,,,Tue Aug 28 07:15:53 UTC 2007,,,,,,0|i0khjj:,117659,,,,,,,,28/Aug/07 07:15;ehillenius;Fixed for 1.3. Now uses init param filterName instead of servletPath. Added an example in the wicket-examples project of a servlet that uses the session of the form input example.,,,,,,,,,,,,,,,,,,,,,,,
RefreshingView should call super.onBeforeRender after it refreshed it's items.,WICKET-882,12376754,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ehillenius,ehillenius,23/Aug/07 22:53,28/Aug/07 05:27,13/Mar/19 23:15,28/Aug/07 05:27,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"RefreshingView should call super.onBeforeRender after it refreshed it's items.

Right now, it first visits all it's children, even if those children will be removed right after the call, and it misses any children that got added directly.

I found out about this because of the recent change where beforeRender calls isVisible, and I had a component in a RefreshingView that had an implementation of isVisible that depended on it's model value, and another component that removes an item in the datamodel that backs the RefreshingView. When an item was removed, beforeRender was still executed on the child with the now stale reference to the data model, resulting in an exception ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-24 01:10:28.798,,,no_permission,,,,,,,,,,,201903,,,Sun Aug 26 16:42:43 UTC 2007,,,,,,0|i0khmf:,117672,,,,,,,,"23/Aug/07 23:28;ehillenius;Same thing goes for SelectOptions, Loop and possibly AjaxEditableLabel and ModalWindow. It is probably the safer default anyway.","24/Aug/07 01:10;ivaynberg;ive made the change. matej and i had already tweaked onbeforerender for this usecase and fixed it in listview, just forgot to go through the rest of the framework.

i am thinking about adding abstract void abstractrepeater.updateitems() and onbeforerender() { updateitems(); super.onbeforerender(); } just to make this more pragmatic. any objections?",24/Aug/07 01:34;ehillenius;What about SelectOptions?,"24/Aug/07 02:14;ivaynberg;select options extends repeating view which extends abstractrepeater, so it should be good",26/Aug/07 16:42;knopp;No objections from me.,,,,,,,,,,,,,,,,,,,
Unable to find InlineFrames when inside ListViews,WICKET-887,12376870,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,memeplex,memeplex,25/Aug/07 12:16,27/Aug/07 16:43,13/Mar/19 23:15,27/Aug/07 06:34,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,There is a simple example attached. Even if the list is reusing items (and even with a RefreshingView with reuseifmodelequal strategy) the problem persists.,,,,,,,,,,,,WICKET-888,,,,,,,25/Aug/07 12:17;memeplex;iframes.tgz;https://issues.apache.org/jira/secure/attachment/12364553/iframes.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-27 06:34:22.659,,,no_permission,,,,,,,,,,,201908,,,Mon Aug 27 16:43:05 UTC 2007,,,,,,0|i0khlj:,117668,,,,,,,,25/Aug/07 12:40;memeplex;See also issue 888.,"25/Aug/07 17:23;memeplex;Don't know if this helps, but if you compare the links generated for Links (which do work) against the ones for InlineFrames, at the same level (an item of a list), you can see that they are pretty different.

<div wicket:id=""iframes"">
  <iframe src=""iframes/wicket:interface/%3A2%3Aiframes%3A0%3Aiframe%3A%3AILinkListener%3A%3A/"" wicket:id=""iframe""></iframe>
  <a href=""?wicket:interface=:2:iframes:0:iframeLink::ILinkListener::"" wicket:id=""iframeLink"">Iframe Link</a>
</div>

<div wicket:id=""iframes"">
  <iframe src=""iframes/wicket:interface/%3A2%3Aiframes%3A1%3Aiframe%3A%3AILinkListener%3A%3A/"" wicket:id=""iframe""></iframe>
  <a href=""?wicket:interface=:2:iframes:1:iframeLink::ILinkListener::"" wicket:id=""iframeLink"">Iframe Link</a>
</div>

[...]","25/Aug/07 17:48;memeplex;Debugging a bit and comparing with Link sources, I found out that the crucial difference is in the conditional ""listener != IRedirectListener.INTERFACE && component.isStateless() && page.isBookmarkable()""  at RequestCycle:747. Specifically, isStateless() returns true for InlineFrame but false for Link.

Overriding InlineFrame's getStatelessHint() as:

    protected boolean getStatelessHint() {
        return false;
    }

will fix the current issue, but as I don't know the exacts semantics of this it could break anything else.
","27/Aug/07 06:34;ivaynberg;fixed

on a related note consider this change to your code as you are pretty much abusing the idea of IPageLink by creating page instances eagerly:

	private void addIFrame(MarkupContainer parent)
	{
		// final IFramePage iframe = new IFramePage();
		parent.add(new InlineFrame(""iframe"", getPageMap(), new IPageLink()
		{
			public Page getPage()
			{
				// return iframe;
				return new IFramePage();
			}

			public Class<?> getPageIdentity()
			{
				// return iframe.getClass();
				return IFramePage.class;
			}
		}));
	}

or simply new InlineFrame(""iframe"", getPageMap(), IFramePage.class);","27/Aug/07 15:35;memeplex;Answering your note, from the outer page I need to grab a reference to the
pages that are inside the iframes, and it doesn't seem to be possible to get
them later, for example as a property of the iframe. Maybe a getter as
InlineFrame.getPage() would help here.

","27/Aug/07 16:43;memeplex;Ah, and this didn't come to my mid when answering a moment ago, but I must have said that my code was entirely borrowed from the buggy InlineFrame constructor (the one that takes a page, recall 886), so maybe that constructor should be removed at all. ",,,,,,,,,,,,,,,,,,
Relative urls are broken if there is a + in parameter,WICKET-893,12376924,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,27/Aug/07 11:14,27/Aug/07 11:15,13/Mar/19 23:15,27/Aug/07 11:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201913,,,Mon Aug 27 11:15:39 UTC 2007,,,,,,0|i0khkf:,117663,,,,,,,,27/Aug/07 11:15;knopp;Added missing decoding URLDecoder.decode call on getServeltPath() inside ServletWebRequest.getRelativePathPrefixToContextRoot(),,,,,,,,,,,,,,,,,,,,,,,
InlineFrame with null PageMap raises exception,WICKET-886,12376869,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,memeplex,memeplex,25/Aug/07 11:42,27/Aug/07 05:59,13/Mar/19 23:15,27/Aug/07 05:59,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"This constructor

	public InlineFrame(final String id, final Page page)
	{
		this(id, null, new IPageLink()

is calling this other

	public InlineFrame(final String id, final IPageMap pageMap, IPageLink pageLink)
	{
		super(id);

		this.pageMapName = pageMap.getName();

which of course raises a null pointer exception at 'pageMap.getName();'",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201907,,,Sat Aug 25 17:53:34 UTC 2007,,,,,,0|i0khlr:,117669,,,,,,,,"25/Aug/07 17:53;memeplex;I guess the thing to do is calling the three-parameters constructor with page.getPageMap() as the page map:

this(id, page.getPageMap(), new IPageLink()",,,,,,,,,,,,,,,,,,,,,,,
HttpServletResponse.encodeRedirectURL() missing in WicketFilter,WICKET-864,12376399,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,rfoerthe,rfoerthe,20/Aug/07 11:29,26/Aug/07 17:22,13/Mar/19 23:15,26/Aug/07 17:22,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"In class org.apache.wicket.protocol.http.WicketFilter in method doGet a redirect URL is not encoded with HttpServletResponse.encodeRedirectUrl():  

168	    // Special-case for home page - we redirect to add a trailing slash.
		if (relativePath.length() == 0
				&& !Strings.stripJSessionId(servletRequest.getRequestURI()).endsWith(""/""))
		{
			final String redirectUrl = servletRequest.getRequestURI() + ""/"";
-------->	   servletResponse.sendRedirect(redirectUrl);
			return;
		}

From Wicket's perspective this seems to be not necessary here to support cookie-less mode. But notice that an application may depend on a session outside the wicket scope e.g. by including a ServletFilter in front of  WicketFilter, which handles data in session scope.

","Tomcat 5.5.23, OS X",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 14:39:10.881,,,no_permission,,,,,,,,,,,201886,,,Tue Aug 21 14:39:10 UTC 2007,,,,,,0|i0kho7:,117680,,,,,,,,21/Aug/07 14:39;jbq;Looks reasonable to do for the next release,,,,,,,,,,,,,,,,,,,,,,,
replacing tr using ajax does not work in safari,WICKET-572,12369419,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,dashorst,dashorst,15/May/07 17:45,26/Aug/07 16:13,13/Mar/19 23:15,26/Aug/07 16:13,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,Replacing a tr element using ajax does not work in safari (works in firefox as advertised!),,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 21:35:17.938,,,no_permission,,,,,,,,,,,201617,,,Sun Aug 26 16:13:31 UTC 2007,,,,,,0|i0kihj:,117812,,,,,,,,10/Jun/07 21:35;knopp;Works for me. Can you submit a testcase?,20/Aug/07 20:37;dashorst;Next release,"26/Aug/07 16:13;knopp;It's fixed. If anyone thinks otherwise, please submit a testcase.",,,,,,,,,,,,,,,,,,,,,
Modal window causes session expires,WICKET-890,12376893,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,26/Aug/07 16:11,26/Aug/07 16:12,13/Mar/19 23:15,26/Aug/07 16:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"Each modal window uses 4 different cookies to remember it's position, which causes the session cookie to be removed from browsers.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201911,,,Sun Aug 26 16:12:42 UTC 2007,,,,,,0|i0khl3:,117666,,,,,,,,26/Aug/07 16:12;knopp;Modal window position for all modal windows is stored as one cookie.,,,,,,,,,,,,,,,,,,,,,,,
modal window close button does not cancel the event after closing the window,WICKET-640,12371473,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,gereedy,gereedy,12/Jun/07 15:43,26/Aug/07 16:08,13/Mar/19 23:15,26/Aug/07 16:08,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"When there is no CloseButtonCallback set on a ModalWindow instance the close button does not cancel the click event which causes the link of the close button to be followed.  This is normally not such a problem since the link url is ""#"" which typically doesn't do anything.  However, if a base URL is set for the page using the <base> tag this link will navigate away from the current page to the URL defined as the base URL.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-12 16:52:40.898,,,no_permission,,,,,,,,,,,201675,,,Mon Aug 20 20:37:39 UTC 2007,,,,,,0|i0kia7:,117779,,,,,,,,"12/Jun/07 16:52;almaw;Matej - up to you to see if you want this fixed in 1.2.7, but figure it should go in for 1.3.0-rc1.","15/Jul/07 16:57;knopp;Should be fixed, can anyone test it?
",20/Aug/07 20:37;dashorst;Next release,,,,,,,,,,,,,,,,,,,,,
Reloading servlet doing way too much reloading,WICKET-874,12376659,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,memeplex,memeplex,23/Aug/07 01:57,23/Aug/07 19:16,13/Mar/19 23:15,23/Aug/07 08:39,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,As our project gets bigger in terms of number of classes the reloading servlet is not only becoming slower (it seems as it's reloading a lot of classes after each tiny change) but often incurring into sort of neverending reloading loops. ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-23 08:39:27.505,,,no_permission,,,,,,,,,,,201896,,,Thu Aug 23 19:16:30 UTC 2007,,,,,,0|i0khnb:,117676,,,,,,,,"23/Aug/07 08:39;jbq;Fixed, thanks a lot for reporting this.

See http://svn.apache.org/viewvc?view=rev&revision=568506","23/Aug/07 19:16;memeplex;Thanks a bunch JB, now it seems to go with flying colors!

",,,,,,,,,,,,,,,,,,,,,,
Typo in org.apache.wicket.markup.html.tree.res.tree.js causes AJAX tree node addition failures,WICKET-872,12376610,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,barrettas,barrettas,22/Aug/07 17:01,23/Aug/07 13:57,13/Mar/19 23:15,23/Aug/07 13:57,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"There is a typo in the tree javascript which can sometimes cause node addition failures. Here is the patch:

Index: tree.js
===================================================================
--- tree.js	(revision 568693)
+++ tree.js	(working copy)
@@ -46,7 +46,7 @@
 
 Wicket.Tree.createElement = function(elementId, afterId) {
 	var existing = Wicket.$(elementId);
-	if (typeof(existing) != ""undefined"" && exiting != null) {
+	if (typeof(existing) != ""undefined"" && existing != null) {
 		Wicket.Tree.askForReload();
 	}",wicket 1.3.0-beta1 and 2,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-23 13:57:40.362,,,no_permission,,,,,,,,,,,201894,,,Thu Aug 23 13:57:40 UTC 2007,,,,,,0|i0khnj:,117677,,,,,,,,23/Aug/07 13:57;almaw;Good spot. Applied to trunk. Thanks.,,,,,,,,,,,,,,,,,,,,,,,
MockHttpServletRequest.addFile does not work with binary files,WICKET-807,12375074,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,mperham,mperham,31/Jul/07 21:09,21/Aug/07 16:30,13/Mar/19 23:15,21/Aug/07 16:30,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"http://www.nabble.com/Uploading-binary-files-via-MockHttpServletRequest-tf4192893.html#a11934991

As stated in the thread, I can upload text (xml) files just fine but binary data does not work.  I suspect there are some encoding issues which cause the binary data to be corrupted.  buildRequest() looks like it is corrupting the binary data when it pushes the data into String format.  I don't think this is right - you should treat the request as a byte array, not a String.  I think the MIME or HTTP RFCs might have more info on how binary data is supposed to be packaged within an HTTP request.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-01 09:07:02.714,,,no_permission,,,,,,,,,,,201834,,,Tue Aug 21 16:30:21 UTC 2007,,,,,,0|i0khtz:,117706,,,,,,,,"01/Aug/07 09:07;jbq;Hi Mike, would you mind to submit a complement to Wicket's unit tests (as a patch if possible)?  That would help to address the issue in a timely manner.  See for example org.apache.wicket.markup.html.form.upload.FileUploadFieldTest.  Thanks in advance!",21/Aug/07 14:54;jbq;Looks reasonable to do for the next release,"21/Aug/07 16:30;jbq;Fixed, thanks for reporting!",,,,,,,,,,,,,,,,,,,,,
WicketTester could not handle Multipart form without upload,WICKET-728,12373219,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,ingramchen,ingramchen,07/Jul/07 05:59,21/Aug/07 16:06,13/Mar/19 23:15,21/Aug/07 16:06,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,,,,,0,,,,,,,,"When testing the form that contains FileUploadField without upload, wicketTester throw exception 
with message: ""ServletRequest does not contain multipart content""

// ex:
public class FormTesterTest extends WicketTestCase
{
	/**
	 * Test that formTester deal with Multipart form correctly when no actual
	 * upload
	 */
	public void testSubmitWithoutUploadFile()
	{
		tester.startPage(MockFormFileUploadPage.class);
		MockFormFileUploadPage page = (MockFormFileUploadPage)tester.getLastRenderedPage();

		Session.get().setLocale(Locale.US);

		FormTester formTester = tester.newFormTester(""form"");
		// without file upload
		formTester.submit();
		assertNull(page.getFileUpload());

		tester.assertErrorMessages(new String[] { ""Field 'file' is required."" });
	}
}

The cause is that Form contains FileUploadField is considered as multipart. But MockHttpServletRequest only generate Multipart contentType and contentLength when there is any upload file added via formTester.setFile(...). Thus without any file upload while testing, MultipartServletWebRequest throw exception.

To solve this, I try to introduce a flag useMultiPartContentType in MockHttpServletRequest, so FormTester can change MockHttpServletRequest to generate correct contentType.

attachment is patch

",linux 2.6 jdk6,,,,,,,,,,,,,,,,,,07/Jul/07 06:00;ingramchen;upload-patch.txt;https://issues.apache.org/jira/secure/attachment/12361345/upload-patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-21 15:14:08.512,,,no_permission,,,,,,,,,,,201760,,,Tue Aug 21 16:06:50 UTC 2007,,,,,,0|i0ki2v:,117746,,,,,,,,07/Jul/07 06:00;ingramchen;patch to solve issue,21/Aug/07 15:14;jbq;Looks reasonable to do for the next release,"21/Aug/07 16:06;jbq;Fixed, thanks for your contribution!",,,,,,,,,,,,,,,,,,,,,
add dependency slf4j-log4j12 to wicket-quickstart,WICKET-856,12376234,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,funkattack,funkattack,17/Aug/07 12:25,21/Aug/07 14:46,13/Mar/19 23:15,21/Aug/07 14:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-quickstart,,,,0,,,,,,,,"Quickstart doesn't carry a dependency to any slf4j implementation. That's the reason why

mvn jetty:run

doesn't work.
If the dependecy were present the quickstart project could be started right away after svn checkout.


 svn diff -r HEAD
Index: pom.xml
===================================================================
--- pom.xml     (Revision 567028)
+++ pom.xml     (Arbeitskopie)
@@ -54,6 +54,10 @@
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-management</artifactId>
                </dependency>
+                <dependency>
+                        <groupId>org.slf4j</groupId>
+                        <artifactId>slf4j-log4j12</artifactId>
+                </dependency>
        </dependencies>
        <build>
                <plugins>
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201879,,,2007-08-17 12:25:33.0,,,,,,0|i0khp3:,117684,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServletWebRequest.getRelativePathPrefixToContextRoot generates wrong relative path if current page has URL-encoding in the params.,WICKET-748,12373551,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,cdeal,cdeal,11/Jul/07 20:16,21/Aug/07 10:16,13/Mar/19 23:15,02/Aug/07 16:28,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Actually, this is against 1.3.0-SNAPSHOT revision: 554607

I have been trying to find a very annoying, seeminly sporadic, glitch where my images that are relative to the context wouldn't ""find"" the image file.  Looking at the source, they would have 11 sets of "".."" versus the 5 sets that the other resources would have.   Here is how I was trying to display the image:

<img src=""images/find.png""/>

 I was finally able to produce a scenario in a quickstart to prove the problem exists.  It seems that getPath() and getServletPath() don't work the same way, in that I mean, getPath() had the '{"" encoded as ""%7B"" whereas getServletPath() was not encoded.
Therefore, this test fails and the path is not properly handled!
    if (servletPath.endsWith(path))
",,,,,,,,,,,,,,,,,,,11/Jul/07 20:19;cdeal;quickstart-relativeurl.zip;https://issues.apache.org/jira/secure/attachment/12361611/quickstart-relativeurl.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-02 16:28:00.158,,,no_permission,,,,,,,,,,,201778,,,Thu Aug 02 16:28:00 UTC 2007,,,,,,0|i0khzr:,117732,,,,,,,,"11/Jul/07 20:19;cdeal;This quickstart proves the problem.   (does not include the lib folder)

Notice the image is present;
Click ""Goto Index2""

Notice the image is present;
Click ""Goto Index""

Notice the image is *NOT* present;

","02/Aug/07 16:28;almaw;This only happens for things with URL-encoded entities, but I guess that's quite a few things, so good catch.

Fixed in r562171.",,,,,,,,,,,,,,,,,,,,,,
DateField's/ DateTimeField's factory methods should pass in ids,WICKET-859,12376288,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,18/Aug/07 01:44,18/Aug/07 01:45,13/Mar/19 23:15,18/Aug/07 01:45,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-datetime,,,,0,,,,,,,,"A very stupid mistake, but factory method:

protected DateTextField newDateTextField(PropertyModel dateFieldModel)

should of course pass in the id that the child component should use:

protected DateTextField newDateTextField(String id, PropertyModel dateFieldModel)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201882,,,2007-08-18 01:44:45.0,,,,,,0|i0khov:,117683,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't visit components in a ListView before they're rendered.,WICKET-627,12371158,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,almaw,almaw,07/Jun/07 17:52,16/Aug/07 11:45,13/Mar/19 23:15,15/Aug/07 19:01,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"I'm trying to create a Form subclass which automatically adds a Behaviour to all of its FormComponents using a visitor. The only place to do this is in the Form's onBeforeRender() method. This works fine, until you put your FormComponents into a ListView, at which point it doesn't work, because the ListView children are yet to be created.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-08 17:52:24.892,,,no_permission,,,,,,,,,,,42039,,,Thu Aug 16 11:45:21 UTC 2007,,,,,,0|i0kibb:,117784,,,,,,,,"08/Jun/07 15:52;almaw;We tried making onBeforeRenderChildren protected, but that doesn't help, as I'm still wanting to add a behaviour somewhere, and by the time I run the visitor from onBRC(), they all have their RENDER flag set to TRUE, so I can't add a behaviour to them.","08/Jun/07 17:52;jcompagner;hmm so this just can't be solved that way then
what we could do is set the rendering flag a bit later??
in page.renderPage() itself? with a visitor?
So that first onBefore is called
and if that works completely 
then the rendering flag is set on all.
(this also removes the nasty try{} finally around the beforeRender() call to set the flags right again.",10/Jun/07 19:45;almaw;Hmmm. We'd still need to have this as a protected method in addition to the later RENDER flag set. And walking the entire component tree yet again isn't ideal from a performance perspective. :-( We evidently need to have more of a think about this.,"14/Jun/07 18:54;almaw;I still can't work out how to do this. Igor suggested moving the call to Component#onBeforeRenderChildren() inside Component#onBeforeRender(), but if I do that, I get an NPE in the ListView#renderItem() method even for basic code.","24/Jul/07 21:15;knopp;I'm not sure how calling onBeforeRenderChildren from onBeforeRender could help here, nor i'm i aware of all the sideeffect it could possibly bring. Imho the problem is that even if you do it, you'll only have the children components on the nearest level initialized (not the entire hierarchy). To be able to visit the components and add behaviors to all of them, we would imho need to make the initialization two step. (Which would need an extra traversal).

Also if we do this, then we would basically allow a child component to add a component to parent component in onBeforeRender. What would call beforeRender on the new component? ","25/Jul/07 10:22;almaw;Yeah, it doesn't really help. I currently don't want to modify the hierarchy, just add behaviours. Does that help any? Or should we be thinking about how to do this in the more general case?

Maybe we need some kind of while loop, so we keep calling things until the hierarchy has settled?

This is biting us somewhat, as it's a regression bug - this used to work just fine in old pre-attach-refactor snapshots. We're missing our nice required stars on our forms at the moment. ;-(","25/Jul/07 13:08;knopp;I've commited something that should allow hierarchy change in onBeforeRender (even modifying the parent components). Also it allows you to traverse listview children, but you must call super.onBeforeRender() prior doing that (component.onBeforeRender triggers calling beforeRender on children now).",10/Aug/07 20:38;ivaynberg;check if this works for you now,"15/Aug/07 19:01;ivaynberg;we believe this is fixed, almaw feel free to reopen if it doesnt work for you. i dont want to let this hang as open though.","16/Aug/07 11:45;almaw;Yes, I've now tested this and it looks good.

Thanks.",,,,,,,,,,,,,,
Odd behvavior with PasswordTextField evaluation,WICKET-322,12363559,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,mindhaq,mindhaq,24/Feb/07 10:12,15/Aug/07 21:14,13/Mar/19 23:15,15/Aug/07 21:14,1.2.5,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Given a sign-up form with a password field like this:

PasswordTextField passwordField = new PasswordTextField(""password"");
passwordField.setRequired(true);
passwordField.add(StringValidator.lengthBetween(5, 32));

I observe a rather odd behavior:

1) enter 5 characters, submit. Other fields in the form have errors, so the form is redisplayed.

2) delete a character, submit. Error is displayed, but the value of the field is what I entered in step 1.

3) result: submitting again just works, which shouldn't be the case with any form displaying an error.

This is especially irritating if you do the form validation via Ajax after onblur, so it would be nice if this could be changed somehow.

See also here:

http://www.nabble.com/PasswordTextField.setResetPassword-tf1399513.html#a3764720","Jetty 6, JDK 1.5",,,,,,,,,,,,,,,,,,25/Feb/07 23:24;mindhaq;PasswordTextField.java;https://issues.apache.org/jira/secure/attachment/12352014/PasswordTextField.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-26 08:33:35.841,,,no_permission,,,,,,,,,,,201391,,,Wed Aug 15 21:14:21 UTC 2007,,,,,,0|i0kj4v:,117917,,,,,,,,"25/Feb/07 23:24;mindhaq;I applied the change as was described on the mailinglist by Johan, and this really seems to solve the issue.

But I'm not sure if this breaks something else then...","26/Feb/07 08:33;jcompagner;i think the line should be:

tag.put(""value"", getResetPassword() ? """" : getValue());

Because if you just do getInput() you never have the model object in it.

","26/Feb/07 09:33;mindhaq;I just tried this, and it leads to the following:

* Unsubmitted form, model delivers an empty string: value of HTML-field is ""XPauhDrxdC0="" 
Bad

* Unsubmitted form, model delivers a string: value of HTML-field is ""tasAnMtv/WY="" 
OK

* Submitted form with errors: value of HTML field is whatever I entered
OK

* Submitted form without errors: model is changed, value of HTML field is encrypted again (""8rqdMHt7PbEHV+2ETU35/Q=="")
Bad if I didn't change anything

Now again with getInput():

* Unsubmitted form, model delivers an empty string: value of HTML-field is empty. 
Ok

* Unsubmitted form, model delivers a string: value of HTML-field is empty. 
Depends, I'd say ok

* Submitted form with errors: value of HTML field is whatever I entered
Ok

* Submitted form without errors: model is changed, value of HTML field is whatever I entered
Ok

And the same with the current getModelObjectAsString():

* Unsubmitted form, model delivers an empty string: value of HTML-field is empty. 
Ok

* Unsubmitted form, model delivers a string: value of HTML-field is exactly what is in the model. 
Depends, I'd say bad

* Submitted form with errors: value of HTML field is whatever is in the model - overwriting anything typed in.
Bad

* Submitted form without errors: model is changed, value of HTML field is whatever I entered
Ok

I'd be fine with having an encrypted value in the HTML when the value is coming from the model - except when it's an empty string. But event then: if this encrypted value is submitted, of course it's encrypted again, and my model value gets changed although nothing was changed in the form.

So I think getInput() is alright, as this is only about the handling of the resetPassword property anyway. PasswordTextField probably never should display the vmodel object anyway, no matter if encrypted or not.
Changing a password should work different. If one wanted it to be really editable (e.g. changing a single character, not typing it in again fully), a normal textfield would be better.

","02/Jun/07 17:35;mindhaq;I switched to Wicket 1.3.0 from trunk, and I still think that getInput() should be used. The following works very well for me:

	protected final void onComponentTag(final ComponentTag tag)
	{
		super.onComponentTag(tag);
//		tag.put(""value"", getResetPassword() ? """" : getModelObjectAsString());
		tag.put(""value"", getResetPassword() ? """" : getInput());
	}
","15/Aug/07 21:14;ivaynberg;i removed the encryption as it didnt always work and cause weird problems, so this should now also be fixed",,,,,,,,,,,,,,,,,,,
AjaxFormChoiceComponentUpdatingBehavior not working,WICKET-838,12375831,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,memeplex,memeplex,12/Aug/07 00:50,15/Aug/07 21:13,13/Mar/19 23:15,15/Aug/07 21:02,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"I think this is because of its own component field that is hiding that of AbstractAjaxBehavior. Try to run the attached example and you will get:

WicketMessage: Exception in rendering component: [MarkupContainer [Component id = _header_, page = com.livra.web.user.RegistrationPage, path = 12:_header_.HtmlHeaderContainer, isVisible = true, isVersioned = true]]

Root cause:

java.lang.NullPointerException
at org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior.renderHead(AjaxFormChoiceComponentUpdatingBehavior.java:71)
at org.apache.wicket.Component.renderHead(Component.java:2266)
at org.apache.wicket.markup.html.internal.HtmlHeaderContainer$1.component(HtmlHeaderContainer.java:209)
at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:843)
at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:858)
at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:883)",,,,,,,,,,,,,,,,,,,15/Aug/07 20:47;faceman;AFCCUB.patch;https://issues.apache.org/jira/secure/attachment/12363886/AFCCUB.patch,12/Aug/07 00:51;memeplex;ChoiceBehaviorPage.html;https://issues.apache.org/jira/secure/attachment/12363662/ChoiceBehaviorPage.html,12/Aug/07 00:51;memeplex;ChoiceBehaviorPage.java;https://issues.apache.org/jira/secure/attachment/12363663/ChoiceBehaviorPage.java,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-08-15 19:48:07.356,,,no_permission,,,,,,,,,,,201861,,,Wed Aug 15 21:13:25 UTC 2007,,,,,,0|i0khqn:,117691,,,,,,,,"15/Aug/07 19:48;faceman;original comment: patch removes ""protected Component component"" and uses ""getComponent().getMarkupId()"" instead of ""component.getMarkupId()"".

updated the patch because there are some more issues with AjaxFormChoiceComponentUpdatingBehavior:

RadioGroup and CheckGroup have .setRenderBodyOnly(true) in their constructor, so the javascript function ""attachChoiceHandlers"" fails with an error because ""document.getElementById(markupid)"" can't find the dom element since only the body of the (Radio/Check)Group is rendered.
explicitly calling setRenderBodyOnly(false) doesn't work either, because AFCCUB calls updateModel() in line 159, which fails if the constructor  RadioGroup(String id) is used, as the component's field ""model"" is null.

","15/Aug/07 20:47;faceman;patch adds a check in onBind() whether the component is a (Radio|Check)Group, calls setRenderBodyOnly(false) on the component and sets a new Model(null) if the component's model is null.","15/Aug/07 21:13;faceman;the provided example contains one conceptual mistake:
the RadioGroup doesn't have a model assigned, which makes no sense. if you don't have a model for a formcomponent, why do you have the formcomponent at all?

igor applied part of the fix (only the call to setRenderBodyOnly(false) and the removal of the protected field ""component""), as setting the a default model doesn't make any sense either.",,,,,,,,,,,,,,,,,,,,,
Password field gets reset on setResetPassword == false even after successful validation,WICKET-447,12366624,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,pete,pete,05/Apr/07 08:29,15/Aug/07 20:52,13/Mar/19 23:15,15/Aug/07 20:52,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"I guess I found an issue when implementing a 'change password' dialog with these input fields (for simplicity in this example the [confirm password] field has been omitted):

CHANGE PASSWORD FORM
{
  input type=""password"" [ old password ], setResetPassword(false)

  input type=""password"" [ new password ], setResetPassword(false)

  submit ""Change Password""
}

All PasswordTextField's are set to setResetPassword(false). So I expect the input to be kept in the form on each request/response roundtrip.

When I type in the [old password] but leave [new password] empty validation of [new password] fails as it is a required field. However the input of [old password] is not remembered but discarded This is wrong as the input for [old password] is valid and validation errors only relate to [new password]. So the user is forced to again enter all fields until validation succeeds as a whole.

I tried the same with TextField's instead of PasswordTextField's: In this case the value of [old password] is kept even on validation error of [new password].

Can you confirm this is an issue, please?!",WinXP + java 1.5 + wicket 1.2.5,,,,,,,,,,,WICKET-793,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-28 08:57:23.842,,,no_permission,,,,,,,,,,,201509,,,Thu Jul 26 04:25:29 UTC 2007,,,,,,0|i0kitb:,117865,,,,,,,,28/May/07 08:57;dashorst;Assigned this bug to 1.2.7 and next 1.3 development release,26/Jul/07 04:25;msandori;Seems to be a duplicate of 793 which I just filed.,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableChoiceLabel doesn't work,WICKET-703,12372515,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,a.klochkov,a.klochkov,27/Jun/07 15:13,15/Aug/07 15:57,13/Mar/19 23:15,15/Aug/07 15:57,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-extensions,,,,0,,,,,,,,"AjaxEditableChoiceLabel doesn't init properly - it always creates DropDownChoice with null in the choices field. 
The newEditor() method is called from the AjaxEditableLabel constructor and at that time AjaxEditableChoiceLabel.choices is not initialized yet.",,,,,,,,,,,,,,,,,,,27/Jun/07 16:33;a.klochkov;wicket-703.patch;https://issues.apache.org/jira/secure/attachment/12360679/wicket-703.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201735,,,Wed Jun 27 16:33:40 UTC 2007,,,,,,0|i0ki5j:,117758,,,,,,,,27/Jun/07 16:33;a.klochkov;attached a proposed patch,,,,,,,,,,,,,,,,,,,,,,,
More problems with ajax and transparent containers,WICKET-841,12375864,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,memeplex,memeplex,13/Aug/07 02:27,13/Aug/07 19:40,13/Mar/19 23:15,13/Aug/07 19:40,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Attached is my attempt to get a list that is ajax refreshed just at the tail. It's implemented as a sort of linked list. There are two versions. 'list' implements each node as a Panel, having contents (a number) and a next container which is made visible and ajax refreshed when one new element is added to the list. 'list2' does the same but using a Fragment instead of a Panel. You guessed, panels works just fine, but for the fragments version I get the usual transparent containers exception when trying to append an element:

WicketMessage: Unable to find the markup for the component. That may be due to transparent containers or components implementing IComponentResolver: [MarkupContainer [Component id = nextContainer, page = web.list2.ListPage, path = 0:first:nextContainer.WebMarkupContainer, isVisible = true, isVersioned = true]]

Root cause:

org.apache.wicket.WicketRuntimeException: Unable to find the markup for the component. That may be due to transparent containers or components implementing IComponentResolver: [MarkupContainer [Component id = nextContainer, page = web.list2.ListPage, path = 0:first:nextContainer.WebMarkupContainer, isVisible = true, isVersioned = true]]
at org.apache.wicket.MarkupFragmentFinder.find(MarkupFragmentFinder.java:111)
at org.apache.wicket.Component.locateMarkupStream(Component.java:3274)
at org.apache.wicket.Component.renderComponent(Component.java:2087)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:772)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:672)
at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:522)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1038)",,,,,,,,,,,,,,,,,,,13/Aug/07 02:30;memeplex;lists.tgz;https://issues.apache.org/jira/secure/attachment/12363680/lists.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-13 19:40:19.935,,,no_permission,,,,,,,,,,,201864,,,Mon Aug 13 19:40:19 UTC 2007,,,,,,0|i0khqf:,117690,,,,,,,,13/Aug/07 19:40;jdonnerstag;thanks for reporting. Fixed,,,,,,,,,,,,,,,,,,,,,,,
Using form method=get does not work,WICKET-828,12375578,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,johanhaleby,johanhaleby,08/Aug/07 08:16,12/Aug/07 21:59,13/Mar/19 23:15,12/Aug/07 21:59,1.2.6,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.7,1.3.0-beta3,,,,,,0,,,,,,,,"I'm trying to use form method=""get"" instead of post. In wicket 1.3.0-beta2 I override the getMethod() in Form to return METHOD_GET instead of the default METHOD_POST. In wicket 1.2.6 I do like this:
Form form = new Form(""form"") {
	@Override
	protected void onComponentTag(ComponentTag tag) {
		super.onComponentTag(tag);
		tag.put(""method"", ""get"");
	}
};

Both of these options seems to work as far as rendering the html page is concerned but you cannot submit anything.  But when submitting a request all that's happening is that the navigation bar displays the URL in the form of e.g.  http://localhost:8080/wickettest/app/?form0_hf_0=&firstName=johan&lastName=haleby&button=Submit+Query . I.e. all wicket component navigation info seems to be lost and wicket cannot determine the IFormListener and instead
defaults to the HomePage. 

Also one thing that may be addressed is that if you have declared a form in your html as e.g. 
<form wicket:id=""form"" method=""get"">
..
</form>
the method should not automatically be transformed to post. Or perhaps there is a reason for doing this that I'm not aware of. ",All,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-12 20:54:35.523,,,no_permission,,,,,,,,,,,201852,,,Sun Aug 12 20:54:35 UTC 2007,,,,,,0|i0khrj:,117695,,,,,,,,12/Aug/07 20:54;ehillenius;See http://www.nabble.com/How-to-use-form-method%3D%22get%22--tf4229581.html#a12032581,,,,,,,,,,,,,,,,,,,,,,,
NavigatorLabel does not support I18N or alternate text,WICKET-653,12371663,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,pete,pete,14/Jun/07 16:17,12/Aug/07 09:41,13/Mar/19 23:15,12/Aug/07 09:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-extensions,,,,0,,,,,,,,"the class

  org.apache.wicket.extensions.markup.html.repeater.data.table.NavigatorLabel

contains some hardcoded english text (""Showing # to # of #"") in line 156

this message should instead be taken from a resource property to support other languages or different texts...
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-28 15:22:05.386,,,no_permission,,,,,,,,,,,201688,,,Sun Aug 12 09:41:01 UTC 2007,,,,,,0|i0ki93:,117774,,,,,,,,28/Jul/07 15:22;freemant;This is already fixed 1.3 beta2.,12/Aug/07 09:41;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,
Problem with Autolinks inside panel preview code,WICKET-564,12369256,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,mindhaq,mindhaq,14/May/07 12:55,12/Aug/07 08:07,13/Mar/19 23:15,12/Aug/07 08:07,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"All my pages are subclassed from a common basepage. That page has a
Panel with login information and some links. On the basepage-markup,
the html of the panel is copied to enable an offline preview for my
webdesigner (he can work on the templates from within Dreamweaver).
The links have a href attribute, so that offline navigation is
possible.

This worked well in 1.2. In 1.3, I get a markup error at the start of the link:

org.apache.wicket.markup.MarkupException: Expected close tag for <div
id=""loginInfoPanel0"" wicket:id=""loginInfoPanel"">

The page being reported to have a problem is the subpage (!).

Now when I remove the href from the links in the basepage (!), all
pages render fine, although the links are still there in the
subpage-markups, though outside of wicket:extend.

So, in this case it was not that big of a deal, but I think this
problem might come again. I think it has something to do with
Autolinkresolver trying to generate new links in places where he
shouldn't. Is it possible to disable this?

In fact, I think the problem would occurr even without using base- and
childpages. It's just that the error message on the child page
displays the combined markup.","JDK1.6
Wicket quickstart",,,,,,,,,,,,,,,,,,14/May/07 12:57;mindhaq;wicket-quickstart-autolink.tar.gz;https://issues.apache.org/jira/secure/attachment/12357254/wicket-quickstart-autolink.tar.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-12 08:07:57.356,,,no_permission,,,,,,,,,,,201610,,,Sun Aug 12 08:07:57 UTC 2007,,,,,,0|i0kiiv:,117818,,,,,,,,14/May/07 12:56;mindhaq;It was the same part that caused WICKET-347,14/May/07 12:57;mindhaq;Quickstart demonstrating the problem.,12/Aug/07 08:07;jdonnerstag;fixed and test case added,,,,,,,,,,,,,,,,,,,,,
Cannot make border body contents visible once they were hidden,WICKET-834,12375700,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,memeplex,memeplex,09/Aug/07 19:26,11/Aug/07 17:56,13/Mar/19 23:15,11/Aug/07 17:56,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"The attached border shows/hides its content via an ajax event. Once the content has been hidden I get the following exception if re-showing it:

WicketMessage: Exception in rendering component: [MarkupContainer [Component id = _body, page = com.livra.web.components.TestHideableBorderPage, path = 5:hideable:_body.Border$BorderBodyContainer, isVisible = true, isVersioned = true]]

Root cause:

java.lang.NullPointerException
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1366)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1315)
at org.apache.wicket.markup.html.border.Border$BorderBodyContainer.onComponentTagBody(Border.java:347)
at org.apache.wicket.Component.renderComponent(Component.java:2181)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1325)
at org.apache.wicket.Component.render(Component.java:2005)
at org.apache.wicket.Component.renderComponent(Component.java:2118)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:772)
at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:672)
at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:522)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1038)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1108)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1177)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:500)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:261)",,,,,,,,,,,,,,,,,,,09/Aug/07 19:27;memeplex;border.tgz;https://issues.apache.org/jira/secure/attachment/12363519/border.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-11 17:56:23.65,,,no_permission,,,,,,,,,,,201857,,,Sat Aug 11 17:56:23 UTC 2007,,,,,,0|i0khr3:,117693,,,,,,,,11/Aug/07 17:56;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
/wicket-datetime/   org.apache.wicket.util.license.JavaScriptLicenseHeaderHandler failed.,WICKET-833,12375686,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,funkattack,funkattack,09/Aug/07 16:05,09/Aug/07 16:16,13/Mar/19 23:15,09/Aug/07 16:16,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-datetime,,,,0,,,,,,,,"-------------------------------------------------------
 T E S T S
-------------------------------------------------------
[surefire] Running org.apache.wicket.util.license.ApacheLicenceHeaderTest

org.apache.wicket.util.license.JavaScriptLicenseHeaderHandler failed. The following files(4) didn't have correct license header:
NONE /home/fnk64/tmp/wicket-1.x/jdk-1.4/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/calendar/calendar.js
NONE /home/fnk64/tmp/wicket-1.x/jdk-1.4/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/dom/dom.js
NONE /home/fnk64/tmp/wicket-1.x/jdk-1.4/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/yahoo/yahoo.js
NONE /home/fnk64/tmp/wicket-1.x/jdk-1.4/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/event/event.js

[surefire] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 0,124 sec <<<<<<<< FAILURE !! 
[INFO] ------------------------------------------------------------------------
"," svn info
Pfad: .
URL: https://svn.apache.org/repos/asf/wicket/trunk
Basis des Projektarchivs: https://svn.apache.org/repos/asf
UUID des Projektarchivs: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 564223
Knotentyp: Verzeichnis
Plan: normal
Letzter Autor: almaw
Letzte geänderte Rev: 564210
Letztes Änderungsdatum: 2007-08-09 16:18:10 +0200 (Do, 09 Aug 2007)

",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201856,,,2007-08-09 16:05:53.0,,,,,,0|i0khrb:,117694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ajax refresh fails when a fragment is included in the target,WICKET-827,12375443,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,memeplex,memeplex,06/Aug/07 20:11,07/Aug/07 08:49,13/Mar/19 23:15,07/Aug/07 08:49,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Attached there is a package to drop into a quickstart project. If contains a panel that is a fragment provider and which also includes an ajax link to refresh the fragment contents. The main page just shows this panel and the provided fragment. Following the link raises the following exception:

WicketMessage: Unable to find the markup for the component. That may be due to transparent containers or components implementing IComponentResolver: [Component id = fragmentContent, page = web.fragment.Consumer, path = 0:container:fragment:fragmentContent.Label, isVisible = true, isVersioned = true]

Root cause:

org.apache.wicket.WicketRuntimeException: Unable to find the markup for the component. That may be due to transparent containers or components implementing IComponentResolver: [Component id = fragmentContent, page = web.fragment.Consumer, path = 0:container:fragment:fragmentContent.Label, isVisible = true, isVersioned = true]
at org.apache.wicket.MarkupFragmentFinder.find(MarkupFragmentFinder.java:111)
at org.apache.wicket.Component.locateMarkupStream(Component.java:3274)",,,,,,,,,,,,,,,,,,,06/Aug/07 21:04;ivaynberg;WICKET-827.patch.txt;https://issues.apache.org/jira/secure/attachment/12363280/WICKET-827.patch.txt,06/Aug/07 20:12;memeplex;fragment.tgz;https://issues.apache.org/jira/secure/attachment/12363277/fragment.tgz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-08-06 21:04:15.819,,,no_permission,,,,,,,,,,,201851,,,Tue Aug 07 08:49:26 UTC 2007,,,,,,0|i0khrr:,117696,,,,,,,,"06/Aug/07 21:04;ivaynberg;patch to fix the problem, would like juergen to review before i commit it.","06/Aug/07 21:05;ivaynberg;juergen, please review that attached patch and let me know if i broke something that isnt obvious",07/Aug/07 08:49;jdonnerstag;the patch seems ok to me.,,,,,,,,,,,,,,,,,,,,,
Empty content inserted into Border - throws ugly exceptions,WICKET-823,12375382,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,dwojtas@gmail.com,dwojtas@gmail.com,05/Aug/07 10:31,05/Aug/07 11:53,13/Mar/19 23:15,05/Aug/07 11:53,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"This can be easily reproduced wirth wicket-examples/template/templating using border.

Please open:  org.apache.wicket.examples.template.border.Page1
ant cut ALL the contents inside span 
     wicket:id=""border""
It should look like this:
    <span wicket:id=""border""></span>

After this, the page renders nicely.
But if you change it to look like this:
    <span wicket:id=""border"" />
there are tons of exceptions that do not say anything useful.

I have spent 1 full day fighting with this before I found the reason in my little app.","wicket 1.3beta2, windows xp, Java 6, jetty 6",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-05 11:53:55.356,,,no_permission,,,,,,,,,,,201848,,,Sun Aug 05 11:53:55 UTC 2007,,,,,,0|i0khsf:,117699,,,,,,,,05/Aug/07 11:53;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
Component#getLocale and Component#getVariation should search their parents,WICKET-816,12375334,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,04/Aug/07 00:46,04/Aug/07 01:20,13/Mar/19 23:15,04/Aug/07 01:20,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Currently an override of either Component#getLocale or Component#getVariant only works for that specific component. I think the correct thing would be that if a component overrides any of these methods, all it's childs should automatically inherit that value.",,,,,,,,,,,,,,,,,,,04/Aug/07 00:57;ehillenius;WICKET-816.patch;https://issues.apache.org/jira/secure/attachment/12363156/WICKET-816.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201842,,,Sat Aug 04 00:57:22 UTC 2007,,,,,,0|i0khsv:,117701,,,,,,,,"04/Aug/07 00:57;ehillenius;If no-one objects, this would be the patch for this issue.",,,,,,,,,,,,,,,,,,,,,,,
"DateTimeField minute field needs zero-padding - it should display ""00"" not ""0""",WICKET-814,12375288,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,almaw,almaw,03/Aug/07 12:17,03/Aug/07 12:17,13/Mar/19 23:15,03/Aug/07 12:17,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-datetime,,,,0,,,,,,,,"As summary.
Times are typically represented as 9:09, not 9:9  ;-)
Need to futz with converters to fix this, probably.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201840,,,Fri Aug 03 12:17:53 UTC 2007,,,,,,0|i0kht3:,117702,,,,,,,,"03/Aug/07 12:17;almaw;I've added a ZeroPaddingIntegerConverter to core specifically to deal with this, and plumbed it in for DateTimeField.",,,,,,,,,,,,,,,,,,,,,,,
wrong positioning of date pickers,WICKET-747,12373544,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,11/Jul/07 18:46,30/Jul/07 22:24,13/Mar/19 23:15,14/Jul/07 00:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-datetime,,,,0,,,,,,,,See image. We should probably try to position datepickers relative to the either the button icon or the component they are attached to and/ or make this configurable.,,,,,,,,,,,,,,,,,,,14/Jul/07 08:55;ehillenius;dump.png;https://issues.apache.org/jira/secure/attachment/12361832/dump.png,11/Jul/07 18:47;ehillenius;dump.png;https://issues.apache.org/jira/secure/attachment/12361606/dump.png,14/Jul/07 08:56;ehillenius;dump2.png;https://issues.apache.org/jira/secure/attachment/12361833/dump2.png,16/Jul/07 00:46;faceman;fontsize_change_mispositioning.png.jpg;https://issues.apache.org/jira/secure/attachment/12361862/fontsize_change_mispositioning.png.jpg,,,,,4.0,,,,,,,,,,,,,,,,,,,2007-07-14 01:06:39.028,,,no_permission,,,,,,,,,,,201777,,,Mon Jul 30 22:24:39 UTC 2007,,,,,,0|i0khzz:,117733,,,,,,,,"14/Jul/07 00:42;ehillenius;The datepicker now by default positions itself relative to the datepicker icon (which is always rendered directly after the field it is coupled with). If you don't want this, you can override DatePicker#alignWithIcon and let it return false.

Looking forward to feedback from people. This works good enough for me, but I can imagine even further improvements.","14/Jul/07 01:06;faceman;damn, just did the same thing, but not as nice ;)

firefox 2.0.0.4 works fine, but ie7 doesn't want that line though -> calendar doesn't open anymore:

YAHOO.wicket.date10DpJs.oDomContainer.style.top = iconPos[1] + iconHeight + 1 + ""px"";

error message:
line: 38 (above line)
char: 3
error: invalid argument
code: 0","14/Jul/07 08:54;ehillenius;Ok, fixed that. There's one thing left though, and I'm a bit at a loss how to fix this properly (with relative sizes, not absolute). The calendar widget only seems to initialize with the size it can get in the visible part of the screen. When a date picker is near the end of a screen, this means that it can get a width that is too narrow, resulting in something like the screen shots I'll attach.",14/Jul/07 08:55;ehillenius;Screen with two date pickers. Note that the second one is near the end of the screen.,14/Jul/07 08:56;ehillenius;Same screen as previous but after first scrolling and then opening the date picker. Note that the width is initialized according to the width that was available to the date picker before scrolling.,14/Jul/07 08:57;ehillenius;Note that this problem only occurs for the width; I couldn't reproduce this for the height.,"14/Jul/07 09:00;ehillenius;Gerolf, if you have some time, would you be able to look at it? Not only am I out of ideas for the moment, but I'm also very short on time this weeknd (book deadline). It might be an issue with YUI, in which case we could report it. And/ or there might be a simple workaround for it. One is to explicitly set the width upfront. The problem with that though is that it's not a relative width, so what works for one style/ font size etc may not be right for another.","15/Jul/07 23:14;faceman;sure, i'm on it. i'll try to come up with an idea how to solve this.",15/Jul/07 23:16;ehillenius;Awesome. Much appreciated!,"15/Jul/07 23:40;faceman;found the bad boy.
the reason for the (mis)behavior is because of the ""overflow:hidden"" style for the css-class ""yui-calcontainer. setting this to ""overflow:visible"" (or just leaving out the overflow style definition) renders the full calendar, not matter whether there is enough space or not.
you can easily try it out with e.g. firebug.

i just added 
subject.style.overflow = ""visible"";
to Wicket.DateTime#positionRelativeTo and it works like a charm (at least in IE7 and FF2.0)

there's still an issue with FF2.0
if the font-size is changed (eg via ctrl+ || ctrl-) the calendar still shows up at the location as if the fonts haven't been changed.
i will post a screenshot.","16/Jul/07 00:46;faceman;screenshot shows that the calendar is rendered on the same position of the ""original"" fontsize, regardless of where the icon is after a fontsize change.
notice: the calendar was closed before the fontsize change and opened afterwards.","16/Jul/07 00:49;ehillenius;Thanks, that works!

I'll leave this bug open for the font-size change (though it's not something that bugs me tbh).
","16/Jul/07 00:51;faceman;doesn't bug me either, just wanted to mention it.","26/Jul/07 22:02;almaw;You still hadn't fixed this properly, so I took the liberty of doing so.

1) You can't just set the style.left/top values, as if the element is nested inside a relatively positioned div, it's going to break.

2) You can't set the position when you construct the component, as someone might well move it around the page before you pop it open (by inserting other elements in the page or whatever).

I've fixed both of these. Hopefully, there should be no further issues with this one (unless people want right-aligned calendars to not be popped-up off-screen, which is kind-of a separate issue).",26/Jul/07 22:10;ehillenius;Cheers Al,"30/Jul/07 22:24;faceman;as stated in the release notes of YUI Calendar 2.3.0 RC1 the overflow:hidden statement is removed for non IE6 browsers.
original quote:
""Removed overflow:hidden from default Calendar/CalendarGroup container for non-IE6 browsers to fix clipping issue with IE7 when CalendarGroup was inside a box with a specific width. overflow:hidden is still required for IE6 with an iframe shim.""

therefore, our ""fix"" should be removed after upgrade to 2.3.0
",,,,,,,,
WebExternalResourceStream.close() throws NPE,WICKET-790,12374584,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,cdeal,cdeal,25/Jul/07 20:13,26/Jul/07 14:34,13/Mar/19 23:15,26/Jul/07 14:34,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"I have written a ContextRelativeResourceReference (CRRR) that creates ContextRelativeResource objects.  I set a new CRRR on an Image object and when the page is rendering, I get the following stackTrace:

16:07:36,158 ERROR [default]:260 - Servlet.service() for servlet default threw exception
java.lang.NullPointerException
	at org.apache.wicket.util.resource.WebExternalResourceStream.close(WebExternalResourceStream.java:78)
	at org.apache.wicket.protocol.http.WicketFilter.getLastModified(WicketFilter.java:728)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.valves.FastCommonAccessLogValve.invoke(FastCommonAccessLogValve.java:495)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)

Looking at WebExternalResourceStream.close(), it calls ""in.close()"", however, ""in"" is not initialized during the code execution path.  

Would it be acceptable to do this in the close() method?

	public void close() throws IOException
	{
		if (in != null) in.close();
	}
",,,,,,,,,,,,,,,,,,,25/Jul/07 20:15;cdeal;ContextRelativeResourceReference.java;https://issues.apache.org/jira/secure/attachment/12362555/ContextRelativeResourceReference.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-26 14:34:48.167,,,no_permission,,,,,,,,,,,201818,,,Thu Jul 26 14:34:48 UTC 2007,,,,,,0|i0khvz:,117715,,,,,,,,25/Jul/07 20:15;cdeal;This is the ContextRelativeResourceReference class that I created to go along with the ContextRelativeResource.  It is based upon one/some of the other *Reference classes.,"26/Jul/07 14:34;jbq;Fixed, thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,
WicketTester no longer works with WicketFilter,WICKET-760,12373879,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,severian,severian,16/Jul/07 08:48,26/Jul/07 14:17,13/Mar/19 23:15,26/Jul/07 14:17,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"I've just upgraded from beta1 to beta2 and have encountered a problem getting any tests to run.  My configuration in web.xml is pretty standard:

--------------------------------------------------------------------------------------------
<filter>
        <filter-name>WicketEntryPoint</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>MyApplication</param-value>
        </init-param>
        <init-param>
            <param-name>configuration</param-name>
            <param-value>development</param-value>
        </init-param>
    </filter>
   
    <filter-mapping>
        <filter-name>WicketEntryPoint</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
---------------------------------------------------------------------------------------------

And I set up a WicketTester instance in a fairly standard manner, which correctly picks up web.xml:
---------------------------------------------------------------------------------------------
tester = new WicketTester(myAppInstance, System.getProperty(""user.dir"") + ""/src/main/webapp"");
---------------------------------------------------------------------------------------------

But, with beta 2, I get the following exception:
---------------------------------------------------------------------------------------------
java.lang.IllegalArgumentException: Error initialising WicketServlet - you have no <servlet-mapping> element with a url-pattern that uses servlet: WicketMockServlet
    at org.apache.wicket.protocol.http.WicketFilter.getFilterPath(WicketFilter.java:497)
    at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:370)
    at org.apache.wicket.protocol.http.MockWebApplication.<init>(MockWebApplication.java:158)
    at org.apache.wicket.util.tester.BaseWicketTester.<init>(BaseWicketTester.java:180)
    at org.apache.wicket.util.tester.WicketTester.<init>(WicketTester.java:241)
    at com.MyStuff.AbstractControllerTest.initWicketTester(AbstractControllerTest.java:67)
    at com.MyStuff.MyTest.setUp(BananaActionCreateTest.java:57)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(BeforeAndAfterRunner.java:74)
    at org.junit.internal.runners.BeforeAndAfterRunner.runBefores(BeforeAndAfterRunner.java:50)
    at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:33)
    at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
    at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
    at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:71)
    at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
    at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
    at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
    at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
---------------------------------------------------------------------------------------------

As I'm using a filter and not a servlet, I was surprised by this error message.  Stepping through the code reveals the difference between beta1 and beta2 is in WicketFilter.init().
The beta1 code looks something like:
---------------------------------------------------------------------------------------------
...
String filterMapping =
if (filterConfig.getInitParameter(WicketFilter.FILTER_MAPPING_PARAM) == null)
{
...
---------------------------------------------------------------------------------------------

The beta2 code looks something like:
---------------------------------------------------------------------------------------------
...
String filterMapping = filterConfig.getInitParameter(WicketFilter.FILTER_MAPPING_PARAM);
if (filterMapping == null || filterMapping.equals(WicketFilter.SERVLET_PATH_HOLDER))
{
...
---------------------------------------------------------------------------------------------

The new 2nd clause in the ""if"" statement causes the problem.  This clause is triggered and quickly results in the exception. 

Running my wicket app works fine, only my tests are broken.  To get the
tests to work, I have to:
(a) use WicketServlet instead of WicketFilter (in web.xml);
(b) set <servlet-name> to WicketMockServlet (in web.xml), instead of
anything I want.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-26 14:17:31.678,,,no_permission,,,,,,,,,,,201789,,,Thu Jul 26 14:17:31 UTC 2007,,,,,,0|i0khy7:,117725,,,,,,,,"26/Jul/07 14:17;jbq;Experienced the same problem.  Proposed fix applied, thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,,
RadioGroup and CheckGroup cause XHTML validation errors because of name attribute,WICKET-601,12370505,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,kinabalu,kinabalu,30/May/07 07:10,26/Jul/07 04:29,13/Mar/19 23:15,26/Jul/07 04:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"When using RadioGroup's or CheckGroup's, they usually are enclosed in a <span> or similar non-block element.  Ordinarily you can just render the body, but if you're using ajax on the radio/check inside, you can't do that.  This causes an XHTML validation error since span doesn't have a name attribute, neither does div, etc.  What I've done in my code is the following:

                protected void onComponentTag(final ComponentTag tag) {
                    super.onComponentTag(tag);
                    tag.remove(""name"");
                }  

This makes the page validate now, thoughts?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-31 00:54:25.693,,,no_permission,,,,,,,,,,,201641,,,Thu Jul 26 04:29:21 UTC 2007,,,,,,0|i0kiev:,117800,,,,,,,,"31/May/07 00:54;tschafer@hotmail.com;It also causes an HTML validation error, as those attributes aren't allow in 
<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01//EN"" ""http://www.w3.org/TR/html4/strict.dtd"">
either",31/May/07 00:54;tschafer@hotmail.com;Same problem with CheckBoxMultipleChoice,26/Jul/07 04:29;almaw;Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,
page and webpage constructor with pageparameters argument does not properly initialize,WICKET-791,12374586,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,25/Jul/07 21:16,25/Jul/07 21:18,13/Mar/19 23:15,25/Jul/07 21:18,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,see http://www.nabble.com/evil-Page%28params%29-bug-in-1.3.0-xxx-tf4144569.html,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201819,,,2007-07-25 21:16:00.0,,,,,,0|i0khvr:,117714,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PropertyResolver.getPropertySetter() depends on calling PropertyResolver.setValue() first for it to work.,WICKET-668,12371907,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,almaw,almaw,18/Jun/07 19:01,24/Jul/07 20:56,13/Mar/19 23:15,24/Jul/07 20:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"See PropertyResolverTest#testGetTargetSetter() for details.

We go like this:

Method method = PropertyResolver.getPropertySetter(""number"", address);
assertEquals(method.getName(), ""setNumber"");

However, the method variable will be null unless someone has previously called setValue() on that field.

This is asking for hard-to-reproduce NPEs. ;-)

I discovered this while refactoring PropertyResolver to make it clean up properly when the application goes away. The tests are now cleaning up properly on setUp()/tearDown(), so this came to light.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-24 20:56:43.018,,,no_permission,,,,,,,,,,,201701,,,Tue Jul 24 20:56:43 UTC 2007,,,,,,0|i0ki8n:,117772,,,,,,,,24/Jul/07 20:56;knopp;I removed the lazy initialization of the setter method - I don't see any reason for it.,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundsException in BehaviorRequestTarget,WICKET-772,12374214,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jimmclaughlin,jimmclaughlin,19/Jul/07 22:05,21/Jul/07 07:09,13/Mar/19 23:15,21/Jul/07 07:09,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"If you remove an AjaxTimerBehavior from a component through another Ajax request, the timer will fire from the browser later and cause an IndexOutOfBoundsException in BehaviorRequestTarget.

This is because BehaviorRequestTarget improperly checks for a null return value from List.get() to determine if the behavior is there. Obviously, instead it should check if List.size() > idAsInt.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-21 07:09:01.508,,,no_permission,,,,,,,,,,,201800,,,Sat Jul 21 07:09:01 UTC 2007,,,,,,0|i0khxb:,117721,,,,,,,,21/Jul/07 07:09;jdonnerstag;thanks. fixed in 558263 ,,,,,,,,,,,,,,,,,,,,,,,
Feedback messages get cleaned up too early when using redirect to render strategy,WICKET-774,12374226,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,20/Jul/07 05:49,20/Jul/07 05:50,13/Mar/19 23:15,20/Jul/07 05:50,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"When using the redirect to render strategy, feedback messages should be cleaned up in the render request rather than in the first part of the request (as is the case now).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201802,,,2007-07-20 05:49:23.0,,,,,,0|i0khx3:,117720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bread crumb component does not properly detach bread crumbs,WICKET-763,12373948,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,17/Jul/07 02:10,17/Jul/07 02:10,13/Mar/19 23:15,17/Jul/07 02:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-extensions,,,,0,,,,,,,,The bread crumbs component does not check whether the crumbs are components or implement IDetachable. It should check and call detach when appropriate.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201792,,,2007-07-17 02:10:12.0,,,,,,0|i0khxr:,117723,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket thread handling is not fully servlet container aware,WICKET-641,12371475,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,pete,pete,12/Jun/07 16:02,16/Jul/07 13:32,13/Mar/19 23:15,17/Jun/07 16:51,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"I found these issues in wicket:

(1) org.apache.wicket.util.file.FileCleaner will never terminate it's reaper thread once it has been started
(2) org.apache.wicket.util.thread.Task will not immediately stop when calling stop() but wait at least until it's next point of execution (which could take very long!)

In a servlet container, any kind of thread should be killed in WebApplication#destroy or equivalent and terminate as quick as possible / immediately.

(2) should not rely on the 'stop' variable but use Thread#interrupt and InterruptedException instead.

*IMHO* terminating threads in general is done best by using Thread#interrupt as suggested by Sun.

delaying / ignoring termination of threads could leave stale file locks, continue to use memory and cause other types of resource problems....

Starting / stopping web applications is not restricted to hot deploy while developing but some production servers are usually not shutdown for re-deployment so this issue could be critical in that case.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-17 16:51:09.491,,,no_permission,,,,,,,,,,,201676,,,Sun Jun 17 16:51:09 UTC 2007,,,,,,0|i0ki9z:,117778,,,,,,,,"17/Jun/07 16:51;jdonnerstag;thanks, it is fixed now",,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.extensions.yui.calendar.DateField; throws NPE upon validation.,WICKET-500,12368041,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,funkattack,funkattack,25/Apr/07 15:16,16/Jul/07 13:32,13/Mar/19 23:15,05/Jun/07 18:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-datetime,,,,0,,,,,,,,"org.apache.wicket.extensions.yui.calendar.DateField; throws NPE upon validation.

The situation:
markup:
<span wicket:id=""arrivalDateProperty"" id=""arrivalDateProperty""
					type=""text"" size=""15""></span>

the code:
			final DateField arrivalDatePropertyTextField = new DateField(
					""arrivalDateProperty"");
			arrivalDatePropertyTextField.add(DateValidator
					.minimum(new DateMidnight().toDate()));
			add(arrivalDatePropertyTextField);

the generated markup:
<span id=""arrivalDateProperty"" name=""arrivalDateProperty"" type=""text"" size=""15"">
  <span style=""white-space: nowrap;"">
    <input id=""date0"" name=""arrivalDateProperty:date"" value=""25.04.07"" type=""text"" size=""8""/>
<span>&nbsp;<div style=""display:none;z-index: 99999;position:absolute;"" id=""date0Dp""></div><img style=""cursor: pointer; border: none;"" id=""date0Icon"" src=""resources/org.apache.wicket.extensions.yui.calendar.DatePicker/icon1.gif"" /></span><input type=""hidden""/>
  </span>
</span>


The stacktrace
DateConverter.convertToObject(String, Locale) line: 37	
DateField(FormComponent).convert() line: 803	
Form$13.validate(FormComponent) line: 1051	
[...]
shows that DateField 's convert() is called, which in this situation is looking for the parameter ""arrivalDateProperty"" whereas it probably should look for the parameter ""arrivalDateProperty:date""

Probably its DateTextField value should be validated.

My first shot would be delegating the the DateField 's convert() method to its DateTextField ' s convert() method,
but maybe the wicket way is different.

mf","URL: https://svn.apache.org/repos/asf/incubator/wicket/trunk/jdk-1.4/wicket-datetime
Revision: 532322
",,,,,,,,,,,,,,WICKET-522,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-30 21:35:31.853,,,no_permission,,,,,,,,,,,201553,,,Tue Jun 05 18:59:44 UTC 2007,,,,,,0|i0kip3:,117846,,,,,,,,30/Apr/07 21:35;ehillenius;The stack trace doesn't make sense to me. Could you please update to the latest sources and paste in the full stack trace? Thanks.,"02/May/07 13:28;funkattack;I'm sorry, probably I missed a relevant detail, there is a validator added to the form.
It might be that DateField.getConvertedInput() is missing the right input.

    		add(new AbstractFormValidator() {
				public void validate(Form form) {
					if (!new DateMidnight(arrivalDatePropertyTextField
							.getConvertedInput())
							.isBefore(new DateMidnight(
									departureDatePropertyTextField
											.getConvertedInput()))) {
						final String key = resourceKey();
						departureDatePropertyTextField.error(key);
					}
				}

				public FormComponent[] getDependentFormComponents() {
					return new FormComponent[] { arrivalDatePropertyTextField,
							departureDatePropertyTextField };
				}

			});","05/Jun/07 18:59;ehillenius;I solved it by removing final from FormComponent#getConvertedInput and implementing that method appropriately in DateField and DateTimeField. This replaces the implementation of updateModel.

Comment from DateField's and DateTimeField's getConvertedInput Javadoc:

	 * Note that overriding this method is a better option than overriding
	 * {@link #updateModel()} like the first versions of this class did. The
	 * reason for that is that this method can be used by form validators
	 * without having to depend on the actual model being updated, and this
	 * method is called by the default implementation of {@link #updateModel()}
	 * anyway (so we don't have to override that anymore).



",,,,,,,,,,,,,,,,,,,,,
[WICKET-673] breaks AbstractPageableView with AjaxPagingNavigator,WICKET-719,12372936,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,janne,janne,janne,03/Jul/07 18:55,16/Jul/07 13:32,13/Mar/19 23:15,03/Jul/07 19:14,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"AbstractBehavior#isEnabled modification on WICKET-673 breaks the AbstractPageableView + AjaxPagingNavigator functionality.

Here's a stack trace:

UserList(AbstractPageableView).getRowCount() line: 231	
UserList(AbstractPageableView).getPageCount() line: 301	
AjaxPagingNavigationLink(PagingNavigationLink).getPageNumber() line: 84	
AjaxPagingNavigationLink(PagingNavigationLink).linksTo(Page) line: 126	
AjaxPagingNavigationLink(Link).isEnabled() line: 186	
AjaxPagingNavigationBehavior(AbstractBehavior).isEnabled(Component) line: 157	
AjaxPagingNavigationLink(Component).isBehaviorAccepted(IBehavior) line: 3124	
AjaxPagingNavigationLink(Component).detachBehaviors() line: 938	
AjaxPagingNavigationLink(Component).detachModels() line: 964	

The call of AjaxPagingNavigationLink.isEnabled() when detaching the behaviors causes the AbstractPageableView.getRowCount to be called, and this causes the AbstractPageableView to cache the current number of the rows on the list. (@see setCachedItemCount(count) ). 

When the page is rendered again the list may not be rendered properly because of the old value found from the cache.

Nasty.

Is the best way to fix this to clear the cache on AbstractPageableView.onAttach?

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201751,,,2007-07-03 18:55:07.0,,,,,,0|i0ki3z:,117751,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Palette, Recorder Issue - Compound Property Model does not work.",WICKET-700,12372452,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,mwichers,mwichers,26/Jun/07 16:56,16/Jul/07 13:32,13/Mar/19 23:15,04/Jul/07 14:40,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-extensions,,,,0,,,,,,,,"Hi All!

I experienced a Problem with the Palette component in the Wicket version
1.3.0-SNAPSHOT. When I use a PropertyModel as Choices for the Palette, I
get the following Error (see below). This Problem did'n exist in the
1.2.6-SNAPSHORT.

I attached an ZIP of the wicket-quickstart where I used the Palette in
the Index.java Class.


ERROR:

WicketMessage: Could not find Form parent for [MarkupContainer
[Component id = recorder, page = org.apache.wicket.quickstart.Index,
path = 0:paletteID:recorder.Palette$1, isVisible = true, isVersioned =
false]]

Root cause:

org.apache.wicket.WicketRuntimeException: Could not find Form parent for
[MarkupContainer [Component id = recorder, page =
org.apache.wicket.quickstart.Index, path =
0:paletteID:recorder.Palette$1, isVisible = true, isVersioned = false]]
at
org.apache.wicket.markup.html.form.FormComponent.getForm(FormComponent.j
ava:565)
at
org.apache.wicket.extensions.markup.html.form.palette.component.Recorder
.onBeforeRender(Recorder.java:78)
at org.apache.wicket.Component.beforeRender(Component.java:846)
at
org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer
.java:1449)
at org.apache.wicket.Component.beforeRender(Component.java:856)
at
org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer
.java:1449)
at org.apache.wicket.Component.beforeRender(Component.java:856)
at org.apache.wicket.Page.renderPage(Page.java:885)
at
org.apache.wicket.request.target.component.BookmarkablePageRequestTarget
.respond(BookmarkablePageRequestTarget.java:225)
at
org.apache.wicket.request.AbstractRequestCycleProcessor.respond(Abstract
RequestCycleProcessor.java:103)
at
org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java
:1037)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1107)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1176)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:499)
at
org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:257
)
at
org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:
127)
at
org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHan
dler.java:1065)
at
org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
at
org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:1
85)
at
org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
at
org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:689)
at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:391)
at
org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
at org.mortbay.jetty.Server.handle(Server.java:285)
at
org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:457)
at
org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConne
ction.java:751)
at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)
at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:357)
at
org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:
329)
at
org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.ja
va:475)",,,,,,,,,,,,,,,,,,,26/Jun/07 16:58;mwichers;wicket-quickstart.tar.gz.tgz;https://issues.apache.org/jira/secure/attachment/12360602/wicket-quickstart.tar.gz.tgz,27/Jun/07 06:14;mwichers;wicket-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12360644/wicket-quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-06-26 17:46:50.63,,,no_permission,,,,,,,,,,,201732,,,Wed Jul 04 07:10:32 UTC 2007,,,,,,0|i0ki5z:,117760,,,,,,,,26/Jun/07 17:46;ivaynberg;palette must be inside a form,"27/Jun/07 06:11;mwichers;I have just forgotten to add the Palette to a Form - the issue i was trying to describe can be reproduced by the latest quickstart i will add. The main problem seems to be that the Palette does not work if you add a CompoundPropertyModel to the Form.

e.g.:

		List<ColumnLabel> columnChoices = new ArrayList<ColumnLabel>();
		String[] strings = { ""LabelA"", ""LabelB"", ""LabelB"", ""LabelC"", ""LabelA"" };
		for (String string : strings)
		{
			ColumnLabel columnLabel = new ColumnLabel(string);
			columnChoices.add(columnLabel);
		}
		TestModel testModel = new TestModel(columnChoices);
		IModel model = new Model(testModel);
		IChoiceRenderer renderer = new ChoiceRenderer(""label"", ""label"");
		Form f = new Form(""form"", new CompoundPropertyModel(model));

		Palette palette = new Palette(""paletteID"", new PropertyModel(testModel, ""selection""),
				new PropertyModel(testModel, ""columnChoices""), renderer, 10, true);

		f.add(palette);
		add(f);

does not work and comes up with the following Exception:


WicketMessage: No get method defined for class: class org.apache.wicket.quickstart.TestModel expression: recorder

Root cause:

org.apache.wicket.WicketRuntimeException: No get method defined for class: class org.apache.wicket.quickstart.TestModel expression: recorder
at org.apache.wicket.util.lang.PropertyResolver.getGetAndSetter(PropertyResolver.java:391)
at org.apache.wicket.util.lang.PropertyResolver.getObjectAndGetSetter(PropertyResolver.java:266)
at org.apache.wicket.util.lang.PropertyResolver.getPropertyClass(PropertyResolver.java:144)
at org.apache.wicket.model.AbstractPropertyModel.getObjectClass(AbstractPropertyModel.java:199)
at org.apache.wicket.markup.html.form.AbstractTextComponent.getModelType(AbstractTextComponent.java:119)
at org.apache.wicket.markup.html.form.AbstractTextComponent.onBeforeRender(AbstractTextComponent.java:107)
at org.apache.wicket.extensions.markup.html.form.palette.component.Recorder.onBeforeRender(Recorder.java:76)
at org.apache.wicket.Component.beforeRender(Component.java:846)
at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1449)
at org.apache.wicket.Component.beforeRender(Component.java:856)
at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1449)
at org.apache.wicket.Component.beforeRender(Component.java:856)
at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1449)
at org.apache.wicket.Component.beforeRender(Component.java:856)
at org.apache.wicket.Page.renderPage(Page.java:885)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:225)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1037)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1107)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1176)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:499)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:257)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:127)
at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1065)
at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:185)
at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:689)
at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:391)
at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
at org.mortbay.jetty.Server.handle(Server.java:281)
at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:457)
at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:751)
at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)
at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:357)
at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:329)
at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)","03/Jul/07 18:49;ivaynberg;just checked in a possible fix, please update and try again.",04/Jul/07 07:10;mwichers;Thanks Igor - the Bug seems to be fixed!,,,,,,,,,,,,,,,,,,,,
OnChangeAjaxBehavior does not work with <textarea> when using Safari,WICKET-729,12373228,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,janne,penberg,penberg,07/Jul/07 13:06,16/Jul/07 13:31,13/Mar/19 23:15,07/Jul/07 18:06,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"With the latest 1.3.0-SNAPSHOT, the following does not work with Safari 2.0.4. The handler is never invoked and the AJAX debug console shows absolutely no activity. The exact same code works with Firefox 2.0.0.4.

import java.io.Serializable;

import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.form.OnChangeAjaxBehavior;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.form.Form;
import org.apache.wicket.markup.html.form.TextArea;
import org.apache.wicket.model.Model;
import org.apache.wicket.model.PropertyModel;

public class WicketBugPage extends WebPage {
    public WicketBugPage() {
        super(new Model(new Item()));

        Form form = new Form(""form"");
        add(form);

        TextArea description = new TextArea(""description"", new PropertyModel(getModel(), ""description""));
        description.add(new OnChangeAjaxBehavior() {
            @Override
            protected void onUpdate(AjaxRequestTarget target) {
                Item item = (Item) getModelObject();
                System.out.println(item.getDescription());
            }
        });
        form.add(description);
    }
    
    public static class Item implements Serializable {
        private String description;
        
        public void setDescription(String description) {
            this.description = description;
        }
        
        public String getDescription() {
            return description;
        }
    }
}

<html>
<body>
  <form wicket:id=""form"">
    <textarea wicket:id=""description""></textarea>
  </form>
</body>
</html>",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201761,,,2007-07-07 13:06:29.0,,,,,,0|i0ki2n:,117745,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MarkupCache does not load markup if it did not exist before,WICKET-570,12369374,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,chrisc,chrisc,15/May/07 09:46,16/Jul/07 13:31,13/Mar/19 23:15,17/Jun/07 08:17,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,1,,,,,,,,"I've got lots of different variant markups and I wish to create new ones at various times. Wicket determines which one to use via the overridden getVariation() method that I provide in my page class.

I'd like to be able to add new variant markups on the fly at run time but I currently have a problem: any new markups that I add are ignored until I reload/restart the web application. Is there anyway to get wicket to pick up new markup variants without restarting the web application?
","Windows XP, Tomcat",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-17 08:17:05.276,,,no_permission,,,,,,,,,,,201615,,,Sun Jun 17 08:17:05 UTC 2007,,,,,,0|i0kihr:,117813,,,,,,,,"17/Jun/07 08:17;jdonnerstag;MarkupCache is much more flexible now. Besides that you may now implement your own based on IMarkupCache, the default implementation provides much better means to extend/modify it behavir via subclassing. 
",,,,,,,,,,,,,,,,,,,,,,,
The Palette component does not update its (Property-)Model after the underlying list was changed by another part of the program,WICKET-462,12367043,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivana,ivana,12/Apr/07 08:43,12/Jul/07 23:35,13/Mar/19 23:15,14/Apr/07 06:29,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-extensions,,,,0,,,,,,,,"The Palette component does not update its (Property-)Model after the underlying list was changed by another part of the program.

I use a Palette to add individuals to a list of 'members'. For this Palette gets two models, the model for 'selected' is a PropertyModel  of  a field in a regular Java object. 
In some cases it is not allowed to remove individuals from this field. After submit another part of the software compares the new object to the old one, and returns the removed individuals. 

To notify the Palette that its model has changed (or should be changed) i call modelChanged(). 
Regardless, the Palette does not show these changes on screen. 

Note that i update other field after submit too, and the components that use PropertyModels of these fields do reflect the changes! For example i use a Label to show a String.


code in the form:
	opsModel = new Model(allUsers);
	membersModel = new PropertyModel(project,""members"");
	IChoiceRenderer renderer = new ChoiceRenderer(""displayName"", ""uid"");
	chooseMembers = new Palette(""people"", membersModel, opsModel, renderer, 12, false);
	add(chooseMembers);
 
public void onSubmit() {
	super.onSubmit();
	doSomeLogic(project);
	chooseMembers.modelChanged(); 
","tomcat 5.5, java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-13 01:57:01.235,,,no_permission,,,,,,,,,,,201523,,,Thu Jul 12 23:35:55 UTC 2007,,,,,,0|i0kisn:,117862,,,,,,,,"13/Apr/07 01:57;ivaynberg;this is fixed in 1.3, can you create a patch for 1.3->1.2.5?",14/Apr/07 06:29;ivaynberg;please reopen once the patch is ready,"01/Jun/07 13:22;mperham;Igor, for those of us who need to patch our 1.2.x source by hand, could you please note a revision or file so we can find the patch?",07/Jun/07 11:50;ivaynberg;first someone needs to create the patch :) then the commit/application of the patch and its revision number will show up under subversion commits jira tab above,"10/Jul/07 19:33;mperham;Igor, I guess I don't understand what you want here.  Ivana just reported the bug and doesn't have a patch.  We are seeing the bug also.  You say it is fixed in 1.3.0 and I've looked through the commit log for trunk's Palette.java but I guess I don't have enough Wicket knowledge to understand which commit fixed the issue.  Otherwise I'd create a 1.2.x patch for you.  Can you give a little more guidance as to the location of the fix - was it in Palette.java?","10/Jul/07 20:29;ivaynberg;thats just it, there was no commit. the palette is very different between 1.2.x and 1.3. im not sure which change and when fixed it, but its already fixed in 1.3. so i guess the whole palette has to be backported to 1.2.x.","11/Jul/07 20:29;jbq;If this issue duplicates WICKET-458, then you can easily find the Subversion commit associated with the fix.","12/Jul/07 23:35;mperham;Jean-Baptiste, I just tried it and the change to 458 does not fix this problem.",,,,,,,,,,,,,,,,
WicketFilter doesn't handle filter mapping parameter from FilterConfig properly,WICKET-724,12373177,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,mwehner,mwehner,06/Jul/07 13:07,11/Jul/07 20:53,13/Mar/19 23:15,11/Jul/07 20:53,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"If the filterMappingUrlPattern Parameter is supplied as initParameter of the filterConfig and the url-pattern is not explicitly read from web.xml by Wicket (i.e. getFilterPath(HttpServletRequest) not getFilterPath(String, InputStream) is used to initialize the filter path),  Wicket cuts off two chars (""/*""), not one char (""*"") from the end of the pattern and uses that to calculate the relative Path which determines if a Request is to be served by Wicket or not. This makes requests to the application homepage not work in such cases, as getRelativePath() will yields ""/"", which is not recognized by Wicket as homepage request in isWicketRequest().
Since you can't manually mount the homepage on ""/"" there's no workaround besides adding an additional slash to the filter pattern (""//*"").


",,,,,,,,,,,,,,,,,,,06/Jul/07 13:13;mwehner;WICKET-724.diff;https://issues.apache.org/jira/secure/attachment/12361297/WICKET-724.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-11 20:53:58.545,,,no_permission,,,,,,,,,,,201756,,,Wed Jul 11 20:53:58 UTC 2007,,,,,,0|i0ki33:,117747,,,,,,,,"06/Jul/07 13:13;mwehner;This is the patch we use in our branch to fix the issue: Only cut off the asterisk, but not the trailing slash (as getFilterPath(String, InputStream) does).","11/Jul/07 20:53;jbq;Fixed, thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,
Radio/Check/Box cleared on validation error,WICKET-710,12372648,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,josh_lim,josh_lim,29/Jun/07 01:22,29/Jun/07 11:21,13/Mar/19 23:15,29/Jun/07 11:21,1.2.6,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-examples,,,,0,,,,,,,,"I am encountering a behaviour on 1.2.6 and 1.3 trunk. Using the FormInput wicket-example

When I clear the ""String"" TextField (which is a RequiredTextField) to force an ""error"" on the form , my values on the
RadioGroup and CheckGroup seems to be cleared as well... This causes the user to have to repeat answering these.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-29 11:21:25.573,,,no_permission,,,,,,,,,,,201742,,,Fri Jun 29 11:21:25 UTC 2007,,,,,,0|i0ki4v:,117755,,,,,,,,"29/Jun/07 09:00;josh_lim;The example on wicket-example has this error, because reuseItems was not set to true for a ListView in a From
so it should be ok to close this ;)

Index: /Users/josh/Development/wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/forminput/FormInput.java
===================================================================
--- /Users/josh/Development/wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/forminput/FormInput.java	(revision 551819)
+++ /Users/josh/Development/wicket/trunk/jdk-1.5/wicket-examples/src/main/java/org/apache/wicket/examples/forminput/FormInput.java	(working copy)
@@ -123,7 +123,7 @@
 					item.add(new Radio(""radio"", item.getModel()));
 					item.add(new Label(""number"", item.getModelObjectAsString()));
 				};
-			};
+			}.setReuseItems(true);
 			group.add(persons);
 
 			CheckGroup checks = new CheckGroup(""numbersCheckGroup"");
@@ -135,7 +135,8 @@
 					item.add(new Check(""check"", item.getModel()));
 					item.add(new Label(""number"", item.getModelObjectAsString()));
 				};
-			};
+			}.setReuseItems(true);
+			
 			checks.add(checksList);
 
 			add(new ListMultipleChoice(""siteSelection"", SITES));
",29/Jun/07 11:21;jbq;Done in r551834,,,,,,,,,,,,,,,,,,,,,,
synchronize AbstractBehavior#isEnabled(Component component) with Component#isEnabled,WICKET-673,12371988,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,19/Jun/07 22:09,25/Jun/07 16:12,13/Mar/19 23:15,24/Jun/07 18:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,,,,,0,,,,,,,,"AbstractBehavior#isEnabled(Component component) currently returns true
by default. Better would be:

       public boolean isEnabled(Component component)
       {
               return component.isEnabled();
       }

Behaviors should be ignored when a component is not visible, but some
components like TextFields for instance, can be disabled but still
visible. A concrete case I have here is a disabled textfield with a
datapicker attached, and the datepicker is still visible and worse,
when you use it, you can change the value in the textfield.


See also http://www.nabble.com/AbstractBehavior-isEnabled%28Component-component%29-tf3949139.html
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-20 10:53:46.618,,,no_permission,,,,,,,,,,,201706,,,Mon Jun 25 16:12:03 UTC 2007,,,,,,0|i0ki8f:,117771,,,,,,,,"20/Jun/07 10:53;thrantal;This seems to have a bit surprising side effect when leaving from the page: we're overriding Component.isEnabled() to check something from session, but because AbstractBehavior.isEnabled() is called when detaching and _after_ session is already gone from the thread local, and it now delegates to Component.isEnabled(), this happens:


java.lang.NullPointerException  // because data in session is now not available
	at my.project.MyComponent.isEnabled(MyComponent.java:41)
	at org.apache.wicket.behavior.AbstractBehavior.isEnabled(AbstractBehavior.java:157)
	at org.apache.wicket.Component.isBehaviorAccepted(Component.java:3124)
	at org.apache.wicket.Component.detachBehaviors(Component.java:938)
	at org.apache.wicket.Component.detachModels(Component.java:964)
	at org.apache.wicket.Component.detach(Component.java:906)
	at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
	at org.apache.wicket.Component.detach(Component.java:910)
	at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
	at org.apache.wicket.Component.detach(Component.java:910)
	at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
	at org.apache.wicket.Component.detach(Component.java:910)
	at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
	at org.apache.wicket.Component.detach(Component.java:910)
	at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
	at org.apache.wicket.Component.detach(Component.java:910)
	at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
	at org.apache.wicket.Component.detach(Component.java:910)
	at org.apache.wicket.request.target.component.PageRequestTarget.detach(PageRequestTarget.java:81)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:911)
","20/Jun/07 16:07;ehillenius;That's unfortunate Timo. But I already left a comment in detachBehaviors that imho we should *always* detach behaviors, no matter what. We shouldn't want to get into situations where undetached models and behaviors can be lingering around just because of a mistake in the business logic, and I also think that this current method of detaching is more expensive than it should be. And then there are the side effects. So what I'm about to commit now is:

	public final void detachBehaviors()
	{
		if (behaviors != null)
		{
			for (Iterator i = behaviors.iterator(); i.hasNext();)
			{
				IBehavior behavior = (IBehavior)i.next();

				// Always detach models, 'accepted' or not. Otherwise, if they
				// are accepted during render, but not here - something can go
				// undetached, and calling isEnabled can also lead to nasty side
				// effects. See for instance Timo's comment on
				// http://issues.apache.org/jira/browse/WICKET-673
				behavior.detach(this);

				if (behavior.isTemporary())
				{
					i.remove();
				}
			}
		}
	}

That should work for you, right?","20/Jun/07 17:04;ehillenius;I committed that change. Timo, can you please test and report whether your problems are fixed now? Thanks.","21/Jun/07 12:31;jcompagner;this:

ava.lang.NullPointerException // because data in session is now not available
at my.project.MyComponent.isEnabled(MyComponent.java:41)
at org.apache.wicket.behavior.AbstractBehavior.isEnabled(AbstractBehavior.java:157)
at org.apache.wicket.Component.isBehaviorAccepted(Component.java:3124)
at org.apache.wicket.Component.detachBehaviors(Component.java:938)
at org.apache.wicket.Component.detachModels(Component.java:964)
at org.apache.wicket.Component.detach(Component.java:906)
at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
at org.apache.wicket.Component.detach(Component.java:910)
at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
at org.apache.wicket.Component.detach(Component.java:910)
at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
at org.apache.wicket.Component.detach(Component.java:910)
at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
at org.apache.wicket.Component.detach(Component.java:910)
at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
at org.apache.wicket.Component.detach(Component.java:910)
at org.apache.wicket.MarkupContainer.detachChildren(MarkupContainer.java:1431)
at org.apache.wicket.Component.detach(Component.java:910)
at org.apache.wicket.request.target.component.PageRequestTarget.detach(PageRequestTarget.java:81)
at org.apache.wicket.RequestCycle.detach(RequestCycle.java:911) 

can't be because Session.get() doesn't work anymore!

the session is still in the thread local at that point because we are just in the the RequestCycle.detach method
and the Session.unset() is called after the RC.detach() method is finished.
So what else is null at your place?


","25/Jun/07 10:07;thrantal;Johan: You're right. In fact the code works, only the unit test (using WicketTester) fails after this change.

Eelco: At least with the most recent snapshot the code works when deployed. For the unit test, we still have to do null check for the object that we get from the session. It's a totally acceptable workaround for us.

So this seems to go to the long WicketTester bug / feature list.",25/Jun/07 16:12;ehillenius;It was a good idea to detach there anyway :),,,,,,,,,,,,,,,,,,
[PATCH] remove XX in firefox and palette ,WICKET-667,12371901,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vincent.demay@anyware-tech.com,vincent.demay@anyware-tech.com,18/Jun/07 17:22,25/Jun/07 13:47,13/Mar/19 23:15,25/Jun/07 13:47,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-extensions,,,,0,,,,,,,,I know it is a firefox bug but we can workaround (at least into palette) this with the attach patch,,,,,,,,,,,,,,,,,,,18/Jun/07 17:23;vincent.demay@anyware-tech.com;paletteXX.patch.txt;https://issues.apache.org/jira/secure/attachment/12360051/paletteXX.patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201700,,,2007-06-18 17:22:42.0,,,,,,0|i0ki8v:,117773,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when using DatePicker with DateTextField,WICKET-629,12371278,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,tschafer@hotmail.com,tschafer@hotmail.com,08/Jun/07 19:45,24/Jun/07 21:23,13/Mar/19 23:15,24/Jun/07 21:23,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-extensions,,,,0,,,,,,,,"form.add(new org.apache.wicket.extensions.markup.html.form.DateTextField(""shipDate"").add(new DatePicker()));
<input type=""text"" wicket:id=""shipDate"" id=""shipDate"" size=""10"" /><br/>

WicketMessage: Exception in rendering component: [MarkupContainer [Component id = -header, page = kls.wicket.page.hp.demo.DemoBookingPage, path = 38:-header.HtmlHeaderContainer, isVisible = true, isVersioned = true]]Root cause:java.lang.NullPointerException     at org.apache.wicket.extensions.markup.html.form.DateTextField.getTextFormat(DateTextField.java:166)     at org.apache.wicket.extensions.yui.calendar.DatePicker.getDatePattern(DatePicker.java:394)     at org.apache.wicket.extensions.yui.calendar.DatePicker.renderHead(DatePicker.java:149)     at org.apache.wicket.Component.renderHead(Component.java:2170)     at org.apache.wicket.markup.html.internal.HtmlHeaderContainer$1.component(HtmlHeaderContainer.java:221)     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:820)     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:835)     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:860)     at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.renderHeaderSections(HtmlHeaderContainer.java:212)     at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.onComponentTagBody(HtmlHeaderContainer.java:146)     at org.apache.wicket.Component.renderComponent(Component.java:2092)     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1294)     at org.apache.wicket.Component.render(Component.java:1919)     at org.apache.wicket.Component.render(Component.java:1882)     at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:223)     at org.apache.wicket.markup.resolver.HtmlHeaderResolver.resolve(HtmlHeaderResolver.java:81)     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1206)     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1311)     at org.apache.wicket.Page.onRender(Page.java:1422)     at org.apache.wicket.Component.render(Component.java:1919)     at org.apache.wicket.Page.renderPage(Page.java:927)     at org.apache.wicket.protocol.http.WebRequestCycle.redirectTo(WebRequestCycle.java:165)     at org.apache.wicket.request.target.component.PageRequestTarget.respond(PageRequestTarget.java:59)     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1053)     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1123)     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1192)     at org.apache.wicket.RequestCycle.request(RequestCycle.java:510)     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:255)     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:125)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)     at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:228)     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216)     at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)     at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:283)     at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)     at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)     at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)     at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:686)     at java.lang.Thread.run(Unknown Source)Complete stack:org.apache.wicket.WicketRuntimeException: Exception in rendering component: [MarkupContainer [Component id = -header, page = kls.wicket.page.hp.demo.DemoBookingPage, path = 38:-header.HtmlHeaderContainer, isVisible = true, isVersioned = true]]     at org.apache.wicket.Component.renderComponent(Component.java:2119)     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1294)     at org.apache.wicket.Component.render(Component.java:1919)     at org.apache.wicket.Component.render(Component.java:1882)     at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:223)     at org.apache.wicket.markup.resolver.HtmlHeaderResolver.resolve(HtmlHeaderResolver.java:81)     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1206)     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1311)     at org.apache.wicket.Page.onRender(Page.java:1422)     at org.apache.wicket.Component.render(Component.java:1919)     at org.apache.wicket.Page.renderPage(Page.java:927)     at org.apache.wicket.protocol.http.WebRequestCycle.redirectTo(WebRequestCycle.java:165)     at org.apache.wicket.request.target.component.PageRequestTarget.respond(PageRequestTarget.java:59)     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1053)     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1123)     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1192)     at org.apache.wicket.RequestCycle.request(RequestCycle.java:510)     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:255)
",Using SNAPSHOT from 2007-06-08,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201665,,,2007-06-08 19:45:46.0,,,,,,0|i0kiav:,117782,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JavaScript complains if an AjaxButton has the name ""submit""",WICKET-684,12372224,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,22/Jun/07 15:47,22/Jun/07 15:48,13/Mar/19 23:15,22/Jun/07 15:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"When using an AjaxButton (former AjaxSubmitButton) with id ""submit"", the generated name attribute on the HTML tag is ""submit"" and it causes problems when trying to submit the form, because submit is already a function.  There is code to handle that in FormComponent, but sadly fieldName.equals(""submit"") does not return true because PrependingStringBuffer.equals() is not implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201717,,,2007-06-22 15:47:48.0,,,,,,0|i0ki87:,117770,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page constructed twice when a BookmarkableLink has PopupSettings,WICKET-409,12365315,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,weazelb0y,weazelb0y,20/Mar/07 02:07,15/Jun/07 00:18,13/Mar/19 23:15,15/Jun/07 00:18,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"If PopupSettings are set on a BookmarkableLink the target Class of the BookmarkableLink is constructed twice if the Link is from a super class. Here is an example of how to reproduce with the examples.

wicket.examples.WicketExamplePage add after line 53...

BookmarkablePageLink link = new BookmarkablePageLink(""link"", HelloWorld.class);
link.setPopupSettings(new PopupSettings());
add(link);

wicket.examples.helloworld.HelloWorld.html add...

<a wicket:id=""link"">popup link</a>

Then in HelloWorld's constructor set a breakpoint and you will see it being called twice.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 22:27:32.983,,,no_permission,,,,,,,,,,,201475,,,Fri Jun 15 00:18:34 UTC 2007,,,,,,0|i0kixr:,117885,,,,,,,,10/Jun/07 22:27;almaw;Should verify this is fixed in 1.3.x,15/Jun/07 00:18;almaw;This doesn't happen in 1.3.x.,,,,,,,,,,,,,,,,,,,,,,
Header Contribution in ModalWindow doesn't work properly,WICKET-583,12369900,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,tohkawa,tohkawa,22/May/07 00:25,14/Jun/07 14:47,13/Mar/19 23:15,10/Jun/07 21:32,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,1,,,,,,,,"Defining some styles in ModalWIndow.

The styles doesn't applied when I open the wIndow first time, but when I close and reopen it, it works.

Please refer the testcase.
",,,,,,,,,,,,,,,,,,,22/May/07 00:26;tohkawa;wickettest.zip;https://issues.apache.org/jira/secure/attachment/12357822/wickettest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201627,,,Tue May 22 00:26:20 UTC 2007,,,,,,0|i0kign:,117808,,,,,,,,22/May/07 00:26;tohkawa;testcase for this issue,,,,,,,,,,,,,,,,,,,,,,,
"Some components miss localization (NavigatorLabel, Palette)",WICKET-373,12364536,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,tdrencak,tdrencak,09/Mar/07 08:12,14/Jun/07 14:47,13/Mar/19 23:15,13/Jun/07 00:58,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-extensions,,,,1,,,,,,,,"wicket.extensions.markup.html.repeater.data.table.NavigatorLabel should be localized. Now there's hard coded string Showing xxx to yyy of zzz

wicket.extensions.markup.html.form.palette.Palette - method newAvailableHeader and newSelectedHeader. It think it should be better to use localized model instead of hardcoded strings ""Available"" and ""Selected""",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-14 22:11:10.719,,,no_permission,,,,,,,,,,,201441,,,Wed Jun 13 00:58:24 UTC 2007,,,,,,0|i0kj0v:,117899,,,,,,,,"14/Mar/07 22:11;jbq;Your contribution is more than welcome, can you provide a patch?","28/Mar/07 14:00;hszillat;I made a change to the NavigatorLabel-code giving me the localization. I'm using the keys ""datatable.navigator.showing"", ""datatable.navigator.to"" and ""datatable.navigator.of"", trying to be (somewhat) in-sync to ""datatable.no-records-found"".

Hope it helps someone...

This is the patch Subversion created for me:

Index: NavigatorLabel.java
===================================================================
--- NavigatorLabel.java	(revision 523297)
+++ NavigatorLabel.java	(working copy)
@@ -1,20 +1,19 @@
 /*
- * $Id$
- * $Revision$
- * $Date$
- *
- * ====================================================================
- * Licensed under the Apache License, Version 2.0 (the ""License"");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *  http://www.apache.org/licenses/LICENSE-2.0
- *
+ * $Id$ $Revision:
+ * 458267 $ $Date$
+ * 
+ * ==================================================================== Licensed
+ * under the Apache License, Version 2.0 (the ""License""); you may not use this
+ * file except in compliance with the License. You may obtain a copy of the
+ * License at
+ * 
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * 
  * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an ""AS IS"" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
+ * distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT
+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+ * License for the specific language governing permissions and limitations under
+ * the License.
  */
 package wicket.extensions.markup.html.repeater.data.table;
 
@@ -60,7 +59,15 @@
 					to = 0;
 				}
 
-				return new String(""Showing "" + from + "" to "" + to + "" of "" + of);
+				String showingString = component.getLocalizer().getString(
+						""datatable.navigator.showing"", component, ""Showing"");
+				String toString = component.getLocalizer().getString(""datatable.navigator.to"",
+						component, ""to"");
+				String ofString = component.getLocalizer().getString(""datatable.navigator.of"",
+						component, ""of"");
+
+				return new String(showingString + "" "" + from + "" "" + toString + "" "" + to + "" ""
+						+ ofString + "" "" + of);
 			}
 		});
 	}",10/Jun/07 22:47;almaw;Get this trivial fix in for beta3,"13/Jun/07 00:54;almaw;Fixed properly for NavigatorLabel in r546689 and r546690.

Override with something like: NavigatorLabel=Showing ${from} to ${to} of ${of}","13/Jun/07 00:58;almaw;Palette fixed in r546691.
Resource keys are ""palette.available"" and ""palette.selected"".",,,,,,,,,,,,,,,,,,,
[Patch] AjaxServerAndClientTimeFilter either throws an exception or displays a wrong text,WICKET-341,12363879,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,bendis,bendis,01/Mar/07 13:31,14/Jun/07 14:47,13/Mar/19 23:15,13/Jun/07 01:11,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"When IResourceSettings.getThrowExceptionOnMissingResource() is true (the default value), the AjaxServerAndClientTimeFilter throws MissingResourceException instead of displaying a default message ""Server parsetime: X, Client parsetime: Y"".

Moreover, when ""ServerAndClientTimeFilter.statustext"" and ""ajax.ServerAndClientTimeFilter.statustext"" resource keys are defined, it does not throw the exception, but a wrong message is displayed --- ${servertime} and ${clienttime} variables in the resource string are not interpolated.

The attached patch fixes both bugs.",,,,,,,,,,,,,,,,,,,01/Mar/07 13:32;bendis;AjaxServerAndClientTimeFilter.patch;https://issues.apache.org/jira/secure/attachment/12352332/AjaxServerAndClientTimeFilter.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-10 22:46:14.134,,,no_permission,,,,,,,,,,,201410,,,Wed Jun 13 01:11:58 UTC 2007,,,,,,0|i0kj3j:,117911,,,,,,,,10/Jun/07 22:46;almaw;Need to make sure this isn't an issue for 1.3,13/Jun/07 01:11;almaw;Fixed in r546695.,,,,,,,,,,,,,,,,,,,,,,
header contributions fail on <error-pages>,WICKET-610,12370750,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,pete,pete,02/Jun/07 10:54,14/Jun/07 14:46,13/Mar/19 23:15,13/Jun/07 00:31,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"if have the following in web.xml:

	<error-page>
		<error-code>404</error-code>
		<location>/404</location>
	</error-page>

when I type in some intentionally stupid url like:

  http://localhost/myapp/non-existent-page

the error page will properly show up...

however, the header contributions contain wrong paths, e.g.:

  <wicket:link>
    <link rel=""stylesheet"" type=""text/css"" href=""BasePage.css""></link>
  </wicket:link>

will result in:

  <link href=""404/resources/mysite.pages.BasePage/BasePage_de.css"" rel=""stylesheet"" type=""text/css""></link>

however, this is wrong (path contains a ""404/"" ) as it should be:

  <link href=""resources/mysite.pages.BasePage/BasePage_de.css"" rel=""stylesheet"" type=""text/css""></link>

so, on error pages, resources are not usable because the error page path is appended at the beginning...
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 22:03:58.505,,,no_permission,,,,,,,,,,,201648,,,Wed Jun 13 00:31:21 UTC 2007,,,,,,0|i0kidj:,117794,,,,,,,,"02/Jun/07 10:57;pete;Also, I did _not_ forget to try this:

public class Error404Page extends MainTemplate
{
  @Override
  public boolean isErrorPage()
  {
    return true;
  }
}

however, the problem remains the same :-(",10/Jun/07 22:03;almaw;Which version of Wicket are you using?,10/Jun/07 22:30;pete;wicket 1.3 trunk,"13/Jun/07 00:31;almaw;Fixed in r546685, at least for filter usage.",,,,,,,,,,,,,,,,,,,,
PackageRequestTargetUrlCodingStrategy should interrupts the cycle and sends a 404 when a page/class cannot be found.,WICKET-293,12363097,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,sbailliez,sbailliez,18/Feb/07 12:56,10/Jun/07 22:31,13/Mar/19 23:15,10/Jun/07 22:31,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"
Using PackageRequestTargetUrlCodingStrategy and manually hacking the url in the browser will throw up a RuntimeException if it cannot load a corresponding page class. Same could happen if the bookmarkable page does not exist anymore, etc... see stacktrace below.

The expected behavior is to interrupt the cycle and sends a 404.

{noformat}
wicket.WicketRuntimeException: Unable to load class with name: com.mycompany.wicket.pages.xyzw
     at wicket.application.DefaultClassResolver.resolveClass(DefaultClassResolver.java:70)
     at wicket.request.target.coding.PackageRequestTargetUrlCodingStrategy.decode(PackageRequestTargetUrlCodingStrategy.java:80)
     at wicket.protocol.http.request.WebRequestCodingStrategy.targetForRequest(WebRequestCodingStrategy.java:363)
     at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.targetForRequest(CryptedUrlWebRequestCodingStrategy.java:154)
     at wicket.request.compound.DefaultRequestTargetResolverStrategy.resolve(DefaultRequestTargetResolverStrategy.java:84)
     at wicket.request.compound.AbstractCompoundRequestCycleProcessor.resolve(AbstractCompoundRequestCycleProcessor.java:47)
     at wicket.RequestCycle.step(RequestCycle.java:1008)
     at wicket.RequestCycle.steps(RequestCycle.java:1100)
     at wicket.RequestCycle.request(RequestCycle.java:454)
     at wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:243)
     at wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:122)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-19 00:29:45.516,,,no_permission,,,,,,,,,,,201365,,,Sun Jun 10 22:31:37 UTC 2007,,,,,,0|i0kj6v:,117926,,,,,,,,"19/Feb/07 00:29;ehillenius;Yep, good point. We should log the try but nothing much more than that (imo we shouldn't even log the stack trace). And then send that 404.
",12/May/07 14:08;jdonnerstag;fixed,22/May/07 14:59;almaw;See also WICKET-554.,10/Jun/07 20:39;jbq;I don't like the fix as any error during decode() is silently trapped.  When a 404 needs to be sent decode() should handle the case properly and just return null.  We should not catch any exception assuming it means decode() did not find an existing resource.,"10/Jun/07 22:31;jbq;Should be properly fixed now, if there are other cases where we should return 404 status code, unit tests should be first updated to cover them.",,,,,,,,,,,,,,,,,,,
authorization and authentication examples throw exceptions,WICKET-514,12368247,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jdonnerstag,jdonnerstag,28/Apr/07 09:03,10/Jun/07 16:35,13/Mar/19 23:15,28/Apr/07 13:57,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,wicket-examples,,,0,,,,,,,,quite some examples are broken including authorization and authentication which throw exceptions,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-28 13:57:41.594,,,no_permission,,,,,,,,,,,201566,,,Sat Apr 28 13:57:41 UTC 2007,,,,,,0|i0kio7:,117842,,,,,,,,28/Apr/07 13:57;jbq;See r533318,,,,,,,,,,,,,,,,,,,,,,,
DiffUtil overwrites files when system property wicket.replace.expected.results=false,WICKET-299,12363176,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,19/Feb/07 22:10,10/Jun/07 16:34,13/Mar/19 23:15,19/Feb/07 22:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201371,,,2007-02-19 22:10:05.0,,,,,,0|i0kj6f:,117924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot execute tests from within wicket-parent,WICKET-284,12362681,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,13/Feb/07 12:34,10/Jun/07 16:34,13/Mar/19 23:15,21/Feb/07 15:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,,,,,0,,,,,,,,"{noformat}
$ cd wicket-1.x/wicket-parent
$ mvn -Pjdk1.4 test
...
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] There are test failures.
[INFO] ------------------------------------------------------------------------
{noformat}

If you look at wicket-examples/target/surefire-reports/wicket.examples.helloworld.HelloWorldTest.txt (for example), you see that Jetty is not launched from within the right directory (current working directory remains *wicket-parent*):

{noformat}
java.io.FileNotFoundException: src/main/webapp
	at org.mortbay.jetty.webapp.WebAppContext.resolveWebApp(WebAppContext.java:896)
	at org.mortbay.jetty.webapp.WebAppContext.getWebInf(WebAppContext.java:746)
	at org.mortbay.jetty.webapp.WebInfConfiguration.configureClassLoader(WebInfConfiguration.java:62)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:453)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:38)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:119)
	at org.mortbay.jetty.Server.doStart(Server.java:210)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:38)
	at nl.openedge.util.jetty.JettyDecorator.setUp(JettyDecorator.java:123)
	at junit.extensions.TestSetup$1.protect(TestSetup.java:18)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.extensions.TestSetup.run(TestSetup.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.battery.JUnitBattery.executeJUnit(JUnitBattery.java:242)
	at org.apache.maven.surefire.battery.JUnitBattery.execute(JUnitBattery.java:216)
	at org.apache.maven.surefire.Surefire.executeBattery(Surefire.java:215)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:163)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.SurefireBooter.runTestsInProcess(SurefireBooter.java:313)
	at org.apache.maven.surefire.SurefireBooter.run(SurefireBooter.java:221)
	at org.apache.maven.test.SurefirePlugin.execute(SurefirePlugin.java:371)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201356,,,2007-02-13 12:34:57.0,,,,,,0|i0kj7z:,117931,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlPullParser does not respect the XML NCName syntax,WICKET-350,12364023,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,03/Mar/07 14:14,10/Jun/07 16:32,13/Mar/19 23:15,03/Mar/07 14:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"This simple test fails:

parser.parse(""<filter-mapping>"");
XmlTag tag = (XmlTag)parser.nextTag();
assertEquals(""filter-mapping"", tag.getName());

tag.getName() returns ""filter"".",,,,,,,,,,WICKET-315,,,,,,,,,03/Mar/07 14:38;jbq;20070303-wicket-1.x-WICKET-350-XmlPullParser.txt;https://issues.apache.org/jira/secure/attachment/12352506/20070303-wicket-1.x-WICKET-350-XmlPullParser.txt,03/Mar/07 14:15;jbq;20070303-wicket-1.x-WICKET-350-XmlPullParser.txt;https://issues.apache.org/jira/secure/attachment/12352504/20070303-wicket-1.x-WICKET-350-XmlPullParser.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-03-03 14:28:31.09,,,no_permission,,,,,,,,,,,201419,,,Sun Mar 04 08:09:39 UTC 2007,,,,,,0|i0kj2f:,117906,,,,,,,,03/Mar/07 14:28;jdonnerstag;Fixed in 2.0,"03/Mar/07 14:38;jbq;Updated patch, NCNameChar does not have the "":"" sign

See http://www.w3.org/TR/REC-xml-names/#NT-QName",03/Mar/07 14:47;jdonnerstag;XML_NAME must not contain the colon,"03/Mar/07 15:04;jbq;Juergen, why do you close the issue so quickly?  It's not applied to branch 1.x, and its' not even fixed properly in trunk.  Did you see that I attached a patch and that I assigned this issue to myself?  There is not only the hyphen, there is also the dot that is missing.  And naming it VARIABLE_NAME2 is very dubious.","04/Mar/07 08:09;jdonnerstag;It is just resolved in 2.0 and the changes for 1.x have been committed at the same moment. 
The dot: you'll find that the xml parser is not a general purpose xml parser complying to all details of xml. It doesn't have to. It just implements what is sufficient for Wicket. If only if there is a real need to implement an additional detail, than we'll do it. The dot, though in the spec, is nowhere used. So why bother and implement",,,,,,,,,,,,,,,,,,,
Properly decode URLs,WICKET-358,12364128,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,05/Mar/07 12:30,10/Jun/07 16:32,13/Mar/19 23:15,06/Mar/07 10:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"There are places where Wicket decodes an URL and builds a Map of parameters:
* Form.FormDispatchRequest(Request, String)
* WebRequestWithCryptedUrl(HttpServletRequest) (deprecated class)
* MockHttpServletRequest
* AutoLinkResolver
* PageParameters(String, String)
* CryptedUrlWebRequestCodingStrategy

Sometimes, String arrays are not properly handled.  Sometimes the parameters are not URL-decoded.  Sometimes the empty values are not properly handled.  The idea is to remove duplicate code and provide a centralized piece of code to decode an URL.",,,,,,,,,,,,,,,,,,,05/Mar/07 13:00;jbq;20070305-wicket-1.x-decode-request-parameters.txt;https://issues.apache.org/jira/secure/attachment/12352614/20070305-wicket-1.x-decode-request-parameters.txt,05/Mar/07 12:46;jbq;20070305-wicket-1.x-decode-request-parameters.txt;https://issues.apache.org/jira/secure/attachment/12352612/20070305-wicket-1.x-decode-request-parameters.txt,05/Mar/07 12:33;jbq;20070305-wicket-1.x-decode-request-parameters.txt;https://issues.apache.org/jira/secure/attachment/12352611/20070305-wicket-1.x-decode-request-parameters.txt,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-03-06 07:18:33.408,,,no_permission,,,,,,,,,,,201427,,,Tue Mar 06 09:21:59 UTC 2007,,,,,,0|i0kj1z:,117904,,,,,,,,"05/Mar/07 12:46;jbq;Also change CryptedUrlWebRequestCodingStrategy, and deprecate PageParameters(String, String) which is meant to be used for decoding URL parameters.",05/Mar/07 13:00;jbq;Handle empty values correctly,"06/Mar/07 07:18;jcompagner;what about BookmarkablePageRequestTargetUrlCodingStrategy.appendParameters(AppendingStringBuffer url, Map parameters)
where we call String escapedValue = urlEncode(entry.getValue().toString()); (also done in QueryStringUrlCodingStrategy)
","06/Mar/07 08:34;jbq;Johan: this issue is only about decoding an URL into a ValueMap.  But thanks for pointing me to BookmarkablePageRequestTargetUrlCodingStrategy, actually there is yet another decoding method in AbstractRequestTargetUrlCodingStrategy.decodeParameters(String, Map) that uses slashes instead of ampersand and equal signs.  However it seems to properly handle URL decoding and String arrays, and because of the slashes it is too specific to merge it with another existing method.","06/Mar/07 09:21;jbq;Done in 1.x, need to port to trunk",,,,,,,,,,,,,,,,,,,
[Patch] Unexpected NPE in MapVariableInterpolator,WICKET-340,12363875,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,bendis,bendis,01/Mar/07 13:17,10/Jun/07 16:32,13/Mar/19 23:15,06/Mar/07 11:37,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"When MapVariableInterpolator interpolates a string that contains variables missing in the variable map, it throws a NPE even if exceptionOnNullVarValue is set to false. The bug is in the getValue method - toString() is invoken directly on tha value returned from the map.

A trivial patch is attached.",,,,,,,,,,,,,,,,,,,01/Mar/07 13:19;bendis;MapVariableInterpolator.patch;https://issues.apache.org/jira/secure/attachment/12352329/MapVariableInterpolator.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-06 11:37:58.618,,,no_permission,,,,,,,,,,,201409,,,Tue Mar 06 11:37:58 UTC 2007,,,,,,0|i0kj3r:,117912,,,,,,,,"06/Mar/07 11:37;jbq;Committed, thanks for your patch!",,,,,,,,,,,,,,,,,,,,,,,
IndexedParamUrlCodingStrategy does not decode PageParameters,WICKET-193,12359638,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,korbinian,korbinian,02/Jan/07 14:33,10/Jun/07 16:32,13/Mar/19 23:15,06/Mar/07 14:09,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,,,,,0,,,,,,,,"i noticed that wicket encodes all PageParameters for a page using the IndexedParamUrlCodingStrategy, but never decodes it, so you get the input raw, wich is opposite of the behaviour of BookmarkablePageRequestTargetUrlCodingStrategy where all parameters are encoded and decoded completely - this give great problems in developement as well as the lock to a single strategy in bigger projects as you would need to manually fix it every time you switch.

Furthermore:  ""We should look at the complete encode/decode story anyway. Now it is done in numerous places some like String.replace(""&"", ""&amp;"") and here a decode there a encode. This should all be done for the complete url itself i think in one place (instead per parameter or value)"" - JCompagner
",all,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-02 16:09:53.58,,,no_permission,,,,,,,,,,,201274,,,Tue Jan 02 16:09:53 UTC 2007,,,,,,0|i0kjhj:,117974,,,,,,,,"02/Jan/07 16:09;jbq;I provided a reusable URL encoder class, see in https://issues.apache.org/jira/browse/WICKET-65",,,,,,,,,,,,,,,,,,,,,,,
Detect Content-Type automatically in ResourceStreamRequestTarget,WICKET-356,12364105,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,05/Mar/07 10:19,10/Jun/07 16:29,13/Mar/19 23:15,13/Mar/07 20:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Currently ResourceStreamRequestTarget sets the response Content-Type by getting the value from the IResourceStream, or from the ResourceStreamRequestTarget itself, with a value passed in the constructor.

I propose to remove the deprecated responseType field, remove the deprecated ResourceStreamRequestTarget(IResourceStream, String) constructor and let the configure() method determine the Content-Type automatically.  As a result, IResourceStream instances can return null in getContentType().

Note that currently, when using the one arg constructor (without Content-Type) and when the JDK does not find a mime-type for the current URI, *Content-Type: null* is being written in the response!!!",,,,,,,,,,,,,,,,,,,05/Mar/07 10:19;jbq;20070302-wicket-1.x-ResourceStreamRequestTarget-configure;https://issues.apache.org/jira/secure/attachment/12352585/20070302-wicket-1.x-ResourceStreamRequestTarget-configure,05/Mar/07 10:20;jbq;20070302-wicket-1.x-ResourceStreamRequestTarget-configure.txt;https://issues.apache.org/jira/secure/attachment/12352586/20070302-wicket-1.x-ResourceStreamRequestTarget-configure.txt,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201425,,,Mon Mar 05 10:20:26 UTC 2007,,,,,,0|i0kj27:,117905,,,,,,,,05/Mar/07 10:20;jbq;Better as text/plain,,,,,,,,,,,,,,,,,,,,,,,
Use an uniform behavior for the expiration page,WICKET-364,12364247,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,gregory4662,gregory4662,06/Mar/07 15:01,10/Jun/07 16:29,13/Mar/19 23:15,13/Mar/07 20:46,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"The expiration page does not behave the same according to whether we are in ajax mode or not. 
In case of ajax mode, we get a EmptyRequestTarget in the 'resolve' method of the WebRequestCycleProcessor class. Thus, the ajax response is empty and we get a failure which is muted by default (no window.wicketGlobalFailureHandler defined) while parsing the response in wicket-ajax.js.
In case of a non-bookmarkablepage request, we get a ExpiredPageClassRequestTarget in the 'resolveRenderedPage' method of the AbstractRequestCycleProcessor class. Thus, we have the correct behavior with a redirection to the expired page.
Why not gathering those 2 behaviors throwing a PageExpiredException which would be catched in the 'step' method of the RequestCycle class? Then, the processor  would respond with a redirection to the expired page in both case.",,,,,,,,,,,,,,,,,,,06/Mar/07 15:03;gregory4662;wicket-364.patch;https://issues.apache.org/jira/secure/attachment/12352751/wicket-364.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-07 18:05:48.026,,,no_permission,,,,,,,,,,,201432,,,Tue Mar 13 20:46:16 UTC 2007,,,,,,0|i0kj1r:,117903,,,,,,,,"07/Mar/07 18:05;jbq;Fixed in 1.x, thanks for your patch!",07/Mar/07 23:17;almaw;Should this be marked as closed?,"08/Mar/07 08:36;jbq;As long as trunk is alive, no.",13/Mar/07 20:46;jbq;Won't fix this in trunk.,,,,,,,,,,,,,,,,,,,,
WebRequestCodingStrategy: path mounting and matching,WICKET-294,12363098,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,sbailliez,sbailliez,18/Feb/07 13:29,10/Jun/07 16:29,13/Mar/19 23:15,14/Mar/07 14:19,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Assuming a mount path to ""/p"", it will match /pxyz

Assuming this is the desired behavior of matching (warning), then to avoid this match it should be declared ""/p/"" but it will create urls such as '/app/p//SomePage'. which is wrong.

In the servlet specs,  the mapping syntax '/p' is an exact match, this is not what you want in your case since you're doing path mapping, so the syntax if you want to stick close to the servlet specs should be '/p/*' or if you wan to get close to mod_proxy syntax it would be '/p/'

Note that the examples are also using this wrong mapping declaration. In the example below: both should throw a 404:
http://www.wicket-library.com/wicket-examples/niceurl/my/mounted/packageXXX
http://www.wicket-library.com/wicket-examples/niceurl/my/mounted/Xpackage

",,,,,,,,,,,,,,,,,,,22/Feb/07 22:03;jbq;20070222-wicket-1.x-WebRequestCodingStrategy-path-matching.txt;https://issues.apache.org/jira/secure/attachment/12351839/20070222-wicket-1.x-WebRequestCodingStrategy-path-matching.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-22 20:17:11.658,,,no_permission,,,,,,,,,,,201366,,,Thu Feb 22 22:03:00 UTC 2007,,,,,,0|i0kj6n:,117925,,,,,,,,"22/Feb/07 20:17;jbq;This URL gives a 404:
http://localhost:8080/wicket-examples/niceurl/my/mounted/Xpackage

But you're right this one gives a 500:
http://localhost:8080/wicket-examples/niceurl/my/mounted/packageXXX

I suspect that the code uses something like startsWith(mountPath)",22/Feb/07 22:03;jbq;What about the attached patch?  Can you please test and report?  I created a unit test for this.  However this does not solve the WicketRuntimeException when the class does not exist.,,,,,,,,,,,,,,,,,,,,,,
IBehavior.beforeRender() is never called,WICKET-420,12365760,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,25/Mar/07 23:03,10/Jun/07 16:27,13/Mar/19 23:15,05/Apr/07 22:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"TSSIA, see patch attached",,,,,,,,,,WICKET-419,,,,,,,,,25/Mar/07 23:04;jbq;20070326-wicket-Component-notifyBehaviorsComponentBeforeRender.txt;https://issues.apache.org/jira/secure/attachment/12354177/20070326-wicket-Component-notifyBehaviorsComponentBeforeRender.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201486,,,2007-03-25 23:03:51.0,,,,,,0|i0kiwv:,117881,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow to use <button> in AjaxSubmitLink,WICKET-504,12368078,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,25/Apr/07 23:30,10/Jun/07 16:23,13/Mar/19 23:15,25/Apr/07 23:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201556,,,2007-04-25 23:30:30.0,,,,,,0|i0kiof:,117843,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No java source code in examples,WICKET-319,12363530,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,mhoule,mhoule,23/Feb/07 21:09,10/Jun/07 16:19,13/Mar/19 23:15,08/May/07 20:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,site,,,,0,,,,,,,,"Just grab this  while checking something in example at http://wicketstuff.org/wicket13/ .
When clicking on ""source file"", the pop-up display but you only have html an properties.  There is no java class file.

Thought it was worth letting the administrator know! :)
Marc

","Win XP, firefox 2.0.0.1",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-03 17:21:43.116,,,no_permission,,,,,,,,,,,201388,,,Tue May 08 20:26:38 UTC 2007,,,,,,0|i0kj5b:,117919,,,,,,,,03/May/07 17:21;jbq;Actually this is a major problem because the wicket-examples are pretty useless if the users are not able to view the source code,"08/May/07 20:26;jbq;Added this in jdk-1.5/wicket-examples/pom.xml:

{code:xml}
        <build>
                <plugins>
                        <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-war-plugin</artifactId>
                                <configuration>
                                        <webResources>
                                                <!--+
                                                        | Include Java source code in the examples
                                                        +-->
                                                <resource>
                                                        <directory>${basedir}/src/main/java</directory>
                                                        <targetPath>WEB-INF/classes</targetPath>
                                                        <includes>
                                                                <include>**/*.java</include>
                                                        </includes>
                                                </resource>
                                        </webResources>
                                </configuration>
                        </plugin>
                </plugins>
        </build>
{code}",,,,,,,,,,,,,,,,,,,,,,
src attribute path not processed by wicket for INPUT type=image and any IMG with wicket:message in it,WICKET-444,12366379,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,ptrthomas,ptrthomas,02/Apr/07 09:11,06/Jun/07 14:08,13/Mar/19 23:15,24/May/07 18:24,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"I'm using wicket-1.3.0-incubating-SNAPSHOT.jar Sun, 01 Apr 2007 19:21:01 GMT

Wicket appears to pre-process and modify the value of the SRC attribute in most cases (e.g. IMG tags) so that at run time, the path is absolute path.  This works fine for IMG tags.  So with wicket filter mapped to /app/* and static files in /resources :

The following HTML: <img src=""resources/system-search.png""/>

becomes at runtime: <img src=""/jtrac/resources/system-search.png"">

Problem: 

Ever since 1.3 I noticed that fixing of the SRC attribute was not happening for <input type=image""/> tags.  I worked around this by prepending ""../"" - but obviously this is not a good idea.  For example this is what I am using which works:

<input type=""image"" wicket:id=""deallocate"" src=""../resources/remove.png""/>

What prompted me to raise this JIRA now is that I just switched to the latest SNAPSHOT and I find that any IMG tag that has a ""wicket:message"" attribute also does not get the SRC value ""fixed"".  This used to work in 1.2.X

I have a feeling this is related to the changes made as per https://issues.apache.org/jira/browse/WICKET-440

So to summarize, wicket does not change SRC values to absolute paths for the following tags:

a) any tag with a wicket:message attribute present
b) any <input type=""image""/> tag
",,,,,,,,,,,,,,,WICKET-440,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-29 20:20:29.815,,,no_permission,,,,,,,,,,,49748,,,Wed Jun 06 14:08:37 UTC 2007,,,,,,0|i0kitj:,117866,,,,,,,,"29/Apr/07 20:20;jdonnerstag;I've added a junit test case to the lastest 1.3 snapshot to validate your information.

Wicket prepends the context path to certain attributes (see PrependContextPathHandler). Wicket does not translate relative paths into absolute paths. It simply prepends the context path.

Any tag which has any wicket attribute (wicket:id, wicket:message) gets ignored by PrependContextPathHandler since the assumption is, a component will be attached to it. This is true for wicket:message tags as well, with the difference, that the component is created and attached automatically

My junit test shows that your observation b) is not correct for the reason given above (no wicket:id, no wicket:message).

But you are right, this is a change in the behavior between 1.2.x and 1.3 which has to do with WicketMessageTagHandler which has been re-implemented. I fixed it.
","01/May/07 15:46;ptrthomas;thanks, message attributes work as expected now.","12/May/07 14:26;ptrthomas;Matej - I think this came back in the latest SNAPSHOT.  For img tags having a wicket:message attribute I have to use the relative path ""../resources/foo.gif"" and this was working fine in last weeks SNAPSHOT.","24/May/07 18:24;almaw;An update on this...

Wicket now prepends your paths to make them relative to the context root, so we don't use the context path any more. It will only do this on standard HTML tags that are NOT already Wicket components I.e. if you put a wicket:id attribute in, it won't prepend things for you.

In your example here:
<input type=""image"" wicket:id=""deallocate"" src=""../resources/remove.png""/> 

To make this work, you want to be using an ImageButton component, and provide a ResourceReference for that image in the constructor.

A separate issue is that <img> tags with a wicket:message attribute don't get their src attribute prefixed. It's related, but different. See WICKET-590 for details.","06/Jun/07 14:08;ptrthomas;Al - I really liked the fact that previously you could switch between <input type-=""submit""/> and <input type=""image""/> in the markup without *any* changes to the Java code.

It used to work fine earlier - and I'm just wondering if it is too much to ask to have Wicket work this way.  I can certainly explore the ImageButton component, but so far I've been very productive using resources relative to context-path root, and am also guessing that the alternative would be a little more intimidating for someone new to wicket.

Do let me know!

",,,,,,,,,,,,,,,,,,,
deploy maven snapshots on wicketstuff.org properly,WICKET-283,12362661,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,ehillenius,ehillenius,13/Feb/07 06:24,06/Jun/07 02:39,13/Mar/19 23:15,06/Jun/07 02:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,0,,,,,,,,"Snapshots are currently copied after bamboo builds (if I'm correct) so that they are available for our users from http://wicketstuff.org/maven/repository/. However, it seems that the meta data that is used to determine the last modified date etc for snapshots is not properly changed. See for instance http://wicketstuff.org/maven/repository/org/apache/wicket/wicket-datetime/1.3-incubating-SNAPSHOT/maven-metadata-local.xml:

which says the last update was feb 5, while the timestamp of the snapshot is from feb 13.

This is probably the reason why I never get snapshot updates when I'm trying to build using that repo.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201355,,,Wed Jun 06 02:39:18 UTC 2007,,,,,,0|i0kj87:,117932,,,,,,,,06/Jun/07 02:39;ehillenius;Seems to be ok now,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.extensions.yui.calendar.DateTimeField; doesn't validate,WICKET-522,12368461,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,funkattack,funkattack,02/May/07 13:21,05/Jun/07 19:01,13/Mar/19 23:15,05/Jun/07 19:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-datetime,,,,0,,,,,,,,"Trying to circle in https://issues.apache.org/jira/browse/WICKET-500 this one popped up:
org.apache.wicket.extensions.yui.calendar.DateTimeField; doesn't validate

Down below is a patch of FormInput of wicket-examles that attaches a DateRangeValidator to DateTimeField.
With this patch only the current Date (or maybe not even that) should be valid. But the opposite is true, any Date seem to be accepted by the form.

The stacktrace in the debugger shows that DateValidator.onValidate(IValidateable validatable) is never called,
since validatable.getValue() in:
RangeValidator(AbstractValidator).validate(IValidatable) line: 79	
returns null.

Could it bee that the Validator is validating DateTimeField's value wereas it should validate it's DateTextField value?

mf



Index: src/main/java/org/apache/wicket/examples/forminput/FormInput.java
===================================================================
--- src/main/java/org/apache/wicket/examples/forminput/FormInput.java   (Revision 534415)
+++ src/main/java/org/apache/wicket/examples/forminput/FormInput.java   (Arbeitskopie)
@@ -19,6 +19,7 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.Arrays;
+import java.util.Date;
 import java.util.List;
 import java.util.Locale;
 
@@ -49,6 +50,7 @@
 import org.apache.wicket.util.convert.ConversionException;
 import org.apache.wicket.util.convert.IConverter;
 import org.apache.wicket.util.convert.MaskConverter;
+import org.apache.wicket.validation.validator.DateValidator;
 import org.apache.wicket.validation.validator.NumberValidator;
 
 
@@ -96,7 +98,7 @@
                        add(integerTextField.add(NumberValidator.POSITIVE));
                        add(new RequiredTextField(""doubleProperty"", Double.class));
 
-                       add(new DateTimeField(""dateProperty""));
+                       add(new DateTimeField(""dateProperty"").add(DateValidator.range(new Date(), new Date())));
                        // add(DateTextField.forShortStyle(""dateProperty"").add(new
                        // DatePicker()));
 ","$ svn info
Pfad: .
URL: https://svn.apache.org/repos/asf/incubator/wicket/trunk/jdk-1.5/wicket-examples
Basis des Projektarchivs: https://svn.apache.org/repos/asf
UUID des Projektarchivs: 13f79535-47bb-0310-9956-ffa450edef68
Revision: 534415
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-05 19:01:22.248,,,no_permission,,,,,,,,,,,201574,,,Tue Jun 05 19:01:22 UTC 2007,,,,,,0|i0kin3:,117837,,,,,,,,05/Jun/07 19:01;ehillenius;This should now work. See issue WICKET-500,,,,,,,,,,,,,,,,,,,,,,,
mvn jetty:run; maven-jetty-plugin not configured,WICKET-455,12366849,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,funkattack,funkattack,09/Apr/07 20:11,04/Jun/07 15:33,13/Mar/19 23:15,04/Jun/07 15:33,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-quickstart,,,,0,,,,,,,,maven-jetty-plugin not configured for wicket-quickstart.,,,,,,,,,,,,,,,,,,,10/Apr/07 09:33;jbq;quickstart-pom.txt;https://issues.apache.org/jira/secure/attachment/12355234/quickstart-pom.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-10 09:33:43.84,,,no_permission,,,,,,,,,,,201516,,,Mon Jun 04 15:29:04 UTC 2007,,,,,,0|i0kisv:,117863,,,,,,,,"09/Apr/07 20:17;funkattack;Following svn diff configures the plugin, but leads into another problem, that I havent been able to solve yet.

mvn jetty:run leads to a 
[...]
INFO  - WebApplication             - [QuickStartApplication] Started Wicket in development mode
2007-04-09 22:15:52.214::WARN:  failed default
java.lang.ClassCastException: org.mortbay.jetty.handler.ContextHandler$Context
        at org.mortbay.jetty.servlet.DefaultServlet.init(DefaultServlet.java:130)
        at javax.servlet.GenericServlet.init(GenericServlet.java:211)

[...]

so applying this patch is somewhat little fun.

wicket-1.x/jdk-1.4/wicket-quickstart$ svn diff pom.xml 
Index: pom.xml
===================================================================
--- pom.xml     (Revision 526865)
+++ pom.xml     (Arbeitskopie)
@@ -32,7 +32,14 @@
 
        <name>Wicket Quickstart</name>
        <description>Wicket Quickstart is designed to get you up and coding your Wicket applications within minutes. No more creating your own project and having to download dependencies yourself. This is an all-in-one package allowing you to concentrate on your application, and Quickstart on the project structure.</description>
-
+<build>
+       <plugins>
+               <plugin>
+                       <groupId>org.mortbay.jetty</groupId>
+                       <artifactId>maven-jetty-plugin</artifactId>
+               </plugin>
+       </plugins>
+</build>
        <dependencies>
                <dependency>
                        <groupId>org.apache.wicket</groupId>
","10/Apr/07 09:33;jbq;With this patch, you can use jetty:run but Jetty is removed from the dependencies so you won't be able to run Jetty from Eclipse anymore.  The problem lies in the Jetty6 Maven plugin that makes use of a Jetty's custom WebappClassLoader.  It is possible to fix that, but Wicket is not to blame here, unless we can come up with another idea of providing the Quickstart project.  Quickstart is meant to be run from within Eclipse with the Start class.","20/Apr/07 07:55;jbq;Martin, any comment on this?  I think we can close the issue as INVALID.  But we should probably check that this issue is filed on the Maven bug tracker.","20/Apr/07 08:49;funkattack;Ok, fine with me.
I'll check for the Maven bug tracker.","20/Apr/07 10:35;funkattack;I opened a bugreport at codehaus for this.
http://jira.codehaus.org/browse/MPJETTY-11
","01/Jun/07 14:07;funkattack;As described in the Jetty bug tracker, link given above, this problem should go away when the jetty-plugin is used in the same version as the jetty dependency.
At least for my machine I can confirm this.
So given the current versioning of both in the current parent pom.xml it should be save to aply following two patches:

This allows both to be run using 'mvn jetty:run'
Even debugging as described here:
http://cwiki.apache.org/confluence/display/WICKET/Maven+Jetty+plugin
should work.


 svn diff jdk-1.4/wicket-quickstart/pom.xml -r HEAD
Index: jdk-1.4/wicket-quickstart/pom.xml
===================================================================
--- jdk-1.4/wicket-quickstart/pom.xml   (Revision 543480)
+++ jdk-1.4/wicket-quickstart/pom.xml   (Arbeitskopie)
@@ -55,4 +55,12 @@
                        <artifactId>jetty-management</artifactId>
                </dependency>
        </dependencies>
+       <build>
+               <plugins>
+                       <plugin>
+                               <groupId>org.mortbay.jetty</groupId>
+                               <artifactId>maven-jetty-plugin</artifactId>
+                       </plugin>
+               </plugins>
+       </build>
 </project>

and:
 svn diff jdk-1.5/wicket-examples/pom.xml -r HEAD
Index: jdk-1.5/wicket-examples/pom.xml
===================================================================
--- jdk-1.5/wicket-examples/pom.xml     (Revision 543480)
+++ jdk-1.5/wicket-examples/pom.xml     (Arbeitskopie)
@@ -112,6 +112,10 @@
                                        </webResources>
                                </configuration>
                        </plugin>
+                       <plugin>
+                               <groupId>org.mortbay.jetty</groupId>
+                               <artifactId>maven-jetty-plugin</artifactId>
+                       </plugin>
                </plugins>
        </build>
 </project>
","04/Jun/07 15:29;jbq;I applied your patch and it works.  But AFAICT this is the same patch as the first one you provided in this issue.  So I don't understand why it works now, and not before.",,,,,,,,,,,,,,,,,
RelativePathPrefixHandler and WicketMessageTagHandler conflict,WICKET-590,12370190,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,almaw,almaw,24/May/07 18:23,04/Jun/07 11:42,13/Mar/19 23:15,03/Jun/07 20:01,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"
We have a bit of an issue with IMarkupFilter implementations, in that you can't currently layer two different IComponentResolvers if they both want to alter the same thing.

This is currently an issue for SimplePageTest for testRenderHomePage_7, which is why that's failing.

Specifically, it goes:
<input type=""image""
       src=""test.gif""
       wicket:message=""attr-name:i18n-key"">test 2</input>

Correct behaviour here is:
 - Prepend the src attribute with ""../"" links to make it
   context-relative.
 - Add an attribute ""attr-name"" with the appropriate i18n message.

MarkupParser adds WicketMessageTagHandler is before the RelativePathPrefixHandler, so currently that ""wins"" and resolves the component first. It doesn't get added as a RelativePathPrefixHandler auto-add component, so the behaviour to prefix URLs isn't added, so the src attribute remains ""test.gif"", not ""../test.gif"" and the test fails.

We need to somehow support chaining these things together, but I'm not sure how - it's really not obvious. ",,,,,,,,,,,,,,,WICKET-444,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-03 20:01:53.349,,,no_permission,,,,,,,,,,,201633,,,Mon Jun 04 11:42:14 UTC 2007,,,,,,0|i0kifz:,117805,,,,,,,,03/Jun/07 20:01;jdonnerstag;This problem is not related to IMarkupFilter but IComponentResolver. And what you suggested is not necessary. Auto-added components do execute behaviors added to ComponentTags.,"04/Jun/07 11:42;almaw;Juergen: When you mark bugs fixed, can you please leave at least one of:
 - A comment saying vaguely how it was fixed.
 - A SVN commit with the bug number in the summary.
 - A revision number in the bug for the SVN commit.

And preferably all three. ;-)",,,,,,,,,,,,,,,,,,,,,,
Add global override to disable gzip compression (SAP double-compresses).,WICKET-464,12367073,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,pete,pete,12/Apr/07 16:25,02/Jun/07 14:45,13/Mar/19 23:15,31/May/07 15:17,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"It should be possible to deactivate gzip compression. Sometimes gzip is already handled by a proxy server or gzip raises problems (like I experienced on SAP J2EE Enterprise Server).

Default should be 'on'.

It's always good to have an option.",,,,,,,,,,,,,,,,,,,20/Apr/07 09:21;pete;compress_on_off.txt;https://issues.apache.org/jira/secure/attachment/12355902/compress_on_off.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-12 20:06:30.2,,,no_permission,,,,,,,,,,,201525,,,Sat Jun 02 14:45:11 UTC 2007,,,,,,0|i0kis7:,117860,,,,,,,,"12/Apr/07 20:06;jcompagner;isn't it possible then to switch between CompressedPackageResource and normal PackageResource?
because to have a boolean again that disabled compressing for the compressed package resource...",14/Apr/07 05:47;pete;is that a question?,"14/Apr/07 09:25;jcompagner;comment and question...  :)
for the one that will be looking into this. Because we already have a factory method for this:

ComponentPackageResource.get() maybe this one will fall back to the normal package resource when something is turned on or off
that would be the best fix i guess",17/Apr/07 10:24;pete;I would put it in [boolean CompressedPackageResource#supportsCompression() ]...,"20/Apr/07 09:21;pete;This is my suggestion / contribution for solving the compression issue.

Usage of compression is a resource configuration setting which can be enabled / disabled e.g. in Application#init. Default is 'on' so current users won't be affected and users having problems with gzip (because the server already does it or it causes problems) can disable it.","03/May/07 11:00;pete;Not being able to disable compression makes wicket resources unreadable on a default installation of SAP J2EE Web Application Server. It will by default compress the compressed resource again (which is just stupid) which will result in resource being compressed two times. The browser only decompresses one time and will therfore fail to load the resource.

So, having compression on, will break your application on a default installation of SAP J2EE.

http://en.wikipedia.org/wiki/SAP_Web_Application_Server
","22/May/07 15:59;pete;I really don't want to bug you wicket guys but leaving the compression on will make wicket _ 100% unusable_ on SAP J2EE Server 6.40. The application won't even start as the initial loading of compressed package resources will fail. Having a little switch to enable/disable compression would hurt nobody but make wicket accessible on one more server platform.

I know the server is the problem, not wicket, however there's no fix available for the broken compression so having a switch would be the best solution.

Also, it would be nice to delegate compression to the server instead of doing it natively, as an option.

",24/May/07 20:49;knopp;Definitely needs attention before 1.3 ,"25/May/07 11:27;pete;I can't tell you how glad I am that somebody finds this issue as important as me. This issue is really giving me a serious headache :-(

Thank you so much!!!",31/May/07 15:00;almaw;Need to get this in before RC-1 so we can claim SAP support.,"31/May/07 15:17;almaw;You can now override this in your application init method with:
Application.getResourceSettings().setDisableGZipCompression(true);","02/Jun/07 07:13;martin-g;Just for the record. Here is the way how to disable compression in SAP AS:

Open ConfigTool (/usr/sap/SID/JCXX/j2ee/configtool/configtool.sh) 
Browse the tree: cluster-data -> instance -> services -> http
Here you can change these properties: AlwaysCompressed, CompressedOthers, NeverCompressed, MinimumGZipLength

Regards
Martin","02/Jun/07 14:45;pete;Just to justify the need for a switch (after martins previous post)...

Usually SAP J2EE server is used in a large company structure with with full-time administrators and lots of other web applications (often without wicket) are deployed on the same server. So disabling is not always an option.",,,,,,,,,,,
Handle String array in PageParameters,WICKET-65,12355590,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,jbq,jbq,14/Nov/06 14:08,01/Jun/07 10:13,13/Mar/19 23:15,06/May/07 17:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,1,,,,,,,,"When building PageParameters, it is possible to repeat
 the same parameter name to build a string array, this
 is documented here:
 

http://wicket.sourceforge.net/apidocs/wicket/util/value/ValueMap.html#add(java.lang.String,%20java.lang.String)
 
 However when issuing setResponsePage(MyPage.class,
 params) the newly constructed URL does not honour the
 string array parameter, only the first value is used.
 
 Example:
 
 PageParameters params = new PageParameters();
 params.add(""a"", ""1"");
 params.add(""a"", ""2"");
 
 This builds a parameter that is a String[] with name
 ""a"" and values: [""1"", ""2""].  But the URL shown in the
 browser is: http://server/app?a=1 instead of
 http://server/app?a=1&a=2
 
 Note that in the target page I'm using
 params.getStringArray(""a"") to get the string array.
 
 Please find attached a patch against branch wicket-1.x
 that adresses the URL encoding issue.  The patch also
 refactors the URL encoding logic to have a more readable
 and compact code.

Thanks in advance!",,,,,,,,,,,,,,,WICKET-550,WICKET-539,,,14/Nov/06 14:09;jbq;20061114-wicket-WebRequestCodingStrategy-StringArray;https://issues.apache.org/jira/secure/attachment/12344964/20061114-wicket-WebRequestCodingStrategy-StringArray,04/Jan/07 10:47;jbq;20070104-wicket-1.x-WebRequestCodingStrategy-StringArray;https://issues.apache.org/jira/secure/attachment/12348262/20070104-wicket-1.x-WebRequestCodingStrategy-StringArray,31/Jan/07 11:03;jbq;20070131-wicket-1.x-WebRequestCodingStrategy-StringArray;https://issues.apache.org/jira/secure/attachment/12350011/20070131-wicket-1.x-WebRequestCodingStrategy-StringArray,27/Nov/06 07:43;ehillenius;WebRequestCodingStrategy-StringArray.patch;https://issues.apache.org/jira/secure/attachment/12345811/WebRequestCodingStrategy-StringArray.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2006-11-27 07:43:30.0,,,no_permission,,,,,,,,,,,201151,,,Wed May 09 21:29:43 UTC 2007,,,,,,0|i0kjqv:,118016,,,,,,,,27/Nov/06 07:43;ehillenius;updated version of patch,"27/Nov/06 07:46;ehillenius;In applied the patch (though I had to update it, see new attachement). However, some unit tests fail.

Specifically, we now get links like 
<a href=""/WicketTester/WicketTester?wicket:bookmarkablePage=%3Awicket.markup.html.link.Page1#link1"">Link 1</a>

whereas they should render as:

<a href=""/WicketTester/WicketTester?wicket:bookmarkablePage=:wicket.markup.html.link.Page1#link1"">Link 1</a>

I don't know if other things fail, but this is clearly a patch that should be handled carefully.","27/Nov/06 08:53;jbq;Dear Eelco,

Thanks for updating, the code moves often so the patch quickly becomes obsolete.  Yes I also noticed that unit tests fail.  IMO the unit tests should be fixed, as the "":"" should be properly URL-encoded.  I'm using this patch since 6 months without further problem, as the web browser takes care to properly decode the key/value pairs.","27/Nov/06 19:17;ehillenius;Ok, fair enough. I'll try to test more tonight. Can you confirm this works with multiple browsers/ platforms too? Cheers.","27/Nov/06 22:24;jbq;This patch is used in a production environment of several Wicket web applications used in an important project, used by a wide variety of systems and web browsers.  The change to the URL-encoding of bookmarkable pages has no effect, apart from the failing unit tests.","31/Jan/07 06:24;ehillenius;Al, you being the master of WebRequestCodingStrategy lately, could you look at this please?",31/Jan/07 11:03;jbq;Here's yet-another-uptodate patch.  Please do something before the patch becomes obsolete again ;-)  Life is so hard at maintaining the patches...,"31/Jan/07 19:25;ehillenius;I just tried that patch, but unfortunately it results in 20 test failures. It looks like the page map isn't taking into account properly. Anyway, as this applies to what currently seems to be the fastest changing class in the universe, I think Al should look at it, so that he can see if/ how it conflicts with his recent changes.","12/Feb/07 13:39;almaw;One for you, JB.","11/Mar/07 06:17;ehillenius;JBQ, is this still being worked on?","11/Mar/07 10:33;jbq;When time permits, yes I'll do it.  This goes together with a full review of URL encoding throughout Wicket, so it's a big task.","09/May/07 15:10;almaw;This issue wasn't fixed, due to how WebRequestCodingStrategy was pulling things to construct its array.
I've enabled the unit test for this bug, and fixed the underlying issue.","09/May/07 21:29;jbq;Thanks a lot for taking care of this, I may have overlooked this and was too confident in the fix.",,,,,,,,,,,
getClientInfo throws ClassCastException when Javascript is Disabled ,WICKET-600,12370502,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,weazelb0y,weazelb0y,30/May/07 05:21,30/May/07 06:15,13/Mar/19 23:15,30/May/07 06:15,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"I created a page with the following in the constructor:

WebClientInfo info = (WebClientInfo) Session.get().getClientInfo();
		TimeZone zone = info.getProperties().getTimeZone();

If I have javascript disabled in firefox I receive the following error.

Caused by: java.lang.ClassCastException: [Ljava.lang.String; cannot be cast to java.lang.String
	at org.apache.wicket.markup.html.pages.BrowserInfoPage.<init>(BrowserInfoPage.java:505)
	... 37 more",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-30 06:15:07.275,,,no_permission,,,,,,,,,,,201640,,,Wed May 30 06:15:07 UTC 2007,,,,,,0|i0kif3:,117801,,,,,,,,30/May/07 06:15;ehillenius;Good catch!,,,,,,,,,,,,,,,,,,,,,,,
URL mounting doesn't work well together with stateless pages,WICKET-526,12368571,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,03/May/07 16:14,29/May/07 15:32,13/Mar/19 23:15,29/May/07 00:37,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"See the stateless example. Uncomment the mount line in StatelessApplication#init, and test the form in the example. When it is not mounted, it displays feebback, when it's mounted it doesn't.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-24 18:11:40.715,,,no_permission,,,,,,,,,,,201577,,,Tue May 29 15:32:47 UTC 2007,,,,,,0|i0kim7:,117833,,,,,,,,"03/May/07 16:39;ehillenius;Not only feedback, anything that depends temporary state will break with redirects ",24/May/07 18:11;almaw;Looks like it needs fixing for 1.3.0.,"28/May/07 16:21;ehillenius;There is currently even more broken. If you do uncomment that line and test the stateless example, and submit the form in the 'other' stateless page, you'll see that the reference to the stylesheet is wrong as well. The proper one (as it is before the form submit) is:
<link href=""../../style.css"" rel=""stylesheet"" type=""text/css""/> and the URL to the page is: http://localhost:8080/wicket-examples/stateless/public/StatelessPage

After the commit this is:
<link href=""../../../../../../../../style.css"" rel=""stylesheet"" type=""text/css""/> for URL:
http://localhost:8080/wicket-examples/stateless/public/StatelessPage/wicket:interface/%3A0%3Astatelessform%3A%3AIFormSubmitListener%3A%3A


","28/May/07 21:55;ehillenius;Ok, that last issue was unrelated and is fixed now.","29/May/07 00:37;ehillenius;Turned out to have nothing to do with state, but rather with the way mounts were handled (package mounts ignored the interface parameter that is used for requests to stateless pages).","29/May/07 15:32;ehillenius;It was actually only partially a duplicate of WICKET-497, as part of the problem was that the package mounter didn't look for the interface argument to decide what request target to return.",,,,,,,,,,,,,,,,,,
"Editing an AjaxEditableLabel, going to a new page, clicking the back button and editing the label again makes the page expire.",WICKET-377,12364656,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,behlma,behlma,10/Mar/07 20:58,29/May/07 12:12,13/Mar/19 23:15,29/May/07 12:12,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-extensions,,,,0,,,,,,,,"Hi there,
basically I have a Listview that produces AjaxEditableLabels. Changing the label works fine. However, if you go on to a new page and then click the back button and try to edit that Label again, you get a ""Page Expired"" error message.

Quickstart will follow",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-24 17:04:42.943,,,no_permission,,,,,,,,,,,201444,,,Tue May 29 12:12:10 UTC 2007,,,,,,0|i0kj0f:,117897,,,,,,,,"24/May/07 17:04;almaw;Similar to WICKET-557, this works fine if you use an HttpSessionStore instead of the SecondLevelCacheSessionStore. Assigning to Jonathan.","24/May/07 17:07;almaw;Err, I mean, Johan. ;-)","25/May/07 10:08;behlma;Actually this was more of a Hibernate-Model problem. It's fixed now , Johan you don't need to do anything ;)","25/May/07 11:24;almaw;No, this isn't a hibernate model issue - I can easily reproduce this.","28/May/07 13:11;jcompagner;AlMaw how can you reproduce this easily? isn't it somethign like WICKET-557 ?
Everything must be serializeable...","28/May/07 16:35;almaw;I can reproduce this easily by creating two pages, A and B. A has an AjaxEditableLabel and a link to B.

I go to A, click the link to go to B, then click the back button. When I try to edit the label, I get a page expired message. I didn't do anything special.

It's only like WICKET-557 in that it's triggered by using the SecondLevelCacheStore. I didn't look into it further than that.","29/May/07 12:12;almaw;I've just tried to reproduce this again, but cannot. I swear I could before. It must've been solved elsewhere with session munging. I'm calling this fixed.",,,,,,,,,,,,,,,,,
WebRequestCodingStrategy.urlCodingStrategyForPath() passes null as key,WICKET-427,12365875,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,jan_bar,jan_bar,27/Mar/07 08:03,25/May/07 17:31,13/Mar/19 23:15,25/May/07 17:31,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.7,,,wicket,,,,0,,,,,,,,"The method WebRequestCodingStrategy.urlCodingStrategyForPath() passes null as key to SortedMap in:
mountsOnPath.get(null)
The SortedMap accepts only non null keys.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-24 17:19:19.131,,,no_permission,,,,,,,,,,,201492,,,Fri May 25 17:31:58 UTC 2007,,,,,,0|i0kivr:,117876,,,,,,,,24/May/07 17:19;almaw;Note that this isn't an issue in 1.3.x,25/May/07 17:31;almaw;Fixed in the 1.2.x branch.,,,,,,,,,,,,,,,,,,,,,,
relative paths generated incorrectly for HeaderContributor for mounted page,WICKET-567,12369303,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,wouterv,wouterv,14/May/07 18:55,22/May/07 13:35,13/Mar/19 23:15,22/May/07 13:35,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"I have a page that is mounted as /admin/signin
When adding a css contribution like this:

	@Override
	protected void onAttach() {
		super.onAttach();
		add(HeaderContributor.forCss(""style-ifd.css""));
	}

The added contribution is rendered like this:
<link rel=""stylesheet"" type=""text/css"" href=""../../style-ifd.css"" />

So that is a ../ too many.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-15 08:44:49.664,,,no_permission,,,,,,,,,,,201613,,,Tue May 22 13:35:32 UTC 2007,,,,,,0|i0kii7:,117815,,,,,,,,15/May/07 08:44;jcompagner;our url expert!,22/May/07 13:35;almaw;Fixed this in r540579.,,,,,,,,,,,,,,,,,,,,,,
parent poms missing in 1.3.0-beta1,WICKET-565,12369278,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,cheeser,cheeser,14/May/07 14:48,20/May/07 09:27,13/Mar/19 23:15,20/May/07 09:27,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,,,,,0,,,,,,,,"(Creating a new bug at AlMaw's recommendation)

The pom files are broken for the beta release. Here's the error I get: 

[artifact:dependencies] Downloading: org/apache/wicket/wicket-jdk14/1.3.0-incubating-beta1/wicket-jdk14-1.3.0-incubating-beta1.pom
[artifact:dependencies] [WARNING] Unable to get resource from repository main (http://repo1.maven.org/maven2/)
[artifact:dependencies] Downloading: org/apache/wicket/wicket-jdk14/1.3.0-incubating-beta1/wicket-jdk14-1.3.0-incubating-beta1.pom
[artifact:dependencies] [WARNING] Unable to get resource from repository wicket.repository (http://wicketstuff.org/maven/repository)
[artifact:dependencies] Downloading: org/apache/wicket/wicket-jdk14/1.3.0-incubating-beta1/wicket-jdk14-1.3.0-incubating-beta1.pom
[artifact:dependencies] [WARNING] Unable to get resource from repository wicket.beta.repository (http://people.apache.org/dist/incubator/wicket/apache-wicket-1.3.0-incubating-beta1/m2-repo/)
[artifact:dependencies] Downloading: org/apache/wicket/wicket-jdk14/1.3.0-incubating-beta1/wicket-jdk14-1.3.0-incubating-beta1.pom
[artifact:dependencies] [WARNING] Unable to get resource from repository java.net.maven2 (http://download.java.net/maven/2/)
[artifact:dependencies] Downloading: org.apache.wicket/poms/wicket-jdk14-1.3.0-incubating-beta1.pom
[artifact:dependencies] An error has occurred while processing the Maven artifact tasks.
[artifact:dependencies]  Diagnosis:
[artifact:dependencies]
[artifact:dependencies] Unable to resolve artifact: Unable to get dependency information: Unable to read the metadata file for artifact 'org.apache.wicket:wicket-extensions:jar:javadoc': Error getting POM for 'org.apache.wicket:wicket-jdk14' from the repository: Error transferring file
[artifact:dependencies]   org.apache.wicket:wicket-jdk14:pom:1.3.0-incubating-beta1
[artifact:dependencies]
[artifact:dependencies] from the specified remote repositories:
[artifact:dependencies]   java.net.maven2 (http://download.java.net/maven/2/),
[artifact:dependencies]   java.net.repository (https://maven.repository.dev.java.net/nonav/repository/),
[artifact:dependencies]   wicket.repository (http://wicketstuff.org/maven/repository),
[artifact:dependencies]   central (http://repo1.maven.org/maven2),
[artifact:dependencies]   wicket.beta.repository (http://people.apache.org/dist/incubator/wicket/apache-wicket-1.3.0-incubating-beta1/m2-repo/),
[artifact:dependencies]   main (http://repo1.maven.org/maven2/)
[artifact:dependencies]
[artifact:dependencies]   org.apache.wicket:wicket-extensions:jar:1.3.0-incubating-beta1
[artifact:dependencies]
[artifact:dependencies] from the specified remote repositories:
[artifact:dependencies]   java.net.maven2 (http://download.java.net/maven/2/),
[artifact:dependencies]   java.net.repository (https://maven.repository.dev.java.net/nonav/repository/),
[artifact:dependencies]   wicket.repository (http://wicketstuff.org/maven/repository),
[artifact:dependencies]   central (http://repo1.maven.org/maven2),
[artifact:dependencies]   wicket.beta.repository (http://people.apache.org/dist/incubator/wicket/apache-wicket-1.3.0-incubating-beta1/m2-repo/),
[artifact:dependencies]   main (http://repo1.maven.org/maven2/)
[artifact:dependencies] Path to dependency:
[artifact:dependencies]         1) unspecified:unspecified:jar:0.0
[artifact:dependencies]
[artifact:dependencies]
[artifact:dependencies] No name matching maven.repository.dev.java.net found
[artifact:dependencies]

BUILD FAILED
build.xml:398: Unable to resolve artifact: Unable to get dependency information: Unable to read the metadata file for artifact 'org.apache.wicket:wicket-extensions:jar:javadoc': Error getting POM for 'org.apache.wicket:wicket-jdk14' from the repository: Error transferring file
  org.apache.wicket:wicket-jdk14:pom:1.3.0-incubating-beta1

from the specified remote repositories:
  java.net.maven2 (http://download.java.net/maven/2/),
  java.net.repository (https://maven.repository.dev.java.net/nonav/repository/),
  wicket.repository (http://wicketstuff.org/maven/repository),
  central (http://repo1.maven.org/maven2),
  wicket.beta.repository (http://people.apache.org/dist/incubator/wicket/apache-wicket-1.3.0-incubating-beta1/m2-repo/),
  main (http://repo1.maven.org/maven2/)

  org.apache.wicket:wicket-extensions:jar:1.3.0-incubating-beta1

from the specified remote repositories:
  java.net.maven2 (http://download.java.net/maven/2/),
  java.net.repository (https://maven.repository.dev.java.net/nonav/repository/),
  wicket.repository (http://wicketstuff.org/maven/repository),
  central (http://repo1.maven.org/maven2),
  wicket.beta.repository (http://people.apache.org/dist/incubator/wicket/apache-wicket-1.3.0-incubating-beta1/m2-repo/),
  main (http://repo1.maven.org/maven2/)
Path to dependency:
        1) unspecified:unspecified:jar:0.0
",,,,,,,,,,,,,,,WICKET-189,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-14 14:56:42.161,,,no_permission,,,,,,,,,,,201611,,,Sun May 20 09:27:27 UTC 2007,,,,,,0|i0kiin:,117817,,,,,,,,"14/May/07 14:56;almaw;Martijn, can you scp the tagged parent pom.xml files into the Maven 2 repo in the right place to fix this?","20/May/07 09:25;dashorst;Fixing 1.3.0-beta1 needs to go through the IPMC: we will ship new artifacts, so to be safe and not try to push our luck I would rather vote for a beta 2 release. We have enough issues solved now and the community would benefit more from a new release (which can pass much more quickly!) than from fixing this old one.

I would strongly advise against uploading the missing pom's: this would circumvent the process in place and even though the fix is really minor and the impact too, I doubt it will reflect good on our project's ability to graduate.",20/May/07 09:26;dashorst;I fixed the issue in svn by adding the jdk-1.* poms to the release process with empty modules in their respective release profiles. This will work as advertised in a new release.,20/May/07 09:27;dashorst;Fixed in revision 539849,,,,,,,,,,,,,,,,,,,,
Page.onDetach is called by each ComponentResourceRequestTarget,WICKET-175,12358964,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,almaw,almaw,19/Dec/06 00:02,14/May/07 14:36,13/Mar/19 23:15,14/May/07 14:36,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"ComponentResourceRequestTarget#detach(RequestCycle) calls page#internalDetach()

This results in Page#onDetach() being called as many times as there are images or whatever on your page, which seems entirely wrong. Mentioned this to ivaynberg on IRC and he said: ""we should have theadlocal guards"".",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-19 03:54:35.0,,,no_permission,,,,,,,,,,,201258,,,Mon May 14 14:36:16 UTC 2007,,,,,,0|i0kjjj:,117983,,,,,,,,19/Dec/06 03:54;ivaynberg;or we can have flags for attached/detached state per component so we dont detach unless attached and viceversa,"19/Dec/06 15:07;jcompagner;we already had a save guard in page:

	public void internalDetach()
	{
		if (attached)
		{
			super.internalDetach();
			attached = false;
		}
	}

That was requested by martijn. (see other bug about detached called to many times)
but then martijn itself rolled it back again for WICKET-112
And i already warned this would be happening.... that the boolean did also prevent components from detaching that where ""outside"" of the page touched.

But ComponentResourceRequestTarget is just wrong in this method:

	public void detach(RequestCycle requestCycle)
	{
		page.internalDetach();
	}

It just calls page.internalDetach() without an attach call first. So you can call detach on page but don't want an attach..
I think it should call detach directy on the component not on the page.

","19/Dec/06 15:13;dashorst;The problem is that in ajax requests the page is not detached at all, even though its models can be attached by components down the hierarchy. So the check on isAttached is not correct as the page may not be attached, but its models are.","19/Dec/06 17:21;ivaynberg;i see two ways to do this

in ajax attach the entire page, and then detach it

or

attach only the rendering components and then detach them, that means the logic should not be

if (attached) { detach(); detachchildren(); }  but rather if (attached) { detach(); } detachchildren(); and detachchildren having the same if (attached) guard for every child.","19/Dec/06 17:59;dashorst;Why attach the page? no need to do that... Just call detach on the page and process all children.

I sure as hell don't want to start attaching models for the sake of detaching them directly afterwards.","19/Dec/06 20:00;knopp;I also think we should only attach the rendered component, and detach the whole page. Because when attaching the component, we don't really know what components really are attached. ","19/Dec/06 20:44;jcompagner;and we also don't like that detached is called twice (see other bug)
so we have here a bit of a problem.

If we don't care about that, then the fix shouldn't be to hard.","19/Dec/06 20:48;knopp;I think every component should be prepared that the detach method can be called twice, or even without calling attach first. Or perhaps we need something like ""attached"" flag for every component.
But on ajax request, we should really call page.detach only once (after the request is done). There's no need to call detach on any component twice in one request.",02/May/07 07:43;ivaynberg;can we close this since attach/detach was refactored in 1.3?,"12/May/07 13:09;knopp;I think we can close this too,.",14/May/07 00:35;almaw;Will check this Monday.,"14/May/07 11:50;almaw;This is still happening - if I put a bunch of Image components on a page, Page.onDetach() gets called for every image HTTP request.","14/May/07 14:12;jcompagner;But wait what do you mean with every http request?
until now i though it was mutliply times in one request
and that doesn't have to happen anymore now because if the page is used then it is attached now
so for a second detach() call on a  page in the same request we could ignore it i think. 
","14/May/07 14:17;almaw;I'm referring to page.onDetach() being called once for every image in your page. I guess that's fine, in which case we should close this bug.","14/May/07 14:22;jcompagner;and that for multiply request yes? So not one but 1 request for every image you have on the page right?
That has to happen in my eye's i don't see another option. So if that is only the case you can close this issue.","14/May/07 14:36;almaw;Yes, that's right. OK, closing this one. ;-)",,,,,,,,
DynamicImageResource.java fails on GIF output (in JDK 1.6),WICKET-553,12369029,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,n8han,n8han,10/May/07 17:48,14/May/07 00:40,13/Mar/19 23:15,14/May/07 00:40,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"DynamicImageResource instances that render correctly in PNG and JPG fail to output GIF in JDK 1.6 (the first to include a GIF writer). In comparing the DynamicImageResource.toImageData() method to the ImageIO.write() convenience method, I noticed that Wicket's does not dispose the writer or flush the ImageOutputStream. Testing established that doing both of those (and it must be the ImageOutputStream, not the wrapped ByteArrayOutputStream) fixes the problem and GIFs are outputted correctly.","Ubuntu 7.04, Sun JDK 1.6",,,,,,,,,,,,,,,,,,10/May/07 17:50;n8han;dynamic-img.patch;https://issues.apache.org/jira/secure/attachment/12357049/dynamic-img.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-14 00:40:19.464,,,no_permission,,,,,,,,,,,201601,,,Mon May 14 00:40:19 UTC 2007,,,,,,0|i0kik7:,117824,,,,,,,,10/May/07 17:50;n8han;Patch calls ImageIO.write() instead of finding writer and writing manually. (The write method does go back to JDK 1.4.) This fixes the GIF problem; JPG and PNG continue to work as before.,"14/May/07 00:40;almaw;Fixed in trunk, r537688.",,,,,,,,,,,,,,,,,,,,,,
Serialization exception in hangman example,WICKET-515,12368248,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,jdonnerstag,jdonnerstag,28/Apr/07 09:10,12/May/07 17:16,13/Mar/19 23:15,12/May/07 17:16,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,wicket-examples,,,0,,,,,,,,"ERROR - Objects                    - Error serializing object class org.apache.wicket.examples.hangman.Guess [object=[Page class = org.apache.wicket.examples.hangman.Guess, id = 1, version = 0]]
org.apache.wicket.util.io.WicketSerializeableException: No Serializable constructor found for class sun.font.AttributeMap
org.apache.wicket.examples.hangman.Guess->children->org.apache.wicket.Component[5]->org.apache.wicket.examples.hangman.Guess$2->children->org.apache.wicket.Component[26]->org.apache.wicket.markup.html.list.ListItem->children->org.apache.wicket.examples.hangman.Guess$2$1->children->org.apache.wicket.markup.html.image.Image->localizedImageResource->org.apache.wicket.markup.html.image.resource.LocalizedImageResource->resource->org.apache.wicket.markup.html.image.resource.DefaultButtonImageResource->fontAttributes
NOTE: if you feel Wicket is at fault with this exception, please report to the mailing list. You can switch to JDK based serialization by calling: org.apache.wicket.util.lang.Objects.setObjectStreamFactory(new IObjectStreamFactory.DefaultObjectStreamFactory()) e.g. in the init method of your application
	at org.apache.wicket.util.io.ClassStreamHandler.<init>(ClassStreamHandler.java:252)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201567,,,Sat May 12 17:16:30 UTC 2007,,,,,,0|i0kinz:,117841,,,,,,,,"28/Apr/07 09:12;jdonnerstag;The very same exception comes up in the ""images"" example",12/May/07 17:16;jdonnerstag;seems to be fixed,,,,,,,,,,,,,,,,,,,,,,
Ajax requests don't detach component models,WICKET-418,12365754,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,25/Mar/07 20:46,12/May/07 13:25,13/Mar/19 23:15,12/May/07 13:25,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"After ajax request the component models are not detached. Page onDetach should detach those models, but since the page itself is not attached, the onDetach method is not called.

It's necessary to always call page.detachModels after request. And we should only call page.detach from the request target. The ajax request target should not page.detach, as the behaviorrequesttarget should do that. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-26 01:58:28.094,,,no_permission,,,,,,,,,,,201484,,,Mon Mar 26 01:58:28 UTC 2007,,,,,,0|i0kixb:,117883,,,,,,,,"25/Mar/07 20:53;knopp;Looking at page#onDetach, I'd say it should be called if at least one component on page was attached. Or after every request. Because right now the versionManager.endVersion is not called for ajax request. ","25/Mar/07 21:10;knopp;I see possible solution in removing page.onDetach and 
creating page.detachPage() {

	detach();

	detachModels();
		
	endVersion();
		
	super.onDetach();
}

this should be called from every detach() of request target that operates on a page. Also the page.detach() from AjaxRequestTarget should be removed.","26/Mar/07 01:58;ivaynberg;see my commit, it probably fixes this",,,,,,,,,,,,,,,,,,,,,
"Within a ModalWindow, mouse cursor incorrectly appears as an arrow when over text",WICKET-116,12357152,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,cfmdobbie,cfmdobbie,28/Nov/06 17:27,12/May/07 13:15,13/Mar/19 23:15,12/May/07 13:15,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-extensions,,,,0,,,,,,,,"modal.css includes the following:

div.wicket-modal div.w_content_1 {
	margin-right: 10px;
	cursor: default;	
}

The ""default"" cursor is an arrow.  If this instead uses the directive ""cursor: auto;"" the browser is free to pick the appropriate mouse cursor, so it will appear as a text-selection cursor when over text, for example.  I have a hacked-up HTML test case, to be added shortly.","WinXP, Firefox 2.0",,,,,,,,,,,,,,,,,,28/Nov/06 17:42;cfmdobbie;modal-window-cursor-testcase.html;https://issues.apache.org/jira/secure/attachment/12345949/modal-window-cursor-testcase.html,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-12 13:15:16.555,,,no_permission,,,,,,,,,,,201200,,,Sat May 12 13:15:16 UTC 2007,,,,,,0|i0kjnj:,118001,,,,,,,,"28/Nov/06 17:42;cfmdobbie;Open the attached file directly.  It's a bundle of generated source, but seemed the best way to illustrate the issue.  If you have a Wicket app running on http://localhost:8080/app it'll pull some stylesheets to make things a bit prettier, but it isn't necessary.

Move your mouse over the ""Open job?"" text, note that the cursor is an arrow.

Edit the file, search for a line of hash-marks.  The following div had the class of ""w_content_1"" before I in-lined the style information.  Change the ""default"" for ""auto"" and check the mouse cursor behaviour again.",12/May/07 13:15;knopp;Fixed for 1.3,,,,,,,,,,,,,,,,,,,,,,
Error pages for HeaderContributor errors are broken,WICKET-278,12362560,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,almaw,almaw,12/Feb/07 09:30,12/May/07 13:03,13/Mar/19 23:15,12/May/07 13:03,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"This manifests itself with lots of java.io.NotSerializableException: wicket.response.StringResponse and errors like this:
08:58:09,083  WARN Objects:1287 - Size of failed of object: wicket.markup.html.HeaderPartContainer

Al says:
The errors are caused by the Wicket exception page (which is why there  are a million components - they're all the Labels for the various components/traces/whatever).

This is what I think goes wrong:

HtmlHeaderContainer throws an exception while rendering, or something, such that its onDetach() is never called on it. This causes the reference it has to headerResponse to never be set to null. It therefore has a ref to a HeaderResponse, which has a ref to the Response object itself.

We need to fix it so that onDetach() is always called, I guess. Probably need to work out where to put the try {} finally {}, essentially.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-12 13:03:26.573,,,no_permission,,,,,,,,,,,201351,,,Sat May 12 13:03:26 UTC 2007,,,,,,0|i0kj8v:,117935,,,,,,,,"12/Feb/07 17:30;almaw;If I put a hack in Objects.sizeof to call objectToByteArray() when it hits a NotSerializableException I get one of these:

17:17:58.175 ERROR Error serializing object class wicket.markup.html.basic.Label [object=[Component id = pageTitleForHead, page = <No Page>, path = pageTitleForHead.Label]] - org.apache.commons.logging.impl.SLF4JLog.error(SLF4JLog.java:171)
wicket.util.io.SerializableChecker$WicketNotSerializableException: Unable to serialize class: wicket.response.StringResponse
Field hierarchy is:
  pageTitleForHead [class=wicket.markup.html.basic.Label, path=pageTitleForHead]
    private wicket.model.IModel wicket.Component.model [class=wicket.model.PropertyModel]
      private java.lang.Object wicket.model.AbstractPropertyModel.nestedModel [class=com.foo.Page, path=1]
        private java.lang.Object wicket.MarkupContainer.children [class=[Lwicket.Component;]
          private java.util.List wicket.extensions.markup.html.tabs.TabbedPanel.tabs[write:1][write:4][write:6][write:8][10] [class=wicket.markup.html.internal.HtmlHeaderContainer, path=1:<auto>_header]
            private wicket.markup.html.IHeaderResponse wicket.markup.html.internal.HtmlHeaderContainer.headerResponse [class=wicket.markup.html.internal.HeaderResponse]
              private wicket.Response wicket.markup.html.internal.HeaderResponse.response [class=wicket.response.StringResponse] <----- field that is not serializable


I'm still not sure what's going on. :-(",12/May/07 13:03;knopp;I believe this is fixed already,,,,,,,,,,,,,,,,,,,,,,
AbstractAjaxTimerBehavior only trigger one request,WICKET-343,12363920,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,xavier,xavier,01/Mar/07 20:26,12/May/07 12:52,13/Mar/19 23:15,12/May/07 12:52,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,AbstractAjaxTimerBehavior only triggers one request and then stop. The clock example in wicket-examples show the problem. Reverting to revision 511893 fixes the problem.,Firefox 2.0.0.2,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-01 22:16:08.857,,,no_permission,,,,,,,,,,,201412,,,Sat May 12 12:52:36 UTC 2007,,,,,,0|i0kj33:,117909,,,,,,,,"01/Mar/07 21:51;xavier;I think there is still a problem with the latest code: the contribution of the javascript only occurs if renderHead is called, and this is only the case if the component to which the AbstractAjaxTimerBehavior is attached. So if for example you only call appendJavascript to your AjaxRequestTarget, it won't occur, and you will have only one request.","01/Mar/07 22:16;jcompagner;will see if i can fix that easy. Without sending it multiply times.
I already did know that in my own project and i just call it myself.","06/Mar/07 11:24;xavier;It seems to be fixed now, at least my use case which was previously failing due to this bug is now working (see WICKET-363).","06/Mar/07 15:55;jcompagner;yes it is fixed now. 
Matej can you close this bug if you merge all the changes to 2.0?","12/May/07 12:52;knopp;Won't fix this for 2.0, as it's no longer maintained.",,,,,,,,,,,,,,,,,,,
investigate: AbortWithWebErrorCodeException not working as expected,WICKET-552,12368995,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,ehillenius,ehillenius,10/May/07 10:45,10/May/07 11:28,13/Mar/19 23:15,10/May/07 11:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,See http://www.nabble.com/AbortWithWebErrorCodeException-not-working-as-expected-tf3713628.html,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201600,,,Thu May 10 11:15:54 UTC 2007,,,,,,0|i0kikf:,117825,,,,,,,,"10/May/07 10:55;ehillenius;Indeed it doesn't work. Putting

RequestCycle.get().setRequestTarget(new WebErrorCodeResponseTarget(HttpServletResponse.SC_BAD_REQUEST, ""FOOBAR""));

in the constructor does however. The problem is that we skip any processing after an abort request currently.",10/May/07 11:15;ehillenius;I think AbortWithHttpStatusException and AbortWithWebErrorCodeException should extend AbstractRestartResponseException.,,,,,,,,,,,,,,,,,,,,,,
onAttach not called for Components added to ListItems,WICKET-548,12368941,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jimmclaughlin,jimmclaughlin,09/May/07 16:58,09/May/07 21:47,13/Mar/19 23:15,09/May/07 21:47,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"populateItem is called in onBeforeRender, after onAttach, so components added to a ListItem don't have onAttach called.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-09 17:00:54.131,,,no_permission,,,,,,,,,,,201596,,,Wed May 09 21:14:14 UTC 2007,,,,,,0|i0kikv:,117827,,,,,,,,09/May/07 17:00;ivaynberg;perhaps we should call attach in MarkupContainer#addedComponent() and detach in markupcontainer#removedcomponent()?,"09/May/07 21:14;jcompagner;yeah i think that is the right if not only place to do it.
",,,,,,,,,,,,,,,,,,,,,,
Wicket.Focus code utterly breaks AjaxEditableLabel,WICKET-396,12365116,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,almaw,almaw,16/Mar/07 14:26,03/May/07 20:03,13/Mar/19 23:15,03/May/07 20:03,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,wicket-extensions,,,0,,,,,,,,"The Wicket.Focus javascript is nice and clever, but isn't clever enough - we've overlooked the use case where people want to set the focus in their AJAX callback to another component.

This is particularly bad for the AjaxEditableLabel case, because onblur() on the text field that it pops up causes it to submit the value back to the server and finish the editing process and go away. So the text field pops up, and then wicket moves the focus somewhere else, so it goes away again immediately. :-(

Maybe a good stab at fixing 90% of the problem would be to see if the JS in the response has the word ""focus"" in it, and not do the focusing if it does?

Looking at the user list, I think Johan is the Wicket.Focus man, so I'm assigning this to him. Johan - if this isn't really your domain, obviously feel free to unassign and accept my apologies. :)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-17 22:46:40.031,,,no_permission,,,,,,,,,,,201462,,,Thu May 03 20:03:19 UTC 2007,,,,,,0|i0kiyv:,117890,,,,,,,,"17/Mar/07 22:46;jcompagner;see AjaxRequestTarget.focusComponent() (or something like that)
I use that in my own project all the time., onbluf of textfield1 -> change focus to textfield10. Should work fine.

Isn't that what you want?",27/Mar/07 13:47;almaw;Quite possibly. I guess the AjaxEditableLabel code needs updating with that if so. I'll have a look at this ASAP.,03/May/07 20:03;almaw;Fixed in r534980.,,,,,,,,,,,,,,,,,,,,,
AjaxFormComponentUpdatingBehavior doesn't call onError when FormComponent is not valid,WICKET-312,12363406,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,tdrencak,tdrencak,22/Feb/07 14:46,02/May/07 21:14,13/Mar/19 23:15,02/May/07 21:14,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.7,1.3.0-beta1,,wicket,,,,0,,,,,,,,"in onEvent method, FormComponent is validated and when it is valid, model is updated. But when component is invalid onUpdate method is still called. I would be expecting onError method to be called when FormComponent is invalid such as in AjaxFormSubmitBehavior.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201382,,,2007-02-22 14:46:32.0,,,,,,0|i0kj5r:,117921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot use WicketTester with a custom session,WICKET-503,12368076,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,jbq,jbq,25/Apr/07 22:31,01/May/07 07:06,13/Mar/19 23:15,01/May/07 07:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,See http://www.nabble.com/Re%3A-svn-commit%3A-r530589---in--incubator-wicket-trunk-jdk-1.4-wicket-src%3A-main-java-org-apache-wicket-protocol-http--test-java-org-apache-wicket-markup--tf3611753.html#a10093045,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-01 07:06:45.059,,,no_permission,,,,,,,,,,,201555,,,Tue May 01 07:06:45 UTC 2007,,,,,,0|i0kion:,117844,,,,,,,,01/May/07 07:06;jdonnerstag;this is probably outdated. I changed ComponentCreateTag_6 which is referenced in the mail and it works.,,,,,,,,,,,,,,,,,,,,,,,
DateTimeField crashes Safari,WICKET-414,12365699,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,ehillenius,ehillenius,23/Mar/07 20:09,30/Apr/07 20:41,13/Mar/19 23:15,30/Apr/07 20:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-datetime,,,,0,,,,,,,,"It's a Safari and maybe YUI bug to start with, but we need a workaround for the fact that putting a text field right after a textfield/ datepicker combination crashes Safari when a user enters something in that second text field. The normal YUI examples work fine, so it must have to do with how we initialize the YUI widget.

Safari crashes every time with a report like:

Safari does crash with a report like this:



Date/Time: 2007-03-21 16:28:31.258 -0700
OS Version: 10.4.9 (Build 8P2137)
Report Version: 4

Command: Safari
Path: /Applications/Safari.app/Contents/MacOS/Safari
Parent: WindowServer [61]

Version: 2.0.4 (419.3)
Build Version: 2
Project Name: WebBrowser
Source Version: 4190300

PID: 14393
Thread: 0

Exception: EXC_BAD_ACCESS (0x0001)
Codes: KERN_PROTECTION_FAILURE (0x0002) at 0x0000000c

Thread 0 Crashed:
0 com.apple.WebCore 0x9e3be316 khtml::RenderTableCell::table() const + 6
1 com.apple.WebCore 0x9e2887b9 KWQKHTMLPart::searchForLabelsAboveCell(QRegExp*, DOM::HTMLTableCellElementImpl*) + 29
2 com.apple.WebCore 0x9e2884c2 KWQKHTMLPart::searchForLabelsBeforeElement(NSArray*, DOM::ElementImpl*) + 192
3 com.apple.Safari 0x00098ba6 0x1000 + 621478
4 com.apple.Safari 0x0009852a 0x1000 + 619818
5 com.apple.Safari 0x00096199 0x1000 + 610713
6 com.apple.Safari 0x000963b3 0x1000 + 611251
7 com.apple.Safari 0x0002859b 0x1000 + 161179
8 com.apple.Foundation 0x9f2c003b __NSFireDelayedPerform + 403
9 com.apple.CoreFoundation 0x902a67e2 CFRunLoopRunSpecific + 3341
10 com.apple.CoreFoundation 0x902a5ace CFRunLoopRunInMode + 61
11 com.apple.HIToolbox 0x91be28d8 RunCurrentEventLoopInMode + 285
12 com.apple.HIToolbox 0x91be1fe2 ReceiveNextEventCommon + 385
13 com.apple.HIToolbox 0x91be1e39 BlockUntilNextEventMatchingListInMode + 81
14 com.apple.AppKit 0x9f5e0465 _DPSNextEvent + 572
15 com.apple.AppKit 0x9f5e0056 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 137
16 com.apple.Safari 0x00006f96 0x1000 + 24470
17 com.apple.AppKit 0x9f5d9ddb -[NSApplication run] + 512
18 com.apple.AppKit 0x9f5cdd2f NSApplicationMain + 573
19 com.apple.Safari 0x0005f7de 0x1000 + 387038
20 com.apple.Safari 0x0005f6f9 0x1000 + 386809

Thread 1:
0 libSystem.B.dylib 0x90009bf7 mach_msg_trap + 7
1 com.apple.CoreFoundation 0x902a62b3 CFRunLoopRunSpecific + 2014
2 com.apple.CoreFoundation 0x902a5ace CFRunLoopRunInMode + 61
3 com.apple.Foundation 0x9f2dfd3a -[NSRunLoop runMode:beforeDate:] + 182
4 com.apple.Foundation 0x9f2dfc36 -[NSRunLoop run] + 75
5 com.apple.WebKit 0x93c41529 +[WebFileDatabase _syncLoop:] + 198
6 com.apple.Foundation 0x9f2aa2e0 forkThreadForFunction + 123
7 libSystem.B.dylib 0x90024147 _pthread_body + 84

Thread 2:
0 libSystem.B.dylib 0x90009bf7 mach_msg_trap + 7
1 com.apple.CoreFoundation 0x902a62b3 CFRunLoopRunSpecific + 2014
2 com.apple.CoreFoundation 0x902a5ace CFRunLoopRunInMode + 61
3 com.apple.Foundation 0x9f2dfa0f +[NSURLConnection(NSURLConnectionInternal) _resourceLoadLoop:] + 259
4 com.apple.Foundation 0x9f2aa2e0 forkThreadForFunction + 123
5 libSystem.B.dylib 0x90024147 _pthread_body + 84

Thread 3:
0 libSystem.B.dylib 0x90009bf7 mach_msg_trap + 7
1 com.apple.CoreFoundation 0x902a62b3 CFRunLoopRunSpecific + 2014
2 com.apple.CoreFoundation 0x902a5ace CFRunLoopRunInMode + 61
3 com.apple.Foundation 0x9f306bc2 +[NSURLCache _diskCacheSyncLoop:] + 206
4 com.apple.Foundation 0x9f2aa2e0 forkThreadForFunction + 123
5 libSystem.B.dylib 0x90024147 _pthread_body + 84

Thread 4:
0 libSystem.B.dylib 0x900247e7 semaphore_wait_signal_trap + 7
1 com.apple.Foundation 0x9f30026c -[NSConditionLock lockWhenCondition:] + 39
2 com.apple.Syndication 0x9a44c052 -[AsyncDB _run:] + 181
3 com.apple.Foundation 0x9f2aa2e0 forkThreadForFunction + 123
4 libSystem.B.dylib 0x90024147 _pthread_body + 84

Thread 5:
0 libSystem.B.dylib 0x9001a0ec select + 12
1 libSystem.B.dylib 0x90024147 _pthread_body + 84

Thread 6:
0 libSystem.B.dylib 0x90048e07 semaphore_timedwait_signal_trap + 7
1 ...apple.AddressBook.framework 0x94727385 -[ABMetaDataController workLoop] + 357
2 com.apple.Foundation 0x9f2aa2e0 forkThreadForFunction + 123
3 libSystem.B.dylib 0x90024147 _pthread_body + 84

Thread 0 crashed with X86 Thread State (32-bit):
  eax: 0x00000000 ebx: 0x00000000 ecx: 0x9e1e079c edx: 0x1627dd70
  edi: 0x15d67810 esi: 0x15d68438 ebp: 0xbfffebe8 esp: 0xbfffebe8
   ss: 0x0000001f efl: 0x00010286 eip: 0x9e3be316 cs: 0x00000017
   ds: 0x0000001f es: 0x0000001f fs: 0x00000000 gs: 0x00000037",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201480,,,Mon Apr 30 20:41:08 UTC 2007,,,,,,0|i0kixj:,117884,,,,,,,,23/Mar/07 20:10;ehillenius;I added a DateTimeField instance to wicket-examples/forminput so that someone can try to track it down,"23/Mar/07 20:11;ehillenius;If we're able to find what causes this, or at least have it reproducable with some standard HTML (see the examples that ship with YUI) we should file issues with Apple and maybe Yahoo.",30/Apr/07 20:41;ehillenius;Matej implemented a workaround,,,,,,,,,,,,,,,,,,,,,
ClassCastException: wicket.response.StringResponse with AbstractTransformerBehavior,WICKET-419,12365759,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,jbq,jbq,25/Mar/07 22:57,29/Apr/07 18:08,13/Mar/19 23:15,29/Apr/07 18:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"AbstractTransformerBehavior replaces the current response with a StringResponse, but WebPage.configureResponse() expects a WebResponse.

{noformat}
java.lang.ClassCastException: wicket.response.StringResponse
     at wicket.protocol.http.WebRequestCycle.getWebResponse(WebRequestCycle.java:108)
     at wicket.markup.html.WebPage.configureResponse(WebPage.java:178)
     at wicket.Page.onRender(Page.java:979)
     at wicket.Component.render(Component.java:1506)
     at wicket.Page.renderPage(Page.java:388)
     at wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:225)
     at wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:102)
     at wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:992)
     at wicket.RequestCycle.step(RequestCycle.java:1059)
     at wicket.RequestCycle.steps(RequestCycle.java:1138)
     at wicket.RequestCycle.request(RequestCycle.java:474)
     at wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:248)
     at wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:122)
{noformat}

This exception occurs when plugging an XsltTransformerBehavior to a WebPage instead of just a nested Component.  Also, onComponentTag() is not called for a WebPage, one has to override beforeRender() instead of onComponentTag().  Requires patch from WICKET-420",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-26 00:48:23.378,,,no_permission,,,,,,,,,,,201485,,,Sun Apr 29 18:08:41 UTC 2007,,,,,,0|i0kix3:,117882,,,,,,,,"26/Mar/07 00:48;ivaynberg;afaik a page doesnt have a component tag, so when/why  should it be called?

about the xslttransformer, i dont know if we can do anything but restrict its use to a component rather then a page.",29/Apr/07 18:08;jdonnerstag;Through an exception when attached to a Page. ,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in MarkupFragmentFinder.find(),WICKET-429,12365891,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,zlate.tele,zlate.tele,27/Mar/07 10:58,29/Apr/07 17:17,13/Mar/19 23:15,29/Apr/07 17:17,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"If ID of any component in MarkupStream is null (for example in ends with tags), the method MarkupFragmentFinder.find() may crash. See patch...",,,,,,,,,,,,,,,,,,,27/Mar/07 10:59;zlate.tele;MarkupFragmentFinder.patch;https://issues.apache.org/jira/secure/attachment/12354314/MarkupFragmentFinder.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-29 17:17:40.887,,,no_permission,,,,,,,,,,,201494,,,Sun Apr 29 17:17:40 UTC 2007,,,,,,0|i0kivb:,117874,,,,,,,,29/Apr/07 17:17;jdonnerstag;patch applied. Thanks,,,,,,,,,,,,,,,,,,,,,,,
Page Expired in ajax clock example,WICKET-423,12365843,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,jbq,jbq,26/Mar/07 22:58,29/Apr/07 07:47,13/Mar/19 23:15,29/Apr/07 07:47,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-examples,,,,0,,,,,,,,"* Go to http://localhost:8080/wicket-examples/ajax/
* Click on ""Clock Example""
* Click on ""[go back]"" with the middle mouse button opening a new browser tab
* Wait for 5 seconds maximum 

You get ""Page Expired"" in the ajax clock page",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-29 07:47:30.612,,,no_permission,,,,,,,,,,,201489,,,Sun Apr 29 07:47:30 UTC 2007,,,,,,0|i0kiwf:,117879,,,,,,,,29/Apr/07 07:47;knopp;Removed IUnversionedListener as it caused this behavior,,,,,,,,,,,,,,,,,,,,,,,
"wicket ""frame"" example is broken",WICKET-516,12368249,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jdonnerstag,jdonnerstag,28/Apr/07 09:18,28/Apr/07 14:06,13/Mar/19 23:15,28/Apr/07 14:06,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,wicket-examples,,,0,,,,,,,,"""Unable load Bookmarkable Page"" in both frames of the example",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201568,,,2007-04-28 09:18:39.0,,,,,,0|i0kinr:,117840,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using Borders with Markup Inheritance causes component resolution failures,WICKET-404,12365212,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,spatula,spatula,19/Mar/07 05:21,28/Apr/07 01:09,13/Mar/19 23:15,28/Apr/07 01:09,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"If a Border is used by the BasePage in a markup inheritance implementation, Wicket is unable to resolve any of the components in the child page.

I will attach a simple testcase for this.",,,,,,,,,,,,,,,,,,,19/Mar/07 16:36;spatula;testcase3.jar;https://issues.apache.org/jira/secure/attachment/12353669/testcase3.jar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-19 16:02:47.455,,,no_permission,,,,,,,,,,,201470,,,Mon Mar 19 16:36:11 UTC 2007,,,,,,0|i0kiy7:,117887,,,,,,,,19/Mar/07 05:22;spatula;Simple test case showing the relationship between parent/border/child that causes component resolution failures in the child.,"19/Mar/07 05:30;spatula;The message given by Wicket in the testcase is:

WicketMessage: Unable to find component with id 'label' in [MarkupContainer [Component id = _extend, page = net.spatula.testcase.ChildPage, path = 3:border:_child:_extend.MarkupInheritanceResolver$TransparentWebMarkupContainer, isVisible = true, isVersioned = true]]","19/Mar/07 16:02;ivaynberg;did you try

new Border() { boolean istransparentcomponentresolver() { return true; } } ?","19/Mar/07 16:25;spatula;That works for the simple testcase, but as soon as Fragments become involved, it doesn't seem to help.

I'll attach another testcase showing the slightly more complex case.  The message in this case is:

WicketMessage: Markup does not contain a fragment with id=fragment1; Component: [MarkupContainer [Component id = frag, page = net.spatula.testcase.ChildPage, path = 3:frag.Fragment, isVisible = true, isVersioned = true]]",19/Mar/07 16:27;spatula;A slightly more complex tastcase showing component resolution trouble when Fragments are involved with isTransparentResolver() returning true in the Border.,19/Mar/07 16:36;spatula;A testcase showing construction of the Fragment passing in the MarkupContainer and putting the fragment inside the <wicket:extend> tag.,,,,,,,,,,,,,,,,,,
NullPointerException when using CheckGroup and a Validator,WICKET-486,12367570,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivana,ivana,19/Apr/07 12:48,25/Apr/07 23:02,13/Mar/19 23:15,25/Apr/07 23:02,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,,,wicket,,,,0,,,,,,,,"Problem occurs when using a listView with a checkgroup in the same form with a input Validator. When the Validator detects invalid input *and* no items from the CheckGroup were selected, Wicket throws a NullPointer Exception on the first ListView item. 

Specifically, in the Check class, the group.getInputAsArray() returns null and causes the NPE:
     if (group.hasRawInput()) 	{
			final String[] input = group.getInputAsArray();
			for (int i = 0; i < input.length; i++)
			{ ....
				
The problem is solved by overriding the isNullable() method for CheckGroup to return false.
    @Override
    public boolean isInputNullable() {
	return false;
		}

Apologies for describing symptoms rather than mechanism. More experienced programmers in the office think the model for CheckGroup is not attached or detached properly when used in conjunction with the (Pattern)Validator.","tomcat 5.5, java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-25 22:42:45.702,,,no_permission,,,,,,,,,,,201542,,,Wed Apr 25 22:42:45 UTC 2007,,,,,,0|i0kiq7:,117851,,,,,,,,"25/Apr/07 22:42;jbq;As always, a small quickstart, or a unit test is more than welcome.",,,,,,,,,,,,,,,,,,,,,,,
ComponentCreateTagTest#testRenderHomePage_6() fails with non-english environment,WICKET-474,12367257,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,jbq,jbq,16/Apr/07 08:48,25/Apr/07 22:32,13/Mar/19 23:15,25/Apr/07 22:32,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"{noformat}
org.apache.wicket.util.convert.ConversionException: Cannot parse '4.1' using format java.text.DecimalFormat@674dc
	at org.apache.wicket.util.convert.converters.AbstractConverter.newConversionException(AbstractConverter.java:74)
	at org.apache.wicket.util.convert.converters.AbstractConverter.parse(AbstractConverter.java:54)
	at org.apache.wicket.util.convert.converters.AbstractNumberConverter.parse(AbstractNumberConverter.java:71)
	at org.apache.wicket.util.convert.converters.DoubleConverter.convertToObject(DoubleConverter.java:44)
	at org.apache.wicket.markup.resolver.AutoComponentResolver.invokeSetter(AutoComponentResolver.java:297)
	at org.apache.wicket.markup.resolver.AutoComponentResolver.createComponent(AutoComponentResolver.java:239)
	at org.apache.wicket.markup.resolver.AutoComponentResolver.resolve(AutoComponentResolver.java:95)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1186)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1329)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1264)
	at org.apache.wicket.Component.renderComponent(Component.java:1713)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1274)
	at org.apache.wicket.Component.render(Component.java:1534)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1159)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1291)
	at org.apache.wicket.Page.onRender(Page.java:1261)
	at org.apache.wicket.Component.render(Component.java:1534)
	at org.apache.wicket.Page.renderPage(Page.java:826)
	at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:224)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:981)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1048)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1127)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:535)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:366)
	at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:237)
	at org.apache.wicket.WicketTestCase.executeTest(WicketTestCase.java:77)
	at org.apache.wicket.markup.ComponentCreateTagTest.testRenderHomePage_6(ComponentCreateTagTest.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
{noformat}

If you look at testRenderHomePage_6() you notice this call:

{code}
tester.getWicketSession().setLocale(Locale.ENGLISH);
{code}

But unfortunately, a new session is created with the request's locale at the next line: executeTest, thus making the test fail on non-english environments.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201532,,,Wed Apr 25 22:32:18 UTC 2007,,,,,,0|i0kirj:,117857,,,,,,,,"25/Apr/07 22:32;jbq;Fixed by Matej, see http://svn.apache.org/viewvc?view=rev&rev=530589",,,,,,,,,,,,,,,,,,,,,,,
Problem in generation of the html code of the page,WICKET-41,12355309,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,buealb,buealb,10/Nov/06 22:15,25/Apr/07 22:28,13/Mar/19 23:15,25/Apr/07 22:28,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"When we create a page, the page generates this html code:

   <script type=""text/javascript"" ><!--/*--><![CDATA[/*><!--*/
if (window.name=='') { window.location=""/quickstart/app?wicket:interface=:1::INewBrowserWindowListener""; }
/*-->]]>*/</script>


Now, we add a button in the page (a very simple page):

public class Index extends QuickStartPage
{
   public Index(final PageParameters parameters)
   {

       Form form = new Form(this, ""form"");
       new Button(form, ""button""){

           @Override
           public void onSubmit()
           {
               // TODO Auto-generated method stub
               String p = """";
           }
       };
   }
}

And when we click the button, in the generation of the page we have the code duplicated:

   <script type=""text/javascript"" ><!--/*--><![CDATA[/*><!--*/
if (window.name=='') { window.location=""/quickstart/app?wicket:interface=:1::INewBrowserWindowListener""; }
/*-->]]>*/</script>


   <script type=""text/javascript"" ><!--/*--><![CDATA[/*><!--*/
if (window.name=='') { window.location=""/quickstart/app?wicket:interface=:1::INewBrowserWindowListener""; }
/*-->]]>*/</script>


And if we continue clicking the button, the page continues duplicating the code... ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-15 07:15:34.0,,,no_permission,,,,,,,,,,,201128,,,Wed Apr 25 22:20:37 UTC 2007,,,,,,0|i0kjrz:,118021,,,,,,,,"15/Nov/06 07:15;ivaynberg;looks like HeaderResponse is not filtering duplicates.

also need to make sure methods like (CharSequeunce script, String id) filter exclusively on id and discregard value of script. right now looks like you are sticking both into an array so both are used for comparison. so [""foo"",""id""] and [""bar"",""id""] will result in both foo and bar rendering which is wrong.","15/Nov/06 15:33;knopp;I don't get it. IMHO it should only filter when the id and body is equal. In the duplicated code it seems that the content is equal, and there's no id, so why is that not filtered out?","15/Nov/06 16:06;ivaynberg;if you dont filter solely on id you can end up with a bunch of script tags that have the same id but different content - that is weird. imho as well.

as for why its not fltering that is for you to debug :)
","15/Nov/06 16:15;knopp;I dunno. I think the content is more important that the ID. If the scripts are different, it means that they do different things. So perhaps we shouldn't rely on id only.","11/Mar/07 09:23;knopp;This looks to be caused by the fact that i didn't realize that not everything that implements CharSequence compares the content. Should be fixed, can you please try latest 1.x / trunk?",25/Apr/07 20:40;jbq;I guess we can close this one now?,25/Apr/07 22:20;knopp;i think so.,,,,,,,,,,,,,,,,,
WicketTester.startPage(Page) throws an exception,WICKET-381,12364765,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,jbq,jbq,12/Mar/07 22:07,24/Apr/07 08:03,13/Mar/19 23:15,24/Apr/07 08:03,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,See bugTestPageConstructor() in src/test/java/wicket/util/tester/WicketTesterTest.java,,,,,,,,,,,,,,,,,,,23/Apr/07 18:07;kare;wicket-tester.diff.gz;https://issues.apache.org/jira/secure/attachment/12356078/wicket-tester.diff.gz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-04-23 18:07:56.406,,,no_permission,,,,,,,,,,,201448,,,Tue Apr 24 08:03:14 UTC 2007,,,,,,0|i0kizz:,117895,,,,,,,,"23/Apr/07 18:07;kare;- Improved unit test
- Fixed the issue reported","24/Apr/07 08:03;jbq;Committed, thanks a lot for your contribution!",,,,,,,,,,,,,,,,,,,,,,
NPE in WebClientInfo when user-agent header is not sent,WICKET-475,12367270,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,dashorst,dashorst,16/Apr/07 12:05,20/Apr/07 07:09,13/Mar/19 23:15,20/Apr/07 07:09,1.2.6,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,1.3.0-beta1,,wicket,,,,0,,,,,,,,"When the user agent http header is not set, the webclientinfo will throw either a NPE or a WicketRuntimeException (depending on the constructor called). This is not handy as the header can be omitted by clients.

In a discussion on @dev Eelco said:

I guess I was wrong in expecting a user agent header would always be
avaible. So WebClientInfo should accept null, and then in init() do
nothing.

Another thing I'm wondering is whether this is a quirk, or whether you
can expect a client that doesn't send a user-agent header to never
send it. Cause if is a quirk, and does send it with a next request, we
might want to try to reconstruct the WebClientInfo object. That's a
bit more complicated to achieve but doable. We just need to decide if
that's the best way to go.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201533,,,2007-04-16 12:05:57.0,,,,,,0|i0kirb:,117856,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getvariation() is called from webpage constructor through commoninit(),WICKET-432,12366074,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivaynberg,ivaynberg,29/Mar/07 00:19,14/Apr/07 18:49,13/Mar/19 23:15,14/Apr/07 18:49,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,1.3.0-beta1,,wicket,,,,0,,,,,,,,"getvariation() is called from commoninit(). if user overrides getvariation() and makes it depend on variables initialized from his webpage subclass' constructor then this method is invoked before the constructor has finished - which of course leads to problems. 

getvariation should not be called from WebPage constructor",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-29 00:30:02.367,,,no_permission,,,,,,,,,,,201497,,,Sat Mar 31 04:15:06 UTC 2007,,,,,,0|i0kiv3:,117873,,,,,,,,29/Mar/07 00:24;ivaynberg;in fact now that we have great support for onload events in IHeaderContributor we can think about removing bodycontainer altogether as iheadercontributor is a much better solution,29/Mar/07 00:30;ehillenius;+1 on that.,29/Mar/07 00:41;knopp;+1 as well,"29/Mar/07 00:53;ivaynberg;so in 1.3 we can remove it, but in 1.2 we need to fix this problem",31/Mar/07 04:15;ivaynberg;1.2.6 fix is done,,,,,,,,,,,,,,,,,,,
ensure detachement of models used by columns,WICKET-439,12366259,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,30/Mar/07 21:32,30/Mar/07 22:04,13/Mar/19 23:15,30/Mar/07 22:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Classes like wicket.extensions.markup.html.repeater.data.tableAbstractColumn uses model instances, but do nothing to guarantee those models will be detached at the end of a request. There is also no guarantee that the passed in models are coupled to components (in which case they would be detached). We should somehow enforce detachement.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201503,,,Fri Mar 30 22:04:01 UTC 2007,,,,,,0|i0kiu7:,117869,,,,,,,,30/Mar/07 22:04;ehillenius;ICellPopulator now extends IDetachable and classes that use them detach them.,,,,,,,,,,,,,,,,,,,,,,,
autocomplete does not explicitly call input's onchange event,WICKET-378,12364714,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,janne,kc7bfi,kc7bfi,12/Mar/07 12:52,23/Mar/07 08:33,13/Mar/19 23:15,23/Mar/07 08:33,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,1.3.0-beta1,,wicket-extensions,,,,0,,,,,,,,"When selecting a item from the autocomplete drop down, the onchange event handler on the input is not called. The wicket-autocomplete.js needs to be modified to call the onchange function explicitly. the changes should include:

                case KEY_ENTER:
                    if(selected>-1){
                        obj.value=getSelectedValue();
                    if (typeof obj.onchange == ""function"") obj.onchange ();
                        hideAutoComplete();
                        return killEvent(event);
                    }
                    return true;
                break;

and

                node.onclick = function(event){
                    wicketGet(elementId).value=getSelectedValue();
                        if (typeof wicketGet(elementId).onchange == ""function"") wicketGet(elementId).onchange();
                    hideAutoComplete();
                   }

Thanks, David",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201445,,,2007-03-12 12:52:35.0,,,,,,0|i0kj07:,117896,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Go from setVisible(false) to setVisible(true) on a component in ajax does not work,WICKET-365,12364265,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,vincent.demay@anyware-tech.com,vincent.demay@anyware-tech.com,06/Mar/07 18:13,23/Mar/07 04:16,13/Mar/19 23:15,23/Mar/07 04:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,,,,,0,,,,,,,,"Because no tag is generated by RenderComponent when a component is not visible. The attach patch simply generates a <span id=""ComponentMarkupId""></span> when component is not visible and OuputMarkupId true. So we can now use ajax on setVisible(false component)",,,,,,,,,,,,,,,,,,,22/Mar/07 17:48;vincent.demay@anyware-tech.com;Component.java.365.patch.txt;https://issues.apache.org/jira/secure/attachment/12353976/Component.java.365.patch.txt,13/Mar/07 15:56;vincent.demay@anyware-tech.com;Component.patch.txt;https://issues.apache.org/jira/secure/attachment/12353204/Component.patch.txt,06/Mar/07 18:16;vincent.demay@anyware-tech.com;Component.patch.txt;https://issues.apache.org/jira/secure/attachment/12352760/Component.patch.txt,19/Mar/07 13:22;vincent.demay@anyware-tech.com;component-real.txt;https://issues.apache.org/jira/secure/attachment/12353648/component-real.txt,,,,,4.0,,,,,,,,,,,,,,,,,,,2007-03-06 18:36:47.214,,,no_permission,,,,,,,,,,,201433,,,Fri Mar 23 04:16:03 UTC 2007,,,,,,0|i0kj1j:,117902,,,,,,,,06/Mar/07 18:25;vincent.demay@anyware-tech.com;Thanks to Fred Bertin ;),"06/Mar/07 18:36;ivaynberg;i dont really like this. that span can mess with css,etc. if you set something as invisible it should be invisible.

the regular pattern of dealing with this is to add the invisible component's parent to the ajax target","06/Mar/07 19:34;jcompagner;i have said this before and i do it now in my own projects:

setVisible(false) in ajax should just do :display:none

But i can do that easily in our code. I don't know we can do that generic.
","06/Mar/07 20:45;ivaynberg;maybe the user has css that says display:block !important; on that div, who knows.

the only foolproof way to do this is to repaint the parent","07/Mar/07 08:58;vincent.demay@anyware-tech.com;Johan : Imho setVisible(false) should not render all the component to avoid the have a useless heavy html generated code.

Igor : ok, css can make some disturbing thinks on this. 
What about adding a style=""display:none"", style tag always overwrites css, is'nt it? 
I think putting a span tag is good (What is done in cocoon for exemple) because surounding something with a specific webMarkupContainer to make it visible or not is very annoying for developpers. On the other hand if you suround with a parent, it is the same problem because the parent should also have a html tag associated with disturbing css classes. ","07/Mar/07 09:13;ivaynberg;what about cases where this would lead to invalid html? lets say you want to hide a row inside a table. having

<tr></tr><span style=""display:none""></span><tr></tr> isnt kosher

hate to play the devils advocate on this, but we need to make sure that this is the best solution and will work for everything out there.","07/Mar/07 09:30;fred.bertin;then why not simply adding the style=""display:none"" attribute to the component tag, instead of creating an additional <span> ?","07/Mar/07 16:08;ivaynberg;because this is for usecases when a component is hidden initially, and is later shown","13/Mar/07 15:55;vincent.demay@anyware-tech.com;I try with placeholder under safari, ff and ie, the problem comes from ff. When you try to put a non html tag in a table tag, firefox remove it to put it before the first table tag. So we can not to this kind of stuff with a wicket:placeholder.

Now I've done an other version putting the componentTag without its content but with its id and a style=""display:none"". It works like a charm under IE, FF and safari. Have a look at the second attached file.

Here is the test I used :

	private final TextField field;
	private final WebMarkupContainer markupContainer;
	
	public TestPlaceHolder(PageParameters parameters)
	{
		
		markupContainer = new WebMarkupContainer(""markupContainer"");
		markupContainer.setVisible(false);
		markupContainer.setOutputMarkupId(true);
		add(markupContainer);
		
		field = new TextField(""text"", new Model(""foo""));
		field.setVisible(false);
		field.setOutputMarkupId(true);
		add(field);
		
		
		add(new AjaxLink(""showField""){

			@Override
			public void onClick(AjaxRequestTarget target) {
				field.setVisible(true);
				markupContainer.setVisible(true);
				target.addComponent(markupContainer);
				target.addComponent(field);
				
			}
			
		});
		
	}
	



And Html file : 

        <input wicket:id=""text""></input>
	<table>
		<tr>
			<td>test0</td>
		</tr>
		<tr wicket:id=""markupContainer"">
			<td>test1</td>
		</tr>
		<tr>
			<td>test2</td>
		</tr>
	</table>
	<a wicket:id=""showField"">ShowField</a> ",13/Mar/07 15:56;vincent.demay@anyware-tech.com;Second version patch,"13/Mar/07 16:03;ivaynberg;i still dont think this is a way to go. if something is hidden it should not be rendered!

one) it might be an expensive operation to render it
two) when you do call show on it the markup is not updated at that time, just made visible, so you will potentially display stale data.

i think the original way is wordier but still the best because it doesnt have any problems other then wordiness",18/Mar/07 16:50;ivaynberg;im closing this now because i dont think this is the way to go. if you feel strongly about it please start a public discussion on @dev,"22/Mar/07 17:47;vincent.demay@anyware-tech.com;According to the thread on wicket-dev : 
http://www.nabble.com/Going-from-setVisible%28false%29-to-setVisible%28true%29-does-not-work-without-surounding-element-tf3426430.html",22/Mar/07 17:50;vincent.demay@anyware-tech.com;The patch using setoutputmarkuptag is Component.java.365.patch.txt (3 kb),"22/Mar/07 18:42;ivaynberg;why is the patch setting the flag to default and then turning it off?

@@ -530,7 +534,7 @@
 
 	/** Component flags. See FLAG_* for possible non-exclusive flag values. */
 	private int flags = FLAG_VISIBLE | FLAG_ESCAPE_MODEL_STRINGS | FLAG_VERSIONED | FLAG_ENABLED
-			| FLAG_IS_RENDER_ALLOWED;
+			| FLAG_IS_RENDER_ALLOWED | FLAG_PLACEHOLDER;
 
 	/** Component id. */
 	private String id;
@@ -567,6 +571,8 @@
 	{
 		setId(id);
 		getApplication().notifyComponentInstantiationListeners(this);
+		//Default behavior : do not render placeholder
+		setFlag(FLAG_PLACEHOLDER, false);
 	}
",23/Mar/07 04:16;ivaynberg;implemented as setOutputMarkupPlaceholderTag(),,,,,,,,
(Ajax)TabbedPanel uses a span for the panel content where a div would be great,WICKET-334,12363716,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,ivovandongen,ivovandongen,27/Feb/07 16:49,20/Mar/07 19:19,13/Mar/19 23:15,20/Mar/07 19:19,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-extensions,,,,0,,,,,,,,"The TabbedPanel (and the AjaxTabbedPanel have the following markup:

<wicket:panel>
<div class=""tab-row"">
<ul>
	<li wicket:id=""tabs"">
		<a href=""#"" wicket:id=""link""><span wicket:id=""title"">[[tab title]]</span></a>
	</li>
</ul>

</div>
<span wicket:id=""panel"" class=""tab-panel"">[panel]</span>
</wicket:panel>

This uses a span for the panel content. This is an inline element so the contained panel can not include any block level elements otherwise the output is not xhtml compliant. This could just as well be a div so every element you like can be in te panel.","Linux, i386. Java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201403,,,2007-02-27 16:49:29.0,,,,,,0|i0kj47:,117914,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OnError does not work on file upload exceding max size,WICKET-9,12353472,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,pablo72,pablo72,18/Oct/06 08:24,12/Mar/07 07:57,13/Mar/19 23:15,11/Mar/07 06:12,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,,,,,,,0,,,,,,,,"The Form#onError method is not invoked when a user is uploading a file bigger than the max size attribute specified.

This is a strange behaviour because an error message is set correctly but is not possible to intercept the reasing error event. 

This happens because Form#handleMultiPart() set an error in the form component and retun false, so Form#process() is not called and nobody invoke Form#onError().



",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-11 06:12:29.799,,,no_permission,,,,,,,,,,,201097,,,Mon Mar 12 07:57:09 UTC 2007,,,,,,0|i0kju7:,118031,,,,,,,,11/Mar/07 06:12;ehillenius;Sorry this one was handled so late. Fixed for 1.2.6,"12/Mar/07 07:57;pablo72;Nice, thanks

",,,,,,,,,,,,,,,,,,,,,,
Internal Error with Wizard example,WICKET-317,12363512,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,xavier,xavier,23/Feb/07 18:45,11/Mar/07 17:34,13/Mar/19 23:15,11/Mar/07 17:34,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-examples,,,,0,,,,,,,,"Scenario:
go to abracabra example: http://wicketstuff.org/wicket13/wizard/ 
follow the first link: http://wicketstuff.org/wicket13/wizard/?wicket:interface=:3:staticWizardLink::ILinkListener : 
Hit ""next"" twice, then ""previous"".

Then the page display ""Internal Error""

Note that what is also strange is that if I hit ""next"" then ""previous"" I see the third panel, instead of the first one.","Browser: Opera 9.02, Firefox 2.0.0.1, IE 7.0
OS: Windows XP SP2
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-11 17:22:22.166,,,no_permission,,,,,,,,,,,201386,,,Sun Mar 11 17:22:22 UTC 2007,,,,,,0|i0kj5j:,117920,,,,,,,,11/Mar/07 17:22;ehillenius;Great. It seems that the wizard component just doesn't work at all anymore.,,,,,,,,,,,,,,,,,,,,,,,
AbstractHeaderContributor.cleanup() will never be called,WICKET-276,12362516,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,akull82,akull82,11/Feb/07 14:28,11/Mar/07 06:27,13/Mar/19 23:15,11/Mar/07 06:27,1.2.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.6,,,wicket,,,,0,,,,,,,,I am using the HeaderContributor.forJavaScript method. and the HeaderContributor.cleanup() is never called. so processedEntries will be stay alive in thead and if the thread will be reused for another request the renderHead method will not process the contributors which are known in the thead form previouse request. after i add a new HeaderContributor().cleanup(); in WebRequestCycle.onEndRequest()  every thing works fine.,winstone servlet engine,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-11 06:27:06.205,,,no_permission,,,,,,,,,,,201349,,,Sun Mar 11 06:27:06 UTC 2007,,,,,,0|i0kj9b:,117937,,,,,,,,11/Mar/07 06:27;ehillenius;This issue seems to have been fixed already. Just checked it with 1.2.6 and cleanup is called properly,,,,,,,,,,,,,,,,,,,,,,,
Stateless components everywhere breaks existing applications,WICKET-86,12356003,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,dashorst,dashorst,17/Nov/06 16:28,11/Mar/07 02:59,13/Mar/19 23:15,11/Mar/07 02:59,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"In our application we just upgraded to 1.3, and the stateless components break urls on bookmarkable pages.

These are url's generated on a DataView#Item, using component.urlFor(ILinkListener.INTERFACE);
	CharSequence urlForLink = LinkItem.this.urlFor(ILinkListener.INTERFACE);
	return ""javascript:location.href='"" + urlForLink + ""';"";

Wicket 1.3:
javascript:location.href='/vocus/app?wicket:bookmarkablePage=:nl.topicus.iridium.web.gui.leerling.LeerlingZoekenPage&wicket:interface=:2:leerlingen:3::ILinkListener';

Wicket 1.2:
javascript:location.href='/vocus/app?wicket:interface=:3:leerlingen:3::ILinkListener';

The 1.3 version doesn't work for paged requests. The default of setting the components to stateless breaks in this case our application.

The workaround for this particular component is to override 'getStatelessHint()' and return false in it. However we are afraid more components will break silently.

In the logs we see:
11:39:45,103 [http-8080-Processor24] INFO  wicket.request.compound.DefaultRequestTargetResolverStrategy.resolveListenerInterfaceTarget(DefaultRequestTargetResolverStrategy.java:304) : component not enabled or visible, redirecting to calling page, component: null

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-21 16:25:19.0,,,no_permission,,,,,,,,,,,201172,,,Wed Jan 31 06:25:18 UTC 2007,,,,,,0|i0kjpz:,118012,,,,,,,,"21/Nov/06 16:25;jcompagner;ahh ok LinkItem is a component of the project itself then implements ILinkListener 
then yes you have to also implement getStatelessHint() and return false..

We can't do it the other way around because if getStatelessHint() returns true by default
then pretty much every page will be statefull.. Because if you use a label or markup container or what ever (Item of a listview)
that will make the page statefull..

So what we want is that if you implement an event interface then you are by default statefull.
And then you can override it with returning false..
so the question is how can we test quickly if we implement such a thing???

johan
","21/Nov/06 16:26;jcompagner;the question remains by the way why it fails
the link: /vocus/app?wicket:bookmarkablePage=:nl.topicus.iridium.web.gui.leerling.LeerlingZoekenPage&wicket:interface=:2:leerlingen:3::ILinkListener
shouldn't fail.
The interface part should just work And only if that doesn't work it should fallback to create a bookmarkable page and call it on that.
need to reproduce this.",05/Jan/07 05:46;ehillenius;what is the status? This bug has been untouched for 1.5 months... unable to reproduce?,"05/Jan/07 11:08;jcompagner;i think this one can be closed, stateless links/forms and so on is already greatly improved in 1.3 and 2.0
it works now much better.

The problem still is if you implemente the ILinkListener interface yourself. You have to also override the getStatelessHint() method.
because by default all components are stateless and only the default link/form and behaviours are statefull..

But martijn knows if this still is a problem or not i guess
",31/Jan/07 06:25;ehillenius;Can this be closed Martijn?,,,,,,,,,,,,,,,,,,,
AjaxSelfUpdatingTimerBehavior only updates once in Safari browswer,WICKET-173,12358834,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,ejeklint,ejeklint,16/Dec/06 15:48,11/Mar/07 02:58,13/Mar/19 23:15,11/Mar/07 02:58,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"AjaxSelfUpdatingTimerBehavior does not work on Safari and Wicket 2.0. Or to be precise, it updates ONCE and then stops, with the message ""INFO: Chanel busy - postponing..."" in the Wicket Ajax Debug window. It works fine with Firefox on Mac.

A running example can be seen here: http://www.ejeklint.se/irrigator/ and the source code is available by svn with ""svn checkout http://irrigator.googlecode.com/svn/trunk/ irrigator""",Mac OS X and Safari 2.0.4,,,,,,,,,,,,,,WICKET-156,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-05 05:49:22.308,,,no_permission,,,,,,,,,,,201256,,,Fri Jan 19 00:52:00 UTC 2007,,,,,,0|i0kjjr:,117984,,,,,,,,05/Jan/07 05:49;ehillenius;can you take a look Matej?,"19/Jan/07 00:52;knopp;I have fixed this, can someone confirm it?",,,,,,,,,,,,,,,,,,,,,,
clean up info on site,WICKET-235,12361200,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,dashorst,ehillenius,ehillenius,24/Jan/07 18:50,11/Mar/07 02:45,13/Mar/19 23:15,11/Mar/07 02:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,0,,,,,,,,"There is some horribly outdated stuff on the site, e.g. on the FAQ: http://wicket.sourceforge.net/faqs.html, 'How can I hide markup and/or components?' which uses a pre 1.0 way of using wicket ids. Any such information should be removed from the site, so that we end up just having some plain info that won't be outdated soon. For anything we have the WIKI and mailing list archives and examples etc.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-24 18:52:54.238,,,no_permission,,,,,,,,,,,201311,,,Wed Jan 24 18:56:45 UTC 2007,,,,,,0|i0kjdb:,117955,,,,,,,,24/Jan/07 18:52;ivaynberg;lets move the site to wicket-stuff and preferrably into confluence there with the new skin so we can help maintain it,24/Jan/07 18:56;ehillenius;+100,,,,,,,,,,,,,,,,,,,,,,
EmailAddressPatternValidator does not correctly identify TLDs with more than 3 letters,WICKET-277,12362523,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jbq,kinabalu,kinabalu,11/Feb/07 20:00,06/Mar/07 13:41,13/Mar/19 23:15,06/Mar/07 13:41,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"The following is already fixed in wicket-1.2, but doesn't seem to have made it into 2.0 yet.  The following looks like a valid regex for this:

^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*((\\.[A-Za-z]{2,}){1}$)","Wicket-2.0, IDEA",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201350,,,2007-02-11 20:00:36.0,,,,,,0|i0kj93:,117936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BookmarkablePageLink only sets the target attribute when it exists in the markup,WICKET-345,12363989,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,02/Mar/07 19:46,03/Mar/07 23:34,13/Mar/19 23:15,03/Mar/07 23:34,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"BookmarkablePageLink adds an attribute modifier to itself when setPageMap is called. However, it creates the attribute modifier in such a fashion that it is only applied when the target attribute is already in the markup. The initial goal to implement it like that was to make the change unobtrusive. I'm backtracking on that now though, as I now think it is actually half baked. I'd like to change the behavior so that it /always/ sets the target when you call setPageMap on it. This would mean that you'll popup another window if you try to link to a different page map in the same screen, but you shouldn't do that anyway.

See http://www.nabble.com/Re%3A-Extending-wicket.markup.html.tree.Tree-p9273422.html for a problem this would fix. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201414,,,2007-03-02 19:46:28.0,,,,,,0|i0kj2v:,117908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problems with Wickets way of searching all resource files,WICKET-137,12357636,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,juergen.donnerstag@eds.com,fluxcoder,fluxcoder,04/Dec/06 13:08,03/Mar/07 14:01,13/Mar/19 23:15,03/Mar/07 14:01,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"Take a look in http://cwiki.apache.org/WICKET/i18n-and-resource-boundles.html

Wicket will search for
1. Panel_locale.properties
and if the file exists and the property is not located in this file ""Panel_locale.properties then it will never look in ""Panel.properties"" for the property.
Wicket will only continue the search in 
2. Panel.properties
if the file ""Panel_locale.properties"" does not exist.

See discussion http://sourceforge.net/mailarchive/forum.php?thread_id=31159579&forum_id=42411
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-03 14:01:16.068,,,no_permission,,,,,,,,,,,201221,,,Sat Mar 03 14:01:16 UTC 2007,,,,,,0|i0kjmf:,117996,,,,,,,,03/Mar/07 14:01;jdonnerstag;reworked the whole Localizer stuff in 2.0,,,,,,,,,,,,,,,,,,,,,,,
"The Wicket javascript global ""Class"" should be in the Wicket namespace",WICKET-246,12361547,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,redhatdude,redhatdude,30/Jan/07 09:30,28/Feb/07 15:40,13/Mar/19 23:15,28/Feb/07 15:40,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"Put the Wicket javascript global ""Class"" in the Wicket namespace to prevent collisions with other javascript frameworks.  It is defined in /wicket/src/main/java/wicket/ajax/wicket-ajax.js.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-28 15:40:09.445,,,no_permission,,,,,,,,,,,201322,,,Wed Feb 28 15:40:09 UTC 2007,,,,,,0|i0kjbz:,117949,,,,,,,,28/Feb/07 15:40;knopp;moved  to Wicket.,,,,,,,,,,,,,,,,,,,,,,,
AjaxFormSubmitBehavior: method onSubmit and method onError are called both on submit,WICKET-262,12362187,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,hell,hell,07/Feb/07 11:48,07/Feb/07 18:07,13/Mar/19 23:15,07/Feb/07 18:07,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,,,,,0,,,,,,,,"wicket.ajax.form.AjaxFormSubmitBehavior:

Index: AjaxFormSubmitBehavior.java
===================================================================
--- AjaxFormSubmitBehavior.java (revision 504510)
+++ AjaxFormSubmitBehavior.java (working copy)
@@ -136,7 +136,7 @@
                        onSubmit(target);
                }

-               if (!form.hasError())
+               if (form.hasError())
                {
                        onError(target);
                }
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-07 18:07:21.361,,,no_permission,,,,,,,,,,,201337,,,Wed Feb 07 18:07:21 UTC 2007,,,,,,0|i0kj9r:,117939,,,,,,,,07/Feb/07 18:07;ivaynberg;oi :),,,,,,,,,,,,,,,,,,,,,,,
UploadProgressBar is unable to find component with id 'javascript',WICKET-261,12362176,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,jbq,jbq,07/Feb/07 10:13,07/Feb/07 13:44,13/Mar/19 23:15,07/Feb/07 13:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-extensions,,,,0,,,,,,,,"The following error is encountered since updating Wicket to the latest revision in branch 1.x:

{noformat}
Unable to find component with id 'javascript' in [MarkupContainer [Component id = _UploadProgressBarnullHeader1, page = com.caraldi.dashboard.FileUploadPage, path = 21:<auto>_header:_UploadProgressBarnullHeader1.HeaderPartContainer, isVisible = true, isVersioned = true]]. This means that you declared wicket:id=javascript in your markup, but that you either did not add the component to your page at all, or that the hierarchy does not match.
[markup = file:/usr/home/jbq/var/repos/wicket/branches/wicket-1.x/wicket-extensions/target/classes/wicket/extensions/ajax/markup/html/form/upload/UploadProgressBar.html, index = 3, current = '<script wicket:id=""javascript"" type=""text/javascript"">' (line 18, column 2)]
wicket.markup.MarkupException: Unable to find component with id 'javascript' in [MarkupContainer [Component id = _UploadProgressBarnullHeader1, page = com.caraldi.dashboard.FileUploadPage, path = 21:<auto>_header:_UploadProgressBarnullHeader1.HeaderPartContainer, isVisible = true, isVersioned = true]]. This means that you declared wicket:id=javascript in your markup, but that you either did not add the component to your page at all, or that the hierarchy does not match.
[markup = file:/usr/home/jbq/var/repos/wicket/branches/wicket-1.x/wicket-extensions/target/classes/wicket/extensions/ajax/markup/html/form/upload/UploadProgressBar.html, index = 3, current = '<script wicket:id=""javascript"" type=""text/javascript"">' (line 18, column 2)]
{noformat}

Attached patch removes <wicket:head> and adds the JS as header contributor.",,,,,,,,,,,,,,,,,,,07/Feb/07 10:14;jbq;20070207-wicket-extensions-1.x-UploadProgressBar;https://issues.apache.org/jira/secure/attachment/12350541/20070207-wicket-extensions-1.x-UploadProgressBar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-02-07 13:44:14.516,,,no_permission,,,,,,,,,,,201336,,,Wed Feb 07 13:44:14 UTC 2007,,,,,,0|i0kj9z:,117940,,,,,,,,"07/Feb/07 13:44;almaw;Fixed in r504543, thanks.",,,,,,,,,,,,,,,,,,,,,,,
replace & with &amp in ExternalLink,WICKET-251,12361880,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,ehillenius,ehillenius,02/Feb/07 22:17,04/Feb/07 17:29,13/Mar/19 23:15,02/Feb/07 22:18,1.2.5,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,1.2.5,1.3.0-beta1,2.0 branch (discontinued),,,,,0,,,,,,,,"See http://www.nabble.com/-Wicket-user---wicket-1.2.4--JIRA-issue--Ampersand-char-problem-in-%22wicket.markup.html.link.ExternalLink.java%22-tf3066396.html#a8528939

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-04 12:59:25.579,,,no_permission,,,,,,,,,,,201327,,,Sun Feb 04 17:29:44 UTC 2007,,,,,,0|i0kjbb:,117946,,,,,,,,02/Feb/07 22:18;ehillenius;fixed,"04/Feb/07 12:59;jcompagner;this fix should be undone again in 1.3/2.0 later on.
because we should really get rid of all those special replaces everywhere in the code
and only do it in one place (url encode or something)

","04/Feb/07 17:29;ehillenius;This fixed a problem someone had *now*, and that person doesn't buy much for the answer that we'll fix it *sometime*",,,,,,,,,,,,,,,,,,,,,
Header contribution is sometimes not rendered after the request,WICKET-188,12359534,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,novotnyr,novotnyr,29/Dec/06 12:06,01/Feb/07 06:34,13/Mar/19 23:15,29/Dec/06 17:57,1.2.3,1.2.4,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.5,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"The header contributions seem to be appearing and disappearing randomly. Let us have a simple webpage containing a link and a StringContributor. If I click on the link, the page refreshes and contributions appear normally. However, in the subsequent refreshes of that page in the browser (using the browser's refresh button) the contributions are not appearing.

There was already some fix in the HeaderContribution issue in Wicket 1.2.3. Does this problem have something in common with the fixed HeaderContribution issue in the Wicket 1.2.3? This problem does not occur with Wicket 1.2.1. 

After a little bit of debugging, I am suspecting that the ,,entries"" Set in the AbstractHeaderContributor is not properly cleaned up between the requests.

I have tried to blindly patch the AbstractBehavior according to the latest version in the trunk (there is some additional cleanup in this latest version) and this seems to have solved the problem (however I am not sure, whether this is sufficient).

","Tomcat 5.5.20, jdk 1.5.0_09, wicket 1.2.4",,,,,,,,,,,,,,,,,,29/Dec/06 12:08;novotnyr;AbstractBehavior-patched.java;https://issues.apache.org/jira/secure/attachment/12348055/AbstractBehavior-patched.java,29/Dec/06 12:08;novotnyr;sample-project.zip;https://issues.apache.org/jira/secure/attachment/12348054/sample-project.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-01-12 03:47:58.935,,,no_permission,,,,,,,,,,,201269,,,Fri Jan 12 04:59:12 UTC 2007,,,,,,0|i0kjhr:,117975,,,,,,,,"12/Jan/07 03:47;seanconway;I encountered this bug in Wicket 1.2.4

I consider this a critical bug. It is affecting the style sheet in my web application. 

When are you planning to release Wicket 1.25?   (soon, I hope!)
",12/Jan/07 04:59;ivaynberg;you should bring the question of 1.2.5 on our mailing list.,,,,,,,,,,,,,,,,,,,,,,
[Patch] NPE if FilterPath is null,WICKET-238,12361325,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,vincent.demay@anyware-tech.com,vincent.demay@anyware-tech.com,26/Jan/07 13:08,30/Jan/07 18:46,13/Mar/19 23:15,30/Jan/07 18:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,,,,,0,,,,,,,,"In our application, filter path is null so an NPE is threw in WebRequestCodingStrategy",,,,,,,,,,,,,,,,,,,26/Jan/07 13:09;vincent.demay@anyware-tech.com;WebRequestCodingStrategy.java.patch;https://issues.apache.org/jira/secure/attachment/12349682/WebRequestCodingStrategy.java.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-30 18:46:57.371,,,no_permission,,,,,,,,,,,201314,,,Tue Jan 30 18:46:57 UTC 2007,,,,,,0|i0kjd3:,117954,,,,,,,,30/Jan/07 18:46;almaw;This has been obsoleted by the new relative URLs approach. The filterPath is now derived from your web.xml automatically.,,,,,,,,,,,,,,,,,,,,,,,
Modal Window always creates new cookies,WICKET-242,12361509,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,knopp,knopp,29/Jan/07 21:42,29/Jan/07 21:42,13/Mar/19 23:15,29/Jan/07 21:42,1.2.2,1.2.3,1.2.4,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.5,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"Unless window.setCookieName is called manually, every instance of modal window creates new browser cookie. After some time, certain browsers can lose jsessionid cookie resulting in session expiration exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201318,,,2007-01-29 21:42:32.0,,,,,,0|i0kjcf:,117951,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Removing comments from markup can fail,WICKET-218,12360757,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,erikvanoosten,erikvanoosten,18/Jan/07 12:52,23/Jan/07 04:50,13/Mar/19 23:15,23/Jan/07 04:50,1.2.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.5,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,Markup with comments in it sometimes causes Wicket to crash with a nasty StringIndexOutOfBoundsException.,,,,,,,,,,,,,,,,,,,18/Jan/07 12:52;erikvanoosten;MarkupParserPatch.txt;https://issues.apache.org/jira/secure/attachment/12349162/MarkupParserPatch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201297,,,Thu Jan 18 12:55:30 UTC 2007,,,,,,0|i0kjef:,117960,,,,,,,,18/Jan/07 12:55;erikvanoosten;The problem is that the code tries to read beyond the comment even when the comment is exactly at the end of the rawMarkup.,,,,,,,,,,,,,,,,,,,,,,,
MockWebApplication initializes application twice,WICKET-225,12360856,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,jbq,jbq,19/Jan/07 10:45,23/Jan/07 01:25,13/Mar/19 23:15,23/Jan/07 01:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"To be convinced, try to use mountBookmarkablePage() in the init() method of your application.  That will fail because application is already initialized by WicketFilter.  See attached patch.",,,,,,,,,,,,,,,,,,,19/Jan/07 10:45;jbq;20070119-wicket-trunk-MockWebApplication;https://issues.apache.org/jira/secure/attachment/12349249/20070119-wicket-trunk-MockWebApplication,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201303,,,2007-01-19 10:45:15.0,,,,,,0|i0kjdj:,117956,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette tries to initialize values in constructor,WICKET-222,12360798,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jbq,jbq,18/Jan/07 19:01,23/Jan/07 00:29,13/Mar/19 23:15,23/Jan/07 00:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket-extensions,,,,0,,,,,,,,"When using a CompoundPropertyModel, the model is defined in the parent widgets.  However Palette tries to initialize its values in the constructor.  See patch attached.  Note that the model is read in onAttach() already.",,,,,,,,,,,,,,,,,,,19/Jan/07 09:47;jbq;20070118-wicket-1.x-Palette-initialization;https://issues.apache.org/jira/secure/attachment/12349243/20070118-wicket-1.x-Palette-initialization,18/Jan/07 19:01;jbq;20070118-wicket-1.x-Palette-initialization;https://issues.apache.org/jira/secure/attachment/12349200/20070118-wicket-1.x-Palette-initialization,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-01-19 17:04:03.159,,,no_permission,,,,,,,,,,,201301,,,Fri Jan 19 17:12:09 UTC 2007,,,,,,0|i0kjdr:,117957,,,,,,,,19/Jan/07 09:48;jbq;Updated patch: Palette also tries to call updateIds() even when the component is not yet attached.  This occurs when changing the model object before Palette is attached.,19/Jan/07 17:04;ivaynberg;you are not resetting attached to false anywhere?,"19/Jan/07 17:12;jbq;No, I'm not resetting the flag.  Maybe that would be cleaner to override onDetach() and reset the flag, but the main idea is to avoid computing the Palette values until the component is attached, and resetting the flag doesn't appear to be strictly needed.",,,,,,,,,,,,,,,,,,,,,
"http://foo/app/ doesn't work, but http://foo/app does, with WicketFilter.",WICKET-221,12360796,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,almaw,almaw,18/Jan/07 18:43,19/Jan/07 07:59,13/Mar/19 23:15,19/Jan/07 07:59,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"As summary.

ChuckDeal's take on it is this:

When tracing through the WicketFilter code, it looks like isWicketRequest() can't deal with it so it delegates to webApplication.getRequestCycleProcessor().getRequestCodingStrategy().urlCodingStrategyForPath(path) which returns null because it specifically excludes the '/'.  You can't mount '/' because mount(...) will throw IllegalArgumentException(""The mount
path '/' is reserved for the application home page"").  Is this a loophole, or have I missed something.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-18 21:06:08.501,,,no_permission,,,,,,,,,,,201300,,,Fri Jan 19 07:59:35 UTC 2007,,,,,,0|i0kjdz:,117958,,,,,,,,"18/Jan/07 18:45;almaw;A workaround for this is to mount the home page at something other than ""/"". That way, requests for ""/app/"" will get redirected to ""/app/Home"", for example.",18/Jan/07 21:06;jbq;I thought WICKET-205 was intended to fix that.  Or does it breaks your usecase?,"19/Jan/07 07:59;almaw;This should now be working in both the 1.3 and 2.0 branches. Yes, it is a separate issue to the one mentioned.",,,,,,,,,,,,,,,,,,,,,
NPE in Check.java,WICKET-88,12356061,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jdonnerstag,jdonnerstag,18/Nov/06 10:37,18/Jan/07 21:32,13/Mar/19 23:15,18/Nov/06 20:02,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"The Forms examples fails with an NPE in Check.java

               if (group.hasRawInput())
               {
                       String[] inputs = group.getInputAsArray();
                       for (String input : inputs)   <<<<<< NPE
                       {
                               if (value.equals(input))
                               {
                                       tag.put(""checked"", ""checked"");
                               }
                       }
               }

Juergen
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201173,,,2006-11-18 10:37:56.0,,,,,,0|i0kjpr:,118011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mounted URLs fail if filterPath is blank,WICKET-149,12358026,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,n8han,n8han,07/Dec/06 16:44,18/Jan/07 14:30,13/Mar/19 23:15,18/Jan/07 14:30,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"The path in RequestParameters needs to begin with a ""/"" or it will not be found when checking against mounted paths. The slash is prefixed in WicketFilter line 545 when checking isWicketRequest(), but it is not prefixed later when looking for the request target. Proposed fix in patch (to be attached) performs this operation in ServletWebRequest.getPath(); I'm not sure if that is the ideal spot, but I've confirmed that it fixes the problem.",jetty 5/6,,,,,,,,,,,,,,,,,,08/Dec/06 17:27;n8han;slashCheck.diff;https://issues.apache.org/jira/secure/attachment/12346807/slashCheck.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-12-07 19:01:13.0,,,no_permission,,,,,,,,,,,201233,,,Thu Jan 18 14:30:58 UTC 2007,,,,,,0|i0kjkv:,117989,,,,,,,,07/Dec/06 16:57;n8han;Attached patch to other bug http://issues.apache.org/jira/browse/WICKET-114#action_12456480 while waiting for this one to create itself (thought it had failed).,"07/Dec/06 19:01;jcompagner;when is this exactly happen?
And does it also happen in 2.0? (that code is now pretty much the same)","07/Dec/06 19:32;n8han;When I was working from the trunk a few weeks ago I didn't have any trouble with a blank filterPath; I don't have it checked out right now to check tho. This is what the stack looks like when it's looking for ""path"" in a map that's keyed by ""/path"":

Thread [SocketListener0-1] (Suspended (breakpoint at line 924 in WebRequestCodingStrategy$MountsMap))	
	WebRequestCodingStrategy$MountsMap.strategyForPath(String) line: 924	
	WebRequestCodingStrategy.urlCodingStrategyForPath(String) line: 295	
	WebRequestCodingStrategy.targetForRequest(RequestParameters) line: 357	
	DefaultRequestTargetResolverStrategy.resolve(RequestCycle, RequestParameters) line: 84	
	DefaultWebRequestCycleProcessor(AbstractCompoundRequestCycleProcessor).resolve(RequestCycle, RequestParameters) line: 47	
	DataRequestCycle(RequestCycle).step() line: 1008	
	DataRequestCycle(RequestCycle).steps() line: 1100	
	DataRequestCycle(RequestCycle).request() line: 454	
	WicketFilter.doGet(HttpServletRequest, HttpServletResponse) line: 243	
	WicketFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 122	
...","08/Dec/06 17:27;n8han;I just tested in 2.0 branch, no problem there. In that tree the path slash is prefixed (if not present) in AbstractWebRequestCodingStrategy.decode() (line 94). An analagous fix here would be in WebRequestCodingStrategy.decode(), as in the new patch I'm attaching. Confirmed that it fixes the problem.","14/Dec/06 05:51;n8han;Found another spot where the path is assumed to start with a slash, WebRequestCodingStrategy line 495 for ""/resources/"". The first patch I uploaded, the one on #114, is better than the one on this bug since it handles the resources case by prefixing the slash in request.getPath().",31/Dec/06 16:11;almaw;Pretty sure this one is now fixed. Please REOPEN if not.,"01/Jan/07 15:53;n8han;No, this is still broken. Tested with maven jetty plugin and current build.",01/Jan/07 22:13;jcompagner;is there a unit test or something like that where it goes wrong?,"01/Jan/07 22:30;n8han;The wicket-quickstart would make a good unit test if it were updated to use WicketFilter with no filterPath. This configuration is likely to be the favorite, and I'm surprised that no one with commit privileges has run into the problem yet.

Or can anyone confirm that it is working in his own projects with a blank filterPath?","01/Jan/07 23:36;almaw;Well, that's the thing - I'm running 1.3 and put in a fix a couple of weeks ago for this (see comment in #114). As far as I'm aware, mounted resources and mounted pages work fine with a filter path of ""/*"". The only thing that doesn't seem work properly at the moment is a stateless form on a mounted page.","02/Jan/07 00:48;n8han;Yes, I applied that change to my tree when it came in but I had to reapply my own patch to get things working again. The first time I came up with these patches I did a lot of tracing to see exactly what was necessary, and the condition that you are checking there (I think it's if the path matches '/' exactly) is not sufficient. getPath() is expected to always return with a leading slash, but the method in the tree does not do that.

I wonder if you've tested it only with a root mounted servlet context? The ones that I'm using have context paths.","02/Jan/07 09:10;almaw;Ah, that'd be it. I'm on holiday for a week. Promise I'll look into this as soon as I get back.","18/Jan/07 12:46;almaw;The patch doesn't cope with mounted resources and things. Am looking into fixing this differently, to cope with the following scenarios (any combination of them):

Mounted and unmounted pages.
Mounted and unmounted resources.
filter mapping=""/*"" or filter mapping=""/app/*"" with filterPath param of  """" and ""app"" respectively.
Context path of either ""/"" or ""/foo"".

Hopefully fixing and testing all of these will make things work for everyone.

An additional wrinkle is making this also work behind a proxy, with an overridden Application.setContextPath(), which also appears to be failing at the moment with WicketFilter.","18/Jan/07 13:15;n8han;The patch doesn't cope with as many things as it used to. There were some code changes last week that broke it. Rather than debug it over again I've stopped relying on blank filter paths, but if you get it fixed that would be great.","18/Jan/07 14:30;almaw;1.x fix in http://svn.apache.org/viewvc?view=rev&rev=497443
2.x fix in http://svn.apache.org/viewvc?view=rev&rev=497444

Hopefully now sorted. I'm sure you'll re-open again it if you have issues. :-)
We really need some unit tests for this - I'll get on that next.",,,,,,,,,
IBehavior#rendered() is called twice when a component that has that behavior is rendered via AJAX,WICKET-7,12353338,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,redhatdude,redhatdude,17/Oct/06 00:49,13/Jan/07 08:42,13/Mar/19 23:15,13/Jan/07 08:42,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"The IBehavior#rendered() method is called twice when a component that has that behavior is rendered via AJAX.  When rendering the component though the normal process (not ajax) it is only called once.

Here are the two places it's getting called:

The AjaxRequestTarget#respondComponent() method calls component.renderComponent() which tells the behaviors that the component was rendered (line 464 of AjaxRequestTarget.java ).

The AjaxRequestTarget#respondHeaderContribution() method goes calls each component's renderedBehaviors() method which ends up calling IBehavior#rendered() (lines 513 and 524 of AjaxRequestTarget.java).

The result of this is that Firefox, Safari, and Opera (I don't know about IE) end up executing any javascript that's rendered through a behavior twice.

The example I tested was adding an AutoCompleteTextField to a page through ajax.",Wicket 2.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-13 08:11:52.563,,,no_permission,,,,,,,,,,,201096,,,Sat Jan 13 08:11:52 UTC 2007,,,,,,0|i0kjun:,118033,,,,,,,,"13/Jan/07 08:11;ehillenius;Can't reproduce this for 2.0, but onComponentRendered is called twice in 1.3",,,,,,,,,,,,,,,,,,,,,,,
Undo of page with ajax requests gives exception with backbutton,WICKET-203,12360175,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,dashorst,dashorst,10/Jan/07 11:34,10/Jan/07 16:09,13/Mar/19 23:15,10/Jan/07 16:09,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Ajax together with ListView gives exceptions when the backbutton is pressed (this is the hypothesis):

[2007-01-10 11:34:28,985] [TP-Processor20] RequestCycle.step(1059) | Cannot remove [MarkupContainer [Component id = 3, page = <No Page>, pat
h = 3.ListItem]] from null parent!
java.lang.IllegalStateException: Cannot remove [MarkupContainer [Component id = 3, page = <No Page>, path = 3.ListItem]] from null parent!
        at wicket.Component.remove(Component.java:1464)
        at wicket.version.undo.Add.undo(Add.java:80)
        at wicket.version.undo.ChangeList.undo(ChangeList.java:92)
        at wicket.version.undo.UndoPageVersionManager.undo(UndoPageVersionManager.java:216)
        at wicket.version.undo.UndoPageVersionManager.getVersion(UndoPageVersionManager.java:166)
        at wicket.Page.getVersion(Page.java:604)
        at wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.get(SecondLevelCacheSessionStore.java:82)
        at wicket.Session.getPage(Session.java:518)
        at wicket.request.compound.DefaultRequestTargetResolverStrategy.resolveRenderedPage(DefaultRequestTargetResolverStrategy.java:220)
        at wicket.request.compound.DefaultRequestTargetResolverStrategy.resolve(DefaultRequestTargetResolverStrategy.java:163)
        at wicket.request.compound.AbstractCompoundRequestCycleProcessor.resolve(AbstractCompoundRequestCycleProcessor.java:47)
        at wicket.RequestCycle.step(RequestCycle.java:1008)
        at wicket.RequestCycle.steps(RequestCycle.java:1100)
        at wicket.RequestCycle.request(RequestCycle.java:454)
        at wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:243)
        at wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:136)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:199)
        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)
        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:754)
        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:684)
        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:876)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:595)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-01-10 12:34:15.65,,,no_permission,,,,,,,,,,,201283,,,Wed Jan 10 16:09:47 UTC 2007,,,,,,0|i0kjgf:,117969,,,,,,,,"10/Jan/07 12:34;knopp;Try to add the no-store header to page. If this helps it means that the browser doesn't use the most recent version of page. I don't know any workaround around this, except for preventing the browser to store ajax pages at all.","10/Jan/07 12:44;jcompagner;i don't think this is a browser issue.
I think this happens (looking at more log that was just before this error)

i have a page with a listview and an ajax unversioning behaviour on it.
I have a few normal request to that page. That creates a few versions

then the ajax request comes in that disables page versioning.
But it does render the listview again, so the listview does a remove all of its listitems and creates new onces.
This won't be recorderd because of the disabled page versioning.

But then a real undo is happening because the user does press the backbutton and ask for a lower version.
What happens then is that the ADD change that was added for that versions try to remove a component
that was already removed by the ajax request but that was not recorded..

If this is the case (don't know it yet) then i can just try to test for this in the Add.undo() method 
or Component.remove() must be silent..?
Or the ajax request shouldn't really disable the page versioning but it should do it job but under the same page version as before
(so we should merge it not just ignore it)
","10/Jan/07 12:53;knopp;Every component that is updated by ajax request should be not versioned. Otherwise you will get in trouble. This error might be related to this, as you say. But the problem with backbutton is there and it's real. ","10/Jan/07 14:57;knopp;Okay, johan was right of course :) This exception is because we attach components during ajax requiest while the page is still versioned. Attaching rebuilds items which creates another version. 
I also agree with Johan that we need to merge the changes to latest version, not just ignore versioning at all. That way version manager won't think that the items are there while they have already been removed.","10/Jan/07 16:09;jcompagner;fixed for 1.3
still need to backport (sorry forward port) it to 2.0",,,,,,,,,,,,,,,,,,,
SelectMultiple cannot be used with SelectOption,WICKET-200,12359967,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,ivaynberg,ivaynberg,07/Jan/07 21:15,09/Jan/07 18:26,13/Mar/19 23:15,09/Jan/07 18:26,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket-extensions,,,,0,,,,,,,,SelectOption checks its hieararchy for Select but SelectMultiple does not extend Select,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201281,,,2007-01-07 21:15:21.0,,,,,,0|i0kjh3:,117972,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<wicket:link broken?,WICKET-177,12359073,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jdonnerstag,knopp,knopp,19/Dec/06 21:25,26/Dec/06 10:42,13/Mar/19 23:15,26/Dec/06 10:42,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"In wicket examples, when I go to the simple tree page
http://localhost:8080/we/ajax?wicket:bookmarkablePage=:wicket.examples.ajax.builtin.tree.SimpleTreePage
and after that go to the tree table page
http://localhost:8080/we/ajax?wicket:bookmarkablePage=:wicket.examples.ajax.builtin.tree.TreeTablePage

I get this exception


WicketMessage: The component [MarkupContainer [Component id = <auto>-_autolink_2, page = wicket.examples.ajax.builtin.tree.TreeTablePage, path = 2:<auto>-<body>:<auto>-<auto>-child1:<auto>-<auto>-extend2:<auto>-_link_1:<auto>-_autolink_2.AutoLinkResolver$AutolinkBookmarkablePageLink, isVisible = true, isVersioned = true]] has the same wicket:id as another component already rendered at the same level

Root cause:

wicket.markup.MarkupException: The component [MarkupContainer [Component id = <auto>-_autolink_2, page = wicket.examples.ajax.builtin.tree.TreeTablePage, path = 2:<auto>-<body>:<auto>-<auto>-child1:<auto>-<auto>-extend2:<auto>-_link_1:<auto>-_autolink_2.AutoLinkResolver$AutolinkBookmarkablePageLink, isVisible = true, isVersioned = true]] has the same wicket:id as another component already rendered at the same level
at wicket.DebugHelper.onBeginComponentRender(DebugHelper.java:69)
at wicket.Page.componentRendered(Page.java:347)
at wicket.Component.rendered(Component.java:2021)
at wicket.Component.render(Component.java:1736)
at wicket.MarkupContainer.renderNext(MarkupContainer.java:1380)
at wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:974)
at wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:908)
at wicket.Component.renderComponent(Component.java:1968)
at wicket.MarkupContainer.onRender(MarkupContainer.java:919)
at wicket.Component.render(Component.java:1724)
at wicket.markup.resolver.WicketLinkResolver.resolve(WicketLinkResolver.java:74)
at wicket.MarkupContainer.renderNext(MarkupContainer.java:1405)
at wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:974)
at wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:908)
at wicket.Component.renderComponent(Component.java:1968)
at wicket.MarkupContainer.onRender(MarkupContainer.java:919)
at wicket.Component.render(Component.java:1724)
at wicket.markup.resolver.MarkupInheritanceResolver.resolve(MarkupInheritanceResolver.java:61)
at wicket.MarkupContainer.renderNext(MarkupContainer.java:1405)
at wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:974)
at wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:908)
at wicket.Component.renderComponent(Component.java:1968)
at wicket.MarkupContainer.onRender(MarkupContainer.java:919)
at wicket.Component.render(Component.java:1724)
at wicket.markup.resolver.MarkupInheritanceResolver.resolve(MarkupInheritanceResolver.java:61)
at wicket.MarkupContainer.renderNext(MarkupContainer.java:1405)
at wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:974)
at wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:908)
at wicket.Component.renderComponent(Component.java:1968)
at wicket.MarkupContainer.onRender(MarkupContainer.java:919)
at wicket.Component.render(Component.java:1724)
at wicket.MarkupContainer.renderNext(MarkupContainer.java:1380)
at wicket.MarkupContainer.renderAll(MarkupContainer.java:936)
at wicket.Page.onRender(Page.java:1046)
at wicket.Component.render(Component.java:1724)
at wicket.Component.render(Component.java:1678)
at wicket.Page.renderPage(Page.java:1169)
at wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:229)
at wicket.request.compound.DefaultResponseStrategy.respond(DefaultResponseStrategy.java:53)
at wicket.request.compound.AbstractCompoundRequestCycleProcessor.respond(AbstractCompoundRequestCycleProcessor.java:65)
at wicket.RequestCycle.doProcessEventsAndRespond(RequestCycle.java:944)
at wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:973)
at wicket.RequestCycle.step(RequestCycle.java:1054)
at wicket.RequestCycle.steps(RequestCycle.java:1125)
at wicket.RequestCycle.request(RequestCycle.java:470)
at wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:232)
at wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:122)
at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:823)
at org.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:473)
at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:567)
at org.mortbay.http.HttpContext.handle(HttpContext.java:1565)
at org.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:635)
at org.mortbay.http.HttpContext.handle(HttpContext.java:1517)
at org.mortbay.http.HttpServer.service(HttpServer.java:954)
at org.mortbay.http.HttpConnection.service(HttpConnection.java:814)
at org.mortbay.http.HttpConnection.handleNext(HttpConnection.java:981)
at org.mortbay.http.HttpConnection.handle(HttpConnection.java:831)
at org.mortbay.http.SocketListener.handleConnection(SocketListener.java:244)
at org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:357)
at org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:534)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-26 10:42:48.0,,,no_permission,,,,,,,,,,,201260,,,Tue Dec 26 10:42:48 UTC 2006,,,,,,0|i0kjjb:,117982,,,,,,,,26/Dec/06 10:42;jdonnerstag;fixed. Please validate,,,,,,,,,,,,,,,,,,,,,,,
ListView should not call getModelObject when not visible in hierarchy,WICKET-179,12359247,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,knopp,knopp,21/Dec/06 23:26,24/Dec/06 13:54,13/Mar/19 23:15,24/Dec/06 13:54,1.2.4,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,1.2.4,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201262,,,2006-12-21 23:26:02.0,,,,,,0|i0kjiv:,117980,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in assignable check in SimpleConverterAdapter,WICKET-161,12358475,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,12/Dec/06 23:33,12/Dec/06 23:33,13/Mar/19 23:15,12/Dec/06 23:33,1.2.2,1.2.3,1.2.4,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Jan Bar wrote:

Hi,

in my opinion, the logic with isAssignableFrom should be the opposite one
(wicket 1.2.3):

Object convert(..) {
...
// buggy, should be the opposite
//else if (value != null && (!value.getClass().isAssignableFrom(c)))
else if (value != null && (!c.isAssignableFrom(value.getClass())))
...
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201244,,,2006-12-12 23:33:37.0,,,,,,0|i0kjkf:,117987,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrong handling of exceptions for Resource#respond and ComponentResourceRequestTarget#respond,WICKET-144,12357843,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ehillenius,ehillenius,ehillenius,06/Dec/06 01:48,09/Dec/06 18:53,13/Mar/19 23:15,09/Dec/06 18:53,1.2.4,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,1.2.4,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"Resource's exception handling is too fragile. Currently (before fix) it looks like this:

	private final void respond(final IResourceStream resourceStream, final Response response)
	{
		try
		{
			final OutputStream out = response.getOutputStream();
			try
			{
				Streams.copy(resourceStream.getInputStream(), out);
			}
			finally
			{
				resourceStream.close();
				out.flush();
			}
		}
		catch (Exception e)
		{
			Throwable throwable = e;
			boolean ignoreException = false;
			while (throwable != null)
			{
				if (throwable instanceof SocketException)
				{
					String message = throwable.getMessage();
					ignoreException = message != null
							&& (message.indexOf(""Connection reset by peer"") != -1 || message
									.indexOf(""Software caused connection abort"") != -1);
				}
				else
				{
					ignoreException = throwable.getClass().getName()
							.indexOf(""ClientAbortException"") >= 0;
					if (ignoreException)
					{
						if (log.isDebugEnabled())
						{
							log.debug(""Socket exception ignored for sending Resource ""
									+ ""response to client (ClientAbort)"", e);
						}
						break;
					}
				}
				throwable = throwable.getCause();
			}
			if (!ignoreException)
			{
				throw new WicketRuntimeException(""Unable to render resource stream ""
						+ resourceStream, e);
			}
		}
	}

and ComponentResourceRequestTarget re-threw this exception, resulting in Wicket trying to render an error page. One problem with the above code is that it is simply does not cover all appservers/versions/os-ses, nor it that something we should want to support. For instance, an aborted request in Jetty on Linux/ OSX results in an IOException (or more concrete EofException).

Besides the fact that this can get you weird behavior in general, handling the exception like we did there is never a good idea. We should never try to render an error page for any exception during a resource request but instead set an appropriate status code. I propose status code 500 (INTERNAL_SERVER_ERROR) for this and put that in ComponentResourceRequestTarget, and alter Resource so that it always re-throws any exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-06 23:17:30.0,,,no_permission,,,,,,,,,,,201228,,,Sat Dec 09 18:53:50 UTC 2006,,,,,,0|i0kjlb:,117991,,,,,,,,06/Dec/06 22:13;ehillenius;see http://www.nabble.com/Re%3A-svn-commit%3A-r482863---in--incubator-wicket%3A-branches-wicket-1.2.x-wicket-src-main-java-wicket--branches-wicket-1.2.x-wicket-src-main-java-wicket-request-target-resource--branches-wicket-1.x-wicket-src-main-java-wicket--branches-wicket-1.x-wicket--tf2770886.html,"06/Dec/06 22:56;ehillenius;We can put that checking code in back again, and extend it with the cases for unix variants. What we should not put in is re-throwing of exceptions that aren't caught in that algorithm. They were ultimately caught by Wicket and Wicket tried to render an error page for it. Which doesn't make sense/ work for resource requests in the first place.","06/Dec/06 23:17;jcompagner;that change in ComponentResourceRequestTarget is fine
But code that tries to not throw an exception at all should be back in.
And improved for other situations/setups.

It is pretty easy testing if you can test it in a debugger.
Just set a break point in the respond method.
And hold the break there. Then press the stop loading button of the browser.
Then when you write again. Some kind of abort/reset socket exception should be thrown.
",09/Dec/06 18:53;ehillenius;Rolled back the change to Resource and included a FIXME that notes we don't cover all cases. But that doesn't lead to very serious problems anymore as it least the exception isn't thrown up in ComponentResourceRequestTarget anymore.,,,,,,,,,,,,,,,,,,,,
[PATCH]Re-render a table element via AjaxRequestTarget under IE does not works,WICKET-143,12357805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,knopp,vincent.demay@anyware-tech.com,vincent.demay@anyware-tech.com,05/Dec/06 18:07,06/Dec/06 08:29,13/Mar/19 23:15,05/Dec/06 21:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.4,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"I write something like that : 

<table>
  <tr wicket:id=""toBerefreshed"">[...]</tr>
</table>

toBeRefreshed is re-render via a AjaxRequestTarget with addComponant.

The issues is : Javascript to replace tr node under IE use outerHTML but outerHTML is readOnly on table element. So replacement failed and an error such as ""unknow error"" is thrown.

The attaching patch works around this f..ing IE bug using DOM to replace table elements : 

Index: /home/doume/dev/wicket/trunk/[WICKET TRUNCK]wicket/src/main/java/wicket/ajax/wicket-ajax.js
===================================================================
--- /home/doume/dev/wicket/trunk/[WICKET TRUNCK]wicket/src/main/java/wicket/ajax/wicket-ajax.js	(revision 479541)
+++ /home/doume/dev/wicket/trunk/[WICKET TRUNCK]wicket/src/main/java/wicket/ajax/wicket-ajax.js	(working copy)
@@ -173,7 +173,18 @@
        			break;       			
        		}
        }
-       element.outerHTML=text;
+       try {
+       		element.outerHTML=text;
+      } catch (e) {
+	       var tn = element.tagName;
+	       if(tn=='TBODY' || tn=='TR' || tn=='TD')
+	       {
+				var tempDiv = document.createElement(""div"");
+				tempDiv.innerHTML = '<table id=""tempTable"" style=""display: none"">' + text + '</table>';
+				element.parentNode.replaceChild(tempDiv.getElementsByTagName(tn).item(0), element);
+	       }
+	       else throw e;
+     }
        
        for (var j = i; j < parent.childNodes.length && parent.childNodes[j] != next; ++j) {
 	       Wicket.Head.addJavascripts(parent.childNodes[j]);       
",Internet Explorer and AjaxRequestTarget - Wicket1.X and trunk,,,,,,,,,,,,,,,,,,05/Dec/06 18:08;vincent.demay@anyware-tech.com;patch.txt;https://issues.apache.org/jira/secure/attachment/12346467/patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-12-05 21:45:18.0,,,no_permission,,,,,,,,,,,201227,,,Wed Dec 06 08:29:06 UTC 2006,,,,,,0|i0kjlj:,117992,,,,,,,,05/Dec/06 18:08;vincent.demay@anyware-tech.com;I also attach the patch as new file easier to apply ;) ,05/Dec/06 21:45;knopp;Thanks for the tip! ,"05/Dec/06 21:46;knopp;Also added support for other table elements, opera and inline javascript.",06/Dec/06 08:29;vincent.demay@anyware-tech.com;You're welcome. Yes I forgotten others elements,,,,,,,,,,,,,,,,,,,,
Wicket generates invalid XHTML for <link> tag,WICKET-97,12356234,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,cowwoc,cowwoc,21/Nov/06 05:56,05/Dec/06 22:54,13/Mar/19 23:15,05/Dec/06 22:54,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,Wicket is generating <link></link> style tags for CSS and JS whereas XHTML only allows <link/>. The XHTML validator flags the current output as an error.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-05 22:54:44.0,,,no_permission,,,,,,,,,,,201182,,,Tue Dec 05 22:54:44 UTC 2006,,,,,,0|i0kjp3:,118008,,,,,,,,05/Dec/06 22:54;almaw;Fixed as part of updates to WICKET-107.,,,,,,,,,,,,,,,,,,,,,,,
Text cursor not displayed in text fields in a ModalWindow (FireFox only),WICKET-39,12355181,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,almaw,cfmdobbie,cfmdobbie,09/Nov/06 17:48,27/Nov/06 15:19,13/Mar/19 23:15,27/Nov/06 15:19,1.2.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.3,,,wicket,,,,0,,,,,,,,"I have the requirement to display some data-entry fields in a ModalWindow.  While working on this problem, I have discovered that the text cursor is not displayed in text fields within a ModalWindow when running FireFox.  The text field seems otherwise fully-functional:

* I can click on the text field and type - the text appears.
* I can double-click the text-field - the browser auto-suggests previous entries correctly.

I have reproduced this behaviour in FireFox 1.5 and 2.0, and have confirmed that it works as expected in IE7.
","WinXP, FF2.0 and FF1.5",,,,,,,,,,,,,,,,,,09/Nov/06 17:51;cfmdobbie;textBoxCursorTest-0.1.war;https://issues.apache.org/jira/secure/attachment/12344692/textBoxCursorTest-0.1.war,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-24 18:30:20.0,,,no_permission,,,,,,,,,,,201127,,,Mon Nov 27 12:27:47 UTC 2006,,,,,,0|i0kjsf:,118023,,,,,,,,09/Nov/06 17:51;cfmdobbie;Simple project displaying this problem is attached.  Source code is included in WEB-INF/classes directory.,"10/Nov/06 11:56;cfmdobbie;After more investigation, I believe this to be a div-order issue.  I can see that the z-index of the mask is 20000 and the z-index of the modal window is 20001, but I have a suspicion that FireFox only looks at the order of the divs in the page to determine cursor visibility, not the z-index of those divs.  In this case, the div containing the mask is included on the page after the div containing the modal window.

I have a test-case that I will be submitting to Mozilla shortly.

If my suspicion is true, the fix of course is to output the mask div before the modal window div.  Can someone confirm whether or not this works?
","15/Nov/06 10:50;cfmdobbie;I don't know if anyone's reading this, but I've tested it as much as I can (not having the setup required to get a custom Wicket jar running) and I really, really think moving the mask div avoids this FireFox issue.  Has anyone had a chance to look at this?","24/Nov/06 18:30;almaw;Yep, I think you're right. Going to do some more testing and get this fixed in 1.3 / 2.x for you.",24/Nov/06 19:58;knopp;This should be already fixed in 1.2.3. Or at least in SVN. Can you please test latest wicket?,"27/Nov/06 12:27;cfmdobbie;Hi Matej and AlMaw,

I can confirm that this appears to work correctly in 1.2.3.

Charlie.
",,,,,,,,,,,,,,,,,,
RadioChoice produces invalid XHTML,WICKET-56,12355394,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,,cowwoc,cowwoc,12/Nov/06 08:46,21/Nov/06 08:13,13/Mar/19 23:15,21/Nov/06 08:13,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"If a RadioChoice component is bound to a <div> tag then Wicket adds a ""name"" attribute, but the XHTML validator complains that ""NAME"" may not be defined for a <div>. It looks as if only the actual <input> tags are supposed to contain ""name"", not the parent tag.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-15 06:47:28.0,,,no_permission,,,,,,,,,,,201143,,,Tue Nov 21 05:55:11 UTC 2006,,,,,,0|i0kjrj:,118019,,,,,,,,15/Nov/06 06:47;ivaynberg;try calling setRenderBodyOnly(true) on the component. if that works and the component still works i will roll it into the core.,"21/Nov/06 05:55;cowwoc;Yes, setRenderBodyOnly(true) makes ""name"" go away but it's not a solution because if the <div> was marked up with other attributes (such as CSS styles) you are stripping them away silently. That is precisely what I happen to have in my own HTML code.

Can't you just get Wicket to not add the name attribute?",,,,,,,,,,,,,,,,,,,,,,
WebRequestCodingStrategyTest failing,WICKET-89,12356062,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,ivaynberg,jdonnerstag,jdonnerstag,18/Nov/06 10:38,18/Nov/06 20:17,13/Mar/19 23:15,18/Nov/06 20:17,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket,,,,0,,,,,,,,"WebRequestCodingStrategyTest is failing.
Mind someone looking into it. Thanks

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201174,,,2006-11-18 10:38:47.0,,,,,,0|i0kjpj:,118010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove PageMap from session metadata,WICKET-70,12355671,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Major,Fixed,jcompagner,marie,marie,15/Nov/06 07:11,15/Nov/06 09:21,13/Mar/19 23:15,15/Nov/06 09:21,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"When removing a PageMap with ""PageMap.forName(...).remove()"", it is still found in the PageMapAccessMetaData from the session (wicket.markup.html.WebPage, line 379).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-15 09:21:13.0,,,no_permission,,,,,,,,,,,201156,,,Wed Nov 15 09:21:13 UTC 2006,,,,,,0|i0kjqf:,118014,,,,,,,,"15/Nov/06 09:21;jcompagner;fixed in 1.3 and 2.0

i think this should be back ported it to 1.2.4",,,,,,,,,,,,,,,,,,,,,,,
AjaxFallbackButton: inconsistent submit order,WICKET-1894,12407157,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,sfussenegger,sfussenegger,24/Oct/08 07:51,03/Jun/12 04:47,13/Mar/19 23:15,30/Nov/10 06:51,1.3.5,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.15,1.5-RC1,,wicket,,,,1,,,,,,,,"I just stumbled upon a problem with a Form containing a nested Form and two AjaxFallbackButtons (submit and preview). I need to implement different onSubmit() behavior of the nested Form depending on the clicked button.

The order of onSubmit() calls is:

without JS:
- AjaxFallbackButton.onSubmit(AjaxRequestTarget,Form)
- OuterForm.onSubmit() // not used
- Inner Form.onSubmit()

with JS:
- Inner Form.onSubmit()
- OuterForm.onSubmit() // not used
- AjaxFallbackButton.onSubmit(AjaxRequestTarget,Form)

With JS, it is therefore not possible to determine which button was clicked from inside a form's onSubmit() method. 

see also http://www.nabble.com/AjaxFallbackButton%3A-inconsistend-submit-order-td20131329.html",,,,,,,,,,,,,,,,,WICKET-4575,,02/Nov/10 19:55;jacobdubray;Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12458668/Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-04-27 16:38:13.59,,,no_permission,,,,,,,,,,,202820,,,Mon Jan 03 12:33:22 UTC 2011,,,,,,0|i0kezr:,117246,,,,,,,,"27/Apr/10 16:38;jthomerson;adding 1.4.7 to the ""affected versions"".  see http://apache-wicket.1842946.n4.nabble.com/AjaxFallbackButton-onSubmit-call-order-td2067805.html#a2067805 for more info",25/Aug/10 22:28;ivaynberg;i remember fixing something like this recently. please provide a quickstart if it is still the case with latest 1.4.x.,"02/Nov/10 19:55;jacobdubray;I mentioned the observation of this issue in 1.4.7 as noted in http://apache-wicket.1842946.n4.nabble.com/AjaxFallbackButton-onSubmit-call-order-td2067805.html#a2067805 

I recently checked back to see if a newer release contained  a solution and noticed it was closed without a fix version. It directly affects usage of deferred validation in a form's onSubmit method when an updated model object is required for further validation. I could get into more detail with my particular need for this usage, but that's not necessary to illustrate the problem.

I've attached a quick start illustrating the problem in 1.4.12. Is this still an issue or has it been addressed in some other issue or change in 1.5?

Thanks","03/Jan/11 12:33;pedrosans;Hi Sven, you can use the ""Subversion Commits"" or ""FishEye"" tabs",,,,,,,,,,,,,,,,,,,,
OnChangeAjaxBehavior + DatePicker do not work together,WICKET-2424,12433047,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,varlax,varlax,14/Aug/09 07:49,09/Nov/11 10:49,13/Mar/19 23:15,18/Mar/10 02:17,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,wicket-extensions,,,1,,,,,,,,"DatePicker fails to notify component update when OnChangeAjaxBehavior is used on the target input.
It works well with AjaxFormComponentUpdatingBehavior.

The root cause seems to be in the Wicket.ChangeHandler added by the OnChangeAjaxBehavior, which hides user handler while the DatePicker calls onchange handler directly (wicket-date.js:186):
if (field.onchange != null && typeof(field.onchange) != 'undefined') field.onchange(); 

Possible fix could be dispatching onchange Event instead of direct handler invocation. 
Yet I don't know what is purpose of Wicket.ChangeHandler here...","Firefox, IE",,,,,,,,,,,,,,WICKET-4204,,,,05/Mar/10 09:51;raimohanska;wicket-2424-patch.txt;https://issues.apache.org/jira/secure/attachment/12437987/wicket-2424-patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-05 09:50:23.044,,,no_permission,,,,,,,,,,,203311,,,Fri Mar 05 09:51:28 UTC 2010,,,,,,0|i0kden:,116989,,,,,,,,"05/Mar/10 09:50;raimohanska;I ran to into the same problem with Wicket 1.4.6. I have a patch for this. The idea of the patch is to save the original ""onchange"" function of the textfield into ""onchangeoriginal"" function and then use this function in wicket-date.js:

wicket-date.js
+	if (field.onchangeoriginal != null && typeof(field.onchangeoriginal) != 'undefined') field.onchangeoriginal();
wicket-ajax.js
+	obj.onchangeoriginal = obj.onchange;

Full patch attached.",05/Mar/10 09:51;raimohanska;Patch to fix the issue. Created for wicket-1.4.6.,,,,,,,,,,,,,,,,,,,,,,
Bad caching in <wicket:message> tag for the same key in same markup structure,WICKET-1697,12398145,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,kcabel,kcabel,12/Jun/08 08:07,14/Oct/11 18:31,13/Mar/19 23:15,16/Jun/08 15:53,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,0,,,,,,,,"wicket:message tag constructs the same key string (into cache) for same text key in the same 'element structure' in different pages. So if you load string in one page, this string will not change in other page until you change language etc.
Example: you have two independent pages (in different packages) with own *.properties files (with 'title' key) and each page has HTML markup:
<wicket:extend> <wicket:message key=""title""> ....

In this case, Localizer.java in line 210 will produce the same key (for 'title') for two independent pages. Because there is no parent div in markup file, cache key will be like this:
""title-org.apache.wicket.markup.resolver.MarkupInheritanceResolver$TransparentWebMarkupContainer:_extend11-org.apache.wicket.markup.resolver.MarkupInheritanceResolver$TransparentWebMarkupContainer:_child10-cs-null""
but same for BOTH pages.
Problem is, that this cache key is constructed via parent tags in HTML (up to page) and if you have the same parents and same key attribute in message tag, it will always hit cached string from other pages.

The only way to avoid this is to use different message keys in different pages. But this is very bad for us.
I think, that one good solution is to append page name into cache string - it will be like namespace in XML...

Bye (perfect work with Wicket!)
Karel, Prague","Wicket 1.4-M2, Java 1.6, Windows",86400,86400,,0%,86400,86400,,,,,,,,WICKET-4133,WICKET-1667,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,85640,,,2008-06-12 08:07:01.0,,,,,,0|i0kfhj:,117326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester doesn't handle multiple RestartResponseExceptions.,WICKET-2634,12444089,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,slonopotamus,slonopotamus,23/Dec/09 11:52,05/Oct/11 12:54,13/Mar/19 23:15,05/Oct/11 12:54,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5.0,,,wicket,,,,0,,,,,,,,"WicketTester doesn't handle multiple RestartResponseExceptions because it doesn't use the same loop pattern as RequestCycle.steps().

Testcase attached.

Low priority, i workarounded it in my app.",,,,,,,,,,,,WICKET-2502,,,,,,,17/Jan/10 10:19;martin-g;RestartResponseTest.java;https://issues.apache.org/jira/secure/attachment/12430543/RestartResponseTest.java,23/Dec/09 11:53;slonopotamus;RestartResponseTest.java;https://issues.apache.org/jira/secure/attachment/12428814/RestartResponseTest.java,17/Jan/10 10:19;martin-g;WICKET-2634.patch;https://issues.apache.org/jira/secure/attachment/12430544/WICKET-2634.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2010-01-17 10:18:30.313,,,no_permission,,,,,,,,,,,46399,,,Wed Oct 05 12:54:49 UTC 2011,,,,,,0|i0kcvb:,116902,,,,,,,,"24/Dec/09 10:31;slonopotamus;Oh, didn't see that dupe.","17/Jan/10 10:18;martin-g;This test case is much clear than the one in WICKET-2502.
I recommend it for debugging purposes.

To make it work I patched /wicket1.4-SNAPSHOT/src/main/java/org/apache/wicket/protocol/http/MockWebApplication.java, but also I modified the test case class because DummyPanelPage class has niether default constructor nor one with PageParameters parameter.","05/Oct/11 12:54;mgrigorov;This problem doesn't exists in 1.5.1.
I added org.apache.wicket.RestartResponseExceptionTest to validate it.
If you need it for 1.4.x please provide a patch.",,,,,,,,,,,,,,,,,,,,,
Fast multiple clicks on Link bound on non-<A> element causes error.,WICKET-1231,12384730,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,mika,mika,16/Dec/07 20:31,18/Jun/11 13:46,13/Mar/19 23:15,08/Jan/08 15:15,1.3.0-rc2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-final,,,wicket,,,,0,,,,,,,,"When you attach a link component to some other element that <A>, fast clicking on the element causes usually errors.

This issue can be demonstrated for example by creating link on table cell with html code:
...
<tr>
	<td wicket:id=""alink""
	style=""width: 100px; height: 100px; background-color: red;"">alink</td>
</tr>
...

and Java code:
...
add(new Link(""alink"") {
	public void onClick() {
		setResponsePage(TestPage.class);
	};
});
...

Now if you for example double-click the link you will probably get HTTP 404 or some other error.

I think that the problem is caused by the onclick event processing and relative urls.

For example by double-clicking a link, two onclick events are fired. First event sets the window.location.href to correct address appending the relative url ""ExamplePage/param1/val1"" to current url. Second event appends the ""ExamplePage/param1/val1"" again and now the resultant address is incorrect ""ExamplePage/param1/val1/ExamplePage/param1/val1"".","Tomcat 6, Firefox 2.0.0.11, Linux",,,,,,,,,,,,,,,,,,17/Dec/07 20:06;mika;TestApp.war;https://issues.apache.org/jira/secure/attachment/12371820/TestApp.war,17/Dec/07 20:06;mika;testapp-src.zip;https://issues.apache.org/jira/secure/attachment/12371821/testapp-src.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-12-17 09:53:38.028,,,no_permission,,,,,,,,,,,70994,,,Sat Jun 18 13:46:30 UTC 2011,,,,,,0|i0kgon:,117520,,,,,,,,"17/Dec/07 09:53;jcompagner;How do you double click?
Do you wait first for the page to be loaded?
Else you would click on the exact same url and that url is something like: ""wicket:interface=xxxxx""

You say you fast click. So i guess you dont wait, and the only thing you do is set a next page. 
That should just be done just twice. You don't rerender the same page after the click so that page is not changed
somehow so the second link click should just find the page again.
So i don't see what can go wrong in your situation please attach a quickstart app to this issue.
",17/Dec/07 20:06;mika;Test app and source to demonstrate the issue.,"17/Dec/07 20:40;mika;Issue seems to be less general than what I assumed. Link is on a mounted page with HybridUrlEncodingStrategy. Also the link is on a page which was requested with url parameters.

In the app I am developing the error was given on every double-click, but in the attached test app you might have to try a couple of times to find the right click ""frequency"" or try triple-click. It should be quite easy to reproduce even with this app. Hope you get the problem.

I guess that this is more of a browser issue and is caused by the url format which has parts separated with slashes ""/root/aaa/bbb/ccc"". Relative url with format wicket:interface=xxxxx referenced from url /MyApp/ becomes absolute url /MyApp/wicket:interface=xxxxx and if it is referenced again from url /MyApp/wicket:interface=xxxxx firefox just rips of the last part and appends the relative url wicket:interface=xxxxx and so the second reference is also handled right to be absolute url /MyApp/wicket:interface=xxxxx.

But when you are using url format with slashes firefox handles the second event (caused by clicking the link twice) so that the absolute url is invalid. When you click for the first time link on a page with with url /MyApp/TestPage/param1/val1/.0 a request to interface at relative url  ""../../../?wicket:interface=xxxxx"" is made which translates to absolute url /MyApp/?wicket:interface=xxxxx. But when the relative url is referenced again on the second event it translates into something like ""/MyApp/TargetPage/../../../?wicket:interface=xxxxx"" which firefox interprets as absolute url ""/?wicket:interface=xxxxx"" that does not even have the context part in the beginning and thus gives 404 error.
","19/Dec/07 21:56;jcompagner;just checked in a fix that seems to work for FF and IE
Matej is checking some more.",08/Jan/08 15:15;knopp;This should be already fixed. ,"18/Jun/11 13:46;jacekcz;Fast double Click on ResourceLink  (for example dynamic made PDF) give strange behavior too:
""Connection reset by peer"" Exception or others.

1.5.rc4.2
",,,,,,,,,,,,,,,,,,
FormTester's DropDownChoice onSelectionChanged() behaviour doesn't reload page,WICKET-1732,12399657,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,david.shepherdson,david.shepherdson,06/Jul/08 07:11,27/Dec/10 14:04,13/Mar/19 23:15,27/Dec/10 14:04,1.3.0-final,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-RC1,,,wicket,,,,0,,,,,,,,"When a DropDownChoice's onSelectionChanged() notification is sent from a browser, it causes the whole page to be reloaded/redisplayed (because the form is submitted). However, when the same notification is sent through the FormTester, it doesn't submit the form and therefore other components on the page may not be updated/redisplayed.

We're working around this by overriding FormTester's select() method so that it submits the form as follows:

    @Override
    public void select(String formComponentId, int index) {
        super.select(formComponentId, index);
        
        // Workaround for Wicket FormTester bug: selection changed notifications cause the page
        // to be reloaded in a real browser, but they don't when using the Wicket tester.

        FormComponent component = (FormComponent)getForm().get(formComponentId);

        if (component instanceof DropDownChoice) {
            try
            {
                Method wantOnSelectionChangedNotificationsMethod = DropDownChoice.class.getDeclaredMethod(""wantOnSelectionChangedNotifications"", new Class[0]);
                wantOnSelectionChangedNotificationsMethod.setAccessible(true);
                boolean wantOnSelectionChangedNotifications = ((Boolean)wantOnSelectionChangedNotificationsMethod.invoke(component, new Object[0])).booleanValue();
                if (wantOnSelectionChangedNotifications) {
                    // Notification method call has already been made by super,
                    // but we want to trigger the page load, as would happen in a real browser.
                    
                    // First, use reflection to get the form's hidden field id.
                    Method getHiddenFieldIdMethod = Form.class.getDeclaredMethod(""getHiddenFieldId"");
                    getHiddenFieldIdMethod.setAccessible(true);
                    String hiddenFieldId = (String) getHiddenFieldIdMethod.invoke(getForm());
                    
                    // Now set the parameter in the form
                    // to cause it to call the callback when submitted.
                    m_wicketTester.getServletRequest().setParameter(
                            hiddenFieldId, component.urlFor(IOnChangeListener.INTERFACE).toString());
                    
                    // And finally submit the form.
                    submit();
                    
                }
            }
            catch (Exception e)
            {
                throw new RuntimeException(e);
            }
        }
    }

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-20 21:53:00.19,,,no_permission,,,,,,,,,,,202671,,,Mon Dec 27 14:04:49 UTC 2010,,,,,,0|i0kfdr:,117309,,,,,,,,20/Sep/10 21:53;pete;Is this issue still existant in 1.4 or 1.5? 1.3 is not maintained anymore.,27/Dec/10 14:04;mgrigorov;Improved with r1053071.,,,,,,,,,,,,,,,,,,,,,,
Losing focus on Autocomplete field if DropDownChoice is updated using Ajax.,WICKET-2279,12425573,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,aslak,aslak,15/May/09 09:38,04/Dec/10 00:17,13/Mar/19 23:15,24/Aug/10 23:56,1.4-RC2,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,,,wicket,wicket-extensions,,,0,,,,,,,,"It seems that if a DropDownChoice is updated with ajax, the next AutoComplete field will lose focus when triggered if the 
updated DropDownChoice have had focus inbetween beeing updated and AutoComplete is triggered.
But only if focus on the DropDownChoice is gained/lost using KEY_TAB.

More description in the attached example..


","Error exposed in IE 6, 7, 8.
Works in Firefox, Chrome.",,,,,,,,,,,,,,,,,,15/May/09 09:41;aslak;AutoCompleteFocusIssuePage.html;https://issues.apache.org/jira/secure/attachment/12408237/AutoCompleteFocusIssuePage.html,15/May/09 09:41;aslak;AutoCompleteFocusIssuePage.java;https://issues.apache.org/jira/secure/attachment/12408238/AutoCompleteFocusIssuePage.java,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-08-25 00:14:14.015,,,no_permission,,,,,,,,,,,203176,,,Sat Dec 04 00:17:16 UTC 2010,,,,,,0|i0kdtb:,117055,,,,,,,,15/May/09 09:41;aslak;TestCase exposing the 'feature',"16/Jun/09 13:44;aslak;Some more testing shows that the ajax update is irellevant. 
A simple DropDownChoice before a Autocomplete Field results in the same behaviour.

As far as I can see, the error fields focus is called, but ignored by IE, probably becaus it thinks it allready has focus(based on keypress event source etc..).

This code expose the same bug:

{code}
Form<?> form = new Form<Void>(""form"");
add(form);

final TextField<String> startField = new TextField<String>(""startField"", new Model<String>(""""));
startField.setOutputMarkupId(true);
form.add(startField);

final TextField<String> errorField = new TextField<String>(""errorField"", new Model<String>(""""));
errorField.setOutputMarkupId(true);
form.add(errorField);

final DropDownChoice<String> triggerField = new DropDownChoice<String>(""triggerField"", Arrays.asList(""A"", ""B""));
triggerField.setOutputMarkupId(true);
form.add(triggerField);

errorField.add(new AutoCompleteBehavior<String>(StringAutoCompleteRenderer.INSTANCE) {
	private static final long serialVersionUID = 1L;

	@Override
	protected Iterator<String> getChoices(String input) {
		return Arrays.asList(""1"", ""2"").listIterator();
	}
});
{code}

{code:xml}
<form wicket:id=""form"">
	<table>
		<tr>
			<th>Start</th>
			<td><input type=""text"" wicket:id=""startField"" /></td>
			<td></td>
		</tr>
		<tr>
			<th>Trigger</th>
			<td><select type=""text"" wicket:id=""triggerField"" /></td>
			<td></td>
		</tr>
		<tr>
			<th>Error</th>
			<td><input type=""text"" wicket:id=""errorField"" /></td>
			<td></td>
		</tr>
	</table>
</form>
{code}

As a temporary workaround/solution I've found is calling blur before focus:

{code:title=wicket-autocomplete.js}
..

function doUpdateChoices(resp){
..
	if(Wicket.Browser.isIE()) {
		Wicket.Focus.refocusLastFocusedComponentAfterResponse = true;
		var focusedElement = Wicket.$(elementId);
		var temponblur = focusedElement.onblur;
		focusedElement.onblur = null;
		focusedElement.blur();
		setTimeout(function() { focusedElement.onblur = temponblur;}, 0);
		Wicket.Focus.requestFocus();
	}
}
..
{code}
","25/Aug/10 00:14;hudson;Integrated in Apache Wicket 1.4.x #114 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/114/])
    fix focus problem in autocomplete/ie
Issue: WICKET-2279
","04/Dec/10 00:17;hudson;Integrated in Apache Wicket 1.4.x #308 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/308/])
    ",,,,,,,,,,,,,,,,,,,,
assertComponentOnAjaxResponse does not work with WicketTester.clickLink,WICKET-1264,12385691,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,nino,nino,07/Jan/08 10:30,22/Nov/10 14:01,13/Mar/19 23:15,07/Jan/08 20:19,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,,,,,0,,,,,,,,"assertComponentOnAjaxResponse does not work with clickLink. Workaround are to call wickettester..executeAjaxEvent(ajaxLink,""onclick""); instead.

Reason why this fails has something todo with that clickLink creates a servlet response which are empty hence this will always fail:

		// Get the AJAX response
		String ajaxResponse = getServletResponse().getDocument();

		// Test that the previous response was actually a AJAX response
		failMessage = ""The Previous response was not an AJAX response. ""
			+ ""You need to execute an AJAX event, using clickLink, before using this assert"";
		boolean isAjaxResponse = ajaxResponse.startsWith(""<?xml version=\""1.0\"" encoding=\""UTF-8\""?><ajax-response>"");

proposed fix are to rewrite wicketTester.clicklink(string path,boolean ajax) to call executeAjaxEvent instead if possible? ",mac osx 10.4,,,,,,,,,,,,,,,,,,07/Jan/08 10:32;nino;WicketTesterAjaxTrouble.zip;https://issues.apache.org/jira/secure/attachment/12372613/WicketTesterAjaxTrouble.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-07 20:19:29.922,,,no_permission,,,,,,,,,,,202250,,,Mon Nov 22 14:01:04 UTC 2010,,,,,,0|i0kglj:,117506,,,,,,,,07/Jan/08 10:32;nino;displays mentioned bug and workaround.,07/Jan/08 20:19;seitz;the fix was just to set the WebApplication to not buffer the response.,"08/Jan/08 07:48;nino;Hi, is it a patch or something you must do manually?If so how?

","08/Jan/08 08:03;seitz;i committed the change to trunk. 
if you click on ""Subversion Commits"" here in jira, you can see the associated commits.","08/Jan/08 08:36;nino;Cool! :)

","22/Nov/10 14:01;avodonosov;The solution - disabling buffered responses to make tests passing - is problematic. 

My application relies on the fact the requests are buffered. In result the code that expects the buffering fails during tests, because the MockWebApplication.init() disables buffering (overriding my changes).

Also, I should say, disabling buffering to fix the problem means the wicket doesn't support buffered mode. Is it true?",,,,,,,,,,,,,,,,,,
SmartLinkLabel does not handle ~ in urls,WICKET-2067,12413736,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,aldaris,aldaris,01/Feb/09 21:32,16/Nov/10 15:26,13/Mar/19 23:15,01/Feb/09 21:57,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"The SmartLinkLabel doesn't care with tilde (~) character, so if i have a link like this: http://localhost/~something than only the http://localhost/ will be a link, and the rest of it won't.

The source of the problem is very likely in DefaultLinkParser.java:

	/** URL pattern */
	private static final String urlPattern = ""([a-zA-Z]+://[\\w\\.\\-\\:\\/]+)[\\w\\.:\\-/?&=%]*"";

It just needs to add ~ char to the regexp.",JDK 1.6.0_11 x64 version,120,120,,0%,120,120,,,,,,,,WICKET-3174,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202981,,,2009-02-01 21:32:04.0,,,,,,0|i0kegf:,117159,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generate wicketpath attribute for RadioChoice,WICKET-2772,12458694,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,jsinai,jsinai,10/Mar/10 18:41,24/Oct/10 10:27,13/Mar/19 23:15,13/Mar/10 14:51,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,,,,0,,,,,,,,"Wicket has a convenient feature to make using Selenium IDE easy to use. By adding getDebugSettings().setOutputComponentPath(true) to your application, the wicketpath attribute is emitted.

Unfortunately, that does not hold for the radios inside a RadioChoice because they are not proper Components.

Also unfortunately, RadioChoice.onComponentTagBody() is final.

The result is that you either have to write additional xpath selectors, or clone RadioChoice and extend AjaxFormChoiceComponentUpdatingBehavior.

The following code, added to RadioChoice.onComponentTagBody(), solves the problem. It is similar to the same code in Component, but appends a bit more to the path for the input tags:

if (getApplication().getDebugSettings().isOutputComponentPath())
{
	String path = getPageRelativePath();
	path = path.replace(""_"", ""__"");
	path = path.replace("":"", ""_"");
	buffer.append("" wicketpath=\"""")
	.append(path)
	.append(""_input_"")
	.append(index)
	.append(""\"""");
}

The full code for RadioChoice.onComponentTagBody() is as follows:

	@Override
	protected final void onComponentTagBody(final MarkupStream markupStream,
		final ComponentTag openTag)
	{
		// Iterate through choices
		final List<? extends T> choices = getChoices();

		// Buffer to hold generated body
		final AppendingStringBuffer buffer = new AppendingStringBuffer((choices.size() + 1) * 70);

		// The selected value
		final String selected = getValue();

		// Loop through choices
		for (int index = 0; index < choices.size(); index++)
		{
			// Get next choice
			final T choice = choices.get(index);

			Object displayValue = getChoiceRenderer().getDisplayValue(choice);
			Class<?> objectClass = (displayValue == null ? null : displayValue.getClass());

			// Get label for choice
			String label = """";

			if (objectClass != null && objectClass != String.class)
			{
				final IConverter converter = getConverter(objectClass);
				label = converter.convertToString(displayValue, getLocale());
			}
			else if (displayValue != null)
			{
				label = displayValue.toString();
			}

			// If there is a display value for the choice, then we know that the
			// choice is automatic in some way. If label is /null/ then we know
			// that the choice is a manually created radio tag at some random
			// location in the page markup!
			if (label != null)
			{
				// Append option suffix
				buffer.append(getPrefix());

				String id = getChoiceRenderer().getIdValue(choice, index);
				final String idAttr = getMarkupId() + ""-"" + id;

				boolean enabled = isEnabledInHierarchy() && !isDisabled(choice, index, selected);

				// Add radio tag
				buffer.append(""<input name=\"""")
					.append(getInputName())
					.append(""\"""")
					.append("" type=\""radio\"""")
					.append((isSelected(choice, index, selected) ? "" checked=\""checked\"""" : """"))
					.append((enabled ? """" : "" disabled=\""disabled\""""))
					.append("" value=\"""")
					.append(id)
					.append(""\"" id=\"""")
					.append(idAttr)
					.append(""\"""");

				// Should a roundtrip be made (have onSelectionChanged called)
				// when the option is clicked?
				if (wantOnSelectionChangedNotifications())
				{
					CharSequence url = urlFor(IOnChangeListener.INTERFACE);

					Form<?> form = findParent(Form.class);
					if (form != null)
					{
						RequestContext rc = RequestContext.get();
						if (rc.isPortletRequest())
						{
							// restore url back to real wicket path as its going to be interpreted
							// by the form itself
							url = ((PortletRequestContext)rc).getLastEncodedPath();
						}
						buffer.append("" onclick=\"""").append(form.getJsForInterfaceUrl(url)).append(
							"";\"""");
					}
					else
					{
						// TODO: following doesn't work with portlets, should be posted to a dynamic
						// hidden form
						// with an ActionURL or something
						// NOTE: do not encode the url as that would give
						// invalid JavaScript
						buffer.append("" onclick=\""window.location.href='"")
							.append(url)
							.append(
								(url.toString().indexOf('?') > -1 ? ""&amp;"" : ""?"") + getInputName())
							.append(""="")
							.append(id)
							.append(""';\"""");
					}
				}
				//  ADDED BY JULIAN TO OUTPUT THE WICKET:PATH ATTRIBUTE TO EASE SELENIUM TESTING.
				if (getApplication().getDebugSettings().isOutputComponentPath())
				{
					String path = getPageRelativePath();
					path = path.replace(""_"", ""__"");
					path = path.replace("":"", ""_"");
					buffer.append("" wicketpath=\"""")
					.append(path)
					.append(""_input_"")
					.append(index)
					.append(""\"""");
				}

				buffer.append(""/>"");

				// Add label for radio button
				String display = label;
				if (localizeDisplayValues())
				{
					display = getLocalizer().getString(label, this, label);
				}
				final CharSequence escaped;
				if (getEscapeModelStrings())
				{
					escaped = Strings.escapeMarkup(display, false, true);
				}
				else
				{
					escaped = display;
				}
				buffer.append(""<label for=\"""").append(idAttr).append(""\"">"").append(escaped).append(
					""</label>"");

				// Append option suffix
				buffer.append(getSuffix());
			}
		}

		// Replace body
		replaceComponentTagBody(markupStream, openTag, buffer);
	}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-13 14:51:38.142,,,no_permission,,,,,,,,,,,203626,,,Sun Oct 24 10:27:15 UTC 2010,,,,,,0|i0kck7:,116852,,,,,,,,13/Mar/10 14:51;jdonnerstag;thanks,"24/Oct/10 10:27;hudson;Integrated in Apache Wicket 1.5.x #449 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/449/])
    WICKET-2776 Enhancing RadioChoice input items with individual title and css class attributes

Merge from 1.4.x:
and WICKET-2772
Issue: WICKET-2776
Files Changed
MODIFY /wicket/branches/wicket-1.4.x/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java

ASF	#922649	Sat Mar 13 13:50:47 EST 2010	jdonnerstag	 added additional attributes to allow for index dependent attributes
Issue: WICKET-2776
Files Changed
MODIFY /wicket/branches/wicket-1.4.x/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java
",,,,,,,,,,,,,,,,,,,,,,
The starting of the ajax indicator don't respect AbstractDefaultAjaxBehavior preconditionScript,WICKET-2262,12424805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pedrosans,pedrosans,07/May/09 11:13,17/Sep/10 14:49,13/Mar/19 23:15,31/Aug/10 06:37,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,0,,,,,,,,I have add an AbstractDefaultAjaxBehavior to an component that implements the IAjaxIndicatorAware. But the indicator start an stay indicating an ajax processing that is not happening due an condition implemented on my extended AbstractDefaultAjaxBehavior preconditionScript that return false on the occasion.,,,,,,,,,,,,,,,,,,,26/Oct/09 21:43;martin-g;WICKET-2262.patch;https://issues.apache.org/jira/secure/attachment/12423256/WICKET-2262.patch,14/Sep/09 17:37;pedrosans;teste.zip;https://issues.apache.org/jira/secure/attachment/12419546/teste.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-10-26 21:43:19.41,,,no_permission,,,,,,,,,,,203160,,,Tue Aug 31 07:12:23 UTC 2010,,,,,,0|i0kdvr:,117066,,,,,,,,"14/Sep/09 17:37;pedrosans;Uploading an simple project to simulate the problem.
to simulate was used
- an home page, implementing IAjaxIndicatorAware
- an component with AjaxEventBehavior, that return an getPreconditionScript that not always return true
the steps to problem
- click at label, waiting the ajax finish 2 times
- click at label one more time, and the indicator will never stop, and the ajax are not triggered","26/Oct/09 21:43;martin-g;Attach a patch which is partially working.
Now it uses the 'precondition' JavaScript before calling 'wicketShow(ajaxIndicator)' but the problem is that it will increment the counter used in precondition twice per request attempt.

A better solution here is to add 'onStart()' callback as onSuccess/onFailure ones","31/Aug/10 06:37;ivaynberg;the javascript for precondition checks should be written without sideeffects, so it should be ok to call it multiple times","31/Aug/10 07:11;hudson;Integrated in Apache Wicket 1.4.x #136 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/136/])
    Issue: WICKET-2262
","31/Aug/10 07:12;hudson;Integrated in Apache Wicket 1.5.x #280 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/280/])
    Issue: WICKET-2262
",,,,,,,,,,,,,,,,,,,
InspectorPage doesn't show component tree,WICKET-2010,12411884,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jdonnerstag,jdonnerstag,07/Jan/09 19:37,17/Sep/10 14:48,13/Mar/19 23:15,26/Aug/10 00:26,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket-examples,,,,1,,,,,,,,"	public InspectorPage(final PageParameters parameters)
	{
		add(new ApplicationView(""application"", Application.get()));
		add(new SessionView(""session"", Session.get()));
		IPageMapEntry entry = null;
		try
		{
			entry = getPageMap().getEntry(parameters.getInt(""pageId""));
		}

entry seems always to return null, thus the list of components is never shown.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202926,,,2009-01-07 19:37:26.0,,,,,,0|i0ken3:,117189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester doesn't include form submitting component id in form submissions,WICKET-1733,12399660,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,david.shepherdson,david.shepherdson,06/Jul/08 08:16,17/Sep/10 14:48,13/Mar/19 23:15,31/Aug/10 00:13,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,wicket,,,,0,,,,,,,,"When submitting a form with an AJAX link (or other AJAX-based control), WicketTester doesn't include the id of the component that 'submitted' the form, meaning that in situations with nested forms, the wrong form's onSubmit() method may be called.

We're working around this problem by overriding the clickLink() and executeAjaxEvent() methods as follows:

    @Override
    public void clickLink(String path, boolean isAjax) {
        Component linkComponent = getComponentFromLastRenderedPage(path);
        if (linkComponent instanceof AjaxSubmitLink) {
            AjaxSubmitLink link = (AjaxSubmitLink) linkComponent;
            Map<String, Object> requestParams = getParametersForNextRequest();
            requestParams.put(link.getInputName(), ""x"");
        }
        super.clickLink(path, isAjax);
    }

    @Override
    public void executeAjaxEvent(Component component, String event) {
        // Code borrowed from BaseWicketTester.

        // Run through all the behavior and select the LAST ADDED behavior which
        // matches the event parameter.
        AjaxEventBehavior ajaxEventBehavior = null;
        List behaviors = component.getBehaviors();
        for (Iterator iter = behaviors.iterator(); iter.hasNext();) {
            IBehavior behavior = (IBehavior) iter.next();

            // AjaxEventBehavior is the one to look for
            if (behavior instanceof AjaxEventBehavior) {
                AjaxEventBehavior tmp = (AjaxEventBehavior) behavior;

                if (event.equals(tmp.getEvent())) {
                    ajaxEventBehavior = tmp;
                }
            }
        }

        // Workaround: If the behaviour is an AjaxFormSubmitBehavior then add the
        // component's input name.
        if (ajaxEventBehavior instanceof AjaxFormSubmitBehavior
                && component instanceof FormComponent) {
            String inputName = ((FormComponent) component).getInputName();
            Map<String, Object> requestParams = getParametersForNextRequest();
            requestParams.put(inputName, ""x"");
        }

        super.executeAjaxEvent(component, event);
    }

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-31 00:40:17.48,,,no_permission,,,,,,,,,,,202672,,,Tue Aug 31 00:50:14 UTC 2010,,,,,,0|i0kfdj:,117308,,,,,,,,"31/Aug/10 00:40;hudson;Integrated in Apache Wicket 1.4.x #134 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/134/])
    Issue: WICKET-1733
","31/Aug/10 00:50;hudson;Integrated in Apache Wicket 1.5.x #279 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/279/])
    Issue: WICKET-1733
",,,,,,,,,,,,,,,,,,,,,,
"Form#onSubmit() not called in StatlessForm on pages mounted using WebPage#mountBookmarkablePage(String, Class)",WICKET-2774,12458772,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jolira,jolira,11/Mar/10 04:08,17/Sep/10 14:48,13/Mar/19 23:15,26/Aug/10 22:53,1.4.6,1.4.7,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M2.1,,,wicket,,,,0,,,,,,,,"I am using the following simple application class:

public class WicketApplication extends WebApplication {
    @Override
    public Class<HomePage> getHomePage() {
        return HomePage.class;
    }

    @Override
    protected void init() {
        mountBookmarkablePage(""home"", HomePage.class);
    }
}

HomePage.html looks like this:

<html
  xmlns:wicket=""http://wicket.apache.org/dtds.data/wicket-xhtml1.4-strict.dtd"">
<head>
<title>Stateless Wicket</title>
</head>
<body>
counter 2:
<form wicket:id=""inputForm"" method=""get"">
<label for=""a"">a:</label>
<input wicket:id=""a"" id=""a"" type=""text"" size=""15""/><br/>
<label for=""b"">b:</label>
<input wicket:id=""b"" id=""b"" type=""text"" size=""15""/><br/>
<input type=""submit"" value=""Execute"" />
</form>
</body>
</html>

HomePage.java:

public class HomePage extends WebPage {
    public HomePage(final PageParameters parameters) {
        final Form<String> form = new StatelessForm<String>(""inputForm"") {
            private static final long serialVersionUID = -1804691502079814185L;

            @Override
            protected void onSubmit() {
                info(""clicked sumbit"");
            }

        };
        final TextField<String> a = new TextField<String>(""a"",
                new Model<String>(_a));
        final TextField<String> b = new TextField<String>(""b"",
                new Model<String>(_b));

        form.add(a);
        form.add(b);
        add(form);
    }
}

This very simple code example shows that the StatlessForm#onSubmit() function is never called iff mountBookmarkablePage(""home"", HomePage.class) is in WicketApplication#init(). If I remove this statement from the code, the onSubmit() method is called as expected.
","jfk@preding:~/workspace/wicket-stateless$ uname -a
Linux preding.walmart.com 2.6.31-20-generic #57-Ubuntu SMP Mon Feb 8 09:02:26 UTC 2010 x86_64 GNU/Linux
jfk@preding:~/workspace/wicket-stateless$ java -version
java version ""1.6.0_0""
OpenJDK Runtime Environment (IcedTea6 1.6.1) (6b16-1.6.1-3ubuntu1)
OpenJDK 64-Bit Server VM (build 14.0-b16, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-11 04:33:56.963,,,no_permission,,,,,,,,,,,203628,,,Tue Mar 16 19:04:21 UTC 2010,,,,,,0|i0kcjz:,116851,,,,,,,,11/Mar/10 04:33;ivaynberg;does it work if you remove the StatelessWebRequestCycleProcessor? that is not a class we ship with wicket...,"11/Mar/10 05:05;jolira;I can still reproduce the problem after removing the StatelessWebRequestCycleProcessor. (Sorry, but i was recycling one of the examples of my wicket-stateless package and forgot to remove this method.)","11/Mar/10 05:19;jolira;Igor, the problem may be in BookmarkablePageRequestTargetUrlCodingStrategy#decode(RequestParameters). This method tries tires to retrieves the interface parameters using the following name:

		String interfaceParameter = (String)parameters.remove(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME);

This method return null, because the RequestParameters does not contain this entry. Instead is contains: [RequestParameters  parameters={home/wicket:interface/:10:inputForm::IFormSubmitListener::=,b=2,inputForm9_hf_0=,a=1} onlyProcessIfPathActive=false]
","11/Mar/10 05:25;jolira;this is what my Jetty request object looks like:

GET /home?inputForma_hf_0=&home%2Fwicket%3Ainterface%2F%3A11%3AinputForm%3A%3AIFormSubmitListener%3A%3A=&a=1&b=2 HTTP/1.1
Host: preding.walmart.com:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.2pre) Gecko/20100216 Ubuntu/9.10 (karmic) Namoroka/3.6.2pre
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive
Referer: http://preding.walmart.com:8080/home?inputForm9_hf_0=&home%2Fwicket%3Ainterface%2F%3A10%3AinputForm%3A%3AIFormSubmitListener%3A%3A=&a=1&b=2

When WebRequestCodingStrategy#addInterfaceParameters(Request, RequestParameters) tries to extract the wicket:interface parameter it gets null.
","11/Mar/10 05:57;jolira;Without mountBookmarkablePage(""home"", HomePage.class) in WicketApplication#init() Form#urlFor(RequestListenerInterface) returns the string ""?wicket:bookmarkablePage=:com.jolira.stateless.HomePage&wicket:interface=:0:inputForm::IFormSubmitListener::""

With mountBookmarkablePage(""home"", HomePage.class) this function returns ""home/wicket:interface/:0:inputForm::IFormSubmitListener::""

One more important piece of information: This problem only occurs when I use <form method=""get"">. With  <form method=""post""> the problem does not occur. Unfortunately I try to solve this problem for mobile.walmart.com and we really prefers gets over posts as this is easier for many mobile phones...
","11/Mar/10 06:09;jolira;Adjusting the priority. This issue only affects form that use ""get"" as the method and only when mountBookmarkablePage is used on the page that contains the form.",15/Mar/10 15:59;ivaynberg;have you tried mounting the page with a querystringurlcodingstrategy instead?,16/Mar/10 06:50;jolira;How would I do that in the example above?,"16/Mar/10 18:42;ivaynberg;mount(new querystringurlcodingstrategy(""home"", HomePage.class))","16/Mar/10 19:04;jolira;Yup! The mount you gave me works perfectly. There is my updated application that behaves as expected:

public class WicketApplication extends WebApplication {
    @Override
    public Class<HomePage> getHomePage() {
        return HomePage.class;
    }

    @Override
    protected void init() {
        mount(new QueryStringUrlCodingStrategy(""home"", HomePage.class));
    }
}",,,,,,,,,,,,,,
MixedParamUrlCodingStrategy bugs,WICKET-1597,12395556,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,donohoedigital,donohoedigital,07/May/08 20:52,31/Aug/10 06:27,13/Mar/19 23:15,31/Aug/10 06:27,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,1,,,,,,,,"If a parameter is missing, it is default to """" as seen below.

               if (foundParameter)
		{
			for (int i = 0; i <= lastSpecifiedParameter; i++)
			{
				String parameterName = parameterNames[i];
				final Object param = parameters.get(parameterName);
				String value = param instanceof String[] ? ((String[])param)[0] : (String)param;
				if (value == null)
				{
					value = """";  // <===== THIS LINE RIGHT HERE
				}
				url.append(urlEncode(value)).append(""/"");
				parameterNamesToAdd.remove(parameterName);
			}
		}

If the parameter is in the middle, you end up with a URL that looks like:

foo.com/mypage/param1//param3

The ""//"" causes images and CSS to not be found (at least on firefox).

I fixed this locally by setting the value to ""-"", and looking for that on the way in.

foo.com/mypage/param1/-/param3

I'm not sure if this fix would break anything else, so I'm not sure if I should submit a patch.  One possible issue is if someone is passing '-' as a real value and expects it to be there.  I could make '-' the default and allow someone to change it via API...

",Firefox,,,,,,,,,,,,,,,,,,17/Nov/08 00:01;donohoedigital;FixedMixedParamUrlCodingStrategy.java;https://issues.apache.org/jira/secure/attachment/12394027/FixedMixedParamUrlCodingStrategy.java,11/Nov/08 05:31;miojo;patch-MixedParamUrlCodingStrategy-WICKET-1597.diff;https://issues.apache.org/jira/secure/attachment/12393684/patch-MixedParamUrlCodingStrategy-WICKET-1597.diff,11/Nov/08 05:29;miojo;patch-MixedParamUrlCodingStrategyTest-WICKET-1597.diff;https://issues.apache.org/jira/secure/attachment/12393683/patch-MixedParamUrlCodingStrategyTest-WICKET-1597.diff,07/Jan/09 21:56;jdonnerstag;wicket-1597.patch;https://issues.apache.org/jira/secure/attachment/12397334/wicket-1597.patch,,,,,4.0,,,,,,,,,,,,,,,,,,,2008-07-06 13:05:18.248,,,no_permission,,,,,,,,,,,202556,,,Tue Aug 31 06:27:02 UTC 2010,,,,,,0|i0kfpr:,117363,,,,,,,,"07/May/08 20:58;donohoedigital;Another bug in appendParamters (twice):

String value = param instanceof String[] ? ((String[])param)[0] : (String)param;

It assumes the values in the PageParameters are Strings, which isn't necessarily so (the API doesn't dictate this).  Ideally this class would use ValueMap.getString(name), but for some reason only a Map is passed in to the method (not sure why).

I fixed this locally by copying the getString(name) method locally and using that.

I ran into this when storing an Integer directly instead of doing Integer.toString() as well as storying an Enum.

",06/Jul/08 13:05;dashorst;Moved to next milestone release.,"18/Sep/08 14:59;miojo;If the value should be empty, set it to %20.

value = ""%20""; // space for URLs

Then, when the parameter arrive, it will be trimed, right? to """" (empty string).

What about that?",11/Nov/08 05:29;miojo;Attached fixed TestCase,"11/Nov/08 05:31;miojo;The fix is replace """" (empty string) with a ""%20"" without URL encoding.
There's a small problem still to solve: the parameter value is converted to "" "". 

Should MixedParamUrlCodingStrategy trim parameter values?","13/Nov/08 22:08;miojo;Doug, can you check if an URL like this

http://foo.com/mypage/param1/%20/param3

doesn't break CSS ?","17/Nov/08 00:01;donohoedigital;Sorry for the delay in responding.

After discovering this problem with nulls, I found more problems with other characters like ""."", ""/"", ""\"" and the "".."" string.

These are problem characters because they are often interpreted by the browser or servlet container as path traversal characters.  For example "".."" means go to the parent and ""./"" is often stipped as redundant.

I fixed these issues locally with the attached file.   This was successfully used in the DD Poker search page:

http://online.ddpoker.com/search

Basically, it allows one to type in any search character and have it retained properly in a URL.  ","07/Jan/09 21:56;jdonnerstag;Applied the change and modified the test cases. Since I wasn't sure if /a/?param is the same as /a?param, I didn't commit it but attached the patch.","27/Aug/10 07:58;ivaynberg;juegen, can you see if this still applies?",31/Aug/10 06:27;ivaynberg;url handling was rewritten in 1.5,,,,,,,,,,,,,,
Navigating a link in a StatelessForm's submit using WicketTester results in PageExpiredErrorPage,WICKET-2266,12424987,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,j2ee_developer,j2ee_developer,09/May/09 01:19,29/Aug/10 15:55,13/Mar/19 23:15,29/Aug/10 15:55,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,,,,,0,,,,,,,,"I'm writing a unit test using WicketTester which:

1) starts from a bookmarkable page containing StatelessForm
2) fills 2 fields, submits the form and sends response to the second page
3) tries to navigate a link on the second page which point to a third page

the issue is that asserting the third page I get  junit.framework.AssertionFailedError: expected:<AddUserPage> but was:<PageExpiredErrorPage>.

The code works fine in Tomcat and Jetty. 

The unit test also passes if:

1) I use Form instead of StatelessForm

or

2) Use BookmarkablePageLink instead of Link.

It looks like there is some problem with  wickettester+stateless->stateful.","Ubuntu 9.04, Sun JDK 1.6.0_12, Tomcat 6.0.18",,,,,,,,,,,,,,,,,,09/May/09 01:22;j2ee_developer;ReproApp.zip;https://issues.apache.org/jira/secure/attachment/12407680/ReproApp.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203164,,,Sat May 09 01:22:47 UTC 2009,,,,,,0|i0kdvb:,117064,,,,,,,,09/May/09 01:22;j2ee_developer;Attached a test project. To repro just run unit test.,,,,,,,,,,,,,,,,,,,,,,,
WicketTester does not work with AjaxSubmitLink,WICKET-2400,12431460,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mmakundi,mmakundi,26/Jul/09 16:13,28/Aug/10 06:12,13/Mar/19 23:15,28/Aug/10 06:12,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"AjaxSubmitLink does not work in 1.4-rc7

See attached quickstart with unit test.",,18000,18000,,0%,18000,18000,,,,,,,,,,,,26/Jul/09 16:15;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12414556/Wicket-Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-17 08:59:56.684,,,no_permission,,,,,,,,,,,203287,,,Sun Jan 17 08:59:56 UTC 2010,,,,,,0|i0kdgv:,116999,,,,,,,,"26/Jul/09 16:15;mmakundi;AjaxSubmitLink does not work in 1.4-rc7, unit test included.",17/Jan/10 08:59;martin-g;It seems this is fixed in 1.4-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,
WicketTester cannot handle consecutive RestartResponseException's,WICKET-2502,12437183,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mgrigorov,mmakundi,mmakundi,03/Oct/09 12:17,28/Aug/10 06:04,13/Mar/19 23:15,28/Aug/10 06:04,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,1,,,,,,,,"See attached quickstart junit test. WicketTester ""crashes"" (seizes from running the tests) if there eare consecutive RestartResponseException's.",,18000,18000,,0%,18000,18000,,,,,,,,,,,,03/Oct/09 12:18;mmakundi;Wicket-Quickstart.zip;https://issues.apache.org/jira/secure/attachment/12421194/Wicket-Quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-24 10:32:50.476,,,no_permission,,,,,,,,,,,203383,,,Sun Jan 17 12:09:40 UTC 2010,,,,,,0|i0kd7j:,116957,,,,,,,,"03/Oct/09 12:18;mmakundi;See attached quickstart junit test. WicketTester ""crashes"" (seizes from running the tests) if there eare consecutive RestartResponseException's.",24/Dec/09 10:32;slonopotamus;One more testcase in WICKET-2634.,"17/Jan/10 09:29;martin-g;Would you please explain more about the page flow in the test case.

As far as I understand it is:
1) Go to LoginPage
2) throw RestartResponsePage(PendingPage.class)
3) throw RestartResponsePage(MainPage.class)
4) WicketAuthorizationStrategy#onUnauthorizedInstantiation(mainPageInstance) throws RestartResponseAtInterceptPageException(LoginPage.class) because WicketSession#isLoggedIn() returns false
5) Wicket requests a redirect (302) but since this is not executed in a real web server this is no-op
6) later Wicket tries to get the ""lastRenderedPage"" but this again fails at the instantiation of LoginPage and the test fails with RestartResponseException in LoginPage's constructor ","17/Jan/10 10:16;mmakundi;What is your question exactly?

The core of the problem is that WicketTester cannot handle consecutive RestartResponsePages in the same way that the servlet container does. 
","17/Jan/10 10:30;martin-g;My question is what do you expect with the provided test case ?
It goes in a loop: LoginPage -> PendingPage -> MainPage (intercepted by AuthStrategy and starts again with LoginPage).

I just added a patch for WICKET-2634.
Test it if you have time.","17/Jan/10 10:42;mmakundi;Ok. It was a bit tricky to make the test case and verify it so maybe there is a bug in it. Meanwhile, let me test your patch.","17/Jan/10 12:09;mmakundi;Yeah, looks like your fix works for my real test case!",,,,,,,,,,,,,,,,,
WicketTester does not bind created Session to SessionStore,WICKET-574,12369469,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,severian,severian,16/May/07 08:33,27/Aug/10 07:33,13/Mar/19 23:15,27/Aug/10 07:33,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,1,,,,,,,,"The WicketTester constructor, via a call to MockWebApplication.createRequestCycle(), creates a new session but fails to bind it:
        this.wicketSession = (WebSession) Session.findOrCreate();
This means that the session subsequently gets over-written by a new one created in a later call to WicketTester.startPage().  This causes problems for any unit tests which want to set up session data after instantiating a WicketTester, but before calling WicketTester.startPage().

The MockWebApplication.createRequestCycle() should probably bind the session immediately after creating it:
        this.wicketSession = (WebSession) Session.findOrCreate();
        getApplication().getSessionStore().bind(getWicketRequest(), wicketSession);

Then subsequent calls to startPage() will use this session rather than create a new one.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-16 13:33:55.774,,,no_permission,,,,,,,,,,,201619,,,Fri Aug 27 07:33:34 UTC 2010,,,,,,0|i0kihb:,117811,,,,,,,,"16/May/07 13:33;jcompagner;hmm we see to do that in:

	public void setupRequestAndResponse()
	{
		servletRequest.initialize();
		servletResponse.initialize();
		servletRequest.setParameters(parametersForNextRequest);
		parametersForNextRequest.clear();
		this.wicketRequest = this.application.newWebRequest(servletRequest);
		this.wicketResponse = this.application.newWebResponse(servletResponse);
		createRequestCycle();
		this.application.getSessionStore().bind(wicketRequest, wicketSession);
		wicketResponse.setAjax(wicketRequest.isAjax());
	}

so are you calling createRequestCycle before you do setupRequestAndResponse() ?","16/May/07 14:06;severian;I don't make an explicit call to createRequestCycle(), but I think the WicketTester constructor makes the call (either directly or indirectly).

This is useful functionality (that the WicketTester constructor sets up a session), as otherwise it's not obvious how a unit test can initialise a session (i.e. store objects) before calling startPage().","20/Jan/08 15:30;dashorst;Bumped resolution to 1.4 -> workaround is to call ""void setupRequestAndResponse()"" before doing anything with the session.","15/Aug/10 12:13;hudson;Integrated in Apache Wicket 1.5.x #237 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/237/])
    moved some methods from WicketTestCase to WicketTester and remove extra parameter from executeListener and executeBehavior
Issue: WICKET-574
",27/Aug/10 07:33;ivaynberg;looks like juergen fixed this in 1.5,,,,,,,,,,,,,,,,,,,
Wicket:enclosure does not work with navigation toolbar of data table,WICKET-2182,12417334,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,robinshine,robinshine,20/Mar/09 00:34,25/Aug/10 23:52,13/Mar/19 23:15,25/Aug/10 23:52,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,1,,,,,,,,"The navigation toolbar of data table component can not be displayed if there is a link on the page surrounded with the wicket:enclosure tag. Here is my very simple test case:

TestPage.html:

<html xmlns=""http://www.w3.org/1999/xhtml"">
  <head>
    <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
  </head>
  <body>
    <wicket:enclosure>please click <a wicket:id=""link"">link</a></wicket:enclosure>
    <table wicket:id=""data""></table>
  </body>
</html>

TestPage.java:

package test;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;
import org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable;
import org.apache.wicket.extensions.markup.html.repeater.data.table.NavigationToolbar;
import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.markup.html.link.Link;
import org.apache.wicket.markup.repeater.Item;
import org.apache.wicket.markup.repeater.data.IDataProvider;
import org.apache.wicket.model.IModel;
import org.apache.wicket.model.Model;

public class TestPage extends WebPage {   
  public TestPage() {
    add(new Link(""link"") {
      @Override
      public void onClick() {
      }           
      @Override
      public boolean isVisible() {
        return false;
      }
    });
    AbstractColumn[] columns = new AbstractColumn[]{
      new AbstractColumn(new Model(""value"")) {
        public void populateItem(Item cellItem, String componentId, IModel rowModel) {
          cellItem.add(new Label(componentId, rowModel.getObject().toString()));
        }                   
      },
    };
    IDataProvider dataProvider = new IDataProvider() {
      public Iterator iterator(int first, int count) {
        List<String> values = new ArrayList<String>();
        for (int i=0; i<count; i++)
          values.add(String.valueOf(i + first));
        return values.iterator();
      }
      public int size() {
        return 100;
      }
      public IModel model(Object object) {
        return new Model((Serializable) object);
      }
      public void detach() {
      }
    };
    DataTable dataTable = new DataTable(""data"", columns, dataProvider, 10);
    dataTable.addBottomToolbar(new NavigationToolbar(dataTable));
    add(dataTable);
  }
}

Add this page to a wicket application, then mount and navigate to the page:
The navigation toolbar of the data table is not displayed. However if the ""wicket:enclosure"" tag is removed from the template or if the link is made visible in the code, the toobar then displays correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-25 19:11:00.884,,,no_permission,,,,,,,,,,,203090,,,Wed Aug 25 23:52:00 UTC 2010,,,,,,0|i0ke3r:,117102,,,,,,,,25/Apr/09 19:11;ivaynberg;tried with 1.3.x branch and everything works fine.,"26/Apr/09 06:11;robinshine;Thanks for looking into this. Odd enouth, I can not reproduce this issue on my machine either. ","23/Jun/09 08:08;robinshine;Get it reproduced today, please use below markup:

<html xmlns=""http://www.w3.org/1999/xhtml"">
  <head>
    <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
  </head>
  <body>
    <wicket:enclosure><a wicket:id=""link"">click</a> to open</wicket:enclosure>
    <table wicket:id=""data""></table>
  </body>
</html> 

Compared to the original markup, I removed contents between <wicket:enclosure> and <a>",23/Jun/09 08:34;robinshine;Can workaround this issue by inserting an space after the <wicket:enclosure> tag. So changed the priority to be minor.,25/Aug/10 23:52;ivaynberg;should be fixed in 1.4.x,,,,,,,,,,,,,,,,,,,
Unable to Run Wicket with SLF4j-1.5.x,WICKET-1958,12409191,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,smartini,smartini,25/Nov/08 14:16,25/Aug/10 22:38,13/Mar/19 23:15,25/Aug/10 22:38,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"Hi to all,
in maven pom file (generated from quickstart), with wicket-1.4rc1 (but maybe also on previous versions), 
using a dependency on sl4fj-1.4.3 all works good, but using the 1.5.5 or 1.5.6 version gives error when i run the jetty:run maven task, and then the development site is not reachable.

The error is different, depending on the slf4j version:

// 
// using sl4fj-1.5.5, and jetty-6.1.14 (but it's the same with jetty-6.1.9)
// 

[INFO] Starting jetty 6.1.14 ...
2008-11-25 14:41:47.303::INFO:  No Transaction manager found - if your webapp requires one, please configure one.
2008-11-25 14:41:47.704::WARN:  failed wicket.maven-wicket-test
java.lang.NoSuchFieldError: name
	at org.slf4j.impl.Log4jLoggerAdapter.<init>(Log4jLoggerAdapter.java:75)
	at org.slf4j.impl.Log4jLoggerFactory.getLogger(Log4jLoggerFactory.java:75)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:103)
	at org.apache.wicket.protocol.http.WicketFilter.<clinit>(WicketFilter.java:97)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.mortbay.jetty.servlet.Holder.newInstance(Holder.java:153)
	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:92)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:620)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1234)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:460)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:124)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:379)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:321)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:205)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:579)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:498)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmentForProject(DefaultLifecycleExecutor.java:265)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:191)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:149)
	at org.apache.maven.DefaultMaven.execute_aroundBody0(DefaultMaven.java:223)
	at org.apache.maven.DefaultMaven.execute_aroundBody1$advice(DefaultMaven.java:304)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:1)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody2(MavenEmbedder.java:904)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody3$advice(MavenEmbedder.java:304)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:1)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:176)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:63)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:52)
2008-11-25 14:41:47.704::WARN:  failed org.mortbay.jetty.plugin.Jetty6PluginWebAppContext@9300cc{/maven-wicket-test,C:\Work\eclipse_workspace2\maven-wicket-test\src\main\webapp}
java.lang.NoSuchFieldError: name
	at org.slf4j.impl.Log4jLoggerAdapter.<init>(Log4jLoggerAdapter.java:75)
	at org.slf4j.impl.Log4jLoggerFactory.getLogger(Log4jLoggerFactory.java:75)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:103)
	at org.apache.wicket.protocol.http.WicketFilter.<clinit>(WicketFilter.java:97)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.mortbay.jetty.servlet.Holder.newInstance(Holder.java:153)
	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:92)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:620)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1234)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:460)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:124)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:379)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:321)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:205)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:579)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:498)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmentForProject(DefaultLifecycleExecutor.java:265)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:191)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:149)
	at org.apache.maven.DefaultMaven.execute_aroundBody0(DefaultMaven.java:223)
	at org.apache.maven.DefaultMaven.execute_aroundBody1$advice(DefaultMaven.java:304)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:1)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody2(MavenEmbedder.java:904)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody3$advice(MavenEmbedder.java:304)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:1)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:176)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:63)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:52)
...


// 
// using sl4fj-1.5.6, and jetty-6.1.14 (but it's the same with jetty-6.1.9)
// 

[INFO] Starting jetty 6.1.14 ...
2008-11-25 12:50:05.100::INFO:  jetty-6.1.14
2008-11-25 12:50:05.290::INFO:  No Transaction manager found - if your webapp requires one, please configure one.
2008-11-25 12:50:05.671::WARN:  failed wicket.wicket-test
java.lang.IllegalAccessError: tried to access field org.slf4j.impl.StaticLoggerBinder.SINGLETON from class org.slf4j.LoggerFactory
	at org.slf4j.LoggerFactory.<clinit>(LoggerFactory.java:60)
	at org.apache.wicket.protocol.http.WicketFilter.<clinit>(WicketFilter.java:97)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.mortbay.jetty.servlet.Holder.newInstance(Holder.java:153)
	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:92)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:620)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1234)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:460)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:124)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:379)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:321)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:205)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:579)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:498)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmentForProject(DefaultLifecycleExecutor.java:265)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:191)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:149)
	at org.apache.maven.DefaultMaven.execute_aroundBody0(DefaultMaven.java:223)
	at org.apache.maven.DefaultMaven.execute_aroundBody1$advice(DefaultMaven.java:304)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:1)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody2(MavenEmbedder.java:904)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody3$advice(MavenEmbedder.java:304)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:1)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:176)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:63)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:52)
2008-11-25 12:50:05.671::WARN:  failed org.mortbay.jetty.plugin.Jetty6PluginWebAppContext@159e154{/wicket-test,C:\Work\eclipse_workspace2\wicket-test\src\main\webapp}
java.lang.IllegalAccessError: tried to access field org.slf4j.impl.StaticLoggerBinder.SINGLETON from class org.slf4j.LoggerFactory
	at org.slf4j.LoggerFactory.<clinit>(LoggerFactory.java:60)
	at org.apache.wicket.protocol.http.WicketFilter.<clinit>(WicketFilter.java:97)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.mortbay.jetty.servlet.Holder.newInstance(Holder.java:153)
	at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:92)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:620)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1234)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:460)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:124)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:222)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:379)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:321)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:205)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:579)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:498)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmentForProject(DefaultLifecycleExecutor.java:265)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:191)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:149)
	at org.apache.maven.DefaultMaven.execute_aroundBody0(DefaultMaven.java:223)
	at org.apache.maven.DefaultMaven.execute_aroundBody1$advice(DefaultMaven.java:304)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:1)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody2(MavenEmbedder.java:904)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody3$advice(MavenEmbedder.java:304)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:1)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:176)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:63)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:52)
... 


Thanks and good work,
Sandro
","Windows XP, with Sun JDK 1.6.0_10",,,,,,,,,,,,,,,,,,04/Dec/08 10:30;ceki@qos.ch;pom.xml.patch;https://issues.apache.org/jira/secure/attachment/12395278/pom.xml.patch,29/Dec/08 20:36;jdonnerstag;wicket-1958.patch;https://issues.apache.org/jira/secure/attachment/12396860/wicket-1958.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-11-25 14:32:52.59,,,no_permission,,,,,,,,,,,202879,,,Wed Aug 25 22:38:23 UTC 2010,,,,,,0|i0kesf:,117213,,,,,,,,"25/Nov/08 14:32;dashorst;This is not a wicket bug, it is a slf4j bug. Wicket doesn't do anything in that stack trace.",25/Nov/08 16:09;jcompagner;i guess your slf4j api jar and the log4j jar are not in synch versioning wise.,"25/Nov/08 17:52;ceki@qos.ch;slf4j-api.jar and slf4j-log4j12.jar should have the same version. Recent versions of slf4j emit a warning about this. I bet you are using an older version of slf4j-api.

","03/Dec/08 16:14;smartini;Hi to all,
i've just tried to remove the log4j usage, and as before with slf4j 1.4.3 all works good, but with the 1.5.6, i got the following stacktrace (not related to jetty or log4j this time), so maybe its related to other ...

-------------------------------------------------------------------------------
Test set: martins.tests.wicket.wicket_test.TestHomePage
-------------------------------------------------------------------------------
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.17 sec <<< FAILURE!
testRenderMyPage(martins.tests.wicket.wicket_test.TestHomePage)  Time elapsed: 0.11 sec  <<< ERROR!
java.lang.IllegalAccessError: tried to access field org.slf4j.impl.StaticLoggerBinder.SINGLETON from class org.slf4j.LoggerFactory
	at org.slf4j.LoggerFactory.<clinit>(LoggerFactory.java:60)
	at org.apache.wicket.protocol.http.MockWebApplication.<clinit>(MockWebApplication.java:89)
	at martins.tests.wicket.wicket_test.TestHomePage.setUp(TestHomePage.java:16)
	at junit.framework.TestCase.runBare(TestCase.java:128)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:338)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:997)


Best regards,
Sandro
","03/Dec/08 16:16;smartini;Excuse me, read my previous post for details.

I think this is related to wicket and slf4j 1.5.x

Thanks again,
Sandro
","03/Dec/08 16:27;dashorst;Create a quickstart that reproduces this issue. This is IMO *NOT* a bug in Wicket, but something you didn't setup right.",03/Dec/08 16:28;dashorst;Marking invalid until quickstart is provided. ,"03/Dec/08 16:35;smartini;Hi Martijn,
thanks for your help, i'll send to you a zip of my wicket-test project so you cam make some tests.
The strange thing is that with the current setup (slf4j 1.4.3) works, but with slf4j 1.5.x doesn't work, but as you say could be a bug is some other library or in my setup environment.

Thanks for the moment,
i'll wait your feedback.

Bye,
Sandro
",03/Dec/08 20:07;ceki@qos.ch;Are you using the same version of slf4j-api and slf4j-log4j12? The versions must match.,"03/Dec/08 21:30;dashorst;This is really not a bug in Wicket. I've created a quickstart and upgraded slf4j-api and sjf4j-log4j to 1.5.6 and it works. No bugs, no exceptions.","03/Dec/08 22:09;smartini;Hi to all,
excuse me for this issue, maybe related to my test project with maven.
I'll try to re-create from scratch a wicket project, with maven2 and java 6 to understand where is the pitfall.

Thanks again,
Sandro
","04/Dec/08 10:25;ceki@qos.ch;Sandro,

Thank you for the test project you sent me in private email. I highly encourage you to attach it to this issue so that other's can reproduce and experiment with the issue.

Looking at the pom.xml of your test project, one can read:

<dependency>
  <groupId>org.apache.wicket</groupId>
  <artifactId>wicket</artifactId>
  <version>1.4-rc1</version>
</dependency>

<dependency>
  <groupId>org.slf4j</groupId>
  <artifactId>slf4j-log4j12</artifactId>
  <version>1.4.3</version>
</dependency>

The ""mvn dependency:tree"" command yields:

[INFO] [dependency:tree]
[INFO] martins.tests.wicket:wicket-test:war:1.0.0-SNAPSHOT
[INFO] +- org.apache.wicket:wicket:jar:1.4-rc1:compile
[INFO] |  \- org.slf4j:slf4j-api:jar:1.4.2:compile
[INFO] +- org.slf4j:slf4j-log4j12:jar:1.4.3:compile
[INFO] |  \- log4j:log4j:jar:1.2.13:compile
[INFO] +- junit:junit:jar:3.8.2:test
[INFO] \- org.mortbay.jetty:jetty:jar:6.1.14:provided
[INFO]    +- org.mortbay.jetty:jetty-util:jar:6.1.14:provided
[INFO]    \- org.mortbay.jetty:servlet-api-2.5:jar:6.1.14:provided

Thus, since your test project does not declare a dependency on slf4j-api, and wicket's parent pom, does declare a dependency on  slf4j-api version 1.4.2, that is is the version seen on the dependency tree.

Explicitly declaring slfj4-api in your test project's pom.xml solves the problem:

<dependency>
  <groupId>org.apache.wicket</groupId>
  <artifactId>wicket</artifactId>
  <version>1.4-rc1</version>
</dependency>

<dependency>
  <groupId>org.slf4j</groupId>
  <artifactId>slf4j-api</artifactId>
  <version>1.5.6</version>
</dependency>

<dependency>
  <groupId>org.slf4j</groupId>
  <artifactId>slf4j-log4j12</artifactId>
  <version>1.5.6</version>
</dependency>

The ""mvn dependency:tree"" command yields:

[INFO] [dependency:tree]
[INFO] martins.tests.wicket:wicket-test:war:1.0.0-SNAPSHOT
[INFO] +- org.apache.wicket:wicket:jar:1.4-rc1:compile
[INFO] +- org.slf4j:slf4j-log4j12:jar:1.5.6:compile
[INFO] |  \- log4j:log4j:jar:1.2.14:compile
[INFO] +- org.slf4j:slf4j-api:jar:1.5.6:compile
[INFO] +- junit:junit:jar:3.8.2:test
[INFO] \- org.mortbay.jetty:jetty:jar:6.1.14:provided
[INFO]    +- org.mortbay.jetty:jetty-util:jar:6.1.14:provided
[INFO]    \- org.mortbay.jetty:servlet-api-2.5:jar:6.1.14:provided

This issue can be avoided altogether by removing the explicit declaration for slf4j-api in wicket's pom. I will submit a patch. 
","04/Dec/08 10:30;ceki@qos.ch;Patch on http://svn.apache.org/repos/asf/wicket/trunk/pom.xml

Remove explicit declaration of slf4j-api dependency. Due to maven transitive dependency rules, declaring a dependency only on slf4j-log4j12 is sufficient and will make it a little easier  for end-users to override slf4j dependencies declared in wicket.

","05/Dec/08 14:57;smartini;Hi, 
with the Help of Ceki previous posts, i found that the bug is (or if not a bug, we can speak of a configuration trick) not in wicket, but instead in the pom.xml generated by the wicket-archetype-quickstart of maven.

That pom file contains:

		<!-- LOGGING DEPENDENCIES - LOG4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>

But if i set the 1.5.6 version (instead of the default 1.4.2), the build process fail.

As Ceki said, we can do two things to solve:
1- (optional, for wicket developers) in Wicket pom.xml : Remove explicit declaration of slf4j-api dependency. Due to maven transitive dependency rules, declaring a dependency only on slf4j-log4j12 is sufficient and will make it a little easier for end-users to override slf4j dependencies declared in wicket. 
and
2- (mandatory, for wicket users) in the generated pom file add (because at the moment this is not present): 
  <dependency>
     <groupId>org.slf4j</groupId>
     <artifactId>slf4j-api</artifactId>
     <version>1.5.6</version>
   </dependency>

also add (if you have not already)

   <dependency>
     <groupId>org.slf4j</groupId>
     <artifactId>slf4j-log4j12</artifactId>
     <version>1.5.6</version>
   </dependency>

and finally (but optional) remove the dependency on log4j (because slf4j-log4j12 has already a dependency on it).


I hope this could help other wicket users that needs to use the latest slf4j.

Best regards, 
Sandro
","29/Dec/08 20:05;jdonnerstag;I applied the patch but didn't succeed at first. Maven reported an error which indicated that a dependency is missing its version number. Doing that I figured slf4j-api and slf4j-log4j12 are both configured in  <dependencies><dependency>... and <dependencyManagement><dependencies><dependency>. First I thought I could remove both slf4j-api entries but that was a mistake. ""mvn install"" reported a problem. Only after I added slf4j-api at <dependencies><dependency> and added the version number to both slf4j-api and slf4j-log4j12 it worked.
I created a new project with mvn archetype ... and the pom.xml contains - as expected - only slf4j-log4j. But the log4j dependency is still in. Why? ",29/Dec/08 20:36;jdonnerstag;Please find my version of pom.xml attached,"18/Feb/09 16:39;daywalker2000@gmx.net;i propose the same solution as for the spring dependency

            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>

",25/Aug/10 22:38;ivaynberg;we are currently on 1.5.8,,,,,,
Hard coded size=8 attribute in DateTimeField.html is too small. DateField.html also has the same issue.,WICKET-1934,12408475,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,rzsolt,rzsolt,14/Nov/08 08:10,25/Aug/10 22:34,13/Mar/19 23:15,25/Aug/10 22:34,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-datetime,,,,0,,,,,,,,"In the associated markup of DateTimeField the date input field has a hard coded size=8 attribute. This is too small. At least 11 or more character required for some locales (eg. the current date in hungarian: ""2008.11.14."").",all,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-25 22:34:01.658,,,no_permission,,,,,,,,,,,202857,,,Wed Aug 25 22:34:01 UTC 2010,,,,,,0|i0keun:,117223,,,,,,,,07/Nov/09 12:54;rzsolt;DateField component also has the same issue.,16/Nov/09 20:48;rzsolt;DateField.html also has the same issue.,25/Aug/10 22:34;ivaynberg;looks like i fixed this and forgot to mark it.,,,,,,,,,,,,,,,,,,,,,
WebRequestCodingStrategy assumes mount path prefix for matching,WICKET-1821,12403805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pbleser,pbleser,05/Sep/08 22:56,25/Aug/10 22:14,13/Mar/19 23:15,25/Aug/10 22:14,1.3.1,1.3.2,1.3.3,1.3.4,1.4-M1,1.4-M2,1.4-M3,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"WebRequestCodingStrategy makes an assumption about IRequestTargetUrlCodingStrategy implementations in what seems to be a minor optimization:
in WebRequestCodingStrategy.MountsMap.strategyForPath:

for (Entry<String, IRequestTargetUrlCodingStrategy> entry : map.entrySet())
{
   final String key = entry.getKey();
   if (path.startsWith(key))
   {
      IRequestTargetUrlCodingStrategy strategy = entry.getValue();
      if (strategy.matches(path))
      {
         return strategy;
      }
   }
}

While it should actually be the following instead:
for (IRequestTargetUrlCodingStrategy strategy : listMounts()) {
   if ((strategy != null) && strategy.matches(path)) {
      return strategy;
   }
}

I ran into that issue while implementing a custom IRequestTargetUrlCodingStrategy that uses a pattern based approach, e.g. for an URL like this:
/customer/1000/site/100/edit

It is mounted with the following String:
""/customer/${customerId}/site/${siteId}/edit""
but it is simply skipped by WebRequestCodingStrategy.MountsMap.strategyForPath() because the mount prefix doesn't match (as in a simple String.startsWith(), as performed by strategyForPath()), while only calling match(String) on the IRequestTargetUrlCodingStrategy works, because match(String) is implemented accordingly in the custom IRequestTargetUrlCodingStrategy.

I would consider this to be a bug, because the current implementation in WebRequestCodingStrategy.MountsMap.strategyForPath() assumes that all IRequestTargetUrlCodingStrategy have a fixed prefix that can be matched using String.startsWith(), while that isn't necessarily the case.","Linux (openSUSE 10.2 and 11.0), x86_64, jetty; but affects all environments",14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-16 07:01:18.887,,,no_permission,,,,,,,,,,,202751,,,Tue Sep 16 07:01:18 UTC 2008,,,,,,0|i0kf5b:,117271,,,,,,,,"07/Sep/08 10:50;pbleser;In case other people run into this, here is a workaround: add the following method in your Application class:
{code:java}
@Override protected IRequestCycleProcessor newRequestCycleProcessor() {
   return new WebRequestCycleProcessor() {
      @Override protected IRequestCodingStrategy newRequestCodingStrategy() {
             return new WebRequestCodingStrategy() {
                 @Override public IRequestTargetUrlCodingStrategy urlCodingStrategyForPath(String path) {
                     if (path == null) {
                         return super.urlCodingStrategyForPath(path);
                     } else {
                         for (IRequestTargetUrlCodingStrategy strategy : listMounts()) {
                             if ((strategy != null) && strategy.matches(path)) {
                                 return strategy;
                             }
                         }
                     }
                     return null;
                 }
             };
         }
    };
}
{code}

It does have a drawback though: it doesn't synchronize on WebRequestCodingStrategy.mountsOnPath as does the overridden method, because that attribute is private. But it's safe if you don't add mounts dynamically (i.e. outside of Application.init()), at least as far as I can tell.",16/Sep/08 07:01;ivaynberg;we are rewriting this whole piece in 1.5 so we will properly fix it than,,,,,,,,,,,,,,,,,,,,,,
Problem rendering not visible Form with OutputMarkupPlaceholderTag,WICKET-1815,12403511,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,moralesg,moralesg,01/Sep/08 21:10,25/Aug/10 22:10,13/Mar/19 23:15,25/Aug/10 22:10,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,1,,,,,,,,"Hi all,

We had suffered an strange behavior, which i would like to share for comments.
We have a Panel (loaded with ajax) with many Forms inside (because each needs different models).
Some of these Forms are only visible under certain conditions, so we overwrote isVisible with the condition.
Also, the Panel can be updated, so the Forms have setOutputMarkupPlaceholderTag(true) to make them visible later.
That triggered a problem in the rendering of the ajax response.

After some investigation, the problem seems to be:
-When a Form is visible, Form#onComponentTag replaces the tag ""form"" by ""div"" (because it's nor the Root form of the page), this works ok.
-When a Form is invisible, Form#onComponentTag is never called. Instead, Component#render builds the response by itself, using markupStream.getTag().getName(), which answers the tag ""form"".
-Then, the ajax response has a mix of ""div"" and ""form"". Apparently, all goes ok until the first ""form"" is found, then the parsing goes somehow crazy and this first ""form"" gets lost from the DOM, and the next forms and divs get inserted outside (one level in DOM) the main component being replaced by the ajax call.

We have found no way to fix it in the Form class itself. Component uses markupStream.getTag() (which answers ""form""). That is, it does not ask the component for the tag to answer, but instead trusts in the HTML side. And we can't change our html to say ""div"", because Form also checks (when visible) that the tag says ""form"" (checkComponentTag(tag, ""form"")).

The solution was to put the missbehaving forms inside Panels, which do not suffer this problem, and then make the panels visible/invisible (also with OutputMarkupPlaceholderTag).

We have it running now, but we wanted to know if there was some better solution, or perpahs something should be fixed to prevent future problems, for example:
-inform somehow if a form is being set as invisible with setOutputMarkupPlaceholderTag(true)?
-let Component ask itself for the tag to output in case of invisible + setOutputMarkupPlaceholderTag(true), instead of just putting what the markup says... then Form could say ""no, i want a div here"".
-other?

Thanks in advance,

German","Nothing special, i guess.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-01 00:48:57.215,,,no_permission,,,,,,,,,,,202746,,,Wed Jul 01 21:48:25 UTC 2009,,,,,,0|i0kf67:,117275,,,,,,,,"01/Jul/09 00:48;rmorrisey;I am also experiencing an issue in my current project where I get nested <form> tags when overriding Form#isVisible() and using form.setOutputMarkupPlaceholderTag(true). In my case, it was causing input entered by the user to be lost when the outer form was submitted.

When the inner form is initially hidden, and I use AJAX behavior to un-hide the form (targeting the markup placeholder in the original output) after the page is loaded, it causes strange behavior in IE 6 - components in the form that are lower on the page, after the inner form, are ommitted from the request when the outer form is submitted. The markup placeholder within the outer form looks like:

<form action=""../../../../../?wicket:interface=:3:contentPanel:dataForm:2:IFormSubmitListener::"" wicket:id=""dataForm"" method=""post"" id=""dataForm33"">
...<form id=""phaseTaskFormf6"" style=""display:none""></form>...
</form>

Like German, I pushed the isVisible implementation up to a wrapper containing the inner Form and this solved the issue.
",01/Jul/09 20:05;knopp;This is fixed in 1.4. Has the fix not been backported to 1.3 branch?,01/Jul/09 20:16;rmorrisey;Looks like it hasn't; we are using 1.3.5 with some minor patches (no changes are applied to Component or Form),01/Jul/09 21:48;ivaynberg;you should try latest snapshot of 1.3.x branch which will eventually become 1.3.7,,,,,,,,,,,,,,,,,,,,
Change old reference to 1.3.0-SNAPSHOT in build instructions,WICKET-1354,12388909,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,dashorst,ejeklint,ejeklint,18/Feb/08 09:56,25/Aug/10 21:04,13/Mar/19 23:15,25/Aug/10 21:04,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,0,,,,,,,,"The website says, under ""Using your own built artifacts"" so refer to them with version 1.3.0-SNAPSHOT, but they are actually built as 1.3-SNAPSHOT, if you download trunk and build.

Also, since there apparently is a snapshot repository at wicketstuff.org/repository with 1.3-SNAPSHOTS available, it could be nice to mention for those who don't want to, or can't, build their own snapshots.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-08-25 21:04:41.174,,,no_permission,,,,,,,,,,,202333,,,Wed Aug 25 21:04:41 UTC 2010,,,,,,0|i0kgdr:,117471,,,,,,,,25/Aug/10 21:04;ivaynberg;im sure we fixed this at some point...,,,,,,,,,,,,,,,,,,,,,,,
"Exception in ""wicket.util.io.WicketObjectOutputStream"" when using an injected @SpringBean via subclassed LocalSessionFactoryBean",WICKET-367,12364328,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mwichers,mwichers,07/Mar/07 09:46,25/Aug/10 15:26,13/Mar/19 23:15,25/Aug/10 15:26,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"Hi all,

we received the following exception within a WebPage using an injected 
SpringBean - Hibernate SessionFactory via subclassed LocalSessionFactoryBean :

ERROR - Objects : Error serializing object class 
de.ponton.box.core.ui.detail.Detail [object=[Page class = 
de.ponton.box.core.ui.detail.Detail, id = 0, version = 0]]
wicket.util.io.WicketSerializeableException: Error writing fields for 
wicket.proxy.$Proxy7
de.ponton.box.core.ui.detail.Detail->sessionFactory
NOTE: if you feel Wicket is at fault with this exception, please report 
to the mailing list. You can switch to JDK based serialization by 
calling: wicket.util.lang.Objects.setObjectStreamFactory(new 
IObjectStreamFactory.DefaultObjectStreamFactory()) e.g. in the init 
method of your application
    at 
wicket.util.io.WicketObjectOutputStream.writeObjectOverride(WicketObjectOutputStream.java:806)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:298)
    at 
wicket.util.io.ClassStreamHandler$ObjectFieldAndIndex.writeField(ClassStreamHandler.java:860)
    at 
wicket.util.io.ClassStreamHandler.writeFields(ClassStreamHandler.java:387)
    at 
wicket.util.io.WicketObjectOutputStream.writeObjectOverride(WicketObjectOutputStream.java:779)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:298)
    at wicket.util.lang.Objects.objectToByteArray(Objects.java:1102)
    at 
wicket.protocol.http.FilePageStore.serializePage(FilePageStore.java:408)
    at wicket.protocol.http.FilePageStore.access$1500(FilePageStore.java:49)
    at 
wicket.protocol.http.FilePageStore$PageSerializingThread.run(FilePageStore.java:705)
    at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.NullPointerException
    at 
wicket.util.io.ClassStreamHandler.writeFields(ClassStreamHandler.java:397)
    at 
wicket.util.io.WicketObjectOutputStream.writeObjectOverride(WicketObjectOutputStream.java:779)
    ... 10 more
ERROR - FilePageStore$PageSerializingThread : Error in page save thread
java.lang.NullPointerException
    at 
wicket.protocol.http.FilePageStore.serializePage(FilePageStore.java:413)
    at wicket.protocol.http.FilePageStore.access$1500(FilePageStore.java:49)
    at 
wicket.protocol.http.FilePageStore$PageSerializingThread.run(FilePageStore.java:705)
    at java.lang.Thread.run(Thread.java:595)
shouldn't happen


Here is the applicationContextSnippet:
...
<bean id=""mergedSessionFactory""
        class=""de.ponton.box.core.bootstrap.DynamicSessionFactoryBean"" 
singleton=""true"">
        <property name=""dataSource"">
            <ref bean=""dataSource"" />
        </property>
....

we are subclassing LocalSessionFactoryBean from spring:

...
public class DynamicSessionFactoryBean extends LocalSessionFactoryBean
{
...

and here is the code snippet:
....
 @SpringBean
    SessionFactory sessionFactory;
....

Thanks in advance!
","JDK 1.5, Win XP, Jetty",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:49:51.965,,,no_permission,,,,,,,,,,,201435,,,Wed Aug 25 15:26:48 UTC 2010,,,,,,0|i0kj1b:,117901,,,,,,,,16/Oct/07 06:49;ehillenius;Assigned version (beta 4),"29/Oct/07 22:25;jcompagner;setting the fix version to 1.4.0
Maybe we can remove this class for 1.4 al together. Because i think currently it only really saved disk space. 
We should test it further if it also gains a lot of cpu speed or not. The problem is that we will always be a bit behind jdk features to serialize i am affraid..","17/Sep/08 16:12;miojo;Shouldn't properties annotated with @SpringBean be always transient?

Is there a way to avoid serialization of those not-transient properties?","17/Sep/08 16:17;dashorst;No, the reason for @SpringBean is that the property *is* serialized. The @SpringBean will create a serializable proxy to the Spring bean that does a lookup in the application context upon deserialization.",25/Aug/10 15:26;ivaynberg;this should have been fixed a looong time ago,,,,,,,,,,,,,,,,,,,
"It appears urlFor(behavior,interface) is not making the url for the behavior but rather the component the behavior is on",WICKET-289,12363060,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jschnitz,jschnitz,17/Feb/07 01:18,14/Aug/10 14:43,13/Mar/19 23:15,14/Aug/10 14:43,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,1,,,,,,,,"While on IRC Igor gave an example of a behavior: http://papernapkin.org/pastebin/view/4672 to generate an onClick event for a table row.

The onclick string in this needs to be augmented a bit to: window.location='""+url+""';"";

However, in the end I get a exception:
WicketMessage: Method onLinkClicked of interface wicket.markup.html.link.ILinkListener targeted at component ..

java.lang.IllegalArgumentException: object is not an instance of declaring class
     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
     at java.lang.reflect.Method.invoke(Method.java:585)
     at wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:186)
     at wicket.request.target.component.listener.ListenerInterfaceRequestTarget.processEvents(ListenerInterfaceRequestTarget.java:73)
     at wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:89)
     at wicket.RequestCycle.doProcessEventsAndRespond(RequestCycle.java:954)
     at wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:987)
     at wicket.RequestCycle.step(RequestCycle.java:1068)
     at wicket.RequestCycle.steps(RequestCycle.java:1142)
     at wicket.RequestCycle.request(RequestCycle.java:456)
     at wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:263)
     at wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:133)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-17 10:16:17.644,,,no_permission,,,,,,,,,,,201361,,,Fri Aug 31 04:57:38 UTC 2007,,,,,,0|i0kj7j:,117929,,,,,,,,"17/Feb/07 10:16;jcompagner;hmm

It is not directly the url that is the problem the problem is that currently only IBehaviorListener really can map to a behaviour
because that interface:

public static final RequestListenerInterface INTERFACE = new RequestListenerInterface(
			IBehaviorListener.class)
	{
		public IRequestTarget newRequestTarget(Page page, Component component,
				RequestListenerInterface listener, RequestParameters requestParameters)
		{
			return new BehaviorRequestTarget(page, component, listener, requestParameters);
		}
	};


is making a special BehaviorRequestTarget 
The ILinkListener has the default RequestTarget

public IRequestTarget newRequestTarget(final Page page, final Component component,
			final RequestListenerInterface listener, final RequestParameters requestParameters)
	{
		return new ListenerInterfaceRequestTarget(page, component, listener, requestParameters);
	}

So i guess to fix this that behaviors can also implement all kind of interfaces we need to generalize it
So delete the BehaviourRequestTarget and do what is now in that target:

public final void processEvents(final RequestCycle requestCycle)
	{
		// Preprocess like standard component request. Do all the initialization
		// necessary
		onProcessEvents(requestCycle);

		// Get the IBehavior for the component based on the request parameters
		final Component component = getTarget();
		final String id = getRequestParameters().getBehaviorId();
		if (id == null)
		{
			throw new IllegalStateException(
					""Parameter behaviorId was not provided: unable to locate listener. Component: ""
							+ component.toString());
		}

		final int idAsInt = Integer.parseInt(id);
		final IBehaviorListener behaviorListener = (IBehaviorListener)component.getBehaviors().get(
				idAsInt);
		if (behaviorListener == null)
		{
			throw new IllegalStateException(""No behavior listener found with behaviorId "" + id
					+ ""; Component: "" + component.toString());
		}

		// Invoke the interface method
		behaviorListener.onRequest();
	}

in the normal ListenerInterfaceRequestTarget based on something that is in the url, when we notice that we want
an url for the behavior

and that is also done through the BehaviourRequestTarget:

final IRequestTarget target = new BehaviorRequestTarget(component.getPage(), component,
				listener, params);
		final IRequestCodingStrategy requestCodingStrategy = getProcessor()
				.getRequestCodingStrategy();
		return requestCodingStrategy.encode(this, target);

so also that should go in the ListenerInterfaceRequestTarget:

target = new ListenerInterfaceRequestTarget(page, component, listener);

i think we need an extra constructor param.. (the behaviour)
","10/Jun/07 21:50;almaw;Igor - can you have a quick look at this and decipher it? ;-) Feel free to unassign if not, obviously.",31/Aug/07 04:57;ivaynberg;how bout you fix somethin! :),,,,,,,,,,,,,,,,,,,,,
Adding WebPage.html after viewing it once requires restart of servlet container for updates in developer mode.,WICKET-1140,12382182,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,sebster,sebster,09/Nov/07 12:02,01/Aug/10 19:23,13/Mar/19 23:15,01/Aug/10 19:23,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"If you create a WebPage.java (which extends some base page) and view it in the browser, and afterwards add WebPage.html and update the browser (in development mode), the page will not be updated. The only way to get Wicket to see the new WebPage.html file seems to be to restart the servlet container. It would be nice if Wicket saw the newly added html file and updated the page accordingly.",,,,,,,,,,,,,,,WICKET-1840,WICKET-1128,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-09 14:03:00.41,,,no_permission,,,,,,,,,,,202141,,,Sun Aug 01 19:23:11 UTC 2010,,,,,,0|i0kgxb:,117559,,,,,,,,"09/Nov/07 14:03;almaw;FWIW, the same is also true of properties files. It would similarly be nice to fix that.","11/Nov/07 15:18;sebster;I looked into providing a patch into this, but it's not entirely trivial.

The problem is that when a MarkupResourceStream is loaded, it is first located using an IStreamResourceLocator, then it is added to the cache and a watcher so that changes are noticed. However, what changes in this case is not the resource itself, but the resource which the locator returns (i.e., after WebPage.html is added, the locator would now return a resource stream to it, instead of to the BasePage.html, which is the one it returned before and is cached).

I can think of several solutions:
1) Push the caching to the locator. I don't like this solution, since the locator's job should be restricted to locating; make caching one of its concerns seems like bad separation of concerns. It would also mean quite a refactor.
2) Ask the locator for the resource every single time to see if it changed it's mind about the resource. If it returns a different resource from the one in the cache, cache the new one. The problem with this solution is that it may make caching pretty useless, as a new resource stream is returned by the localizer every time anyway...
3) Add a method to the locator to ask if it changed it's mind about the resource, something like locator.isStillValid(oldResource). The locator should be able to answer this question, since it is the one responsible for determining which resource stream to return in the first place. The down side of this approach is that it is a big API break (it would require all resource stream locators to implement this new method). As possible means of minimzing the impact is to have a subinterface of the IStreamResourceLocator interface implement the new method and use an instanceof check to see if the method should be called.

I'm not really happy with any of the solutions, though I'm convinced that the locator has to be involved somehow since it is the ONLY entity which knows if the resource stream has changed or not. I personally prefer a variant of #3 I think, but I'm not sure.

I'd like to know your ideas. I don't mind giving it a shot, but I don't want to start until I have an idea about the preferred approach...

Regards,
Sebastiaan","14/Nov/07 12:55;jcompagner;moving this to 1.4, its to hard to do it for 1.3 at this time and it seems thats api changes then has to happen.
So for now you have to restart the container or redeploy.","26/Mar/08 22:59;jcompagner;moving to 1.5
i think the localizer cache is already takene care of, you can override if it has to cache or not.

As far as i know, didn't check it you can have a JConsole (JMX) and clear the caches from there in a running system.
So restarting is not needed for markup or properties i guess.","01/Aug/10 19:23;jdonnerstag;Note that this problem ONLY exists for component's extending a base component (markup inheritance). And it only happens if a new markup file is added. Changing an existing one, will enforce a reload.

In 1.5 you can disable Markup caching completely by subclassing MarkupFactory and replacing getMarkupCache() to return null. To avoid any surprise once the markup is more stable, you should enable caching later on.",,,,,,,,,,,,,,,,,,,
"DataTable generates two <thead wicket:id=""topToolbars"">",WICKET-2620,12443416,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,schueffi,schueffi,15/Dec/09 17:00,28/Jul/10 19:51,13/Mar/19 23:15,30/Dec/09 22:35,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket-extensions,,,,1,,,,,,,,"The tables generated by DataTable component in the current version of Wicket (1.4.3) do not contain <thead> in the output HTML.
It was working correctly in wicket 1.4.0 but there were some changes to fix other issues - see WICKET-2436

To replicate - launch the wicket-examples-1.4.3.war and look at the DataTable example:
http://localhost:8081/wicket-examples-1.4.3/repeater/?wicket:bookmarkablePage=:org.apache.wicket.examples.repeater.DataTablePage
If you check the HTML source you will see it does not contain thead tag:
{html}
<table class=""dataview"" cellspacing=""0"">

	<tr class=""navigation"">
{html}
When you look at http://www.wicket-library.com/wicket-examples/repeater/?wicket:bookmarkablePage=:org.apache.wicket.examples.repeater.DataTablePage
it shows:
{html}
<table class=""dataview"" cellspacing=""0"">
<thead>
	<tr class=""navigation"">
{html}
Must be a previous version? :-)",,,,,,,,,,,WICKET-2546,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-30 22:35:46.348,,,no_permission,,,,,,,,,,,203492,,,Wed Jul 28 19:51:53 UTC 2010,,,,,,0|i0kcwn:,116908,,,,,,,,"15/Dec/09 17:04;schueffi;Hi
this is just to ensure that the issue is still open (and therefore not resolved), as i have no permission to reopen closed issues.

The DataTable-component erroneously emits as many thead and tfoot sections as there are top- and footer-toolbars added to the table.
Although there might be many tbody-elements, the thead and tfoot is only allowed at most one time per table.

The supplied patch in the original issue seems to resolve this, as my own patch looks exactly the same.

Regards

Stefan",30/Dec/09 22:35;jdonnerstag;fixed and added test case,"26/Apr/10 18:09;jwcarman;I believe the fix for this issue has caused a regression in my code.  I have a custom subclass of DataTable with markup:

<wicket:panel>

    <span wicket:id=""topToolbars"">
      <span wicket:id=""toolbar""></span>
    </span>


        <tr wicket:id=""rows"">
            <td wicket:id=""cells"">
                <span wicket:id=""cell"">[cell]</span>
            </td>
        </tr>

    <span wicket:id=""bottomToolbars"">
      <span wicket:id=""toolbar""></span>
    </span>

</wicket:panel>

In 1.4.6, my page fails to render.  In 1.4.5, it works fine.","28/Jul/10 19:51;victordfb;I have exactly the same problem. I've a specialized class for DataTable and in the tag resolving phase, wicket claims that there is no closing tag for <thead wicket:id=""topToolbars"">. My HTML is as follows:

<wicket:panel>
<thead wicket:id=""topToolbars"">
	<wicket:container wicket:id=""toolbar""></wicket:container>
</thead>
<tfoot wicket:id=""bottomToolbars"">
	<wicket:container wicket:id=""toolbar""></wicket:container>
</tfoot>
<tbody>
	<tr wicket:id=""rows"">
		<td wicket:id=""cells"">
			<span wicket:id=""cell"">[cell]</span>
		</td>
	</tr>
</tbody>
</wicket:panel>

Thnx for any regard.",,,,,,,,,,,,,,,,,,,,
The Wicket web site points to Wicket 1.4.1 as the latest release when it should be 1.4.4.,WICKET-2623,12443596,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,stonechild,stonechild,17/Dec/09 01:00,16/Mar/10 02:32,13/Mar/19 23:15,22/Dec/09 16:33,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,0,,,,,,,,The information for obtaining Wicket on http://wicket.apache.org/getting-wicket.html and the page it links to are incorrect. It now states that 1.4.1 is the latest release when the latest is now 1.4.4.,Apache Wicket Web site,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-12-22 16:33:04.93,,,no_permission,,,,,,,,,,,203495,,,Tue Dec 22 16:33:04 UTC 2009,,,,,,0|i0kcw7:,116906,,,,,,,,22/Dec/09 16:33;jdonnerstag;seems to be fixed already.,,,,,,,,,,,,,,,,,,,,,,,
MarkupCache messed up when using MergedMarkup (e.g. for Page markup inheritance) together with IResourceStreams that do NOT also implement IFixedLocationResourceStream,WICKET-2764,12457865,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,coldiges,coldiges,02/Mar/10 14:18,03/Mar/10 19:54,13/Mar/19 23:15,03/Mar/10 19:54,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.8,1.5-M1,,wicket,,,,0,,,,,,,,"For a project that requires markup reloading and a custom markup directory structure we have implemented a custom IResourceStreamLocator.
This implementation creates instance of its own IResourceStream implementation which does NOT at the same time implement IFixedLocationResourceStream.

This means there is no ""locationAsString()"" method implemented on the resource stream instances.

Now the MarkupCache comes into the picture. It is using a cacheKey and the locationAsString as cache keys using a 2 step mechanism.

cacheKey -> locationAsString
locationAsString -> Markup

Additionally MergedMarkup comes into play. MergedMarkup is a markup instance that merges a base markup with another markup. 
This is typically used for markup inheritance.

BasePage.html  implemented by BasePage
PageA.html    extends BasePage
PageB.html    extends BasePage

MergedMarkup#locationAsString() concatenates the locationAsString values of its source markup/resource objects putting a "":"" inbetween.

This means it will NEVER be NULL, even if both source objects return NULL as their locationAsString values.
Now, in case the original resource streams do not implement IFixedLocationResourceStream, this result in a locationAsString of ""null:null"".
Unfortunately this is the case for ALL possible combinations of the source objects of MergedMarkup

So the locationAsString is ""null:null"" for (BasePage,PageA) and also for (BasePage,PageB)

Back to the MarkupCache#loadMarkup method.

There is a check to use the cacheKey as a replacement for locationAsString in case its NULL.
Now, if the Markup loaded is a MergedMarkup instance, it doesnt return NULL, but ""null:null"".

So, putIntoCache() gets called with ""null:null"" as the key for ALL possible combinations resulting in a huge chaos of templates being merged together, when those cache entries are used later on.

A workaround is to implement IFixedLocationResourceStream on our custom IResourceStream implementation.

",,,,,,,,,,,,,,,,,,,03/Mar/10 17:46;coldiges;wicket2764.tgz;https://issues.apache.org/jira/secure/attachment/12437756/wicket2764.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-03-02 17:55:44.077,,,no_permission,,,,,,,,,,,203619,,,Wed Mar 03 19:54:54 UTC 2010,,,,,,0|i0kckv:,116855,,,,,,,,02/Mar/10 17:55;jdonnerstag;please provide a quickstart. Thanks.,"03/Mar/10 17:46;coldiges;Here is a quickstart to reproduce the problem.

There are 2 HomePage classes, one showing ""HomePage"", the other one showing ""HomePage2"".

If you start the server and access the URL:

http://localhost:8080/wicket2764/p1.html    it will show you ""HomePage""

Now access the 2. page:

http://localhost:8080/wicket2764/p2.html    it will still show you ""HomePage""

Now restart the server and access p2 first -> it will show you ""HomePage2""
Then access ""p1.html"" -> it will show you ""HomePage2"" again.

The MergedMarkup instance get mixed up in the cache because for both combinations (BasePage,HomePage) and (BasePage,HomePage2).

""null:null"" will be used as the locationAsString.

A quick fix would be include a NULL check in MergedMarkup#locationsAsString and return NULL in case both
source values are NULL, but I am not sure about the implications of such a fix.

",03/Mar/10 19:54;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,
Javascript in Form.registerJavascriptNamespaces() fails in Firefox 3.5.8,WICKET-2753,12456768,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,saittam,saittam,19/Feb/10 12:21,26/Feb/10 17:44,13/Mar/19 23:15,24/Feb/10 00:41,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,The undefined comparisons fail for me with a message stating that the Wicket variable is undefined (which the code is actually meant to check),Ubuntu Linux 64bit Firefox 3.5.8,,,,,,,,,,,,,,,,,,19/Feb/10 12:22;saittam;forms_namespaces.patch;https://issues.apache.org/jira/secure/attachment/12436314/forms_namespaces.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-02-26 17:44:46.965,,,no_permission,,,,,,,,,,,203609,,,Fri Feb 26 17:44:46 UTC 2010,,,,,,0|i0kclj:,116858,,,,,,,,19/Feb/10 12:22;saittam;Fixes the issue for me.,"26/Feb/10 17:44;victori;Seems to be still broken

See debug below;

http://media.fabulously40.com/images/wicket-forms-issue-js.png",,,,,,,,,,,,,,,,,,,,,,
MimeType/ContentType detection in ResourceStreamRequestTarget unreliable,WICKET-2757,12457139,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,rossi,rossi,23/Feb/10 11:01,24/Feb/10 01:08,13/Mar/19 23:15,24/Feb/10 01:08,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,"With WICKET-356 the content type detection moved from the resoure stream to the ResourceStreamRequestTarget configure method.
There the content type is detected with the following schema:
1. If in stream a content type is set (deprecated) then use that one
2. If on the stream a file name is set use the filename for detection
3. Else use the request URL for detection.

The last option is not reliable. In Line 230 we have the following code

response.detectContentType(requestCycle, requestCycle.getRequest().getURL());

I think it should be 

response.detectContentType(requestCycle, requestCycle.getRequest().getPath());

In my case the request I have parameters attached to the Request URL like this.

web/test.tif?sso=dsagdfgdsfhfg438efgkd549456

And this is passed to the detectContentType() method and this fails because it expects a file name with a file extension.
Using option 1. to fix this is working but is deprecated using option 2. and setting a file name does not work because it has the side effect to set the content disposition header

I'm no wicket expert so I don't now if my suggested change will have side effects. But please consider fixing this.

Thanks,
- Bernd Rosstauscher",Wicket 1.4.0 in embedded Jetty,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203613,,,2010-02-23 11:01:52.0,,,,,,0|i0kclb:,116857,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multipart forms fails on Chrome during Ajax submit,WICKET-2657,12444368,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,dlipski,dlipski,30/Dec/09 10:57,20/Feb/10 09:45,13/Mar/19 23:15,05/Feb/10 06:25,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,"AjaxSubmitLink doesn't work with multipart forms on Google Chrome. 
AjaxSubmitLink calls wicketSubmitFormById in its onClick handler. When submiting multipart form this function creates hidden iframe and attaches handleMultipartComplete function to the onload event.
handleMultipartComplete calls loadedCallback with envelope parameter. On Google Chrome envelope is undefined so loadedCallback craches (""Could not find root <ajax-response> element"" is reported).

I dig more and I found that handleMultipartComplete is called before server side callback completes, thats why 'envelope' is undefined.... ",Google Chrome 3.0.195.38,,,,,,,,,,,,,WICKET-2751,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-02-17 09:18:47.232,,,no_permission,,,,,,,,,,,203526,,,Wed Feb 17 09:18:47 UTC 2010,,,,,,0|i0kcsv:,116891,,,,,,,,"17/Feb/10 09:18;alexandru.objelean;I've tested my code with latest 1.4.x branch version in chrome, and apparently there is another problem with this: 
- if AjaxSubmitLink adds to the target some component to be refreshed, then it will disappear. This can be reproduced only in Chrome (v 5.. probably the same problem is with v. 4). In Firefox everything is ok.",,,,,,,,,,,,,,,,,,,,,,,
WicketTester continueToOriginalDestination() uses application home page instead of original redictor,WICKET-1292,12386602,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mrmean,sunky,sunky,18/Jan/08 13:02,15/Feb/10 16:02,13/Mar/19 23:15,11/May/08 12:04,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket,,,,1,,,,,,,,"WicketTester continues to application home page when continueToOriginalDestination() is called, instead of the expected original destination. Attached is a test case to reproduce the issue. In servlet environment continueToOriginalDestination() works correctly.

---

Workaround by Maurice Marrink:

// continueToOriginaldestination does not work if there is no url available, so we need to fake one here(testing only hack)

mock.setupRequestAndResponse();
WebRequestCycle cycle = mock.createRequestCycle();
String url1 = cycle.urlFor(new BookmarkablePageRequestTarget(YOUR_PAGE_HERE.class, null)).toString();

mock.getServletRequest().setURL(""/GeneralTest$1/GeneralTest$1/"" + url1);
mock.processRequestCycle();

---
mock is the WicketTester.
GeneralTest$1 from the url is the classname of your application without the package. (in my case it is an anonymous inner class hence the $1) Note that this classname appears twice in the url. ",,,,,,,,,,,,,,,,,,,18/Jan/08 13:05;sunky;HomePage.html;https://issues.apache.org/jira/secure/attachment/12373513/HomePage.html,18/Jan/08 13:06;sunky;HomePage.java;https://issues.apache.org/jira/secure/attachment/12373514/HomePage.java,18/Jan/08 13:06;sunky;InterceptPage.html;https://issues.apache.org/jira/secure/attachment/12373515/InterceptPage.html,18/Jan/08 13:06;sunky;InterceptPage.java;https://issues.apache.org/jira/secure/attachment/12373516/InterceptPage.java,18/Jan/08 13:06;sunky;InterceptPageTestCase.java;https://issues.apache.org/jira/secure/attachment/12373517/InterceptPageTestCase.java,18/Jan/08 13:06;sunky;MyApplication.java;https://issues.apache.org/jira/secure/attachment/12373518/MyApplication.java,18/Jan/08 13:07;sunky;TargetPage.html;https://issues.apache.org/jira/secure/attachment/12373519/TargetPage.html,18/Jan/08 13:07;sunky;TargetPage.java;https://issues.apache.org/jira/secure/attachment/12373520/TargetPage.java,8.0,,,,,,,,,,,,,,,,,,,2010-02-15 16:02:03.49,,,no_permission,,,,,,,,,,,202276,,,Mon Feb 15 16:02:03 UTC 2010,,,,,,0|i0kgi7:,117491,,,,,,,,"15/Feb/10 16:02;rfball;I have been trying to implement the workaround you mention in this ticket. I have not been successful. I am not clear where the following code (from the comment in WICKET-1292) would go in the test case java files included in WICKET - 1292?

from ticket:

Workaround by Maurice Marrink:

// continueToOriginaldestination does not work if there is no url available, so we need to fake one here(testing only hack)

mock.setupRequestAndResponse();
WebRequestCycle cycle = mock.createRequestCycle();
String url1 = cycle.urlFor(new BookmarkablePageRequestTarget(YOUR_PAGE_HERE.class, null)).toString();

mock.getServletRequest().setURL(""/GeneralTest$1/GeneralTest$1/"" + url1);
mock.processRequestCycle();

---
mock is the WicketTester.
GeneralTest$1 from the url is the classname of your application without the package. (in my case it is an anonymous inner class hence the $1) Note that this classname appears twice in the url.",,,,,,,,,,,,,,,,,,,,,,,
URL mismatch with RENDER_TO_BUFFER when URL rewriting features of container are used,WICKET-2615,12443269,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,aengler,aengler,14/Dec/09 14:10,05/Feb/10 06:45,13/Mar/19 23:15,05/Feb/10 06:45,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,,,wicket,,,,1,,,,,,,,"In a Wicket web application (Wicket 1.4.3) I noticed that feedback messages were not displayed when cookies were disabled in the browser. It turned out that this problem had to do with the combination of the URL coding strategy that was used (IndexedHybridUrlCodingStrategy) and the render strategy, RenderStrategy.REDIRECT_TO_BUFFER (which is the default). What actually happens when cookies are switched off is that the page is rendered to a buffer, a redirect is sent, but then the server does not recognize that it should use the contents of the buffer because the URLs do not match, and therefore the page is rendered again (this time without the feedback messages because they are now already marked as rendered), the buffer is not used.

If the render strategy is changed to RenderStrategy.REDIRECT_TO_RENDER, there is no problem without cookies; the problem only exists when the page is first rendered to a buffer and then this buffer is not used.

The attached minimal application demonstrates this behavior: When cookies are enabled, you can click the button ""Show feedback message"" on the page, and a message ""Info message generated <time>"" is shown. If cookies are disabled, no feedback message is shown.

Example from debugging:
In WebRequestCycle.redirectTo(...), the variable redirectURL is assigned the value home.0;jsessionid=1ie4koskoj2bn; addBufferedResponse is then called with the value home.0;jsessionid=1ie4koskoj2bn for buffered. Then, after the redirect, in WicketFilter.doGet(...), WebApplication.popBufferedResponse is called with the value home.0 for the relativePath parameter. In that method, the buffered response is not found (because the real key is home.0;jsessionid=1ie4koskoj2bn).

The problem is that when the buffer is put to the map, a key that includes the session ID is used, while for retrieval of the buffered page, a key without the session ID is used.

This problem occurs when IndexedHybridUrlCodingStrategy or the super class HybridUrlCodingStrategy is used. 

If the page is not mounted (and not bookmarkable after the form has been submitted), there are no problems without cookies because a key without the jsessionid is used for storing the buffered response in a map. This has to do with the fact that in WebRequestCycle.redirectTo(...) only the part of the URL after the ""?"" is used as a key:

int index = stripped.indexOf(""?"");
[...]
((WebApplication) application).addBufferedResponse(sessionId, stripped.substring(index + 1), servletResponse);

If the page is mounted with a HybridUrlCodingStrategy, the value assigned to the variable stripped is a string without a ""?"", therefore, index has the value -1 and a URL with jsessionid is used as a key for the buffered page.

I think it might be good if someone has a look into this; it might also be hat in some settings a response is rendered twice (first into the buffer then for the client because the buffer is not retrieved because of a URL mismatch) without users noticing anything (as long as feedback messages are not used).",occurred with Tomcat and Jetty; does not seem to be environment-specific,,,,,,,,,,,,,,,,,,14/Dec/09 14:12;aengler;bufferUrlProblem.jar;https://issues.apache.org/jira/secure/attachment/12427926/bufferUrlProblem.jar,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203488,,,2009-12-14 14:10:46.0,,,,,,0|i0kcxj:,116912,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update PropertyColumn Javadoc,WICKET-2702,12446671,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,pnovotnik,pnovotnik,26/Jan/10 13:30,30/Jan/10 10:47,13/Mar/19 23:15,30/Jan/10 10:47,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"hi,

i find the documentation of the gentrified type T of the {{org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn}} a bit misleading. I suggest the javadoc should state ""The Model object type"" for <T> instead of ""The type of the property"".

thanks,
pete.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203564,,,2010-01-26 13:30:15.0,,,,,,0|i0kcpj:,116876,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FormComponent.MessageSource.getMessage(String) and getValidatorKeyPrefix(),WICKET-2704,12446880,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,guiom.mary,guiom.mary,28/Jan/10 06:37,30/Jan/10 10:44,13/Mar/19 23:15,30/Jan/10 10:44,1.4.3,1.4.4,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.7,1.5-M1,,wicket,,,,0,,,,,,,,"I tried to use the getValidatorKeyPrefix() feature to have a more suitable translation key for a RequiredTextField and the « required » message.
But Wicket wasn't able to find my key : the debug log said that it couldn't find my key whereas it is well-formed (getValidatorKeyPrefix() + "".Required"").
So i debugged the getMessage(String) and I understood the problem. Arround the line 175 (in Wicket 1.4.5) we find :
// If not found try a more general form [prefix].[key]
if (Strings.isEmpty(message))
{
resource = prefix(prefix, key);
message = getString(localizer, key, formComponent);
}

The comment is good, but the code is wrong : the resource variable isn't used in the getString(...) ! (I think it's a kind of bad copy/paste from surrounding code)
We should find :
message = getString(localizer, resource, formComponent);

I did it and it works.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203566,,,2010-01-28 06:37:19.0,,,,,,0|i0kcpb:,116875,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CryptedUrlWebRequestCodingStrategy fails in form with method=""get""",WICKET-2675,12445458,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,smackie,smackie,14/Jan/10 00:25,19/Jan/10 01:02,13/Mar/19 23:15,19/Jan/10 01:02,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,,,,,,,0,,,,,,,,"A form fails to submit when it has method=""get"" set in a wicket application which is using CryptedUrlWebRequestCodingStrategy.

This happens because the form is constructed by wicket like this:

<form wicket:id=""form2"" method=""get"" id=""form26"" action="""">
   <div style=""display:none"">
      <input type=""hidden"" name=""form26_hf_0"" id=""form26_hf_0"" />
      <input type=""hidden"" name=""x"" value=""vcH4-yiA7z1xdg19IZiML85IPOzB2CaoynoU6UPAVS9n2G2S2bamuw"" />
   </div>
   <input type=""text"" wicket:id=""text2"" value="""" name=""text2""/>
   <input type=""submit""/>
</form>

which can produce a query string in firefox like this:
http://localhost:8080/crypt-bug/?form26_hf_0=&x=YhsA9niKQasfMz8FBHuRP1lLAZXPdZy8s1XWlmYcu7WwhnsP*VusYw&text2=test

""x"" is the second parameter in the query string, but CryptedUrlWebRequestCodingStrategy accesses this parameter as ""?x="" where in this case it is ""&x=""

I am attaching the example quickstart app and a possible fix.",,,,,,,,,,,,,,,,,,,14/Jan/10 00:29;smackie;crypt-bug.patch;https://issues.apache.org/jira/secure/attachment/12430195/crypt-bug.patch,14/Jan/10 00:29;smackie;crypt-bug.zip;https://issues.apache.org/jira/secure/attachment/12430193/crypt-bug.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2010-01-17 10:09:20.833,,,no_permission,,,,,,,,,,,203540,,,Sun Jan 17 10:09:20 UTC 2010,,,,,,0|i0kcr3:,116883,,,,,,,,17/Jan/10 10:09;jdonnerstag;patch applied to 1.4. Issue remains open since it must be tested against 1.5 as well which currently is not possible,,,,,,,,,,,,,,,,,,,,,,,
ConvererLocator.convertToString discards original cause of conversion failure,WICKET-2666,12444979,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,alexgrant,alexgrant,07/Jan/10 23:54,17/Jan/10 18:33,13/Mar/19 23:15,17/Jan/10 18:33,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,,,,,1,,,,,,,,"In ConverterLocator.convertToString, in the catch block, an Exception e is caught, and a new ConversionException is thrown, however the new ConversionException is not initialised with the original Exception e as its cause, making it difficult to determine why the conversion failed.",,,,,,,,,,,,,,,,,,,14/Jan/10 18:43;martin-g;WICKET-2666.patch;https://issues.apache.org/jira/secure/attachment/12430280/WICKET-2666.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2010-01-17 18:33:47.934,,,no_permission,,,,,,,,,,,203534,,,Sun Jan 17 18:33:47 UTC 2010,,,,,,0|i0kcs7:,116888,,,,,,,,17/Jan/10 18:33;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
UploadProgressBar component can't be removed or replaced easily,WICKET-2668,12445044,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,samket,samket,08/Jan/10 14:39,08/Jan/10 17:21,13/Mar/19 23:15,08/Jan/10 17:21,1.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"When an UploadProgressBar component is removed, this exception is thrown: java.lang.IllegalStateException: No Page found for component

There is a getPage() call inside an attribute modifier that is registered on the form:
form.add(new AttributeModifier(""onsubmit"", true, new Model<String>() { 
.... getPage() ....
}

Obviously one must remove the attribute modifier from the form when removing the UploadProgressBar.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-01-08 17:21:43.655,,,no_permission,,,,,,,,,,,203535,,,Fri Jan 08 17:21:43 UTC 2010,,,,,,0|i0kcrr:,116886,,,,,,,,08/Jan/10 17:21;ivaynberg;give it a test...,,,,,,,,,,,,,,,,,,,,,,,
wicket should handle Enums like other primitives when injecting them.,WICKET-2619,12443408,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,apetersson,apetersson,15/Dec/09 16:21,22/Dec/09 16:37,13/Mar/19 23:15,22/Dec/09 16:37,1.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.6,1.5-M1,,wicket,wicket-spring,,,0,,,,,,,,"when binding Enum with the use of a factory-method it is not possible to inject the generated value. Primitives such as Integer, boolean etc are already handled directly, since they need no specific serialization handling. enums can be used likewise. i will provide a half-line patch for LazyInitProxyFactory which will fix this.",tested with spring.,3600,3600,,0%,3600,3600,,,,,,,,,,,,15/Dec/09 16:21;apetersson;handle_enums_as_Primitives.patch;https://issues.apache.org/jira/secure/attachment/12428052/handle_enums_as_Primitives.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203491,,,Tue Dec 15 16:21:51 UTC 2009,,,,,,0|i0kcwv:,116909,,,,,,,,15/Dec/09 16:21;apetersson;patch which adds support for injecting enums.,,,,,,,,,,,,,,,,,,,,,,,
"DataTable does not generate ""thead"" tag",WICKET-2546,12439189,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,awal11,awal11,27/Oct/09 15:46,15/Dec/09 17:00,13/Mar/19 23:15,27/Oct/09 19:02,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"The tables generated by DataTable component in the current version of Wicket (1.4.3) do not contain <thead> in the output HTML.
It was working correctly in wicket 1.4.0 but there were some changes to fix other issues - see WICKET-2436

To replicate - launch the wicket-examples-1.4.3.war and look at the DataTable example:
http://localhost:8081/wicket-examples-1.4.3/repeater/?wicket:bookmarkablePage=:org.apache.wicket.examples.repeater.DataTablePage
If you check the HTML source you will see it does not contain thead tag:
{html}
<table class=""dataview"" cellspacing=""0"">

	<tr class=""navigation"">
{html}
When you look at http://www.wicket-library.com/wicket-examples/repeater/?wicket:bookmarkablePage=:org.apache.wicket.examples.repeater.DataTablePage
it shows:
{html}
<table class=""dataview"" cellspacing=""0"">
<thead>
	<tr class=""navigation"">
{html}
Must be a previous version? :-)",,,,,,,,,,,,,,,,,,,15/Dec/09 14:22;dpeters;datatable.patch;https://issues.apache.org/jira/secure/attachment/12428044/datatable.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-12-14 11:55:01.691,,,no_permission,,,,,,,,,,,203424,,,Tue Dec 15 14:22:15 UTC 2009,,,,,,0|i0kd3b:,116938,,,,,,,,"14/Dec/09 11:55;dpeters;yes it does generate thead now.... alot of them actually: one per header-toolbar like reported in WICKET-2436 .

-> datatables are still broken. Maybe there is a missunderstanding of the html-standard here?!
Each <table> may have max. one thead, tbody and tfoot.
","14/Dec/09 12:51;dashorst;Actually a TABLE may have any number ( > 1) of TBODY elements:

<!ELEMENT TABLE - -
     (CAPTION?, (COL*|COLGROUP*), THEAD?, TFOOT?, TBODY+)>
","15/Dec/09 14:22;dpeters;I attached a patch for releases/wicket-1.4.4.
It worked fine in my app and should be ok. But please take a look at it, since it's the first time i commited a patch :)
",,,,,,,,,,,,,,,,,,,,,
wicket:message can cause infinite loop in render,WICKET-2593,12442092,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,sebster,sebster,01/Dec/09 13:31,04/Dec/09 07:02,13/Mar/19 23:15,04/Dec/09 07:02,1.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"This works for me:

<wicket:message key=""key"">bla</wicket:message

This causes an infinite loop:

<wicket:message key=""key"">bla <a href=""bla"">bla</a> bla</wicket:message>

Generally I don't use markup in a wicket:message but I just copy pasted this for mockup purposes; I think it should work, but it definately shouldn't go into an infinite loop.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203467,,,2009-12-01 13:31:20.0,,,,,,0|i0kczj:,116921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Application_bg.properties property file is incorrectly encoded,WICKET-2518,12437863,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,girts.ziemelis,girts.ziemelis,12/Oct/09 14:22,29/Nov/09 09:16,13/Mar/19 23:15,29/Nov/09 09:16,1.4.0,1.4.1,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.4.4,1.5-M1,wicket,,,,1,,,,,,,,"Application_bg.properties file has been incorrectly encoded in rev 461882.
See http://www.nabble.com/Wicket-Bulgarian-translation-(bg)-to25842688.html

I will submit a patch file for this fix",All,,,,,,,,,,,,,,,,,,12/Oct/09 14:26;girts.ziemelis;Application_bg.patch;https://issues.apache.org/jira/secure/attachment/12421873/Application_bg.patch,26/Nov/09 09:30;dotchev;Application_bg.xml;https://issues.apache.org/jira/secure/attachment/12426207/Application_bg.xml,24/Oct/09 07:43;martin-g;WICKET-2518.patch;https://issues.apache.org/jira/secure/attachment/12423105/WICKET-2518.patch,,,,,,3.0,,,,,,,,,,,,,,,,,,,2009-10-17 11:24:41.133,,,no_permission,,,,,,,,,,,203398,,,Sun Nov 29 09:16:03 UTC 2009,,,,,,0|i0kd5j:,116948,,,,,,,,12/Oct/09 14:26;girts.ziemelis;Update for Application_bg.properties file,17/Oct/09 11:24;jdonnerstag;fixed thanks,"17/Oct/09 15:09;martin-g;The following entries are still invalid:

Those two were still in English:

NumberValidator.positive\='${input}' \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u043F\u043E\u043B\u043E\u0436\u0438\u0442\u0435\u043B\u043D\u043E \u0447\u0438\u0441\u043B\u043E.
NumberValidator.negative\='${input}' \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u043E\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043B\u043D\u043E \u0447\u0438\u0441\u043B\u043E.

This one was kind of valid, but IMHO now it is better.
UrlValidator\='${input}' \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0443\u0435\u0431 \u0430\u0434\u0440\u0435\u0441.","19/Oct/09 07:50;girts.ziemelis;Thanks Martin - I myself do not speak Bulgarian - I only got back the previous messages from the original version + added a few we were using in our application and our partners in Bulgaria already translated for us. So would be nice, if someone commits these additional ones you translated ... :)",24/Oct/09 07:43;martin-g;Attach the improvements as a .patch file for easier apply.,"26/Nov/09 09:30;dotchev;I suggest to switch to XML file encoded in UTF-8, like already done for Russian.
Both Bulgarian and Russian use Cyrillic alphabet which has nothing in common with Latin alphabet. Although some of the Cyrillic letters look the same as some Latin letters, they have different codes.
http://en.wikipedia.org/wiki/Cyrillic
So instead of escaping every letter, it would be much more convenient to switch to UTF-8 encoding, supported only by XML property files.

I attach the respective Application_bg.xml. It is intended to replace Application_bg.properties.
I have tried to improve some of the wording and also added PagingNavigator.* entries.",29/Nov/09 09:16;jdonnerstag;applied,,,,,,,,,,,,,,,,,
UploadProgressBar producing warning log messages incorrectly,WICKET-2587,12441447,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,wjp,wjp,23/Nov/09 11:49,28/Nov/09 23:31,13/Mar/19 23:15,28/Nov/09 23:31,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"we get the following warnings in our logs:
(UploadProgressBar.java:106) - UploadProgressBar will not work without
an UploadWebRequest. See the javadoc for details.

We do override in the application:
@Override
       protected WebRequest
newWebRequest(javax.servlet.http.HttpServletRequest servletRequest) {
               return new UploadWebRequest(servletRequest);
       };


When I debug UploadProgressBar I see that:
if (!(RequestCycle.get().getRequest() instanceof UploadWebRequest))
{
       log.warn(""UploadProgressBar will not work without an
UploadWebRequest. See the javadoc for details."");
}

However RequestCycle.get().getRequest() is returning a
UploadWebRequest$MultipartRequest instance.","Windows
Debain
Solaris

On Tomcat and Jetty
",600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-11-28 23:31:22.025,,,no_permission,,,,,,,,,,,203461,,,Sat Nov 28 23:31:22 UTC 2009,,,,,,0|i0kczz:,116923,,,,,,,,28/Nov/09 23:31;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
MetaDataKey does not meet hashCode() contract,WICKET-2548,12439257,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,varlax,varlax,28/Oct/09 09:01,28/Oct/09 16:21,13/Mar/19 23:15,28/Oct/09 16:21,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"The class MetaDataKey overrides equals() method but uses Object.hashCode(). 
So FindBugs warns on any use of this class in our Wicket application.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203426,,,2009-10-28 09:01:10.0,,,,,,0|i0kd33:,116937,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableMultiLineLabel doesn't handle huge text properly,WICKET-2419,12432341,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,tahitiangabriel,tahitiangabriel,06/Aug/09 01:24,27/Oct/09 18:42,13/Mar/19 23:15,27/Oct/09 18:42,1.3.7,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"I've got a panel with an AjaxEditableMultiLineLabel. When a user input a
large text in it (more than 8 000 or 10 000 caracters) nothing happen. The
textarea remains in edit mode.
No javascript error is raised, but when I look in the ajax debug console,
here's what I got :

INFO: Invoking pre-call handler(s)...
INFO: focus removed from id2d
ERROR: Received Ajax response with code: 400
INFO: Invoking post-call handler(s)...
INFO: Invoking failure handler(s)...


I've tried with wicket 1.3.6, 1.3.7 and 1.4.0 using IE 8 and firefox 3.5

I've also the same behaviour with the wicket example application.
",Windows Vista - IE8 and Firefox 3.5.2,,,,,,,,,,,,,,,,,,26/Oct/09 20:07;martin-g;WICKET-2419.patch;https://issues.apache.org/jira/secure/attachment/12423238/WICKET-2419.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-10-26 18:15:28.429,,,no_permission,,,,,,,,,,,203306,,,Mon Oct 26 20:07:26 UTC 2009,,,,,,0|i0kdfb:,116992,,,,,,,,"26/Oct/09 18:15;martin-g;The problem here is that AjaxEditableMultiLineLabel uses GET request to send the new content to the server:

Initiating Ajax GET request on ?wicket:interface=:0:message:editor::IActivePageBehaviorListener:2:-1&wicket:ignoreIfNotActive=true&save=true&message:editor=If%20yo....",26/Oct/09 20:07;martin-g;A patch against wicket-1.5-snapshot,,,,,,,,,,,,,,,,,,,,,,
invalid DataTable markup breaks table layout,WICKET-2436,12434028,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,dpeters,dpeters,26/Aug/09 09:30,27/Oct/09 15:47,13/Mar/19 23:15,26/Aug/09 16:45,1.4.1,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"I upgraded from 1.4.0 from 1.4.1 and noticed that my table toolbars are rendered diffrently. Some bottom-toolbars are suddenly at the top.

The reason for that is the changed markup in 1.4.1.
Every Toolbar has its own <thead></thead> or <tfoot></tfoot> now! 
Normaly (like in <= 1.4.0) it should be one <thead> which includes all the <tr>s.

Firefox only renders one tfoot at the bottom of the table and puts the rest at the top.

To reproduce add more than one bottom-toolbar.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-04 08:56:44.14,,,no_permission,,,,,,,,,,,203323,,,Tue Oct 27 15:47:26 UTC 2009,,,,,,0|i0kdcn:,116980,,,,,,,,"04/Oct/09 08:56;lgawron;Current implementation is even more broken:

<thead wicket:id=""topToolbars"">
	<wicket:container wicket:id=""toolbar""></wicket:container>
</thead>
<thead wicket:id=""bottomToolbars"">
	<wicket:container wicket:id=""toolbar""></wicket:container>
</thead>
<tbody>
	<tr wicket:id=""rows"">
		<td wicket:id=""cells"">
			<span wicket:id=""cell"">[cell]</span>
		</td>
	</tr>
</tbody>

This causes ALL toolbars to be shown on top. 

The proper order is restored with:

<thead wicket:id=""topToolbars"">
	<wicket:container wicket:id=""toolbar""></wicket:container>
</thead>
<tbody>
	<tr wicket:id=""rows"">
		<td wicket:id=""cells"">
			<span wicket:id=""cell"">[cell]</span>
		</td>
	</tr>
</tbody>
<thead wicket:id=""bottomToolbars"">
	<wicket:container wicket:id=""toolbar""></wicket:container>
</thead>

I have no idea if this would properly validate with XHTML.
",04/Oct/09 21:54;ivaynberg;its fixed in trunk and will be part of 1.4.3. i cannot update this issue to reflect that yet because jira craps out when i try.,"07/Oct/09 17:18;lgawron;It is not. I have just tried new trunk - in FF, IE and Chrome both top and bottom toolbars are shown BEFORE table data.",07/Oct/09 17:27;ivaynberg;what is the output markup you get from the latest 1.4.x branch?,"27/Oct/09 11:40;dpeters;It's still broken in the 1.4.3 release version.
The <thead> and <tfoot> tags aren't rendered at all now.",27/Oct/09 15:47;awal11;I have created WICKET-2546 for this missing <thead>,,,,,,,,,,,,,,,,,,
Use of Object instead of generic T in StringAutoCompleteRenderer,WICKET-2520,12438010,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,kbennett,kbennett,13/Oct/09 21:24,17/Oct/09 11:20,13/Mar/19 23:15,17/Oct/09 11:20,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"The method getTextValue is defined in org.apache.wicket.extensions.ajax.markup.html.autocomplete.AbstractAutoCompleteRenderer as:

	protected abstract String getTextValue(T object);

...but overridden in StringAutoCompleteRenderer as:

	 // @see AbstractAutoCompleteTextRenderer#getTextValue(Object)
	protected String getTextValue(Object object)
	{
		return object.toString();
	}

The Javadoc implies that the intention is to override the superclass' method. I think the parameter type should be changed from Object to T.

I recommend that when using something like T, to name the parameter 'value' rather than 'object'.  'object' is misleading, as, by convention, it implies that its data type is Object.
",N/A,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-17 11:20:40.399,,,no_permission,,,,,,,,,,,203400,,,Sat Oct 17 11:20:40 UTC 2009,,,,,,0|i0kd53:,116946,,,,,,,,"14/Oct/09 16:11;kbennett;More on this...

I see that the comment on the StringAutoCompleteRenderer class says:

* An renderer that assumes that assist objects are {@link String}s. Great for quickly generating a
* list of assists.

Do I understand correctly, that assist objects means the underlying objects being rendered?  If so, nothing in the class really requires that the object be a string; to generate the string, toString() is called.  So it would be great if the class could be defined as:

StringAutoCompleteRenderer<T> extends AbstractAutoCompleteTextRenderer<T>

If this means that ""String"" in the class name is inappropriate, then the class could be renamed to DefaultAutoCompleteRenderer or SimpleAutoCompleteRenderer.

Another question...if this class is intended for Strings, why is it defined as:

...extends AbstractAutoCompleteTextRenderer<Object>

instead of:

extends AbstractAutoCompleteTextRenderer<String>?

If I'm misunderstanding the intent, clarification would be appreciated.

Thanks,
Keith",17/Oct/09 11:20;jdonnerstag;Updated javadoc. ,,,,,,,,,,,,,,,,,,,,,,
CheckBoxMultipleChoice ignores isDisabled() checks,WICKET-2528,12438301,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,emu,emu,16/Oct/09 14:13,17/Oct/09 10:50,13/Mar/19 23:15,17/Oct/09 10:50,1.4.1,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket,,,,0,,,,,,,,"The class org.apache.wicket.markup.html.form.CheckBoxMultipleChoice does not allow disabling individual checkboxes. Normally this would be done by overriding AbstractChoice.isDisabled, but the CheckBoxMulitpleChoice component never calls this method during rendering.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-17 10:50:05.165,,,no_permission,,,,,,,,,,,203408,,,Sat Oct 17 10:50:05 UTC 2009,,,,,,0|i0kd4f:,116943,,,,,,,,17/Oct/09 10:50;jdonnerstag;fixed. thanks,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:96),WICKET-2508,12437363,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,joseph_p,joseph_p,06/Oct/09 09:36,07/Oct/09 19:11,13/Mar/19 23:15,07/Oct/09 19:11,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket,,,,0,,,,,,,,"When had the following exception occurring in a production system, while running :

java.lang.NullPointerException
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:96)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1241)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1320)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1419)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:456)
	at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:289)
	at com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:87)
	at org.codesmell.jpsak.servlet.EntityManagerFilter.doFilter(EntityManagerFilter.java:40)
	at com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:87)
	at com.softculture.services.errornotification.wicket.ENFilter.doFilter(ENFilter.java:45)
	at com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:87)
	at com.caucho.server.webapp.WebAppFilterChain.doFilter(WebAppFilterChain.java:187)
	at com.caucho.server.dispatch.ServletInvocation.service(ServletInvocation.java:266)
	at com.caucho.server.hmux.HmuxRequest.handleRequest(HmuxRequest.java:452)
	at com.caucho.server.port.TcpConnection.handleConnection(TcpConnection.java:563)
	at com.caucho.server.port.TcpConnection$KeepaliveTask.run(TcpConnection.java:1177)
	at com.caucho.util.ThreadPool$Item.runTasks(ThreadPool.java:759)
	at com.caucho.util.ThreadPool$Item.run(ThreadPool.java:681)
	at java.lang.Thread.run(Thread.java:619)

At least checking for null when doing ""if (behaviors.size() > idAsInt)"" in BehaviorRequestTarget would be good, maybe more is to be done (?).","caucho resin 3.1.5, wicket 1.4",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-07 19:11:03.758,,,no_permission,,,,,,,,,,,203388,,,Wed Oct 07 19:11:03 UTC 2009,,,,,,0|i0kd6n:,116953,,,,,,,,07/Oct/09 19:11;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester clickLink calls onBeginRequest two times.,WICKET-2501,12437125,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,ildella,ildella,02/Oct/09 15:08,03/Oct/09 11:45,13/Mar/19 23:15,03/Oct/09 11:45,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,,,wicket,,,,0,,,,,,,,"Whilte testing a page using BaseWicketTester.clickLink, it results in calling two times the RequestCycle onBeginRequest.
Is this correct? This cause a problem to me cause in onBeginRequest I open DB transaction as per Open Session in View pattern. So transaction is opened a second time before being committed.

first time, line 697
callOnBeginRequest(requestCycle);

second time, line 704
processRequestCycle(requestCycle);

also call onBeginRequest as you see in the stack:

Thread [main] (Suspended (breakpoint at line 24 in SessionManager))   
    SessionManager.start() line: 24   
    DataRequestCycle.onBeginRequest() line: 26   
    DataRequestCycle(RequestCycle).prepare() line: 1240   
    DataRequestCycle(RequestCycle).step() line: 1304   
    DataRequestCycle(RequestCycle).steps() line: 1428   
    DataRequestCycle(RequestCycle).request() line: 545   
    WicketTester(MockWebApplication).processRequestCycle(WebRequestCycle) line: 504   
    WicketTester(BaseWicketTester).clickLink(String, boolean) line: 704   
    WicketTester(BaseWicketTester).clickLink(String) line: 649   
    EditPageTest.addProducts() line: 50   
    NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]   
    NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39   
    DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25   
    Method.invoke(Object, Object...) line: 597   
    TestMethod.invoke(Object) line: 59   
    MethodRoadie.runTestMethod() line: 98   
    MethodRoadie$2.run() line: 79   
    MethodRoadie.runBeforesThenTestThenAfters(Runnable) line: 87   
    MethodRoadie.runTest() line: 77   
    MethodRoadie.run() line: 42   
    JUnit4ClassRunner.invokeTestMethod(Method, RunNotifier) line: 88   
    JUnit4ClassRunner.runMethods(RunNotifier) line: 51   
    JUnit4ClassRunner$1.run() line: 44   
    ClassRoadie.runUnprotected() line: 27   
    ClassRoadie.runProtected() line: 37   
    JUnit4ClassRunner.run(RunNotifier) line: 42   
    JUnit4TestMethodReference(JUnit4TestReference).run(TestExecution) line: 46   
    TestExecution.run(ITestReference[]) line: 38   
    RemoteTestRunner.runTests(String[], String, TestExecution) line: 467   
    RemoteTestRunner.runTests(TestExecution) line: 683   
    RemoteTestRunner.run() line: 390   
    RemoteTestRunner.main(String[]) line: 197   



-- 
Daniele Dellafiore
http://blog.ildella.net
http://twitter.com/ildella
","java 6, ubuntu 9.10",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-03 11:45:03.427,,,no_permission,,,,,,,,,,,203382,,,Sat Oct 03 11:45:03 UTC 2009,,,,,,0|i0kd7r:,116958,,,,,,,,"02/Oct/09 15:11;ildella;sorry, I received a server error on firt Create but the issue was created anyway. You can remove this one and keep 2500.",03/Oct/09 11:45;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
"""Couldn't resolve model type of Model"" for PasswordTextField",WICKET-2426,12433231,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,mfursov,mfursov,17/Aug/09 12:55,26/Sep/09 10:26,13/Mar/19 23:15,26/Sep/09 10:26,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.5-M1,,,wicket,,,,0,,,,,,,,"When using PasswordTextField with  CompoundPropertyModel mapped with the Map<String, String> I get the following warning:

Couldn't resolve model type of Model:classname=[org.apache.wicket.model.CompoundPropertyModel$AttachedCompoundPropertyModel]:nestedModel=[Model:classname=[org.apache.wicket.model.CompoundPropertyModel]:nestedModel=[org.apache.wicket.util.collections.MiniMap@115126e]] for [MarkupContainer [Component id = password]], please set the type yourself.


This message is fixed if to set password field type manually: new PasswordTextField("""").setType(String.class)

I propose PasswordTextField to use String.class type by default
",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-26 10:26:16.866,,,no_permission,,,,,,,,,,,203313,,,Sat Sep 26 10:26:16 UTC 2009,,,,,,0|i0kdef:,116988,,,,,,,,26/Sep/09 10:26;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
"QuickFix proposal WicketTesterHelper.assertEquals(final Collection<?> expects, final Collection<?> actuals) should compare list sizes",WICKET-2488,12436493,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,mmakundi,mmakundi,24/Sep/09 08:35,26/Sep/09 07:13,13/Mar/19 23:15,26/Sep/09 07:13,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"Simple bug:

WicketTesterHelper.assertEquals(expected, actual) method is supposed to check whether, for example, error messages match. However, if you have a situation with duplicate error messages, the test returns true even though logically the test should fail

Simple fix proposal:

Let's add size check in addition to the containsAll check:

	public static void assertEquals(final Collection<?> expects, final Collection<?> actuals)
	{
		if (!expects.containsAll(actuals) || !actuals.containsAll(expects) || (actuals.size() != expects.size()))
		{
			failWithVerboseMessage(expects, actuals);
		}
	}
",,120,120,,0%,120,120,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-26 07:13:34.345,,,no_permission,,,,,,,,,,,203371,,,Sat Sep 26 07:13:34 UTC 2009,,,,,,0|i0kd8v:,116963,,,,,,,,26/Sep/09 07:13;jdonnerstag;applied,,,,,,,,,,,,,,,,,,,,,,,
AjaxPagingNavigationIncrementLink does not work without AjaxPagingNavigator component,WICKET-2461,12435308,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,anthie,anthie,10/Sep/09 13:40,22/Sep/09 23:50,13/Mar/19 23:15,22/Sep/09 23:50,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"If the AjaxPagingNavigationIncrementLink should be use with a pagable component without the AjaxPagingNavigator then a WicketRuntimeException is thrown when the link is clicked. The documentation says:
""
An incremental Ajaxian link to a page of a PageableListView. Assuming your list view navigation looks like
 
                 [first / << / <] 1 | 2 | 3 [> / >> /last]
 
and ""<"" meaning the previous and ""<<"" goto the ""current page - 5"", than it is this kind of incremental page links which can easily be created. This link will update the pageable and itself or the navigator the link is part of using Ajax techniques, or perform a full refresh when ajax is not available. 
""

From that description I understand, that the AjaxPagingNavigationIncrementLink component should work without a AjaxPagingNavigator too, like the non Ajax variant PagingNavigationIncrementLink.

Reason for this is the implementation of the AjaxPagingNavigationBehavior which explicitly searches for the navigator component and throws the exception.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203345,,,2009-09-10 13:40:47.0,,,,,,0|i0kdbb:,116974,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE after application hot redeployment,WICKET-2475,12435941,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,joseph_p,joseph_p,17/Sep/09 13:29,19/Sep/09 07:13,13/Mar/19 23:15,19/Sep/09 07:13,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"After redeploying by simpling pasting the new war in the webapps folder, I could 2/3 clicks and then I would get the NPE shown under. Note that I could reproduce this bug just by redoing the clicks pattern. I then restarted resin and then tried to hot deploy once again, but the issue didn't reappear.

Here is the stack trace :
Unexpected RuntimeException
WicketMessage: Exception in rendering component: [MarkupContainer [Component id = _header_30]]

Root cause:

java.lang.NullPointerException
     at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:768)
     at org.apache.wicket.markup.MarkupCache$DefaultCacheImplementation.get(MarkupCache.java:744)
     at org.apache.wicket.markup.MarkupCache.removeMarkup(MarkupCache.java:131)
     at org.apache.wicket.markup.MarkupCache.loadMarkup(MarkupCache.java:491)
     at org.apache.wicket.markup.MarkupCache.loadMarkupAndWatchForChanges(MarkupCache.java:559)
     at org.apache.wicket.markup.MarkupCache.getMarkup(MarkupCache.java:325)
     at org.apache.wicket.markup.MarkupCache.getMarkupStream(MarkupCache.java:216)
     at org.apache.wicket.MarkupContainer.getAssociatedMarkupStream(MarkupContainer.java:351)
     at org.apache.wicket.markup.html.ContainerWithAssociatedMarkupHelper.renderHeadFromAssociatedMarkupFile(ContainerWithAssociatedMarkupHelper.java:72)
     at org.apache.wicket.markup.html.WebMarkupContainerWithAssociatedMarkup.renderHeadFromAssociatedMarkupFile(WebMarkupContainerWithAssociatedMarkup.java:73)
     at org.apache.wicket.markup.html.panel.Panel.renderHead(Panel.java:137)
     at org.apache.wicket.markup.html.internal.HtmlHeaderContainer$1.component(HtmlHeaderContainer.java:231)
     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:878)
     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:893)
     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:893)
     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:893)
     at org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:918)
     at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.renderHeaderSections(HtmlHeaderContainer.java:222)
     at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.onComponentTagBody(HtmlHeaderContainer.java:137)
     at org.apache.wicket.Component.renderComponent(Component.java:2626)
     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1536)
     at org.apache.wicket.Component.render(Component.java:2457)
     at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)
     at org.apache.wicket.markup.resolver.HtmlHeaderResolver.resolve(HtmlHeaderResolver.java:80)
     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1441)
     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1552)
     at org.apache.wicket.Page.onRender(Page.java:1545)
     at org.apache.wicket.Component.render(Component.java:2457)
     at org.apache.wicket.Page.renderPage(Page.java:914)
     at org.apache.wicket.protocol.http.WebRequestCycle.redirectTo(WebRequestCycle.java:166)
     at org.apache.wicket.request.target.component.PageRequestTarget.respond(PageRequestTarget.java:58)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1249)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1320)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1419)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:456)
     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:289)
     at com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:87)
     at org.codesmell.jpsak.servlet.EntityManagerFilter.doFilter(EntityManagerFilter.java:40)
     at com.caucho.server.dispatch.FilterFilterChain.doFilter(FilterFilterChain.java:87)
     at com.caucho.server.webapp.WebAppFilterChain.doFilter(WebAppFilterChain.java:189)
     at com.caucho.server.dispatch.ServletInvocation.service(ServletInvocation.java:266)
     at com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:292)
     at com.caucho.server.port.TcpConnection.handleRequests(TcpConnection.java:577)
     at com.caucho.server.port.TcpConnection$AcceptTask.doAccept(TcpConnection.java:1211)
     at com.caucho.server.port.TcpConnection$AcceptTask.run(TcpConnection.java:1152)
     at com.caucho.util.ThreadPool$Item.runTasks(ThreadPool.java:759)
     at com.caucho.util.ThreadPool$Item.run(ThreadPool.java:681)
     at java.lang.Thread.run(Thread.java:619)

Complete stack:

org.apache.wicket.WicketRuntimeException: Exception in rendering component: [MarkupContainer [Component id = _header_30]]
     at org.apache.wicket.Component.renderComponent(Component.java:2665)
     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1536)
     at org.apache.wicket.Component.render(Component.java:2457)
     at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)
     at org.apache.wicket.markup.resolver.HtmlHeaderResolver.resolve(HtmlHeaderResolver.java:80)
     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1441)
     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1552)
     at org.apache.wicket.Page.onRender(Page.java:1545)
     at org.apache.wicket.Component.render(Component.java:2457)
     at org.apache.wicket.Page.renderPage(Page.java:914)
     at org.apache.wicket.protocol.http.WebRequestCycle.redirectTo(WebRequestCycle.java:166)
     at org.apache.wicket.request.target.component.PageRequestTarget.respond(PageRequestTarget.java:58)
     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)
     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1249)
     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1320)
     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1419)
     at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:456)



display page view

NB : it was on a page with a Tree if it can help...","Linux 2.6.26-2-openvz-amd64 #1 SMP Wed Aug 19 23:15:49 UTC 2009 x86_64 GNU/Linux
resin 3.2
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-19 07:13:28.113,,,no_permission,,,,,,,,,,,203359,,,Sat Sep 19 07:13:28 UTC 2009,,,,,,0|i0kd9r:,116967,,,,,,,,19/Sep/09 07:13;jdonnerstag;Thanks a lot,,,,,,,,,,,,,,,,,,,,,,,
javadoc the CryptedUrlWebRequestCodingStrategy needs to be update/corrected to reflect the usage of session-id for encryption and hence URLs which were bookmarkable before will NOT remain bookmarkable. ,WICKET-2466,12435643,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mfarhans,mfarhans,14/Sep/09 19:01,16/Sep/09 06:13,13/Mar/19 23:15,16/Sep/09 06:13,1.3.7,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket,,,,0,,,,,,,,"The javadoc for CryptedUrlWebRequestCodingStrategy needs to be updated/corrected to reflect the usage of sessionId for encryption, which also entails that the urls which were bookmarkable before will NOT be remain bookmarkable any more.

The javadoc currently state ""Because the algorithm is reversible, URLs which were bookmarkable before will remain bookmarkable. "" which is not true anymore.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203350,,,2009-09-14 19:01:50.0,,,,,,0|i0kdaf:,116970,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Estonian translation for StringValidator.minimum contains ${mimimum} instead of ${minimum},WICKET-2415,12432130,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mikulka,mikulka,04/Aug/09 08:25,11/Aug/09 16:17,13/Mar/19 23:15,11/Aug/09 16:17,1.3.7,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.1,,,,,,,0,,,,,,,,"apache-wicket-1.4.0\src\wicket\src\main\java\org\apache\wicket\Application_et.properties
Estonian translation for StringValidator.minimum contains ${mimimum} instead of ${minimum}. This causes the application to crash when using this validator and active language is Estonian.

(Older versions should also be affected by this, maybe since the version that added Estonian translation.)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203302,,,2009-08-04 08:25:30.0,,,,,,0|i0kdfr:,116994,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractOptions of Palette may cause an HTML error with illegal chars,WICKET-2407,12431983,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,egolan74,egolan74,02/Aug/09 08:07,03/Aug/09 00:17,13/Mar/19 23:15,03/Aug/09 00:17,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.1,,,wicket-extensions,,,,0,,,,,,,,"We encountered a small problem in our Palette.
Some of the values that were supposed to be in the choices (available and/or selected) had the '<' and '>' .
Because of that the options weren't rendererd correctly.
Looking at AbstractAction#onComponentTagBody I saw that it takes the value as it is and put it in the html:
String value = getConverter(displayClass).convertToString(displayValue, getLocale());
where displayValue is Object displayValue = renderer.getDisplayValue(choice);

Example fix:
In my code I overridden the getDisplayValue and getDisplayId of the renderer:
        IChoiceRenderer choiceRenderer = new ChoiceRenderer(""getFieldName"", ""getFieldName"") {
            private static final long serialVersionUID = 1L;

            @Override
            public Object getDisplayValue(Object object) {
                final String result = (String) super.getDisplayValue(object);
                return Strings.escapeMarkup(result, true, true).toString();
            }
           
            @Override
            public String getIdValue(Object object, int index) {
                final String result = (String) super.getIdValue(object, index);
                return Strings.escapeMarkup(result, true, true).toString();
            }
        };","Win XP, embedded Jetty / JBOss",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203294,,,2009-08-02 08:07:10.0,,,,,,0|i0kdfz:,116995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IModel parameters of StringResourceModel not getting detached,WICKET-2381,12430907,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jonas,jonas,20/Jul/09 06:30,23/Jul/09 16:32,13/Mar/19 23:15,20/Jul/09 20:50,1.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,0,,,,,,,,"StringResourceModel supports IModels in the 'parameters' Object[] that
are properly handled in StringResourceModel#getString, meaning they
could get attached because of StringResourceModel. 

StringResourceModel should probably check the 'parameters' array for IModels
(or even IDetachables?) and detach them from StringResourceModel#onDetach
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203272,,,2009-07-20 06:30:08.0,,,,,,0|i0kdjb:,117010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two minor quick-to-fix quality bugs in WicketTester,WICKET-2363,12430167,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,mmakundi,mmakundi,12/Jul/09 12:43,14/Jul/09 15:46,13/Mar/19 23:15,14/Jul/09 15:46,1.4-RC7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,wicket,,,,0,,,,,,,,"Bug 1:
---------------------------------------------
BaseWicketTester.submitAjaxFormSubmitBehavior(final Component, AjaxFormSubmitBehavior):

Why doesn't the following snipplet just use the  ""getForm()"" method instead of reflection? There is getForm() method in AjaxFormSubmitBehavior already.

               Form<?> form = null;
               try
               {
                       Field formField = AjaxFormSubmitBehavior.class.getDeclaredField(""__form"");
                       formField.setAccessible(true);
                       form = (Form<?>)formField.get(behavior);
               }
               catch (Exception e)


Bug 2:
---------------------------------------------
tester.executeAjaxEvent does not check whether a component is  visible or not. It should not be allowed to execute ajax events on e.g., invisible buttons.
",,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-14 15:46:37.238,,,no_permission,,,,,,,,,,,203255,,,Tue Jul 14 15:46:37 UTC 2009,,,,,,0|i0kdkv:,117017,,,,,,,,14/Jul/09 15:46;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
ApacheLicenceHeaderTest fails checking non-project file,WICKET-2367,12430359,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,unguiculus,unguiculus,14/Jul/09 11:57,14/Jul/09 14:33,13/Mar/19 23:15,14/Jul/09 14:33,1.4-RC6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.0,,,,,,,0,,,,,,,,"When working with Eclipse, ApacheLicenceHeaderTest fails because it checks an Eclipse config file for the existence of an Apache license.

The constructor should have the following line in order to fix the issue.

xmlIgnore = new String[] { "".settings"" };


-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.wicket.util.license.ApacheLicenceHeaderTest

org.apache.wicket.util.license.XmlLicenseHeaderHandler failed. The following files(1) didn't have correct license header
:
NONE C:\Java\apache-wicket-1.4-rc6\wicket-parent\wicket-devutils\.settings\org.eclipse.wst.common.project.facet.core.xml


Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.094 sec <<< FAILURE!
Running org.apache.wicket.devutils.stateless.StatelessCheckerTest
log4j:WARN No appenders could be found for logger (org.apache.wicket.Application).
log4j:WARN Please initialize the log4j system properly.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.515 sec

Results :

Failed tests:
  testLicenseHeaders(org.apache.wicket.util.license.ApacheLicenceHeaderTest)

Tests run: 3, Failures: 1, Errors: 0, Skipped: 0",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-07-14 14:33:46.008,,,no_permission,,,,,,,,,,,203259,,,Tue Jul 14 14:33:46 UTC 2009,,,,,,0|i0kdkf:,117015,,,,,,,,14/Jul/09 14:33;jdonnerstag;fixed. Thanks.,,,,,,,,,,,,,,,,,,,,,,,
Time.valueOf(TimeOfDay) needs to use 24 hour clock,WICKET-2349,12429103,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jonl,jonl,29/Jun/09 16:02,29/Jun/09 16:30,13/Mar/19 23:15,29/Jun/09 16:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,wicket,,,,0,,,,,,,,Conversions of TimeOfDay values are different before and after lunch because a 24 hour clock is not being used. This threw off our rollover log at work.,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203241,,,Mon Jun 29 16:30:17 UTC 2009,,,,,,0|i0kdlz:,117022,,,,,,,,29/Jun/09 16:30;jonl;fix checked in,,,,,,,,,,,,,,,,,,,,,,,
SignInPanel IllegalArgumentException exception,WICKET-2092,12414388,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,projuri,projuri,09/Feb/09 14:55,26/Jun/09 16:16,13/Mar/19 23:15,13/Feb/09 22:52,1.3.5,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-auth-roles,,,,0,,,,,,,,"If HomePage don't have a default constructor there seems to be a problem with SignInPanel -- after the form submission an exception occured: java.lang.IllegalArgumentException: wrong number of arguments.

The following code in DefaultPageFactory class might be bogus:
if (argument != null)
  return (Page)constructor.newInstance(new Object[] { argument });
else
  return (Page)constructor.newInstance(new Object[] {});

Quickfix for solving the problem - replace ""(PageParameters)null"" with ""new PageParameters()"":
setResponsePage(getApplication().getSessionSettings().getPageFactory().newPage(getApplication().getHomePage(), new PageParameters()));",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-13 15:25:23.112,,,no_permission,,,,,,,,,,,203006,,,Fri Jun 26 16:16:56 UTC 2009,,,,,,0|i0kedj:,117146,,,,,,,,"13/Feb/09 15:25;crashedworld;the problem is even worse: The two Methods newPage(Class) and newPage(Class, PageParameters) both delegate their call to newPage(Constructor, Object) 

If newPage(Class, PageParameters) is getting called wirth PageParameters = null wicket will try to retrieve the constructor with PageParameters.
This constructor is then passed to 
newPage(Constructor, Object)
 which will check whether the provided argument is null. The code mentioned in the description will invoke the constructor as if it would be a parameterless constructor (because argument == null)which is simply wrong as the one with PageParameters has been requested.

In my opinion newPage(Class, PageParameters) should check whether the parameters are null and if that is true, delegate the call to newPage(Class). That means, I suggest to change the method as follows:


public final <C extends Page> Page newPage(final Class<C> pageClass,
  final PageParameters parameters)
{
  // check if the parameters are null and delegate to newPage(Class)
  if (parameters == null)
  {
    return newPage(pageClass);
  }
  
  // Try to get constructor that takes PageParameters
  Constructor<?> constructor = constructor(pageClass, PageParameters.class);

  // If we got a PageParameters constructor
  if (constructor != null)
  {
    // return new Page(parameters)
    return newPage(constructor, parameters);
  }

  // Always try default constructor if one exists
  return newPage(pageClass);
}
",13/Feb/09 22:52;jdonnerstag;fixed,"26/Jun/09 12:59;amichalec;Will this fix go to 1.3.x as backport? I am not sure if 1.3.7 release is planned, if so it would preserve anyone else problems. I cannot upgrade to 1.4 due to other deps... and yes, I have local workaround using registered own page factory but someone may be bound to 1.3.x same way as I am.

cheers, andy.",26/Jun/09 16:16;jdonnerstag;done,,,,,,,,,,,,,,,,,,,,
ModalWindow.setResizable(false) does not work after 1.4-rc4,WICKET-2345,12428888,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,mpalka,mpalka,25/Jun/09 19:41,26/Jun/09 15:27,13/Mar/19 23:15,26/Jun/09 15:27,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,wicket-extensions,,,,0,,,,,,,,"I haven't been able to make a fixed size modal window since I migrated my application to Wicket 1.4-rc5. The same problem exists while using Wicket 1.4-rc4. On the other hand everything works just fine with the 1.4rc-2. I will attach a quickstart that allows to reproduce the problem.

It's looks like that there were some modification made to the ModalWindow component between rc2 and rc4 because my application crashes when switching between those two versions. It crashes with an exception as follows:
java.lang.NoSuchMethodError: nl.stuq.SelectModalWindow.setInitialWidth(I)Lorg/apache/wicket/extensions/ajax/markup/html/modal/ModalWindow. 
A clean and build makes the trick to make it work again.","Windows Vista 64-bit, Tomcat 6.0.18, JDK 16u14",,,,,,,,,,,,,,,,,,26/Jun/09 09:25;mpalka;ModalWindow.java.patch;https://issues.apache.org/jira/secure/attachment/12411895/ModalWindow.java.patch,25/Jun/09 19:45;mpalka;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12411852/quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203237,,,Fri Jun 26 09:24:01 UTC 2009,,,,,,0|i0kdmn:,117025,,,,,,,,25/Jun/09 19:45;mpalka;A quickstart that allows to reproduce the problem. It's basically a modal window example from http://stuq.nl/weblog/2008-06-05/wicket-how-to-write-a-reusable-modal-window-popup.,"26/Jun/09 09:24;mpalka;I attached a patch file that fixes the issue. 

The problem is in getWindowOpenJavascript method that was changed a couple of months ago (April or so).

At some point the getWindowOpenJavascript method takes the booleand value of sResizable() method and converts to String.
appendAssignment(buffer, ""settings.resizable"", Boolean.toString(isResizable()));
Then it calls the appendAssignment method that actually appends a String value to the output javascript code.
The problem is that the appendAssignment quotes Strings.
This makes the generated javascript code line look like the following:
settings.resizable=""false""
Which I believie is not a boolean value in Javascript.

I created another appendAssignment method that takes a boolean as a value parameter and puts it into the script in unquoted form:
private void appendAssignment(final AppendingStringBuffer buffer, final CharSequence key,
final boolean value)
{
buffer.append(key).append(""="");
buffer.append(Boolean.toString(value));
buffer.append("";\n"");
}
Then I replaced a line in the getWindowOpenJavascript to call my method instead of the one that takes String value.
From:
appendAssignment(buffer, ""settings.resizable"", Boolean.toString(isResizable()));
to:
appendAssignment(buffer, ""settings.resizable"", isResizable());

",,,,,,,,,,,,,,,,,,,,,,
AbstractSingleSelectChoice nullValid javadocs are misleading.,WICKET-2341,12428802,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,kbennett,kbennett,24/Jun/09 19:10,24/Jun/09 20:30,13/Mar/19 23:15,24/Jun/09 20:30,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,wicket,,,,0,,,,,,,,"I believe that the documentation on AbstractSelectSingleChoice regarding nullValid is misleading.  This documentation appears in isNullValid()
and setNullValid().  I think the following is more accurate and informative:

----

Determines whether or not the null value should be included in the
list of choices when the field's model value is nonnull, and whether or
not the null_valid string property (e.g. ""Choose One"") should be
displayed until a nonnull value is selected.

If set to false, then ""Choose One"" will be displayed when the value is
null.  After a value is selected, and that change is propagated to the
underlying model, the user will no longer see the ""Choose One"" option,
and there will be no way to reselect null as the value.

If set to true, the null string property (the empty string, by default)
will always be displayed as an option, whether or not a nonnull value
has ever been selected.

Note that this setting has no effect on validation; in order to guarantee
that a value will be specified on form validation, call setRequired(true). This is because even if setNullValid() is called with false, the user can fail to provide a value simply by never activating (i.e. clicking on) the component.

----

For the nullValid data member, I suggest this comment:

""whether or not null will be offered as a choice once a nonnull value is saved""

",Any,3600,3600,,0%,3600,3600,,,,,,,,,,,,24/Jun/09 19:20;kbennett;wicket-2341.patch;https://issues.apache.org/jira/secure/attachment/12411687/wicket-2341.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203233,,,Wed Jun 24 19:20:41 UTC 2009,,,,,,0|i0kdmv:,117026,,,,,,,,"24/Jun/09 19:20;kbennett;This patch makes the changes suggested, relative to the 1.4 file.",,,,,,,,,,,,,,,,,,,,,,,
German translation for NumberValidator.minimum is wrong,WICKET-2284,12425721,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,fte,fte,18/May/09 12:43,19/Jun/09 16:47,13/Mar/19 23:15,19/Jun/09 16:47,1.3.6,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC6,,,wicket,,,,0,,,,,,,,"The error message in German that is used now would translate to English like this:

'-2' has to be greater than 0.

and not like the English version:

'-2' is smaller than the minimum of 0.

The correct translation would be:
'-2' ist kleiner als der erlaubte Minimalwert (0).

I think there is a Swiss translation too that may contain the wrong text.

","Wicket Maven-Setup, Wicket 1.3.6, Windows XP Professional",1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-06-18 19:52:24.392,,,no_permission,,,,,,,,,,,203181,,,Fri Jun 19 16:47:12 UTC 2009,,,,,,0|i0kdsv:,117053,,,,,,,,18/Jun/09 19:52;jdonnerstag;fixed on 1.4 trunk (only),19/Jun/09 07:11;fte;The swiss properties file is still wrong.,19/Jun/09 16:47;jdonnerstag;changed _ch as well,,,,,,,,,,,,,,,,,,,,,
&amp; instead of & in javascript,WICKET-2033,12412909,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jcompagner,tuomask,tuomask,21/Jan/09 14:14,09/Jun/09 08:13,13/Mar/19 23:15,05/Jun/09 12:46,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"the non httpsessionstore part of:
https://issues.apache.org/jira/browse/WICKET-1971

is that 

in the 
wicket:ignoreIfNotActive actually becomes

amp;wicket:ignoreIfNotActive=true

in:

	protected CharSequence encode(RequestCycle requestCycle,
			IListenerInterfaceRequestTarget requestTarget)

of WebRequestCodingStrategy on the line:

			url.append(url.indexOf(""?"") > -1 ? ""&amp;"" : ""?"").append(
					IGNORE_IF_NOT_ACTIVE_PARAMETER_NAME).append(""=true"");


so when this happens in 
	public final RequestParameters decode(final Request request) {

---
		if (request.getParameter(IGNORE_IF_NOT_ACTIVE_PARAMETER_NAME) != null)
		{
			parameters.setOnlyProcessIfPathActive(true);
		}
---

this never actually happens.


then if you have a throttle, ajaxlazyloadpanel etc with onlyprocessifpathactive set to true, and you logout, but go to another wicket page, then the original session is destroyed and a new one is created

if this is worked around in the way the  guys on WICKET-1971 suggest,
WebRequestCycleProcessor

method

	public IRequestTarget resolve(final RequestCycle requestCycle,
			final RequestParameters requestParameters)


				if (requestParameters.isOnlyProcessIfPathActive())
last branch falls through:
					else
					{
						// TODO also this should work..
					}


and it throws PageExpiredException because the request component/page/behavior does not exist in this new session.   even though onlyprocessifpathactive was set to true, and it's purpose is precisely to avoid pageexpiredexception.",all,,,,,,,,,,,,,,,,,,11/May/09 23:55;mbrictson;amp_escape.patch;https://issues.apache.org/jira/secure/attachment/12407830/amp_escape.patch,14/Feb/09 13:16;tuomask;wicket-2033-quickstart.zip;https://issues.apache.org/jira/secure/attachment/12400227/wicket-2033-quickstart.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-02-25 20:54:33.357,,,no_permission,,,,,,,,,,,202948,,,Tue Jun 09 08:13:17 UTC 2009,,,,,,0|i0kejz:,117175,,,,,,,,"14/Feb/09 13:16;tuomask;attached quickstart.

clicking the link on homepage demonstrates both problems.","25/Feb/09 20:54;thrantal;By just dropping the encoding from here seems to fix the issue... but I wonder if it will break anything?

Index: wicket/src/main/java/org/apache/wicket/protocol/http/request/WebRequestCodingStrategy.java
===================================================================
--- wicket/src/main/java/org/apache/wicket/protocol/http/request/WebRequestCodingStrategy.java	(revision 747895)
+++ wicket/src/main/java/org/apache/wicket/protocol/http/request/WebRequestCodingStrategy.java	Wed Feb 25 22:41:26 EET 2009
@@ -972,7 +972,7 @@
 
 		if (IActivePageBehaviorListener.INTERFACE.getName().equals(listenerName))
 		{
-			url.append(url.indexOf(""?"") > -1 ? ""&amp;"" : ""?"").append(
+			url.append(url.indexOf(""?"") > -1 ? ""&"" : ""?"").append(
 				IGNORE_IF_NOT_ACTIVE_PARAMETER_NAME).append(""=true"");
 		}
 		return url;

","25/Feb/09 21:35;jcompagner;didnt i fix this already in 1.3? (i think i need to merge stuff to 1.4)

because some things need to be escaped but other that are for example used in CDATA xml blocks shouldnt..","26/Feb/09 03:50;thrantal;Johan, the diff is not the cleanest possible but I think that you did just that here

  http://fisheye6.atlassian.com/browse/wicket/branches/wicket-1.3.x/jdk-1.4/wicket/src/main/java/org/apache/wicket/protocol/http/request/WebRequestCodingStrategy.java?r1=646008&r2=734478

Should I commit the same in WebRequestCodingStrategy in trunk? Or is there something else that needs to be taken care of, then I could just assign the issue to you?

In the changeset there's just the same for UrlCompressingWebCodingStrategy

  http://fisheye6.atlassian.com/changelog/wicket?cs=734478","26/Feb/09 09:28;jcompagner;i will look at this, need to merge stuff from 1.3 anyway (1.3 is still my major thing for fixing stuff)","09/Mar/09 02:15;dtoffe;Perhaps it has something to do with this:
https://issues.apache.org/jira/browse/WICKET-2131  ???
","05/Apr/09 08:11;tuomask;there is also a related issue in the case of:

- an ajax component is ""target active path only""
- an ajax component has a throttle
- the ajax component or it's parent is replaced on the current page
- the throttle fires
- wicketruntimexception ""the component xxx does not exist on page yyy""

","04/May/09 11:56;dashorst;Another one:

<form id=""personaliaForm57"" action=""../?wicket:interface=:5:personaliaForm::IFormSubmitListener::"" method=""post""><div style=""display:none""><input type=""hidden"" name=""personaliaForm57_hf_0"" id=""personaliaForm57_hf_0"" /></div><div style=""width:0px;height:0px;position:absolute;left:-100px;top:-100px;overflow:hidden""><input type=""text"" autocomplete=""false""/><input type=""submit"" name=""bottom:rightButtons:0:link"" onclick="" var b=document.getElementById('link4f'); if (b!=null&&b.onclick!=null&&typeof(b.onclick) != 'undefined') {  var r = b.onclick.bind(b)(); if (r != false) b.click(); } else { b.click(); };  return false;""  /></div>

calling form.setDefaultButton()  with a button/link outside the form tag.","05/May/09 08:55;papegaaij;The ""fix"" applied to 1.3.6 breaks rendering of AjaxSubmitLink. The onclick now contains an unescaped ""&wicket:ignoreIfNotActive=true"", which is invalid xml.","11/May/09 22:00;mbrictson;Also breaks in 1.4-rc4: onclick for an AjaxButton contains the unescaped ""&wicket:ignoreIfNotActive=true"".","11/May/09 23:55;mbrictson;Perhaps we should use Strings.escapeMarkup() to properly escape the ampersand when the ajax event handler is emitted. My guess is that it would belong in AjaxEventBehavior.onComponentTag().

With this change I found a case where the ampersand was being escaped twice, and corrected it: AjaxFormSubmitBehavior.getPreconditionScript().

Finally I added a unit test to verify the correct output.

Please find patch attached.","05/Jun/09 12:46;jcompagner;i commit the patch looks fine.

If we have tested this in 1.4RC5 i also wants to do the same for 1.3",09/Jun/09 08:13;papegaaij;I've created a new issue (#2316) for the problem Martijn mentioned with setDefaultButton on forms.,,,,,,,,,,,
"When injecting more than one parm in a method, an ArrayIndexOutOfBoundsException is thrown",WICKET-2301,12426973,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,slowery23,slowery23,02/Jun/09 20:55,02/Jun/09 23:39,13/Mar/19 23:15,02/Jun/09 23:39,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket-guice,,,,0,,,,,,,,"When using method injection that takes more than one parameter, an ArrayIndexOutOfBoundsException (-1) is thrown.  I've isolated code to line 90 of org.apache.wicket.guice.GuiceProxyTargetLocator.  parmTypes[2 - i] should read parmTypes[i - 2].  I will attach a (simple) patch with this.",Tested with wicket1.4-rc4 in windows.,,,,,,,,,,,,,,,,,,02/Jun/09 20:56;slowery23;GuiceProxyTargetLocator.java.patch;https://issues.apache.org/jira/secure/attachment/12409692/GuiceProxyTargetLocator.java.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203195,,,2009-06-02 20:55:55.0,,,,,,0|i0kdrr:,117048,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.util.convert.converters.SqlTimestampConverter only renders the time part of the timestamp,WICKET-2123,12415369,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,dylans@xs4all.nl,dylans@xs4all.nl,23/Feb/09 15:19,28/May/09 15:46,13/Mar/19 23:15,28/May/09 15:46,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"convertToObject calls DateFormat.getTimeInstance(dateFormat, locale)

I would have expected it to call DateFormat.getDateTimeInstance(dateFormat, locale)
if this is changed, I assume that the mirroring call in convertToObject also needs to be adjusted.

the result is that currently only the time part of a timestamp is displayed when a default property model",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203034,,,2009-02-23 15:19:57.0,,,,,,0|i0ke9j:,117128,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
isComponent in BaseWicketTester contains possible nullpointer exception,WICKET-2276,12425453,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,robertda,robertda,14/May/09 12:19,15/May/09 06:15,13/Mar/19 23:15,15/May/09 06:15,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"When attempting to verify if a component exists, attempting to unit test a panel, the tester.assertComponent() call fails due to a nullpointer.
This occurs when isComponent() in BaseWicketTester is called and fails to find a component from the last rendered page. 
Then the component.getClass() in the following line will trigger the nullpointer exception.
A very simple fix would be to add a null check before attempting to check the type of the component to be able to provide a better error message.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-15 06:15:03.571,,,no_permission,,,,,,,,,,,203173,,,Fri May 15 06:15:03 UTC 2009,,,,,,0|i0kdtz:,117058,,,,,,,,15/May/09 06:15;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
StatelessChecker is always offended,WICKET-2278,12425544,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,ralf.ebert,ralf.ebert,15/May/09 01:27,15/May/09 05:35,13/Mar/19 23:15,15/May/09 05:35,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,,,,,0,,,,,,,,"org.apache.wicket.devutils.stateless.StatelessChecker:96

final Object o = ((MarkupContainer)component).visitChildren(visitor);
if (o == null) {
    throw new IllegalArgumentException(msg + "" Offending component: "" + o);
}

Imo this should be ""o!=null"" because the visitor returns null when no offending (=stateful) component was found.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-15 05:35:05.114,,,no_permission,,,,,,,,,,,203175,,,Fri May 15 05:35:05 UTC 2009,,,,,,0|i0kdtj:,117056,,,,,,,,15/May/09 05:35;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
PageParameters always non-empty,WICKET-2245,12423861,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,frank06,frank06,27/Apr/09 09:13,09/May/09 06:54,13/Mar/19 23:15,09/May/09 06:54,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,"Say I mount MyBookmarkablePage like so:

mount(new IndexedHybridUrlCodingStrategy(""/my/bookmarkable"",
MyBookmarkablePage.class));

where

       public MyBookmarkablePage() {
               (...)
       }

       public MyBookmarkablePage(PageParameters params) {
               (...)
       }


When I call http://localhost:8080/app/my/bookmarkable (just that plain
url, no trailing nothing), then I never get into the no-args
constructor, always in the params one. This because the params object
comes with ""0""="""", which I feel is wrong.

Consequently, params.containsKey(""0"") returns true - and here I have
to go and check if the value is not empty.

Note I'm using IndexedHybridUrlCodingStrategy.",Ubuntu 8.10 / Java 1.6 / Firefox 3.0.6,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203145,,,2009-04-27 09:13:05.0,,,,,,0|i0kdxb:,117073,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Autocomplete text fields don't call existing JavaScript event handlers properly,WICKET-2252,12424504,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,percederberg,percederberg,04/May/09 08:46,05/May/09 08:18,13/Mar/19 23:15,04/May/09 17:15,1.3.6,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.7,,,wicket-extensions,,,,0,,,,,,,,"The Wicket AutocompleteTextField component attaches to an INPUT HTML element. In doing so, it replaces several JavaScript event handlers, such as ""onclick"", ""onblur"", etc. It also stores the previous callback handlers and attempts to ensure that they are called whenever the appropriate event occurs. But the logic for this is unfortunately somewhat flawed in Firefox, Safari and Opera browsers, since the original DOM event object is lost.

The proper fix requires changing code like this:

    if(typeof objonchangeoriginal==""function"")objonchangeoriginal();

into the appropriate call:

    if(typeof objonchangeoriginal==""function"")objonchangeoriginal.apply(this,[event]);

As of version 1.3.6 of Wicket, the following event handler calls should be fixed like this:

objonchangeoriginal
objonblur
objonfocus
objonchange
objonkeydown
objonkeyup
objonkeypress",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-05-04 17:15:34.428,,,no_permission,,,,,,,,,,,203151,,,Tue May 05 08:18:20 UTC 2009,,,,,,0|i0kdwn:,117070,,,,,,,,04/May/09 08:47;percederberg;The error is in wicket-autocomplete.js,"04/May/09 17:15;ivaynberg;looks like this was already fixed in trunk (1.4), fixed in 1.3.x branch, please test and make sure it works","05/May/09 08:18;percederberg;Should work ok, since our patched source code no longer shows any diff on this. Thanks!",,,,,,,,,,,,,,,,,,,,,
IOptionRenderer getModel(Object value) should change to getModel(T value),WICKET-2250,12424448,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,michael.mosmann,michael.mosmann,02/May/09 07:51,03/May/09 23:39,13/Mar/19 23:15,03/May/09 23:39,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC4,,,wicket-extensions,,,,0,,,,,,,,"In org.apache.wicket.extensions.markup.html.form.select.IOptionRenderer<T>

public IModel<T> getModel(Object value);

should be changed to 

public IModel<T> getModel(T value);

The type is known as in 

public String getDisplayValue(T object);


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203149,,,2009-05-02 07:51:02.0,,,,,,0|i0kdx3:,117072,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Guice integration doesn't honour optional bindings,WICKET-2241,12423655,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jessewilson,jessewilson,24/Apr/09 05:20,27/Apr/09 15:15,13/Mar/19 23:15,25/Apr/09 18:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC4,,,wicket-guice,,,,0,,,,,,,,"When @Inject(optional=true) is applied and the binding isn't available, wicket should skip the injection silently.
http://groups.google.com/group/google-guice/browse_thread/thread/2abe9b55ee26a198

To check whether the binding is available, you need to use a try/catch block:
  try {
    Binding binding = injector.getBinding(key);
    // use the binding
  } catch (ConfigurationException e) {
    // the binding isn't available
  }",,,,,,,,,,,,,,,,,,,25/Apr/09 13:00;gudmundur;0001-WICKET-2241-Support-for-Guice-s-Inject-optional.patch;https://issues.apache.org/jira/secure/attachment/12406433/0001-WICKET-2241-Support-for-Guice-s-Inject-optional.patch,27/Apr/09 06:51;gudmundur;0002-Guice-integration-doesn-t-honour-optional-bindings.patch;https://issues.apache.org/jira/secure/attachment/12406493/0002-Guice-integration-doesn-t-honour-optional-bindings.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2009-04-25 13:00:29.78,,,no_permission,,,,,,,,,,,203143,,,Mon Apr 27 06:51:07 UTC 2009,,,,,,0|i0kdxz:,117076,,,,,,,,"25/Apr/09 13:00;gudmundur;Wrote a simple fix which adds an optional parameter to GuiceProxyTargetLocator. Before calling injector.getInstance(key) it checks whether the target is optional, if it is Guice is asked whether a binding exists (via injector.getBinding(key)) and if there is no binding a null is returned from the locator. Otherwise it just proceeds as it did before.","27/Apr/09 03:06;esnunes;I think there is something wrong with this patch:
		// if the Inject annotation is marked optional and no binding is found
		// then skip this injection (WICKET-2241)
		if (optional && injector.getBinding(key) == null)
		{
			return null;
		}

But here (latest version of guice) injector.getBinding(..) throws an exception instead of return null. Consider do like Jesse Wilson said.

A solution that works for guice 1.0 and 2.0 is:
		if (optional)
		{
			try
			{
				if (injector.getBinding(key) == null)
				{
					return null;
				}
			}
			catch (RuntimeException e)
			{
				return null;
			}
		}

","27/Apr/09 06:51;gudmundur;What Eduardo S. Nunes wrote is 100% correct. I unfortunately didn't try the patch with the Guice 2.0 snapshots, which throws a ConfigurationException (this exception has default visibility in Guice 1.0, thus catching a RuntimeException) if no binding is found.

I've created another patch (and tested) that should be applied on top of the one that has already been committed.",,,,,,,,,,,,,,,,,,,,,
getPageSettings().setAutomaticMultiWindowSupport(true); is said to be enabled by default in its javadoc but isn't ,WICKET-2233,12423415,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,nono,nono,21/Apr/09 21:48,25/Apr/09 18:45,13/Mar/19 23:15,25/Apr/09 18:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,,,,,0,,,,,,,,"More info there : http://www.nabble.com/LinkTree-breaks-when-using-twice-instances-of-Firefox-(with--Unexpected-RuntimeException)-td23098156.html

I don't know whether it's just about changing the javadoc or fixing the current default...",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-24 17:20:27.176,,,no_permission,,,,,,,,,,,203137,,,Sat Apr 25 18:45:37 UTC 2009,,,,,,0|i0kdyv:,117080,,,,,,,,"24/Apr/09 17:20;jdonnerstag;What happens:

Settings.java
 ...
  	private boolean automaticMultiWindowSupport = true;
...

but SecondLevelCacheSessionStore.java
		// turn automatic multi window support off by default, as we don't
		// really
		// need to be afraid to run out of history with this implementation.
		// note that the session store is created before Application#init is
		// called, so if users set this setting explicitly, it'll be overridden
		// (and that's exactly what we want: provide a better default, but not
		// forcing people to do away with this feature).
		Application.get().getPageSettings().setAutomaticMultiWindowSupport(false);

which is the default: WebApplication.java
	protected ISessionStore newSessionStore()
	{
		return new SecondLevelCacheSessionStore(this, new DiskPageStore());
	}
",25/Apr/09 18:45;ivaynberg;added javadoc clarification,,,,,,,,,,,,,,,,,,,,,,
java.sql.Timestamp converter bug,WICKET-2242,12423672,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,flasby,flasby,24/Apr/09 07:39,24/Apr/09 08:05,13/Mar/19 23:15,24/Apr/09 08:05,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"SqlTimestampConverter should produce a Date/Time as output, but it only produces
 a time. SqlTimeConverter prints a simple time as expected.

Looking in the code SqlTimestampConverter::convertToString uses:

 DateFormat format = DateFormat.getTimeInstance(dateFormat, locale);

when I think it should say:

 DateFormat format = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale);

instead.

convertToObject would need a corresponding change to:
 DateFormat format = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale);
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203144,,,2009-04-24 07:39:40.0,,,,,,0|i0kdxr:,117075,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette problem in IE7 Problem,WICKET-2236,12423553,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,egolan74,egolan74,23/Apr/09 09:35,24/Apr/09 07:39,13/Mar/19 23:15,24/Apr/09 07:39,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket-extensions,,,,0,,,,,,,,"A problem that happens in palette and IE7.
Wicket version is 1.3.4 .

The situation is:
when pressing the UP button, the selected element goes up in each click.
That's OK.
The problem occurs when this element is in the second row.
When pressing UP, it won't go to the first (upper) row. Only when we move
the mouse to the area of the selected elements it goes up.

In FF it doesn't happen.
in IE6 it doesn't happen as well. 

see http://www.nabble.com/Strange-behavior-with-palette-(1.3.4)-and-IE7-td23172687.html",IE7,,,,,,,,,,,,,,,,,,23/Apr/09 12:07;egolan74;WICKET-2236.patch;https://issues.apache.org/jira/secure/attachment/12406215/WICKET-2236.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-24 07:39:16.886,,,no_permission,,,,,,,,,,,203139,,,Fri Apr 24 07:39:16 UTC 2009,,,,,,0|i0kdyf:,117078,,,,,,,,"23/Apr/09 12:07;egolan74;This is a fix patch for the problem.
Two changes:
1. Palette.html : added an element with visible: none
2. palette.js: setting a (empty) value to that element",24/Apr/09 07:39;ivaynberg;ive applied your patch but it did not help for me on IE7. i applied a different tweak that seems to be working.,,,,,,,,,,,,,,,,,,,,,,
DropDownChoice NO_SELECTION_VALUE static field is final,WICKET-2161,12416722,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,ulrikh,ulrikh,12/Mar/09 07:54,13/Apr/09 07:56,13/Mar/19 23:15,13/Apr/09 07:56,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"Lets say I do this:

List<Option> _options = getOptions();
someRenderer = new ChoiceRenderer() {
...
}

DropDownChoice _ddc = new DropDownChoice(""dropDown"", new Model((Serializable) _option),options, someRenderer);

The Option class looks like this:

public class Option {
private String display_name;
private String id;

gettersAndSetters...
}

If I select an Option from the DDC, and that Option has id = -1, the AbstractSingleSelectChoice#getDefaultChoice(final Object selected) will interpret my choice as the protected static final String NO_SELECTION_VALUE = ""-1"" in AbstractSingleSelectChoice.java.

The result will be that the ""Choose one"" option is visible in the DDC.
Shouldn't the NO_SELECTION_VALUE be customizable?
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-12 14:00:18.78,,,no_permission,,,,,,,,,,,203069,,,Mon Apr 13 07:56:38 UTC 2009,,,,,,0|i0ke5z:,117112,,,,,,,,"12/Mar/09 14:00;jwcarman;Better yet, the NO_SELECTION_VALUE should be a special type of object.  Perhaps an inner static class?",13/Apr/09 07:56;jdonnerstag;fixed. Thanks,,,,,,,,,,,,,,,,,,,,,,
PageParameters construced with keyValuePairs does not handle array values,WICKET-2172,12417001,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,bradfritz,bradfritz,16/Mar/09 21:08,12/Apr/09 22:09,13/Mar/19 23:15,12/Apr/09 22:09,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"The PageParameters constructor that takes a ""keyValuePairs"" argument does
not convert repeated keys into an array of values.  For example:

{code}
// specify three comma delimited values for the ""a"" parameters
PageParameters parameters = new PageParameters(""a=1,a=2,a=3"");
String[] a = parameters.getStringArray(""a"");
assertEquals(3, a.length); // fails because a.length == 1
{code}

Issue first described on the user's list:
http://www.nabble.com/PageParameters-with-String-array-question-to22540294.html",,,,,,,,,,,,,,,,,,,16/Mar/09 21:12;bradfritz;PageParameters_String_array.patch;https://issues.apache.org/jira/secure/attachment/12402316/PageParameters_String_array.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-04-12 22:09:32.458,,,no_permission,,,,,,,,,,,203080,,,Sun Apr 12 22:09:32 UTC 2009,,,,,,0|i0ke5b:,117109,,,,,,,,"16/Mar/09 21:12;bradfritz;Patch with unit test and change to fix issue.  Other unit tests
continue to pass but I'm not familiar enough with the intended
behavior to know if there might be unintended consequences not exposed
by test coverage.
","12/Apr/09 22:09;jdonnerstag;In 1.4 using this constructor is actually depreciated

	 * 
	 * @deprecated Please use {@link RequestUtils#decodeParameters(String, ValueMap)} to decode a
	 *             request URL, or {@link ValueMap#ValueMap(String, String)} for other usecases.

But the same issue applies to ValueMap. Both have been fixed",,,,,,,,,,,,,,,,,,,,,,
WicketServlet fallback() code should ignore query string params when resolving resources.,WICKET-2185,12419206,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,drzewo,drzewo,23/Mar/09 10:49,12/Apr/09 20:05,13/Mar/19 23:15,12/Apr/09 20:05,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"When in servlet mode, after the request hasn't been serviced by the wicket flter, the WicketServlet's fallback(HttpServletRequest, HttpServletResponse) would try to open stream to resource from the servlet context. If the url isn't trimmed of the query string beforehand, the resource lookup will fail resulting in 404. It is common to pass parameters to static js this way. A suggested patch to follow shortly.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-12 20:05:30.508,,,no_permission,,,,,,,,,,,203093,,,Sun Apr 12 20:05:30 UTC 2009,,,,,,0|i0ke3b:,117100,,,,,,,,12/Apr/09 20:05;jdonnerstag;fixed. Thanks.,,,,,,,,,,,,,,,,,,,,,,,
setOutputMarkupContainerClassName() ... and wrong render mode in IE7,WICKET-2086,12414222,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,hell,hell,06/Feb/09 14:25,08/Apr/09 08:15,13/Mar/19 23:15,08/Apr/09 08:15,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"Hi,

I tried to use setOutputMarkupContainerClassName() and this decorator creates the comment before <!DOCTYPE/> and before tag <html/>.
This is problem because IE7 (may be IE6 too) recognize the document wrong (wrong render mode).

Quirks mode in IE 7 can also be triggered when coding HTML 4.01 documents. Inserting a comment before the DTD will trigger this backwards compatible mode in both IE 6 and IE 7.

---

<!-- Page Class com.cleverlance.vodafone.m2w.portal.web.core.HomePage -->

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:wicket=""http://wicket.sourceforge.net/"" xml:lang=""cs"" wicket:id=""html"" wicketpath=""html"">

---

Thx for fixing:-)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-08 08:15:36.624,,,no_permission,,,,,,,,,,,203000,,,Wed Apr 08 08:15:36 UTC 2009,,,,,,0|i0keef:,117150,,,,,,,,08/Apr/09 08:15;jdonnerstag;seems like it was fixed already. The additional comment on the Page class now goes to the very end of the generated markup.,,,,,,,,,,,,,,,,,,,,,,,
Fix API documentation for DataTable,WICKET-2183,12417405,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,pparson,pparson,20/Mar/09 17:38,07/Apr/09 14:08,13/Mar/19 23:15,07/Apr/09 14:08,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-extensions,,,,0,,,,,,,,"The example in the DataTable javadoc does not even compile. It says:

------------- snip ------------
 * DataTable table = new DataTable(&quot;datatable&quot;, columns, new UserProvider(), 10);
 * table.add(new NavigationToolbar(table));
 * table.add(new HeadersToolbar(table));
 * add(table);
------------- snip ------------


It should rather be:

------------- snip ------------
 * DataTable table = new DataTable(&quot;datatable&quot;, columns, new UserProvider(), 10);
 * table.addBottomToolbar(new NavigationToolbar(table));
 * table.addTopToolbar(new HeadersToolbar(table, null));
 * add(table);
------------- snip ------------",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-07 14:08:51.018,,,no_permission,,,,,,,,,,,203091,,,Tue Apr 07 14:08:51 UTC 2009,,,,,,0|i0ke3j:,117101,,,,,,,,07/Apr/09 14:08;jdonnerstag;applied thanks,,,,,,,,,,,,,,,,,,,,,,,
Generics for AjaxFallbackDefaultDataTable,WICKET-2189,12421479,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,thehappycoder,thehappycoder,28/Mar/09 16:00,29/Mar/09 16:38,13/Mar/19 23:15,29/Mar/09 16:38,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-extensions,,,,0,,,,,,,,Please make AjaxFallbackDefaultDataTable generic,,,,,,,,,,,WICKET-401,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203097,,,Sat Mar 28 16:03:16 UTC 2009,,,,,,0|i0ke2v:,117098,,,,,,,,"28/Mar/09 16:03;thehappycoder;List<IColumn<Player>> columns = new ArrayList<IColumn<Player>>();
DataTable<Player> dataTable = new AjaxFallbackDefaultDataTable<Player>(""playersDataTable"", columns, null, 10);

will not compile.

From the source I see that it expects List<IColumn<?>> columns.",,,,,,,,,,,,,,,,,,,,,,,
quickstart archetype adds invalid maven-compiler-plugin configuration,WICKET-2173,12417065,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,francisdb,francisdb,17/Mar/09 15:21,17/Mar/09 15:49,13/Mar/19 23:15,17/Mar/09 15:49,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-quickstart,,,,0,,,,,,,,"the maven-compiler-plugin  configuration created by the quickstart archetype contains an invalid tag: <optimise>
this should be <optimize>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<inherited>true</inherited>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					*<optimise>true</optimise>*
					<debug>true</debug>
				</configuration>
			</plugin>",any,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203081,,,2009-03-17 15:21:12.0,,,,,,0|i0ke53:,117108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultiFileUploadField.js can't find file input when serving pages as XHTML,WICKET-2096,12414490,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,sp,sp,10/Feb/09 14:15,10/Feb/09 17:07,13/Mar/19 23:15,10/Feb/09 17:07,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,"When Wicket-based application serves web pages as XHTML (with the 'Content-type:application/xhtml+xml' header), upload procedure using MultiFileUploadField.js won't work as it can't find file input even though it's properly added.
This happens because @line 65 of MultiFileUploadField.js input tag name is expected to be 'input' (capitalized), which in XHTML is actually 'input' (lowercase).",at least Mozilla Firefox,300,300,,0%,300,300,,,,,,,,,,,,10/Feb/09 14:17;sp;MultiFileUploadField.js;https://issues.apache.org/jira/secure/attachment/12399920/MultiFileUploadField.js,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203010,,,Tue Feb 10 14:17:44 UTC 2009,,,,,,0|i0kecn:,117142,,,,,,,,10/Feb/09 14:17;sp;Proposed version of corrected MultiFileUploadField.js,,,,,,,,,,,,,,,,,,,,,,,
Incorrect parameter name in SpringWebApplicationFactory's javadocs,WICKET-2094,12414463,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,drzewo,drzewo,10/Feb/09 08:45,10/Feb/09 16:48,13/Mar/19 23:15,10/Feb/09 16:48,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-spring,,,,0,,,,,,,,"The javadocs state that it is the parameter named ""beanName"" which value is taken into account when looking up spring managed application bean. It is wrong, according to the code it should say ""applicationBean"". Right now even if the wrong ""beanName"" parameter name is used applications tend to work because it is most common to use a single application class (bean in spring) and when the ""applicationBean"" init parameter is not provided, the factory falls back to the bean resolution based on the ancestor class.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203008,,,2009-02-10 08:45:58.0,,,,,,0|i0ked3:,117144,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reinjection fails after Server restart,WICKET-1403,12390544,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,javadoc,javadoc,08/Mar/08 19:54,10/Feb/09 16:16,13/Mar/19 23:15,02/Feb/09 08:05,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket-guice,,,,0,,,,,,,,"Please see attached testcase. 
Steps to reproduce: 
* start it with mvn resin:run, go to http://localhost:8080/example
* click a few times
* stop & restart 
* reload the page (everything fine here (means reload obviously succeeds)
* click again, you´ll face
{code}
Caused by: java.lang.NullPointerException: type
	at com.google.inject.util.Objects.nonNull(Objects.java:35)
	at com.google.inject.TypeLiteral.<init>(TypeLiteral.java:69)
	at com.google.inject.TypeLiteral$SimpleTypeLiteral.<init>(TypeLiteral.java:181)
	at com.google.inject.TypeLiteral.get(TypeLiteral.java:169)
	at org.apache.wicket.guice.GuiceProxyTargetLocator.locateProxyTarget(GuiceProxyTargetLocator.java:61)
	at org.apache.wicket.proxy.LazyInitProxyFactory$JdkHandler.invoke(LazyInitProxyFactory.java:412)
	at org.apache.wicket.proxy.$Proxy13.foo(Unknown Source)
	at org.codesmell.HomePage$1.onClick(HomePage.java:25)
	at org.apache.wicket.markup.html.link.Link.onLinkClicked(Link.java:214)
	... 21 more
{code}

GuiceProxyTargetLocator does not seem to be coded to cope with this. ","Resin 3.1.5 with persistent sessions enabled,
Apache Tomcat 6.0.16 with persistent sessions enabled ",,,,,,,,,,,,,,,,,,18/May/08 08:32;javadoc;GuiceProxyTargetLocator.java;https://issues.apache.org/jira/secure/attachment/12382259/GuiceProxyTargetLocator.java,18/May/08 10:17;javadoc;GuiceProxyTargetLocator_without_additional_dependency.java;https://issues.apache.org/jira/secure/attachment/12382261/GuiceProxyTargetLocator_without_additional_dependency.java,08/Mar/08 19:55;javadoc;example.zip;https://issues.apache.org/jira/secure/attachment/12377455/example.zip,,,,,,3.0,,,,,,,,,,,,,,,,,,,2008-03-24 23:41:43.252,,,no_permission,,,,,,,,,,,202375,,,Tue Feb 10 16:16:08 UTC 2009,,,,,,0|i0kg7z:,117445,,,,,,,,08/Mar/08 19:55;javadoc;minimum testcase to reproduce NPE,"24/Mar/08 23:41;almaw;Downgrading to minor, as this affects development on Resin only, seemingly. It's likely that this will get fixed magically by some other refactoring I'm doing for Guice support. Will keep you posted on that so you can test this again when that patch lands.","25/Mar/08 08:01;javadoc;This is not at all specific to Resin. I chose resin because i know how to enable persistent sessions there.
You can take a fresh downloaded tomcat 6.0.16, deploy the war there and see the exact same behavior (seems persistent sessions are enabled by default with tomcat 6.0.16)

It would be a tremendous step forward, if we could use persistent sessions in development (for turnaround time).","01/Apr/08 11:43;almaw;OK, I'll look into this one. Thanks for the test case - much appreciated.","18/May/08 08:32;javadoc;In the meantime, i found this little nasty hack to get the state serialized.

The Problem is, that java.lang.reflect.Type is not Serializable right now. The solution was to store it in the Application´s MetaData, which is of course lost when restarting the Application.

What i do here (see Attachment: GuiceProxyTargetLocator.java) is using XStream in order to 'serialize' the Type to XML, which then can be serialized normally, so that the MetaData-stuff can be dropped.

This is of course not a valid solution to the above problem, as it introduces a dependency to XStream, but it temporarily makes the roundtrip with guice possible.

To anyone using this hack: note that XStream does not necessarily behave consistently on any JVM:
http://xstream.codehaus.org/faq.html#Compatibility.
","18/May/08 10:17;javadoc;Thinking twice, we could get away without special serialization requirements for at least any Type extending Class....
This does not solve all cases, but might help some people already.

see GuiceProxyTargetLocator_without_additional_dependency.java",16/Jun/08 06:22;javadoc;is there any progress on this one?,"02/Feb/09 08:05;ivaynberg;removed typestore

guiceproxytargetlocator now keeps all the information necessary to resolve the type. should now work fine in the cluster as well.

the only interesting thing is that it keeps a ref to java.lang.Annotation which does not extend serializable yet no error is caused. i am guessing sun's annot impl is serializable. should possible fix this later.","10/Feb/09 07:28;tuomask;Igor: 

java.lang.annotation.Annotation is an interface.  the annotation stored is a java.lang.reflect.Proxy which implements Serializable.  

Br,
Tuomas

http://java.sun.com/j2se/1.5.0/docs/api/java/lang/annotation/Annotation.html
http://java.sun.com/j2se/1.5.0/docs/api/java/lang/reflect/Proxy.html",10/Feb/09 16:16;ivaynberg;thanks Tuomas!,,,,,,,,,,,,,,
ApacheLicenceHeaderTests fail after projects' metadata created by Eclipse,WICKET-2088,12414338,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,drzewo,drzewo,08/Feb/09 19:35,09/Feb/09 07:41,13/Mar/19 23:15,09/Feb/09 07:41,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,,,,,0,,,,,,,,"Wicket and all it's accompanying projects when being worked on in Eclipse tend to fail several ApacheLicenceHeaderTest as it is an IDE that creates .settings directory containing several  xml projects' metadata files. There are 6 solutions:
1. don't use eclipse
2. skip tests entirely (-Dmaven.test.skip=true passed on the CLI when invoking maven)
3. skip running the tests (-DskipTests)
4. compile & run but ignore tests failures (-Dmaven.test.failure.ignore=true)
5. Modify the ApacheLicenceHeaderTests so that the xml files in the .settings directories are ignored
IMHO, having considered all pros and cons, only 5. is a an option. As there already is an Eclipse originating .xml file that gets ignored I hope that you don't mind going this way. The patch to follow shortly.",,,,,,,,,,,,,,,,,,,08/Feb/09 19:37;drzewo;wicket-parent.patch;https://issues.apache.org/jira/secure/attachment/12399779/wicket-parent.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203002,,,Sun Feb 08 19:37:37 UTC 2009,,,,,,0|i0kedz:,117148,,,,,,,,08/Feb/09 19:37;drzewo;Adding .settings to the xmlIngore sets.,,,,,,,,,,,,,,,,,,,,,,,
typo in SpringBeanLocator.java,WICKET-2087,12414230,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,rossputin,rossputin,06/Feb/09 15:11,06/Feb/09 23:41,13/Mar/19 23:15,06/Feb/09 23:41,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket-spring,,,,0,,,,,,,,"package : org.apache.wicket.spring
Class : WebPage.java 

line 114 there is a typo. 

It currently reads : '... more then one bean of type...' 

It should read : '... more than one bean of type...'",any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203001,,,2009-02-06 15:11:03.0,,,,,,0|i0kee7:,117149,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Component Use Check always fails for visible components inside an invisible border body,WICKET-2079,12414079,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,ivaynberg,ivaynberg,05/Feb/09 07:27,05/Feb/09 08:01,13/Mar/19 23:15,05/Feb/09 08:01,1.3.5,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC3,,wicket,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202993,,,2009-02-05 07:27:44.0,,,,,,0|i0kef3:,117153,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KittenCaptcha filter declared twice in wicket-examples web.xml ,WICKET-2069,12413767,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,adouma,drzewo,drzewo,02/Feb/09 10:06,02/Feb/09 12:50,13/Mar/19 23:15,02/Feb/09 12:50,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-examples,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,02/Feb/09 10:08;drzewo;web.xml.patch;https://issues.apache.org/jira/secure/attachment/12399263/web.xml.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-02-02 12:48:09.302,,,no_permission,,,,,,,,,,,202983,,,Mon Feb 02 12:50:23 UTC 2009,,,,,,0|i0kefz:,117157,,,,,,,,"02/Feb/09 12:48;adouma;My bad, I must have made a patch merge error for the web.xml
FYI: not only the filter itself, but also its mapping is declared twice.
I'll remove both duplicates shortly.",02/Feb/09 12:50;adouma;Fixed,,,,,,,,,,,,,,,,,,,,,,
"onclick is null or not an object in IE6, IE7; Form.appendDefaultButtonField",WICKET-1605,12395710,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,tinl,tinl,09/May/08 13:09,01/Feb/09 22:25,13/Mar/19 23:15,01/Feb/09 22:25,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"JavaScript error when radio button has focus and return key is pressed:

IE6 and IE7 report a script error (""'onclick' is null or not an object""), which IMHO may be fixed in method

- protected void  org.apache.wicket.markup.html.form.Form.appendDefaultButtonField(final MarkupStream markupStream, final ComponentTag openTag)

on line: 

buffer.append(""'); if (typeof(b.onclick) != 'undefined') {  var r = b.onclick.bind(b)(); if (r != false) b.click(); } else { b.click(); };  return false;\"" "");

It works for me replacing this line by:

buffer.append(""'); if ((b.onclick != null) && (typeof(b.onclick) != 'undefined')) {  var r = b.onclick.bind(b)(); if (r != false) b.click(); } else { b.click(); };  return false;\"" "");
","Windows XP Professional, glassfish, Internet Explorer 6 and Internet Explorer 7",900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-10 15:44:30.015,,,no_permission,,,,,,,,,,,202562,,,Wed Jun 11 09:14:26 UTC 2008,,,,,,0|i0kfpb:,117361,,,,,,,,10/May/08 15:44;jcompagner;can you take a look at this gerolf?,"11/May/08 22:16;seitz;the generated javascript in appendDefaultButtonField depends on wicket-ajax, but does not automatically include it in the page.
also, the defaultSubmittingComponent has to call setOutputMarkupId(true) to make it work. this is not documented and imho implementation detail.

what should we do about those issues?
1) wicket-ajax.js dependency:
Wicket.$ -> document.getElementById
.bind -> yet another definition of the bind method? :/

2) automatically call setOutputMarkupId(true) for the defaultSubmittingComponent in the method setDefaultSubmittingComponent

wdyt?","12/May/08 22:08;seitz;Martin, I tried a couple of settings but somehow i could not reproduce the error.
can you provide a quickstart for this? thx.","11/Jun/08 02:00;zonathen;This is definitely an issue that happens any time setDefaultButton() is used.  I get the exact same message when we have multiple submits on a form. and use this function  You don't have to focus on a radio button per se, just any text input or similar form element will work and then hit the enter key.  Currently this breaks the setdefaultbutton functionality in IE6 so I'd say it's pretty important.

Also, the appendDefaultButtonField function is setting an invalid XHTML attribute (autocomplete=""false"") for the hidden text input.  Is the autocomplete attribute even necessary in a hidden input field anyway?  I say remove it if not.

Martin, how did you implement your fix?  Did you rewrite the form class because if I set the onclick using javascript IE simply ignores it.  I would love to know a workaround for this otherwise we will have to strip every setDefaultButton() call from our app due to the above problems.

Please help!

","11/Jun/08 09:14;tinl;Without any deep understanding of the source code, I just modified the code of the method org.apache.wicket.markup.html.form.Form.appendDefaultButtonField() as mentioned in the initial description. I cannot see any side effects for my specific project at the moment (I'm tacked to IE6/Win2K and it has to work there). To serve a broader range of browsers, my quick fix may not be appropriate.",,,,,,,,,,,,,,,,,,,
Using an AjaxSubmitLink outside of a Form does not set the form property,WICKET-1855,12405611,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pprooi,pprooi,02/Oct/08 06:49,01/Feb/09 21:26,13/Mar/19 23:15,31/Jan/09 21:48,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,1,,,,,,,,"When constructing an AjaxSubmitLink outside of a form using the constructor:

public AjaxSubmitLink(String id, final Form form)

The form argument is not set in the link. This prevents the form from seeing the link as its submitting component, which in turn means that using thing like enableDefaultFormProcessing() on the link don't work.

Changing the constructor of AjaxSubmitLink to:

public AjaxSubmitLink(String id, final Form form)
{
  super(id, form)  /* was: super(id) */
  ...
}

will probably fix the problem.

A temporary workaround is to implement a getForm() method in the subclass of the submit link which answers the form of the link
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-24 06:28:28.18,,,no_permission,,,,,,,,,,,202783,,,Sat Jan 24 06:43:01 UTC 2009,,,,,,0|i0kf2n:,117259,,,,,,,,"24/Jan/09 06:28;markwpiper;Confirmed as still a bug in 1.4-RC1
","24/Jan/09 06:43;pprooi;﻿Ik ben afwezig van 15 januari t/m 23 januari

Mvg,

Pieter van Prooijen   



 

Ir. P. van Prooijen

Consultant

GSM: +31 (0)6 28 82 82 12

 	

 


Daidalos BV

Source of Innovation

Hoekeindsehof 1-4

2665  JZ  Bleiswijk

Tel.: +31 (0) 10 850 1200

Fax: +31 (0) 10 850 1199

[1]www.daidalos.nl

KvK 27164984	




De informatie - verzonden in of met dit emailbericht - is afkomstig van Daidalos BV en is uitsluitend bestemd voor de geadresseerde. Indien u dit bericht onbedoeld hebt ontvangen, verzoeken wij u het te verwijderen. Aan dit bericht kunnen geen rechten worden ontleend.

 

 
----------------------------------------------------------------------------------------
[1] http://www.daidalos.nl/
----------------------------------------------------------------------------------------
[1] http://www.daidalos.nl/
",,,,,,,,,,,,,,,,,,,,,,
Bad javadoc for Request.getRelativePathPrefix* methods,WICKET-1961,12409375,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,aditsu,aditsu,27/Nov/08 05:57,01/Feb/09 19:04,13/Mar/19 23:15,01/Feb/09 19:04,1.4-M3,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"In org.apache.wicket.Request, both getRelativePathPrefixToContextRoot and getRelativePathPrefixToWicketHandler use the exact same example in the javadoc comments. At least one of them must be wrong.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202882,,,2008-11-27 05:57:30.0,,,,,,0|i0kerr:,117210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Should adding AJAX behaviour to a page make it stateful? ,WICKET-2037,12412945,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jweekend,jweekend,21/Jan/09 21:38,01/Feb/09 18:32,13/Mar/19 23:15,01/Feb/09 18:32,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"For full history see http://www.nabble.com/Using-AbstractDefaultAjaxBehavior-on-a-Bookmarkable-page--td21562119.html

Igor,

I've had a look at Wayne's quickstart.

The problem he hit is that if a page, P,  with a no-args constructor (ie P is ""bookmarkable"") has an AJAX behaviour added to it and P is arrived at via a BookmarkablePageLink on some other page, then Wicket can't find that P instance in the session to handle any callbacks and delivers the infamous ""Page Expired"" page. If you add the same AJAX behaviour to a label on P, then the callback works.

If you change the BookmarkablePageLink to a PageLink things work as expected.

It's almost as if, when the the page is created due to a click on a BookmarkableLink, Wicket is deciding it only needs to consider the page stateful if it contains components that have callbacks/ajax-bahaviours, but if there are none, it doesn't bother checking the page object itself for such callbacks. Is that what you'd expect?

The result is the same with both 1.3.5 and 1.4-rc1.

See the attached quickstart which is the simplest example I could make to demonstrate what Wayne sent me.

Regards - Cemal
http://www.jWeekend.co.uk ",Any,,,,,,,,,,,,,,,,,,21/Jan/09 21:39;jweekend;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12398429/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202951,,,2009-01-21 21:38:28.0,,,,,,0|i0kejr:,117174,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HtmlProblemFinder documentation bug,WICKET-2048,12413248,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,medavid,medavid,26/Jan/09 12:28,01/Feb/09 17:12,13/Mar/19 23:15,01/Feb/09 17:12,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"In the javadoc of HtmlProblemFinder there is an example how to add additional IMarkupFIlters using Application.getAdditionalMarkupHandler(), this method is no longer available in Wicket 1.3, the documentation should be modified to show a valid example. The only way I can find by setting a new MarkupParserFactory which adds the filter.",Doesn't matter,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202962,,,Sun Feb 01 10:32:34 UTC 2009,,,,,,0|i0keif:,117168,,,,,,,,"01/Feb/09 10:32;medavid;Minor minor issue, but the newMarkupParser parsing is missing it's return statement",,,,,,,,,,,,,,,,,,,,,,,
Method called unnecessarily in FormComponent,WICKET-1995,12411349,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,bht@actrix.gen.nz,bht@actrix.gen.nz,26/Dec/08 21:33,01/Feb/09 03:30,13/Mar/19 23:15,01/Feb/09 03:30,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"In class FormComponent, in method validate(), isValid() is called too many times.

The last call can be removed by refactoring as follows:

Original 1.4 code:

	public void validate()
	{
		validateRequired();
		if (isValid())
		{
			convertInput();

			if (isValid() && isRequired() && getConvertedInput() == null && isInputNullable())
			{
				reportRequiredError();
			}

			if (isValid())
			{
				validateValidators();
			}
		}
	}


Refactored:

	public void validate()
	{
		validateRequired();
		if (isValid())
		{
			convertInput();

			if(isValid())
			{
				// Check again because we think that convertInput() can set
				// input to null after validateRequired() found valid input.
				// When can convertInput() set input to null again?
				if (isRequired() && getConvertedInput() == null && isInputNullable())
				{
					reportRequiredError();
				}
				else
				{
					validateValidators();
				}
			}
		}
	}
",all,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-02-01 03:30:53.467,,,no_permission,,,,,,,,,,,202912,,,Sun Feb 01 03:30:53 UTC 2009,,,,,,0|i0kep3:,117198,,,,,,,,"01/Feb/09 03:30;ivaynberg;thanks, in the future it is preferrable to provide code changes via patches.",,,,,,,,,,,,,,,,,,,,,,,
Unusual ClassCastException (SimpleAttributeModifier to IBehaviorListener) processing onError.,WICKET-1483,12393207,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mmunoz,mmunoz,05/Apr/08 01:14,01/Feb/09 00:22,13/Mar/19 23:15,01/Feb/09 00:22,1.3.0-final,1.3.1,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"Build the application from the four class files and one html file below. Run class Start as an application. Go to your browser, to this URL:

http://localhost:4280/behaviorbug/

Type some text into the text field. After six characters, it will throw a ClassCastException.

Source:

package com.bugs.behaviorBug;

import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;
import org.apache.wicket.behavior.SimpleAttributeModifier;
import org.apache.wicket.markup.html.form.TextField;
import org.apache.wicket.model.IModel;

public class BehaviorBug extends TextField {

  public BehaviorBug(String id, IModel model) {
    super( id, model );
    init();
  }

  private int kc = 0;
  private int cc = 0;
  private final SimpleAttributeModifier blackBorder = new SimpleAttributeModifier(
      ""border-color"", ""black"" );
  private final SimpleAttributeModifier redBorder = new SimpleAttributeModifier(
      ""border-color"", ""red"" );
  private SimpleAttributeModifier currentBorder = null;

  private void init() {
    setBorder( this.blackBorder );
    AjaxFormComponentUpdatingBehavior changeWarningBehavior = new AjaxFormComponentUpdatingBehavior(
        ""onchange"" ) {

      @Override
      protected void onUpdate(AjaxRequestTarget target) {
        System.err.println( ""WarningTextField onUpdate onChange ""
            + BehaviorBug.this.cc++ );
        reColor();
      }

    };

    // I'm trying to do something tricky here. I want it to validate after every
    // keystroke, so the user can get instant feedback on when the data is good.
    AjaxFormComponentUpdatingBehavior keyUpWarningBehavior = new AjaxFormComponentUpdatingBehavior(
        ""onkeyup"" ) {

      @Override
      protected void onUpdate(AjaxRequestTarget target) {
        System.err.println( ""WarningTextField onUpdate onKeyUp ""
            + BehaviorBug.this.kc++ );
        reColor();
        // Thread.dumpStack();
      }

      // The implementation of AjaxFormComponentUpdatingBehavior only calls
      // onUpdate
      // when the field is valid. Since it won't update when the field is
      // invalid, I
      // can't get my instant feedback unless I call onUpdate() when there's an
      // error.
      // Since I can't override onEvent() (It's final), I override onError to
      // force
      // an update even when the field is invalid. This should be safe, since
      // onError()
      // is only called on invalid data with a null exception, in which case it
      // does
      // nothing.
      // This, however, seems to be what causes the bug. I have no idea why this
      // would cause the bug.
      @Override
      protected void onError(AjaxRequestTarget target, RuntimeException e) {
        // Called on validation error with a null e.
        super.onError( target, e ); // Throws e, if it's not null. Does nothing
                                    // otherwise.
        onUpdate( target );
      }

    };
    add( changeWarningBehavior );
    add( keyUpWarningBehavior );
  }

  private void reColor() {
    if ( isValid() ) {
      setBorder( BehaviorBug.this.blackBorder );
    } else {
      setBorder( BehaviorBug.this.redBorder );
    }
  }

  private void setBorder(SimpleAttributeModifier border) {
    if ( this.currentBorder != null && this.currentBorder != border ) {
      remove( this.currentBorder );
    }
    this.currentBorder = border;
    add( this.currentBorder );
  }
}

package com.bugs.behaviorBug;

import org.apache.wicket.Application;
import org.apache.wicket.Page;
import org.apache.wicket.Request;
import org.apache.wicket.Response;
import org.apache.wicket.Session;
import org.apache.wicket.protocol.http.WebApplication;
import org.apache.wicket.protocol.http.WebSession;

/**
 * 
 * @author Miguel Muñoz
 * @version $Id$
 * 
 */
public class BehaviorBugApplication extends WebApplication {

  /**
   * Constructor
   */
  public BehaviorBugApplication() {
    // empty
  }

  @Override
  protected void init() {
    // empty
  }

  @Override
  public Class<? extends Page> getHomePage() {
    return Index.class;
  }

  /*
   * (non-Javadoc)
   * 
   * @see org.apache.wicket.protocol.http.WebApplication#newSession(org.apache.wicket.Request,
   *      org.apache.wicket.Response)
   */
  @Override
  public Session newSession(Request request, Response response) {
    return new BugSession( this, request );
  }
  
  public class BugSession extends WebSession {
    public BugSession(Application application, Request request) {
      super(request);
      setApplication( application );
    }
  }
}

package com.bugs.behaviorBug;

import org.apache.wicket.markup.html.WebPage;
import org.apache.wicket.markup.html.form.Form;
import org.apache.wicket.markup.html.form.TextField;
import org.apache.wicket.model.Model;
import org.apache.wicket.validation.IValidator;
import org.apache.wicket.validation.validator.StringValidator;

/**
 * 
 * @author Miguel Muñoz
 * @version $Id$
 * 
 */
public class Index extends WebPage {

  /**
   * 
   */
  public Index() {
    Form form = new Form(""form"");
    TextField textField = new BehaviorBug(""testfield"", new Model());
    IValidator lengthValidator = new StringValidator.MaximumLengthValidator(4);
    textField.add( lengthValidator );
    form.add( textField );
    add(form);
  }
  
}

package com.bugs.behaviorBug;

import org.mortbay.jetty.Connector;
import org.mortbay.jetty.Server;
import org.mortbay.jetty.nio.SelectChannelConnector;
import org.mortbay.jetty.webapp.WebAppContext;

/**
 * 
 * @author Miguel Muñoz
 * @version $Id$
 * 
 */
public class Start {
  private static final int defaultPort = 4280;
  /**
   * 
   * @param args
   */
  public static void main(String[] args) {
    int port = defaultPort;
    if (args.length != 0) {
      try {
        port = Integer.valueOf( args[0] );
      } catch ( NumberFormatException e ) {
        System.err.println(""Unable to parse port parameter \"""" + args[0] + ""\"" as an integer."");
        System.err.println(""Using default value of x "" + defaultPort);
      }
    }
    Server server = new Server();
    SelectChannelConnector connector = new SelectChannelConnector();
    connector.setPort( port );
    server.setConnectors( new Connector[] { connector } );

    WebAppContext web = new WebAppContext();
//    web.setContextPath( ""/workspace/WicketTutorial"" );
    web.setContextPath( ""/behaviorbug"" );
    System.out.println( ""CP: "" + web.getContextPath() );
    web.setWar( ""src/main/webapp"" + port );
    server.addHandler( web );
    
    try {
      server.start(); // Who was the bozo who declared this to throw Exception?
      server.join();
    } catch ( Exception e ) {
      e.printStackTrace();
      System.exit( 1 );
    }
  }
}

<html>
<head>
<title>Behavior Bug</title>
<link href=""style.css"" rel=""stylesheet"" />
</head>
<body>
<div id=""container"">
	<div id=""header"">Behavior Bug</div>
	<div id=""content"">
		Type some text into the field below. After six characters, you'll get a stack trace.
		<form wicket:id=""form"">
			<input type=""text"" wicket:id=""testfield"" name=""txt"" width=""35"" size=""25"" /><p>
			submit: <input type=""submit"" value=""That's all, Folks!""/></p>
		</form>
		End of form.
	</div>
</div>
Test of Build Process.
</body>
</html>",Microsoft Windows XP [Version 5.1.2600] (Server & Client),7200,7200,,0%,7200,7200,,,,,,,,,,,,31/Jan/09 22:58;ivaynberg;wicket.behavior.patch;https://issues.apache.org/jira/secure/attachment/12399215/wicket.behavior.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-01-31 22:58:09.139,,,no_permission,,,,,,,,,,,202450,,,Sat Jan 31 22:58:09 UTC 2009,,,,,,0|i0kfzz:,117409,,,,,,,,31/Jan/09 22:58;ivaynberg;attaching patch that fixes the problem by leaving null entries in ibehavior[] to preserve indexes,,,,,,,,,,,,,,,,,,,,,,,
Missing redirects in AjaxPagingNavigationLink and AjaxPagingNavigationIncrementLink,WICKET-2038,12412984,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jonas,jonas,22/Jan/09 10:55,31/Jan/09 20:53,13/Mar/19 23:15,31/Jan/09 20:53,1.3.5,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,,,,,0,,,,,,,,"With Javascript enabled AjaxPagingNavigator work just fine and as expected,
but without Javascript it leaves an URLs
like ?wicket:interface=:3:cont1:nav:next:3:ILinkListener:: behind, because
of a missing redirect. 
This means, the comments in AjaxPagingNavigationLink#onClick and in
AjaxPagingNavigationIncrementLink#onClick seem to be incorrect, we DO need
to redirect to make sure the Ajax-Fallback works correctly.

Attached is a small example project that shows the effect as well as a workaround,
and a patch, which should be applicable both on 1.3.x and 1.4.x",,,,,,,,,,,,,,,,,,,22/Jan/09 10:57;jonas;wicket_2038.patch;https://issues.apache.org/jira/secure/attachment/12398460/wicket_2038.patch,22/Jan/09 10:56;jonas;wicket_2038_demo.zip;https://issues.apache.org/jira/secure/attachment/12398459/wicket_2038_demo.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202952,,,2009-01-22 10:55:31.0,,,,,,0|i0kejj:,117173,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -Wicket-autocomplete.js does not invoke invokePostCallHandlers() when input string is 0 lenght or null,WICKET-2032,12412903,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,fkleinko,fkleinko,21/Jan/09 13:50,27/Jan/09 16:10,13/Mar/19 23:15,24/Jan/09 20:54,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"when AutoCompleteTextField is reset to a 0 length input String (using backspace for exemple)  Wicket.Ajax.invokePostCallHandlers(); is not invoke. it is a problem cause Wicket.Ajax.registerPreCallHandler is called.

when these events are used to show ajax busy indicator for exemple, it stay on busy state.

i think that  
(solution 1) pre and post should be called on 0 input string length call  
or
(solution 2) pre and post should not be called (there is no ajax call after all)

but not pre called et not post.

for case 1 (pre and post, it can be fixed quickly in wicket-autocomplete.js   function doUpdateChoices(resp) 

adding 

if ((Wicket.Focus.getFocusedElement() != input) || !cfg.showListOnEmptyInput && (input.value==null || input.value=="""")) {
   			hideAutoComplete();
			Wicket.Ajax.invokePostCallHandlers();  // line to be added
   			return;
}

i don't have enought insight in wicket-ajax for proposing a fix for solution 2

thanx",ie6 or ff3,,,,,,,,,,WICKET-1944,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-24 20:54:28.989,,,no_permission,,,,,,,,,,,202947,,,Sat Jan 24 20:54:28 UTC 2009,,,,,,0|i0kek7:,117176,,,,,,,,"21/Jan/09 13:52;fkleinko;Also add call hideIndicator(). See example beneath

if ((Wicket.Focus.getFocusedElement() != input) || !cfg.showListOnEmptyInput && (input.value==null || input.value=="""")) { 
   	 hideAutoComplete(); 
        Wicket.Ajax.invokePostCallHandlers(); 
        hideIndicator(); //Line to be added also 
   	 return; 
} 
",24/Jan/09 20:54;jdonnerstag;thanks.,,,,,,,,,,,,,,,,,,,,,,
KittenCaptchaPanel generates a Ajax callback image url which potentially breaks when used in a Portlet   ,WICKET-2050,12413332,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,adouma,adouma,adouma,27/Jan/09 00:28,27/Jan/09 00:38,13/Mar/19 23:15,27/Jan/09 00:38,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"KittenCaptchaPanel generates the Ajax callback image url in its onclick event handler using:

	javascript.append(""Wicket.$('"" + image.getMarkupId() + ""').src = '"");
	javascript.append(image.urlFor(IResourceListener.INTERFACE));
	javascript.append(""&rand="" + Math.random());
	javascript.append(""'"");

Appending the rand parameter using ""&rand="" assumes the image url already contains (at least) one other parameter.
Within a default (plain website) environment this most likely is true, however in a Portlet this really depends on how the portal encodes the generated image url in the resulting PortletURL.
Jetspeed-2 for instance (can) encode this as path element, in which case appending ""&rand="" leads to an incorrect and invalid url.

For further information, please see WICKET-649 in which I described how I fixed similar cases in several other locations within Wicket.

I'll fix this issue likewise in a transparent way replacing the above with the following:

	javascript.append(""Wicket.$('"" + image.getMarkupId() + ""').src = '"");
	CharSequence url = image.urlFor(IResourceListener.INTERFACE);
	javascript.append(url);
	javascript.append((url.toString().indexOf('?') > -1 ? ""&amp;"" : ""?"") + ""rand="" + Math.random());
	javascript.append(""'"");


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202964,,,Tue Jan 27 00:38:32 UTC 2009,,,,,,0|i0kehz:,117166,,,,,,,,27/Jan/09 00:38;adouma;Fixed,,,,,,,,,,,,,,,,,,,,,,,
typo in WebPage.java,WICKET-2047,12413247,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,rossputin,rossputin,26/Jan/09 11:54,26/Jan/09 16:40,13/Mar/19 23:15,26/Jan/09 16:40,1.4-M1,1.4-M2,1.4-M3,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"package : org.apache.wicket.markup.html
Class : WebPage.java 

line 467 there is a typo.

It currently reads : '... but components where found which...'

It should read : '... but components were found which...'",any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202961,,,2009-01-26 11:54:30.0,,,,,,0|i0kein:,117169,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileUploadField.onDetach() causes IllegalStateException(),WICKET-2045,12413200,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,athomson,athomson,25/Jan/09 00:43,25/Jan/09 11:40,13/Mar/19 23:15,25/Jan/09 11:40,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"
This was detected when using the example/sample Upload demo locally.

ERROR - RequestCycle               - there was an error cleaning up target org.apache.wicket.request.target.component.listener.ListenerInterfaceRequestTarget@-20665159[Page class = org.apache.wicket.examples.upload.UploadPage, id = 0, version = 0]->simpleUpload->interface org.apache.wicket.markup.html.form.IFormSubmitListener.IFormSubmitListener (request paramaters: [RequestParameters  componentPath=0:simpleUpload pageMapName=null versionNumber=0 interfaceName=IFormSubmitListener componentId=null behaviorId=null urlDepth=-1 parameters={} onlyProcessIfPathActive=false]).
java.lang.IllegalStateException: Attempt to set model object on null model of component: simpleUpload:fileInput
	at org.apache.wicket.Component.setDefaultModelObject(Component.java:2962)
	at org.apache.wicket.markup.html.form.FormComponent.setModelObject(FormComponent.java:1652)
	at org.apache.wicket.markup.html.form.upload.FileUploadField.onDetach(FileUploadField.java:175)

Looking at the source indicates that unless onDetach() is over-ridden the default will always generate this exception. Here is the source for the FileUpLoadField.onDetach().  The line that creates the exception is noted by the ""<<<HERE"" in the snippet below.

FileUpLoadField.onDetach() snippet:

	/**
	 * Clean up at the end of the request. This means closing all inputstreams which might have been
	 * opened from the fileUpload.
	 * 
	 * @see org.apache.wicket.Component#onDetach()
	 */
	@Override
	protected void onDetach()
	{
		if (fileUpload != null && forceCloseStreamsOnDetach())
		{
			fileUpload.closeStreams();
			fileUpload = null;
			setModelObject(null);   <<<HERE
		}
		super.onDetach();
	}

Drilling further down, the setModelObject() calls FormComponent.setModelObject(), which in turns calls Component.setDefaultModelObject().  Inside setDefaultModelObject(), a check is done to see if the model object is null, if it is, it throws an exception:

	public final Component setDefaultModelObject(final Object object)
	{
		final IModel<Object> model = (IModel<Object>)getDefaultModel();

		// Check whether anything can be set at all
		if (model == null)
		{
			throw new IllegalStateException(
				""Attempt to set model object on null model of component: "" + getPageRelativePath());
		}
               ...
}



","Linux ubuntu 2.6.24-23-generic #1 SMP Thu Nov 27 18:13:46 UTC 2008 x86_64 GNU/Linux
java version ""1.6.0_07""
Java(TM) SE Runtime Environment (build 1.6.0_07-b06)
Java HotSpot(TM) 64-Bit Server VM (build 10.0-b23, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-25 11:40:39.502,,,no_permission,,,,,,,,,,,202959,,,Sun Jan 25 11:40:39 UTC 2009,,,,,,0|i0keiv:,117170,,,,,,,,25/Jan/09 11:40;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Fragment#getAssociatedMarkupStream() doesn't look for Parent in the proper way,WICKET-2039,12412989,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,moralesg,moralesg,22/Jan/09 13:11,24/Jan/09 09:02,13/Mar/19 23:15,24/Jan/09 09:02,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Fragment#getAssociatedMarkupStream, under certain conditions, decides to ask its parent for the AssociatedMarkupStream.

To do so, it uses the #getParent() method.

This is not always correct, because the Fragment's parent is not always a container with associated markup (for example, it could be a Form).

The problem can be easily fixed by using the #findParentWithAssociatedMarkup() method instead.

(See org.apache.wicket.markup.html.panel.Fragment.java, lines 344 and 346 in wicket 1.3.5)",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-24 09:02:05.79,,,no_permission,,,,,,,,,,,202953,,,Sat Jan 24 09:02:05 UTC 2009,,,,,,0|i0kejb:,117172,,,,,,,,24/Jan/09 09:02;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Wicket-autocomplete.js does not invoke invokePostCallHandlers() when input string is 0 lenght or null,WICKET-1944,12408896,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,lunatrix,lunatrix,20/Nov/08 10:20,21/Jan/09 13:50,13/Mar/19 23:15,29/Dec/08 20:46,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"when AutoCompleteTextField is reset to a 0 length input String (using backspace for exemple)  Wicket.Ajax.invokePostCallHandlers(); is not invoke. it is a problem cause Wicket.Ajax.registerPreCallHandler is called.

when these events are used to show ajax busy indicator for exemple, it stay on busy state.

i think that  
(solution 1) pre and post should be called on 0 input string length call  
or
(solution 2) pre and post should not be called (there is no ajax call after all)

but not pre called et not post.

for case 1 (pre and post, it can be fixed quickly in wicket-autocomplete.js   function doUpdateChoices(resp) 

adding 

if ((Wicket.Focus.getFocusedElement() != input) || !cfg.showListOnEmptyInput && (input.value==null || input.value=="""")) {
   			hideAutoComplete();
			Wicket.Ajax.invokePostCallHandlers();  // line to be added
   			return;
}

i don't have enought insight in wicket-ajax for proposing a fix for solution 2

thanx",ie6 or ff3,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-12-29 20:46:29.394,,,no_permission,,,,,,,,,,,202866,,,Mon Dec 29 20:46:29 UTC 2008,,,,,,0|i0ketz:,117220,,,,,,,,29/Dec/08 20:46;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Misleading example works despite error,WICKET-1621,12395841,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,fsilber,fsilber,12/May/08 14:41,02/Jan/09 10:39,13/Mar/19 23:15,02/Jan/09 10:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-examples,,,,0,,,,,,,,"The resolution to Wicket-1601 is that anytime a ListView is used in a Form and contains form components one should call #setReuseItems(true).  The JavaDoc for ListView indeed says this.

However, most people learn Wicket primarily by looking at the examples, and the RadioGroup component example creates a ListView that contains form components, but does not do this.  (When I followed the example it worked until I put two such RadioGroups on the same page.)",not applicable,,,,,,,,,,,,,,,,,,12/May/08 14:47;fsilber;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12381880/screenshot-1.jpg,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2009-01-02 10:39:23.116,,,no_permission,,,,,,,,,,,202578,,,Fri Jan 02 10:39:23 UTC 2009,,,,,,0|i0kfon:,117358,,,,,,,,"12/May/08 14:47;fsilber;Example should call ""persons.setReuseItems(true);"" as the ListView contains Form components.",02/Jan/09 10:39;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
Header contributions occur even though rendering is not allowed by authorization strategy,WICKET-1812,12403431,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,unomystez,unomystez,31/Aug/08 03:46,01/Jan/09 20:51,13/Mar/19 23:15,01/Jan/09 20:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,Components that are not allowed to render due to authorization restrictions still have their headers contributed.  As this doesn't affect the integrity of the application it could possibly result in security issues depending on the components involved.  For now a workaround is to explicitly set the component's visibility using setVisible() or overriding isVisible() which prevents the header contribution from occurring.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-01 20:51:58.778,,,no_permission,,,,,,,,,,,202743,,,Thu Jan 01 20:51:58 UTC 2009,,,,,,0|i0kf6f:,117276,,,,,,,,01/Jan/09 20:51;jdonnerstag;fixed. thanks,,,,,,,,,,,,,,,,,,,,,,,
Fixing JS error on autocomplete with preselect,WICKET-1980,12410718,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,fidlej,fidlej,15/Dec/08 16:31,29/Dec/08 16:23,13/Mar/19 23:15,29/Dec/08 16:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"There is a Javascript error when using the autocomplete text field with preselect. 
The error:
""element.firstChild is null""

The affected line is inside getSelectedValue():
 var attr=element.firstChild.childNodes[selected].attributes['textvalue'];

How to reproduce:
1) Type something into the autocomplete text field. The javascript will send an Ajax request.
2) Hit enter quickly. When you hit it before the Ajax response arrives, the error occurs.

It is because the preselect sets selected=0, before sending the Ajax request.
It should be kept to -1 until the response arrives.

I'm going to attach a short patch for this.","Firefox 3, Linux.
Wicket 1.3.4.",,,,,,,,,,,,,,,,,,15/Dec/08 16:32;fidlej;lazy_preselect.diff;https://issues.apache.org/jira/secure/attachment/12396102/lazy_preselect.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-12-29 16:23:20.516,,,no_permission,,,,,,,,,,,202899,,,Mon Dec 29 16:23:20 UTC 2008,,,,,,0|i0keqn:,117205,,,,,,,,15/Dec/08 16:32;fidlej;Patch against wicket SVN trunk.,29/Dec/08 16:23;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
SharedResourceRequestTarget logs ERRORs to the logfile on 404 (client errors),WICKET-1991,12411189,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,sebster,sebster,22/Dec/08 19:39,29/Dec/08 16:00,13/Mar/19 23:15,29/Dec/08 16:00,1.3.5,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,,,,,0,,,,,,,,"Client errors are not programming errors, nor fatal errors, nor errors realy at all on the server side. The server should just handle it as a normal occurrence (a resource is requested that does not exist, i.e., 404).

I agree that the current log statements are useful for development/debugging purposes, so I suggest to demote the log.error statements in the respond method to log.debug statements.

Patch is attached.",,,,,,,,,,,,,,,,,,,22/Dec/08 19:40;sebster;patch;https://issues.apache.org/jira/secure/attachment/12396624/patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-12-29 16:00:42.677,,,no_permission,,,,,,,,,,,202909,,,Mon Dec 29 16:00:42 UTC 2008,,,,,,0|i0kepr:,117201,,,,,,,,29/Dec/08 16:00;jdonnerstag;changed it to log.info,,,,,,,,,,,,,,,,,,,,,,,
Settings mounts as case insensitive causes 404 errors if case is included when mounting pages.,WICKET-1920,12408035,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,rollins,rollins,07/Nov/08 19:57,26/Nov/08 19:13,13/Mar/19 23:15,26/Nov/08 19:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"Settings mounts as case insensitive causes 404 errors if case is included when mounting pages.

Example:
public class MyApplication extends WebApplication {
   ...
   @Override
   protected IRequestCycleProcessor newRequestCycleProcessor() {
      return new WebRequestCycleProcessor() {
         @Override
         protected IRequestCodingStrategy newRequestCodingStrategy() {
            WebRequestCodingStrategy.Settings strategySettings = new WebRequestCodingStrategy.Settings();
            strategySettings.setMountsCaseSensitive(false);
            return new WebRequestCodingStrategy(strategySettings);
         }
      };
   }
   ...
   @Override
   public void init() {
   ...
   mountBookmarkablePage(""/mypage1"", MyPage1.class);  // works
   mountBookmarkablePage(""/myPage2"", MyPage2.class);  // causes 404
   ...
   }
}","Windows XP, Java 1.6, Wicket 1.4-SNAPSHOT revision 712226",,,,,,,,,,,,,,,,,,07/Nov/08 19:59;rollins;MountsBugTestCase.tar.bz2;https://issues.apache.org/jira/secure/attachment/12393527/MountsBugTestCase.tar.bz2,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,97571,,,Fri Nov 07 19:59:22 UTC 2008,,,,,,0|i0kewf:,117231,,,,,,,,07/Nov/08 19:59;rollins;QuickStart test case that reproduces this problem.,,,,,,,,,,,,,,,,,,,,,,,
Error about misplaced <wicket:head> very uninformative and incorrect,WICKET-1955,12409116,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,sebster,sebster,24/Nov/08 12:03,26/Nov/08 18:42,13/Mar/19 23:15,26/Nov/08 18:42,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"I got the exception below when I misplaced a <wicket:head> tag. There are two things wrong with it:

1) It does not tell me in which file I made the mistake.
2) I had put the <wicket:head> in a <wicket:extend> and not in a <wicket:panel> or <wicket:border>.


WicketMessage: Mis-placed <wicket:head>. <wicket:head> must be outside of <wicket:panel> and <wicket:border>

Root cause:

org.apache.wicket.markup.MarkupException: Mis-placed <wicket:head>. <wicket:head> must be outside of <wicket:panel> and <wicket:border>
at org.apache.wicket.markup.resolver.HtmlHeaderResolver.resolve(HtmlHeaderResolver.java:150)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1569)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1493)
at org.apache.wicket.Component.renderComponent(Component.java:2564)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1504)
at org.apache.wicket.Component.render(Component.java:2400)
at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:232)
at org.apache.wicket.markup.resolver.MarkupInheritanceResolver.resolve(MarkupInheritanceResolver.java:66)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1569)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1493)
at org.apache.wicket.Component.renderComponent(Component.java:2564)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1504)
at org.apache.wicket.Component.render(Component.java:2400)
at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:232)
at org.apache.wicket.markup.resolver.MarkupInheritanceResolver.resolve(MarkupInheritanceResolver.java:73)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1569)
at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1493)
at org.apache.wicket.markup.html.internal.HtmlHeaderContainer.onComponentTagBody(HtmlHeaderContainer.java:135)
at org.apache.wicket.Component.renderComponent(Component.java:2564)
at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1504)
at org.apache.wicket.Component.render(Component.java:2400)
at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:232)
at org.apache.wicket.markup.resolver.HtmlHeaderResolver.resolve(HtmlHeaderResolver.java:78)
at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)
at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1520)
at org.apache.wicket.Page.onRender(Page.java:1501)
at org.apache.wicket.Component.render(Component.java:2400)
at org.apache.wicket.Page.renderPage(Page.java:905)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:249)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:104)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1179)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1250)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1351)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:497)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:444)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:282)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202876,,,2008-11-24 12:03:02.0,,,,,,0|i0kesn:,117214,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChoiceFilteredPropertyColumn forces column type parameter and choice type parameter to be the same,WICKET-1939,12408683,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,dylans@xs4all.nl,dylans@xs4all.nl,17/Nov/08 21:00,19/Nov/08 21:05,13/Mar/19 23:15,19/Nov/08 21:05,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"ChoiceFilteredPropertyColumn takes one type parameter T this is also the type used in the filterChoices constructor parameter.

since DefaultDataTable expects an array of IColumn<T> it is impossible to pass in a ChoiceFilteredPropertyColumn for a column type that is not itself T

i.e.

constructing a DefaultDataTable<Record>(....) expects all columns to be of type IColumn<Record>, and because of this, the list of choices in ChoiceFilteredPropertyColumn is of type IModel<List<? extends Record>

non-compiling example:

public class HomePage extends WebPage {

	private static final long serialVersionUID = 1L;

	/**
	 * Constructor that is invoked when page is invoked without a session.
	 * 
	 * @param parameters
	 *            Page parameters
	 */
	public HomePage(final PageParameters parameters) {
		final List<Record> records = new ArrayList<Record>();
		for (int i = 0; i < 100; i++)
			records.add(new Record(i));
		List<IColumn<Record>> columns = new ArrayList<IColumn<Record>>();
		columns.add(new PropertyColumn<Record>(new Model<String>(""Choice""), ""choice""));
		IModel<List<String>> choiceModel = new AbstractReadOnlyModel<List<String>>() {

			public List<String> getObject() {
				return Arrays.asList(""Choice 0"", ""Choice 1"", ""Choice 2"");
			}
		};
		// WON'T COMPILE, since it expects IModel<List<? extends Record>
		// NOTE: a workaround is to declare the table as DefaultDataTable<?>
		// in that case it's possible to mix the different model types
		columns.add(new ChoiceFilteredPropertyColumn<Record>(new Model<String>(""Choice 3""), ""choice3"", choiceModel));
		DefaultDataTable<Record> dataTable = new DefaultDataTable<Record>(""dataTable"", columns,
				new SortableListDataProvider<Record>(records), 20);
		add(dataTable);
	}

	public static class Record implements Serializable {

		public String choice;

		public Record(int id) {
			this.choice = ""Choice +"" + (id % 3);
		}
	}

	public static class SortableListDataProvider<T extends Serializable> extends ListDataProvider<T> implements
			ISortableDataProvider<T> {

		public SortableListDataProvider(List<T> list) {
			super(list);
		}

		public ISortState getSortState() {
			return null;
		}

		public void setSortState(ISortState state) {
		}
	}
}
",,,,,,,,,,,,,,,,,,,19/Nov/08 20:13;dylans@xs4all.nl;ChoiceFilteredPropertyColumn.diff;https://issues.apache.org/jira/secure/attachment/12394278/ChoiceFilteredPropertyColumn.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202862,,,Wed Nov 19 20:13:06 UTC 2008,,,,,,0|i0keu7:,117221,,,,,,,,"19/Nov/08 20:13;dylans@xs4all.nl;these changes to ChoiceFilteredPropertyColumn seem to do the trick for me ( seperate type parameters column, and the filter choices )",,,,,,,,,,,,,,,,,,,,,,,
AutocompleteTextField throws javascript error Object Required,WICKET-1906,12407530,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,shellverma,shellverma,30/Oct/08 15:46,07/Nov/08 07:21,13/Mar/19 23:15,07/Nov/08 07:21,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket-extensions,,,,0,,,,,,,,"In wicket-autocomplete.js ""function doUpdateChoices(resp)"" has the check <BR>
Line 304:                  if(element.firstChild && element.firstChild.childNodes) <BR>
<BR>
However in function render() we are not having any checks <BR>
Line 389:	var node=menu.firstChild.childNodes[0]; <BR>
<BR>
which is causing ""Object required"" error on Line 389.
",IE6,86400,86400,,0%,86400,86400,,,,,,,,,,,,30/Oct/08 15:48;shellverma;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12393067/screenshot-1.jpg,06/Nov/08 23:41;pete;wicket-1906.patch;https://issues.apache.org/jira/secure/attachment/12393473/wicket-1906.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2008-11-06 23:41:47.986,,,no_permission,,,,,,,,,,,202832,,,Fri Nov 07 07:21:55 UTC 2008,,,,,,0|i0key7:,117239,,,,,,,,"06/Nov/08 23:41;pete;Ok, Igor, I really was bored so here's the patch ... :-)

I double-checked in Firefox and everything seems alright.","07/Nov/08 07:21;ivaynberg;peter, awesome, thanks!",,,,,,,,,,,,,,,,,,,,,,
wicket:message sometimes broken,WICKET-1915,12407924,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pills,pills,06/Nov/08 08:25,07/Nov/08 06:47,13/Mar/19 23:15,07/Nov/08 06:47,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"The behavior described here: http://cwiki.apache.org/WICKET/wickets-xhtml-tags.html (use wicket:message as attribute) sometimes doesn't work, depending on the hierarchy and the tag where it applies.

I've reproduced it using a repeater and applying wicket:message it to a <td> tag.

Instead of correctly modifying the attribute, it throws the usual MarkupException ""WicketMessage: Unable to find component with id 'label' in [MarkupContainer""","Wicket 1.3.5, tomcat 5.5, but should have the same behavior with any container",,,,,,,,,,,,,,,,,,06/Nov/08 08:32;pills;WicketMessage.zip;https://issues.apache.org/jira/secure/attachment/12393428/WicketMessage.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-11-07 06:47:05.787,,,no_permission,,,,,,,,,,,202840,,,Fri Nov 07 06:47:05 UTC 2008,,,,,,0|i0kex3:,117234,,,,,,,,06/Nov/08 08:32;pills;QuickStart eclipse project that shows the problem,"07/Nov/08 06:47;ivaynberg;this had nothing to do with repeaters. as i explained on the list we do not support using wicket:message on raw markup and then embedding components inside - which is exactly what the example did:

td was the raw markup (no wicket:id) with wicket:message and nested inside was a label component.

anyways, we now support the usecase so it should work",,,,,,,,,,,,,,,,,,,,,,
Palette.onBeforeRender() throws IllegalArgumentException in cases when Palette is invisible.,WICKET-1890,12407123,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jvaudry,jvaudry,23/Oct/08 21:58,05/Nov/08 08:14,13/Mar/19 23:15,05/Nov/08 08:14,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"Palette.onBeforeRender() conditionally adds components in initFactories() based on the ""FLAG_HAS_BEEN_RENDERED"". 

This is incorrect logic and it results in IllegalArgumentException at times. Instead it should check ""FLAG_PREPARED_FOR_RENDER"". The difference is that ""FLAG_PREPARED_FOR_RENDER"" will be true the *first time* onBeforeRender() is called, and no longer after that, which is what was intended. That is not the case for ""FLAG_HAS_BEEN_RENDERED"", which can be true the first time onBeforeRender() is called and may continue to be true on successive calls in the case when the Palette is invisible/hidden.

This is the opposite of http://issues.apache.org/jira/browse/WICKET-1275. In that bug, invisible palette components were not added, now in this bug, invisible palette components are added more than once. Both bugs deal with invisible palette.

Workaround:
--------------------------------
Subclass Palette.java and override onBeforeRender() as shown:

    protected void onBeforeRender() {
        super.onBeforeRender();
        setFlag(0x1000, true);   // Force set FLAG_HAS_BEEN_RENDERED
   }

Suggested fix:
--------------------------------

In Palette.java, change the onBeforeRender():


Before:
	protected void onBeforeRender()
	{
		if (!hasBeenRendered()) // change this
		{
			initFactories();
		}
		super.onBeforeRender();
	}


After:
	protected void onBeforeRender()
	{
		if (!getFlag(FLAG_PREPARED_FOR_RENDER))
		{
			initFactories();
		}
		super.onBeforeRender();
	}",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202816,,,2008-10-23 21:58:12.0,,,,,,0|i0kezz:,117247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MinimumLengthValidator throws NullPointerException,WICKET-1870,12406328,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mcystems,mcystems,13/Oct/08 19:51,13/Oct/08 20:18,13/Mar/19 23:15,13/Oct/08 20:18,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,MinimumLengthValidator.onValidate and MinimumLengthValidator.variablesMap throws NullPointerException when validateOnNullValue returns true.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202797,,,2008-10-13 19:51:30.0,,,,,,0|i0kf13:,117252,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Converters : final vs non final,WICKET-1180,12383055,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ehillenius,sbailliez,sbailliez,22/Nov/07 11:39,08/Oct/08 22:36,13/Mar/19 23:15,08/Oct/08 22:36,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,1,,,,,,,,"
I can understand the reason not to put anything extensible but then there is a consistency problem as in the converters:

all converters are final except: DateConverter, SqlDateConverter, SqlTimeConverter, SqlTimestampConverter

which then makes you wonder why the rest is actually final, DateConverter is obviously not final to support inherirtance by the sql* converter, so if we wanted to restrict it, the base class should have been abstract and the other final, but it really does not protect  any significant api changes from the client as the code is not so complex that it deserves to do so

For instance I wanted to subclass ZeroPaddingConverter to work around the null support and I realize it's final, so I  basically end up copying the whole code.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-22 21:12:06.759,,,no_permission,,,,,,,,,,,202176,,,Sun Jul 06 13:05:15 UTC 2008,,,,,,0|i0kgtr:,117543,,,,,,,,"22/Nov/07 21:12;ehillenius;Yeah, I think this came from habit and different people working on it. I don't think I would mind removing final from most if not all converters.",11/Dec/07 05:33;ivaynberg;go eelco go!,23/Mar/08 13:10;jcompagner;i would try to those these simple api changes for 1.4,06/Jul/08 13:05;dashorst;Moved to next milestone release.,,,,,,,,,,,,,,,,,,,,
appendToInit() method is not called in class DatePicker,WICKET-1425,12391526,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ehillenius,skoch,skoch,15/Mar/08 09:44,08/Oct/08 22:29,13/Mar/19 23:15,08/Oct/08 22:29,1.3.1,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket-datetime,,,,0,,,,,,,,"appendToInit method can be overridden in subclasses to facilitate extension of the DatePicker component. 
The method is currently not called in class DatePicker, so overriding the method in subclasses would have no effect.

It should be called somewhere in renderHead() I suppose.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-10-05 20:12:20.839,,,no_permission,,,,,,,,,,,202395,,,Wed Oct 08 22:29:31 UTC 2008,,,,,,0|i0kg5r:,117435,,,,,,,,05/Oct/08 20:12;jcompagner;eelco can you check out that method that doesnt seem to do anything that it supposed to be doing?,"08/Oct/08 22:19;ehillenius;hmmm. unfortunately, that's been broken for a veeeeery long time; since rev 533781 of april 2007.

The replacement for this is getAdditionalJavascript.","08/Oct/08 22:29;ehillenius;deprecated the method for 1.3 and removed in trunk. Choose this because it has been broken for such a long time, and a good-enough replacement seems to be available in the form of 'getAdditionalJavascript'.",,,,,,,,,,,,,,,,,,,,,
NumberFormatException with UrlCompressingWebRequestProcessor in WicketTester,WICKET-861,12376345,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mindhaq,mindhaq,18/Aug/07 16:05,27/Sep/08 08:33,13/Mar/19 23:15,27/Sep/08 08:33,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"In my Application I use UrlCompressingWebRequestProcessor. Now I have a JUnit test case with WicketTester and that Application like this:

tester.startPage(new ITestPageSource() {
	public Page getTestPage() {
		PageParameters params = new PageParameters();
		params.add(""0"", ""param"");
		return new MyPage(params);
	}
});

I get an Exception:

java.lang.NumberFormatException: For input string: ""testPage""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:447)
	at java.lang.Integer.parseInt(Integer.java:497)
	at org.apache.wicket.protocol.http.request.urlcompressing.UrlCompressor.getComponentAndInterfaceForUID(UrlCompressor.java:124)
	at org.apache.wicket.protocol.http.request.urlcompressing.UrlCompressingWebRequestProcessor.resolveListenerInterfaceTarget(UrlCompressingWebRequestProcessor.java:81)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.resolveRenderedPage(AbstractRequestCycleProcessor.java:440)
	at org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:139)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1091)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1177)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:500)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:381)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:368)
	at org.apache.wicket.util.tester.BaseWicketTester.executeListener(BaseWicketTester.java:239)
	at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:224)

I could work around this by using WebRequestCycleProcessor for my testing-application.","Wicket 1.3.0 from Trunk
JDK 6",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:15.347,,,no_permission,,,,,,,,,,,201884,,,Sun Dec 02 10:50:50 UTC 2007,,,,,,0|i0khof:,117681,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",14/Nov/07 15:55;jcompagner;do you have a complete unit test case for us?,02/Dec/07 10:50;jdonnerstag;please see UrlCompressingWebRequestProcessorTest ,,,,,,,,,,,,,,,,,,,,,
form action URLs in non-Wicket forms not rewritten,WICKET-1754,12400698,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,bradfritz,bradfritz,21/Jul/08 22:36,27/Sep/08 05:20,13/Mar/19 23:15,27/Sep/08 05:20,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"Wicket's RelativePathPrefixHandler rewrites ""href"", ""src"", and ""background""
URLs in non-Wicket markup but does not rewrite ""action"" URLs in forms.

There are workarounds but it would be cleaner if Wicket handled this case
by default.

Discussion at:
http://www.nabble.com/RelativePathPrefixHandler-and-form-""action""-attributes-tt18537680.html
http://www.nabble.com/RelativePathPrefixHandler-and-form-""action""-attributes-tt18536692.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-27 05:20:10.444,,,no_permission,,,,,,,,,,,202693,,,Sat Sep 27 05:20:10 UTC 2008,,,,,,0|i0kfbj:,117299,,,,,,,,"27/Sep/08 05:20;ivaynberg;fixing in 1.4 only, dont want to take the chance of breaking anyhting in production deployed apps",,,,,,,,,,,,,,,,,,,,,,,
Extending from org.apache.wicket.Page causes StackOverflowError,WICKET-1765,12401454,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,daniel.mfreitas,daniel.mfreitas,01/Aug/08 03:02,27/Sep/08 05:14,13/Mar/19 23:15,27/Sep/08 05:14,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"Extending directly from Page, instead of WebPage, causes a StackOverflowError due to a recursive loop.
The problem could be tracked down to the following code:

Example code:
public class ClockPage extends Page{ // Extends page directly

}

//-----------Page extends MarkupContainer

public class MarkupContainer ...

public String getMarkupType()
    {
        return getPage().getMarkupType();
    }
...
}

//---------getPpage() is inherited from Component:

public abstract class Component ... {
...
public final Page getPage()
    {
        // Search for nearest Page
        final Page page = findPage();

        // If no Page was found
        if (page == null)
        {
            // Give up with a nice exception
            throw new IllegalStateException(""No Page found for component "" + this);
        }

        return page;
    }
...
}

When extending directly from page, getPage() (inherited from Component) returns an instance to the ClockPage in the example above, which then calls getMarkupType() on itself which will call getPage() again and on an on until a stack overflow occur.","Windows XP, Eclipse Ganymede, Wicket 1.3.4, Embedded Jetty",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202702,,,2008-08-01 03:02:08.0,,,,,,0|i0kfaf:,117294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RequestUtils.toAbsolutePath() should handle dot paths in the url,WICKET-1836,12404382,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,francisdb,francisdb,15/Sep/08 19:26,27/Sep/08 03:58,13/Mar/19 23:15,27/Sep/08 03:58,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"String path = RequestUtils.toAbsolutePath(RequestCycle.get().urlFor(HomePage.class, new PageParameters()).toString());

if HomePage is mounted to / the url will be http://host/./ and should instead be http://host/
only double dots are translated, single dots should be removed

Some other remarks:

the implementation is using StringBuffer, that could be changed to StringBuilder.
toAbsolutepath should accept CharSequence instead of String (that will remove the need for the .toString() in the above sample",linux jetty,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-09-18 17:56:24.601,,,no_permission,,,,,,,,,,,202764,,,Sat Sep 27 03:58:39 UTC 2008,,,,,,0|i0kf47:,117266,,,,,,,,"18/Sep/08 17:56;miojo;Why the result for WebRequestCodingStrategy is set to ""./"" ?

Line@347
				// We need to special-case links to the home page if we're at the
				// same level.
				if (result.length() == 0)
				{
					result = ""./"";
				}

","27/Sep/08 03:58;ivaynberg;i wasnt able to reproduce it, but i think i fixed it. feel free to open if its still broken",,,,,,,,,,,,,,,,,,,,,,
Dutch text message for NumberValidator incorrect,WICKET-1846,12404965,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,papegaaij,papegaaij,23/Sep/08 13:44,27/Sep/08 03:07,13/Mar/19 23:15,27/Sep/08 03:07,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"These must be changed from
NumberValidator.minimum='${input}' moet groter zijn dan ${minimum}.
NumberValidator.maximum='${input}' moet kleiner zijn dan ${maximum}.
to
NumberValidator.minimum='${input}' mag niet kleiner zijn dan ${minimum}.
NumberValidator.maximum='${input}' mag niet groter zijn dan ${maximum}.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202774,,,Tue Sep 23 14:00:20 UTC 2008,,,,,,0|i0kf33:,117261,,,,,,,,"23/Sep/08 14:00;papegaaij;In fact, many of the messages (in Dutch, but also in English) are not very clear. For example, the message ""'${input}' must be positive."" will result in messages like ""'-5' must be positive"", which is impossible. Perhaps, these message should be rephrased as ""${input}' in '${label}' is not positive."".",,,,,,,,,,,,,,,,,,,,,,,
WicketRuntimeException when using wicket-auth-roles in a frameset,WICKET-1845,12404955,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,shetc,shetc,23/Sep/08 12:26,25/Sep/08 18:31,13/Mar/19 23:15,25/Sep/08 18:20,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,wicket-auth-roles,,,0,,,,,,,,"Hi All,

I seem to have a very strange exception when using wicket-auth-roles in a frameset.
Let me try and sketch out the setup:

1) Application home page is called FramesetPage.java
	-- it extends org.apache.wicket.markup.html.WebPage
	-- corresponding HTML contains simple frameset with 2 rows
2) Top row of frameset contains TopFramePage.java
	-- it extends org.apache.wicket.markup.html.WebPage
	-- corresponding HTML contains only an image component as follows:
		 -- add(new Image(""bannerImage"", ""logo.png""));
3) Bottom row of frameset contains BottomFramePage.java
	-- it extends org.apache.wicket.markup.html.WebPage
	-- it requires authentication/authorization using wicket-auth-roles (as is, straight out of the jar)
		-- if not already authenticated/authorized then redirected to MySignInPage.java
			-- it extends org.apache.wicket.authentication.pages.SignInPage
			-- corresponding HTML contains standard <span wicket:id=""signInPanel""/> tag
			
Here's the strange part: After completing the 'Username' and 'Password' fields of the
signInPanel then the exception displayed in the attached stack trace is thrown. Further, if I replace the image
component in TopFramePage with some CSS that loads the same image then no exception is thrown.

Any thoughts on what is causing this problem?

Thanks,
Steve","Windows XP, WebSphere 6.1",,,,,,,,,,,,,,,,,,23/Sep/08 12:29;shetc;myproject.zip;https://issues.apache.org/jira/secure/attachment/12390741/myproject.zip,25/Sep/08 17:13;ivaynberg;pom.xml;https://issues.apache.org/jira/secure/attachment/12390934/pom.xml,23/Sep/08 12:28;shetc;stacktrace.txt;https://issues.apache.org/jira/secure/attachment/12390740/stacktrace.txt,,,,,,3.0,,,,,,,,,,,,,,,,,,,2008-09-25 17:12:52.848,,,no_permission,,,,,,,,,,,202773,,,Thu Sep 25 18:31:35 UTC 2008,,,,,,0|i0kf3b:,117262,,,,,,,,23/Sep/08 12:28;shetc;stack trace,23/Sep/08 12:29;shetc;sample code,23/Sep/08 12:30;shetc;The password for this sample is 'password' (no quotes).,"25/Sep/08 17:12;ivaynberg;matej, looks like a wrong page is being pulled out of the diskstore? also it is interesting that it is pulling the topframepage - that page is stateless.

i am also attaching a missing pom to make the project easy to setup and going

even given that he is not using a different pagemap per frame this kind of think should not happen.","25/Sep/08 18:19;knopp;You have to call getSession().bind() in your frameset page constructor. 

(because the page as well as the header page is stateless so it doesn't bind the session. But you have to ensure that all pages come from same session anyway)","25/Sep/08 18:31;ivaynberg;a bit more detail, the problem is timing. the browser can request topframepage before the session cookie is set. therefor requests for bottomframepage and topframepage can happen in two different sessions. this is what cause the wrong page to be resolved - it was being pulled out of the wrong session.

furthermore, the frameset markup should be changed to something like this:

<frameset rows=""25%, 75%"">
		<frame noresize=""noresize"" frameborder=""1""
			src=""/myproject/topframe/wicket:pageMapName/topframe/"">
		</frame>
		<frame noresize=""noresize"" frameborder=""1""
			src=""/myproject/bottomframe/wicket:pageMapName/bottomframe/"">
		</frame>
	</frameset>

it is a good idea to keep pages from different frames in different pagemaps.",,,,,,,,,,,,,,,,,,
Disabling RadioGroup via authorization strategy does not disable contained Radio buttons,WICKET-1843,12404866,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,hillj2,hillj2,22/Sep/08 12:47,22/Sep/08 18:32,13/Mar/19 23:15,22/Sep/08 18:32,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"If you apply an authorization strategy to a RadioGroup which denies it ENABLE rights, it's corresponding Radio buttons do not also disable.",,,,,,,,,,,,,,,,,,,22/Sep/08 12:53;hillj2;Radio.java;https://issues.apache.org/jira/secure/attachment/12390641/Radio.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202771,,,Mon Sep 22 12:53:06 UTC 2008,,,,,,0|i0kf3j:,117263,,,,,,,,"22/Sep/08 12:53;hillj2;I believe this simple change to the Radio class would fix this issue, although it hasn't been tested exactly as written.  It simply adds a condition to the final IF statement in onComponentTag().",,,,,,,,,,,,,,,,,,,,,,,
CLONE -DatePicker: NaN if numerical input cannot be parsed,WICKET-1109,12381359,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,funkattack,funkattack,29/Oct/07 09:16,16/Sep/08 20:32,13/Mar/19 23:15,29/Oct/07 09:31,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket-datetime,,,,0,,,,,,,,"We have a DatePicker added to a DateTextField. If the input in the textfield is numerical but not a correct Date, for example 123, the DatePicker shows a calendar with only NaN.

When the input is either correct of completely wrong (""xxx"") the DatePicker works fine.

",firefox 2.0.0.6,,,,,,,,,,WICKET-989,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202112,,,Mon Oct 29 09:17:06 UTC 2007,,,,,,0|i0kgzz:,117571,,,,,,,,"29/Oct/07 09:17;funkattack;If the input ist numerical, but not a date, the datepicker works fine,
but when the input is completly wrong(""XXX"") it doesn't work at all

Firebug comes up with a:
numbers has no properties
[...]wicket-date.js
Line 48 ",,,,,,,,,,,,,,,,,,,,,,,
WebRequestCycle.getProcessor javadoc doesn't make sense,WICKET-1028,12379404,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,salk31,salk31,01/Oct/07 13:55,16/Sep/08 20:32,13/Mar/19 23:15,03/Nov/07 22:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"WebRequestCycle.getProcessor javadoc suggests overriding WebApplication.getRequestCycleProcessor() but this method is marked final...

Also doesn't seem obvious what the recommended approach is for adding custom behaviour for the request cycle processor.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:23.404,,,no_permission,,,,,,,,,,,202036,,,Tue Oct 16 06:46:23 UTC 2007,,,,,,0|i0kh6v:,117602,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",,,,,,,,,,,,,,,,,,,,,,,
modalwindow with panel doesn't resize properly on IE,WICKET-1457,12392553,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,seitz,seitz,28/Mar/08 12:31,16/Sep/08 20:32,13/Mar/19 23:15,28/Mar/08 12:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,0,,,,,,,,"see attached screenshot.

fix: add _overflow:auto to div.wicket-modal div.w_content_2",,,,,,,,,,,,,,,,,,,28/Mar/08 12:33;seitz;modal-window-resize-glitch.jpg;https://issues.apache.org/jira/secure/attachment/12378786/modal-window-resize-glitch.jpg,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202425,,,2008-03-28 12:31:31.0,,,,,,0|i0kg1r:,117417,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tag-namespace is not rendered for the markup placeholder tag,WICKET-1196,12383673,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,seitz,seitz,30/Nov/07 21:46,16/Sep/08 20:32,13/Mar/19 23:15,30/Nov/07 21:57,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket,,,,0,,,,,,,,"when a setOutputMarkupPlaceholderTag(true) is called on a component associated with a wicket tag,
the rendered markup placeholder tag does not include the namespace.
this is problematic, eg. especially with wicket:body, as only a body tag is rendered",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202191,,,2007-11-30 21:46:10.0,,,,,,0|i0kgrj:,117533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractCalendar use the wrong resources path,WICKET-1377,12389739,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,simonlei,simonlei,28/Feb/08 01:38,16/Sep/08 20:32,13/Mar/19 23:15,08/Mar/08 00:03,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket-datetime,,,,0,,,,,,,,"I extends the AbstractCalendar, and want to show the calendar directly. 
But I got an ""YAHOO is not defined"" javascript error, because the javascripts' url it 
generated are not correct.

I find that the contributeDependencies methods in AbstractCalendar don't add the 
resources correctly. For example, the add(HeaderContributor.forJavaScript(YuiLib.class, ""yahoo.js""));
should be add(HeaderContributor.forJavaScript(YuiLib.class, ""yahoo/yahoo.js""));
and add(HeaderContributor.forJavaScript(YuiLib.class, ""event.js"")); should be
add(HeaderContributor.forJavaScript(YuiLib.class, ""event/event.js""));
and other resources.

",JDK1.6 on windows xp,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-08 00:03:53.607,,,no_permission,,,,,,,,,,,202352,,,Sat Mar 08 00:03:53 UTC 2008,,,,,,0|i0kgav:,117458,,,,,,,,08/Mar/08 00:03;seitz;thanks,,,,,,,,,,,,,,,,,,,,,,,
setEnabled() does not work on YUI DateField,WICKET-1040,12379662,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,huergoperez,huergoperez,04/Oct/07 14:19,16/Sep/08 20:32,13/Mar/19 23:15,03/Nov/07 21:19,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket-datetime,,,,0,,,,,,,,"Calling setEnabled(false) on a YUI DateField component doesn't seem to have any effect. The date field remains editable and the changes get propagated to the underlying model on submit.
","java version ""1.5.0_11""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_11-b03)
Java HotSpot(TM) Client VM (build 1.5.0_11-b03, mixed mode, sharing)

jetty-6.1H.5-beta
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:19.618,,,no_permission,,,,,,,,,,,202046,,,Sat Nov 03 21:19:50 UTC 2007,,,,,,0|i0kh5b:,117595,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",03/Nov/07 21:19;seitz;added check for isEnabled() && isEnableAllowed() in DateField#onBeforeRender,,,,,,,,,,,,,,,,,,,,,,
ExternalLink produces invalid html,WICKET-920,12377357,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jonas,jonas,03/Sep/07 08:53,16/Sep/08 20:32,13/Mar/19 23:15,03/Nov/07 21:51,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"ExternalLink in Wicket 1.3.0-beta3 produces invalid html if PopupSettings without a page name is used.
In ExternalLink#onComponentTag the 'target' attribute is added even if the page map name is null, which
results in html output like this: 
<a href=""http://www.google.com/"" target>...</a>
(Note that the 'target' attribute doesn't have a value, which is invalid html according to validator.w3.org)
To ensure valid html output, it should also be checked if popupPageMap.getName() isn't null on line 203 of ExternalLink.
I've attached some code that illustrates the problem, and also shows a workaround.","Wicket 1.3.0-beta3, Tomcat 5.5.20, Eclipse 3.3/WTP",,,,,,,,,,,,,,,,,,03/Sep/07 08:54;jonas;test.zip;https://issues.apache.org/jira/secure/attachment/12364996/test.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:19.338,,,no_permission,,,,,,,,,,,201934,,,Sat Nov 03 21:51:34 UTC 2007,,,,,,0|i0khhb:,117649,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.","03/Nov/07 21:51;seitz;fixed, thanks for raising this issue",,,,,,,,,,,,,,,,,,,,,,
Mounts ignored for PageExpiredErrorPage,WICKET-958,12378021,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jkriesten,jkriesten,12/Sep/07 03:06,16/Sep/08 20:32,13/Mar/19 23:15,03/Nov/07 18:33,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"I have the following simple scenario:

app.mount( new IndexedParamUrlCodingStrategy( ""login"", LoginPage.class ) );
app.getApplicationSettings().setPageExpiredErrorPage( LoginPage.class );

If I call the application, I get directed to the url

http://appurl/login

fine. When the Session times out, I get redirected to the LoginPage again, but
this time not to the above url but to

http://appurl/?wicket:interface=:2::::

Couldn't the PageExpiredErrorPage be checked for Mounts?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:20.811,,,no_permission,,,,,,,,,,,201970,,,Sat Nov 03 18:33:33 UTC 2007,,,,,,0|i0khdb:,117631,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.","02/Nov/07 11:04;jcompagner;i would start to look why it redirects.
So Requestcycle.redirect boolean is true when the pageexpired page is set.","03/Nov/07 18:33;seitz;fixed: set RequestCycle.redirect to true if the pageExpiredErrorPage is mounted, false otherwise",,,,,,,,,,,,,,,,,,,,,
AuthenticatedWebApplication uses deprecated constructor of AuthenticatedWebSession,WICKET-1423,12391500,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,cgdavies,cgdavies,14/Mar/08 22:58,16/Sep/08 20:32,13/Mar/19 23:15,23/Mar/08 19:27,1.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-auth-roles,,,,0,,,,,,,,"In changing from 1.3.1 to 1.3.2 the AuthenticatedWebSession(AuthenticatedWebApplication, Request) method became deprecated, but AuthenticatedWebApplication#newSession still searches for this one.

Simply a matter of changing lines 114-116 of AuthenticatedWebApplication.java from:

return webSessionClassRef.get().getDeclaredConstructor(
		AuthenticatedWebApplication.class, Request.class).newInstance(
		AuthenticatedWebApplication.this, request);

to:

return webSessionClassRef.get().getDeclaredConstructor(
		Request.class).newInstance(
		request);",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202393,,,2008-03-14 22:58:18.0,,,,,,0|i0kg5z:,117436,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Input field with autocomplete behavior does not submit the form via enter key in some cases,WICKET-1372,12389599,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,albert.brand,albert.brand,26/Feb/08 15:36,16/Sep/08 20:32,13/Mar/19 23:15,27/Mar/08 21:55,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,0,,,,,,,,"This is related to WICKET-2 but wasn't fixed in that bug:
When you enter nothing in an input field with autocomplete and press enter, type something that doesn't give results or press escape when the autocomplete box has appeared, you have to press enter twice to submit the form.

The solution is quite simple: remove line 219 from wicket-autocomplete.js:
hidingAutocomplete=1;

This variable was introduced to keep enter from submitting, but by setting it here always to 1, enter is blocked in the above cases.",Debian,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-26 09:16:27.237,,,no_permission,,,,,,,,,,,202348,,,Thu Mar 27 21:55:01 UTC 2008,,,,,,0|i0kgbj:,117461,,,,,,,,26/Mar/08 09:16;jcompagner;its your baby :),"27/Mar/08 21:55;seitz;also, see WICKET-1454",,,,,,,,,,,,,,,,,,,,,,
DatePicker: NaN if numerical input cannot be parsed,WICKET-989,12378649,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,ivana,ivana,19/Sep/07 14:21,16/Sep/08 20:32,13/Mar/19 23:15,03/Jan/08 20:27,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket-datetime,,,,0,,,,,,,,"We have a DatePicker added to a DateTextField. If the input in the textfield is numerical but not a correct Date, for example 123, the DatePicker shows a calendar with only NaN.

When the input is either correct of completely wrong (""xxx"") the DatePicker works fine.

",firefox 2.0.0.6,,,,,,,,,,,,,,,,,,19/Sep/07 14:36;seitz;WICKET-989.patch;https://issues.apache.org/jira/secure/attachment/12366189/WICKET-989.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-19 14:33:47.64,,,no_permission,,,,,,,,,,,201997,,,Tue Feb 12 23:56:25 UTC 2008,,,,,,0|i0khaf:,117618,,,,,,,,19/Sep/07 14:33;seitz;DatePicker is part of wicket-datetime (not wicket-extensions),"19/Sep/07 14:36;seitz;if the date entered in the textbox is not valid, the datepicker doesn't use it to preselect the date in the calendar.
in that case, any previously selected date remains selected.","03/Jan/08 15:15;seitz;reopened: http://www.nabble.com/DatePicker-NaN-tf4475178.html
this may have happened in the course of a YUI upgrade.",12/Feb/08 23:56;brandonfuller;Verified fixed in 1.3.1.,,,,,,,,,,,,,,,,,,,,
the DatePicker show the same week title in china.  ,WICKET-1243,12385251,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,dzlei,dzlei,27/Dec/07 15:57,16/Sep/08 20:32,13/Mar/19 23:15,05/Jan/08 21:12,1.3.0-beta4,1.3.0-rc1,1.3.0-rc2,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket-datetime,,,,0,,,,,,,,"the DatePicker show the same week title in china.  you can see it  here in the first pic.


if  DatePicker can show as the last pic  is the best:



i have correct this on my own version.  i will submit the solution tomorrow",in chinese(zh_CN) language,,,,,,,,,,,,,,,,,,27/Dec/07 16:05;dzlei;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12372261/screenshot-1.jpg,27/Dec/07 16:07;dzlei;screenshot-2.jpg;https://issues.apache.org/jira/secure/attachment/12372262/screenshot-2.jpg,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-12-28 22:30:29.996,,,no_permission,,,,,,,,,,,202230,,,Tue Feb 19 18:42:23 UTC 2008,,,,,,0|i0kgnz:,117517,,,,,,,,"27/Dec/07 16:23;dzlei;this is my way to fix it. 
at org.apache.wicket.extensions.yui.calendar.DatePicker.java  line463, 


    protected void localize(Map widgetProperties) {
        DateFormatSymbols dfSymbols = new DateFormatSymbols(getLocale());
        if (Locale.SIMPLIFIED_CHINESE.equals(getLocale())){
            dfSymbols.setShortWeekdays(new String[] {"""", ""日"", ""一"", ""二"", ""三"", ""四"", ""五"", ""六""});
        };
        setWidgetProperty(widgetProperties, ""MONTHS_SHORT"", filterEmpty(dfSymbols.getShortMonths()));
        setWidgetProperty(widgetProperties, ""MONTHS_LONG"", filterEmpty(dfSymbols.getMonths()));
        setWidgetProperty(widgetProperties, ""WEEKDAYS_1CHAR"", filterEmpty(substring(dfSymbols
                .getShortWeekdays(), 1)));
        setWidgetProperty(widgetProperties, ""WEEKDAYS_SHORT"", filterEmpty(substring(dfSymbols
                .getShortWeekdays(), 2)));
        setWidgetProperty(widgetProperties, ""WEEKDAYS_MEDIUM"", filterEmpty(dfSymbols
                .getShortWeekdays()));
        setWidgetProperty(widgetProperties, ""WEEKDAYS_LONG"", filterEmpty(dfSymbols.getWeekdays()));
    }",28/Dec/07 22:30;seitz;can you provide escaped unicode sequences for the short weekdays?,"05/Jan/08 03:17;dzlei;dfSymbols.setShortWeekdays(new String[] {"""", ""\u65E5"", ""\u4E00"", ""\u4E8C"", ""\u4E09"", ""\u56DB"", ""\u4E94"", ""\u516D""});","05/Jan/08 21:12;seitz;fixed, thanks for the patch.","19/Feb/08 02:36;howie.yu;hi~ There are still some problem below.
--------------------------------------------------------------------------------------------------------------------------
if (Locale.SIMPLIFIED_CHINESE.equals(getLocale())){ 
            dfSymbols.setShortWeekdays(new String[] {"""", ""日"", ""一"", ""二"", ""三"", ""四"", ""五"", ""六""}); 
        }; 
--------------------------------------------------------------------------------------------------------------------------
The same problem in  Locale.TAIWAN & Locale.TRADITIONAL_CHINESE.

Can i overwrite ""protected void localize(Map widgetProperties) "" when ""new DatePocker"" myself?

--------------------------------------------------------------------------------------------------------------------------","19/Feb/08 18:42;seitz;can you provide a patch for TAIWAN and TRADITIONAL_CHINESE?
that would be great.",,,,,,,,,,,,,,,,,,
AjaxFallbackButton not getting form,WICKET-1398,12390355,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,emmostrom,emmostrom,06/Mar/08 14:49,16/Sep/08 20:32,13/Mar/19 23:15,08/Mar/08 01:09,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"AjaxFallbackButton is passing mForm instead of getForm() when calling onSubmit and onError.  Can be fixed by changing to:

			protected void onSubmit(AjaxRequestTarget target) {
				AjaxFallbackButton.this.onSubmit(target,
						AjaxFallbackButton.this.getForm());
			}

			protected void onError(AjaxRequestTarget target) {
				AjaxFallbackButton.this.onError(target, AjaxFallbackButton.this
						.getForm());
			}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-08 01:09:33.155,,,no_permission,,,,,,,,,,,202371,,,Sat Mar 08 01:09:33 UTC 2008,,,,,,0|i0kg93:,117450,,,,,,,,08/Mar/08 01:09;seitz;thanks,,,,,,,,,,,,,,,,,,,,,,,
SmartLinkLabel parser error,WICKET-1125,12381765,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,syl,syl,03/Nov/07 07:31,16/Sep/08 20:32,13/Mar/19 23:15,03/Nov/07 20:59,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-extensions,,,,0,,,,,,,,"new SmartLinkMultiLineLabel(""l"", ""http://localhost http://localhost"") looks in browser like

http://localhost"">http://localhost http://localhost"">http://localhost

where http://localhost are links.",,,,,,,,,,,,,,,,,,,03/Nov/07 07:37;syl;LinkParser.patch;https://issues.apache.org/jira/secure/attachment/12368919/LinkParser.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-11-03 20:59:23.714,,,no_permission,,,,,,,,,,,202128,,,Sat Nov 03 20:59:23 UTC 2007,,,,,,0|i0kgyn:,117565,,,,,,,,"03/Nov/07 20:59;seitz;fixed.
thanks for the patch, much appreciated.",,,,,,,,,,,,,,,,,,,,,,,
Bug on Wicket Quick Start web page - negative impact on newcomers,WICKET-1369,12389499,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,murphyatgenome,murphyatgenome,25/Feb/08 16:15,16/Sep/08 20:32,13/Mar/19 23:15,26/Feb/08 23:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,0,,,,,,,,"The Maven command-line generation form gives a rather suboptimal impression to the newcomer.

1) The Version select widget does not allow the user to type in an arbitrary version number.  In fact, why is this even a menu at all?  Shouldn't it ust be a plain text box?

2) It would be much slicker if the GroupId and especially ArtifactId labels were more descriptive for those unfamiliar with Maven.  ""ArtifactId"" should certainly be ""Project name"".  GroupId should be something else, not sure what.  ""Package path?""

3) In the second paragraph, ""Maven 2"" should be a link to the Maven download page.
",Firefox 2.0.0.12 on Windows XP,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-25 17:04:00.455,,,no_permission,,,,,,,,,,,202346,,,Tue Feb 26 23:29:41 UTC 2008,,,,,,0|i0kgc7:,117464,,,,,,,,"25/Feb/08 17:04;ivaynberg;i think having version as a dropdown is the best. newcomers wont know what to put there without doing some research, and we should default the version box to the latest stable release.","25/Feb/08 17:08;murphyatgenome;I understand, Igor.  I suggest that the ""Version"" label should read ""Wicket version"".
","25/Feb/08 20:33;murphyatgenome;Another TODO item for this page: the existing Caveats section seems to be obsolete.  I just generated my pom.xml, and the junit dependency is already in it.

Might as well make the process seem as friendly and professionally documented as possible ....
","26/Feb/08 22:52;seitz;ad 1) 
see Igor's comment

ad 2) 
i wouldn't say the mavenish terms should be replaced, but ""Project name"" and ""Base Package Path"" could be put in parenthesis.
users will probably have to deal with maven sooner or later, so it's better to use the terminology right from the beginning.

ad 3) i will add the links.",26/Feb/08 23:29;seitz;done. (site needs to be synced),,,,,,,,,,,,,,,,,,,
Allow to set field values before submitting a form with Ajax in WicketTester,WICKET-254,12361981,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,thrantal,thrantal,05/Feb/07 10:04,16/Sep/08 20:24,13/Mar/19 23:15,25/Jun/07 20:48,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,1,,,,,,,,"I have code to validate {{TextField}}s one by one with ajax. While the code works, I wasn't able to assert it working with WicketTester.

The attached quickstart can be used to reproduce the problem on a 2.0 snapshot. The code works in a browser (validity gets toggled true / false when changing the input length), but WicketTester fails. 

With WicketTester, the ajax event gets triggered (and it calls {{validate}} on the field), but {{isValid}} always returns {{true}}.","Ubuntu Dapper Linux, Sun java 1.5.0_10",,,,,,,,,WICKET-1582,,,,,,,,,27/Apr/07 11:31;thrantal;ajax-validation-sans-submit-1.3.0.zip;https://issues.apache.org/jira/secure/attachment/12356399/ajax-validation-sans-submit-1.3.0.zip,05/Feb/07 10:13;thrantal;ajax-validation-sans-submit.zip;https://issues.apache.org/jira/secure/attachment/12350335/ajax-validation-sans-submit.zip,16/May/07 21:56;kare;wicket-form-submit-enable-toggle.diff;https://issues.apache.org/jira/secure/attachment/12357498/wicket-form-submit-enable-toggle.diff,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-04-25 21:26:53.139,,,no_permission,,,,,,,,,,,201329,,,Mon Jul 02 13:18:06 UTC 2007,,,,,,0|i0kjb3:,117945,,,,,,,,"05/Feb/07 10:13;thrantal;{{MyAjaxFormTest}} is the failing test case, {{Start}} is used to run the quickstart and test in a browser.","25/Apr/07 21:26;jbq;Can you please try again on the new ""trunk"" branch, which is now version 1.3, and report if it is working?","27/Apr/07 11:31;thrantal;Version for 1.3.0 snapshot (Fri, 27 Apr 2007 08:28:24 GMT) downloaded from http://wicketstuff.org/maven/repository/","27/Apr/07 11:35;thrantal;I ported the quickstart to the current 1.3.0 snapshot, but the behaviour remains the same (quickstart works, but the unit test fails).

Now after getting a bit more Wicket experience I started to think that maybe the validation works in a way which makes testing difficult. I've been having hard time testing any ajax field validations with WicketTester. In the case of a normal form submit the test is easier to do if you can test e.g. the presence of an error message on the screen after doing submit with FormTester.","16/May/07 21:56;kare;I'm encountering the same issue as Timo.
This patch contains two unit tests.

- testToggleButtonEnabledState
Toggles submit buttons state from enabled to disabled. This test fails with NullPointerException. Not certain whether this is related to the reported issue.

- testToggleAjaxFormButton
Tests an ajax form that requires the user to enter a minimum of four characters. When valid data is entered the forms submit button is enabled via ajax request. If data is removed from the text field submit button is disabled. This functionality is tested manually (sic) and it works. According to the WicketTester it doesn't work. Ajax event is triggered through onkeyup javascript event, so copy/paste with mouse does not work.
","25/Jun/07 08:05;gwynevans;No idea about the issue resolution/if it's still active, but I'm afraid that by no stretch of the imagination can it be termed a ""Critical"" issue.","25/Jun/07 15:53;kare;
With TDD it is critical. It's such a shame that most Wicket developers ignore the importance of unit testing and neglect the maintenance of WicketTester.
","25/Jun/07 19:25;jbq;I'll take care of this.  But Kare please keep cool, we're all in the same boat!  In order to fix testToggleButtonEnabledState() you have to call tester.createRequestCycle() before being able to call submit.setEnabled(false).  I'm looking into testToggleAjaxFormButton() now.","25/Jun/07 20:48;jbq;Fixed, thanks for reporting!  WicketTester was overwriting field values in two places when submitting via Ajax.

Be aware however that you needed to call Session.get.cleanupFeedbackMessages() after each test, and that the TextField needed setRequired(true) to satisfy the third test with empty string.","29/Jun/07 16:48;landtuna;It this fix being backported to the future 1.2.7?  It seems pretty major, since there's no workaround if you want to test Ajax form components.","01/Jul/07 19:05;jbq;No, this fix will not be applied to the 1.2.x branch, but you can always backport the fix to your own copy of Wicket.","02/Jul/07 13:18;thrantal;In fact there are some workarounds for some cases, e.g.

    wicket.setParameterForNextRequest(dropDownChoice.getPageRelativePath(), new Integer(index)); 

used to work on 1.3 before the fix, as discussed here

  http://www.nabble.com/Unit-testing---updating-a-DropDownChoice-with-Ajax-tf3946499.html#a11300860

",,,,,,,,,,,,
MarkupComponentBorder skips first tag in MarkupStream,WICKET-1829,12404268,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,smackie,smackie,12/Sep/08 18:47,16/Sep/08 05:59,13/Mar/19 23:15,16/Sep/08 05:59,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"If there is no leading markup in a MarkupComponentBorder before the <wicket:border/> tag, the following error will occur:

Unexpected tag encountered in markup of component border TestComponentBorder. Tag: <wicket:body/>, expected tag: <wicket:border>

Steps to reproduce:
Create a ComponentBorder with no leading markup before <wicket:border/>:

TestComponentBorder.html
--------------------------------------
<wicket:border>
	<div class=""input"">
		<wicket:body/>
	</div>
</wicket:border>

TestComponentBorder.java
--------------------------------------
public class TestComponentBorder extends MarkupComponentBorder
{
}

This happens because the rendering loop calls stream.next(); when it starts, always skipping the first element.  It should call stream.get() before the loop, then stream.next() at the end.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202758,,,2008-09-12 18:47:51.0,,,,,,0|i0kf4n:,117268,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Bug with default RadioChoice ""for"" attribute on label generation.",WICKET-1797,12402756,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,ned.collyer,ned.collyer,21/Aug/08 00:47,31/Aug/08 07:49,13/Mar/19 23:15,31/Aug/08 07:49,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"If you use 2 forms of the same name, with radio choice with the same name and values, then the ""for"" attribute is generated based on the name relative to the current form, and the index of the option.

This generated incorrect html.

The behaviour is: when you click on the label of radio items in the second form, the items in the first form are selected.

For example

class userdetailspanel extends panel {
  userdetailspanel(string id) {
    super(id)
    Form form = new Form(""testForm"");
    List SITES = Arrays.asList(new String[] { ""The Server Side"", ""Java Lobby"" });
    form.add(new RadioChoice(""site"", SITES));
  }
}

class detailspage extends page {
  detailspage() {
    add(new userdetailspanel(""panel1""));
    add(new userdetailspanel(""panel2""));
  }
}

This is because of the way the IDs are generated in RadioChoice.  Specifically around

  String id = getChoiceRenderer().getIdValue(choice, index);
  final String idAttr = getInputName() + ""_"" + id;



A workaround I have has been adding a choice renderer when creating any of these RadioChoices.  I have been overriding getIdValue to return something unique. (based off the housing components markupid)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202730,,,2008-08-21 00:47:24.0,,,,,,0|i0kf7r:,117282,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After refreshing an AutoCompleteTextField with Ajax, onclik events on suggest-list stops functioning",WICKET-1800,12402977,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,clemp6r,clemp6r,25/Aug/08 08:49,25/Aug/08 08:51,13/Mar/19 23:15,25/Aug/08 08:51,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,wicket-extensions,,,,0,,,,,,,,"When I refresh an AutoCompleteTextField using an ajax request, I cannot click anymore on the suggest list to select an element. Selecting with keyboard works fine.

Tested with Firefox3, IE7.

Can reproduce using this code :

<input type=""text"" wicket:id=""myField""/>
<a wicket:id=""myLink"">MyAjaxLink</a>

final AutoCompleteTextField myField = new AutoCompleteTextField(
		""myField"") {
	private static final long serialVersionUID = 1L;

	@Override
	protected Iterator<String> getChoices(String input) {
		ArrayList arrayList = new ArrayList();
		arrayList.add(""test"");
		return arrayList.iterator();
	}
};
myField.setOutputMarkupId(true);
add(myField);

final AjaxLink myLink = new AjaxLink(""myLink"") {
	@Override
	public void onClick(AjaxRequestTarget target) {
		target.addComponent(myField);
	}
};
add(myLink);


This works fine before I click on the link, it is broken after.","Firefox 3, IE7",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202733,,,Mon Aug 25 08:51:23 UTC 2008,,,,,,0|i0kf7b:,117280,,,,,,,,25/Aug/08 08:51;clemp6r;The problem seems to be resolved in 1.4-m3.,,,,,,,,,,,,,,,,,,,,,,,
Unable to use properties file when generating XML files,WICKET-1436,12391885,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,nheudecker,nheudecker,19/Mar/08 15:48,24/Aug/08 07:41,13/Mar/19 23:15,24/Aug/08 07:41,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC1,,,wicket,,,,0,,,,,,,,"Please refer to this thread: 
http://www.nabble.com/Unable-to-use-wicket:message-when-generating-XML-files-td15779276.html","OSX, Jetty",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-02 15:57:46.234,,,no_permission,,,,,,,,,,,97344,,,Sun Aug 24 07:41:42 UTC 2008,,,,,,0|i0kg4n:,117430,,,,,,,,"02/Apr/08 15:57;jdonnerstag;Just some thoughts: currently ComponentStringResourceLoader contains a constant with ""properties,xml"" which is the list of file extensions. But it is PropertiesFactory which loads the properties based on the file extension. ComponentStringResourceLoader uses the list to iterate over all possible resource include path, class name, style, locale and file extension. I think I would refactor that and remove file extensions from the resource iterator, put it into PropertiesFactory instead and factor out the code to load properties from *.properties and *.xml into IPropertyLoaders. Thus allowing users to add their own. Each IPropertyLoaders would be associated with a file extension. 

But it still doesn't solve the problem of xml markup and xml properties files. I think we have two options: a) an application (or PropertiesFactory) wide setting which is rather inflexible or b) per Component. The latter would either require a new Component method (get/setPropertiesFactory) or at least some kind of interface to be implemented by Component if a specific Component whishes to deviate from the standard.

As interim (1.3.3) solution we could add PropertiesFactory.get/setPropertyFileExtenstions() to allow any user to remove (not add or modify) an entry from the list.","09/Apr/08 11:56;jdonnerstag;Added a partial solution to 1.4. It is now more easily possible to remove the XmlFilePropertiesLoader from the list of loaders. But it not yet using MarkupContainer.getmarkupType() to automatically exclude such extension from the properties search for that component. For that reason I leave that case open.

Juergen",24/Aug/08 07:41;jdonnerstag;see 1796,,,,,,,,,,,,,,,,,,,,,
RfcCompliantEmailAddressValidator accepts whitespace and tab,WICKET-1730,12399615,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,msparer,msparer,04/Jul/08 13:20,29/Jul/08 00:04,13/Mar/19 23:15,29/Jul/08 00:04,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket-extensions,,,,0,,,,,,,,"The RfcCompliantEmailAddressValidator in the org.apache.wicket.extensions.validation.validator package accepts whitespace and tab characters as it uses the regex provided on http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html which ""..will only validate addresses that have had any comments stripped and replaced with whitespace"".",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202669,,,2008-07-04 13:20:03.0,,,,,,0|i0kfe7:,117311,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExternalLink JavaScript not working in FF 3,WICKET-1535,12393980,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,gwynevans,gwynevans,15/Apr/08 12:40,18/Jul/08 04:31,13/Mar/19 23:15,18/Jul/08 04:31,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"If the link target isn't a proper anchor, the code generates a JS on-click handler, i.e. 
   tag.put(""onclick"", ""window.location.href='"" + url + ""';"");
which generates code such as 
  onclick='window.location.href=""http://news.bbc.co.uk"";'

The problem is that when this is used with a button /in a form/, while this works with IE & FF2, it appears that FF3 needs a 'return false;' at the end of the JS before it works, otherwise it just treats the button as a 'submit' action.

So, is there any down-side to changing the above line in 
  \org\apache\wicket\markup\html\link\ExternalLink.java
to be 
  tag.put(""onclick"", ""window.location.href='"" + url + ""'; return false;""); ?

/Gwyn",WinXP; Firefox 3.0 Beta 5,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-07-06 13:05:15.249,,,no_permission,,,,,,,,,,,202497,,,Fri Jul 18 04:31:57 UTC 2008,,,,,,0|i0kfvj:,117389,,,,,,,,06/Jul/08 13:05;dashorst;Moved to next milestone release.,"06/Jul/08 20:29;thrantal;I'm not sure but a bit suspicious about the implications of adding ""; return false;"", so maybe another kind of fix should be looked for. 

Have you googled about why this behavior changed from Firefox 2 to 3?","07/Jul/08 08:25;gwynevans;Yes, but nothing definative - just some other reports of the same thing, I think.  

It's not  major, as a workaround is to move the button outside a form, but it seems to me that in this usage, adding the ""return false"" and thus disabling the default action of the element /is/ the correct action.  Unfortunately, I was too busy to follow up on this (as I found it during system testing), but I don't believe that it changes the behaviour of pre-FF3 browsers, just FF3.",18/Jul/08 04:31;ivaynberg;there is nothing wrong with adding return false;,,,,,,,,,,,,,,,,,,,,
Tests fail due to different order of attributes (under Java 6),WICKET-1389,12389974,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,frankbille,henrik.lundahl,henrik.lundahl,02/Mar/08 00:08,16/Jul/08 16:57,13/Mar/19 23:15,09/Jun/08 14:37,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,wicket,,,,0,,,,,,,,"When building wicket-1.3-SNAPSHOT using JDK 1.6.0_04 I get some test failures with messages all similar to this:

< <style type=""text/css"" id=""org-apache-wicket-ajax-MockComponent1-0"">
---
> <style id=""org-apache-wicket-ajax-MockComponent1-0"" type=""text/css"">

It seems like the element attributes have come in the ""wrong"" order (compared to the test case).

Since making the tests attribute order independent would probably be difficult, I suggest instead that the code is changed to guarantee that the attributes always come in the same order (TreeMap instead of HashMap?).",JDK 1.6.0_04,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-08 22:21:07.644,,,no_permission,,,,,,,,,,,202363,,,Wed Jul 16 16:57:56 UTC 2008,,,,,,0|i0kg9z:,117454,,,,,,,,08/Mar/08 22:21;jcompagner;we should try to fix this when moving to java 5,"31/May/08 06:23;ivaynberg;frank, i thought there was already something in place that would use a treemap for attributes instead of a regular map when running tests...","04/Jun/08 19:20;frankbille;Hmm I don't know. I don't think I have looked at it before, but I can see that both 1.3 and 1.4 ""trunks"" are still failing. I'll take a look at it now, to see if tree map is just the way to go.","04/Jun/08 19:41;frankbille;It would seem that the fix would indeed just be this. We don't need to worry about that there were a specific order before (were not using linkedhashmap) so nobody should have depended on that the order would be consistent.

BUT.

Just as we will now have tests fails when I commit this patch so does our users. So should this really go in both 1.4 AND 1.3 or 1.4 only?


Index: src/main/java/org/apache/wicket/util/value/ValueMap.java
===================================================================
--- src/main/java/org/apache/wicket/util/value/ValueMap.java	(revision 663010)
+++ src/main/java/org/apache/wicket/util/value/ValueMap.java	(working copy)
@@ -20,9 +20,9 @@
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.util.Arrays;
-import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
+import java.util.TreeMap;
 
 import org.apache.wicket.util.parse.metapattern.MetaPattern;
 import org.apache.wicket.util.parse.metapattern.parsers.VariableAssignmentParser;
@@ -58,7 +58,7 @@
  * @author Doug Donohoe
  * @since 1.2.6
  */
-public class ValueMap extends HashMap<String, Object> implements IValueMap
+public class ValueMap extends TreeMap<String, Object> implements IValueMap
 {
 	/** an empty <code>ValueMap</code>. */
 	public static final ValueMap EMPTY_MAP;","09/Jun/08 14:37;frankbille;I have pushed a fix for 1.4, where I replaced HashMap with TreeMap in ValueMap. I'm not sure it is needed in 1.3.","16/Jul/08 16:57;marcov;I'm running into this ordering problem too with 1.3.4 (also in 1.3 RC1 btw).
Using either sun jdk 1.5.0.11 or jdk1.6.0_06 (ibm?) on Ubuntu 7.04.

properties file:
home.title=Homepage Title
home.description=this describes what my site does
home.keywords=super, website, great
helloworld=hey there
description=description


This is what goes in: 
<meta name=""description"" content=""my super website"" wicket:message=""content:home.description"" />

What is generated:
<meta content=""this describes what my site does"" name=""description""/>

Notice that 'content' is now before 'name'.

The same is generated for these:
<meta name=""description"" content=""my super website"" wicket:message=""name:description,content:home.description"" />
<meta wicket:message=""name:description,content:home.description"" />	

And even a simpler case:
This goes in:
<input type=""submit"" value=""Default text"" wicket:message=""value:helloworld""/>

This comes out:
<input value=""Default text"" type=""submit""/>

Notice that 'value' is now before 'type'.


Now for the <input> tag the order of the HTML attributes does not really matter I guess, but for the <meta> tag it is most likely relevant because search engines expect the correct order (AFAIK).

So it would be great if the order could be as you specify it in the wicket:message. And I would like to see it indeed in 1.3...

PS: hope this is the right spot to put this in, if not point me where to go :-) Maybe I should clone this issue because it has status 'resolved'?

",,,,,,,,,,,,,,,,,,
ResourceModel # wrapOnAssignment( ... )   problem,WICKET-1742,12399962,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,stefan.simik,stefan.simik,09/Jul/08 21:14,13/Jul/08 15:25,13/Mar/19 23:15,13/Jul/08 15:25,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,,,,,0,,,,,,,,"Method ResourceModel # wrapOnAssignment(final Component<String> component)   should not take only components of type String,
but components with any type. It is not important, what is type of the component - it is needed only for finding the right properties file.

Example of problem
It is not possible to call this method with parameter of type Page<Void>",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202681,,,2008-07-09 21:14:10.0,,,,,,0|i0kfcn:,117304,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generified SimplePageAuthorizationStrategy violates its contract,WICKET-1715,12399073,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,ilyabo,ilyabo,26/Jun/08 08:25,26/Jun/08 16:51,13/Mar/19 23:15,26/Jun/08 16:51,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,wicket,,,,0,,,,,,,,"The only constructor of SimplePageAuthorizationStrategy  was generified so that its first parameter (securePageSuperType) has to be a subtype of Component:

public <C extends Component<?>, S extends Page<?>> SimplePageAuthorizationStrategy(
		final Class<C> securePageSuperType, final Class<S> signInPageClass)

This makes using an interface to mark secure pages impossible, although the javadoc for the constructor says: 

 * @param securePageSuperType
 *            The class or interface supertype that indicates that a given Page requires
 *            authorization

",any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202656,,,2008-06-26 08:25:16.0,,,,,,0|i0kffr:,117318,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.util.lang.Objects.convertValue returns null if it cannot convert the value,WICKET-1706,12398491,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,mika,mika,18/Jun/08 09:13,19/Jun/08 17:29,13/Mar/19 23:15,19/Jun/08 17:29,1.3.3,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,0,,,,,,,,"In the javadoc comment of the method it says that this method should return the value given as parameter if the value cannot be converted to the given type, but actually it returns null if  it cannot convert the  value. 

I had a problem with a TextField which had a model value of type java.io.Serializable and I had unfortunately not defined a special converter for the text field so it used org.apache.wicket.util.convert.ConverterLocator.DefaultConverter.convertToObject to convert to the object type. convertToObject uses Objects.convertValue so whenever model object was updated it was set to null. When retrieved from the model, model object was properly shown in the TextField so I had no idea why the value could not be properly setted but only getted.

In many cases it would probably help if the Objects.convertValue did what it promises in javadoc (returns the value unconverted), but how about throwing exception (at some method) if the converter does not know how to convert some kind of objects? This would make it a lot easier to spot the kind of mistakes I had made.",any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202649,,,2008-06-18 09:13:18.0,,,,,,0|i0kfgf:,117321,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileUploadField should return FileUpload as its converted input,WICKET-1684,12397554,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,thrantal,ned.collyer,ned.collyer,05/Jun/08 06:14,12/Jun/08 21:33,13/Mar/19 23:15,12/Jun/08 21:33,1.4-M2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-M3,,,wicket,,,,0,,,,,,,,"FileUploadField should return FileUpload as its converted input so the file can be validated.

Eg,
@Override
protected void convertInput() {
    setConvertedInput(getFileUpload());
}

Apparently MultiFileUploadField handles this (I've checked, it appears to be in the convertValue method).

For more context see http://www.nabble.com/Best-way-of-validating-FileUploadField-td17662018.html",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-06-12 04:05:34.675,,,no_permission,,,,,,,,,,,202630,,,Thu Jun 12 21:33:56 UTC 2008,,,,,,0|i0kfif:,117330,,,,,,,,"12/Jun/08 04:05;thrantal;Seems to make sense to me. This changes existing behavior (currently FileUpload returns the file name), but because convertedInput is now something else than the model object after submit, it's a bug and it' should be OK to break it if someone depends on it.",12/Jun/08 21:33;thrantal;Fixed in trunk (1.4). Thanks for reporting!,,,,,,,,,,,,,,,,,,,,,,
"WicketTester.startPage(page) throws ""No requestCycle is currently set""",WICKET-1558,12394453,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mrmean,joril,joril,21/Apr/08 15:49,12/Jun/08 12:27,13/Mar/19 23:15,11/May/08 21:30,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,,,wicket,,,,0,,,,,,,,"I'm receiving a strange message with WicketTester in 1.3.3.. Whenever I use startPage(Page) I get a

""there was an error cleaning up target org.apache.wicket.request.target.component.listener.ListenerInterfaceRequestTarget@1465464107[Page class = org.apache.wicket.util.tester.DummyHomePage, id = 1, version = 0]->testPage->interface org.apache.wicket.markup.html.link.ILinkListener.ILinkListener (request paramaters: [RequestParameters  componentPath=1:testPage pageMapName=null versionNumber=0 interfaceName=ILinkListener componentId=null behaviorId=null urlDepth=-1 parameters={} onlyProcessIfPathActive=false]).""

followed by

""No requestcycle is currently set!""

To reproduce, just use a QuickStart with a completely static Homepage.html (no wicket:id's) and an empty Homepage.class (just a ""Homepage extends WebPage""), while the test itself is

new WicketTester().startPage(new HomePage());

with

log4j.logger.org.apache.wicket=DEBUG

inside log4j.properties, to enable logging.",Eclipse 3.3.1.1 on Ubuntu 7.10,,,,,,,,,,,,,,,,,,21/Apr/08 15:51;joril;testreqcycle.zip;https://issues.apache.org/jira/secure/attachment/12380613/testreqcycle.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-11 21:30:42.071,,,no_permission,,,,,,,,,,,202518,,,Thu Jun 12 12:27:23 UTC 2008,,,,,,0|i0kfsv:,117377,,,,,,,,"21/Apr/08 15:51;joril;Quickstart (Eclipse project)
Testcase is it.ibc.Test","11/May/08 21:30;mrmean;Verified with 1.3.3, however the wicket 1.3 branch does not have this problem anymore (1.3.4). Nor does trunk (1.4-m2)","12/Jun/08 12:27;martin-g;Just for the history: using wicketTester.clickLink(String, true) (i.e. AJAX request) will detach the RequestCycle at the end of the call and thus it will be 'null' from now on.

This is valid for Wicket 1.3.2.",,,,,,,,,,,,,,,,,,,,,
TimeFrame.equals(Object)  does not work as expected,WICKET-1669,12397034,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,rhansen,rhansen,28/May/08 23:21,30/May/08 19:31,13/Mar/19 23:15,30/May/08 17:17,1.3.2,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M3,,wicket,,,,0,,,,,,,,the equals() method should be implemented for the TimeFrame class,all,1200,1200,,0%,1200,1200,,,,,,,,,,,,28/May/08 23:22;rhansen;TimeFrameEquals.txt;https://issues.apache.org/jira/secure/attachment/12382985/TimeFrameEquals.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-30 15:39:26.924,,,no_permission,,,,,,,,,,,202615,,,Fri May 30 19:31:46 UTC 2008,,,,,,0|i0kfjr:,117336,,,,,,,,28/May/08 23:22;rhansen;this is my patch for the issue,"30/May/08 15:39;tmaeder;Doing the class check like this:

if (that instanceof TimeFrame)
 
will break the contract of the equals(Object) method. I.E. in the presence of subclasses it may be that this.equals(that) != that.equals(this). 

I realize that the class is final, but I find the following safer:

if (that == null || that.getClass() != getClass) {
    return false,
}

As far as performance is concerned, I would venture that a modern JIT generates the exact same code, unless there are subclasses, where the latter version becomes faster.","30/May/08 19:31;rhansen;Actually, it doesn't break the contract...

http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Object.html#equals(java.lang.Object)

although I do get your point... I don't know if you should take that as a
general rule...
your saying for example that:
a instance of class square should be different from an instance of class
quadrilateral even though they occupy the same points on a plane...

IMHO relations of equality may be more problem specific than you suggest...
:p

On Fri, May 30, 2008 at 11:40 AM, Thomas Mäder (JIRA) <jira@apache.org>

",,,,,,,,,,,,,,,,,,,,,
WicketTester can not deal with null values in page parameters,WICKET-1527,12393842,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mrmean,hugohallman,hugohallman,13/Apr/08 19:42,21/Apr/08 20:06,13/Mar/19 23:15,21/Apr/08 19:30,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket,,,,0,,,,,,,,"A NullPointerException is thrown when the wicketTester is used to render a page with a null value in the page parameters, and the page is trying to get the url of the request.

java.lang.NullPointerException
	at java.net.URLEncoder.encode(Unknown Source)
	at org.apache.wicket.protocol.http.MockHttpServletRequest.getQueryString(MockHttpServletRequest.java:691)
	at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getURL(ServletWebRequest.java:368)

        at page.constructor();
    or myproject.requestcycle.detach();

	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1263)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:489)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:382)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:370)
	at org.apache.wicket.util.tester.BaseWicketTester.executeListener(BaseWicketTester.java:248)
	at org.apache.wicket.util.tester.BaseWicketTester.clickLink(BaseWicketTester.java:765)
	at org.apache.wicket.util.tester.BaseWicketTester.clickLink(BaseWicketTester.java:617)
	at myproject.test();


The failing code looks like:
					final String name = (String)iterator.next();
					final String value = parameters.getString(name);
					buf.append(URLEncoder.encode(name, ""UTF-8""));
					buf.append('=');
					buf.append(URLEncoder.encode(value, ""UTF-8""));

and fails in URLEncoder.encode(value, utf8).
A proposed solution is to check for null values in the parameter value.


I have not been able to test a later release than 1.3.0, but by inspection, the same problem still exists.
http://svn.apache.org/viewvc/wicket/trunk/wicket/src/main/java/org/apache/wicket/protocol/http/MockHttpServletRequest.java?view=markup

This behaviour is inconsistent with the runtime outside of tester.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-21 19:30:16.077,,,no_permission,,,,,,,,,,,202489,,,Mon Apr 21 20:06:22 UTC 2008,,,,,,0|i0kfw7:,117392,,,,,,,,21/Apr/08 19:30;mrmean;Proposed solution applied,"21/Apr/08 20:06;mrmean;ofcourse, how stupid of me.
Thanks Frank :)

Maurice

On Mon, Apr 21, 2008 at 9:59 PM, Frank Bille Jensen (JIRA)
",,,,,,,,,,,,,,,,,,,,,,
SelectOption generates non xhtml compliant markup,WICKET-1537,12394013,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,ivaynberg,ivaynberg,15/Apr/08 17:25,15/Apr/08 17:25,13/Mar/19 23:15,15/Apr/08 17:25,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M1,,wicket-extensions,,,,0,,,,,,,,"selectoption outputs selected=""true"" instead of selected=""selected""
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202499,,,2008-04-15 17:25:54.0,,,,,,0|i0kfv3:,117387,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketTester Doesn't Support setDefaultFormProcessing(false),WICKET-1291,12386528,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,mrmean,brandonfuller,brandonfuller,17/Jan/08 19:03,07/Apr/08 21:59,13/Mar/19 23:15,07/Apr/08 21:59,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"I was trying to use the WicketTester to click the button for an AjaxFallbackButton that has setDefaultFormProcessing(false). So I wanted to execute the onclick for the component, like this:

tester.executeAjaxEvent(""meetingForm:inputForm:rootViewPanel:addOrganization"", ""onclick"");

What seems to happen is that the pages tries to update all the form fields and perform validation.   This is incorrect in the context for the setDefaultFormProcessing(false) behavior.

I was looking at the source for BaseWicketTester and noticed that in executeAjaxEvent(), it always tries to submit the form if the behavior is a AjaxFormSubmitBehavior.  This wouldn't be correct in the case of when you set setDefaultFormProcessing(false) on the button.  I think it needs to check for setDefaultFormProcessing at that point.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-07 21:59:12.137,,,no_permission,,,,,,,,,,,202275,,,Mon Apr 07 21:59:12 UTC 2008,,,,,,0|i0kgif:,117492,,,,,,,,"07/Apr/08 21:59;mrmean;Checking for defaultformprocessing is an option however the real culprit was a check that excluded all buttons from the form, which prevented the form from finding the submit button.",,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextField does not invoke post call handlers,WICKET-310,12363384,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,janne,pablo72,pablo72,22/Feb/07 10:48,27/Mar/08 12:56,13/Mar/19 23:15,27/Mar/08 12:56,1.2.3,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,1,,,,,,,,"The AutoCompleteTextField does not invoke the registered post call handlers after the ajax request has been completed. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:49:56.307,,,no_permission,,,,,,,,,,,201380,,,Thu Mar 27 12:56:27 UTC 2008,,,,,,0|i0kj5z:,117922,,,,,,,,16/Oct/07 06:49;ehillenius;Assigned version (beta 4),27/Mar/08 12:56;seitz;added call to Wicket.Ajax.invokePostCallHandlers in doUpdateChoices,,,,,,,,,,,,,,,,,,,,,,
BaseWicketTester support for SubmitLink,WICKET-932,12377569,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,frankbille,cruiserdude,cruiserdude,05/Sep/07 14:28,23/Mar/08 21:53,13/Mar/19 23:15,23/Mar/08 21:53,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,0,,,,,,,,"When the SubmitLink is used instead of the submit for forms, BaseWicketTester does not run through the onSubmit() code of the link.

I have stepped through the debug of the test that's actually not getting called. All my validators on the text field are getting called as expected and in fact the form works as expected when deployed so I'm thinking that it might be a WicketTester issue or the more likely scenario that I'm doing something wrong?

Things I've tried:
- debugging as mentioned, but this just shows me it's not getting called
- trying to call the link directly but I just get the below exception which I'm not really surpised about.... 
","XP, Tomcat",,,,,,,,,,,,,,,,,,05/Sep/07 14:56;cruiserdude;JIRA932.zip;https://issues.apache.org/jira/secure/attachment/12365180/JIRA932.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-05 16:24:22.662,,,no_permission,,,,,,,,,,,201946,,,Sun Mar 23 21:53:37 UTC 2008,,,,,,0|i0khgf:,117645,,,,,,,,05/Sep/07 14:56;cruiserdude;Example of source and testcode,"05/Sep/07 16:24;jbq;For now the only option is to do:

{noformat}
		// Pretend we clicked on ""link""
		tester.getParametersForNextRequest().put(""link"", """");
		tester.submitForm(""form"");
{noformat}

Hopefully we can make it work using formTester.submit(""link""); and tester.clickLink(""form:link""); see org.apache.wicket.markup.html.form.submitlink.TestHomePage","05/Sep/07 16:39;jbq;Maybe we could also add WicketTester.submitForm(String path, String alternateButtonPath) to match FormTester.submit(String alternateButtonPath)?",23/Mar/08 21:53;frankbille;BaseWicketTester.clickLink now submits the form correctly when using a SubmitLink as well as invoking onSubmit on the link.,,,,,,,,,,,,,,,,,,,,
GoAndClearFilter doesn't reset filter form fields,WICKET-860,12376291,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,tauren,tauren,18/Aug/07 02:58,23/Mar/08 04:44,13/Mar/19 23:15,23/Mar/08 04:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket-extensions,,,,0,,,,,,,,"This problem is happening in GoAndClearFilter and FilterForm which are in wicket-extensions, but I'm testing the problem with wicket-phonebook which uses these classes.

When running wicket-phonebook with filters set, clearing the filters makes the list go back to the default, but the filter form controls are not reset to the default.  Thus, to clear the filters and then refilter on different criteria, the user must manually delete the contents of the text fields and change the drop downs to blank.

Examining the code in GoAndClearFilter shows that originalState is being kept, which is used for refreshing the table.  But I'm unclear on how to reset form filter values. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:20.485,,,no_permission,,,,,,,,,,,201883,,,Tue Oct 16 06:46:20 UTC 2007,,,,,,0|i0khon:,117682,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",,,,,,,,,,,,,,,,,,,,,,,
SubmitLink issue : Need for handling user's own onclick javascript call + default  &&  modification in onComponentTag call.,WICKET-546,12368907,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,sbelur,sbelur,09/May/07 06:51,09/Mar/08 07:57,13/Mar/19 23:15,09/Mar/08 07:57,1.2.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.7,,,wicket,,,,0,,,,,,,,"
Wicket version 1.2.4

Note:  The scenario explained below works perfectly well for a Link.

Usage :

 I am using a submit Link in my form to perform a delete operation .
I disable the link when there is nothing to delete
[ I maintain a list for this ] and when the user checks some items to
be deleted , i enable the link and add  a  onClick attribute to call a javascript
confirmation box via a behavior. Finally i use AjaxRequestTarget.addComponent to render.

Problem :

Wicket complains that the delete link cannot be found even though i set
markupid to true in all relevant places.

So while debugging i figured out that  onComponentTag of SubmitLink
does not call super.onComponentTag . By introducing this call in the method,
I could see the id value[markup id] in  source code.

HOWEVER this did not solve my problem fully because onClick did not
call my Javascript function. So on examining the Ajax Debug window
output, I could see 2 onclicks added for submitlink response.

This issue needs to address the following 2 questions...

1> why doesnt current  onComponentTag call super.onComponetTag ?

2> How do i ensure that my javascript call gets invoked before the submit operation? 


-Thanks
swaroop belur",Any OS ,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 14:10:18.729,,,no_permission,,,,,,,,,,,201594,,,Sun Mar 09 07:57:21 UTC 2008,,,,,,0|i0kil3:,117828,,,,,,,,"21/Aug/07 14:10;jbq;For reference, is there a discussion on a mailing-list about this?","21/Aug/07 14:55;sbelur;
AFAIK ,

Eelco had made a comment  - but was not sure how to go abt it...

Reference : http://www.nabble.com/A-problem-with-using-SubmitLink-tf3684826.html#a10299671","16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.","07/Jan/08 04:03;ivaynberg;1.3.0 does call super properly so the id will be output

if you want your javascript executed before the submit it is pretty simple

oncomponenttag(tag) {
  super.oncomponenttag(tag);
  string onclick=tag.get(""onclick"");
  onclick=""if (!confirm('msg')) return; ""+onclick;
  tag.put(""onclick"", onclick);
}


  
  ",09/Mar/08 07:57;ivaynberg;added super.oncomponenttag call,,,,,,,,,,,,,,,,,,,
BaseWicketTester.isVisible() doesn't check Component.isRenderAllowed(),WICKET-1364,12389246,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,ywang29,ywang29,21/Feb/08 19:44,09/Mar/08 01:42,13/Mar/19 23:15,09/Mar/08 01:42,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"BaseWicketTester.isVisible() only checks Component.isVisible(), not  Component.isRenderAllowed(). So for a component whose RENDER action is disabled through role based authorization strategy, BaseWicketTester.isVisible() still returns true. BaseWicketTester.isInvisible() works correctly by using BaseWicketTester.getComponentFromLastRenderedPage() which checks both Component.isVisible() and isRenderAllowed().
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202342,,,2008-02-21 19:44:54.0,,,,,,0|i0kgcv:,117467,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uncaught checked exceptions in page constructor,WICKET-1278,12386142,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,syl,syl,13/Jan/08 10:03,09/Feb/08 20:49,13/Mar/19 23:15,09/Feb/08 20:49,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"DefaultPageFactory#newPage(final Class pageClass) uses Class#newInstance() method which ""propagates any exception thrown by the nullary constructor, including a checked exception"". This way Wicket doesn't catch checked exceptions thrown from default Page constructor.

Constructor#newInstance() should be used as in other newPage(...) methods.",,,,,,,,,,,,,,,,,,,16/Jan/08 12:41;syl;defaultpagefactory.patch;https://issues.apache.org/jira/secure/attachment/12373270/defaultpagefactory.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202262,,,2008-01-13 10:03:39.0,,,,,,0|i0kgjr:,117498,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc error in QueryStringUrlCodingStrategy,WICKET-1321,12387853,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,tietyt,tietyt,05/Feb/08 06:49,09/Feb/08 19:47,13/Mar/19 23:15,09/Feb/08 19:47,1.3.0-final,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"The javadoc uses this as an example:
mount(new QueryStringRequestTargetUrlCodingStrategy(""/admin/productmanagement"", admin.ProductManagement.class));

This does not work.  It should say this instead:
mount(new QueryStringUrlCodingStrategy(""/admin/productmanagement"", admin.ProductManagement.class));",,300,300,,0%,300,300,,,,,,,,,,,,05/Feb/08 06:57;tietyt;patch.txt;https://issues.apache.org/jira/secure/attachment/12374742/patch.txt,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202302,,,Tue Feb 05 06:57:17 UTC 2008,,,,,,0|i0kgfz:,117481,,,,,,,,"05/Feb/08 06:57;tietyt;this is the patch to fix the file
",,,,,,,,,,,,,,,,,,,,,,,
Only properties from first panel-implementation loaded when using different implementations of an abstract panel on the same page,WICKET-1274,12386076,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,msparer,msparer,11/Jan/08 19:33,11/Jan/08 21:32,13/Mar/19 23:15,11/Jan/08 21:32,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.1,,,wicket,wicket-extensions,,,0,,,,,,,,"Extract from the Mailinglist entry on: http://www.nabble.com/wrong-properties-displayed-to14753907.html

On a WebPage, I'm using a TabbedPanel containing different implementations of MyAbstractPanel. MyAbstractPanel.html contains a <wicket:message key=""panelHeadline""></wicket:message>. Now I want a different headline for each of my implementations of MyAbstractPanel.
So I made a properties file for each. E.g. PanelImplOne.properties with panelHeadline=First panel headline, PanelImplTwo.properties with panelHeadline=Second panel

When the page gets displayed the first Tab displays the right value. When I navigate to other tabs however, the displayed message is the same as on the first tab. The same happens if I use a <span wicket:id=""headline"" with a ResourceModel. ","WinXP SP2, Java 6, Firefox 2.0.0.11, IE 7",,,,,,,,,,,,,,,,,,11/Jan/08 19:33;msparer;quickstart_wrongProperties.zip;https://issues.apache.org/jira/secure/attachment/12372997/quickstart_wrongProperties.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-01-11 21:32:16.937,,,no_permission,,,,,,,,,,,202258,,,Fri Jan 11 21:32:16 UTC 2008,,,,,,0|i0kgkf:,117501,,,,,,,,"11/Jan/08 21:32;ivaynberg;fixed. localizer was generating bad cache keys which would sometimes result in false positive cache hits. now the keys are longer, but much more accurate.",,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableChoiceLabel - wrong Javadoc,WICKET-1245,12385292,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,juangarias,juangarias,28/Dec/07 18:55,29/Dec/07 14:30,13/Mar/19 23:15,28/Dec/07 22:16,1.3.0-rc2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-final,,,wicket-extensions,,,,0,,,,,,,,"AjaxEditableChoiceLabel

The class javadoc is wrong. Looks like a copy & paste from AjaxEditableMultiLineLabel",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-12-28 22:16:04.46,,,no_permission,,,,,,,,,,,202232,,,Fri Dec 28 22:16:04 UTC 2007,,,,,,0|i0kgnr:,117516,,,,,,,,28/Dec/07 22:16;seitz;fixed. thanks for the report,,,,,,,,,,,,,,,,,,,,,,,
SpringWebApplicationFactory cannot load WA from parent bean factory,WICKET-1189,12383344,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,yozh,yozh,27/Nov/07 19:36,29/Dec/07 14:30,13/Mar/19 23:15,11/Dec/07 05:29,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-final,,,wicket-spring,,,,1,,,,,,,,"SpringWebApplicationFactory loads WAC using ac.getBeansOfType() method.

However, we have configuration: WA is declared in the application context that is parent to WebApplicationContext provided to SpringWebApplicationFactory. So ac.getBeansOfType() returns nothing and SpringWebApplicationFactory cannot get WebApplication instance.

BeanFactoryUtils#beansOfTypeIncludingAncestors should be used instead.

java.lang.IllegalStateException: bean of type [org.apache.wicket.protocol.http.WebApplication] not found
	at org.apache.wicket.spring.SpringWebApplicationFactory.createApplication(SpringWebApplicationFactory.java:105)
	at org.apache.wicket.spring.SpringWebApplicationFactory.createApplication(SpringWebApplicationFactory.java:85)
	at org.apache.wicket.protocol.http.WicketFilter.init(WicketFilter.java:485)
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202185,,,Tue Nov 27 19:39:00 UTC 2007,,,,,,0|i0kgs7:,117536,,,,,,,,"27/Nov/07 19:39;yozh;Workaround exists: one can specify ""applicationBean"" filter param. This works because ac.getBean() looks for beans in parent contexts too.",,,,,,,,,,,,,,,,,,,,,,,
button 'delete' from MultiFileUploadField can not be localized (I18N support missing),WICKET-1021,12379304,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,pete,pete,28/Sep/07 15:56,29/Dec/07 14:30,13/Mar/19 23:15,15/Dec/07 19:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-final,,,wicket,,,,0,,,,,,,,"From the org.apache.wicket.markup.html.form.upload.MultiFileUploadField, the button [delete] that appears when you select a file, can not be translated to other languages...

Line 121 in org.apache.wicket.markup.html.form.upload.MultiFileUploadField.js:

    new_row_button.value = 'Delete';

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:23.954,,,no_permission,,,,,,,,,,,202029,,,Sat Dec 15 19:39:40 UTC 2007,,,,,,0|i0kh73:,117603,,,,,,,,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",15/Dec/07 19:39;ivaynberg;added new org.apache.wicket.mfu.delete resource key that controls text of delete button,,,,,,,,,,,,,,,,,,,,,,
MarkupNotFoundException when fragment is rerendered during AJAX call,WICKET-1032,12379525,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,johnray,johnray,02/Oct/07 22:27,01/Dec/07 09:30,13/Mar/19 23:15,01/Dec/07 09:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,,,,,0,,,,,,,,"I have a Fragment with a TextField inside of it. Everything works fine when the page is first loaded. However inside of an AJAX call I add the TextField to be rendered again and I get a MarkupNotFoundException from the fragment. Apparently because the TextField asks the Fragment for the markup and the fragment can't find it. I tracked the problem down and when I'm constructing the Fragment I pass in a ListItem (that contains the fragment) as the markupProvider. If I pass in the WebPage then everything works fine. 

I noticed in the Fragment.chooseMarkupStream() there is this section of code that get's called during the initial page rendering.

	stream = markupProvider.getAssociatedMarkupStream(false);
	if (stream == null)
	{
		// The following statement assumes that the markup provider is a
		// parent along the line up to the Page
		stream = markupProvider.getMarkupStream();
	}

However during the AJAX call back Fragment.getAssociatedMarkupStream() is called and it only has 

	if (markupProvider != null)
	{
		stream = markupProvider.getAssociatedMarkupStream(false);
	}

If I add the ""if (stream == null)"" section that chooseMarkupStream() has to the above code then AJAX calls work fine even if I pass in a ListItem as the markupProvider to a Fragment. I'm not sure if this is the correct fix as I don't know the wicket code that well. I suppose another fix might be to prohibit passing in components such as ListItems as the markupProvider or at least make the Java Docs a little clearer. 


",,,,,,,,,,,,,,,,,,,13/Oct/07 19:18;johnray;quickstart.zip;https://issues.apache.org/jira/secure/attachment/12367702/quickstart.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-13 14:03:50.495,,,no_permission,,,,,,,,,,,202040,,,Sat Dec 01 09:30:43 UTC 2007,,,,,,0|i0kh6f:,117600,,,,,,,,13/Oct/07 14:03;knopp;Can you please provide a quickstart for this?,"13/Oct/07 19:18;johnray;I've attached a simple quick start page. Simply add this to your application

  mountBookmarkablePage(""/test.html"", quickstart.MarkupNotFound.class);

My original problem involved putting a fragment inside a ListItem but I simplified the example by putting it inside a form.","17/Oct/07 00:19;seitz;the problem is, that the markup is not associated with the form but rather with the page.
so instead of 
if ((stream == null) && (getParent() != null))
{
	stream = getParent().getAssociatedMarkupStream();
}

we could do:
steam = getParent().getMarkupStream()

or find the associated markupstream somewhere in the hierarchy above the fragment:

MarkupContainer parent = getParent();
while ((stream == null) && (parent != null))
{
	stream = parent.getAssociatedMarkupStream();
	parent = parent.getParent();
}

Matej, wdyt?",01/Dec/07 09:30;jdonnerstag;thanks. should be fixed,,,,,,,,,,,,,,,,,,,,
MarkupCache::getMarkupStream and forceReload always to false,WICKET-1182,12383057,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,sbailliez,sbailliez,22/Nov/07 11:51,26/Nov/07 20:50,13/Mar/19 23:15,26/Nov/07 20:50,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"Following the markup reloading trail, I bumped into:

MarkupContainer::getAssociatedMarkup(boolean throwsException) does:

            return
getApplication().getMarkupSettings().getMarkupCache().getMarkupStream(this,
                    false, throwException);

So the 'forceReload' is set to false here. Always. which is ok but...then

Going on call deeper on MarkupCache::getMarkupStream(...boolean forceReload, ...)

it's calling:

// Look for associated markup
final Markup markup = getMarkup(container, container.getClass(), false);

the parameter forceReload is ignored (and actually unused) and calling the getMarkup with forceReload = false.

Is that really normal ? I don't find any comment in the code indicating that it could be normal and in that case it also needs to be documented in the javadoc that for this implementation the parameter is ignored
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-26 20:50:25.68,,,no_permission,,,,,,,,,,,202178,,,Mon Nov 26 20:50:25 UTC 2007,,,,,,0|i0kgtb:,117541,,,,,,,,"26/Nov/07 20:50;jdonnerstag;Thanks for the information. I changed MarkupCache.getMarkupStream to actiually use enforceReload.

",,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableLabel and AjaxMultiLineEditableLabel do not honour enabled status,WICKET-1176,12382972,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,almaw,almaw,21/Nov/07 11:59,23/Nov/07 20:57,13/Mar/19 23:15,21/Nov/07 11:59,1.3.0-rc1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket-extensions,,,,0,,,,,,,,"On AjaxEditableLabel and subclasses, setEnabled(false) has no effect.
It should prevent the component from being editable (i.e. it should behave like a normal Label).",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-11-23 20:57:42.827,,,no_permission,,,,,,,,,,,202173,,,Fri Nov 23 20:57:42 UTC 2007,,,,,,0|i0kguf:,117546,,,,,,,,21/Nov/07 11:59;almaw;Fixed in trunk.,23/Nov/07 20:57;seitz;see http://www.nabble.com/disabled-AjaxEditableMultiLineLabel-tf4849522.html,,,,,,,,,,,,,,,,,,,,,,
Ajax update on a panel caused markup outside the panel to be missing,WICKET-1087,12380743,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,kentlai,kentlai,19/Oct/07 05:54,03/Nov/07 23:51,13/Mar/19 23:15,03/Nov/07 23:51,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"I was doing an ajax content update with Wicket, replacing the entire content of a panel with another panel (different markup files).

After receiving the response, the content after the updated panel disappears.

I checked that the ajax response is correct from the Wicket Ajax Debug panel, but the Wicket client side javascript seemed to have removed all the DOM elements from the updated panel onwards.

I have replicated the issue and attached as a sample project.

The issue seemed to be caused from a <div /> tag within the first panel. Changing it from <div></div> seemed to be a work around for now, but I am unsure if there might be similar issues with other tags (imagine having to change <br /> to <br></br> and other similar tags!)","Tested with Firefox 2.0.0.7, other browsers unknown",,,,,,,,,,,,,,,,,,19/Oct/07 05:57;kentlai;WicketTest.zip;https://issues.apache.org/jira/secure/attachment/12367992/WicketTest.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-30 16:54:53.317,,,no_permission,,,,,,,,,,,202091,,,Sat Nov 03 23:51:29 UTC 2007,,,,,,0|i0kh1r:,117579,,,,,,,,"30/Oct/07 16:54;jcompagner;matej can you look at this one?
else when i have the time i will do it.","01/Nov/07 09:56;knopp;I'm affraid there is nothing we can do. The issue is caused by firefox being ""too smart"" when parsing the html. It considers the <div /> to be a <div> and treats the rest as if you forgot to close the div tag. I don't think it's right thing to do, especially not in standard compliance mode. But it does it nonetheless.

So the result is that firefox thinks that <div>footer</div> is part for the <div id=""container6"">, because it considers the <div /> to be an opening tag. 

There is one think we could do about this though. Maybe during markup parsing we could replace all <div /> tags with <div></div>","01/Nov/07 10:00;jcompagner;ok, and we don't have such a thing <div /> anywhere in our markup files that we have in wicket/extentions/examples right?
Then i think we really can't do much about it yes.
We have the policy that we don't auto expand tags. So i think this is really up to the developer. Maybe we can throw a warning somewhere?
But how do we know it? because just a <div />  is just a piece of rawmarkup? So i guess we need to do it when parsing the markup?",03/Nov/07 23:51;knopp;Added a markup filter that replaces certain open-close tags with open + close pair.,,,,,,,,,,,,,,,,,,,,
wicketShow and wicketHide don't check for existence of element before setting display,WICKET-1011,12379066,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,iragsdale,iragsdale,25/Sep/07 23:27,01/Nov/07 09:41,13/Mar/19 23:15,01/Nov/07 09:41,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"If for some reason the element doesn't exist, wicket throws a javascript exception.  This can happen if using an ajaxindicatingfallbacklink in an element that gets removed.  

For instance, if you have a list of items that you want to delete via ajax, and you have a delete button on each with an indicator,  when the item is successfully deleted, the call to hide the indicator throws an exception.  This seems like it should work without an error, and would be easily avoided with a simple check that e exists.  Something like the following would be really easy:

function wicketHide(id) {
     var e=wicketGet(id);
     if ( e ) {
        e.style.display = ""none"";
     }
}

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:49:56.704,,,no_permission,,,,,,,,,,,202019,,,Thu Nov 01 09:41:07 UTC 2007,,,,,,0|i0kh87:,117608,,,,,,,,16/Oct/07 06:49;ehillenius;Assigned version (beta 4),01/Nov/07 09:41;knopp;Fixed in 1.3. ,,,,,,,,,,,,,,,,,,,,,,
Text not visible in Wicket Ajax Debug window,WICKET-1037,12379581,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,interface,interface,03/Oct/07 15:40,13/Oct/07 14:17,13/Mar/19 23:15,13/Oct/07 14:17,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,"The Wicket Ajax Debug (WAD) window has a background color set to white but the font color is not set (in wicket-ajax-debug.js) - it uses the base page defaults. So when I have in css for my page setting like this: body {color: #FFFFFF;} the text in WAD is not visible.

Suggested solution: maybe add somewhere in wicket-ajax-debug.js setting: ""color: black;""",,,,,,,,,,,,,,,,,,,08/Oct/07 08:18;interface;wicket-ajax-debug.js;https://issues.apache.org/jira/secure/attachment/12367238/wicket-ajax-debug.js,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-06 19:59:46.23,,,no_permission,,,,,,,,,,,202043,,,Wed Oct 10 09:18:02 UTC 2007,,,,,,0|i0kh5z:,117598,,,,,,,,06/Oct/07 19:59;ivaynberg;patch?,"08/Oct/07 08:18;interface;Modified wicket-ajax-debug.js file (Wicket Ajax Debug window code) - I've added ""color: black;"" in 3 places inside the code to specify black color for text inside div elements for debug logs.",10/Oct/07 09:18;interface;I have attached a patched version of wicket-ajax-debug.js file.,,,,,,,,,,,,,,,,,,,,,
ExternalLink doesn't use model,WICKET-1016,12379163,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,tauren,tauren,27/Sep/07 05:17,03/Oct/07 17:02,13/Mar/19 23:15,03/Oct/07 17:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"I don't understand why ExternalLink doesn't store the external href as
the model.  It stores it in an href property.  It seems to not follow
the normal wicket way.

This makes it difficult to do things like display a link only if the
model is not null.  For instance:

add(new ExternalLink(""web"", new PropertyModel(service,""web"")) {
       @Override
       public boolean isVisible() {
               return getModelObject() != null;
       }
});

The problem is that getModelObject() is always null, because the
PropertyModel is stored in the href property.  And since isVisible()
is part of Component, the href property isn't accessible.
",,,,,,,,,,,,,,,,,,,27/Sep/07 21:13;funkattack;ExternalLink.patch;https://issues.apache.org/jira/secure/attachment/12366697/ExternalLink.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-27 21:13:50.418,,,no_permission,,,,,,,,,,,202024,,,Sun Sep 30 20:52:09 UTC 2007,,,,,,0|i0kh7j:,117605,,,,,,,,"27/Sep/07 21:13;funkattack;Hi,

would you mind testing the attached patch ExternalLink.patch to see if it meets you needs?

If it does praise about it.","28/Sep/07 00:16;tauren;Martin,

That patch works for me!  However, eclipse complained of an error (not a warning) in ExternalLinkPage_2.java:

The serializable class  does not declare a static final serialVersionUID field of type long	wicket/src/test/java/org/apache/wicket/markup/html/link	ExternalLinkPage_2.java	line 31	

Once I added serialVersionUID to the anonymous class, the error went away:

	public ExternalLinkPage_2()
	{
		add(new ExternalLink(""myLink"", new Model(null))
		{
			private static final long serialVersionUID = 1L;

			public boolean isVisible()
			{
				return getModelObject() != null;
			}
		});
	}

I thought this was strange because I normally get warnings about serialVersionUID, but in this case it was an error.

BTW, there was some discussion on the mailing list about ExternalLink models:
http://www.nabble.com/text-in-Link-vs-ExternalLink-tf939840.html#a2435084

I look forward to you committing this to trunk.

Thanks again!
Tauren

","28/Sep/07 07:36;funkattack;Hi Tauren,

the error I can't reproduce. I only see the warning.
Looks like I've been coding without reading, maybe I'll comeup with something else on the weekend.

Btw, its not me, its them, who could commit. I'm just doing finger excercises here.

Martin","30/Sep/07 20:52;funkattack;Coming up with something else.

Your needs can be achieved like this:

public class ExternalLinkPage_1 extends WebPage
{
	private static final long serialVersionUID = 1L;

	private final String href = ""http://wicket.apache.org"";

	/**
	 * Construct.
	 */
	public ExternalLinkPage_1()
	{
		add(new ExternalLink(""myLink"", new PropertyModel(this, ""href""))
		{
			public boolean isVisible()
			{
				return ExternalLinkPage_1.this.href.equals(""http://wicket.apache.org"");
			}
		});
	}
}

Just wrap your href our label in to a PropertyModel, that way they are well reachable from the outside of the ExternalLink.
When ExternalLink is used as an anonymous class href an label are well reachable too, as shown above.
Other ways of using it, or even extending it, I don't quite see.

My guessing on why ExternalLink is implemented like that would be, that ists the simplest possible way to do the job.
It is so minimal that a derived ExternalLink can't even get a glimpse on its own internals from the inside, but it has to fall
back on the class were it was anonymously defined in. Verry minimalistic.
It's just not a real Wicket Link, it is external to the extend that the application doesn't notice when the user clicks it.

I'd say, ask em to close this bug.",,,,,,,,,,,,,,,,,,,,
Misleading  EnclosureResolver javadoc and wiki,WICKET-1001,12378965,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,kadirsener,kadirsener,24/Sep/07 08:45,24/Sep/07 21:53,13/Mar/19 23:15,24/Sep/07 21:53,1.3.0-beta1,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"When you look at the javadoc of EnclosureResolver, it is written that:  ""As this is no default resolver, it must be added manually"".  In addition to ""<wicket:enclosure>"" description in the wiki page (http://cwiki.apache.org/WICKET/wickets-xhtml-tags.html) says :  ""To use this feature you need to register EnclosureResolver and EnclosureHandler. To do this, add
the following lines to you Application class init method""

But Application and MarkupParser classes was implemented it already:  
- org.apache.wicket.Application.java (line 918)  
- org.apache.wicket.markup.MarkupParser.java (line 186) 

So no need to register this feature manually else.  Please update javadoc and wiki page.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202009,,,2007-09-24 08:45:39.0,,,,,,0|i0kh8v:,117611,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MockWebApplication should use PageFactory from given WebApplication.,WICKET-984,12378589,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,lenzenc,lenzenc,18/Sep/07 19:40,19/Sep/07 05:19,13/Mar/19 23:15,19/Sep/07 05:19,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"I came across the following code in the MockWebApplication;

                               else if (target instanceof IBookmarkablePageRequestTarget)
                               {
                                       // create a new request cycle for the newPage call
                                       createRequestCycle();
                                       IBookmarkablePageRequestTarget pageClassRequestTarget =
(IBookmarkablePageRequestTarget)target;
                                       Class pageClass = pageClassRequestTarget.getPageClass();
                                       PageParameters parameters = pageClassRequestTarget.getPageParameters();
                                       if (parameters == null || parameters.size() == 0)
                                       {
                                               newLastRenderedPage = new DefaultPageFactory().newPage(pageClass);
                                       }
                                       else
                                       {
                                               newLastRenderedPage = new DefaultPageFactory().newPage(pageClass,
                                                               parameters);
                                       }
                               }

This code block was contained in the method ""generateLastRenderedPage(WebRequestCycle cycle)"".

A new instance of DefaultPageFactory should not be used rather it should use the one configured on the WebApplication passed in the constructor of MockWebApplication.  This issue is if a use relies on their own implementation of PageFactory there unit tests will fail because it is not being used. ",This bug is not specific to environment.,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-19 05:19:12.272,,,no_permission,,,,,,,,,,,201993,,,Wed Sep 19 05:19:12 UTC 2007,,,,,,0|i0khb3:,117621,,,,,,,,19/Sep/07 05:19;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
Wicket:message texts do not change when session locale chages.,WICKET-936,12377651,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,szocske,szocske,06/Sep/07 12:33,07/Sep/07 06:24,13/Mar/19 23:15,07/Sep/07 06:22,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"The text displayed by a wicket:message does not change when the locale of the session changes.

In our own code, we get the same behavior when doing a resourceBoundle.getString(key) in the constructor of a label, as opposed to using a new StringResourceModel(key) as the model.","Should not matter, found on debian + glassfish",,,,,,,,,,,,,,,,,,07/Sep/07 06:21;ivaynberg;mylyn-context.zip;https://issues.apache.org/jira/secure/attachment/12365323/mylyn-context.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-09-07 06:21:32.605,,,no_permission,,,,,,,,,,,201949,,,Fri Sep 07 06:21:32 UTC 2007,,,,,,0|i0khfr:,117642,,,,,,,,07/Sep/07 06:21;ivaynberg;mylin context,,,,,,,,,,,,,,,,,,,,,,,
onBeforeRender not called on ModalWindow contents,WICKET-909,12377226,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,tmaeder,tmaeder,31/Aug/07 11:24,01/Sep/07 22:46,13/Mar/19 23:15,01/Sep/07 22:46,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"ModalWindow.onBeforeRender contains the following code:

		super.onBeforeRender();
		getContent().setOutputMarkupId(true);
		getContent().setVisible(shown);

This has the consequence that the content of the modal windows is still invisible when its onBeforeRender() method is called. The default implementation of onBeforeRender delegates to the window's children beforeRender() method. However, the contents beforeRender() method first checks if the component is visible, which is not the case, so the onBeforeRender()  call is not propagated down the component tree. 
This is a problem if the content of the modal window is something like a table, which populates itself in the onBeforeRender call. ","Tomcat 5.5.1
Windows
Eclipse + wtp",,,,,,,,,,,,,,,,,,31/Aug/07 11:26;tmaeder;TestModal.zip;https://issues.apache.org/jira/secure/attachment/12364880/TestModal.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-31 12:01:31.137,,,no_permission,,,,,,,,,,,201925,,,Fri Aug 31 18:02:48 UTC 2007,,,,,,0|i0khi7:,117653,,,,,,,,"31/Aug/07 11:26;tmaeder;I've made this little example which shows the problem.

1) Start the application
2) click one of the ""show x lines"" links
3) observe: the resulting dialog is empty
4) close the dialog
5) click one of the ""show x lines"" links
6) observe: the dialog shows the correct number of lines",31/Aug/07 11:27;tmaeder;I haven't figured out why it works the second time.,"31/Aug/07 12:01;jcompagner;yeah, this is because of the behavior change i committed so that onBeforeRender is not called on none visible components

The modal window should do the onBeforeRender as a last statement, does this have any other drawbacks Matej?",31/Aug/07 18:02;knopp;I don't know about any. Will try it this weekend.,,,,,,,,,,,,,,,,,,,,
Invoking a request listener on a page returns an Expired Error page,WICKET-707,12372565,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,pablo72,pablo72,28/Jun/07 06:42,01/Sep/07 21:56,13/Mar/19 23:15,01/Sep/07 21:56,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"The Page object being a Component should support the Wicket request listener mechanism. 

But invoking a request listener on page defined listener object it results in a ""Page Expired"" error page. 

To reproduce it  try the following code:

public interface IHelloListener extends IRequestListener
{
        public static final RequestListenerInterface INTERFACE = new RequestListenerInterface(IHelloListener.class);

        void onHello();
}


public class HelloWorld extends WebPage implements IHelloListener
{
        public HelloWorld()
        {
                add(new Label(""message"", ""Hello World!""));
                WebMarkupContainer link = new WebMarkupContainer(""link"");
                link.add(new SimpleAttributeModifier(""href"", RequestCycle.get().urlFor(this, IHelloListener.INTERFACE)));
                add(link);
        }

        public void onHello()
        {
                RequestCycle.get().setRequestTarget(new IRequestTarget()
                {
                        public void detach(RequestCycle requestCycle)
                        {
                        }

                        public void respond(RequestCycle requestCycle)
                        {
                                requestCycle.getResponse().write(""<html><body>HELLO!</body></html>"");
                        }
                        
                        public Object getLock(RequestCycle requestCycle) {
                                return null;
                        }


                });
        }
}",,,,,,,,,,,,,,,WICKET-734,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 14:11:35.882,,,no_permission,,,,,,,,,,,201739,,,Sat Sep 01 21:51:52 UTC 2007,,,,,,0|i0ki53:,117756,,,,,,,,21/Aug/07 14:11;jbq;Looks reasonable to do for the next release,"31/Aug/07 04:35;ivaynberg;problem here is not that the page cannot implement the listener - that works fine, the problem is that our stateless processing is jacked up.

here is what happens in the example

index() executes
  urlfor(ihellolistenercalled)
    page.setpagestateless(false) <== good
page.renderpage()
 :856 // Reset it to stateless so that it can be tested again <== not good because it erases the previous set flag
  .. render ...
  :946 rest of stateless processing

so the problem is that the render method actually resets the stateless flag, so unless you always call urlfor during render phase a stateful page might be marked stateless and therefore when that link is executed the page wont be found in pagemap - thus pageexpired.

so looks like we need a ""hard"" stateless flag that the render wont reset

matej you know stateless stuff better then me so i am assigning it to you

",01/Sep/07 21:51;knopp;I think valid solution to this is to remove the stateless flag when it's true. So when user/urlFor specifically request statefull page we honor that. ,,,,,,,,,,,,,,,,,,,,,
setStripComments corrupts other HTML tags,WICKET-894,12376928,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,snekoval,snekoval,27/Aug/07 11:58,01/Sep/07 06:20,13/Mar/19 23:15,01/Sep/07 06:20,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"Example, for markup :
<meta name=""generator"" content=""WordPress"" /><!-- leave this for stats -->

Wicket strips it as follows:
<meta name=""generator"" content=""WordPress"" /

it looks like an extra tailing character is removed.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-01 06:20:22.015,,,no_permission,,,,,,,,,,,201914,,,Sat Sep 01 06:20:22 UTC 2007,,,,,,0|i0khk7:,117662,,,,,,,,01/Sep/07 06:20;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,,
Select doesn't validate 'Required',WICKET-782,12374480,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,jkriesten,jkriesten,24/Jul/07 17:35,31/Aug/07 03:45,13/Mar/19 23:15,31/Aug/07 03:45,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"
The Select-Component doesn't validate 'Required' if current user-selection points to an empty value in drop-down-mode.
","JDK 1.6u2, OpenSuSE, resin 3.1.2",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-24 21:19:42.924,,,no_permission,,,,,,,,,,,201810,,,Fri Aug 31 03:45:55 UTC 2007,,,,,,0|i0khwf:,117717,,,,,,,,"24/Jul/07 21:19;ivaynberg;i committed what i believe is the fix, but it needs to be tested","24/Jul/07 21:33;jkriesten;my case is still unresolved with this fix:

the resulting select in my case is (values entered instead of wicked-stuff):

<select id=""element13"" name=""xy"" class=""select"">
<option selected=""true"" value="""">[choose]</option>
<option value=""f"">[female]</option>
<option value=""m"">[male]</option>
</select>

this should give a validation error on post when required is set, but it doesnt.

",15/Aug/07 18:04;ivaynberg;have you tried this with latest trunk?,20/Aug/07 20:37;dashorst;Next release,"31/Aug/07 03:45;ivaynberg;i have tried it with the forminput examples, calling setrequired on siteSelection listmultiplechoice and that worked. i then changed it to dropdownchoice, and that worked fine as well.

so the problem must be somewhere in your code. if you can create a quickstart that reproduces it please reopen and attach.",,,,,,,,,,,,,,,,,,,
"Authentication example fails with ""PasswordTextField does not support cookies""",WICKET-899,12376978,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,martin-g,martin-g,28/Aug/07 08:11,29/Aug/07 06:37,13/Mar/19 23:15,29/Aug/07 06:06,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-examples,,,,0,,,,,,,,"ERROR - RequestCycle               - FormComponent class org.apache.wicket.markup.html.form.PasswordTextField does not support cookies
java.lang.UnsupportedOperationException: FormComponent class org.apache.wicket.markup.html.form.PasswordTextField does not support cookies
        at org.apache.wicket.markup.html.form.FormComponent.setPersistent(FormComponent.java:932)
        at org.apache.wicket.authentication.panel.SignInPanel.setPersistent(SignInPanel.java:195)
        at org.apache.wicket.authentication.panel.SignInPanel$SignInForm.<init>(SignInPanel.java:94)
        at org.apache.wicket.authentication.panel.SignInPanel.<init>(SignInPanel.java:143)
        at org.apache.wicket.authentication.panel.SignInPanel.<init>(SignInPanel.java:121)
        at org.apache.wicket.authentication.pages.SignInPage.<init>(SignInPage.java:49)
        at org.apache.wicket.authentication.pages.SignInPage.<init>(SignInPage.java:38)
        at org.apache.wicket.examples.authentication.MySignInPage.<init>(MySignInPage.java:35)
","http://www.wicketstuff.org/wicket13/authentication/
",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201919,,,2007-08-28 08:11:07.0,,,,,,0|i0khjb:,117658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Escape doesn't work for AjaxEditableLabel in Firefox,WICKET-520,12368404,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,bdragos,bdragos,01/May/07 18:13,28/Aug/07 23:19,13/Mar/19 23:15,28/Aug/07 23:19,1.2.5,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-extensions,,,,0,,,,,,,,"The bug only occurs in Firefox (I'm using 2.0). In IE 7 works fine. 
In wicket-example check the ""Editable Lable Example"". When the user is in edit mode and presses escape the editor is not replaced with the label component and any other AJAX request fails. Bellow is a snapshot from the AJAX debug:
....
INFO: Response parsed. Now invoking steps...
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: last focus id was not set
INFO:
INFO: Initiating Ajax GET request on 
Help?wicket:interface=:1:editableLabel:editor::IBehaviorListener:0&wicket:ignoreIfNotActive=true&save=false&random=0.5459241681095125
INFO: Invoking pre-call handler(s)...
INFO: Channel busy - postponing...

",Firefox 2.0,,,,,,,,,,,WICKET-895,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-24 18:45:15.983,,,no_permission,,,,,,,,,,,201572,,,Tue Aug 28 23:19:03 UTC 2007,,,,,,0|i0kinb:,117838,,,,,,,,"24/May/07 18:45;almaw;So it doesn't. It checks for the status of the AJAX response, which seems to be """". I think it's expecting an int. Will look into this.",15/Jun/07 01:11;almaw;Something really weird is happening here - it's like Firefox is just swallowing a perfectly good response and pretending nothing happened. Am continuing to investigate.,"08/Aug/07 15:34;almaw;<gerolf> i may have found a workaround (although you know this probably already)
<gerolf> cancelCall should return false, instead of true","28/Aug/07 23:19;ivaynberg;gerolf matej_k: can i resolve WICKET-520, as you have fixed it with the commit for WICKET-895
gerolf oh, can't resolve it myself
ivaynberg sec
ivaynberg you sure its the same issue/fixed
gerolf yep, just tested it",,,,,,,,,,,,,,,,,,,,
StringValue javadoc incorrect regrading conversion to checked exception,WICKET-705,12372518,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,ijuma,ijuma,27/Jun/07 15:29,27/Aug/07 00:46,13/Mar/19 23:15,27/Aug/07 00:46,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"Various methods in StringValue (look at toLong for an example, but there are many others) have the text:

""convert unchecked NumberFormatExceptions to checked.""

This is not true since StringValueConversionException extends ConversionException that in turn extends WicketRuntimeException. I assume that this is a case where the exception hierarchy was changed and the documentation was not updated.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 13:55:00.243,,,no_permission,,,,,,,,,,,201737,,,Tue Aug 21 13:55:00 UTC 2007,,,,,,0|i0ki5b:,117757,,,,,,,,21/Aug/07 13:55;jbq;Looks reasonable to do for the next release,,,,,,,,,,,,,,,,,,,,,,,
No scrolling behaviour of source code viewer in IE 6,WICKET-826,12375402,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,rfoerthe,rfoerthe,06/Aug/07 07:19,27/Aug/07 00:15,13/Mar/19 23:15,27/Aug/07 00:15,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-examples,,,,0,,,,,,,,The source code viewer does not display scroll bars in IE 6.,Internet Exporer 6.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 13:45:49.405,,,no_permission,,,,,,,,,,,201850,,,Mon Aug 27 00:15:24 UTC 2007,,,,,,0|i0khrz:,117697,,,,,,,,21/Aug/07 13:45;jbq;Looks reasonable to do for the next release,"22/Aug/07 17:47;almaw;Gah, I hate IE. :-(","27/Aug/07 00:15;knopp;I changed the styling. Probably not the best way, but it's working and fallbacks well for IE.",,,,,,,,,,,,,,,,,,,,,
DefaultButtonImageResource's fontAttributes field isn't serializable,WICKET-819,12375344,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,dwojtas@gmail.com,dwojtas@gmail.com,04/Aug/07 12:20,26/Aug/07 20:02,13/Mar/19 23:15,26/Aug/07 20:02,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"I started wicket-examples, it works fine - but I often get a serialization exception when starting a new game(see stacktrace below).
I press the button ""Start game"", new page loads nicely with all letter images, but I get an exception on the console.
This is repeatable.

--------------------

ERROR - Objects                    - Error serializing object class org.apache.wicket.examples.hangman.Guess [object=[Page class = org.apache.wicket.examples.hangman.Guess, id = 1, version = 0]]
org.apache.wicket.util.io.SerializableChecker$WicketNotSerializableException: Unable to serialize class: sun.font.AttributeMap
Field hierarchy is:
  1 [class=org.apache.wicket.examples.hangman.Guess, path=1]
    private java.lang.Object org.apache.wicket.MarkupContainer.children [class=[Lorg.apache.wicket.Component;]
      private java.io.Serializable org.apache.wicket.model.Model.object[3] [class=org.apache.wicket.examples.hangman.Guess$2, path=1:letters]
        private java.lang.Object org.apache.wicket.MarkupContainer.children [class=[Lorg.apache.wicket.Component;]
          private java.lang.Object org.apache.wicket.MarkupContainer.children[0] [class=org.apache.wicket.markup.html.list.ListItem, path=1:letters:0]
            private java.lang.Object org.apache.wicket.MarkupContainer.children [class=org.apache.wicket.examples.hangman.Guess$2$1, path=1:letters:0:letter]
              private java.lang.Object org.apache.wicket.MarkupContainer.children [class=org.apache.wicket.markup.html.image.Image, path=1:letters:0:letter:image]
                private final org.apache.wicket.markup.html.image.resource.LocalizedImageResource org.apache.wicket.markup.html.image.Image.localizedImageResource [class=org.apache.wicket.markup.html.image.resource.LocalizedImageResource]
                  private org.apache.wicket.Resource org.apache.wicket.markup.html.image.resource.LocalizedImageResource.resource [class=org.apache.wicket.markup.html.image.resource.DefaultButtonImageResource]
                    private java.util.Map org.apache.wicket.markup.html.image.resource.DefaultButtonImageResource.fontAttributes [class=sun.font.AttributeMap] <----- field that is not serializable
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:347)
	at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:615)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:538)
	at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:615)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:538)
	at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:615)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:538)
	at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:615)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:538)
	at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:615)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:538)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:393)
	at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:615)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:538)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:393)
	at org.apache.wicket.util.io.SerializableChecker.checkFields(SerializableChecker.java:615)
	at org.apache.wicket.util.io.SerializableChecker.check(SerializableChecker.java:538)
	at org.apache.wicket.util.io.SerializableChecker.writeObjectOverride(SerializableChecker.java:683)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:322)
	at org.apache.wicket.util.io.IObjectStreamFactory$1.writeObjectOverride(IObjectStreamFactory.java:74)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:322)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1101)
	at org.apache.wicket.protocol.http.FilePageStore.serializePage(FilePageStore.java:711)
	at org.apache.wicket.protocol.http.FilePageStore.access$900(FilePageStore.java:58)
	at org.apache.wicket.protocol.http.FilePageStore$PageSerializingThread.run(FilePageStore.java:245)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.io.NotSerializableException: sun.font.AttributeMap
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1156)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
	at org.apache.wicket.util.io.IObjectStreamFactory$1.writeObjectOverride(IObjectStreamFactory.java:66)
	... 6 more
","Windows XP, Java 6, wicket 1.3-beta2, jetty 6",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-05 18:11:10.772,,,no_permission,,,,,,,,,,,201845,,,Sun Aug 26 20:02:04 UTC 2007,,,,,,0|i0khsn:,117700,,,,,,,,"05/Aug/07 18:11;almaw;fontAttributes in DefaultButtonImageResource is a Map. The map is populated in setFont() to contain font.getAttributes(). Unfortunately that's a sun.font.AttributeMap, which isn't serializable. :-(",20/Aug/07 20:37;dashorst;Next release,26/Aug/07 20:02;knopp;Use a HashMap instead.,,,,,,,,,,,,,,,,,,,,,
AbstractRequestTargetUrlCodingStrategy ignores query parameters if there is no parameter in the path,WICKET-611,12370781,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,freemant,freemant,03/Jun/07 13:31,26/Aug/07 18:09,13/Mar/19 23:15,26/Aug/07 18:09,1.2.6,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"In AbstractRequestTargetUrlCodingStrategy in the decodeParameters() method, if there is no parameter specified in the path such as http://localhost:8080/Hello/app/foo?p1=def (assuming the page has been mounted as /foo), then it will immediately return an empty map, ignoring the possible query parameters (p1):

	protected ValueMap decodeParameters(String urlFragment, Map urlParameters)
	{
		// Hack off any leading slash
		if (urlFragment.startsWith(""/""))
		{
			urlFragment = urlFragment.substring(1);
		}

		if (urlFragment.length() == 0)
		{
			return new ValueMap();  // RETURN IMMEDIATELY
		}
		...
		if (urlParameters != null)
		{
			parameters.putAll(urlParameters);  // THIS CODE IS NOT REACHED
		}
		return parameters;
	}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-20 20:37:40.937,,,no_permission,,,,,,,,,,,201649,,,Mon Aug 20 20:37:40 UTC 2007,,,,,,0|i0kidb:,117793,,,,,,,,20/Aug/07 20:37;dashorst;Next release,,,,,,,,,,,,,,,,,,,,,,,
WicketTester unusable after subsequent startPage(Page) call,WICKET-851,12376138,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,yor,yor,16/Aug/07 09:07,24/Aug/07 14:00,13/Mar/19 23:15,24/Aug/07 14:00,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,When adding two unit-tests to the WicketTesterTest for issue WICKET-848 I ran into the following problem (see patch).,,,,,,,,,,,,,,,,,,,16/Aug/07 09:08;yor;wickettestertestfailure.patch;https://issues.apache.org/jira/secure/attachment/12363916/wickettestertestfailure.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-20 20:37:39.457,,,no_permission,,,,,,,,,,,201874,,,Fri Aug 24 14:00:54 UTC 2007,,,,,,0|i0khpj:,117686,,,,,,,,20/Aug/07 20:37;dashorst;Next release,"24/Aug/07 12:55;jbq;Use startPage(Class) or create your instances of Page within a request cycle (tester.createRequestCycle()), as creating a page ensures that a page map is stored in a session attribute.","24/Aug/07 13:05;yor;That sounds more like a workaround (?) 
Although using startPage(Class) works, IMHO it is not right the framework throws an exception when you call startPage(Page) subsequently.

Could I get a second opinion on this?

btw. I'm not trying to bug you guys, just trying to make a better framework, don't get me wrong.",24/Aug/07 14:00;jbq;Improved error message to point to tester.createRequestCycle().  Thanks for reporting!,,,,,,,,,,,,,,,,,,,,
WicketTester.startPage(Page) doesn't validate the HTML,WICKET-848,12376035,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,yor,yor,15/Aug/07 10:44,23/Aug/07 17:07,13/Mar/19 23:15,16/Aug/07 08:57,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"I found something strange in this simple test I wrote. When experementing with the method of calling the wicketTester.startPage (with class of pageobject) I found that outcomes may vary. The Testpage_2.java only has a simple label BUT the Testpage_2.html has a deliberate HTML error.

public class WicketTesterHTMLFailureTest extends TestCase {

	public void test() throws ServletException {
		WicketTester wicketTester = new WicketTester();
		//When you call the test with *.class it generates a MarkupException
		//wicketTester.startPage(TestPage_2.class);

		//When this is called the whole test is ok, it doesn't find the HTML error (!!)
		wicketTester.startPage(new TestPage_2());

		wicketTester.assertRenderedPage(TestPage_2.class);
	}
}

This is very strange, and probably a bug. ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-15 21:29:41.679,,,no_permission,,,,,,,,,,,201871,,,Thu Aug 23 17:07:14 UTC 2007,,,,,,0|i0khpr:,117687,,,,,,,,"15/Aug/07 10:45;yor;I found that adding this code fixes the problem, could somebody verify this for me?

	public void processRequestCycle(final Component component)
	{
		setupRequestAndResponse();
		WebRequestCycle cycle = new WebRequestCycle(wicketSession, wicketRequest, wicketResponse);
		cycle.request(component);

		if (component instanceof Page)
		{
			this.lastRenderedPage = (Page)component;
			//Added code for WICKET-848
			generateLastRenderedPage(cycle);
			Session.set(getWicketSession());
			if (getLastRenderedPage() instanceof ExceptionErrorPage)
			{
				throw (RuntimeException)((ExceptionErrorPage)getLastRenderedPage()).getThrowable();
			}
			//End added code
		}
	}","15/Aug/07 10:59;yor;Whoops no, this doesn't completly solve it.

It does throw a MarkupException when the page is invalid, but it also creates errors when the page IS valid.","15/Aug/07 11:13;yor;It seems that when I do this:

wicketTester.startPage(new TestPage_2()); 
wicketTester.assertRenderedPage(TestPage_2.class); 

With a valid WebPage:

public class TestPage_2 extends WebPage
{
	public TestPage_2()
	{
		add(new Label(""test"",""testlabel""));
	}
}

And a valid HTML-page:

<html xmlns:wicket>
<body>
  <span wicket:id=""test"">test label</span>
</body>
</html>

It generates this servletResponse:

<p>WicketMessage: The component(s) below failed to render. A common problem is that you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered).</p><p>1. [Component id = test, page = wicket.TestPage_2, path = 0:test.Label, isVisible = true, isVersioned = true]<br/>2. [MarkupContainer [Component id = _&lt;body&gt;, page = wicket.TestPage_2, path = 0:_&lt;body&gt;.HtmlBodyContainer, isVisible = true, isVersioned = true]]</p><p>Root cause:</p><p>wicket.WicketRuntimeException: The component(s) below failed to render. A common problem is that you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered).</p><p>1. [Component id = test, page = wicket.TestPage_2, path = 0:test.Label, isVisible = true, isVersioned = true]<br/>2. [MarkupContainer [Component id = _&lt;body&gt;, page = wicket.TestPage_2, path = 0:_&lt;body&gt;.HtmlBodyContainer, isVisible = true, isVersioned = true]]</p><p>     at wicket.Page.checkRendering(Page.java:1107)<br/>     at wicket.Page.endComponentRender(Page.java:430)<br/>     at wicket.request.target.component.ComponentRequestTarget.respond(ComponentRequestTarget.java:77)<br/>     at wicket.request.compound.DefaultResponseStrategy.respond(DefaultResponseStrategy.java:49)<br/>     at wicket.request.compound.AbstractCompoundRequestCycleProcessor.respond(AbstractCompoundRequestCycleProcessor.java:66)<br/>     at wicket.RequestCycle.doProcessEventsAndRespond(RequestCycle.java:902)<br/>     at wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:929)<br/>     at wicket.RequestCycle.step(RequestCycle.java:1010)<br/>     at wicket.RequestCycle.steps(RequestCycle.java:1084)<br/>     at wicket.RequestCycle.request(RequestCycle.java:500)<br/>     at wicket.RequestCycle.request(RequestCycle.java:478)<br/>     at wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:294)<br/>     at wicket.util.tester.WicketTester.startPage(WicketTester.java:260)<br/>     at wicket.WicketTesterHTMLFailureTest.test(WicketTesterHTMLFailureTest.java:13)<br/>     at java.lang.reflect.Method.invoke(Unknown Source)<br/>     at junit.framework.TestCase.runTest(TestCase.java:154)<br/>     at junit.framework.TestCase.runBare(TestCase.java:127)<br/>     at junit.framework.TestResult$1.protect(TestResult.java:106)<br/>     at junit.framework.TestResult.runProtected(TestResult.java:124)<br/>     at junit.framework.TestResult.run(TestResult.java:109)<br/>     at junit.framework.TestCase.run(TestCase.java:118)<br/>     at junit.framework.TestSuite.runTest(TestSuite.java:208)<br/>     at junit.framework.TestSuite.run(TestSuite.java:203)<br/>     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)<br/>     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)<br/>     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)<br/></p>

It seems where are more bugs in the startPage(Page)..... (!?!?) 

Could somebody please clarify this?","15/Aug/07 11:28;yor;It gets stranger, when I do getServletResponse().getDocument() it actually shows:

<html xmlns:wicket>
<body>
  <span wicket:id=""test"">testlabel</span>
</body>
</html><!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
        ""http://www.w3.org/TR/html4/loose.dtd"">
<html>
<head>
<title>Unexpected RuntimeException</title>
<style type=""text/css"">
body {margin-left : 2em;font-family: 'Lucida Sans', 'Helvetica', 'Sans-serif', 'sans';font-size: 9pt;line-height: 1.8em;}
h1,h2,h3,h4,h5,h6,h7,h8 {color: #E9601A;}
h1 {font-size : 1.5em;}
h2 {font-size : 1.2em;}
pre, table, td { font-family : 'MS Trebuchet', 'Verdana', Arial, Helvetica; font-size : 10pt; line-height:1.2em;}
pre { border : 1px solid #ddd; margin-left : 2em; }
.resource { color : blue; }
.componenttree { margin-left : 2em; border : 1px solid #ddd; }
.componenttree { padding : 10px; } 
.componenttree th { border-bottom : 1px solid #ddd; }
td > pre { padding : 10px; }
</style>
</head>
<body>
	<h1>Unexpected RuntimeException</h1>
	<table ><tr><td><pre><span wicket:id=""exception""><p>WicketMessage: --see above--<br/></p></span></pre></td></tr></table>
	<p>
	<span wicket:id=""componentTree""/>
	</p>
</body>
</html>

So it does render my page completely but also throws in a extra error-message.
","15/Aug/07 21:21;yor;Ah, the second problem is a general problem with startPage(Page). It is solved in WICKET-381. 
I'll check to see if 1.3 also has this problem, then my code above might need to be added.

That code is also duplicated in another function, so we'd better rewrite it a little bit, the tester needs to be cleaned up.","15/Aug/07 21:29;ivaynberg;if there is an error, and an error page is rendered, then getlastrenderedpage() should return that error page. if it does that, then your assert will properly fail. so that is what we need to fix.","15/Aug/07 21:37;yor;Well, in 1.2.6 (haven't looked in 1.3) the code for 'processRequestCycle(final Component component)' doesn't process the lastgeneratedpage and it also doesn't check if it is a errorpage. This is what I added in the first comment. That worked but I had doubts because I ran into another bug (WICKET-381).

I'll check what 1.3 does tomorrow and then create a patch with new code and a test for it.","16/Aug/07 08:57;yor;This bug is already fixed in 1.3. So for me its no longer a issue, I'll resolve it.",23/Aug/07 17:07;jbq;This was probably fixed before beta 3 then.,,,,,,,,,,,,,,,
"ignore white space in web.xml filter, filtermapping",WICKET-870,12376576,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,stefanw,stefanw,22/Aug/07 10:13,22/Aug/07 14:33,13/Mar/19 23:15,22/Aug/07 11:33,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"1.3 does not ignore whitespace around xml tag content any more in <servlet-name>, <filter-name> and <url-pattern>
More XML tags could be affected!

Please change parsing or add a trim() in WicketFilter#getFilterPath for filterName, encounteredFilterName and urlPattern before searching matches with equals(), startsWith, endsWith:

in WicketFilter.java line 483 
				if (filterName.equals(encounteredFilterName))
					urlPatterns.add(urlPattern);

 in WicketFilter.java line 501
			// Check for leading '/' and trailing '*'.
			if (!urlPattern.startsWith(""/"") || !urlPattern.endsWith(""*""))
			{
				throw new IllegalArgumentException(""<"" + mapping + ""> for Wicket"" + prefixUppered
						+ "" \"""" + filterName + ""\"" must start with '/' and end with '*'."");
			}



",java1.5 / tomcat 5.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-22 11:33:48.572,,,no_permission,,,,,,,,,,,201892,,,Wed Aug 22 14:33:51 UTC 2007,,,,,,0|i0khnz:,117679,,,,,,,,"22/Aug/07 11:33;jbq;Fixed, thanks for reporting!","22/Aug/07 11:58;almaw;Your patch [1] only trims the url pattern. Is this sufficient? Bug report claims this is required for filter name, servlet name, etc.

[1] http://svn.apache.org/viewvc?rev=568568&view=rev ","22/Aug/07 14:33;jbq;Thanks AlMaw, I completed the fix.",,,,,,,,,,,,,,,,,,,,,
Javadocs for AbstractDefaultAjaxBehaviorPrecondition#getSuccessScript() and #getPreconditionScript() are swapped,WICKET-846,12376017,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,memeplex,memeplex,15/Aug/07 03:19,21/Aug/07 13:45,13/Mar/19 23:15,21/Aug/07 13:45,1.3.0-beta2,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"Precondition and success description are swapped:

	/**
	 * @return javascript that will run when the ajax call finishes
	 *            successfully
	 */
	protected CharSequence getPreconditionScript()
	{
		return null;
	}

	/**
	 * @return an optional javacript expression that determines whether the request
	 *            will actually execute (in form of return XXX;);
	 */
	protected CharSequence getSuccessScript()
	{
		return null;
	}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 13:45:14.524,,,no_permission,,,,,,,,,,,201869,,,Tue Aug 21 13:45:14 UTC 2007,,,,,,0|i0khq7:,117689,,,,,,,,"21/Aug/07 13:45;jbq;Fixed, thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,,
PasswordTextField.setResetPassword(false) not honoring input when form has errors,WICKET-793,12374606,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,msandori,msandori,26/Jul/07 04:21,15/Aug/07 20:52,13/Mar/19 23:15,15/Aug/07 20:52,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"When a PasswordTextField has resetPassword=false and a form is submitted with errors, then the user provided input is not honored and the model's value is returned instead.

This is because in onComponentTag, getModelObjectAsString() is used instead of getValue() (which is what is used in TextField) or getModelValue():

protected final void onComponentTag(final ComponentTag tag)
{
	super.onComponentTag(tag);
	tag.put(""value"", getResetPassword() ? """" : getModelObjectAsString());
}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201821,,,2007-07-26 04:21:50.0,,,,,,0|i0khvj:,117713,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MixedParamUrlCodingStrategy : no symmetric url encoding/decoding,WICKET-739,12373435,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,dwayneb,dwayneb,10/Jul/07 17:28,03/Aug/07 15:24,13/Mar/19 23:15,03/Aug/07 15:24,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"I use MixedParamUrlCodingStrategy for BookmarkablePageLink where the first parameter is a String, an human label.
And I've got a bug, bad url when I try to link something like ""histoire de l'art"".

During my investigation I found that there is no symmetry between the encoding/decoding of the urlFragment : decodeParameters doesn't decode (urldecode) the fragment of the path.",wicket-1.3.0-incubator (from maven rep http://wicketstuff.org/maven/repository/),,,,,,,,,,,,,,,,,,10/Jul/07 17:43;almaw;MixedParamUrlCodingStrategyTest.java;https://issues.apache.org/jira/secure/attachment/12361514/MixedParamUrlCodingStrategyTest.java,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-08-03 15:24:07.556,,,no_permission,,,,,,,,,,,201770,,,Fri Aug 03 15:24:07 UTC 2007,,,,,,0|i0ki1b:,117739,,,,,,,,"03/Aug/07 15:24;jbq;Fixed, thanks for reporting.  I couldn't use the test case however, I modified the existing MixedParamUrlCodingStrategyTest instead.",,,,,,,,,,,,,,,,,,,,,,,
Image does not regenerate its LocalizedImageResource resource/resourceReference when you call setModel(),WICKET-720,12372972,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,muffl0n,muffl0n,04/Jul/07 07:06,02/Aug/07 16:07,13/Mar/19 23:15,02/Aug/07 16:06,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,Changing the source (model) of an image in an AjaxFallbackLink does not change the image shown on the webpage.,,,,,,,,,,,,,,,,,,,04/Jul/07 07:06;muffl0n;ImageChangePage.html;https://issues.apache.org/jira/secure/attachment/12361120/ImageChangePage.html,04/Jul/07 07:06;muffl0n;ImageChangePage.java;https://issues.apache.org/jira/secure/attachment/12361119/ImageChangePage.java,04/Jul/07 07:07;muffl0n;ImageChangePageTest.java;https://issues.apache.org/jira/secure/attachment/12361122/ImageChangePageTest.java,,,,,,3.0,,,,,,,,,,,,,,,,,,,2007-07-05 10:25:51.106,,,no_permission,,,,,,,,,,,201752,,,Thu Aug 02 16:06:31 UTC 2007,,,,,,0|i0ki3r:,117750,,,,,,,,"04/Jul/07 07:10;muffl0n;""Unfortunately"" the Test (ImageChangePageTest.java) works and shows no error. But testing the ImageChangePage ""in real"" does not work.

When debugging the model get's set to the new value. But the Ajax Debug Window shows the old value being sent over and over again:
INFO: focus set on imageToggle1
INFO:
INFO: Initiating Ajax GET request on ?wicket:interface=:5:imageToggle::IBehaviorListener:0:&random=0.33772988532487525
INFO: Invoking pre-call handler(s)...
INFO: Received ajax response (226 characters)
INFO:
<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><component id=""image0"" ><![CDATA[<img id=""image0"" src=""resources/wicketexample.spring.ImageChangePage/gfx/online.gif"" wicket:id=""image""></img>]]></component></ajax-response>
INFO: Response parsed. Now invoking steps...
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: Calling focus on imageToggle1
INFO: focus set on imageToggle1
INFO:
INFO: Initiating Ajax GET request on ?wicket:interface=:5:imageToggle::IBehaviorListener:0:&random=0.028128668642927623
INFO: Invoking pre-call handler(s)...
INFO: Received ajax response (226 characters)
INFO:
<?xml version=""1.0"" encoding=""UTF-8""?><ajax-response><component id=""image0"" ><![CDATA[<img id=""image0"" src=""resources/wicketexample.spring.ImageChangePage/gfx/online.gif"" wicket:id=""image""></img>]]></component></ajax-response>
INFO: Response parsed. Now invoking steps...
INFO: Response processed successfully.
INFO: Invoking post-call handler(s)...
INFO: Calling focus on imageToggle1",05/Jul/07 10:25;almaw;I'll take this.,"02/Aug/07 16:02;almaw;AJAX is a complete red herring - the behaviour is the same if you use a normal Link.

The issue here is that you're rendering the Image and you're then calling setModel() on it at a later date, changing the backing model for that object. This is a very peculiar thing to do. You should almost certainly be calling setModelObject() instead.

However, it's a valid use case, if an odd one. Am working on a fix right now.",02/Aug/07 16:06;almaw;Fixed in r562158.,,,,,,,,,,,,,,,,,,,,
Calling setCacheable(false) on WebResource don't change header properties in WebResponse,WICKET-750,12373651,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,pcoq,pcoq,12/Jul/07 16:20,01/Aug/07 09:11,13/Mar/19 23:15,01/Aug/07 09:11,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"It's missing ""else"" parts in the method org.apache.wicket.markup.html.WebResource.setHeaders(WebResponse response) like a response.setHeader(""Cache-Control"", ""no-cache, must-revalidate"");

protected void setHeaders(WebResponse response)
{
   if (isCacheable())
   {
       // If time is set also set cache headers.
      response.setDateHeader(""Expires"", System.currentTimeMillis() + (3600 * 1000));
      response.setHeader(""Cache-Control"",""max-age="" + 3600);
   }
}",Linux Ubuntu / Eclipse 3.2 / jdk 5.0,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-01 09:11:23.703,,,no_permission,,,,,,,,,,,201780,,,Wed Aug 01 09:11:23 UTC 2007,,,,,,0|i0khzb:,117730,,,,,,,,01/Aug/07 09:11;almaw;Fixed in r561725.,,,,,,,,,,,,,,,,,,,,,,,
Session.dirty() does not cause an unbound session to bind.,WICKET-784,12374498,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ehillenius,s.crissman,s.crissman,24/Jul/07 20:15,29/Jul/07 18:42,13/Mar/19 23:15,29/Jul/07 18:42,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"If a subclass of WebSession calls dirty(), the session will not be stored unless it has previously been bound.  Users must call bind() explicitly on the session if the application is otherwise stateless, or else the change being flagged by dirty() will not be persisted (a new session will be generated for the next request).

The expected behavior is that when flagged as dirty() the session would cause itself to bind, if it wasn't already doing so.

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-24 20:36:58.739,,,no_permission,,,,,,,,,,,201812,,,Sun Jul 29 18:42:37 UTC 2007,,,,,,0|i0khw7:,117716,,,,,,,,"24/Jul/07 20:36;ehillenius;See discussion here: http://www.nabble.com/Custom-session-not-working...-tf4132685.html

I think we can summarize that we really should take a closer look at Session#dirty again for Wicket 1.4. For now, we should check what happens when bind is called multiple times. A check look at the code shows that it should be streamlined a bit.","29/Jul/07 18:42;ehillenius;Checked Session#bind and you can call it multiple times without troubles. We may reconsider for 1.4, but asking clients to call bind explicitly (rather than dirty) seems good enough.",,,,,,,,,,,,,,,,,,,,,,
Incorrect use of src/main/resources?,WICKET-802,12374889,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,gwynevans,gwynevans,28/Jul/07 18:21,28/Jul/07 20:33,13/Mar/19 23:15,28/Jul/07 20:33,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-quickstart,,,,0,,,,,,,,"We're distributing these:
    eclipse-classpath.xml
    tomcatplugin.xml
    wicket-quickstart.iml.xml
    wicket-quickstart.ipr.xml
in src/main/resources, but as I understand it, these should be in src/main/config.

In fact, src/main/resources is where we should have these:
    commons-logging.properties
    log4j.properties
which are currently in src/main/java!
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201829,,,2007-07-28 18:21:52.0,,,,,,0|i0khu7:,117707,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Constructor of Session (and subclasses) has a redundant Application parameter,WICKET-779,12374444,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,thrantal,thrantal,24/Jul/07 11:44,25/Jul/07 09:08,13/Mar/19 23:15,25/Jul/07 09:08,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Session(Application, Request) does not do anything with the Application parameter, so it would make sense to deprecate it and make a more sensible constructor Session(Request). The attached patch does just that (also for WebSession).",,,,,,,,,,,,,,,,,,,24/Jul/07 11:45;thrantal;remove-application-from-session-constructor.patch;https://issues.apache.org/jira/secure/attachment/12362423/remove-application-from-session-constructor.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201807,,,2007-07-24 11:44:45.0,,,,,,0|i0khwn:,117718,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource cleanup in WicketTester,WICKET-762,12373932,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,mrmean,mrmean,16/Jul/07 20:31,21/Jul/07 08:10,13/Mar/19 23:15,21/Jul/07 08:10,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"I just noticed that running the following minimal junittest fails.
WicketTester mock=new WicketTester();
mock.setupRequestAndResponse();
mock.processRequestCycle();
mock.destroy();
assertNull(Session.get()); //actually should throw
IllegalStateException but ....

I would expect the threadlocal Session to be gone after the request
had been processed but it is even available after the application has
been destroyed.
Or am i missing something?",Eclipse 3.3,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-21 08:10:33.604,,,no_permission,,,,,,,,,,,201791,,,Sat Jul 21 08:10:33 UTC 2007,,,,,,0|i0khxz:,117724,,,,,,,,"21/Jul/07 08:10;jdonnerstag;now unsetting the Session in Application.internalDestroy()

svn: 558266
",,,,,,,,,,,,,,,,,,,,,,,
MarkupException using <wicket:message> tags in a fragment,WICKET-721,12372973,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,huergoperez,huergoperez,04/Jul/07 07:07,16/Jul/07 13:34,13/Mar/19 23:15,06/Jul/07 05:30,1.2.6,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"When using a <wicket:message> tag in a fragment, a MarkupException is thrown.

Exception stack trace:
---------------------------------

[2007-07-04 10:05:49,937]<ERROR>[RequestCycle] Method renderComponent called on bad markup element: </div>
[markup = file:/C:/work/projects/collection/collection-webapp/target/classes/test/FragmentTestPanel.html
<html xmlns:wicket=""http://wicket.apache.org"">
<body>

<wicket:panel>
	<div wicket:id=""test"">[test fragment goes here]</div><br />
</wicket:panel>

<wicket:fragment wicket:id=""testFrag"">
	<wicket:message key=""message.test"">[test message]</wicket:message>
	<br />
	<span wicket:id=""label"">[test label]</span>
</wicket:fragment>

</body>
</html>
, index = 7, current = '</div>' (line 5, column 49)] 
org.apache.wicket.markup.MarkupException: Method renderComponent called on bad markup element: </div>
[markup = file:/C:/work/projects/collection/collection-webapp/target/classes/test/FragmentTestPanel.html
<html xmlns:wicket=""http://wicket.apache.org"">
<body>

<wicket:panel>
	<div wicket:id=""test"">[test fragment goes here]</div><br />
</wicket:panel>

<wicket:fragment wicket:id=""testFrag"">
	<wicket:message key=""message.test"">[test message]</wicket:message>
	<br />
	<span wicket:id=""label"">[test label]</span>
</wicket:fragment>

</body>
</html>
, index = 7, current = '</div>' (line 5, column 49)]
	at org.apache.wicket.markup.MarkupStream.throwMarkupException(MarkupStream.java:426)
	at org.apache.wicket.Component.renderComponent(Component.java:2089)
	at org.apache.wicket.markup.html.WebComponent.onRender(WebComponent.java:60)
	at org.apache.wicket.Component.render(Component.java:1941)
	at org.apache.wicket.Component.render(Component.java:1904)
	at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:223)
	at org.apache.wicket.markup.resolver.WicketMessageResolver.resolve(WicketMessageResolver.java:103)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1206)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1349)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1284)
	at org.apache.wicket.markup.html.panel.Fragment.renderFragment(Fragment.java:268)
	at org.apache.wicket.markup.html.panel.Fragment.onComponentTagBody(Fragment.java:198)
	at org.apache.wicket.Component.renderComponent(Component.java:2114)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1294)
	at org.apache.wicket.Component.render(Component.java:1941)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1179)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1349)
	at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:629)
	at org.apache.wicket.markup.html.panel.Panel.onComponentTagBody(Panel.java:107)
	at org.apache.wicket.Component.renderComponent(Component.java:2114)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1294)
	at org.apache.wicket.Component.render(Component.java:1941)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1179)
	at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1349)
	at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1284)
	at org.apache.wicket.Component.renderComponent(Component.java:2114)
	at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1294)
	at org.apache.wicket.Component.render(Component.java:1941)
	at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1179)
	at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1311)
	at org.apache.wicket.Page.onRender(Page.java:1422)
	at org.apache.wicket.Component.render(Component.java:1941)
	at org.apache.wicket.Page.renderPage(Page.java:927)
	at org.apache.wicket.request.target.component.PageRequestTarget.respond(PageRequestTarget.java:64)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1037)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1107)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:499)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:385)
	at org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:372)
	at org.apache.wicket.util.tester.BaseWicketTester.executeListener(BaseWicketTester.java:224)
	at org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:209)
	at org.apache.wicket.util.tester.BaseWicketTester.startPanel(BaseWicketTester.java:344)
	at test.FragmentTestCase.testFragments(FragmentTestCase.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
","Windows XP, JDK 1.5.0_11, Jetty 6",,,,,,,,,,,,,,,,,,10/Jul/07 19:14;mperham;WICKET-721_1.2.x.patch.txt;https://issues.apache.org/jira/secure/attachment/12361524/WICKET-721_1.2.x.patch.txt,04/Jul/07 07:10;huergoperez;testcase.zip;https://issues.apache.org/jira/secure/attachment/12361125/testcase.zip,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-07-06 05:30:08.385,,,no_permission,,,,,,,,,,,201753,,,Tue Jul 10 19:14:19 UTC 2007,,,,,,0|i0ki3j:,117749,,,,,,,,"04/Jul/07 07:10;huergoperez;Attached is a working test case to expose the problem.
After removing the <wicket:message> tag from the markup the test case runs fine.","06/Jul/07 05:30;jdonnerstag;SVN 553739: fixed

Please validate. It is now available in trunk.

Juergen",10/Jul/07 07:13;huergoperez;Checked with latest wicket-1.3.0-SNAPSHOT -- works OK.,"10/Jul/07 19:14;mperham;Here's a Perforce diff of the patch applied to the 1.2.x branch.  Does not include the new test cases.  It won't apply directly to SVN but if you want to push the fix to 1.2.x, it's pretty trivial to make the changes by hand.  This patch fixes the problem for us.",,,,,,,,,,,,,,,,,,,,
Component.getConverter is ignored by PropertyConverter,WICKET-525,12368540,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,idm,idm,03/May/07 10:27,16/Jul/07 13:34,13/Mar/19 23:15,08/Jun/07 18:21,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"I have a FormComponent with custom Converter:

item.setModel(new CompoundPropertyModel(data));
final TextField quantityField = new TextField(""quantity"") {
  public IConverter getConverter(Class aClass) {
    return Converters.QUANTITY;
  }
};
item.add(quantityField );

but when form submitted my QUANTITY converter wasn't used for converting right value.
PropertyResolver uses PropertyResolverConverter with current session converter implementation and ignores custom converter:

org.apache.wicket.util.convert.ConversionException: Cannot parse '3.2' using format java.text.DecimalFormat@674dc     at org.apache.wicket.util.convert.converters.AbstractConverter.newConversionException(AbstractConverter.java:74)     at org.apache.wicket.util.convert.converters.AbstractConverter.parse(AbstractConverter.java:54)     at org.apache.wicket.util.convert.converters.AbstractNumberConverter.parse(AbstractNumberConverter.java:71)     at org.apache.wicket.util.convert.converters.DoubleConverter.convertToObject(DoubleConverter.java:44)     at org.apache.wicket.util.lang.PropertyResolverConverter.convert(PropertyResolverConverter.java:67)     at org.apache.wicket.util.lang.PropertyResolver$MethodGetAndSet.setValue(PropertyResolver.java:839)     at org.apache.wicket.util.lang.PropertyResolver$ObjectAndGetSetter.setValue(PropertyResolver.java:458)     at org.apache.wicket.util.lang.PropertyResolver.setValue(PropertyResolver.java:133)     at org.apache.wicket.model.AbstractPropertyModel.setObject(AbstractPropertyModel.java:152)     at org.apache.wicket.Component.setModelObject(Component.java:2061)     at org.apache.wicket.markup.html.form.FormComponent.updateModel(FormComponent.java:724)",jdk1.4 wicket-1.3.0-incubating-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-03 15:27:46.269,,,no_permission,,,,,,,,,,,201576,,,Fri Jun 08 18:21:38 UTC 2007,,,,,,0|i0kimf:,117834,,,,,,,,"03/May/07 15:27;ehillenius;Currently, you have to supply the type to convert to in TextFields. So if you do:

final TextField quantityField = new TextField(""quantity"", Quantity.class) {
  public IConverter getConverter(Class aClass) {
    return Converters.QUANTITY;
  }
};

that should work.",03/May/07 15:28;ehillenius;We've been talking about creating our text components smarter so that they can get the target types from the models.,"08/Jun/07 18:21;knopp;Shouldn't be needed anymore, as the (Compound)PropertyModel is now capable of determining target class, so that the textfield can convert it using itself as IConverterLocator. ",,,,,,,,,,,,,,,,,,,,,
Border.resolve() should not attempt to render contents if bodyVisible is false,WICKET-695,12372346,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,skanev,skanev,25/Jun/07 13:40,16/Jul/07 13:34,13/Mar/19 23:15,10/Jul/07 04:47,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Border.resolve() should not attempt to render its nested components if setBorderBodyVisible(false) has been called. This way the behavior would be similar to Component.setVisible() - when the contents are not visible, wicket would not raise an exception if there are no corresponding components for the border's markup.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-01 06:42:02.328,,,no_permission,,,,,,,,,,,201727,,,Tue Jul 10 04:47:15 UTC 2007,,,,,,0|i0ki6n:,117763,,,,,,,,"01/Jul/07 06:42;jdonnerstag;update: This is an inconsistency, correct.. Invisible components are not rendered for performance reasons. I changed the Border code on my laptop to not render <body> components if setBorderBodyVisible(false), but I have some issues with Page.checkRendering() now which I don't know how to solve yet. The reason is that we resolve the <body> tag and its content without attaching a WebMarkupContainer to it and we are not re-assigning the border child components (insight <span wicket:id=""border""> to that body container. And what makes it even more difficuilt, components added to <wicket:border> are also children of the same Border container. We only find out at render time who is who.

Juergen","01/Jul/07 13:16;jdonnerstag;Until we find a way to solve the problems mentioned above, this is the code necessary to not render the body markup and its components

	public final boolean resolve(final MarkupContainer container, final MarkupStream markupStream,
			final ComponentTag tag)
	{
		// Determine if tag is a <wicket:body> tag
		if (!(tag instanceof WicketTag))
		{
			return false;
		}

		final WicketTag wtag = (WicketTag)tag;
		if (!wtag.isBodyTag())
		{
			return false;
		}

		final Response originalResponse;
		if (this.bodyVisible == true)
		{
			renderBodyComponent(markupStream, wtag);
		}
		else
		{
			// skip <wicket:body> component
			markupStream.skipComponent();
			
			// skip <xxx wicket:id=""myBorder"">
			Border border = findBorder();
			border.haveSeenBodyTag = true;
			final MarkupStream origBorderMarkup = border.getMarkupStream();
			border.setMarkupStream(null);
			final MarkupStream borderMarkup = border.findMarkupStream();
			borderMarkup.setCurrentIndex(borderMarkup.getCurrentIndex() - 1);
			borderMarkup.skipComponent();
			borderMarkup.setCurrentIndex(borderMarkup.getCurrentIndex() - 1);
			border.setMarkupStream(origBorderMarkup);
		}

		return true;
	}
","04/Jul/07 10:14;skanev;Where does the following method come from: 

Border border = findBorder(); 

I cannot find it...","05/Jul/07 18:13;jdonnerstag;
	/**
	 * Find the proper Border component
	 * 
	 * @return Border
	 */
	private Border findBorder()
	{
		Border border = this;
		if (border.getMarkupStream() == null)
		{
			// Find Border at or above parent of this border
			final MarkupContainer borderParent = border.getParent();
			border = (Border)((borderParent instanceof Border) ? borderParent : borderParent
					.findParent(Border.class));
		}
		return border;
	}

Juergen","09/Jul/07 05:43;jdonnerstag;I have new version of Border which fixes this problem. It will probably make it into 1.3 but needs some more testing.

Juergen",10/Jul/07 04:47;jdonnerstag;new Border committed to 1.3 trunk,,,,,,,,,,,,,,,,,,
ClassCastException when using ReloadingWicketFilter,WICKET-749,12373625,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,watter,watter,12/Jul/07 12:43,14/Jul/07 23:23,13/Mar/19 23:15,13/Jul/07 21:21,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Reference Threads:
http://www.nabble.com/Has-something-changed-in-markup-inheritance--tf3963374.html
http://www.nabble.com/Classcastexception-and-getSession-tf3979399.html

In summary, in certain situations, classes that should be loaded by the ReloadingClassLoader are being loaded by the container's normal classloader. While this happens in several situations, the most obvious and repeatable is when using the browser's back button. I will attach a small app that demonstrates this issue after submitting this bug. 

The steps needed to recreate this issue int he demo app are actually quite odd, so this may seem like a fringe issue, however in our real app, the situations comes up much easier and with much more frequency.

Steps:
1) Unzip the attached file.

2) Assuming Maven is installed, run ""mvn jetty:run"" inside the project directory.

3) Use your browser to go to http://127.0.0.1:8080/app

4) Click ""Second Link""

5) Use your browser back functionality and then click ""Second Link"" again. Everything should work fine. 

6) You should now be be on a page with the words ""Second changed10"". If not, click ""Second Link"" to get there. Use the browser to refresh that page.

7) Refreshing should have caused a ""Page Expired"" error. That's ok, that isn't the issue. Click the browser back button to go back to the first page.

8) Click ""Second Link"" again. This should generate the ClassCastException.

If you disable the Reloading filter or if you comment out the include/exclude lines in the included FusionReloadingWicketFilters you can go through the same steps and not generate a ClassCastError. 

As I mentioned above. This may seem like a very fringe case with all the the refreshing and back buttons, but that just because that's the first and most reliable way I found to recreate this issue in this tiny demo app. The issue occurs under all kinds of situations in my real app including almost always after I modify a java file and recompile it which is the primary use case for the ReloadingClassloader.

","OS: Ubuntu Linux
JDK: 1.5.0_11
COntainer: Jetty via Maven (mvn jetty:run)",,,,,,,,,,,,,,,,,,12/Jul/07 12:44;watter;reloading.zip;https://issues.apache.org/jira/secure/attachment/12361674/reloading.zip,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-12 12:47:33.337,,,no_permission,,,,,,,,,,,201779,,,Sat Jul 14 23:23:43 UTC 2007,,,,,,0|i0khzj:,117731,,,,,,,,12/Jul/07 12:44;watter;The steps necessary to take advantage of this app are in the main issue description.,"12/Jul/07 12:47;jcompagner;just some remarks:

are you sure that the classes all come from one place? So they can only be loaded by one and only one classloader?

Are there more the one ReloadingClassLoaders created at one time?

johan
","12/Jul/07 12:56;watter;I've checked multiple times to be sure, and yes, I believe that there is only one copy of the classes that  they aren't included in any jars in the container's classpath. 

I'm not sure how to check whether or not there is more than one ReloadingClassLoader created. I do know that when the ClassCastException occurs, the conflicting classloaders are ReloadingClassLoader vs org.mortbay.jetty.webapp.WebappClassLoader and not two different ReloadingClassLoader's.","12/Jul/07 13:37;jcompagner;how can the jetty classloader then load the classes that aren't in his path??
somehow you have to have it in your path.","12/Jul/07 15:11;jbq;The first observation of my debug session is that there was a recent change in how the reference to classes are kept.  Previouly, eg in BookmarkablePageRequestTarget, we were holding a Class directly, whereas now we keep a WeakReference to the Class, since revision 548314.  But after changing BookmarkablePageRequestTarget to keep a Class directly, I can still reproduce the problem, however the page expired goes away.

If I set Objects.setObjectStreamFactory(new WicketObjectStreamFactory()); in FusionWebApplication.init() however I cannot reproduce the problem anymore.","12/Jul/07 15:28;watter;>how can the jetty classloader then load the classes that aren't in his path??
>somehow you have to have it in your path.

Johan, thank you for taking the time to think about this issue and comment. I really appreciate it. 

I'm not sure how to answer your question, however, but I'll be the first to admit that I don't have a terribly deep understanding of the low level intricacies of classloaders. 

When ""mvn jetty:run"" is executed, either maven or jetty (I'm not sure which) prints out a classpath. Here is that classpath for the  attached tiny app (obviously localized for my own environment):

file:/home/mwelch/projects/temp/sandbox/target/classes/,
file:/home/mwelch/.m2/repository/commons-logging/commons-logging/1.1/commons-logging-1.1.jar, 
file:/home/mwelch/.m2/repository/org/springframework/spring/2.0/spring-2.0.jar, 
file:/home/mwelch/.m2/repository/cglib/cglib-nodep/2.1_3/cglib-nodep-2.1_3.jar, 
file:/home/mwelch/.m2/repository/org/apache/wicket/wicket/1.3.0-beta2/wicket-1.3.0-beta2.jar, 
file:/home/mwelch/.m2/repository/logkit/logkit/1.0.1/logkit-1.0.1.jar, 
file:/home/mwelch/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar, 
file:/home/mwelch/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar, 
file:/home/mwelch/.m2/repository/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar, 
file:/home/mwelch/.m2/repository/org/slf4j/slf4j-api/1.3.1/slf4j-api-1.3.1.jar, 
file:/home/mwelch/.m2/repository/commons-collections/commons-collections/3.2/commons-collections-3.2.jar, 
file:/home/mwelch/.m2/repository/org/apache/wicket/wicket-extensions/1.3.0-beta2/wicket-extensions-1.3.0-beta2.jar, 
file:/home/mwelch/.m2/repository/org/apache/wicket/wicket-spring/1.3.0-beta2/wicket-spring-1.3.0-beta2.jar, 
file:/home/mwelch/.m2/repository/org/apache/wicket/wicket-ioc/1.3.0-beta2/wicket-ioc-1.3.0-beta2.jar, 
file:/home/mwelch/.m2/repository/org/apache/wicket/wicket-spring-annot/1.3.0-beta2/wicket-spring-annot-1.3.0-beta2.jar, 
file:/home/mwelch/.m2/repository/org/slf4j/slf4j-log4j12/1.4.0/slf4j-log4j12-1.4.0.jar

The first item in the classpath points to the location of my compiled classes. 

A few lines above that int the ouput I see:

[INFO] Webapp directory = /home/mwelch/projects/temp/sandbox/src/main/webapp

When I look into that webapp directory, the only thing I find is a ""WEB-INF"" directory and in there only a web.xml. There is no ""classes"" or ""lib"" directory there that might provide a second place Jetty would load things from. 

The attached app is barely more than a Hello World implementation so there isn't a lot of configuration that has been done so I'm not sure where I might have misconfigured things. Nevertheless, I have suspected from the beginning that an error in my setup was to blame so I'm more than willing to continue to explore that possibility.",12/Jul/07 16:21;jbq;Improved the documentation to mention Objects.setObjectStreamFactory(new WicketObjectStreamFactory());,"12/Jul/07 16:27;watter;>The first observation of my debug session is that there was a recent change in how the reference to classes are kept. Previouly, eg 
>in BookmarkablePageRequestTarget, we were holding a Class directly, whereas now we keep a WeakReference to the Class, 
>since revision 548314. But after changing BookmarkablePageRequestTarget to keep a Class directly, I can still reproduce the 
>problem, however the page expired goes away.

>If I set Objects.setObjectStreamFactory(new WicketObjectStreamFactory()); in FusionWebApplication.init() however I cannot >reproduce the problem anymore.

Thank for looking into this. I see the same thing you do. Putting Objects.setObjectStreamFactory(new WicketObjectStreamFactory()); int he WebApplication's init() method does prevent the ClassCastException from appearing in the steps I put forth earlier, however, unfortunately this causes the second problem I mentioned previously to rear it's head: one can no longer reload the page or application classes correctly after making a changes to them. Try these steps with the Objects.setObjectStreamFactory(new WicketObjectStreamFactory()); in place:

1) Start the webapp with ""mvn jetty:run"".

2) Navigate to http://127.0.0.1:8080/app 

3) You should see the ""hello"" page. Refresh it once or twice to confirm that refreshing works as expected. It should. 

4) Make a trivial change Hello.java such as adding a new empty line and recompile. 

5) Refresh the page once again; perhaps twice. You should see the same ClassCastException exception. However, this time it appears to be caused by a conflict between two different instances of ReloadingClassLoader instead of a conflict between a ReloadingClassLoader and the Jetty classloader as was the case previously.
","12/Jul/07 18:09;watter;With the suggested change, class files are no longer editable and reloadable without causing a ClassCastException in the demonstration app (as demonstrated int eh previous comment). This limits the usefullness of the ReloadingWicketFilter so I'm reopening the issue. ","13/Jul/07 16:57;jbq;OK, so there are two issues in fact.  First, the back button requires Objects.setObjectStreamFactory(new WicketObjectStreamFactory()); for sure.  Now, there is a more simple way to make the reloading fail, it is to reload the Hello page after changing the class, and whatever object stream factory is in use.  Just the Hello page, no need for Second and back button.  I'll have a look.",13/Jul/07 17:28;jbq;I need to find a way to invalidate the session in a background thread.,13/Jul/07 21:21;jbq;Thanks for your interest.  In the updated documentation I'm adding a new guideline: Session must be excluded from the reloading filter.  That will make things a lot simpler.,"14/Jul/07 15:57;watter;Thanks for all of the time you spent looking into this. 

Out of curiosity, is the change you made to BookmarkablePageRequestTarget something that will make it into the trunk? If not, is there a way I can tell Wicket to use my own custom version of BookmarkablePageRequestTarget that doesn't use a WeakReference?","14/Jul/07 23:23;jbq;Yes it is in trunk.  But I don't think the change to BookmarkablePageRequestTarget impacts the reloading.  See the change at http://svn.apache.org/viewvc?view=rev&revision=548314
",,,,,,,,,,
setVisible(false) on Page throws NPE,WICKET-738,12373427,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,sboisson,sboisson,10/Jul/07 15:57,11/Jul/07 21:36,13/Mar/19 23:15,11/Jul/07 21:36,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Found this by accident while looking for a bug involving misplaced parenthesis add(..).setVisible(false) instead of add(.. .setVisible(false) );

public class MyPage extends Page {
    MyPage() {
        ...
        setVisible(false);
    }
...
}

Gives
Unexpected RuntimeException

Root cause:

java.lang.NullPointerException
at org.apache.wicket.Component.render(Component.java:1977)
at org.apache.wicket.Page.renderPage(Page.java:927)
at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:225)
at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:103)
at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1037)
at org.apache.wicket.RequestCycle.step(RequestCycle.java:1107)
at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1176)
at org.apache.wicket.RequestCycle.request(RequestCycle.java:499)
at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:257)
at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:127)
at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
at org.mortbay.jetty.Server.handle(Server.java:285)
at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)
at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:821)
at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:513)
at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)
at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)
at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)
at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
",Jetty,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-07-11 21:36:18.981,,,no_permission,,,,,,,,,,,201769,,,Wed Jul 11 21:36:18 UTC 2007,,,,,,0|i0ki1j:,117740,,,,,,,,"11/Jul/07 21:36;jbq;Fixed, thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,,
Double quotes aren't escaped properly in component tag attributes.,WICKET-741,12373480,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,almaw,almaw,11/Jul/07 07:52,11/Jul/07 07:53,13/Mar/19 23:15,11/Jul/07 07:53,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,,,,,0,,,,,,,,"See http://www.nabble.com/Escaping-quotes-in-attributes-tf4044002.html#a11487305.

Why is ComponentTag escaping quotes in attribute values with a backslash?
For valid xhtml it should be an entity:

Index: /home/sven/workspace/wicket/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/ComponentTag.java
===================================================================
--- /home/sven/workspace/wicket/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/ComponentTag.java   (revision 554069)
+++ /home/sven/workspace/wicket/jdk-1.4/wicket/src/main/java/org/apache/wicket/markup/ComponentTag.java   (working copy)
@@ -653,7 +653,7 @@
                    if (value != null)
                    {
                        response.write(""=\"""");
-                        value = Strings.replaceAll(value, ""\"""", ""\\\"""");
+                        value = Strings.replaceAll(value, ""\"""", ""&#34;"");
                        response.write(value);
                        response.write(""\"""");
                    }

Should it not?

Sven ",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201772,,,Wed Jul 11 07:53:24 UTC 2007,,,,,,0|i0ki13:,117738,,,,,,,,11/Jul/07 07:53;almaw;Fixed in r555197.,,,,,,,,,,,,,,,,,,,,,,,
PagingNavigation examples in javadoc are out of date (patch enclosed),WICKET-714,12372744,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,gudmundur,gudmundur,30/Jun/07 18:34,30/Jun/07 18:41,13/Mar/19 23:15,30/Jun/07 18:41,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"When I was looking at the documentation for PagingNavigation to change the default appearance of paging, I noticed that the documentation was a bit out of date. The example showed populateItem having ListItem as a parameter instead of Loop.LoopItem. I worked up a little example that uses the LoopItem instead and embedded into the javadoc code.",,,,,,,,,,,,,,,,,,,30/Jun/07 18:36;gudmundur;PagingNavigationJavadocFix.patch;https://issues.apache.org/jira/secure/attachment/12360870/PagingNavigationJavadocFix.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-30 18:41:17.138,,,no_permission,,,,,,,,,,,201746,,,Sat Jun 30 18:41:17 UTC 2007,,,,,,0|i0ki47:,117752,,,,,,,,30/Jun/07 18:36;gudmundur;This patch fixes the javadoc as described above.,30/Jun/07 18:41;almaw;Thanks!,,,,,,,,,,,,,,,,,,,,,,
"IConverter refers to nonexistent ""class c""",WICKET-712,12372658,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,cowwoc,cowwoc,29/Jun/07 04:38,29/Jun/07 11:20,13/Mar/19 23:15,29/Jun/07 11:20,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"Looks like the Javadoc still refers to ""class c"" which was removed in Wicket 1.2.6. Please clarify this part of the documentation,",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-29 09:12:38.341,,,no_permission,,,,,,,,,,,201744,,,Fri Jun 29 09:12:38 UTC 2007,,,,,,0|i0ki4n:,117754,,,,,,,,29/Jun/07 09:12;jcompagner;where in the code/doc do you see this?,,,,,,,,,,,,,,,,,,,,,,,
"FormTester crashes with NullPointerException, if FormComponent is not found",WICKET-697,12372404,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,thrantal,thrantal,26/Jun/07 06:44,26/Jun/07 06:53,13/Mar/19 23:15,26/Jun/07 06:53,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"The attached patch makes FormTester report inexistent component better. Before, it just crashed on NullPointerException on this line:

				fail(""Selecting on the component:'"" + formComponent.getPath()
",,,,,,,,,,,,,,,,,,,26/Jun/07 06:45;thrantal;formtester-nullcheck.patch;https://issues.apache.org/jira/secure/attachment/12360543/formtester-nullcheck.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-26 06:53:06.101,,,no_permission,,,,,,,,,,,201729,,,Tue Jun 26 06:53:06 UTC 2007,,,,,,0|i0ki6f:,117762,,,,,,,,26/Jun/07 06:53;janne;fixed.,,,,,,,,,,,,,,,,,,,,,,,
Allow validators to process null value,WICKET-686,12372278,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,knopp,knopp,23/Jun/07 21:58,23/Jun/07 21:59,13/Mar/19 23:15,23/Jun/07 21:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,Introduce an INullAccepting marker interface for validators that need to obtain and process null value.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201719,,,2007-06-23 21:58:25.0,,,,,,0|i0ki7r:,117768,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultTreeState allowSelectMultiple == false not evaluated when selecting node already selected,WICKET-139,12357683,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,knopp,jimmclaughlin,jimmclaughlin,04/Dec/06 19:05,14/Jun/07 14:46,13/Mar/19 23:15,11/Jun/07 12:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,selectNode will not process the change from allowSelectMultiple == true to allowSelectMultiple == false when selectNode is called on a TreeNode that is already in the selectedNodes set,,,,,,,,,,,,,,,,,,,04/Dec/06 19:17;jimmclaughlin;defaulttreestate.patch;https://issues.apache.org/jira/secure/attachment/12346365/defaulttreestate.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201223,,,Mon Dec 04 19:17:56 UTC 2006,,,,,,0|i0kjm7:,117995,,,,,,,,"04/Dec/06 19:17;jimmclaughlin;separate selected == true processing into two stages:
1. if allowSelectMultiple == false, remove nodes except the one being selected, if it is present
2. add the selected node if it is not already selected.",,,,,,,,,,,,,,,,,,,,,,,
SpringWebApplicationFactory references wrong package in javadoc.,WICKET-644,12371590,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,ijuma,ijuma,14/Jun/07 05:20,14/Jun/07 10:33,13/Mar/19 23:15,14/Jun/07 10:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-spring,,,,0,,,,,,,,"The Class javadoc of SpringWebApplicationFactory references ""org.apache.wicket.contrib.spring.SpringWebApplicationFactory"" twice. It should instead reference ""org.apache.wicket.spring.SpringWebApplicationFactory"".",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-14 10:33:23.337,,,no_permission,,,,,,,,,,,201679,,,Thu Jun 14 10:33:23 UTC 2007,,,,,,0|i0ki9j:,117776,,,,,,,,"14/Jun/07 10:33;jbq;Fixed, thanks for reporting!",,,,,,,,,,,,,,,,,,,,,,,
Backport call to super onComponentTag in ExternalLink ,WICKET-623,12371125,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,jfahrenkrug,jfahrenkrug,07/Jun/07 10:20,13/Jun/07 01:01,13/Mar/19 23:15,13/Jun/07 01:01,1.2.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.7,,,wicket,,,,0,,,,,,,,"ExternalLink.setOutputMarkupId(true) has no effect.
I could track this issue down to super.onComponentTag not being called at the end of ExternalLink's onComponentTag.

Adding
super.onComponentTag(tag);
to the end of ExternalLink's onComponentTag would call Component's onComponentTag which in turn would add the markup id. 

Johan Compagner fixed this in trunk (rev 545131), but a backport for 1.2.7 would be nice.","Bug found in 1.2.6, fixed in trunk by jcompagner in rev 545131",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-13 01:01:35.601,,,no_permission,,,,,,,,,,,201660,,,Wed Jun 13 01:01:35 UTC 2007,,,,,,0|i0kibz:,117787,,,,,,,,13/Jun/07 01:01;almaw;Fixed in r546692.,,,,,,,,,,,,,,,,,,,,,,,
WicketTester.clickLink() does not recognize SubmitLink.,WICKET-478,12367408,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,jbrunner,jbrunner,17/Apr/07 19:56,10/Jun/07 22:25,13/Mar/19 23:15,10/Jun/07 22:25,1.2.5,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"Calling the WicketTester.clickLink() method on a SubmitLink results in the error:

wicket.WicketRuntimeException: Link {PATH_TO_LINK} is  not  a Link, AjaxLink, AjaxFallbackLink or AjaxSubmitLink.

where {PATH_TO_LINK} is the path provided to the SubmitLink.  Ideally, clickLink() should recognize the SubmitLink as a valid link and duplicate the act of clicking it.","Debian Etch, Sun Java 1.5, Eclipse.  Error reproduced in wicket versions 1.2.5 and 1.3.",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 22:25:51.585,,,no_permission,,,,,,,,,,,201535,,,Sun Jun 10 22:25:51 UTC 2007,,,,,,0|i0kiqv:,117854,,,,,,,,10/Jun/07 22:25;almaw;Fixed in r545956 to cope with any AbstractLink.,,,,,,,,,,,,,,,,,,,,,,,
AjaxEditableLabel on setModel does not update the labels model only the editors,WICKET-323,12363573,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,jschnitz,jschnitz,25/Feb/07 05:13,10/Jun/07 21:54,13/Mar/19 23:15,10/Jun/07 21:54,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-extensions,,,,0,,,,,,,,"The AjaxEditableLabel when you perform a setModel() it will go ahead and update the underlying model of the editor however, it does not update the underlying model of the Label",,,,,,,,,,,,,,,,,,,25/Feb/07 05:15;jschnitz;AjaxEditableLabel.java.patch;https://issues.apache.org/jira/secure/attachment/12351998/AjaxEditableLabel.java.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-10 21:53:54.792,,,no_permission,,,,,,,,,,,201392,,,Sun Jun 10 21:53:54 UTC 2007,,,,,,0|i0kj4n:,117916,,,,,,,,25/Feb/07 05:15;jschnitz;This is the simpel patch to get the label and set its model as well.,10/Jun/07 21:53;almaw;Fixed in r545951.,,,,,,,,,,,,,,,,,,,,,,
While testing with FormTester: onSelectionChanged is not being invoked if DropDownChoice is enabled for notifications,WICKET-165,12358511,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,tptodorov,tptodorov,13/Dec/06 12:02,10/Jun/07 16:31,13/Mar/19 23:15,06/Mar/07 18:09,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"Method DropDownChoice.onSelectionChanged is never called when testing a drop down by calling formTester.select(""dropDownChoiceNotified"", 0);

In my page:

		form.add(new DropDownChoice(""dropDownChoiceNotified"", candidateChoices, bookChoiceRenderer) {
			private static final long serialVersionUID = 1L;
			protected boolean wantOnSelectionChangedNotifications()
			{
				return true;
			}
			
			protected void onSelectionChanged(Object arg0) {
				super.onSelectionChanged(arg0);
				
				throw new RuntimeException(""notification ""+arg0);
			}
		});

In my unit Test  I do:
		formTester.select(""dropDownChoiceNotified"", 0);
and the drop down component is not being notified.

It works fine when testing in a container though.

","Linux, Java 1.4",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-06 14:27:48.618,,,no_permission,,,,,,,,,,,201248,,,Tue Mar 06 14:27:48 UTC 2007,,,,,,0|i0kjk7:,117986,,,,,,,,06/Mar/07 14:27;jbq;As a workaround you could call executeListener(Component) yourself.,,,,,,,,,,,,,,,,,,,,,,,
FormTester doesn't pass form components default values,WICKET-258,12362103,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,syl,syl,06/Feb/07 15:19,10/Jun/07 16:31,13/Mar/19 23:15,08/Mar/07 13:59,1.2.5,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"If component model has a value, it will be lost after FormTester submit. It applies to AbstractChoice, CheckBox, CheckGroup.",,,,,,,,,,,,,,,,,,,07/Mar/07 18:00;jbq;20070307-wicket-1.x-WICKET-258-FormTester-values.txt;https://issues.apache.org/jira/secure/attachment/12352847/20070307-wicket-1.x-WICKET-258-FormTester-values.txt,06/Feb/07 15:28;syl;FormTester.tar.gz;https://issues.apache.org/jira/secure/attachment/12350467/FormTester.tar.gz,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-03-07 18:00:40.48,,,no_permission,,,,,,,,,,,201333,,,Thu Mar 08 14:02:31 UTC 2007,,,,,,0|i0kjaf:,117942,,,,,,,,06/Feb/07 15:28;syl;Patch for issue based on 1.x branch.,"07/Mar/07 18:00;jbq;So, this is the patch I made from your work (please submit issues using patches, that makes it easier to integrate).","08/Mar/07 12:19;syl;Ok, thanks. I wasn't sure which format the patch should be.","08/Mar/07 14:02;jbq;Committed, thanks for your contribution!",,,,,,,,,,,,,,,,,,,,
WicketTester fails when calling clickLink on a ResourceLink to a mounted resource,WICKET-38,12354820,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,lypanov,lypanov,06/Nov/06 07:39,10/Jun/07 16:30,13/Mar/19 23:15,12/Mar/07 22:05,1.2.3,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Basics of the testcase are:
{code}
// in WebApplication
application.getSharedResources().add(""mountedResource"", new MountedResource());
ResourceReference mountedResourceRef = new ResourceReference(""mountedResource"");
application.mountSharedResource(""/mountedLink"", mountedResourceRef.getSharedResourceKey());
// in WebPage
add(new ResourceLink(""mountedResourceLink"", new ResourceReference(""mountedResource"")));
// in testcase itself
tester.startPage(LinksPage.class);
tester.clickLink(""mountedResourceLink"");		
{code}

I've attached an Eclipse generated project, it has a build.xml which should work on the command line, and uses TestNG for the tests.
The .war (which can be built using Eclipse) has working links.
",,,,,,,,,,,,,,,,,,,06/Nov/06 07:41;lypanov;WicketBugs.tgz;https://issues.apache.org/jira/secure/attachment/12344378/WicketBugs.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2006-11-07 23:38:30.0,,,no_permission,,,,,,,,,,,201126,,,Mon Mar 12 22:05:59 UTC 2007,,,,,,0|i0kjsn:,118024,,,,,,,,07/Nov/06 23:38;frankbille;I'm not sure if it fixes your problem but I have committed a fix to trunk (2.0). I will commit it to 1.x tomorrow. Can you test if it fixes your problem?,09/Nov/06 21:36;frankbille;Never mind that fix. It was a fix of something else. I haven't looked into fixing this yet. I hope to get some time sunday but if you fix it yourself patches are very welcome :),30/Jan/07 18:48;almaw;Please can you see if the recent URL updates to the 1.x branch have fixed this magically?,23/Feb/07 12:00;jbq;This issue is blocked until the relative path refactoring is ported to trunk,12/Mar/07 22:05;jbq;Will not fix it in trunk,,,,,,,,,,,,,,,,,,,
Create RFC-compliant date fields in MockHttpServletResponse,WICKET-386,12364908,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jbq,jbq,jbq,14/Mar/07 13:18,10/Jun/07 16:29,13/Mar/19 23:15,14/Mar/07 13:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Currently MockHttpServletResponse uses DateFormat.getInstance(DateFormat.FULL) to format date headers like ""Last-Modified"".  It does not comply with the HTTP RFC.

See http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1

Being standards compliant here is just for the matter of being more realistic, but the important point is to get access to the time, not only hour.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201453,,,2007-03-14 13:18:37.0,,,,,,0|i0kizj:,117893,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WicketFilter tries to call setClassLoader() even if it's not changing the default - doesn't work on strict SecurityManagers.,WICKET-628,12371254,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,almaw,almaw,08/Jun/07 14:39,08/Jun/07 14:40,13/Mar/19 23:15,08/Jun/07 14:40,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,,,,,0,,,,,,,,As summary. Solution is to avoid setting the classloader if it's not actually changed.,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201664,,,Fri Jun 08 14:40:24 UTC 2007,,,,,,0|i0kib3:,117783,,,,,,,,08/Jun/07 14:40;almaw;Fixed in r545525.,,,,,,,,,,,,,,,,,,,,,,,
AbstractSingleChoice: components can't have specific null or nullValid messages,WICKET-624,12371139,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,cfmdobbie,cfmdobbie,07/Jun/07 13:31,07/Jun/07 13:35,13/Mar/19 23:15,07/Jun/07 13:35,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"AbstractSingleChoice, and thus DropDownChoice, accesses null and nullValid messages like this:

final String option = getLocalizer().getString(""nullValid"", this, """");
final String option = getLocalizer().getString(""null"", this, CHOOSE_ONE);

So only the keys ""null"" and ""nullValid"" are checked in the relevant properties file.  Wicket should provide for null/nullValid messages for specific components using the following keys:

componentId.null
componentId.nullValid
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201661,,,2007-06-07 13:31:01.0,,,,,,0|i0kibr:,117786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HeaderContributor forces relative URL,WICKET-612,12370792,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,jthomerson,jthomerson,03/Jun/07 23:38,04/Jun/07 15:26,13/Mar/19 23:15,04/Jun/07 11:36,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"I consider this a bug, and was wondering if you do as well...  If so, I will open a JIRA and attach a patch for it.  Just let me know.

In my 1.2.6 app, I have the following line:
add(HeaderContributor.forCss(""/resources/styles/global.css""));

which generates this in the markup (correctly):
<link rel =""stylesheet"" type=""text/css"" href=""/resources/css/global.css"" ></link>


In 1.3, it generates this in the markup (incorrectly):
<link rel =""stylesheet"" type=""text/css"" href=""../../..//resources/styles/global.css"" ></link>

This is because of the change to have everything with relative URLs, I am assuming.  But, I don't want a relative URL, I want an absolute one.  I'm thinking that the following change would be appropriate:

HeaderContributor.java (26)
if (location.startsWith(""http://"") || location.startsWith(""https://""))

changed to:

if (location.startsWith(""http://"") || location.startsWith(""https://"") || location.startsWith(""/""))",,,,,,,,,,,,,,,,,,,04/Jun/07 00:33;jthomerson;wicket-patch-612.patch;https://issues.apache.org/jira/secure/attachment/12358791/wicket-patch-612.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-06-04 11:36:43.374,,,no_permission,,,,,,,,,,,201650,,,Mon Jun 04 15:26:05 UTC 2007,,,,,,0|i0kid3:,117792,,,,,,,,"03/Jun/07 23:40;jthomerson;Additional clarification: 

If I put ""/foo/bar.css"" - foo is NOT my context.  My context for the app could be anything (but not foo).  Foo would be the root folder off of my domain that I want the request to be sent for.  (i.e.. www.mydomain.com/app/SomeWicketPage includes the style sheet at www.mydomain.com/foo/bar.css).  I do this and pair it with an Apache alias that directs ""/foo"" to that folder within my webapp so that Apache (not my servlet container) will serve static resources.

As of 1.2.6, it works fine.  As of 1.3, I can no longer do that without adding my domain name ( add(HeaderContributor.forCss(""http://www.mydomain.com/resources/styles/global.css"")); ), which is NOT desirable - I should not have to add my domain name to be able to add the resource relative to my domain root.","04/Jun/07 00:33;jthomerson;This patch will fix the problem described (within HeaderContributor), although there may be other locations with similar problems.

Hopefully the patch is generated correctly.  I had some problems getting Eclipse to generate a proper patch that could be applied to a clean workspace.","04/Jun/07 11:36;almaw;Yep, I think this is a reasonable use-case, even if it might confuse some users. I've updated the javadoc appropriately, so hopefully this will be mitigated.

Fixed in r544124.",04/Jun/07 15:26;ehillenius;See http://www.nabble.com/Bug-in-1.3--HeaderContributor.forCss%28String%29-tf3836995.html for the discussion thread.,,,,,,,,,,,,,,,,,,,,
TimeOfDay.next(Calendar) can return time on same day rather than next day,WICKET-595,12370361,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jonathan.locke,jonl,jonl,28/May/07 00:55,31/May/07 14:47,13/Mar/19 23:15,31/May/07 14:47,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"Currently code does:

			calendar.add(Calendar.DATE, 1);
			return Time.valueOf(calendar, this);

Because Time.valueOf(Calendar, TimeOfDay) always returns the time on the same day, the add is ignored.  Instead this code should be the time of day today plus one day like this:

			return Time.valueOf(calendar, this).add(Duration.ONE_DAY);

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201637,,,2007-05-28 00:55:15.0,,,,,,0|i0kifb:,117802,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PopupSettings with no window name set generates invalid xhtml on Link,WICKET-576,12369521,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,jrenfro,jrenfro,16/May/07 22:05,24/May/07 18:39,13/Mar/19 23:15,24/May/07 18:38,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"I've just switched my code over from 1.2 to 1.3 beta, and I'm running
into a problem where Wicket seems to be generating invalid xhtml --
specifically, it produces an href tag with a blank target attribute, as
here:

<a href=""?wicket:interface=:6:rows:1:launch::ILinkListener:"" target wicket:id=""launch"" onclick=""var w = window.open(href, '', 'scrollbars=yes,location=no,menuBar=no,resizable=yes,status=no,toolbar=no'); if( w.blur) w.focus(); return false;"">Launch</a>


Notice right after the href="""", there's a naked 'target' attribute. I'm
guessing this is because the Link popupPageMap.getName () method is
returning a null. Looks like the code checks to make sure that
popupPageMap is NOT null, but it doesn't check getName().

In the Wicket code I can see the following:

<snip class="" org.apache.wicket.markup.html.link.Link"" lines=""460:467"">
if (popupSettings != null)
            {
                IPageMap popupPageMap = popupSettings.getPageMap(this);
                if (popupPageMap != null)
                {
                    tag.put(""target"", popupPageMap.getName());
                }
            }
</snip>


Here's my code:

<snip>
    item.add(new Link(""launch"") {
                         public void onClick() {
                             setResponsePage(new LaunchFrameset());
                         }
                     }.setPopupSettings(new
PopupSettings(PopupSettings.RESIZABLE | PopupSettings.SCROLLBARS)));
</snip>

If I add .setWindowName to my new PopupSettings object, everything seems
to work. But I'm guessing it should work even if I forget to specify a
window name. ","Linux Fedora Core 5, Firefox 2.0, Tomcat 5.23",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-24 18:39:13.207,,,no_permission,,,,,,,,,,,201621,,,Thu May 24 18:39:13 UTC 2007,,,,,,0|i0kih3:,117810,,,,,,,,24/May/07 18:39;almaw;Resolved in r541378.,,,,,,,,,,,,,,,,,,,,,,,
getParameters() returns zero-length Map after using mountBookmarkablePage() ,WICKET-400,12365182,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,smallufo,smallufo,18/Mar/07 03:31,15/May/07 08:53,13/Mar/19 23:15,13/May/07 17:05,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Before using mountBookmarkablePage() , parameters are presented as ?var1=a&var2=b ...
I can get a map of parameters by getRequest().getRequestParameters().getParameters();

After using mountBookmarkablePage() , parameters are translated to spider-friendly style : /var1/a/var2/b 
and getRequest().getRequestParameters().getParameters() returns empty map
How do I solve this problem ?

See this thread for mre information :
http://www.nabble.com/How-to-getParameters%28%29-after-using-mountBookmarkablePage%28%29---tf3388240.html#a9431298",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-05-13 17:05:04.513,,,no_permission,,,,,,,,,,,201466,,,Tue May 15 08:53:01 UTC 2007,,,,,,0|i0kiyf:,117888,,,,,,,,13/May/07 17:05;almaw;This is fixed in svn trunk (http://svn.apache.org/viewvc?view=rev&rev=537613),"15/May/07 08:53;jcompagner;that getRequest().getRequestParameters().getParameters()  does return directly the copy of the ServletWebRequest.getParamaterMap()
where all those 1.2.6 problems are comming from because now it has String[] from the request itself. But if we put in things they become just Strings
this is i think confusing i guess what we should do is don't return that a Map but return our ValueMap (PageParameters)

so that people can ask for the right type directly and we do the String[] > String conversion for them.
",,,,,,,,,,,,,,,,,,,,,,
StringResourceModel does not use defaultValue properly,WICKET-528,12368581,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,jdonnerstag,crumley,crumley,03/May/07 18:49,12/May/07 14:59,13/Mar/19 23:15,12/May/07 14:59,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"The construction in StringResourceModel that takes an argument 'defaultValue' does not pass it to Localizer.getString (called from StringResourceModel.getString()) so the default value never has the opportunity to be used.

In addition Localizer.getString(...) did not substitute property expressions if the specified key was not found and defaultValue was used instead. 
@see
	public String getString(final String key, final Component component, final IModel model,
			final Locale locale, final String style, final String defaultValue)
			throws MissingResourceException

This was a problem for me because I wanted my default value to be provided by the model (instead of being resolved statically at construction time) so I passed the string ""${modelValue}"" as my default value.

The provided patch fixes both these issues in 1.2.6.

",,,,,,,,,,,,,,,,,,,03/May/07 18:49;crumley;stringresourcemodel.patch;https://issues.apache.org/jira/secure/attachment/12356730/stringresourcemodel.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-05-12 14:59:04.559,,,no_permission,,,,,,,,,,,201579,,,Sat May 12 14:59:04 UTC 2007,,,,,,0|i0kilz:,117832,,,,,,,,03/May/07 18:49;crumley;Patch to solve both issues.,12/May/07 14:59;jdonnerstag;fixed,,,,,,,,,,,,,,,,,,,,,,
There is a possibility of feedback messages cleaned up when they shouldnt be,WICKET-484,12367510,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ehillenius,ivaynberg,ivaynberg,18/Apr/07 17:02,21/Apr/07 07:42,13/Mar/19 23:15,21/Apr/07 07:42,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"cases will be rare but possible. it would require two threads in two different pagemaps processing simultaneously.

so user goes to a form page, opens it in a new tab, submits in first, and then submits in the other. now one tab can have its feedback messages missing.

or maybe a user working in multiple tabs and having two different pages with forms on them. or maybe not even forms, just some status feedback messages can also be missing.

should we fix this? i think so.",wicket 1.3 as of 4/18/2007,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201540,,,2007-04-18 17:02:45.0,,,,,,0|i0kiqf:,117852,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoCompleteTextField does not accept % symbol,WICKET-425,12365850,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,ivaynberg,blakeday,blakeday,27/Mar/07 01:19,27/Mar/07 01:35,13/Mar/19 23:15,27/Mar/07 01:35,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"When I enter anything with a % symbol into an AutoCompleteTextField, I get a null string passed to getChoices(String).  I assume this has something to do with URL encoding (or lack thereof), but I haven't looked any deeper.
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-27 01:35:46.343,,,no_permission,,,,,,,,,,,201490,,,Tue Mar 27 01:35:46 UTC 2007,,,,,,0|i0kivz:,117877,,,,,,,,27/Mar/07 01:35;ivaynberg;if you need this in 1.2.x you need to start a vote on dev to have this patch applied.,,,,,,,,,,,,,,,,,,,,,,,
Application_sv.properties variable bugs,WICKET-342,12363898,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,limell,limell,01/Mar/07 16:31,08/Mar/07 04:30,13/Mar/19 23:15,08/Mar/07 04:23,1.2.2,1.2.3,1.2.4,1.2.5,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,1.2.6,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"Some variables in Application_sv.properties have incorrect spaces between $ and {

Incorrect lines:
  NumberValidator.range=${input} m\u00e5ste vara mellan ${minimum} och $ {maximum}. 
  DateValidator.range='${input}' m\u00e5ste vara mellan ${minimum} och $ {maximum}.
  EqualInputValidator='${input0}' fr\u00e5n ${label0} och '${input1}' fr\u00e5n $ {label1} m\u00e5ste vara lika.",all,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-08 04:23:14.42,,,no_permission,,,,,,,,,,,201411,,,Thu Mar 08 04:30:02 UTC 2007,,,,,,0|i0kj3b:,117910,,,,,,,,08/Mar/07 04:23;almaw;Fixed in r515916.,"08/Mar/07 04:30;almaw;Thanks for this. After checking in other branches, I've fixed 1.x and trunk also, plus the Application_ba.properties file which had similar issues.",,,,,,,,,,,,,,,,,,,,,,
Fixing AjaxLinkTest,WICKET-209,12360442,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jbq,jbq,13/Jan/07 07:32,19/Feb/07 15:53,13/Mar/19 23:15,19/Feb/07 15:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"-------------------------------------------------------------------------------
Test set: wicket.ajax.markup.html.ajaxLink.AjaxLinkTest
-------------------------------------------------------------------------------
Tests run: 5, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.19 sec <<< FAILURE!
testPage_2(wicket.ajax.markup.html.ajaxLink.AjaxLinkTest)  Time elapsed: 0.027 sec  <<< FAILURE!
junit.framework.ComparisonFailure: wicket/ajax/markup/html/ajaxLink/AjaxPage2-1_ExpectedResult.html expected:<...2...> but was:<...0...>
	at junit.framework.Assert.assertEquals(Assert.java:81)
	at wicket.util.diff.DiffUtil.validatePage(DiffUtil.java:103)
	at wicket.WicketTestCase.executedBehavior(WicketTestCase.java:122)
	at wicket.ajax.markup.html.ajaxLink.AjaxLinkTest.testPage_2(AjaxLinkTest.java:76)

The attached patch fixes issues with markup ids used in the AjaxRequestTarget.",,,,,,,,,,,,,,,,,,,13/Jan/07 12:57;jbq;20070113-wicket-1.x-AjaxLinkTest;https://issues.apache.org/jira/secure/attachment/12348898/20070113-wicket-1.x-AjaxLinkTest,13/Jan/07 12:54;jbq;20070113-wicket-1.x-AjaxLinkTest;https://issues.apache.org/jira/secure/attachment/12348897/20070113-wicket-1.x-AjaxLinkTest,13/Jan/07 07:32;jbq;20070113-wicket-1.x-AjaxLinkTest;https://issues.apache.org/jira/secure/attachment/12348888/20070113-wicket-1.x-AjaxLinkTest,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201289,,,Wed Jan 17 18:47:04 UTC 2007,,,,,,0|i0kjfr:,117966,,,,,,,,"17/Jan/07 18:47;jbq;Seems like this is fixed, see http://svn.apache.org/viewvc?view=rev&rev=496806",,,,,,,,,,,,,,,,,,,,,,,
Fixing DisabledComponentTest,WICKET-210,12360457,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jbq,jbq,13/Jan/07 12:45,19/Feb/07 15:53,13/Mar/19 23:15,19/Feb/07 15:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"-------------------------------------------------------------------------------
Test set: wicket.DisabledComponentTest
-------------------------------------------------------------------------------
Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.281 sec <<< FAILURE!
testDisabled(wicket.DisabledComponentTest)  Time elapsed: 0.024 sec  <<< ERROR!
java.lang.NullPointerException
	at wicket.Component.getRequest(Component.java:1066)
	at wicket.Page.mayTrackChangesFor(Page.java:1337)
	at wicket.Page.componentStateChanging(Page.java:1068)
	at wicket.Component.addStateChange(Component.java:2300)
	at wicket.Component.setEnabled(Component.java:1872)
	at wicket.DisabledComponentTest.testDisabled(DisabledComponentTest.java:53)

The attached patch ensures that Page.mayTrackChangesFor() returns false when there is no current RequestCycle.",,,,,,,,,,,,,,,,,,,13/Jan/07 12:46;jbq;20070113-wicket-1.x-DisabledComponentTest;https://issues.apache.org/jira/secure/attachment/12348896/20070113-wicket-1.x-DisabledComponentTest,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-01-17 18:45:27.978,,,no_permission,,,,,,,,,,,201290,,,Wed Jan 17 18:45:27 UTC 2007,,,,,,0|i0kjfj:,117965,,,,,,,,"17/Jan/07 18:40;jbq;Apparently the problem has been fixed in a different way:
See http://svn.apache.org/viewvc?view=rev&rev=496544

But maybe setting up a new request cycle is a bit overkill for a user writing unit tests, just to disable a component...","17/Jan/07 18:45;ivaynberg;the problem is that now the version manager needs access to request, because it performs some clever version merger for redirects. so this means that things that create changes in version manager should only be accessed within a requestcycle which is a reasonable requirement for wicket components. so what we need to do is to think about how to patch wicket tester to better mock the environment, or somehow decouple the components more.",,,,,,,,,,,,,,,,,,,,,,
"pallete: "" is missing in HTML",WICKET-255,12361997,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,hell,hell,05/Feb/07 13:25,05/Feb/07 13:44,13/Mar/19 23:15,05/Feb/07 13:43,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket-extensions,,,,0,,,,,,,,"Index: Palette.html
===================================================================
--- Palette.html        (revision 503672)
+++ Palette.html        (working copy)
@@ -37,7 +37,7 @@
        <td class=""buttons"">
                <button type=""button"" wicket:id=""addButton"" class=""button add""><img wicket:id=""image"" src=""add.gif""/></button><br/>
                <button type=""button"" wicket:id=""removeButton"" class=""button remove""><img wicket:id=""image"" src=""remove.gif""/></button><br/>
-               <button type=""button"" wicket:id=""moveUpButton"" class button up""><img wicket:id=""image"" src=""up.gif""/></button><br/>
+               <button type=""button"" wicket:id=""moveUpButton"" class=""button up""><img wicket:id=""image"" src=""up.gif""/></button><br/>
                <button type=""button"" wicket:id=""moveDownButton"" class=""button down""><img wicket:id=""image"" src=""down.gif""/></button><br/>
        </td>
        <td class=""pane selection"">
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-02-05 13:43:27.549,,,no_permission,,,,,,,,,,,201330,,,Mon Feb 05 13:43:27 UTC 2007,,,,,,0|i0kjav:,117944,,,,,,,,05/Feb/07 13:43;almaw;Fixed in trunk.,,,,,,,,,,,,,,,,,,,,,,,
WicketFilter doesn't work with mod_proxy and setContextPath(),WICKET-219,12360785,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,almaw,almaw,18/Jan/07 16:59,30/Jan/07 18:24,13/Mar/19 23:15,30/Jan/07 18:24,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"If one sets up mod_proxy as here: http://cwiki.apache.org/WICKET/wicket-behind-a-front-end-proxy.html (see ""why this doesn't always work"") isWicketRequest() in WicketFilter always returns false.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201298,,,Tue Jan 30 18:24:48 UTC 2007,,,,,,0|i0kje7:,117959,,,,,,,,26/Jan/07 08:17;almaw;Fixed in 1.3. TODO: port to 2.0,"30/Jan/07 18:24;almaw;This is now sorted out ""properly"" in 1.3 using relative URLs.
TODO: port this to Wicket 2.0",,,,,,,,,,,,,,,,,,,,,,
Fixing TreeTest,WICKET-212,12360466,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jbq,jbq,13/Jan/07 14:24,23/Jan/07 04:56,13/Mar/19 23:15,23/Jan/07 04:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"-------------------------------------------------------------------------------
Test set: wicket.markup.html.tree.TreeTest
-------------------------------------------------------------------------------
Tests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0.565 sec <<< FAILURE!
testRenderTreePage_1(wicket.markup.html.tree.TreeTest) Time elapsed: 0.124 sec <<< FAILURE!
junit.framework.ComparisonFailure: wicket/markup/html/tree/TreePageExpectedResult_1.html expected:<...></link...> but was:<... /...>
at junit.framework.Assert.assertEquals(Assert.java:81)
at wicket.util.diff.DiffUtil.validatePage(DiffUtil.java:103)
at wicket.WicketTestCase.executeTest(WicketTestCase.java:79)
at wicket.markup.html.tree.TreeTest.testRenderTreePage_1(TreeTest.java:54)

testRenderTreePageWithBorder_1(wicket.markup.html.tree.TreeTest) Time elapsed: 0.257 sec <<< FAILURE!
junit.framework.ComparisonFailure: wicket/markup/html/tree/TreePageWithBorderExpectedResult_1.html expected:<...></link...> but was:<... /...>
at junit.framework.Assert.assertEquals(Assert.java:81)
at wicket.util.diff.DiffUtil.validatePage(DiffUtil.java:103)
at wicket.WicketTestCase.executeTest(WicketTestCase.java:79)
at wicket.markup.html.tree.TreeTest.testRenderTreePageWithBorder_1(TreeTest.java:69)

testRenderTreePageNoWicketHeadTag_1(wicket.markup.html.tree.TreeTest) Time elapsed: 0.057 sec <<< FAILURE!
junit.framework.ComparisonFailure: wicket/markup/html/tree/TreePageNoWicketHeadTagExpectedResult_1.html expected:<...></link...> but was:<... /...>
at junit.framework.Assert.assertEquals(Assert.java:81)
at wicket.util.diff.DiffUtil.validatePage(DiffUtil.java:103)
at wicket.WicketTestCase.executeTest(WicketTestCase.java:79)
at wicket.markup.html.tree.TreeTest.testRenderTreePageNoWicketHeadTag_1(TreeTest.java:84)

The attached patches updates the erroneous HTML files.",,,,,,,,,,,,,,,,,,,13/Jan/07 14:24;jbq;20070113-wicket-1.x-TreeTest;https://issues.apache.org/jira/secure/attachment/12348905/20070113-wicket-1.x-TreeTest,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201292,,,Wed Jan 17 18:45:12 UTC 2007,,,,,,0|i0kjfb:,117964,,,,,,,,"17/Jan/07 18:45;jbq;Seems like this is fixed, see http://svn.apache.org/viewvc?view=rev&rev=496806",,,,,,,,,,,,,,,,,,,,,,,
Fixing AjaxTimerBehaviorTest,WICKET-208,12360424,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,frankbille,jbq,jbq,12/Jan/07 22:45,14/Jan/07 09:31,13/Mar/19 23:15,14/Jan/07 09:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"This is an attempt to fix failing testcase:

target/surefire-reports/wicket.ajax.AjaxTimerBehaviorTest.txt
-------------------------------------------------------------------------------
Test set: wicket.ajax.AjaxTimerBehaviorTest
-------------------------------------------------------------------------------
Tests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.113 sec <<< FAILURE!
testAddToAjaxUpdate(wicket.ajax.AjaxTimerBehaviorTest)  Time elapsed: 0.063 sec  <<< FAILURE!
junit.framework.AssertionFailedError: There should be 1 and only 1 script in the markup for this behavior,but 0 were found exp
ected:<1> but was:<0>
        at junit.framework.Assert.fail(Assert.java:47)
        at junit.framework.Assert.failNotEquals(Assert.java:282)
        at junit.framework.Assert.assertEquals(Assert.java:64)
        at junit.framework.Assert.assertEquals(Assert.java:201)
        at wicket.ajax.AjaxTimerBehaviorTest.validateTimerScript(AjaxTimerBehaviorTest.java:178)
        at wicket.ajax.AjaxTimerBehaviorTest.validate(AjaxTimerBehaviorTest.java:143)
        at wicket.ajax.AjaxTimerBehaviorTest.testAddToAjaxUpdate(AjaxTimerBehaviorTest.java:99)

testAddToWebPage(wicket.ajax.AjaxTimerBehaviorTest)  Time elapsed: 0.026 sec  <<< FAILURE!
junit.framework.AssertionFailedError: There should be 1 and only 1 script in the markup for this behavior,but 0 were found exp
ected:<1> but was:<0>
        at junit.framework.Assert.fail(Assert.java:47)
        at junit.framework.Assert.failNotEquals(Assert.java:282)
        at junit.framework.Assert.assertEquals(Assert.java:64)
        at junit.framework.Assert.assertEquals(Assert.java:201)
        at wicket.ajax.AjaxTimerBehaviorTest.validateTimerScript(AjaxTimerBehaviorTest.java:178)
        at wicket.ajax.AjaxTimerBehaviorTest.validate(AjaxTimerBehaviorTest.java:155)
        at wicket.ajax.AjaxTimerBehaviorTest.testAddToWebPage(AjaxTimerBehaviorTest.java:127)

The attached patch properly handles the case when the callback script is added in body onload.  Also, AbstractAjaxTimerBehavior needs to handle AjaxRequestTarget properly, because adding a body onload has no effect in an ajax request.",,,,,,,,,,,,,,,,,,,13/Jan/07 12:58;jbq;20070112-wicket-1.x-AjaxTimerBehaviorTest;https://issues.apache.org/jira/secure/attachment/12348899/20070112-wicket-1.x-AjaxTimerBehaviorTest,12/Jan/07 22:46;jbq;20070112-wicket-1.x-AjaxTimerBehaviorTest;https://issues.apache.org/jira/secure/attachment/12348873/20070112-wicket-1.x-AjaxTimerBehaviorTest,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-01-12 23:04:04.909,,,no_permission,,,,,,,,,,,201288,,,Sun Jan 14 09:31:52 UTC 2007,,,,,,0|i0kjfz:,117967,,,,,,,,"12/Jan/07 23:04;ivaynberg;does this really work? what concerns me is this:

getJsTimeoutCall() { ...return ""setTimeout(\"""" + getCallbackScript(false, true) + ""\"", "" ....

wouldnt the generated output look like this: ?

<body onload=""setTimeout(""url"", x);"" .... that quote breaks the string","13/Jan/07 06:49;jbq;If you run the testcase, you will notice in the console that the output is properly escaped:

<body onload=""setTimeout(\""var wcall=wicketAjaxGet('/WicketTester/WicketTester?wicket:interface=:0:component:-1:IUnversionedBehaviorListener&wicket:behaviorId=0&wicket:ignoreIfNotActive=true', function() { }, function() { });\"", 20000);"">
",13/Jan/07 12:59;jbq;Updated patch: an update was also needed in SimpleTestPageExpectedResult.html (used by SimpleTestPanelTest) because of the change in AbstractAjaxTimerBehavior.,"14/Jan/07 09:31;frankbille;Patch applied. It looks ok. The rendered outputs in both an AJAX and NOT-AJAX situation looks fine (escaping of "" is correct). JBQ, please use Java1.4 in any wicket1.x projects which requires this (String.replace(String, String) doesn't exist in 1.4)",,,,,,,,,,,,,,,,,,,,
Uncaught exception guesing urls using CryptedUrlWebRequestCodingStrategy,WICKET-178,12359080,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,lenzenc,lenzenc,20/Dec/06 02:37,26/Dec/06 14:08,13/Mar/19 23:15,26/Dec/06 13:32,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket,,,,0,,,,,,,,"When used the CryptedUrlWebRequestCodingStrategy strategy in my wicket application I get an uncaught exception when trying to hack urls in the browser address bar.

Configuration:

	@Override
	protected IRequestCycleProcessor newRequestCycleProcessor() {
		
	 	return new CompoundRequestCycleProcessor(new CryptedUrlWebRequestCodingStrategy(
	 			new WebRequestCodingStrategy()), 
 			null, 
 			null, 
 			null, 
 			null);
		
	} // newRequestCycleProcessor	

Exception:

java.lang.ArrayIndexOutOfBoundsException: 81
     at wicket.util.crypt.Base64UrlSafe.decodeBase64(Base64UrlSafe.java:367)
     at wicket.util.crypt.AbstractCrypt.decryptUrlSafe(AbstractCrypt.java:87)
     at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.decodeURL(CryptedUrlWebRequestCodingStrategy.java:256)
     at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.decode(CryptedUrlWebRequestCodingStrategy.java:91)
     at wicket.Request.getRequestParameters(Request.java:163)
     at wicket.RequestCycle.step(RequestCycle.java:992)
     at wicket.RequestCycle.steps(RequestCycle.java:1084)
     at wicket.RequestCycle.request(RequestCycle.java:454)
     at wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:219)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
     at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
     at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:175)
     at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
     at org.jboss.web.tomcat.tc5.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:156)
     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
     at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
     at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
     at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)
     at java.lang.Thread.run(Thread.java:595)

I'd except that this exception would be caught an a user is taken to a user friendly error page, possibly the default error page.",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-26 13:32:14.0,,,no_permission,,,,,,,,,,,201261,,,Tue Dec 26 14:08:46 UTC 2006,,,,,,0|i0kjj3:,117981,,,,,,,,26/Dec/06 13:32;jdonnerstag;Fixed 2.0,26/Dec/06 14:08;jdonnerstag;fixed 1.x (1.3),,,,,,,,,,,,,,,,,,,,,,
"When compressWhitespace is set, whitespace in <pre> blocks is also compressed",WICKET-109,12356592,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,svanerk,svanerk,25/Nov/06 13:17,05/Dec/06 22:06,13/Mar/19 23:15,05/Dec/06 22:06,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"I have a web page with some <pre> </pre> pieces in it and the
application has compressWhitespace set. However now it also compresses
the whitespaces in the pre, even though the semantics of whitespace is
different in a pre than outside of a pre. It seems to me this is a
(minor) bug?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-12-05 22:06:23.0,,,no_permission,,,,,,,,,,,201194,,,Tue Dec 05 22:06:23 UTC 2006,,,,,,0|i0kjnz:,118003,,,,,,,,"05/Dec/06 22:06;almaw;This was harder than it looked. :-)
Fixed for 1.3 and 2.0, with the common case very nearly as fast as it was before (extra quick regexp match).",,,,,,,,,,,,,,,,,,,,,,,
Lazy-registration fails for mounted resources.,WICKET-101,12356395,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,almaw,almaw,almaw,22/Nov/06 18:37,22/Nov/06 18:50,13/Mar/19 23:15,22/Nov/06 18:50,1.3.0-beta1,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,,,,,0,,,,,,,,"If you mount a CSS resource which has background image url() links, the lazy-resolution code in SharedResourceRequestTarget doesn't search class aliases when it tries to locate the image, which is rather annoying.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201186,,,Wed Nov 22 18:50:20 UTC 2006,,,,,,0|i0kjon:,118006,,,,,,,,22/Nov/06 18:50;almaw;Fixed by adding a getAliasClass(String alias) : Class method to SharedResources and checking this in SharedResourceRequestTarget.,,,,,,,,,,,,,,,,,,,,,,,
Ajax Tabbed Panel doesnt work,WICKET-34,12354762,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,,jdonnerstag,jdonnerstag,04/Nov/06 14:23,04/Nov/06 18:17,13/Mar/19 23:15,04/Nov/06 18:17,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0 branch (discontinued),,,wicket-examples,,,,0,,,,,,,,"Click on ""second page"" and everything is fine. Than have another try and click on any other page, but the page wont change",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-04 16:27:11.0,,,no_permission,,,,,,,,,,,201122,,,Sat Nov 04 18:17:24 UTC 2006,,,,,,0|i0kjt3:,118026,,,,,,,,"04/Nov/06 16:27;knopp;All Ajax is broken right now. EncodingResponse from AjaxRequestTarget was for some reason replaced by StringResponse. This breaks the output. Encoding response changed every ""]"" to ""^]"" to prevent output to close the CDATA section in Ajax response.","04/Nov/06 18:17;knopp;Yep, it was the encoding. Should be fixed now.",,,,,,,,,,,,,,,,,,,,,,
Wrong source paths in build.xml,WICKET-31,12354749,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Minor,Fixed,dashorst,obeliks,obeliks,04/Nov/06 00:30,04/Nov/06 12:47,13/Mar/19 23:15,04/Nov/06 12:47,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.4,1.3.0-beta1,2.0 branch (discontinued),wicket,,,,0,,,,,,,,"The paths used in the ant build.xml don't match the actual file structure. In particular, the following changes should be made:

The following lines should be changed
-       <property name=""src.main.dir"" value=""src/java"" />
-       <property name=""src.test.dir"" value=""src/test"" />
into
+       <property name=""src.main.dir"" value=""src/main/java"" />
+       <property name=""src.test.dir"" value=""src/test/java"" />


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-04 12:47:42.0,,,no_permission,,,,,,,,,,,201119,,,Sat Nov 04 12:47:42 UTC 2006,,,,,,0|i0kjtj:,118028,,,,,,,,04/Nov/06 12:47;dashorst;Fixed the left overs from Igor.,,,,,,,,,,,,,,,,,,,,,,,
Modal CSS Overflow Auto Bug,WICKET-2056,12413395,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,zachleat,zachleat,27/Jan/09 17:08,29/Mar/11 20:42,13/Mar/19 23:15,17/Feb/11 07:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.16,1.5-RC2,,wicket,,,,0,,,,,,,,"To duplicate the issue, create a panel wicket modal with the following content that has enough content to trigger an overflow:
<br/><br/><br/><br/><br/><br/><br/><br/><br/> (etc.)
<div style=""position: relative"">Relative</div>

Then try scrolling in IE6 or IE7.  The relative div will remain in a fixed position.


See the following for a description of the bug.
http://rowanw.com/bugs/overflow_relative.htm

On the first child div below div.w_content, there should be a style declaration assigned to the child div that contains ""position: relative;""  For example,

<div id=""GENERATED_WICKET_ID"" style=""overflow: auto; height: 400px; position: relative"">",Internet Explorer 6 and 7,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-27 18:26:58.387,,,no_permission,,,,,,,,,,,202970,,,Tue Mar 29 20:42:06 UTC 2011,,,,,,0|i0kehr:,117165,,,,,,,,"27/Jan/09 18:26;hillj2;I just ran into this same issue, and using your suggestion, I created a workaround:

public class MyModalWindow extends ModalWindow implements IHeaderContributor {

  .  .  .  .  .

  public void renderHead(IHeaderResponse response) {
    response.renderString(""<style type=\""text/css\"">div.w_content div {position:relative;}</style>"");
  }

}
","27/Jan/09 21:23;zachleat;Well, that may work, but is a little eager for my taste and may cause unintended consequences, as the default value for position is ""static"".  If you're fine with all of the div's in your modal having position: relative, then don't let me stop you.

If IE supported child selectors, you could do div.w_content > div, but alas it does not.

This should probably added to an additional CSS class in the modal.css file, and then the class added to the <div>.

Thanks,
Zach","18/Feb/11 00:12;hudson;Integrated in Apache Wicket 1.4.x #446 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/446/])
    ","29/Mar/11 20:42;tahitiangabriel;This correction seems to have broken the datepicker in ModalWindow. It is display under the modal instead of above.
See http://apache-wicket.1842946.n4.nabble.com/WICKET-2056-broke-DatePicker-in-ModalWindow-in-1-4-16-tt3416225.html for details.",,,,,,,,,,,,,,,,,,,,
MarkupException on unclosed <col> tag,WICKET-2765,12458211,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,christorogers,christorogers,05/Mar/10 06:41,17/Sep/10 14:49,13/Mar/19 23:15,25/Aug/10 00:37,1.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.11,1.5-M2.1,,,,,,0,,,,,,,,"While Wicket's markup parser supports unclosed tags such as <br> and <p>, it doesn't support unclosed <col> tags.

Extract from error message:
org.apache.wicket.markup.MarkupException: Tag '<col>' (line 11, column 18) has a mismatched close tag at '</table>'",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-03-05 17:32:30.341,,,no_permission,,,,,,,,,,,203620,,,Wed Aug 25 01:10:04 UTC 2010,,,,,,0|i0kckn:,116854,,,,,,,,"05/Mar/10 17:32;jthomerson;There's no reason for us to start adding a bunch of rules allowing non-valid XHTML.  Simply add "" />"" to the end of your col tag.  If you disagree, please give a supporting reason that we should add these parsing rules that allow you to generate invalid markup.","11/Mar/10 15:01;dashorst;The reason might be: not everybody wants to use *X*HTML, but might want to be able to use HTML. Especially with HTML5 looming around the corner, this is rather essential IMO.","25/Aug/10 00:37;ivaynberg;added to ExtendedOpenCloseTagExpander, install it to get the behavior","25/Aug/10 00:56;hudson;Integrated in Apache Wicket 1.4.x #115 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/115/])
    Issue: WICKET-2765
","25/Aug/10 01:10;hudson;Integrated in Apache Wicket 1.5.x #262 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.5.x/262/])
    Issue: WICKET-2765
",,,,,,,,,,,,,,,,,,,
Deprecated JavaDoc for org.apache.wicket.behavior.HeaderContributor,WICKET-2317,12427442,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,stefan lindner,stefan lindner,09/Jun/09 11:03,04/Dec/09 08:03,13/Mar/19 23:15,04/Dec/09 08:03,1.4-RC5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,,,wicket,,,,0,,,,,,,,"The JAvadoc says

     ""A shortcut for common cases is to call forCss(Class, String) to contribute a package css file or forJavaScript(Class, String) to contribute a packaged javascript file.""

But alls ""for..."" methods are marked as deprecated",Any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203210,,,2009-06-09 11:03:22.0,,,,,,0|i0kdpj:,117038,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException thrown from BaseWicketTester isComponent,WICKET-2545,12439185,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,breuere,breuere,27/Oct/09 15:00,27/Oct/09 22:18,13/Mar/19 23:15,27/Oct/09 22:18,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.4,1.5-M1,,wicket,,,,0,,,,,,,,"If a component is not visible, then ""getComponentFromLastRenderedPage"" will return null (as opposed to failing if it is not present).  In the check below, it seems like ""Result.fail"" is missing a ""return"" preceding it.  Otherwise, the ""component.getClass()"" immediately following will generate an NullPointerException.

	public <C extends Component> Result isComponent(String path, Class<C> expectedComponentClass)
	{
		Component component = getComponentFromLastRenderedPage(path);
		if (component == null)
		{
			Result.fail(""Component not found: "" + path); // <-- Should return here.
		}
		return isTrue(""component '"" + Classes.simpleName(component.getClass()) + ""' is not type:"" + // <-- NPE thrown here
			Classes.simpleName(expectedComponentClass),
			expectedComponentClass.isAssignableFrom(component.getClass()));
	}
",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203423,,,2009-10-27 15:00:21.0,,,,,,0|i0kd3j:,116939,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc for Component.getMarkupId is incorrect,WICKET-2516,12437742,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,rdearing,rdearing,09/Oct/09 19:50,17/Oct/09 11:37,13/Mar/19 23:15,17/Oct/09 11:37,1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,,,wicket,,,,0,,,,,,,,"The javadoc for Component.getMarkupId states:

""Retrieves id by which this component is represented within the markup. This is either the id attribute set explicitly via a call to setMarkupId(String), id attribute defined in the markup, or an automatically generated id - in that order. ""

However, a colleague has pointed out that retrieving the markup id from the html markup is not working. The below post confirms that it is not possible to retrieve the markup id from the markup:
http://www.nabble.com/Re%3A-id-attribute-of-Component-Tag-in-renderHead--p22953222.html

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-17 11:37:18.562,,,no_permission,,,,,,,,,,,203396,,,Sat Oct 17 11:37:18 UTC 2009,,,,,,0|i0kd5r:,116949,,,,,,,,"17/Oct/09 11:37;jdonnerstag;fixed the javadoc in 1.4. 

It'll be possible in 1.5 but the source code has not yet been modified.",,,,,,,,,,,,,,,,,,,,,,,
Button.onSubmit javadoc is misleading,WICKET-2505,12437255,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,samket,samket,05/Oct/09 07:19,07/Oct/09 19:33,13/Mar/19 23:15,07/Oct/09 19:33,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.3,1.5-M1,,wicket,,,,0,,,,,,,,"The javadoc in org.apache.wicket.markup.html.form.Button.onSubmit() is misleading. It says ""Override this method to provide special submit handling in a multi-button form. It is called whenever the user clicks this particular button."" In reality, the method doesn't get called if the form's validation fails. Not sure if there are other cases as well when the method doesn't get called.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-07 19:33:07.038,,,no_permission,,,,,,,,,,,203385,,,Wed Oct 07 19:33:07 UTC 2009,,,,,,0|i0kd7b:,116956,,,,,,,,05/Oct/09 07:31;samket;I stumbled upon this bug when I tried to add some code to my onSubmit() that I wanted to execute whether or not the validation fails. It's not a big issue but fine-tuning the javadoc might save other people a tiny bit of time.,07/Oct/09 19:33;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,
onBeforeRender() set visibility of NavigationToolbar prevents it from showing again,WICKET-2175,12417142,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,verant,verant,18/Mar/09 08:08,07/Oct/09 09:54,13/Mar/19 23:15,07/Apr/09 15:09,1.4-RC3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-extensions,,,,0,,,,,,,,"This code in NavigationToolbar:

	@Override
	protected void onBeforeRender()
	{
		setVisible(table.getPageCount() > 1);
		super.onBeforeRender();
	}

makes impossible to show toolbar after it became hidden when using with Ajax (AjaxNavigationToolbar)

Possible solution:
  @Override
  public boolean isVisible() {
    return table.getPageCount()>1;
  }
",,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-07 15:09:33.815,,,no_permission,,,,,,,,,,,203083,,,Wed Oct 07 09:54:08 UTC 2009,,,,,,0|i0ke4n:,117106,,,,,,,,07/Apr/09 15:09;jdonnerstag;thanks,"06/May/09 22:16;lgawron;This actually reintroduces much bigger bug described here: http://markmail.org/thread/bn3hyvmx6rlyp7gj

Could you please fix it somehow else?",07/May/09 03:42;verant;Is there any other method that will be called each time Component is to be rendered if it was set invisible?,07/May/09 03:45;ivaynberg;see Component#callOnBeforeRenderIfNotVisible(),"07/May/09 03:52;verant;well, then 

  @Override
  public boolean isVisible() {
    return table.getPageCount()>1;
  } 

may be deleted

and

  @Override
  protected boolean callOnBeforeRenderIfNotVisible() {
    return true;
  }

may be added

and

@Override
protected void onBeforeRender()
{
setVisible(table.getPageCount() > 1);
super.onBeforeRender();
} 

may be returned to its place.","07/May/09 04:23;ivaynberg;Juergen, will you do the honours?","07/Oct/09 09:54;lgawron;This functionality still does not work, 1.5-SS:

	@Override
	protected boolean callOnBeforeRenderIfNotVisible()
	{
		return true;
	}

	/** {@inheritDoc} */
	@Override
	protected void onBeforeRender()
	{
		setVisible(table.getPageCount() > 1);
		super.onBeforeRender();
	}


Once NavigationToolbar is set to invisible onBeforeRender() is never called again (despite callOnBeforeRenderIfNotVisible set to true). Please advise.",,,,,,,,,,,,,,,,,
DateTextField cannot work with default converter (or javadoc wrong),WICKET-2456,12435113,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,svenmeier,svenmeier,08/Sep/09 13:50,23/Sep/09 01:51,13/Mar/19 23:15,23/Sep/09 01:51,1.4.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4.2,1.5-M1,,wicket-extensions,,,,0,,,,,,,,"DateTextField's javadoc states the following:
""If you don't, it is the same as creating a <code>TextField</code> with <code>java.util.Date</code> as it's type (it will get the pattern from the user's locale)""

This is not true, DateTextField will always create a converter, even if you don't provide a pattern.

Please roll back the following changes or adjust javadoc:

  http://svn.apache.org/viewvc?view=rev&revision=550501
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-09-23 01:51:12.275,,,no_permission,,,,,,,,,,,203341,,,Wed Sep 23 01:51:12 UTC 2009,,,,,,0|i0kdbz:,116977,,,,,,,,"23/Sep/09 01:51;ivaynberg;the code change you are referring to has been in the code for more then two years, we cant really change that in 1.4.x. instead, i will amend the javadoc",,,,,,,,,,,,,,,,,,,,,,,
Quickstart for 1.4 uses 1.3 dtd in HomePage.html (with patch),WICKET-2404,12431805,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,erikvanoosten,erikvanoosten,30/Jul/09 14:24,06/Sep/09 03:35,13/Mar/19 23:15,06/Sep/09 03:35,1.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-quickstart,,,,0,,,,,,,,"The generated HomePage.html contains the following header:

<html xmlns:wicket=""http://wicket.apache.org/dtds.data/wicket-xhtml1.3-strict.dtd"" >

That should be:

<html xmlns:wicket=""http://wicket.apache.org/dtds.data/wicket-xhtml1.4-strict.dtd"" >
",,,,,,,,,,,,,,,,,,,24/Aug/09 18:48;erikvanoosten;WICKET-2404-1.4.patch;https://issues.apache.org/jira/secure/attachment/12417508/WICKET-2404-1.4.patch,24/Aug/09 18:48;erikvanoosten;WICKET-2404-1.5.patch;https://issues.apache.org/jira/secure/attachment/12417509/WICKET-2404-1.5.patch,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203291,,,Mon Aug 24 18:48:49 UTC 2009,,,,,,0|i0kdg7:,116996,,,,,,,,"24/Aug/09 18:48;erikvanoosten;Patch for Wicket 1.4 (please apply in 1.4 branch)
and Wicket 1.5 (please apply in trunk).",,,,,,,,,,,,,,,,,,,,,,,
EmailAddressValidator property has a typo in French version,WICKET-2358,12429768,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,rodrigob,rodrigob,07/Jul/09 23:38,09/Jul/09 15:35,13/Mar/19 23:15,09/Jul/09 15:35,1.4-RC4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC7,,,wicket,,,,0,,,,,,,,"In Application_fr.properties EmailAddressValidator has a typo

EmailAddressValidator='${input}' n'est pas une address e-mail valide.

should be

EmailAddressValidator='${input}' n'est pas une adresse e-mail valide.",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203250,,,2009-07-07 23:38:33.0,,,,,,0|i0kdl3:,117018,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The JavaDoc for IPageLink still holds a reference to PageLink which is deprecated,WICKET-2259,12424693,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,stefan lindner,stefan lindner,06/May/09 12:36,06/May/09 15:59,13/Mar/19 23:15,06/May/09 15:59,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC5,,,wicket,,,,0,,,,,,,,The JavaDoc for IPageLink still holds a reference to PageLink which is deprecated,Any,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203157,,,2009-05-06 12:36:03.0,,,,,,0|i0kdw7:,117068,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AutoComplete ShowListOnFocusGain not working,WICKET-2024,12412592,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,ig0774,ig0774,16/Jan/09 13:55,26/Apr/09 06:18,13/Mar/19 23:15,26/Apr/09 06:18,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-extensions,,,,0,,,,,,,,"I noticed an issue with the Wicket-Extensions autocomplete behavior when the AutoCompleteSettings ShowListOnFocusGain flag is set to true. Basically, it works as expected in Firefox, but in (at least) Chrome, IE6 and IE7, it displays the list on focus gain, but you cannot use the mouse to select any of the items in the autocomplete list. The debug log showed that as soon as an item in the list was clicked on, the onblur event would fire for the field, which would then immediately fire a focus event, which would trigger reloading the list.

This fix for this is trivial: adding one line to the top of obj.onfocus: if (mouseactive==1) return killEvent(event);.

I'll post the patch.","Google Chrome, IE 6, IE 7",60,60,,0%,60,60,,,,,,,,,,,,16/Jan/09 13:56;ig0774;wicket-autocomplete-onfocus.patch;https://issues.apache.org/jira/secure/attachment/12398066/wicket-autocomplete-onfocus.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202939,,,Fri Jan 16 13:56:40 UTC 2009,,,,,,0|i0kelb:,117181,,,,,,,,16/Jan/09 13:56;ig0774;The trivial fix.,,,,,,,,,,,,,,,,,,,,,,,
DateTextField does not implement Generics,WICKET-2129,12415650,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,valon,valon,26/Feb/09 10:35,25/Apr/09 19:16,13/Mar/19 23:15,25/Apr/09 19:16,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wicket-extensions,,,,0,,,,,,,,"The class DateTextField does not implement gernerics correct.
The Classdef is:
public class DateTextField extends TextField implements ITextFormatProvider {
but should be
public class DateTextField extends TextField<Date> implements ITextFormatProvider {

The compiler shows a generics warning when adding a DateValidator to the field",-,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-04-25 19:16:32.521,,,no_permission,,,,,,,,,,,203038,,,Sat Apr 25 19:16:32 UTC 2009,,,,,,0|i0ke8v:,117125,,,,,,,,25/Apr/09 19:16;ivaynberg;looks like its already fixed in latest trunk,,,,,,,,,,,,,,,,,,,,,,,
AbstractColumn::isSortable() doesn't know about overrided getSortProperty(),WICKET-2239,12423648,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,,verant,verant,24/Apr/09 02:19,24/Apr/09 07:43,13/Mar/19 23:15,24/Apr/09 07:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket-extensions,,,,0,,,,,,,,"Overriding getSortProperty() does not make column sortable until isSortable() is
not overrided also.

I think this code in AbstractColumn::isSortable() may be changed like:

       public boolean isSortable()
       {
               return sortProperty != null; //change to getSortProperty()
       }
",,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,203141,,,2009-04-24 02:19:30.0,,,,,,0|i0kdy7:,117077,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UrlValidator property is duplicated in Application_nl.properties,WICKET-2167,12416830,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,verant,verant,13/Mar/09 12:43,21/Mar/09 09:51,13/Mar/19 23:15,21/Mar/09 09:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,UrlValidator property is twice in Application_nl.properties  in 37 and 46 lines.,,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-21 09:51:24.101,,,no_permission,,,,,,,,,,,203075,,,Sat Mar 21 09:51:24 UTC 2009,,,,,,0|i0ke5j:,117110,,,,,,,,21/Mar/09 09:51;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
PackagedTextTemplate uses default ResourceStreamLocator first,WICKET-2135,12415932,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,soulspirit,soulspirit,02/Mar/09 14:20,07/Mar/09 08:31,13/Mar/19 23:15,07/Mar/09 08:31,1.4-RC2,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC3,,,wicket,,,,0,,,,,,,,"PackagedTextTemplate:155

When loading a resource, ResourceStreamLocator should give priority to the application specific locator first, and not using it as a fallback solution if the default ResourceStreamLocator fails to find the resource.

Imagine an environment where a custom resource locator has been set up to get all the resources from the project source folder (very useful during development to modify markups, css' and js' on the fly through the IDE).
With the current behavior I have to modify the deployed-version of my resource to make wicket apply the changes on the fly.

Here's my usual Application.init() method:

if( Application.DEVELOPMENT.equals( getConfigurationType() ) ){
  getResourceSettings().setResourceStreamLocator(
    new ResourceStreamLocator(
      new Path(
        new Folder(
          getServletContext().getRealPath( ""/"" ).replaceFirst( ""web/"", ""src/"" )
        )
      )
    )
  )
}",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-03-07 08:31:02.727,,,no_permission,,,,,,,,,,,203043,,,Sat Mar 07 08:31:02 UTC 2009,,,,,,0|i0ke7z:,117121,,,,,,,,07/Mar/09 08:31;jdonnerstag;Thanks,,,,,,,,,,,,,,,,,,,,,,,
Wrong log message text in RequestCycle#prepare,WICKET-2040,12412995,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,erikvanoosten,erikvanoosten,22/Jan/09 14:18,24/Jan/09 08:27,13/Mar/19 23:15,24/Jan/09 08:27,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,"In RequestCycle#prepare it says:

log.error(""Exception occurred during onEndRequest of the SessionStore"", e);

This should be:

log.error(""Exception occurred during onBeginRequest of the SessionStore"", e);",,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-24 08:27:58.401,,,no_permission,,,,,,,,,,,202954,,,Sat Jan 24 08:27:58 UTC 2009,,,,,,0|i0kej3:,117171,,,,,,,,24/Jan/09 08:27;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
org.apache.wicket.util.license.PropertiesLicenseHeaderHandler failed,WICKET-2008,12411853,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,verant,verant,07/Jan/09 12:33,07/Jan/09 17:46,13/Mar/19 23:15,07/Jan/09 17:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-auth-roles,,,,0,,,,,,,,"Running org.apache.wicket.util.license.ApacheLicenceHeaderTest

org.apache.wicket.util.license.PropertiesLicenseHeaderHandler failed. The following files(2) didn't have correct license header:
NONE D:\Java\_Versioned\Wicket\trunk\wicket-auth-roles\src\main\java\org\apache\wicket\authentication\panel\SignInPanel_de.properties
NONE D:\Java\_Versioned\Wicket\trunk\wicket-auth-roles\src\main\java\org\apache\wicket\authentication\panel\SignInPanel_nl.properties",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202924,,,2009-01-07 12:33:14.0,,,,,,0|i0kenb:,117190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Palette's Choice and Selection component break XHTML validation,WICKET-2002,12411683,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,xxbedy,xxbedy,05/Jan/09 12:59,05/Jan/09 20:11,13/Mar/19 23:15,05/Jan/09 20:11,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"onFocus attribute in XHTML must be in lowercase.

		if (onFocus != null) {
			attrs.put(""onFocus"", onFocus);
		}

shoud be:

		if (onFocus != null) {
			attrs.put(""onfocus"", onFocus);
		}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-05 20:11:25.52,,,no_permission,,,,,,,,,,,202918,,,Mon Jan 05 20:11:25 UTC 2009,,,,,,0|i0keof:,117195,,,,,,,,05/Jan/09 20:11;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
Palette's AbstractOption component break XHTML validation,WICKET-2003,12411684,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jdonnerstag,xxbedy,xxbedy,05/Jan/09 13:08,05/Jan/09 20:08,13/Mar/19 23:15,05/Jan/09 20:08,1.4-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket-extensions,,,,0,,,,,,,,"multiple attribute must have value in XHTML
instead:
		attrs.put(""multiple"",null);
use:
		attrs.put(""multiple"", ""multiple"");

",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-01-05 20:08:54.147,,,no_permission,,,,,,,,,,,202919,,,Mon Jan 05 20:08:54 UTC 2009,,,,,,0|i0keo7:,117194,,,,,,,,05/Jan/09 20:08;jdonnerstag;thanks,,,,,,,,,,,,,,,,,,,,,,,
"SubmitLink javadoc is wrong. It states the javascript will be used in the href attribute of the tab, but it is actually in the onclick attribute.",WICKET-1925,12408188,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,rdearing,rdearing,10/Nov/08 21:50,17/Nov/08 20:45,13/Mar/19 23:15,17/Nov/08 20:45,1.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.4-RC2,,,wicket,,,,0,,,,,,,,I was reading the SubmitLink javadoc which states the javascript it generates will be put into the href attribute of the link. Instead the javascript is put in the onclick attribute. The javadoc should be fixed to state that the javascript is put into the onclick attribute. ,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202849,,,2008-11-10 21:50:38.0,,,,,,0|i0kevz:,117229,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong translation for StringValidator.range in Application_pl.properties ,WICKET-1909,12407648,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,a_wronski@gazeta.pl,a_wronski@gazeta.pl,01/Nov/08 08:00,04/Nov/08 16:51,13/Mar/19 23:15,04/Nov/08 16:51,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.6,1.4-RC2,,wicket,,,,0,,,,,,,,"This:
StringValidator.range='${input}' nie jest poza zakresem d\u0142ugo\u015bci znak\u00f3w od ${minimum} do ${maximum}.

should be replaced with this:

StringValidator.range='${input}' jest poza zakresem d\u0142ugo\u015bci znak\u00f3w od ${minimum} do ${maximum}.

",,180,180,,0%,180,180,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202835,,,2008-11-01 08:00:24.0,,,,,,0|i0kexr:,117237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PopupSettings' windowName fixes for IE,WICKET-1541,12394064,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,,martin-g,martin-g,16/Apr/08 08:22,16/Sep/08 20:32,13/Mar/19 23:15,17/May/08 18:19,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,wicket,,,,0,,,,,,,,"In o.a.w.markup.html.link.PopupSettings.java there is a fix for IE at line 177:

	// Fix for IE bug.
	windowTitle = windowTitle.replace(':', '_');

This fix should either be improved/extended or it would be good if the javadocs for 'pageMap' state that IE supports only alphanumeric characters 
and underscore in the windowTitle.

Attached quickstart shows the problem in IE: a pageMap/windowTitle with a dash leads to ""Illegal argument"" JavaScript error.",Internet Explorer 6/7,,,,,,,,,,,,,,,,,,16/Apr/08 08:22;martin-g;popups.tgz;https://issues.apache.org/jira/secure/attachment/12380256/popups.tgz,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-17 18:19:55.387,,,no_permission,,,,,,,,,,,202502,,,Sat May 17 18:19:55 UTC 2008,,,,,,0|i0kfuv:,117386,,,,,,,,"17/May/08 18:19;seitz;from now on, all non-word characters [^0-9A-Za-z_] in the window title will be replaced with the underscore character '_'",,,,,,,,,,,,,,,,,,,,,,,
XHTML validation failure for DatePicker,WICKET-1135,12381935,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,,mlaccetti,mlaccetti,06/Nov/07 17:32,16/Sep/08 20:32,13/Mar/19 23:15,07/Nov/07 19:58,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc2,,,wicket-datetime,,,,0,,,,,,,,"org.apache.wicket.extensions.yui.calendar.DatePicker code generates an img tag that is missing the alt tag, which breaks XHTML validation.",,,,,,,,,,,,,,,,,,,06/Nov/07 17:33;mlaccetti;DatePicker.XHTML.patch;https://issues.apache.org/jira/secure/attachment/12369038/DatePicker.XHTML.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202137,,,Tue Nov 06 17:33:25 UTC 2007,,,,,,0|i0kgxz:,117562,,,,,,,,06/Nov/07 17:33;mlaccetti;Patch to generate a blank alt attribute.,,,,,,,,,,,,,,,,,,,,,,,
ComponentTag#setNamespace() only modifies the opening tag,WICKET-1330,12388126,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,,tietyt,tietyt,07/Feb/08 19:36,16/Sep/08 20:32,13/Mar/19 23:15,07/Feb/08 20:01,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.2,,,wicket,,,,0,,,,,,,,"Calling ComponentTag#setNamespace() only modifies the opening tag.  It should modify the opening tag and closing tag.  A simple work around is to call setName() instead with a parameter like ""fb:name"".  That will have the desired effect.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-02-07 20:01:49.232,,,no_permission,,,,,,,,,,,202310,,,Thu Feb 07 20:01:49 UTC 2008,,,,,,0|i0kgfb:,117478,,,,,,,,07/Feb/08 20:01;seitz;done,,,,,,,,,,,,,,,,,,,,,,,
DataTable.html does not validate (HTML 4.01/XHTML-Strict),WICKET-1496,12393385,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,hbf,hbf,08/Apr/08 09:44,16/Sep/08 07:36,13/Mar/19 23:15,16/Sep/08 07:36,1.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket-extensions,,,,1,,,,,,,,"According to http://www.w3.org/TR/html401/struct/tables.html#h-11.2.3, <tfoot>..</tfoot> must come before the start of <tbody>. The has not changed for XHTML.

Proposed fix: just move <tfoot> up after <thead> and before <tbody>.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-04-10 11:38:57.147,,,no_permission,,,,,,,,,,,202461,,,Wed Jun 04 12:52:18 UTC 2008,,,,,,0|i0kfyv:,117404,,,,,,,,10/Apr/08 11:38;seitz;fixed. thanks.,"04/Jun/08 12:52;hbf;Thanks for the fix.

Unfortunately, another validation issue shows up: If there is no markup between <tfoot> and </tfoot>, the table markup does not validate.

Here is an example that only validates if you uncomment the comment in it (see validator.w3.org):

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
<title>Test</title>
</head>
<body>

<table>
<thead>
  <tr>
    <th></th>
    <th></th>
  </tr>
</thead>
<tfoot>
  <!--
  <tr>
    <td></td>
    <td></td>
  </tr>
  -->
</tfoot>
<tbody>
  <tr>
    <td></td>
    <td></td>
  </tr>
</tbody>
</table>

</body>
</html>

It seems, <tfoot> needs to be hidded if it has no content.",,,,,,,,,,,,,,,,,,,,,,
wicket:id attribute with a value containing spaces generates invalid markup,WICKET-1818,12403610,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,kare,kare,03/Sep/08 12:42,15/Sep/08 04:51,13/Mar/19 23:15,15/Sep/08 04:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"HTML:
<span wicket:id=""foo bar""></span>

Java:
Label label = new Label(""foo bar"", ""lol"");
label.setOutputMarkupId(true);

Generates markup:
<span id=""foo bar"">lol</span>

Expected:
<span id=""foo_bar"">lol</span>

When wicket generates wicket:id attributes it should replace spaces with some appropriate valid character (like underscore ""_"").
",,,,,,,,,,,,,,,,,,,15/Sep/08 04:38;miojo;MarkupIdTestPage.html;https://issues.apache.org/jira/secure/attachment/12390089/MarkupIdTestPage.html,15/Sep/08 04:39;miojo;MarkupIdTestPage.java;https://issues.apache.org/jira/secure/attachment/12390090/MarkupIdTestPage.java,15/Sep/08 04:40;miojo;MarkupIdTestPageExpectedResult.html;https://issues.apache.org/jira/secure/attachment/12390091/MarkupIdTestPageExpectedResult.html,15/Sep/08 04:31;miojo;patch-1818.diff;https://issues.apache.org/jira/secure/attachment/12390088/patch-1818.diff,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202748,,,2008-09-03 12:42:06.0,,,,,,0|i0kf5r:,117273,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hard-coded quotes in xml prologue,WICKET-1652,12396574,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,gwynevans,gwynevans,21/May/08 20:57,31/Jul/08 06:39,13/Mar/19 23:15,31/Jul/08 06:39,1.3.3,1.4-M1,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"Even if you specify a prologue as:
 <?xml version=""1.0"" encoding=""UTF-8""?>
(i.e. double quoted) it gets delivered as:
 <?xml version='1.0' encoding='UTF-8'?>

XML spec says either should be acceptable but I've come across one case where it would be useful to have it use the quote char that's supplied.",,,,,,,,,,,,,,,,,,,21/May/08 20:59;gwynevans;Page.patch;https://issues.apache.org/jira/secure/attachment/12382513/Page.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2008-05-22 08:33:33.611,,,no_permission,,,,,,,,,,,96893,,,Sun Jul 06 13:05:31 UTC 2008,,,,,,0|i0kfl3:,117342,,,,,,,,21/May/08 20:59;gwynevans;I could just change it but wondered if anyone had any comments first (e.g. it's not worth doing?),"22/May/08 08:33;jdonnerstag;Despite of the XML spec their might as well be a client which is not able to handle "" quotes. For these none standard compliant client, IMO, it would be good to support both type of quotes. May be a simple method to be subclassed if you want change the quote. I'll have a look over the weekend.",22/May/08 11:24;gwynevans;I guess a subclass would be possible but I still feel the approach in the patch would be more intuative.,06/Jul/08 13:05;dashorst;Moved to next milestone release.,,,,,,,,,,,,,,,,,,,,
In html Include component isAbsolute method returns false for an absolute path in unix-like systems ,WICKET-1755,12400807,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,uygaryuzsuren,uygaryuzsuren,23/Jul/08 10:04,28/Jul/08 17:32,13/Mar/19 23:15,28/Jul/08 17:32,1.4-M3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"In isAbsolute method, if colon position is -1 then this url MAY STILL be an absolute url. In unix systems there may not be colon in absolute paths. For example: /home/someuser.somefile.html

So, in order to fix this, a leading / (slash) may be checked to exist like:

int colonPos = url.indexOf("":"");
int slashPos = url.indexOf(""/"");

if (colonPos == -1 && slashPos == -1) {
return false; //Relative
} else if (colonPos == -1 && slashPos == 0) {
return true; //Absolute
}

//Original Code
//org.apache.wicket.markup.html.include.Include.java

protected final boolean isAbsolute(String url)
	{
		if (url == null)
		{
			return false;
		}

		// do a fast, simple check first
		int colonPos;
		if ((colonPos = url.indexOf("":"")) == -1)
		{
			return false;    /*PROBLEM IS HERE*/
		}
...",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202694,,,2008-07-23 10:04:53.0,,,,,,0|i0kfbb:,117298,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in method name: AttributeModifier#replaceAttibuteValue,WICKET-1759,12401170,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,pparson,pparson,28/Jul/08 16:14,28/Jul/08 17:23,13/Mar/19 23:15,28/Jul/08 17:23,1.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.5,1.4-RC1,,wicket,,,,0,,,,,,,,"There's a typo in the name of the method AttributeModifier#replaceAttibuteValue. It should say replaceAttributeValue (with an 'r').
Since it is part of the public API, I think it should be corrected, and the current method left in there, marked as deprecated.
http://wicket.apache.org/docs/wicket-1.3.2/wicket/apidocs/org/apache/wicket/AttributeModifier.html#replaceAttibuteValue(org.apache.wicket.Component,%20org.apache.wicket.markup.ComponentTag)",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,202698,,,2008-07-28 16:14:32.0,,,,,,0|i0kfan:,117295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in src/main/java/org/apache/wicket/protocol/http/WebApplication.java,WICKET-1626,12395912,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,mrmean,funkattack,funkattack,13/May/08 11:59,13/May/08 19:58,13/Mar/19 23:15,13/May/08 18:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.4,1.4-M2,,,,,,0,,,,,,,,"Index: src/main/java/org/apache/wicket/protocol/http/WebApplication.java
===================================================================
--- src/main/java/org/apache/wicket/protocol/http/WebApplication.java	(revision 655812)
+++ src/main/java/org/apache/wicket/protocol/http/WebApplication.java	(working copy)
@@ -167,7 +167,7 @@
 	}
 
 	/**
-	 * Gets an init parameter from the filter's context.
+	 * Gets an init parameter of the filter, or null if the parameter does not exist.
 	 * 
 	 * @param key
 	 *            the key to search for
@@ -179,9 +179,10 @@
 		{
 			return wicketFilter.getFilterConfig().getInitParameter(key);
 		}
-		throw new IllegalStateException(""servletContext is not set yet. Any code in your""
-			+ "" Application object that uses the wicketServlet/Filter instance should be put""
-			+ "" in the init() method instead of your constructor"");
+		throw new IllegalStateException(""init parameter '"" + key +
+			""' is not set yet. Any code in your"" +
+			"" Application object that uses the wicketServlet/Filter instance should be put"" +
+			"" in the init() method instead of your constructor"");
 	}
 
 	/**
@@ -202,7 +203,7 @@
 
 	/**
 	 * Gets the servlet context for this application. Use this to get references to absolute paths,
-	 * global web.xml parameters (<context-param>), etc.
+	 * global web.xml parameters (&lt;context-param&gt;), etc.
 	 * 
 	 * @return The servlet context for this application
 	 */
@@ -555,7 +556,7 @@
 		 * namespaced param. see WICKET-1317
 		 */
 
-		// If no system parameter check filter/servert initparam and context param
+		// If no system parameter check filter/servlet <init-param> and <context-param>
 		if (result == null)
 		{
 			result = getInitParameter(""wicket."" + Application.CONFIGURATION);
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-05-13 15:27:27.73,,,no_permission,,,,,,,,,,,202580,,,Tue May 13 19:58:10 UTC 2008,,,,,,0|i0kfnz:,117355,,,,,,,,13/May/08 15:27;jcompagner;i think maurice can handle this one.,"13/May/08 18:56;mrmean;Thanks Johan, it was a pickle but i think i nailed it.
although you might want to check if i missed anything :P

BTW Martin what on earth did you use to create this patch? it simply does not match anything on trunk or 1.3 branch.","13/May/08 19:04;jcompagner;""BTW Martin what on earth did you use to create this patch? it simply does not match anything on trunk or 1.3 branch. ""

Ha! it was even a hard one to tackle!
And i thought lets be gentle..","13/May/08 19:58;funkattack;Darn, and I thought I could keep a low profile,  by adding it to jira instead of the mailing list.
And now you are making fun of me:-)

Eclipse -> Context Menu of the Editor -> Team... -> Create Patch... -> hit Enter a couple of times

then copy paste the clipboard to the jira issue.
",,,,,,,,,,,,,,,,,,,,
ComponentFeedbackMessageFilter should use equals() method to determine equality,WICKET-1408,12390679,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,wireframe,wireframe,10/Mar/08 17:05,10/Mar/08 17:38,13/Mar/19 23:15,10/Mar/08 17:38,1.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.3,,,wicket,,,,0,,,,,,,,"http://svn.apache.org/viewvc/wicket/trunk/jdk-1.4/wicket/src/main/java/org/apache/wicket/feedback/ComponentFeedbackMessageFilter.java?revision=584925&view=markup

This is pretty trivial, but I think the ComponentFeedbackMessageFilter should use the the conventional .equals() method instead of ""=="" to determine object equality.

feel free to close this issue if there's a reason to be comparing object references instead of values:
http://www.leepoint.net/notes-java/data/expressions/22compareobjects.html


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2008-03-10 17:38:05.624,,,no_permission,,,,,,,,,,,202379,,,Mon Mar 10 17:38:05 UTC 2008,,,,,,0|i0kg7r:,117444,,,,,,,,"10/Mar/08 17:38;ivaynberg;i changed it in code, but effectively it is still the same because component does not implement equals, nor should it really. we are working within a hierarchy and the only criteria for components is instance equality.",,,,,,,,,,,,,,,,,,,,,,,
AjaxFormSubmitBehavior creates invalid HTML,WICKET-1071,12380381,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,mindhaq,mindhaq,13/Oct/07 12:18,30/Oct/07 05:02,13/Mar/19 23:15,30/Oct/07 05:02,1.3.0-beta4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-rc1,,,wicket,,,,0,,,,,,,,Javascript logical and (&&) must be HTML-masked in onclick-attributes. I'll attach a patch.,"Linux, JDK1.6, Wicket 1.3 trunk",,,,,,,,,,,,,,,,,,13/Oct/07 12:19;mindhaq;WICKET-1071.patch;https://issues.apache.org/jira/secure/attachment/12367693/WICKET-1071.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-10-16 06:46:16.78,,,no_permission,,,,,,,,,,,202076,,,Tue Oct 16 06:46:16 UTC 2007,,,,,,0|i0kh3j:,117587,,,,,,,,13/Oct/07 12:19;mindhaq;mask ampersands,"16/Oct/07 06:46;ehillenius;bulk set issues to next version. I only did a quick check (and filtered some out for 1.3.1), but we can always bump em again.",,,,,,,,,,,,,,,,,,,,,,
log4j.properties in quickstart archetype uses old wicket package name,WICKET-978,12378357,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,freemant,freemant,16/Sep/07 04:02,20/Sep/07 09:34,13/Mar/19 23:15,20/Sep/07 09:34,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket-quickstart,,,,0,,,,,,,,"In src/archetypes/quickstart/src/main/resources/archetype-resources/src/main/resources/log4j.properties:

log4j.logger.wicket=INFO
log4j.logger.wicket.protocol.http.HttpSessionStore=INFO
log4j.logger.wicket.version=INFO
log4j.logger.wicket.RequestCycle=INFO

It should be:

log4j.logger.org.apache.wicket=INFO
log4j.logger.org.apache.wicket.protocol.http.HttpSessionStore=INFO
log4j.logger.org.apache.wicket.version=INFO
log4j.logger.org.apache.wicket.RequestCycle=INFO
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-09-20 06:41:39.181,,,no_permission,,,,,,,,,,,201988,,,Thu Sep 20 09:34:30 UTC 2007,,,,,,0|i0khbj:,117623,,,,,,,,"20/Sep/07 06:41;ivaynberg;al, did you not fix this already?",20/Sep/07 09:34;almaw;Yes. I didn't realise there was a JIRA issue for it. ;-),,,,,,,,,,,,,,,,,,,,,,
FormComponent.getValue uses equals instead of == to compare NO_RAW_INPUT,WICKET-756,12373834,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jbq,wboyce@panix.com,wboyce@panix.com,14/Jul/07 22:06,23/Aug/07 01:55,13/Mar/19 23:15,21/Aug/07 13:37,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta4,,,wicket,,,,0,,,,,,,,"It looks like the ""no raw input"" condition is identified by the rawInput member actually referencing the NO_RAW_INPUT constant, not having the same string as NO_RAW_INPUT (""[-NO-RAW-INPUT-]"").  Twice the code uses == or != to compare rawInput to NO_RAW_INPUT.  But once it uses the equals method instead.  This is probably wrong;  it should use ==.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-08-21 13:37:01.497,,,no_permission,,,,,,,,,,,201786,,,Thu Aug 23 01:55:49 UTC 2007,,,,,,0|i0khyn:,117727,,,,,,,,"21/Aug/07 13:37;jbq;Fixed, thanks for reporting!","22/Aug/07 10:03;jcompagner;I will revert the change for equals to == and make sure that we use equals everywhere for that.

Yes it is a final constant. But the raw input value is also serialized and then deserialized. Then == will fail!
Be very careful with that try to use equals also for those kind of constants!!!","23/Aug/07 01:55;wboyce@panix.com;Good catch, Johan!

That being the case, maybe a better strategy is just to eliminate the magic NO_RAW_INPUT string and add a boolean that would flag the condition that NO_RAW_INPUT indicates.  (See WICKET-757.)

",,,,,,,,,,,,,,,,,,,,,
Trivial fixes to make wicket-contrib-push-examples xhtml compliant,WICKET-744,12373520,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,codestrom,codestrom,11/Jul/07 14:35,07/Aug/07 14:16,13/Mar/19 23:15,07/Aug/07 14:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,,"Final fixes for wicket-contrib-push-examples.  Code local issues where the ID is being appended with ""/"" or suffixed with the key id.  Resolution was a couple trivial fixes to change ""/"" to ""::"" and switch the key id to precede the component name.",,,,,,,,,,,,,,,,,,,11/Jul/07 14:37;codestrom;wicketstuff-dojo-xhtml-01.diff;https://issues.apache.org/jira/secure/attachment/12361592/wicketstuff-dojo-xhtml-01.diff,11/Jul/07 14:38;codestrom;wicketstuff-push-xhtml-01.diff;https://issues.apache.org/jira/secure/attachment/12361593/wicketstuff-push-xhtml-01.diff,,,,,,,2.0,,,,,,,,,,,,,,,,,,,2007-07-11 18:55:01.298,,,no_permission,,,,,,,,,,,201774,,,Tue Aug 07 14:16:48 UTC 2007,,,,,,0|i0ki0n:,117736,,,,,,,,11/Jul/07 14:37;codestrom;Trivial (x)html compliance fixes,11/Jul/07 14:38;codestrom;Trivial (x)html compliance fix,"11/Jul/07 18:55;almaw;This isn't in wicket-examples.
It should be in http://wicketstuff.org/jira in fact.",07/Aug/07 14:16;almaw;Fixed in trunk (r2760).,,,,,,,,,,,,,,,,,,,,
DatePicker doesn't notify component,WICKET-813,12375286,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ehillenius,skanev,skanev,03/Aug/07 12:08,03/Aug/07 18:32,13/Mar/19 23:15,03/Aug/07 18:32,1.3.0-beta1,1.3.0-beta2,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket-datetime,,,,0,,,,,,,,"The datepicker doesn't notify it's component when the date is changed.

I guess this bug came in between revisions 556202 and 556194.",,,,,,,,,,,,,,,,,,,03/Aug/07 12:10;skanev;datepicker_fix.patch;https://issues.apache.org/jira/secure/attachment/12363114/datepicker_fix.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201839,,,Fri Aug 03 12:10:36 UTC 2007,,,,,,0|i0khtb:,117703,,,,,,,,03/Aug/07 12:10;skanev;A patch that I assume fixes the bug.,,,,,,,,,,,,,,,,,,,,,,,
EvenOddItem constants not actually constants,WICKET-755,12373825,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,ivaynberg,wlfshmn,wlfshmn,14/Jul/07 11:49,14/Jul/07 22:33,13/Mar/19 23:15,14/Jul/07 22:33,1.3.0-beta3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"missing static declarations, see patch",,,,,,,,,,,,,,,,,,,14/Jul/07 11:50;wlfshmn;staticevenodd.patch;https://issues.apache.org/jira/secure/attachment/12361835/staticevenodd.patch,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201785,,,2007-07-14 11:49:51.0,,,,,,0|i0khyv:,117728,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wicket Spring wiki page references discontinued 2.0 version.,WICKET-752,12373758,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,,wlfshmn,wlfshmn,13/Jul/07 12:51,13/Jul/07 13:45,13/Mar/19 23:15,13/Jul/07 13:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,site,,,,0,,,,,,,,"On http://cwiki.apache.org/WICKET/spring.html, The example under ""Annotation-based Approach"" says ""// notice in 2.0+ versions this is replaced by new SpringWicketModule(this);"".",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201782,,,2007-07-13 12:51:34.0,,,,,,0|i0khz3:,117729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Trivial fix for html validation in AbstractAjaxBehavior.java,WICKET-737,12373374,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,codestrom,codestrom,10/Jul/07 09:07,10/Jul/07 21:04,13/Mar/19 23:15,10/Jul/07 21:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta3,,,wicket,,,,0,,,,,,,,"When trying to validate the wicketstuff-push-examples, there's a few very trivial (x)html validation errors.  Below is a diff against trunk that fixes one of the errors.

Index: jdk-1.4/wicket/src/main/java/org/apache/wicket/behavior/AbstractAjaxBehavior.java
===================================================================
--- jdk-1.4/wicket/src/main/java/org/apache/wicket/behavior/AbstractAjaxBehavior.java   (revision 554440)
+++ jdk-1.4/wicket/src/main/java/org/apache/wicket/behavior/AbstractAjaxBehavior.java   (working copy)
@@ -111,7 +111,7 @@
 
                if (onlyTargetActivePage)
                {
-                       url.append(""&"").append(WebRequestCodingStrategy.IGNORE_IF_NOT_ACTIVE_PARAMETER_NAME).append(""=true"");
+                       url.append(""&amp;"").append(WebRequestCodingStrategy.IGNORE_IF_NOT_ACTIVE_PARAMETER_NAME).append(""=true"");
                }
 
                return url;",,,,,,,,,,,,,,,,,,,10/Jul/07 09:09;codestrom;wicket-xhtml-strict-01.diff;https://issues.apache.org/jira/secure/attachment/12361471/wicket-xhtml-strict-01.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-07-10 21:04:06.964,,,no_permission,,,,,,,,,,,201768,,,Tue Jul 10 21:04:06 UTC 2007,,,,,,0|i0ki1r:,117741,,,,,,,,10/Jul/07 09:09;codestrom;svn diff from trunk to resolve issue.,10/Jul/07 21:04;almaw;Fixed earlier today.,,,,,,,,,,,,,,,,,,,,,,
SignInPanel is not returning raw input,WICKET-591,12370271,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,hszillat,hszillat,25/May/07 13:50,18/Jun/07 04:47,13/Mar/19 23:15,18/Jun/07 04:47,1.2.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-auth-roles,,,,0,,,,,,,,"The SignInPanel's getPassword()-method is returning the password via ""password.getModelObjectAsString();"". This will filter any ""special"" characters like !,$, or & from the input. For (strong?) passwords this may not be desirable. (See also http://cwiki.apache.org/WICKET/validating-passwordtextfield.html)

I fixed this by returning ""password.getInput();"" from the method, although this may introduce other security-problems like SQL-injection.

Maybe a flag would be better solution?",All,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-18 04:47:39.913,,,no_permission,,,,,,,,,,,201634,,,Mon Jun 18 04:47:39 UTC 2007,,,,,,0|i0kifr:,117804,,,,,,,,18/Jun/07 04:47;almaw;I don't expect the password returned to be HTML or SQL escaped - it's nonsense to mess with the input like that. This is fixed in trunk (r548209).,,,,,,,,,,,,,,,,,,,,,,,
Quickstart web.xml,WICKET-586,12369981,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,sullis,sullis,22/May/07 19:34,10/Jun/07 21:13,13/Mar/19 23:15,10/Jun/07 21:12,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-quickstart,,,,0,,,,,,,,"Wicket 1.3 beta 1

In wicket-quickstart, the web.xml needs updating

http://svn.apache.org/viewvc/incubator/wicket/trunk/jdk-1.4/wicket-quickstart/src/main/webapp/WEB-INF/web.xml?view=log

Currently, web.xml contains the ""filterPath"" parameter.   I believe this parameter is obsolete.   

I don't think there's a need to put the parameter in the web.xml because the WicketFilter has logic for parsing the web.xml to extract the filter pattern.


",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-10 21:12:05.35,,,no_permission,,,,,,,,,,,97244,,,Sun Jun 10 21:12:05 UTC 2007,,,,,,0|i0kigf:,117807,,,,,,,,10/Jun/07 21:12;almaw;Fixed in r545942.,,,,,,,,,,,,,,,,,,,,,,,
"DropDownChoice, empty Model wrong default encoding of special chars",WICKET-397,12365124,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jbq,korbinian,korbinian,16/Mar/07 15:40,10/Jun/07 16:28,13/Mar/19 23:15,16/Mar/07 15:54,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Iv the DDChoice is empty at  first, you get a ""Bitte Auswählen"" wich is wrongly decoded as ""Bitte Ausw?%len"" - so the encoding needs to be checked that it gets correctly encoded according to HTML like  &auml; ",all on wicket 1.3,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-16 15:54:48.384,,,no_permission,,,,,,,,,,,201463,,,Fri Mar 16 15:54:48 UTC 2007,,,,,,0|i0kiyn:,117889,,,,,,,,"16/Mar/07 15:54;jbq;Using HTML entities is not strictly necessary.  The problem lied in the characted encoding used in src/main/java/wicket/Application_de.properties.  This should be fixed now, please update your working copy and reopen if the issue persists.",,,,,,,,,,,,,,,,,,,,,,,
"forminput properties encoding for da_DK, de and pt_BR locales",WICKET-408,12365298,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jbq,svenmeier,svenmeier,19/Mar/07 21:41,10/Jun/07 16:28,13/Mar/19 23:15,20/Mar/07 21:08,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket-examples,,,,0,,,,,,,,"Wicket supports ISO-8895-1 encodings for property files only (i.e. the non-xml based ones). Therefor the property files in the forminput example should have the correct encoding - the output will look scrambled otherwise.

See attached patch.",,,,,,,,,,,,,,,,,,,19/Mar/07 21:42;svenmeier;examples-forminput-properties.diff;https://issues.apache.org/jira/secure/attachment/12353700/examples-forminput-properties.diff,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,2007-03-20 08:11:08.751,,,no_permission,,,,,,,,,,,201474,,,Tue Mar 20 23:18:30 UTC 2007,,,,,,0|i0kixz:,117886,,,,,,,,19/Mar/07 21:42;svenmeier;Patch.,"20/Mar/07 08:11;jbq;You might consider using native2ascii program provided by the JDK to avoid any encoding at all.

See http://java.sun.com/j2se/1.4.2/docs/api/java/util/Properties.html","20/Mar/07 21:08;jbq;Fixed, thanks for your patch.  I also ran native2ascii to get rid of any encoding problem.  Please update your working copy and test whether it works for you.","20/Mar/07 22:50;svenmeier;This is still not completely right:

- '.settings\org.eclipse.core.resources.prefs' lists some old entries with wrong paths
- FormInput_de.properties and FormInput_da_DK.properties are still listed as having UTF-8 encoding.
Thus the next unlucky guy  who introduces some umlauts in these files will probably run into problems again because Eclipse will save these in two bytes unicodes
- FormInput_pt_BR.properies is explicitely listed as having ISO-8859-1, but the file is in UTF-8
Choose locale brazil and you'll see garbage characters
- most european umlauts fit nicely in ISO-8859-1, so no need to obscure these files with unicode escapes.","20/Mar/07 22:59;jbq;The advantage of Unicode escapes is that you don't need to specify Eclipse settings.  Most people have their workspace in UTF-8 so will be breaking the properties as you mention.  That's why we should always prefer working with Unicode escapes.  I'll be looking at the ""portugues do brazil"" properties now.","20/Mar/07 23:18;jbq;Portugues do Brazil fixed, was overwritten by the following change:
http://svn.apache.org/viewvc?view=rev&revision=514405

Thanks again!",,,,,,,,,,,,,,,,,,
wicket.jmx.Application.getHomePageClass() returns Application's class name,WICKET-370,12364451,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jbq,martin-g,martin-g,08/Mar/07 13:14,10/Jun/07 16:24,13/Mar/19 23:15,25/Apr/07 23:02,2.0 branch (discontinued),,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"Hi,

There is a typo (copy/paste error)  in wicket.jmx.Application:
public String getHomePageClass() throws IOException
    {
        return application.getClass().getName();
    }

should be:
public String getHomePageClass() throws IOException
    {
        return application.getHomePage().getName();
    }

Regards
Martin","Linux, maven-jetty-plugin 6.1",,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-25 23:02:53.82,,,no_permission,,,,,,,,,,,201438,,,Wed Apr 25 23:02:53 UTC 2007,,,,,,0|i0kj13:,117900,,,,,,,,"25/Apr/07 23:02;jbq;Committed, thanks for spotting this!",,,,,,,,,,,,,,,,,,,,,,,
BookmarkablePageRequestTarget respond method,WICKET-615,12370942,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,sullis,sullis,05/Jun/07 16:43,05/Jun/07 17:15,13/Mar/19 23:15,05/Jun/07 17:15,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket,,,,0,,,,,,,,"The respond method in BookmarkablePageRequestTarget.java contains a ""FIXME"" comment.

Does this need to be addressed?

			if (requestCycle.getRedirect())
			{
				IRequestCycleProcessor processor = requestCycle.getProcessor();
				// This is relative!!! FIXME: Make this absolute.
				String redirectUrl = processor.getRequestCodingStrategy().encode(requestCycle, this).toString();
				requestCycle.getResponse().redirect(redirectUrl);
			}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-06-05 17:15:33.658,,,no_permission,,,,,,,,,,,201652,,,Tue Jun 05 17:15:33 UTC 2007,,,,,,0|i0kicn:,117790,,,,,,,,"05/Jun/07 17:15;almaw;This FIXME was removed from trunk some time ago.
The servlet container makes the URL absolute.",,,,,,,,,,,,,,,,,,,,,,,
<scope>tests</scope> should be <scope>test</scope>,WICKET-566,12369299,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,jbq,wouterv,wouterv,14/May/07 18:17,14/May/07 19:29,13/Mar/19 23:15,14/May/07 19:29,1.3.0-beta1,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta2,,,wicket-extensions,,,,0,,,,,,,,"In pom.xml for extension, the following is a typo:
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket</artifactId>
			<classifier>tests</classifier>
			<scope>tests</scope><------------ should be <scope>test</scope>
		</dependency>

Now when using mvn eclipse:eclipse and mvn war I get an extra unnecessary test jar",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201612,,,2007-05-14 18:17:13.0,,,,,,0|i0kiif:,117816,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Code smell: Duplicate code: Application.exists(); Application.isAttached(),WICKET-498,12367991,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,,funkattack,funkattack,24/Apr/07 21:42,24/Apr/07 22:29,13/Mar/19 23:15,24/Apr/07 22:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,,,,,0,,,,,,,,"Code smell: Duplicate code: Application.exists(); Application.isAttached()

Both consist of the same code and exists() doesn't seem to be used at all.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-04-24 22:29:59.296,,,no_permission,,,,,,,,,,,201552,,,Tue Apr 24 22:29:59 UTC 2007,,,,,,0|i0kipb:,117847,,,,,,,,24/Apr/07 22:29;ehillenius;Good point. Removed isAttached and kept exists as that is the method used in Session.,,,,,,,,,,,,,,,,,,,,,,,
MiniMap.iterator().next() should throw NoSuchElementException,WICKET-428,12365876,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,jan_bar,jan_bar,27/Mar/07 08:04,27/Mar/07 17:17,13/Mar/19 23:15,27/Mar/07 17:17,1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"The wicket.util.collections.MiniMap.iterator().next() should throw NoSuchElementException when there are no more elements to return (line 235), please add:
if(i >= size)
    throw new NoSuchElementException();
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2007-03-27 14:22:44.458,,,no_permission,,,,,,,,,,,201493,,,Tue Mar 27 14:22:44 UTC 2007,,,,,,0|i0kivj:,117875,,,,,,,,"27/Mar/07 14:22;almaw;Fixed with a call to hasNext(). Worryingly, hasNext() was also broken, so I've fixed that too. I've also added a unit test, and fixed all the other iterators, which were similarly broken.",,,,,,,,,,,,,,,,,,,,,,,
XHTML validator complains about RadioChoice markup,WICKET-57,12355395,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,almaw,cowwoc,cowwoc,12/Nov/06 09:00,13/Mar/07 18:16,13/Mar/19 23:15,13/Mar/07 18:16,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,,,wicket,,,,0,,,,,,,,"Wicket generates the following code for a RadioChoice:

<input name=""taskType"" type=""radio"" value=""0"" id=""taskType_0"" onclick=""location.href='/RequestMOBIUser/RequestMOBIserverAdmin?wicket:interface=:0:taskType:1:IOnChangeListener&taskType=0';""/>

but the XHTML validator complains:

------------------------
Line 50 column 237: cannot generate system identifier for general entity ""taskType"".

...face=:0:taskType:1:IOnChangeListener&taskType=0';""/><label for=""taskType_0"">U

An entity reference was found in the document, but there is no reference by that name defined. Often this is caused by misspelling the reference name, unencoded ampersands, or by leaving off the trailing semicolon (;). The most common cause of this error is unencoded ampersands in URLs as described by the WDG in ""Ampersands in URLs"".

Entity references start with an ampersand (&) and end with a semicolon (;). If you want to use a literal ampersand in your document you must encode it as ""&amp;"" (even inside URLs!). Be careful to end entity references with a semicolon or your entity reference may get interpreted in connection with the following text. Also keep in mind that named entity references are case-sensitive; &Aelig; and &aelig; are different characters.

If this error appears in some markup generated by PHP's session handling code, this article has explanations and solutions to your problem.

Note that in most documents, errors related to entity references will trigger up to 5 separate messages from the Validator. Usually these will all disappear when the original problem is fixed.
------------------------

   and it highlights the error as the ""&taskType=0"" in the URL. Any idea on how to fix this?",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-12 17:30:49.0,,,no_permission,,,,,,,,,,,201144,,,Tue Mar 13 18:15:57 UTC 2007,,,,,,0|i0kjrb:,118018,,,,,,,,"12/Nov/06 17:30;jcompagner;can you change the tag/url that way that it does validate?

for example removing the last ; ?

What is exactly the trigger.","24/Nov/06 19:10;almaw;It's bitching because ""&taskType=0"" should be ""&amp;taskType=0"".","24/Nov/06 19:13;almaw;Possibly line 473 of RadioChoice needs the ""&"" changing to an ""&amp;""","25/Nov/06 08:45;jcompagner;isn't this then a common issue for all javascript event methods that have urls in them?
Can't we do this then on a single point where we call escape markup?

","13/Mar/07 18:15;almaw;No, this is done directly in an onComponentTag append. People just need to know about this when they write code. Fixed in 1.3",,,,,,,,,,,,,,,,,,,
ContainerFeedbackMessageFilter filters out messages for container,WICKET-217,12360752,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,,jan_bar,jan_bar,18/Jan/07 11:36,30/Jan/07 01:03,13/Mar/19 23:15,30/Jan/07 01:03,1.2.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"ContainerFeedbackMessageFilter filters out messages for the container (for
instance Form).

public boolean accept(FeedbackMessage message) {
if (message.getReporter() == null) {
  return false;
}
else if(container == message.getReporter())  { //<=== missing?
  return true;
}
else {
  return container.contains(message.getReporter(), true);
}
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,201296,,,2007-01-18 11:36:50.0,,,,,,0|i0kjen:,117961,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wicket-xhtml1-strict.dtd missing from distribution archive,WICKET-32,12354750,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,dashorst,obeliks,obeliks,04/Nov/06 00:32,11/Nov/06 19:40,13/Mar/19 23:15,11/Nov/06 19:40,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.3.0-beta1,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"unit tests won't compile in the current distribution archive, because some require wicket-xhtml1-strict.dtd to be in the root folder. It's in the repository, but not the distributed archive.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-11 19:40:47.0,,,no_permission,,,,,,,,,,,201120,,,Sat Nov 11 19:40:47 UTC 2006,,,,,,0|i0kjtb:,118027,,,,,,,,11/Nov/06 19:40;dashorst;Fixed by adding *.dtd to the bin.xml assembly descriptor.,,,,,,,,,,,,,,,,,,,,,,,
javascript error in wicket-ajax.js: Wicket.Log.Error is not a function,WICKET-29,12354738,Bug,Resolved,WICKET,Wicket,software,dashorst,"With proper mark-up/logic separation, a POJO data model, and a refreshing lack of XML, Wicket makes developing web-apps in Java simple and enjoyable again. Swap the boilerplate, complex debugging and brittle code for powerful, reusable components written with plain Java and HTML.",http://wicket.apache.org,Trivial,Fixed,knopp,kissd,kissd,03/Nov/06 20:59,03/Nov/06 22:19,13/Mar/19 23:15,03/Nov/06 22:19,1.2.2,1.2.3,,,,,,,,,,,,,,,,,,,,,,,,,,,1.2.4,2.0 branch (discontinued),,wicket,,,,0,,,,,,,,"in wicket-ajax.js at line 648: Wicket.Log.Error(""Trying to submit form with id '""+formId+""' that is not in document."");
""Wicket.Log.error"" should be used (with lower-case letters), see declaration in same file at line 79.",,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2006-11-03 22:19:25.0,,,no_permission,,,,,,,,,,,201117,,,Fri Nov 03 22:19:25 UTC 2006,,,,,,0|i0kjtr:,118029,,,,,,,,03/Nov/06 21:00;kissd;experienced in wicket v1.2.2,03/Nov/06 22:19;knopp;fixed the typo,,,,,,,,,,,,,,,,,,,,,,
