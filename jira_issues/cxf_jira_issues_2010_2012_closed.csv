Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Cloners),Outward issue link (Incorporates),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Supercedes),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (CXF Fields),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
ClientProxyImpl does not support Multipart annotations,CXF-4178,12546098,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,12/Mar/12 14:25,23/Apr/12 16:45,14/Mar/19 02:29,12/Mar/12 16:47,,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,231256,,,2012-03-12 14:25:39.0,,,,,,0|i0b8cf:,63464,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClientProxyImpl does not order Path parameter values according to the template order,CXF-4177,12546082,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,12/Mar/12 11:31,31/Dec/12 17:21,14/Mar/19 02:29,12/Mar/12 11:53,,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,"ClientProxyImpl expects that the order of Path parameters matches the order of the template variables, example,
{code:java}
@Path(""{a}/{b}"")
@GET
public Book getBook(@PathParam(""a"") String a, @PathParam(""b"") String b);

{code}

Having the different order, example

{code:java}
@Path(""{a}/{b}"")
@GET
public Book getBook(@PathParam(""b"") String b, @PathParam(""a"") String a);

{code}

breaks the URI generation...",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-31 17:21:41.566,,,no_permission,,Unknown,,,,,,,,,,,231240,,,Mon Dec 31 17:21:41 UTC 2012,,,,,,0|i0b7j3:,63332,,,,,,,,31/Dec/12 17:21;cruelfate;Thanks for fixing this one!  Was perplexed by this for a bit.  ,,,,,,,,,,,,,,,,,,,,,,,,,,
"Default JAX-RS XML, JSON and Form providers are open to the hash collision attacks",CXF-4172,12545845,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,09/Mar/12 13:55,23/Apr/12 16:45,14/Mar/19 02:29,14/Mar/12 17:11,,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,JAX-RS Security,,,0,,,,,,"Default XML, JSON and Form providers using the Maps internally are open to the hash collision attacks.

This includes JAXBElementProvider and JSONProvider (JAXB-driven), SourceProvider, FormEncodingProvider.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,231028,,,Wed Mar 14 17:08:08 UTC 2012,,,,,,0|i0b6av:,63133,,,,,,,,"09/Mar/12 14:01;sergey_beryozkin;The initial commit:
http://svn.apache.org/viewvc?rev=1298470&view=rev
","14/Mar/12 17:08;sergey_beryozkin;A number of new contextual properties has been introduced to limit the depth of the incoming XML or JSON payloads (processed with the help of JAXB) and form payloads.

XML and JSON:

""depthTotalElementCountThreshold"" - restricts the total number of elements in a given payload.
""depthInnerElementCountThreshold"" - restricts the total number of child elements for a given element.
""depthInnerElementLevelThreshold"" - restricts the stack depth starting from a given element (root by default).

These properties can be enforced in a number of ways. The simplest option is to enable them on individual JAX-RS endpoints. Alternatively, default CXF JAX-RS JAXBElementProvider and JSONProvider can have a 'depthProperties' set (http://svn.apache.org/repos/asf/cxf/trunk/api/src/main/java/org/apache/cxf/staxutils/DocumentDepthProperties.java). Finally they can instead depend on DepthRestrictingStreamInterceptor (http://svn.apache.org/repos/asf/cxf/trunk/rt/core/src/main/java/org/apache/cxf/interceptor/security/DepthRestrictingStreamInterceptor.java) configured and added to the inbound chain.

Source and DOM Document providers will depend on DepthRestrictingStreamInterceptor.
  

More sophisticated properties can be introduced in the future.

Form:

""maxFormParameterCount"" - restricts the number of form name-value pairs.
Note that the Servlet containers may also need to restrict the number of form parameters:
http://mail-archives.apache.org/mod_mbox/tomcat-announce/201112.mbox/%3C4EFB9800.5010106@apache.org%3E

The clients will get HTTP 413 back whenever one of the above contextual properties can not be enforced.

*Note*: other optional XML or JSON providers may need the related third-party library enhanced to enforce the depth of the incoming payloads.

",,,,,,,,,,,,,,,,,,,,,,,,,
Static resource resolution not possible with CXFNonSpringJaxrsServlet,CXF-4171,12545808,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,jboch,jboch,09/Mar/12 10:51,23/Apr/12 16:45,14/Mar/19 02:29,11/Apr/12 14:25,2.5.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,configuration,,,,,"The title says it all. I wanted this to get a full WADL document, and found it's not supported.

I was able to do it only by changing the source code - adding bean.setStaticSubresourceResolution(true); to ResourceUtils:621 (before bean.setResourceClasses(resourceClasses) ) does the trick.

Since this requires source code modification or copy-pasting and overriding methods in both CXFNonSpringJaxrsServlet and ResourceUtils I think that there should be a config option similiar to jaxrs.application.address.ignore available for this.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-21 22:04:44.684,,,no_permission,,Novice,,,,,,,,,,,230991,,,Mon Mar 26 11:54:45 UTC 2012,,,,,,0|i0b6rr:,63209,,,,,,,,"21/Mar/12 13:54;jboch;I'm sorry but the fix is useless - the static resolution has to be set *before* bean.setResourceClasses() call. 
It matters what setting is there when classes are registered!

In this way they still get dynamic resolution regardless of the setting.","21/Mar/12 22:04;sergey_beryozkin;No problems, thanks for trying it early; I've committed another update - can you please confirm it works as expected ?",26/Mar/12 11:16;jboch;This one seems to be working OK - thanks,26/Mar/12 11:24;sergey_beryozkin;thanks for the confirmation; at some point we will refactor the server bean to eliminate the ordering issue,"26/Mar/12 11:33;jboch;I'm sorry but I actually forgot to switch off my custom implementation when trying this.
It still doesn't seem to work :( 
When looking at the code I don't see any relevant changes - the static resolution is still set after bean.setResourceClasses() call.

I will double check if I hadn't mixed up the snapshots and let you know.","26/Mar/12 11:40;jboch;Ok - so apparently this is not yet available, on the snapshot page there are files from 2012-03-21 06:45:10, whereas it seems your fix was commited around 22:19:21",26/Mar/12 11:45;sergey_beryozkin;probably... This is now done immediately after setAddress: http://svn.apache.org/repos/asf/cxf/trunk/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/servlet/CXFNonSpringJaxrsServlet.java,"26/Mar/12 11:54;jboch;Yes, this seems to be the right thing. I will wait until the snapshot build from this is available for download and test again.

BTW: I can't find any info on when 2.5.3 will be released as a stable version, is there any planned date?",,,,,,,,,,,,,,,,,,,
JMX InstrumentationManager's configuration properties may not be set correctly in standalone mode after upgrading to 2.5.2,CXF-4170,12545684,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,08/Mar/12 17:26,23/Apr/12 16:45,14/Mar/19 02:29,08/Mar/12 23:29,2.5.2,,,,,,,,,,,,,,,,,2.5.3,2.6,,,Management,,,,0,,,,,,"We introduced a simpler mechanism for configuring the instrumentation manager with CXF-3992, namely using the bus properties instead of directly configuring the InstrumentationManagerImpl bean. Unfortunately, this change introduced an issue in setting the instrumentation bean properties configured using the old style of directly configuring the instrumentation manager bean.

In particular, when setting each property of the InstrumentationManagerImpl bean, those properties that are set before the bus property is set are not correctly set with the desired values. For example, if the bus property is set at the beginning, the rest of the properties appearing below this line are correctly set. However, if the bus property is set not at the beginning, those properties appearing above that line are not set correctly and overwritten by the default values. 

Note that this problem does not occur when the properties are set using the bus properties

In any case, this problem needs to be fixed.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,230867,,,2012-03-08 17:26:45.0,,,,,,0|i0suav:,166386,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not always respect SecurityPolicy TokenInclusion for the AsymmetricBinding,CXF-4166,12545374,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,06/Mar/12 17:26,23/Apr/12 16:45,14/Mar/19 02:29,07/Mar/12 11:26,2.4.6,2.5.2,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,,,,,0,,,,,,"
CXF does not always respect the SecurityPolicy TokenInclusion for the AsymmetricBinding. In particular, if an X509Token is used as an InitiatorToken, a direct reference to the token is always used for Always* inclusion policies, even if the policy specifies a Thumbprint or IssuerSerial requirement.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,230560,,,2012-03-06 17:26:31.0,,,,,,0|i0b8dj:,63469,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Robust-InOnly processing with WS-RM must must delay updating the sequence until message delivery,CXF-4164,12545259,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,05/Mar/12 23:45,23/Apr/12 16:45,14/Mar/19 02:29,21/Mar/12 07:35,2.4.7,2.5.3,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,WS-* Components,,,,0,,,,,,"A recently added robust-inonly mode (CXF-4096) can be used to invoke services synchronously so that the caller can distinguish a successful invocation from an unsuccessful one. 

Although this feature is implemented independently of WS-RM, it can be used with WS-RM to force the acknowledgement message to be returned only after the service invocation successfully completes. 

Unfortunately, there is a minor change required in WS-RM so that this feature will work for this use case. Namely, it must be made aware of this robust setting so that it can postpone updating the sequence until the message is delivered.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-06 00:10:09.758,,,no_permission,,Unknown,,,,,,,,,,,230445,,,Tue Mar 13 12:55:09 UTC 2012,,,,,,0|i0b6zr:,63245,,,,,,,,"06/Mar/12 00:10;dsosnoski;This is probably the way all WS-RM processing should work, so that messages are only acknowledged once they've been delivered to the application and processed. The current code appears to allow a timing window where a crash would mean the message has been accepted and acknowledged by RM processing but is never seen by the application.

It looks like all that needs to be done for 2.5.x+ is to remove the call to destination.acknowledge() from RMInInterceptor.processSequence() and instead call it from RMDeliveryInterceptor.handle() (before the call to processingComplete()).
","13/Mar/12 12:55;ay;Hi Dennis,

As I mentioned in my reply on dev@cxf at
http://cxf.547215.n5.nabble.com/Re-svn-commit-r1297370-in-cxf-branches-2-5-x-fixes-rt-ws-rm-src-main-java-org-apache-cxf-ws-rm-syste-td5540174.html

This is an option for not losing messages at Destination. For many applications, this option will be sufficient. For those which expect an asynchronous decoupling of the message transport to the service invocation, this will be insufficient and we will still need a message storage and a re-delivery logic from the storage, which is currently missing.

So, I will be adding to this ticket an optimization change to avoid persisting the messages at Destination for the robust-mode. Currently, the messages are always persisted independently of the mode.

regards, aki
",,,,,,,,,,,,,,,,,,,,,,,,,
WSDLToJava Error: Thrown by JAXB: 'CodeGroup' is already defined ... OTA_CommonTypes.xsd,CXF-4163,12545177,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,yguerro,yguerro,05/Mar/12 13:23,23/Apr/12 16:45,14/Mar/19 02:29,09/Mar/12 20:04,2.4.2,2.5.2,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,Tooling,,,,0,OTA,WSDL2JAVA,,,,"My WSDL imports several schemas. Some schemas import/include other schemas. Some schemas are imported/included by several schemas.
Running WSDL2java with an ant task with the following options 

wsdl2java -d src -b custom.xml -exsh true -autoNameResolution -verbose MyExample.wsdl

(custom.xml is used to disable wrapper-style)

I got several errors such as:

     [java] WSDLToJava Error: Thrown by JAXB: 
     [java] Thrown by JAXB: 
     [java] 'CodeGroup' is already defined
     [java]  at line 175 column 2 of schema file:.../OTA/2010B/OTA_CommonTypes.xsd
     [java] (related to above error) the first definition appears here
     [java]  at line 45 column 2 of schema file:/.../My_CommonTypes.xsd

OTA_CommonTypes.xsd defines the following type:

<xs:attributeGroup name=""CodeGroup"">
 ...
</xs:attributeGroup>

My_CommonTypes.xsd defines the following type:

<xs:attributeGroup name=""CodeGroup"">
 ...
</xs:attributeGroup>

OTA_CommonTypes.xsd is included by a schema defining a target namespace ""http://www.opentravel.org/OTA/2003/05/OTA2010B""
My_CommonTypes.xsd is included by a schema defining a target namespace  ""http://xml.example.com/MyTypes""

XML schemas as well as WSDL are valid (other frameworks generates code without any issue - and even CXF WSDL validator returns a success) and the types should be generated in distinct packages, therefore without any conflicts.

My assumption is that CXF wsdl2java fails at resolving the type namespace with schemas which are chameleon schemas (no targetNamespace attributes) which is the case for all OTA type schemas.

A work-around that I would like to avoid as I'm exposing the WSDL to different clients  using different frameworks and I don't want to create 1 WSDL per framework, would be to add targetNamespace attributes to all chameleon schemas.","Windows XP
Java SDK 1.6.0_26
Eclipse IDE 3.5.2",604800,604800,,0%,604800,604800,,,,,,,,,,05/Mar/12 14:41;yguerro;JIRA-CXF-4163.zip;https://issues.apache.org/jira/secure/attachment/12517089/JIRA-CXF-4163.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-03-05 13:47:47.361,,,no_permission,,Advanced,,,,,,,,,,,230363,,,Mon Mar 05 14:41:53 UTC 2012,,,,,,0|i0b6sn:,63213,,,,,,,,05/Mar/12 13:47;gmazza;To facilitate solution it would probably be beneficial to attach a very simple test case (abbreviated sample WSDL with minimal schemas) w/Ant or Maven or command-line instructions to replicate this issue.,"05/Mar/12 14:41;yguerro;Contains an eclipse project with a simplified WSDL, XML schemas and the wsdl2java output",,,,,,,,,,,,,,,,,,,,,,,,,
AbstractConduitSelector reused cached conduit even if protocol was changed,CXF-4154,12544962,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ashakirin,ashakirin,02/Mar/12 16:58,23/Apr/12 16:45,14/Mar/19 02:29,26/Mar/12 16:03,,,,,,,,,,,,,,,,,,2.6,,,,Core,,,,0,,,,,,"Hi,

Actually AbstractConduitSelector.getSelectedConduit() creates and caches conduit in selectedConduit variable. Cached conduit is reused by the next calls.

I see the following problem: if user changed protocol in URI between calls, AbstractConduitSelector still uses cached Conduit even it cannot process new URL. In my case cached HTTP consuit tries to process UDP URL.

Proposal for fix: check if protocol in URL was changed and if yes, close and reset selectedConduit.

Patch is attached.

Regards,
Andrei.",,,,,,,,,,,,,,,,,02/Mar/12 16:59;ashakirin;AbstractConduitSelector.patch;https://issues.apache.org/jira/secure/attachment/12516854/AbstractConduitSelector.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-03-23 18:59:11.109,,,no_permission,,Unknown,,,,,,,,,,,230148,,,Mon Mar 26 16:03:00 UTC 2012,,,,,,0|i0b6z3:,63242,,,,,,,,02/Mar/12 16:59;ashakirin;Patch,"23/Mar/12 18:59;dkulp;
There is a threading problem with the proposal that I definitely need to think more about.  If two threads are making requests, one of which changes the protocol, it can close the conduit used by the other thread prematurely.
","24/Mar/12 15:11;ashakirin;Yep, you are right. Case is a little bit exotic, but anyway - patch is not safe. 
I am going to fix it in the following way: provide a thread safe cache map for the conduits with protocol as key. In getSelectedConduit() check map first and create new conduit only if it is not cached for requested protocol. In close() release all conduits from the map. Patch will be improved soon.","24/Mar/12 18:48;dkulp;I'm testing a different fix today.   Hopefully will commit on monday.
","25/Mar/12 10:34;ashakirin;Ok, very curious to see how you fixed it.","26/Mar/12 14:47;dkulp;Committed a fix last night that pretty much removes the ""selectedConduit"" field and keeps a list of conduits.  Under normal operation, that's a single conduit, but it can ""grow"" as additional protocols and such require it.

Because of the field removal, not back portable to <=2.5.x.   Will need to be release noted.

Can you give it a quick spin to make sure it works OK?","26/Mar/12 15:52;ashakirin;Just tested with my use case - your fix works!

Only snapshoot in findCompatibleConduit() I did not completely understand:
{code}
        for (Conduit c2 : conduits) {
            if (c2.getTarget() == null 
                || c2.getTarget().getAddress() == null
                || c2.getTarget().getAddress().getValue() == null) {
                return c2;
            }
        }
{code}
Does conduit with not initialized target endpoint make sense at all? AbstractConduit constructor requires target endpoint argument, of course it is possible to give null there - but is there any use case for it? 
Do you think it is legal to choose such conduit if there is no another one that fit better (regarding protocol or full URL)?
I would propose just return null in findCompatibleConduit() for this case and re-initialse conduit.","26/Mar/12 16:03;dkulp;
It is a valid use case.  Using the UpfrontConduitSelector, an application could configure in a conduit that ""protocol less"" or similar that is not specific to a target.   As an example, an ESB, instead of creating a conduit for each protocol, could just configure in a ""SuperDoEverythingConduit"" singleton or similar that is not target specific.   We do want to allow that type of thing.   (and there is a test that hits it which is why I added that check)  :-)

Anyway, thanks for verifying that the fix works. ",,,,,,,,,,,,,,,,,,,
"FIQL Parsers Beanspector, replaces ""is"", ""set"" and ""get"" in method names",CXF-4153,12544925,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,nast0011,nast0011,02/Mar/12 11:57,23/Apr/12 16:45,14/Mar/19 02:29,02/Mar/12 16:07,2.5.2,,,,,,,,,,,,,,,,,2.3,2.4.7,2.5.3,2.6,JAX-RS,,,,0,fiql,,,,,"I try to use FIQL for search. When I init a new Parser, it caches all getters and setters of the target resource type class via Beanspector. All method names are updated to lower case and a possible leading ""is"", ""get"" or ""set"" should be replaced.

-> The replacement effectes not only leading strings! ""isPromissed"" will be changed in ""promsed""!
(see code, Beanspector:183)
private String setterName(Method m) {
   return m.getName().replace(""is"", """").replace(""set"", """").toLowerCase();
}

Please change this method in a implementation, like this:

    private String methodName(Method m) {
        String result = m.getName().toLowerCase();

        if (result.startsWith(""is"")) {
            result = result.substring(2, result.length());
        }
        else if (result.startsWith(""set"") || result.startsWith(""get"")) {
            result = result.substring(3, result.length());
        }

        return result;
    }

Thanks,
Stefan",Java6,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-02 16:07:26.909,,,no_permission,,Novice,,,,,,,,,,,230111,,,Fri Mar 02 16:07:26 UTC 2012,,,,,,0|i0b7vr:,63389,,,,,,,,"02/Mar/12 16:07;sergey_beryozkin;Hi Stefan, I applied your patch, thanks ",,,,,,,,,,,,,,,,,,,,,,,,,,
Transform feature's OutTransformWriter may not correctly generate namespace declarations,CXF-4150,12544800,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,01/Mar/12 16:11,23/Apr/12 16:45,14/Mar/19 02:29,06/Mar/12 12:55,2.5.2,,,,,,,,,,,,,,,,,2.5.3,2.6,,,Core,,,,0,,,,,,"There is an issue with the namespace declarations in Transform feature's OutTransformWriter.

The problem occurs when the input message contains a namespace declaration that is re-declared with another prefix somewhere down in its child element.

See the mail thread:
http://cxf.547215.n5.nabble.com/TransformOutInterceptor-removes-WS-Addressing-prefix-tt5527180.html",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,229986,,,Tue Mar 06 12:55:57 UTC 2012,,,,,,0|i0sub3:,166387,,,,,,,,"06/Mar/12 12:55;ay;Closing this ticket as the originally reported issue of missing or duplicate namespace declarations has been resolved.

To follow up on the following related issue discussed at
http://cxf.547215.n5.nabble.com/Transform-feature-to-preserve-prefix-values-Re-svn-commit-r1295714-tt5538162.html
I will create a new ticket specifically to provide this prefix preserving option for both inbound and outbound.
regards, aki
",,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.endpoint.ClientImpl raises ,CXF-4149,12544675,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,jorgevs,jorgevs,29/Feb/12 21:35,23/Apr/12 16:45,14/Mar/19 02:29,02/Mar/12 16:02,2.4.4,2.4.6,2.5.2,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,Bus,,,,0,,,,,,"When invoking several different web services asynchronously a NullPointerException is raised. The web services were invoked firstly in parallel later sequentially. The issue occurs more frequently when the web services are executed in parallel.

Apparently the issue is at ClientImpl line 715 in version 2.4.4. I've debugged the issue and in some executions bus is null on method onMessage:


    public void onMessage(Message message) {

        Endpoint endpoint = message.getExchange().getEndpoint();
        if (endpoint == null) {
            // in this case correlation will occur outside the transport,
            // however there's a possibility that the endpoint may have been
            // rebased in the meantime, so that the response will be mediated
            // via a set of in interceptors provided by a *different* endpoint
            //
            endpoint = getConduitSelector().getEndpoint();
            message.getExchange().put(Endpoint.class, endpoint);
        }
        message = endpoint.getBinding().createMessage(message);
        message.getExchange().setInMessage(message);
        message.put(Message.REQUESTOR_ROLE, Boolean.TRUE);
        message.put(Message.INBOUND_MESSAGE, Boolean.TRUE);
===>    PhaseManager pm = bus.getExtension(PhaseManager.class);


This is the exception raised:

GRAVE: ExecutionException
java.util.concurrent.ExecutionException: java.lang.NullPointerException
	at org.apache.cxf.endpoint.ClientCallback.get(ClientCallback.java:147)
	at org.apache.cxf.jaxws.JaxwsResponseCallback.get(JaxwsResponseCallback.java:49)
	at org.ensure.configLayer.planningLayer.services.PreservationPlanOptimizer.PreservationPlanOptimizer.invokeAnalysisModules(PreservationPlanOptimizer.java:382)
	at org.ensure.configLayer.planningLayer.services.PreservationPlanOptimizer.PreservationPlanOptimizer.getOptimizedGlobalPreservationPlans(PreservationPlanOptimizer.java:166)
	at org.ensure.configLayer.test.planningLayer.PreservationPlanOptimizer.tester.Tester.main(Tester.java:37)
Caused by: java.lang.NullPointerException
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:715)
	at org.apache.cxf.endpoint.ClientImpl$1.onMessage(ClientImpl.java:890)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1626)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:1498)
	at java.lang.Thread.run(Unknown Source)

Kind regards,

Jorge.","Eclipse Helios, Tomcat 6, JDK 1.6, Windows 7",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-03-01 21:36:00.795,,,no_permission,,Unknown,,,,,,,,,,,229861,,,Fri Mar 02 07:42:49 UTC 2012,,,,,,0|i0subb:,166388,,,,,,,,"01/Mar/12 21:36;dkulp;
I *THINK* I know what is happening here, but want to clarify with you first.   How are you invoking the async method?  (via a proxy, Dispatch, dynamic client?)    Also, after you call the async method, what are you doing with the object that you invoked it on?   

Can you also try something:  in the handler/callback that you pass to the method, can you add a field that points to the proxy/dispatch/client object?      

My gut feeling is that what is happening is that you are invoking the async method, then discarding the proxy.  The garbage collector is kicking in which is calling destroy on the proxy and thus the client impl.  The destroy on the client impl nulls out a ton of things.   Then then response comes back and now the bus is null.    I THINK if the proxy is held onto even in the handler, it wouldn't be destroyed.

That said, this is a bug, just need to figure out a good way to fix it.   I'm hoping the strong reference can at least provide a workaround for you.
","02/Mar/12 06:50;jorgevs;Thank you for your support Daniel. I think that your are right I'm getting the Proxy to set the timeout and after the execution of the method is not used anymore.

This is the code of the invocation, there are two different more like this:

	private static Response<org.ensure.configLayer.service.cost.jaxws.GetGlobalPreservationPlanEvaluationResponse>  invokeCostModule(DataHandler globalPreservationPlan, RequirementSet requirementSet) {	
		
		QName serviceName = new QName(""http://cost.servicequalityfigLayer.ensure.org/"", ""CostEngineImplService"");
		QName portName = new QName(""http://cost.service.configLayer.ensure.org/"", ""CostEngineImplPort"");

		Service service = Service.create(serviceName);
		service.addPort(portName, SOAPBinding.SOAP11HTTP_BINDING,
				""http://"" + costEngineWSHost + "":"" + costEngineWSPort + ""/CostEngineWS/services/CostEngineWSImplPort"");

		org.ensure.configLayer.service.cost.CostEngineWS client = service.getPort(portName,  org.ensure.configLayer.service.cost.CostEngineWS.class);

		org.apache.cxf.endpoint.Client clientProxy = ClientProxy.getClient(client);
	
		// Enabling MTOM on client
		ServiceUtil.setMTOMEnabled(((BindingProvider)client));
		
		// Setting a wider connection timeout for asynchronous communications
		ServiceUtil.setHTTPAsyncTimeout((HTTPConduit) clientProxy.getConduit());

		System.out.println(""Invoking getGlobalPreservationPlanEvaluationAsync using polling..."");    
		
		Response<org.ensure.configLayer.service.cost.jaxws.GetGlobalPreservationPlanEvaluationResponse> response;
		
		try{
			response = client.getGlobalPreservationPlanEvaluationAsync(globalPreservationPlan, requirementSet);
		}catch (Exception e) {
			e.printStackTrace();
			LogUtils.printStackTrace(log, e);
			return null;
		}
		
		return response;
	}

And this is the invocation to the three operations in parallel with polling (I have tried doing the three invocations sequentially and it happens but with far less frequency). The method below is executed N times:

		Response<org.ensure.configLayer.service.cost.jaxws.GetGlobalPreservationPlanEvaluationResponse> costEvaluationReply= null;			
		Response<org.ensure.configLayer.service.quality.jaxws.GetGlobalPreservationPlanEvaluationResponse> qualityEvaluationReply = null;			
		Response<org.ensure.configLayer.service.economicPerformance.jaxws.GetGlobalPreservationPlanEvaluationResponse>  economicPerformanceReply = null;
		
		org.ensure.configLayer.service.cost.jaxws.GetGlobalPreservationPlanEvaluationResponse costEvaluationReplyRes = null;			
		org.ensure.configLayer.service.quality.jaxws.GetGlobalPreservationPlanEvaluationResponse qualityEvaluationReplyRes = null;			
		org.ensure.configLayer.service.economicPerformance.jaxws.GetGlobalPreservationPlanEvaluationResponse economicPerformanceReplyRes = null;


--------------


				costEvaluationReply = 		invokeCostModule(globalPreservationPlanDataHandler, requirementSet);
				qualityEvaluationReply = 	invokeQualityModule(globalPreservationPlanDataHandler, requirementSet);
				economicPerformanceReply = 	invokeEconomicPerformanceModule(globalPreservationPlanDataHandler, requirementSet);
			}catch (Exception e) {
				e.printStackTrace();
				LogUtils.printStackTrace(log, e);
				return EError.getUnknownError(InternalModule.PRESERVATION_PLAN_OPTIMIZER);
			}
			
			// Polling method
			if (costEvaluationReply != null && qualityEvaluationReply != null && economicPerformanceReply!= null){
				int i = 0;
				while (	!costEvaluationReply.isDone()|| !qualityEvaluationReply.isDone() || !economicPerformanceReply.isDone()) {
					try {
						Thread.sleep(Constants.POLLING_INTERVAL);
					} catch (InterruptedException e) {
						e.printStackTrace();
						LogUtils.printStackTrace(log, e);
					}
					i+= Constants.POLLING_INTERVAL/1000;
					System.out.println(""Waiting..."" + i + "" seconds"");
				}
			}else{
				log.error(""invokeAnalysisModules => Error invoking WSs"");
				return EError.getUnknownError(InternalModule.PRESERVATION_PLAN_OPTIMIZER);
			}
				
			try {

			
				costEvaluationReplyRes = costEvaluationReply.get();
				qualityEvaluationReplyRes = qualityEvaluationReply.get();
				economicPerformanceReplyRes = economicPerformanceReply.get();


This code is executed iteratively, it some iterations it works in others raised the exception.

Kind regards,

Jorge.","02/Mar/12 07:42;jorgevs;Good Morning Daniel,

It looks that is working now. I have declared both client and clientProxy globally instead of defining it into the method. 

Thank for your support, hope that this helps to improve this great project.

Kind regards,

Jorge.",,,,,,,,,,,,,,,,,,,,,,,,
Wrong wsdl generated from impl class annotated with @SOAPBinding(parameterStyle = ParameterStyle.BARE),CXF-4147,12544568,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,29/Feb/12 06:58,23/Apr/12 16:45,14/Mar/19 02:29,29/Feb/12 10:23,,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,Tooling,,,,0,,,,,,"The wsdl generated from the following class is wrapped. 

@SOAPBinding(parameterStyle = ParameterStyle.BARE)
@WebService
public class HelloBare {
    @WebMethod
    public int add(int a, int b) {
        return a + b;
    }
}

We just get one add message with one xsd:int part , the input message with two parts is expected.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,229754,,,2012-02-29 06:58:40.0,,,,,,0|i0b7w7:,63391,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAXRS | Complex response types are not present in the generated wadl when returning list of objects,CXF-4144,12544401,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,muralidh,muralidh,28/Feb/12 10:59,28/Aug/12 17:44,14/Mar/19 02:29,26/Jun/12 13:42,2.5.2,,,,,,,,,,,,,,,,,2.5.5,2.6.2,2.7,,JAX-RS,,,,0,jax-rs,wadl,wadl2java,,,"We use cxf 2.5.2 along with spring for exposing and consuming restful services. For distributing the service interface classes, we started using wadl2java goal (which generates interface classes based on the given wadl file)

The generated wadl doesnt contain the proper response type, because of which i guess, the generated interfaces all have 'Response' as the return type.

Ex. if the restful get method returns 'List' , the generated wadl contains the following segment only:

<response><representation mediaType=""application/json""/></response>

and the corresponding interface generated from this wadl file contains the return type as 'Response'

Can someone suggest what needs to be done to prevent the actual response type from getting lost? Are any annotations (like ElementClass ? how to use it ?) or providers required?

Current code:

@GET
@Path(""/itemsForCategory"")
@Produces(""application/json"")
@Description(""getItemsForCategory"")
public List<Item> getItemsForCategory(@QueryParam(""category"")String category) {//implementation}

Found http://cxf.547215.n5.nabble.com/Problem-with-WADL-generation-and-returning-a-List-of-objects-td4713351.html#a5507490 . But the issue doesnt seem to be fixed.

Can someone help us out here?
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-04-16 10:34:13.997,,,no_permission,,Unknown,,,,,,,,,,,229638,,,Tue Jun 26 13:42:27 UTC 2012,,,,,,0|i05u47:,31976,,,,,,,,16/Apr/12 10:34;mnishant14;When you provide return object as List<Item> then Item should be serialize-able over the network. Another issue can be you are using Interface (List) to return response. You have to write define xsd for your List object or use appropriate annotation for it. Can you check if you can get the data for String[] if yes then above mentioned is the problem.,26/Jun/12 13:42;sergey_beryozkin;This can be optionally supported if org.apache.cxf.jaxrs.model.wadl.XMLName annotation is available,,,,,,,,,,,,,,,,,,,,,,,,,
"""attachment-directory"" property specified on RS endpoint does not change temp directory",CXF-4142,12544319,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergkorney,sergkorney,27/Feb/12 21:42,23/Apr/12 16:45,14/Mar/19 02:29,02/Mar/12 13:25,2.5.2,,,,,,,,,,,,,,,,,2.5.3,2.6,,,JAX-RS,,,,0,attachments,,,,,"We need to store temporary files in specific directory for specific endpoint.
That is needed because our service target directory is network share and for huge uploads it takes a while to move files from temporary directory to our target directory.
We tried to use ""attachment-directory"" property as described here under reading large attachments: http://cxf.apache.org/docs/jax-rs-multiparts.html
But that does not work. Setting system property ""org.apache.cxf.io.CachedOutputStream.OutputDirectory"" works fine, but we need it to be set up on a per-endpoint basis as it described to ""attachment-directory"" property configuration.
According to sources from 2.5.2 the problem is within AttachmentDeserializer class, in cacheStreamedAttachments method as it never call setStreamedAttachmentProperties() in case if DataSource for attachment is AttachmentDataSource type.
 ",,7200,7200,,0%,7200,7200,,,,,,,,,,28/Feb/12 13:59;sergey_beryozkin;patch.txt;https://issues.apache.org/jira/secure/attachment/12516330/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-02-28 13:59:36.088,,,no_permission,,Moderate,,,,,,,,,,,229556,,,Fri Mar 02 13:25:32 UTC 2012,,,,,,0|i0b6fb:,63153,,,,,,,,28/Feb/12 13:59;sergey_beryozkin;I'm attaching a patch as opposed to merging as I'm not 100% sure it won't interfere with the initial 'body' caching at the very top of the cacheStreamedAttachments() implementation...,"02/Mar/12 13:25;sergey_beryozkin;thanks for a tip, fixed for 2.5.3/trunk",,,,,,,,,,,,,,,,,,,,,,,,,
response_code 500 ignored when set in JAXRSOutInterceptor.handleWriteException ,CXF-4141,12544297,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,benjishults,benjishults,27/Feb/12 19:17,23/Apr/12 16:45,14/Mar/19 02:29,28/Feb/12 13:03,2.5.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,"I have a scenario where the call to writer.writeTo in JAXRSOutInterceptor.serializeMessage throws an exception.

Before throwing the exception, the writer writes to the outputStream.

When write.writeTo throws the exception, handleWriteException calls message.put(Message.RESPONSE_CODE, 500).

However, my HTTP client is seeing the response come back with HTTP response code 200.
","tomcat 7.0.26, Java 1.6, ",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-27 19:25:10.067,,,no_permission,,Moderate,,,,,,,,,,,229534,,,Mon Feb 27 19:36:39 UTC 2012,,,,,,0|i0b7x3:,63395,,,,,,,,27/Feb/12 19:25;gmazza;Have you asked questions about this on the CXF user's mailing list to confirm it is a CXF bug?,"27/Feb/12 19:36;benjishults;No, I'll do that now.",,,,,,,,,,,,,,,,,,,,,,,,,
WS-BrokeredNotification Compliance PublisherReference,CXF-4140,12544151,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,spyhunter99,spyhunter99,26/Feb/12 02:43,23/Apr/12 16:45,14/Mar/19 02:29,09/Mar/12 18:36,2.5.2,,,,,,,,,,,,,,,,,2.5.3,,,,Services,,,,0,cxf,wsn,ws-notification,,,"The WSN specification status that when sending a RegisterPublisher message, the element PublisherReference may be null when Demand is false.
""This component MUST appear if the /wsn-br:RegisterPublisher/Demand component has value ""true"". If this component is missing, the Publisher is either not a Web service, or does not wish to receive messages from the NotificationBroker.""

The WSN Broker included with the release throws a fault when sending a null PublisherReference 
INFO: Application {http://docs.oasis-open.org/wsn/brw-2}NotificationBroker#{http://docs.oasis-open.org/wsn/brw-2}Registe
rPublisher has thrown exception, unwinding now: org.oasis_open.docs.wsn.brw_2.PublisherRegistrationFailedFault: Invalid
PublisherReference: null",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,229388,,,2012-02-26 02:43:46.0,,,,,,0|i0b8fj:,63478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Codegen plugin requires WSDL artifact to be listed in dependency tree,CXF-4136,12543958,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,owen.farrell,owen.farrell,24/Feb/12 06:43,23/Apr/12 16:45,14/Mar/19 02:29,02/Mar/12 21:13,2.5.1,2.5.2,,,,,,,,,,,,,,,,2.5.3,2.6,,,Core,,,,1,maven,,,,,"The maven-codegen-plugin is only capable of resolving WSDL artifacts that are listed in the dependency tree. This had the unintended consequence of re-scoping transitive dependencies in to the current project.

Since the maven-artifact-resolver is arguably flawed (see CXF-3964), a more robust approach is necessary to handle both possible scenarios (WSDL as a dependency, WSDL not as a dependency).
",,14400,14400,,0%,14400,14400,,,,,,CXF-3964,,,,24/Feb/12 06:51;owen.farrell;CXF-4136.patch;https://issues.apache.org/jira/secure/attachment/12515894/CXF-4136.patch,24/Feb/12 06:44;owen.farrell;cxf-multi-module-example.zip;https://issues.apache.org/jira/secure/attachment/12515892/cxf-multi-module-example.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,229196,,,2012-02-24 06:43:36.0,,,,,,0|i0b6br:,63137,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CachedOutputStream lost charsetName param,CXF-4133,12543906,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,farmer1992,farmer1992,23/Feb/12 21:22,23/Apr/12 16:45,14/Mar/19 02:29,24/Feb/12 14:16,2.2.12,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,Core,,,,0,,,,,,"org.apache.cxf.io.CachedOutputStream 

{code}
    public void writeCacheTo(StringBuilder out, String charsetName, int limit) throws IOException {
        flush();
        if (totalLength < limit
            || limit == -1) {
            writeCacheTo(out); // <--- here lost charsetName param(if not using utf8) and make the non-utf8 char in log unreadable
            return;
        }
{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,229144,,,2012-02-23 21:22:54.0,,,,,,0|i0b7zz:,63408,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.transport.http.finalizeConfig()  duplicate property listener and possible memory leak,CXF-4131,12543841,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,lrbeauchemin,lrbeauchemin,23/Feb/12 14:45,23/Apr/12 16:45,14/Mar/19 02:29,02/Mar/12 21:13,2.4.6,2.5.2,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,Transports,,,,0,,,,,,"org.apache.cxf.transport.http.finalizeConfig() calling two times client.addPropertyChangeListener(this) resulting in duplicated PropertyChangeListener entry in the HTTPClientPolicy.propertyListener field.
First instance added is here:
{noformat} Thread [main] (Suspended (breakpoint at line 859 in org.apache.cxf.transport.http.HTTPConduit))     
     org.apache.cxf.transport.http.HTTPConduit.setClient(org.apache.cxf.transports.http.configuration.HTTPClientPolicy) line: 859     
     org.apache.cxf.transport.http.HTTPConduit.configureConduitFromEndpointInfo(org.apache.cxf.transport.http.HTTPConduit, org.apache.cxf.service.model.EndpointInfo) line: 334     
     org.apache.cxf.transport.http.HTTPConduit.finalizeConfig() line: 413     
     org.apache.cxf.transport.http.HTTPTransportFactory.getConduit(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.ws.addressing.EndpointReferenceType) line: 253     
{noformat} 
The second one is here:
{noformat} 
Thread [main] (Suspended)     
     org.apache.cxf.transport.http.HTTPConduit.finalizeConfig() line: 421     
     org.apache.cxf.transport.http.HTTPTransportFactory.getConduit(org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.ws.addressing.EndpointReferenceType) line: 253 
{noformat} 

This problem seem to had been introduced when we upgraded to version 2.5.2 from version 2.3.2


Because we implemented a custom ConduitSelector and reuse the Conduit instance, this generated a memory leak from HTTPClientPolicy.propertyListener.
The work around we currently use to clean the extra instances is by reflection.
We use reflection to know how much duplicate instances there is in HTTPClientPolicy.propertyListener because there is no public api to access the array.
We then call HTTPClientPolicy.removePropertyChangeListener(listener) multiple time with the same instance to remove all of them as in the following snipplet from our implementation of ConduitSelector.complete() :
{noformat} 
 PropertyChangeListener listener = (PropertyChangeListener) selectedConduit;
                        List<HTTPClientPolicy> policies =
                            pExchange.getEndpoint().getEndpointInfo().getExtensors(
                                HTTPClientPolicy.class);
                        for (HTTPClientPolicy policy : policies)
                        {
                            long nbListener = CxfReflectionInstrospectorUtil.getListenerNb(policy, listener);
                            while (nbListener > 0)
                            {
                                policy.removePropertyChangeListener(listener);
                                --nbListener;
                            }
                        }
{noformat} 


regards and many thanks for your efforts,
Louis-Rene Poirier Beauchemin.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,229079,,,2012-02-23 14:45:13.0,,,,,,0|i0b7vz:,63390,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server using Provider implementation writes contents of SOAP body in SOAP header,CXF-4130,12543730,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,seumas.soltysik,seumas.soltysik,22/Feb/12 18:51,23/Apr/12 16:45,14/Mar/19 02:29,02/Mar/12 21:14,2.5.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,,,,,1,,,,,,"When using a server using a Provider implementation in conjunction with a WSDL that defines a SOAP header as part of its output, the contents out the SOAP body will be written as a SOAP header depending on the order of the parts defined in the output message.

For example if an output message is defined like this:

	<message name=""FooResponse"">
		<part name=""FooResponseHeader"" element=""tns:FooResponseHeader""/>
		<part name=""FooResponse"" element=""tns:FooResponse""/>
	</message>

and the SOAP binding operation is defined like this:

		<operation name=""Foo"">
			<soap:operation/>
			<input>
				<soap:header message=""tns:FooRequest"" part=""FooRequestHeader"" use=""literal""/>
				<soap:body parts=""FooRequest"" use=""literal""/>
			</input>
			<output>
				<soap:header message=""tns:FooResponse"" part=""FooResponseHeader"" use=""literal""/>
				<soap:body use=""literal""/>
			</output>
		</operation>

because the FooResponseHeader is defined as the first part in the output message, CXF writes out the following message:


<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
  <SOAP-ENV:Header>
    <FooResponseHeader xmlns:ns2=""http://cxf.apache.org/soapheader/inband"">FooResponseHeader</FooResponseHeader>
    <ns2:FooResponse xmlns:ns2=""http://cxf.apache.org/soapheader/inband"">
      <ns2:Return>Foo Response Body</ns2:Return>
    </ns2:FooResponse></SOAP-ENV:Header>
  <SOAP-ENV:Body/>
</SOAP-ENV:Envelope>

The basic reason for this is that the SoapOutInterceptor uses the part index of the part defining the output header to look up the instance of that part in the MessageContentList contained in the Message. However, in the Provider use case, the MessageModeOutInterceptorInternal interceptor puts the contents of the SOAP body into the first slot of the MessageContentList. So in the case where the index of the SOAP header part is 0, the contents of the SOAP body get written out as a SOAP header.

Additional details are available as part of the CXF developers mailing list here: http://cxf.547215.n5.nabble.com/Response-SOAP-Headers-with-Provider-implementation-td5485785.html

A possible solution to this problem is to place the contents of the SOAP body in the appropriate location in the MessageContentList in MessageModeOutInterceptorInternal. This solution would look something like this:

MessageModeOutInterceptorInternal.handleMessage() 

            list.remove(0); 
            DocumentFragment frag = soapMessage.getSOAPPart().createDocumentFragment(); 
            try { 
                Node body = soapMessage.getSOAPBody(); 
                Node nd = body.getFirstChild(); 
                while (nd != null) { 
                    body.removeChild(nd); 
                    frag.appendChild(nd); 
                    nd = soapMessage.getSOAPBody().getFirstChild(); 
                } 

                int index = 0; 
                
                Exchange exchange = message.getExchange(); 
                BindingOperationInfo operation = (BindingOperationInfo)exchange.get(BindingOperationInfo.class 
                    .getName()); 

                List<MessagePartInfo> parts = null; 
                BindingMessageInfo bmsg = null; 
                boolean client = isRequestor(message); 

                if (!client) { 
                    if (operation.getOutput() != null) { 
                        bmsg = operation.getOutput(); 
                        parts = bmsg.getMessageParts(); 
                    } 
                } else { 
                    bmsg = operation.getInput(); 
                    parts = bmsg.getMessageParts(); 
                }   
                
                if (parts != null && parts.size() > 0) { 
                index = parts.get(0).getIndex(); 
                }       
                                
                list.set(index, frag);
",,,,,,,,,,,,,,,,,22/Feb/12 19:06;seumas.soltysik;cxf4130.patch;https://issues.apache.org/jira/secure/attachment/12515631/cxf4130.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,228969,,,Thu Mar 01 19:52:40 UTC 2012,,,,,,0|i0b7vb:,63387,,,,,,,,"22/Feb/12 19:06;seumas.soltysik;Patch includes system testcase which demonstrates the issue.

Suggestion of fix is included in the issue description but is not part of the patch.",01/Mar/12 19:52;seumas.soltysik;Any further thoughts/progress on this jira? We have a customer who would like this as part of a patch in the next couple of weeks.,,,,,,,,,,,,,,,,,,,,,,,,,
DynamicClientFactory no longer works with JDK provided JAXB impl,CXF-4129,12543695,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,22/Feb/12 15:18,23/Apr/12 16:45,14/Mar/19 02:29,22/Feb/12 16:20,2.5.2,,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,,,,,0,,,,,,"
The fixes for CXF-4037 has made the DynamicClient no longer work at all with the in JDK version of JAXB.   ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228934,,,Wed Feb 22 16:20:29 UTC 2012,,,,,,0|i0b7dr:,63308,,,,,,,,"22/Feb/12 16:20;dkulp;The fix for CXF-4037 only works when using the out-of-jdk version of JAXB.   However, the 80% use cases should now work fine with the in-jdk jaxb.",,,,,,,,,,,,,,,,,,,,,,,,,,
Code Gen plugin fails silently when generated classes have name collisions,CXF-4128,12543690,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,bstopp,bstopp,22/Feb/12 14:35,23/Apr/12 16:45,14/Mar/19 02:29,06/Apr/12 05:51,2.5.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,Build system,,,,0,,,,,,"When executing a wsdl2java call using a WSDL which has a Port Type with the same name as a Message element, the classes for the Message or Clients are not created correctly. 

This only happens when the PortType name contains underscores and different case, a direct name match allows discovery of collisions and appropriate name overriding.

The pom & wsdl test cases are attached. When asked on the users mailing list, this was the result of a command executed:

wsimport -keep recipeservice.wsdl

Generating code...

[ERROR] Could not generate SEI, class: edu.umkc.cse.cs5551.ws.CREATERECIPE already exists. Rename wsdl:portType ""{http://ws.cs5551.cse.umkc.edu/}CREATE_RECIPE"" using JAX-WS customization
  line 35 of file:/C:/testservice/src/main/resources/recipeservice.wsdl

",Windows / Mac (Case insensitive),,,,,,,,,,,,,,,,22/Feb/12 14:38;bstopp;pom.xml;https://issues.apache.org/jira/secure/attachment/12515591/pom.xml,22/Feb/12 14:38;bstopp;recipeservice.wsdl;https://issues.apache.org/jira/secure/attachment/12515592/recipeservice.wsdl,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-04-06 05:51:10.511,,,no_permission,,Unknown,,,,,,,,,,,228929,,,Fri Apr 06 05:51:10 UTC 2012,,,,,,0|i0b6an:,63132,,,,,,,,"06/Apr/12 05:51;ffang;commit fix
http://svn.apache.org/viewvc?rev=1310154&view=rev for trunk
http://svn.apache.org/viewvc?rev=1310156&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1310158&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1310177&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServlet should be reinitialized on ContextRefreshedEvent,CXF-4127,12543635,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jensborgland,jensborgland,22/Feb/12 08:03,23/Apr/12 16:45,14/Mar/19 02:29,09/Apr/12 20:32,2.4.7,2.5.3,,,,,,,,,,,,,,,,2.5.3,2.6,,,,,,,0,,,,,,"I have a web application that uses Spring and CXF and is deployed on Tomcat. The application is initialized using the {{org.springframework.web.context.ContextLoaderListener}}.

With the fix for CXF-4094 I am now able to refresh the Spring context (like described below) without any exceptions but since the {{CXFServlet}} isn't created by Spring and doesn't listen for {{ContextRefreshedEvent}}, the {{Bus}} and the {{DestinationRegistry}} doesn't get reinitialized.

I refresh the Spring context like this:
{{((ConfigurableApplicationContext)applicationContext).refresh();}}

I think the CXFServlet should implement {{ApplicationListener<ContextRefreshedEvent>}} and register itself as an application listener on the Spring context and reinitialize itself in the {{onApplicationEvent}} method.

As an experiment I created a subclass to CXFServlet with the implementation of onApplicationEvent below (which seems to work). The real implementation could perhaps do a bit less work.


{code:title=RefreshingCXFServlet.java|borderStyle=solid}
@Override
public void onApplicationEvent(ContextRefreshedEvent event) {
  destroy();
  setBus(null);
  try {
    super.init(m_sc);
  } catch (ServletException e) {
    throw new RuntimeException(""Unable to reinitialize the CXFServlet"", e);
  }
} 
{code} ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228874,,,Wed Feb 22 12:38:14 UTC 2012,,,,,,0|i0b6of:,63194,,,,,,,,"22/Feb/12 12:38;jensborgland;Note that {{org.springframework.context.support.AbstractApplicationContext}} recreates its {{ApplicationEventMulticaster}} when the context is refreshed. The CXFServlet therefore needs to add itself to the set of statically specified application listeners instead.

{code:title=registering a listener|borderStyle=solid}
WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(getServletContext());
GenericApplicationListenerAdapter listener = new GenericApplicationListenerAdapter(this);

// This won't work:
//((ConfigurableWebApplicationContext) wac).addApplicationListener(listener);

// This works:
((AbstractApplicationContext) wac).getApplicationListeners().add(listener);
{code}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError when requesting WADL,CXF-4125,12543552,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,ceineke,ceineke,21/Feb/12 20:07,23/Apr/12 16:45,14/Mar/19 02:29,23/Feb/12 14:04,2.4.6,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,"My JAX-RS service throws a StackOverflowException when requesting the WADL:

java.lang.StackOverflowError
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:205)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:321)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:314)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:294)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:266)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1560)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1491)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:113)
	at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
	at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:388)
	at sun.reflect.annotation.AnnotationParser.parseAnnotation(AnnotationParser.java:199)
	at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:87)
	at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:70)
	at java.lang.reflect.Method.declaredAnnotations(Method.java:714)
	at java.lang.reflect.Method.getDeclaredAnnotations(Method.java:707)
	at java.lang.reflect.AccessibleObject.getAnnotations(AccessibleObject.java:193)
	at org.apache.cxf.jaxrs.utils.InjectionUtils.canPropertyBeIgnored(InjectionUtils.java:1070)
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getParametersFromBeanClass(InjectionUtils.java:1059)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:547)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:558)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:558)
        ... (last line repeated about 990 times)

I've tracked the problem down to a particular method signature:

@GET @Path(""/foo"") FooResult doFoo(@QueryParam("""") Foo foo);

where Foo is:

public class Foo extends com.foo.FooTO { ... }

and FooTO is generated by JAXB:

@XmlType(name = """", propOrder = {
   ...
})
@XmlRootElement(name = ""foo"")
public class FooTO
    implements Equals, HashCode, ToString
{
    @XmlElement(type = Long.class)
    protected List<Long> a;
    @XmlElement(required = true, type = String.class)
    @XmlJavaTypeAdapter(Adapter1 .class)
    @XmlSchemaType(name = ""date"")
    protected DateTime b;
    @XmlElement(required = true, type = String.class)
    @XmlJavaTypeAdapter(Adapter1 .class)
    @XmlSchemaType(name = ""date"")
    protected DateTime c;
    ...
}

I refer to the XSD in the jaxrs:schemaLocations section of my application context and I configure the WadlGenerator in the jaxrs:providers section as follows:

<jaxrs:providers>
  <bean class=""org.apache.cxf.jaxrs.model.wadl.WadlGenerator"">
    <property name=""applicationTitle"" value=""FooService""/>
    <property name=""singleResourceMultipleMethods"" value=""false""/>
    <property name=""addResourceAndMethodIds"" value=""true""/>
  </bean>
</jaxrs:providers>","$ java -version
java version ""1.6.0_23""
OpenJDK Runtime Environment (IcedTea6 1.11pre) (6b23~pre11-0ubuntu1.11.10.1)
OpenJDK 64-Bit Server VM (build 20.0-b11, mixed mode)

<jaxb.version>2.2.4</jaxb.version>
<jaxb2.basics.version>0.6.3</jaxb2.basics.version>
<jaxb2.plugin.version>0.8.0</jaxb2.plugin.version>",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228791,,,Thu Feb 23 14:09:36 UTC 2012,,,,,,0|i0b6qf:,63203,,,,,,,,23/Feb/12 14:09;ceineke;Thank you sergey!,,,,,,,,,,,,,,,,,,,,,,,,,,
DynamicClientFactory has issues with schemas embedding in file based WSDL's,CXF-4124,12543548,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,21/Feb/12 19:46,23/Apr/12 16:45,14/Mar/19 02:29,21/Feb/12 20:43,2.5.2,,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,,,,,0,,,,,,"
If you pass a WSDL to the DynamicClientFactory using a ""file:"" URL and that WSDL contains schemas, the factory will spit out an exception due to the schemas being setup to pass to jaxb have fragments in the uri (""#types1"") and thus cannot create the File object.  


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228787,,,2012-02-21 19:46:43.0,,,,,,0|i0b7gv:,63322,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nullpointer exception in Servlet Controller when running in OSGi and changing the http port at runtime,CXF-4123,12543462,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,chris@die-schneider.net,chris@die-schneider.net,21/Feb/12 11:27,23/Apr/12 16:45,14/Mar/19 02:29,20/Mar/12 18:04,2.5.2,,,,,,,,,,,,,,,,,2.5.3,2.6,,,OSGi,Transports,,,0,,,,,,"To reproduce install karaf 2.2.5 and install CXF features.

Install a bundle that offers a service using a servlet. 
When Accessing the endpoint all works.

Now change the port of the http service using the pax web config.

Now access the endpoint again and the exception below occurs.

java.lang.NullPointerException
 at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)[140:org.apache.cxf.bundle:2.5.2]
 at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:126)[140:org.apache.cxf.bundle:2.5.2]
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)[140:org.apache.cxf.bundle:2.5.2]
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:113)[140:org.apache.cxf.bundle:2.5.2]
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)[50:org.apache.geronimo.specs.geronimo-servlet_2.5_spec:1.1.2]
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:164)[140:org.apache.cxf.bundle:2.5.2]
 at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:547)[61:org.eclipse.jetty.servlet:7.5.4.v20111024]
 at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:480)[61:org.eclipse.jetty.servlet:7.5.4.v20111024]
 at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)[70:org.ops4j.pax.web.pax-web-jetty:1.0.8]
 at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:520)[60:org.eclipse.jetty.security:7.5.4.v20111024]
 at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:941)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:117)[70:org.ops4j.pax.web.pax-web-jetty:1.0.8]
 at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:409)[61:org.eclipse.jetty.servlet:7.5.4.v20111024]
 at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:875)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:72)[70:org.ops4j.pax.web.pax-web-jetty:1.0.8]
 at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.server.Server.handle(Server.java:349)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:919)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:582)[55:org.eclipse.jetty.http:7.5.4.v20111024]
 at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:218)[55:org.eclipse.jetty.http:7.5.4.v20111024]
 at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:51)[59:org.eclipse.jetty.server:7.5.4.v20111024]
 at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:586)[54:org.eclipse.jetty.io:7.5.4.v20111024]
 at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:44)[54:org.eclipse.jetty.io:7.5.4.v20111024]
 at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)[53:org.eclipse.jetty.util:7.5.4.v20111024]
 at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)[53:org.eclipse.jetty.util:7.5.4.v20111024]
 at java.lang.Thread.run(Thread.java:662)[:1.6.0_24]
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228708,,,2012-02-21 11:27:20.0,,,,,,0|i0b6pj:,63199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFRequestData should get chance to setEnableRevocation from message context When use WS-SecurityPolicy ,CXF-4122,12543431,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,21/Feb/12 06:34,23/Apr/12 16:45,14/Mar/19 02:29,21/Feb/12 07:52,,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,,,,,0,,,,,,So that signature validation with certificates revocation check could kick in when use policy based ws-security,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228677,,,2012-02-21 06:34:18.0,,,,,,0|i0b8mf:,63509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default WebApplicationException mapper dramatically increases the response time,CXF-4121,12543358,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Feb/12 15:22,23/Apr/12 16:45,14/Mar/19 02:29,21/Feb/12 17:12,,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,It appears the code to do with producing the log warning message is to blame,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228604,,,2012-02-20 15:22:13.0,,,,,,0|i0b7h3:,63323,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainerTest.testResourceWithEPR breaks when run offline,CXF-4118,12543036,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,dsosnoski,dsosnoski,17/Feb/12 10:16,02/May/13 02:29,14/Mar/19 02:29,26/Apr/12 16:57,2.5.3,,,,,,,,,,,,,,,,,2.5.4,2.6.1,,,JAX-RS,,,,0,build-failure,offline,,,,NPE after SourceGenerator.createCodeModel() call to compiler.bind() returns null.,"OpenSuse Linux 11.4 32 bit, Java(TM) SE Runtime Environment (build 1.6.0_23-b05)",,,,,,,,,,,,,,,CXF-4268,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228322,,,2012-02-17 10:16:03.0,,,,,,0|i089hr:,46137,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Argument type mismatch when using Implicit Headers and @RequestWrapper with Service from WSDL,CXF-4117,12543007,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,agudian,agudian,17/Feb/12 08:04,23/Apr/12 16:45,14/Mar/19 02:29,21/Feb/12 22:04,2.5.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,JAX-WS Runtime,,,,0,,,,,,"I started off with a WSDL defining an implicit soap header (in/out). In case the code generator creates ""un-wrapped"" methods with @RequestWrapper / @ResponseWrapper annotations, I get the following error when calling my endpoint (which has the wsdlLocation attribute set):

{code}
WARNING: Application {http://sample.com/ws}ImplicitHeaderSampleService#{http://sample.com/ws}SetStatus has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: argument type mismatch while invoking public javax.xml.datatype.XMLGregorianCalendar sample.ImplicitHeaderSampleTest$ImplicitH
eaderSampleImplementation.setStatus(long,java.lang.String,javax.xml.ws.Holder) throws com.sample.ws.InvalidArgumentFault with params [12345, status, com.sample.
audit.Audit@60029d].
        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:159)
        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:86)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:133)
        at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:63)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:123)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:323)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:289)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:943)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:879)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
        at org.eclipse.jetty.server.Server.handle(Server.java:345)
        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
        at org.eclipse.jetty.server.HttpConnection$RequestHandler.content(HttpConnection.java:936)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:801)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:224)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:51)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:586)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:44)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
        at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: argument type mismatch
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:173)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:89)
        ... 29 more
{code}

The error does not occour if I start my endoint without specifying the WSDL location.

I'll attach a sample that demonstrates the behaviour.",,,,,,,,,,,,,,,,,17/Feb/12 08:08;agudian;implicit-header-showcase.zip;https://issues.apache.org/jira/secure/attachment/12514964/implicit-header-showcase.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,228293,,,Wed Feb 22 10:01:54 UTC 2012,,,,,,0|i0b7xj:,63397,,,,,,,,"17/Feb/12 08:08;agudian;Demonstration of the error. Just run {{mvn test}} to execute a unit test.

Two tests are executed: the first one will use a method without @RequestWrapper/@ResponseWrapper annotations and it will pass. The second test currently fails due to the described error.","22/Feb/12 10:01;agudian;Tested your fix in the latest snapshot release. Works great. Thanks for your fast response!

Looking forward to the release... :)

(should I close the issue now?)",,,,,,,,,,,,,,,,,,,,,,,,,
The operation property of the MessageContext may return wrong value if erroneous request is sent,CXF-4115,12542853,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,zbeothy,zbeothy,16/Feb/12 11:54,23/Apr/12 16:45,14/Mar/19 02:29,16/Feb/12 18:10,2.5.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,JAX-WS Runtime,,,,0,,,,,,"Send a random request to a Provider based service. Retrieving the operation property from the MessageContext within the invoke method always returns an operation defined in the attached wsdl even if the the rquest is completely unrelated, e.g. unknown SOAPAction, payload not matching any schema in the WSDL.
Expected behavior is to get back some undefined value, e.g. null, to indicate the requested operation could not be determined. 

Attached is the slightly modified jaxws_dispatch_provider sample. The changes were basically made in demo.hwDispatch.server.GreeterSoapMessageProvider:

{code:title=GreeterSoapMessageProvider.java}
@WebServiceProvider(portName = ""SoapPort1"", serviceName = ""SOAPService1"",
                      targetNamespace = ""http://apache.org/hello_world_soap_http"",
                      wsdlLocation = ""wsdl/hello_world.wsdl"")
@ServiceMode(value = Service.Mode.MESSAGE)
public class GreeterSoapMessageProvider implements Provider<SOAPMessage> {

    @Resource
    private WebServiceContext context;

    public SOAPMessage invoke(SOAPMessage request) {

	    QName opName = (QName) context.getMessageContext().get(MessageContext.WSDL_OPERATION);

        System.out.println(""Incoming Client Request as a SOAPMessage calling operation "" + opName);

...
{code}


If sending the request attached in the output of the console is:
{{monospaced}}Incoming Client Request as a SOAPMessage calling operation {http://apache.org/hello_world_soap_http}greetMe{{monospaced}}",,,,,,,,,,,,,,,CXF-4108,,16/Feb/12 11:55;zbeothy;jaxws_dispatch_provider.zip;https://issues.apache.org/jira/secure/attachment/12514791/jaxws_dispatch_provider.zip,16/Feb/12 11:55;zbeothy;request.txt;https://issues.apache.org/jira/secure/attachment/12514792/request.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-02-16 12:24:10.319,,,no_permission,,Unknown,,,,,,,,,,,228139,,,Thu Feb 16 15:44:57 UTC 2012,,,,,,0|i0b8nb:,63513,,,,,,,,"16/Feb/12 12:24;gmazza;Rather than ""Expected behavior is to get back some undefined value, e.g. null, to indicate the requested operation could not be determined"" I think it should be ""Expected behavior is to get back some undefined value, e.g. null, to indicate framework making no effort to match the incoming request with a specific SEI operation.""  If you're using a Provider-based service, the framework should be throwing all SOAP requests to it, so the algorithm it uses to match SOAP request to specific SEI operations (when using SEI-based services) should never have been activated anyway.

Or maybe not.  The difference in approach here is with Provider it is still possible for the CXF framework to try to match the SOAP request to a specific wsdl:operation (even though there's no corresponding unique method in a Provider implementation to be called as a result), which would allow Provider implementations that ability to base business logic off of a populated MessageContext.WSDL_OPERATION instead of parsing the SOAP request to determine the functionality that needs to be called.  A case can be made for this but as I linked to in the superceding bug CXF-4108, Metro does not offer this so such functionality would break portability, and this algorithm activation for incoming calls to the Provider would cause some (probably minor) performance hit.
","16/Feb/12 15:44;dkulp;
Just played around with the JAX-WS RI with your sample to see what it does.

With JAX-WS RI 2.1.7 (and what's built into JDK 1.6), the provider ALWAYS gets null for the operation.  Looking into their code, they do not provide the wsdl operation name at all.  (it IS optional in the spec, see table 9.2 in the spec).    However, with 2.2.5 (version built into Java7), it provides null if the message doesn't match the wsdl and the proper qname if it does.   

Anyway, I do think we need to return null in the non-matching case.   I just wanted to point out that code that relies on it NOT being null isn't exactly portable as the operation name is optional in the spec.




",,,,,,,,,,,,,,,,,,,,,,,,,
Header fields duplication in generated wsdl file when using aegis databinding,CXF-4113,12542703,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,artur.ashyrov,artur.ashyrov,15/Feb/12 16:11,23/Apr/12 16:45,14/Mar/19 02:29,16/Feb/12 01:56,2.4,2.5,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,Aegis Databinding,JAX-WS Runtime,,,0,,,,,,"CXF generates invalid wsdl for jax-ws annotated interfaces when using aegis databinding. 

Problem is in generating schema for methods which have parameters annotated with @WebParam( name='...', header=true).
Such parameters are being duplicated in generated wsdl. For example:
{code}
...
  <xsd:element name=""buggyWsdlDef"" type=""buggyWsdlDef""/>
  <xsd:complexType name=""buggyWsdlDef"">
    <xsd:sequence>
      <xsd:element minOccurs=""0"" name=""userName"" nillable=""true"" type=""xsd:string""/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name=""firstHeader"" type=""xsd:int""/>
  <xsd:element name=""secondHeader"" type=""xsd:string""/>
  <xsd:element name=""firstHeader"" nillable=""true"" type=""xsd:int""/>
  <xsd:element name=""secondHeader"" nillable=""true"" type=""xsd:string""/>
  <xsd:element name=""buggyWsdlDefResponse"" type=""buggyWsdlDefResponse""/>
...
{code}
This causes some clients totally not to work with such web service(soap ui doesn't complain somewhy). 
Eclipse wsdl validator gives me this error:
""A schema cannot contain two global components with the same name; this schema contains two occurrences of 'http://service.common.example.com/,firstHeader'.

My investigation shows that:
1. This problem appears only when using aegis databinding.
2. This bug presented in versions which are >= 2.4.0 (last version without this bug is 2.3.9)
3. This happens only in wsdl that is being generated for importing through wsdl:import directive. 
In my case original wsdl is <ws-url>/service?wsdl and one that is imported is <ws-url>/service?wsdl=ExampleService.wsdl
4. Debugging shows that problem is probably in ReflectionServiceFactoryBean. When service is starting, next chain of methods is called: buildServiceFromClass->...initializeParameter[many times]->...initializeWrappedSchema[many times]

initializeWrappedSchema method calls checkForElement(...) which adds duplications for header parameters in service object model(ServiceInfo instance).
Not sure why exactly this happens but hope that it will help you at least locate the problem.

I'm attaching maven project which demonstrates this problem.

In order to reproduce this bug using sample project attached:
1. ""mvn jetty:run"" in project directory
2. Open localhost:8080/CXFExampleService/service?wsdl=ExampleService.wsdl in the browser

Search for '<xsd:complexType name=""buggyWsdlDef"">' occurence in that wsdl.",,,,,,,,,,,,,,,,,15/Feb/12 16:20;artur.ashyrov;cxfaegisbug.zip;https://issues.apache.org/jira/secure/attachment/12514654/cxfaegisbug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-02-15 16:17:07.749,,,no_permission,,Unknown,,,,,,,,,,,227989,,,Wed Feb 15 16:20:25 UTC 2012,,,,,,0|i0b7xz:,63399,,,,,,,,"15/Feb/12 16:14;artur.ashyrov;It seems that i can't add attachments here.
I will send that sample project on request.","15/Feb/12 16:17;dkulp;You should be able to.  In the ""More Actions"" drop down above, there should be an ""Attach Files"" option.
",15/Feb/12 16:20;artur.ashyrov;sample project attached,,,,,,,,,,,,,,,,,,,,,,,,
Java first @Policy annotations aren't working,CXF-4110,12542575,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,14/Feb/12 18:21,23/Apr/12 16:45,14/Mar/19 02:29,15/Feb/12 16:51,2.3.9,2.4.6,2.5.2,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,,,,,0,,,,,,"If using @Policy annotations on java first code, they only work with placement of Service.   The descriptions in the servicemodel are not being set properly so the lookups are not working during effective policy calculation.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,227861,,,2012-02-14 18:21:49.0,,,,,,0|i0b7yf:,63401,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UriInfo getHost caches first request's host and always returns that on subsequent calls,CXF-4109,12542550,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dhintz,dhintz,14/Feb/12 15:19,13/Apr/15 16:25,14/Mar/19 02:29,14/Feb/12 17:13,2.5.2,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,,,,,0,,,,,,"The call to UriInfo.getHost() is caching the first request's host and always returning that on all subsequent calls.

For example, Tomcat starts up and a request is made to the server using a URL of ""http://1.2.3.4/apicall"", getHost() returns ""1.2.3.4"", the next request is made using a URL of ""http://mydomainname.com/apicall"", getHost() still returns ""1.2.3.4"", where ""mydomainname.com"" is expected.
",Linux CentOS 6,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2015-03-17 10:28:40.738,,,no_permission,,Unknown,,,,,,,,,,,227836,,,Mon Apr 13 16:25:57 UTC 2015,,,,,,0|i13zef:,231365,,,,,,,,"17/Mar/15 10:28;hovenko;This issue seems to be back, at least in CXF version 2.7.14.
UriInfo caches the Host and port information (from X-Port) from the first requests.
","20/Mar/15 22:10;sergey_beryozkin;I'm seeing URI.getHost() got back into CXF 3.0.x, so I've just removed the references to it.

Can you check this code, 

https://fisheye6.atlassian.com/browse/~br=2.7.x-fixes/cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/HttpUtils.java?r=4c509a53208f69dd81c0c25990277a2e65be68f4#to261

Do you have any idea what call may be causing the caching of the host and port ?
thanks  ","02/Apr/15 15:15;sergey_beryozkin;Any chance you can help with isolating the code which proves to be problematic in your case ?
I'll have to resolve it otherwise as Won't Fix due to Can't Reproduce.",02/Apr/15 15:16;sergey_beryozkin;Well this issue has not been re-opened so far but basically I'll need your help if you'd like me to revisit it,"13/Apr/15 09:48;hovenko;I tried to look at the code in Fisheye, but I just can't make sense of the presentation of the commit on the link you posted...
Looks to me that the commit has no changes... or might be just me not understanding hos Fisheye works... ;)

We worked around the issue by supplying a init-param *disable-address-updates=true* in web.xml:
{code}
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<init-param>
			<param-name>disable-address-updates</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
{code}


As a side note... this init-param seems to have a logical flaw... since I in any other situation would read the name of the init-param as functioning the other way around, that updating of the address would now be disabled (aka cached), instead of forcing it to be updated.","13/Apr/15 16:25;sergey_beryozkin;Ok, thanks for the confirmation. I did not notice it was CXF 2.5.2.
This is a known workaround, and it this property is enabled by default in CXF 3.0.x
",,,,,,,,,,,,,,,,,,,,,
Attachments get lost when WSDL claims HTTP transport but config uses JMS,CXF-4106,12542500,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jensgr,jensgr,14/Feb/12 09:24,23/Apr/12 16:45,14/Mar/19 02:29,21/Mar/12 21:51,2.5.2,,,,,,,,,,,,,,,,,2.5.3,,,,Soap Binding,,,,0,,,,,,"I'm trying to call a service that claims SOAP with Attachments via an HTTP transport. In reality, however, the service is connected via JMS, so I'm overwriting the transportId in the Spring config. In the request that is sent out from the client the attachment is missing. Instead, it is included as a second XML element in the SOAP body.

According to Dan, this is because the change in transport resets a couple of things to defaults, see http://cxf.547215.n5.nabble.com/SOAP-w-Attachments-still-supported-td5454220.htm",,,,,,,,,,,,,,,,,14/Feb/12 09:27;jensgr;swa-client.zip;https://issues.apache.org/jira/secure/attachment/12514473/swa-client.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,227786,,,Tue Feb 14 09:27:30 UTC 2012,,,,,,0|i0b8ef:,63473,,,,,,,,"14/Feb/12 09:27;jensgr;Sample project that exhibits the issue.

The client will send a request on ""mvn integration-test"". Note that the project uses WebSphere as JMS broker.",,,,,,,,,,,,,,,,,,,,,,,,,,
Slf4jLogger doesn't mapping the level as the SLF4JBridgeHandler does,CXF-4105,12542486,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,14/Feb/12 06:56,23/Apr/12 16:45,14/Mar/19 02:29,14/Feb/12 13:09,2.3.9,2.4.6,2.5.2,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,,,,,0,,,,,,"The Slf4jLogger doesn't mapping TRACE to FINEST as the comments said.
And it also maps the FINER to TRACE. 
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,227772,,,Tue Feb 14 13:09:37 UTC 2012,,,,,,0|i0b80f:,63410,,,,,,,,"14/Feb/12 13:09;njiang;Applied patch into trunk, cxf-2.5.x, cxf-2.4.x, cxf-2.3.x.
",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in org.apache.cxf.frontend.WSDLGetUtils.findSchemaLocation(),CXF-4103,12542392,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,opalka,opalka,13/Feb/12 12:27,23/Apr/12 16:45,14/Mar/19 02:29,13/Feb/12 18:19,2.5.2,,,,,,,,,,,,,,,,,2.5.3,2.6,,,JAX-WS Runtime,,,,0,,,,,,"Caused by: java.lang.NullPointerException
<------>at org.apache.cxf.frontend.WSDLGetUtils.findSchemaLocation(WSDLGetUtils.java:579)
<------>at org.apache.cxf.frontend.WSDLGetUtils.updateSchemaImports(WSDLGetUtils.java:464)
<------>at org.apache.cxf.frontend.WSDLGetUtils.updateSchemaImports(WSDLGetUtils.java:487)
<------>at org.apache.cxf.frontend.WSDLGetUtils.updateDefinition(WSDLGetUtils.java:417)
<------>at org.apache.cxf.frontend.WSDLGetUtils.updateDefinition(WSDLGetUtils.java:395)
<------>at org.apache.cxf.frontend.WSDLGetUtils.getDocument(WSDLGetUtils.java:178)
<------>... 27 more
",,,,,,,,,,,,,,,,,13/Feb/12 12:29;opalka;CXF-4103.patch;https://issues.apache.org/jira/secure/attachment/12514347/CXF-4103.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-02-23 09:15:49.774,,,no_permission,,Unknown,,,,,,,,,,,227678,,,Thu Feb 23 09:15:49 UTC 2012,,,,,,0|i0b81z:,63417,,,,,,,,"23/Feb/12 09:15;sauthieg;For completness, the NPE is caused because of {{<xs:import>}} with no {{@schemaLocation}}.
In other words the following statement in an XSD will cause the NPE:
{noformat}<xs:import namespace=""http://www.w3schools.com/schema"" />{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,
"SignedParts, EncryptedParts policy assertions are silently ignored on the client side if specified alone",CXF-4099,12542121,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,ashakirin,ashakirin,10/Feb/12 14:59,23/Apr/12 16:45,14/Mar/19 02:29,16/Feb/12 18:54,,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,WS-* Components,,,,0,,,,,,"Hi,

Actually if client defines policy containing only SignedParts, EncryptedParts assertions without binding (Assymetric, Symmetric or Transport) CXF does nothing and send unsigned/unencrypted message. Exception is thrown only on service side (Assertion is not satisfied). I find it a little bit dangerous, because client can assume that message is encrypted. IMHO exception should be thrown already on client side.

Fix proposals:
A) PolicyVerificationOutInterceptor 

As I can see PolicyVerificationOutInterceptor doesn't throw exception in case if policy assertions are not satisfied.
That means for outgoing messages (client request and server response) policy assertions can be not fulfilled and message will be sent anyway.

Code is below:
{code:java}
        // CXF-1849 Log a message at FINE level if policy verification fails
        // on the outbound-server side of a response
        try {
            aim.checkEffectivePolicy(policy.getPolicy());
        } catch (PolicyException e) {
            LOG.fine(""An exception was thrown when verifying that the effective policy for ""
                     + ""this request was satisfied.  However, this exception will not result in ""
                     + ""a fault.  The exception raised is: ""
                     + e.toString());
            return;
        }
        LOG.fine(""Verified policies for outbound message."");
{code}

For incoming messages unsatisfied assertion is interpreted as real problem and causes fault.

I am not sure about the reason of such different verification.
There are some cases where it can be critical even for outgoing message: encryption, compression.

B) If alternative A is not possible for some reasons, I would propose to implement additional interceptor, register it in WSSecurityPolicyInterceptorProvider and check specially for critcal security assertion satisfaction there. Interceptor should be called after PolicyBasedWSS4J* interceptors.

I am going to provide a patch either for A or B.

Regards,
Andrei.",,,,,,,,,,,,,,,,,15/Feb/12 14:28;ashakirin;cxf-rt-ws-security.patch;https://issues.apache.org/jira/secure/attachment/12514644/cxf-rt-ws-security.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-02-10 15:08:00.131,,,no_permission,,Unknown,,,,,,,,,,,227408,,,Wed Feb 15 14:28:20 UTC 2012,,,,,,0|i0b8jb:,63495,,,,,,,,"10/Feb/12 15:08;dkulp;
By the time the PolicyVerificationOutInterceptor is run, the message is likely already sent (or mostly sent, keep in mind we try to stream whenever possible).   Thus, throwing an exception there would just mean that any response would get discarded/lost, but the unencrypted data would have still been sent.  Thus, option 1 really would't accomplish much from a security standpoint.

Option 2 is ""acceptable"", but it may be easier to just update the PolicyBasedWSS4JOutInterceptor to handle the checks there.","10/Feb/12 15:15;coheigea;
I agree with Dan, as far as Option 2 is concerned. Just add a check to the PolicyBasedWSS4JOutInterceptor to check if there is any Signed/Encrypted Parts/Elements policy specified without a binding, and throw an exception if there is.

Colm.","14/Feb/12 12:00;ashakirin;Hi Dan and Colm,

OK, now I see the issue with PolicyVerificationOutInterceptor: 
- from one side it should be called late, because it is possible that some interceptors are invoked on SEND or POST_STREAM phases and they satisfy corresponded policy assertions
- from other side as far as it is called after MessageSenderInterceptor, Conduit already opens the connection and sets OutputStream into message. It is also possible that message is already partly sent until PolicyVerificationOutInterceptor is called.

Unfortunatelly it is not directly possible to fix it in PolicyBasedWSS4JOutInterceptor, because this interceptor is associated with binding assertions (TRANSPORT_BINDING, ASSYMETRIC_BINDING, SYMMETRIC_BINDING). If binding is not specified at all, interceptor will not be activated. I will try to provide patch for alternative 2.

Other question: does it make sense to throw exception in PolicyVerificationOutInterceptor anyway, if assertion is not satisfied? In some cases message is still not sent, if it is partly send - ok, better later as never :)
My concern that it is possible to have other, non-security assertions that also can be critical for client, for example custom compression. If assertion for some reasons is not satisfied on the client side, why not throw the exception instead send huge uncompressed message? Verify every individual assertion can be quite complicated.

Regards,
Andrei.",15/Feb/12 14:28;ashakirin;Patch for alternative 2,,,,,,,,,,,,,,,,,,,,,,,
"schemaLocation attribute for swaRef namespace ""http://ws-i.org/profiles/basic/1.1/xsd""  is wrongly removed ",CXF-4095,12541952,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,09/Feb/12 10:03,23/Apr/12 16:45,14/Mar/19 02:29,09/Feb/12 10:38,2.4.6,2.5.2,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,JAXB Databinding,,,,0,,,,,,,"The schemaLocation for swaRef namespace is wrongly removed in the wsdl generated from class:

@WebService
public interface AddNumbers {
    @WebMethod
    int addNumbers(@WebParam
                   @XmlAttachmentRef
                   DataHandler body);
}

This schema is expected:

<xs:schema version=""1.0"" targetNamespace=""http://attachment.apache.org/"" xmlns:tns=""http://attachment.apache.org/"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:swaRef=""http://ws-i.org/profiles/basic/1.1/xsd"">

  <xs:import namespace=""http://ws-i.org/profiles/basic/1.1/xsd"" schemaLocation=""http://ws-i.org/profiles/basic/1.1/swaref.xsd""/>
  <xs:element name=""addNumbers"" type=""tns:addNumbers""/>

  <xs:element name=""addNumbersResponse"" type=""tns:addNumbersResponse""/>

  <xs:complexType name=""addNumbers"">
    <xs:sequence>
      <xs:element name=""arg0"" type=""swaRef:swaRef"" minOccurs=""0""/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name=""addNumbersResponse"">
    <xs:sequence>
      <xs:element name=""return"" type=""xs:int""/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,227239,,,2012-02-09 10:03:23.0,,,,,,0|i0b80n:,63411,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Refreshing Spring application context leads to NPE,CXF-4094,12541951,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jensborgland,jensborgland,09/Feb/12 10:01,22/Feb/12 08:04,14/Mar/19 02:29,15/Feb/12 19:24,2.4,2.5,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,Bus,,,,0,,,,,,"I have a web application that uses Spring and CXF (currently 2.4.2 but I have reproduced this on 2.4.6 and 2.5.2 as well) and is deployed on Tomcat.

The application is initialized using the org.springframework.web.context.ContextLoaderListener.

Starting and shutting the application down works like a charm but if I try to refresh the Spring application context, using ((ConfigurableApplicationContext)applicationContext).refresh(); I run into problems. 

The application context first destroys all its beans (including CXFBusImpl, or rather its subclass SpringBus). SpringBus however calls ctx.close() on its application context - leading to a NullPointerException when the application context shortly after tries to close its bean factory:

{code:borderStyle=solid}
java.lang.NullPointerException 
    at org.springframework.context.support.AbstractRefreshableApplicationContext.closeBeanFactory(AbstractRefreshableApplicationContext.java:152) 
    at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:124) 
    at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467) 
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)}}
{code}
 

I think that SpringBus shouldn't call ctx.close() in destroyBeans(). I tried removing this row and rebuilding CXF myself which fixed the problem (and I couldn't detect any other problems starting or shutting down).",,,,,,,,,,,,,CXF-4127,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,227238,,,Thu Feb 16 19:00:25 UTC 2012,,,,,,0|i0b8an:,63456,,,,,,,,"16/Feb/12 19:00;jensborgland;Verified in: 
2.4.7 snapshot build 20120216.070257-12 
2.5.3 snapshot build 20120216.075050-14.",,,,,,,,,,,,,,,,,,,,,,,,,,
Can not load cxf and war feature in Karaf 2.2.5,CXF-4090,12541768,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,08/Feb/12 09:03,02/May/13 02:29,14/Mar/19 02:29,08/Feb/12 15:41,2.5.2,,,,,,,,,,,,,,,,,2.6,,,,,,,,0,,,,,,"Steps to reproduce:
Start fresh Karaf 2.2.5
features:addurl mvn:org.apache.cxf.karaf/apache-cxf/2.5.2/xml/features
features:install cxf
features:install war

The stacktrace looks like this:
2012-02-08 09:07:06.365:INFO:oejsh.ContextHandler:stopped HttpServiceContext{httpContext=DefaultHttpContext{bundle=org.apache.karaf.deployer.features [34]}}
ERROR: Bundle org.apache.cxf.bundle [134] EventDispatcher: Error during dispatch. (java.lang.ClassCastException: org.ops4j.pax.web.service.internal.HttpServiceProxy cannot be cast
to org.osgi.service.http.HttpService)
java.lang.ClassCastException: org.ops4j.pax.web.service.internal.HttpServiceProxy cannot be cast to org.osgi.service.http.HttpService
at org.ops4j.pax.web.extender.whiteboard.internal.HttpServiceTracker.addingService(HttpServiceTracker.java:104)
at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:896)
at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:261)
at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:233)
at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:840)
at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:871)
at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:733)
at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3772)
at org.apache.felix.framework.Felix.access$000(Felix.java:80)
at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:729)
at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:107)
at org.apache.felix.framework.Felix.registerService(Felix.java:2861)
at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:251)
at org.ops4j.pax.web.service.internal.Activator.createHttpServiceFactory(Activator.java:111)
at org.ops4j.pax.web.service.internal.Activator.access$900(Activator.java:70)
at org.ops4j.pax.web.service.internal.Activator$DynamicsServiceTrackerCustomizer.addingService(Activator.java:332)
at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:896)
at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:261)
at org.osgi.util.tracker.AbstractTracked.track(AbstractTracked.java:233)
at org.osgi.util.tracker.ServiceTracker$Tracked.serviceChanged(ServiceTracker.java:840)
at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:871)
at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:733)
at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3772)
at org.apache.felix.framework.Felix.access$000(Felix.java:80)
at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:729)
at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:107)
at org.apache.felix.framework.Felix.registerService(Felix.java:2861)
at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:251)
at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:229)
at org.ops4j.pax.web.service.jetty.internal.Activator.start(Activator.java:46)
at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:629)
at org.apache.felix.framework.Felix.activateBundle(Felix.java:1842)
at org.apache.felix.framework.Felix.startBundle(Felix.java:1759)
at org.apache.felix.framework.Felix$RefreshHelper.restart(Felix.java:4534)
at org.apache.felix.framework.Felix.refreshPackages(Felix.java:3591)
2012-02-08 09:07:06.460:INFO:oejs.Server:jetty-7.5.4.v20111024
at org.apache.felix.framework.PackageAdminImpl.run(PackageAdminImpl.java:363)
at java.lang.Thread.run(Thread.java:662)
------------------------
Loading the war feature first also does not work. This way we get

java.lang.Exception: Could not start bundle mvn:org.ops4j.pax.web/pax-web-extender-whiteboard/1.0.7 in feature(s) cxf-war-java5-2.5.2: Activator start error in bundle org.ops4j.pax
.web.pax-web-extender-whiteboard [89].
        at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:356)[16:org.apache.karaf.features.core:2.2.5]
        at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeature(FeaturesServiceImpl.java:283)[16:org.apache.karaf.features.core:2.2.5]
        at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeature(FeaturesServiceImpl.java:279)[16:org.apache.karaf.features.core:2.2.5]
        at org.apache.karaf.features.command.InstallFeatureCommand.doExecute(InstallFeatureCommand.java:62)[26:org.apache.karaf.features.command:2.2.5]
        at org.apache.karaf.features.command.FeaturesCommandSupport.doExecute(FeaturesCommandSupport.java:39)[26:org.apache.karaf.features.command:2.2.5]
        at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:38)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:35)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:474)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:400)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)[14:org.apache.karaf.shell.console:2.2.5]
        at org.apache.karaf.shell.console.jline.Console.run(Console.java:221)[14:org.apache.karaf.shell.console:2.2.5]
        at java.lang.Thread.run(Thread.java:662)[:1.6.0_30]
Caused by: org.osgi.framework.BundleException: Activator start error in bundle org.ops4j.pax.web.pax-web-extender-whiteboard [89].
        at org.apache.felix.framework.Felix.activateBundle(Felix.java:1889)[org.apache.felix.framework-3.0.9.jar:]
        at org.apache.felix.framework.Felix.startBundle(Felix.java:1759)[org.apache.felix.framework-3.0.9.jar:]
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:918)[org.apache.felix.framework-3.0.9.jar:]
        at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:905)[org.apache.felix.framework-3.0.9.jar:]
        at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:353)[16:org.apache.karaf.features.core:2.2.5]
        ... 15 more
Caused by: java.lang.IllegalStateException: Http context already used. Context params can be set only before first usage
        at org.ops4j.pax.web.service.internal.HttpServiceStarted.setContextParam(HttpServiceStarted.java:353)[69:org.ops4j.pax.web.pax-web-runtime:1.0.8]
        at org.ops4j.pax.web.service.internal.HttpServiceProxy.setContextParam(HttpServiceProxy.java:174)[69:org.ops4j.pax.web.pax-web-runtime:1.0.8]
        at org.ops4j.pax.web.extender.whiteboard.internal.WebApplication.registerHttpContext(WebApplication.java:190)[89:org.ops4j.pax.web.pax-web-extender-whiteboard:1.0.7]
        at org.ops4j.pax.web.extender.whiteboard.internal.WebApplication.setHttpContextMapping(WebApplication.java:157)[89:org.ops4j.pax.web.pax-web-extender-whiteboard:1.0.7]
        at org.ops4j.pax.web.extender.whiteboard.internal.ExtenderContext.getWebApplication(ExtenderContext.java:68)[89:org.ops4j.pax.web.pax-web-extender-whiteboard:1.0.7]
        at org.ops4j.pax.web.extender.whiteboard.internal.tracker.AbstractTracker.addingService(AbstractTracker.java:135)[89:org.ops4j.pax.web.pax-web-extender-whiteboard:1.0.7]
        at org.ops4j.pax.web.extender.whiteboard.internal.tracker.ListenerTracker.addingService(ListenerTracker.java:36)[89:org.ops4j.pax.web.pax-web-extender-whiteboard:1.0.7]
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:896)[karaf.jar:2.2.5]
        at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:261)[karaf.jar:2.2.5]
        at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:184)[karaf.jar:2.2.5]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:339)[karaf.jar:2.2.5]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:273)[karaf.jar:2.2.5]
        at org.ops4j.pax.web.extender.whiteboard.internal.Activator.trackListeners(Activator.java:202)[89:org.ops4j.pax.web.pax-web-extender-whiteboard:1.0.7]
        at org.ops4j.pax.web.extender.whiteboard.internal.Activator.start(Activator.java:81)[89:org.ops4j.pax.web.pax-web-extender-whiteboard:1.0.7]
        at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:629)[org.apache.felix.framework-3.0.9.jar:]
        at org.apache.felix.framework.Felix.activateBundle(Felix.java:1842)[org.apache.felix.framework-3.0.9.jar:]
        ... 19 more

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-08-21 06:34:13.441,,,no_permission,,Unknown,,,,,,,,,,,227055,,,Tue Aug 21 06:34:13 UTC 2012,,,,,,0|i0b7yn:,63402,,,,,,,,"08/Feb/12 09:04;chris@die-schneider.net;The problem is that CXF references pax web 1.0.7 while Karaf references pax web 1.0.8. The issue also only happens as we have the workaround feature
cxf-war-java5. Before the workaround it worked.","21/Aug/12 06:34;ffang;I believe CCE
 the java.lang.ClassCastException: org.ops4j.pax.web.service.internal.HttpServiceProxy cannot be cast to org.osgi.service.http.HttpService
is caused by when we  refresh pax-web bundles(pax-web-jsp, pax-web-runtime, pax-web-extender-whiteboard), the HttpSerivceTracker from pax-web-extender-whiteboard not get closed explicitly, so pax-web-runtime may use out-of-data HttpServiceTracker when publish HttpService, which cause this CCE. PAXWEB-412[1] tracked it.

Btw, this CCE is harmless but just annonying as pax-web-extender-whiteboard will find the HttpService anyway when init a new HttpServiceTracker after refresh.

[1]http://team.ops4j.org/browse/PAXWEB-412",,,,,,,,,,,,,,,,,,,,,,,,,
Class.getGenericSuperclass also needs to be checked by ProviderFactory,CXF-4088,12541449,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,06/Feb/12 17:23,23/Apr/12 16:45,14/Mar/19 02:29,07/Feb/12 10:34,,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,226736,,,2012-02-06 17:23:36.0,,,,,,0|i0b847:,63427,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Providers.getContextResolvers is only partially implemented ,CXF-4086,12541064,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,03/Feb/12 12:31,23/Apr/12 16:45,14/Mar/19 02:29,03/Feb/12 13:22,,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,"MediaType passed to 
http://jsr311.java.net/nonav/releases/1.1/javax/ws/rs/ext/Providers.html#getContextResolver(java.lang.Class,%20javax.ws.rs.core.MediaType)

is ignored.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,226416,,,2012-02-03 12:31:18.0,,,,,,0|i0b807:,63409,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong realm calculation for relying party applications deployed in root context,CXF-4082,12540918,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,owulff,christian.stettler,christian.stettler,02/Feb/12 13:11,23/Apr/12 16:50,14/Mar/19 02:29,03/Feb/12 15:56,,,,,,,,,,,,,,,,,,,,,,Services,,,,0,IDP,Plugin,Tomcat,,,"If the relying party application is deployed in the root context of Tomcat, the FederationAuthenticator is not able to correctly calculate the realm value used for the ""wtrealm"" request parameter of the IDP.

{code}
String requestUrl = request.getRequestURL().toString();
int ctxIn = requestUrl.indexOf(contextPath);
String realm = requestUrl.substring(0, ctxIn + contextPath.length() + 1);
{code}

The realm is wrongly calculated as ""h"":

https://localhost:9443/idp/?wa=wsignin1.0&wreply=http%3A%2F%2Flocalhost%3A8080%2Fsecure%2Ftest.html&wtrealm=h

Deploying the application in another context and adjusting the realm definition in RPClaims.xml helps.
","Tomcat 7.0.16
Fediz Tomcat Plugin 0.6-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,226271,,,2012-02-02 13:11:35.0,,,,,,0|i1agv3:,269198,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
http conduit: documentation references basicAuthSupplier but should be authSupplier,CXF-4080,12540693,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,achim_nierbeck,achim_nierbeck,01/Feb/12 09:02,23/Apr/12 16:50,14/Mar/19 02:29,03/Feb/12 10:06,2.4.1,2.5.1,,,,,,,,,,,,,,,,2.6,,,,,,,,0,,,,,,"The conduit element still supports the basicAuthSupplier (at least for the xml config) and documentation still points to it for configuring a AuthSupplier. 
Though this basicAuthSupplier doesn't work at all and always returns a 

{code}
NotWritablePropertyException: Invalid property 'basicAuthSupplier' 
{code}

Using the general authSupplier does work. So this is probably more an issue of documenting and removing the old stuff :)
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-01 09:59:31.89,,,no_permission,,Unknown,,,,,,,,,,,226088,,,Fri Feb 03 10:06:03 UTC 2012,,,,,,0|i0sucn:,166394,,,,,,,,"01/Feb/12 09:59;chris@die-schneider.net;Yes. I also think we should remove this xml element. The fact that this was discovered so late shows that not many people seem to have used this.
The new authSupplier element is much more flexible anyway.

So if there are no opposing voices I will remove the basAuthSupplier element and document the new way on the wiki.","01/Feb/12 14:48;dkulp;
That makes sense to me.   One less thing for me to expose in osgi config:admin as well.  :-)
",03/Feb/12 10:06;chris@die-schneider.net;Element removed and http configuration documentation updated,,,,,,,,,,,,,,,,,,,,,,,,
SecurityContextToken Identifier value not an absolute URI,CXF-4078,12540513,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,owulff,owulff,owulff,31/Jan/12 08:43,23/Apr/12 16:45,14/Mar/19 02:29,05/Mar/12 11:38,2.5.2,,,,,,,,,,,,,,,,,2.5.3,,,,Services,,,,0,,,,,,"The issued security context token contains an invalid value for the Identifier element:

<wsc:SecurityContextToken wsu:Id=""sctId-2AC71332E5480B287913279981488202"" xmlns:wsc=""http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
   <wsc:Identifier>2AC71332E5480B287913279981488201</wsc:Identifier>
</wsc:SecurityContextToken>

Add a property to the SCTProvider to configure the scheme of the URI. Default could be uuid:

   <wsc:Identifier>uuid:2AC71332E5480B287913279981488201</wsc:Identifier>
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-31 15:25:05.151,,,no_permission,,Unknown,,,,,,,,,,,225926,,,Tue Jan 31 15:25:05 UTC 2012,,,,,,0|i1agvb:,269199,,,,,,,,"31/Jan/12 15:25;coheigea;
Fixed the first problem in WSS4J (invalid value for Identifier):

URL: http://svn.apache.org/viewvc?rev=1238661&view=rev
Log:
Make SecurityContextToken Identifier be an absolute URI

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in PhaseInterceptorChain ,CXF-4072,12540141,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,allati,allati,27/Jan/12 15:34,23/Apr/12 16:45,14/Mar/19 02:29,02/Feb/12 11:26,2.5.2,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,,,,,0,,,,,,"NPE is thrown in PhaseInterceptorChain when fault is thrown in WS impl method:

java.lang.NullPointerException: null
 at org.apache.cxf.interceptor.FaultOutInterceptor.getFaultForClass(FaultOutInterceptor.java:163)
 at org.apache.cxf.interceptor.FaultOutInterceptor.handleMessage(FaultOutInterceptor.java:67)
 at org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor.handleMessage(WebFaultOutInterceptor.java:136)
 at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
 at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:107)
 at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:323)
 at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:123)
 at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:207)
 at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)
 at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:193)
 at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:126)
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)
 at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:108)
 <...>",,,,,,,,,,,,,,,,,30/Jan/12 13:23;allati;cxf.xml;https://issues.apache.org/jira/secure/attachment/12512413/cxf.xml,27/Jan/12 15:35;allati;full_processing_log.txt;https://issues.apache.org/jira/secure/attachment/12512181/full_processing_log.txt,30/Jan/12 13:23;allati;service.wsdl;https://issues.apache.org/jira/secure/attachment/12512414/service.wsdl,,,,,3.0,,,,,,,,,,,,,,,,,,,,2012-01-27 16:44:01.749,,,no_permission,,Unknown,,,,,,,,,,,225556,,,Wed Mar 28 21:26:02 UTC 2012,,,,,,0|i0b85b:,63432,,,,,,,,27/Jan/12 15:35;allati;Full message processing log,"27/Jan/12 16:44;ay;Hi Vadim,
Initially, I thought there seemed to be an issue.
But somehow I am not able to reproduce the problem. 
I would like to understand why an NPE is thrown from that line.

Do you have a test case that I can look at?

Thanks.
Regards, aki","28/Jan/12 10:04;allati;Hi, Aki. Thanks for the quick response.

{quote}Do you have a test case that I can look at?{quote}
Sadly, no. I was unable to reproduce the issue in my developer's environment. This issue is definitely related to the preproduction server and I have very limited and time restricted access to it.

Maybe I could put additional logging statements in the PhaseChainInterceptor or some other CXF classes to clarify the initial cause of the issue for you? In the mean time I'll try to stuff some recording software onto preproduction server (something like Omniscient Debugger or Chronon).","30/Jan/12 09:57;ay;Hi Vadim,

Something unexpected is likely to be occurring at the service setup that later leads to this problem. So, when we get to that interceptor during the interceptor processing, I think it is already too late. Therefore, it would be difficult in looking into the logging before knowing more about your scenario and the specific environment where this problem occurs.

Could you describe:
- how have you configured the scenario
- what is specific about the environment where this problem occurs (container, component versions, etc)
- does the problem occur sporadically there or always?

Thanks.
Regards, aki","30/Jan/12 13:22;allati;Hello!

{quote}How have you configured the scenario{quote}
CXFServlet configures itself according to cxf.xml. I'll attach config and stripped down public part of WSDL shortly.
	
{quote}What is specific about the environment where this problem occurs (container, component versions, etc){quote}

 - Info from WebLogic admin console
|WebLogic Version|WebLogic Server 10.3.2.0 Tue Oct 20 12:16:15 PDT 2009 1267925|
|Java Vendor|Hewlett-Packard Company|
|Java Version|1.6.0.12|
|OS Name|HP-UX|
|OS Version|B.11.31|

 - JRE identifies itself as ""Java HotSpot(TM) Server VM Version 20.1-b02-jre1.6.0.12-rc1b1 from ""Hewlett-Packard Company""""
 - CXF 2.5.2 (tried all 2.5.x releases as well)

{quote}Does the problem occur sporadically there or always?{quote}
Application redeployment within appserver hasn't affected the issue in any way and we can't restart preproduction server to check if it will solve the problem.

Regards,
Vadim",30/Jan/12 13:23;allati;CXF config and WSDL,"31/Jan/12 23:07;ay;Hi Vadim,
thanks for the scenario example.

I could reproduce the problem. When a body-less fault message is defined and this exception is thrown from a jaxws endpoint, it seems to lead to this erroneous situation. We will provide a patch for this problem shortly.

regards, aki","01/Feb/12 00:06;dkulp;As a note, this would be an invalid WSDL and likely should throw a fault.

According to the WSDL spec, section 3.6:

{code}
The fault message MUST have a single part. 
{code}

Thus, this is invalid as it does not have that single part.
","01/Feb/12 06:30;allati;Aki, Daniel, thank you very much for the help.

I suspected that body-less fault might be an error, but I was thrown off track by this scenario to be working in my environment. I'll fix my WSDL then.

Regards,
Vadim.","01/Feb/12 10:02;ay;Hi Dan,
Thanks for the information.

That means, we should detect this condition at the endpoint setup (or at code generation) and throw an exception?

I am not sure if there is another way to cause this condition.
In any case, we could also check this condition during the runtime and handle it as an error so that a SOAP fault is returned to the client. Currently, this NPE gets swallowed and an empty HTTP 200 response is returned. 

Regards, aki","01/Feb/12 16:04;ay;Hi Dan,
I thought about what I said.

I think we should check this condition only after an exception is thrown. In that way, we won't be influencing any scenarios that are working fine as long as no exception is thrown.

I will only make a change in FaultOutInterceptor to avoid this NPE so that a server fault is returned to the client by the default fault handling.

regards, aki","01/Feb/12 16:13;dkulp;
Aki, 

For 2.5.x (and earlier), that makes sense.   For 2.6, it might be good to also enforce at setup time.  In general, I prefer know up front when something isn't going to work.  :-)


","01/Feb/12 23:25;ay;Hi Dan,

I guarded against NPE and added the following warning text at setup for now.

  WARNUNG: Could not find a fault part for $faultqname. The fault message must have a single part.

We could add a throw-exception line for 2.6 here. But I was little concerned about enforcing this rule at setup. Some people might have some legacy WSDLs which are not in their control. 

regards, aki
","28/Mar/12 21:26;genjosanzo;Hi,

That would be a great piece of information. However i've been looking around for an example of a single part fault without any luck. Could you provide me one?

Thanks in advance
Alberto",,,,,,,,,,,,,
cxf-codegen-plugin : wsdlLocation option is not used when set in defaultOptions,CXF-4068,12540011,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,spydesk@gmail.com,spydesk@gmail.com,27/Jan/12 09:26,23/Apr/12 16:45,14/Mar/19 02:29,03/Feb/12 21:58,2.5.2,,,,,,,,,,,,,,,,,2.5.3,,,,Tooling,,,,0,cxf-codegen-plugin,maven,,,,"I'm generating Java classes from WSDL using Maven.

The plugin configuration in the pom.xml is the following :
{code:xml}
<plugin>
	<groupId>org.apache.cxf</groupId>
	<artifactId>cxf-codegen-plugin</artifactId>
	<version>2.5.2</version>
	<configuration>
		<defaultOptions>
			<wsdlLocation>http://test.url</wsdlLocation>
		</defaultOptions>
	</configuration>
	<executions>
		<execution>
			<id>generate-sources</id>
			<goals>
				<goal>wsdl2java</goal>
			</goals>
		</execution>
	</executions>
</plugin>
{code}

However, this configuration generates a wrong value for the attribute *wsdlLocation* of the *@WebServiceClient* annotation.

When I debugged the plugin execution, it appeared that the *wsdlLocation* argument was not added to the *wsdl2java* application.

It seems that the method *void merge(Option)* of the class *org.apache.cxf.maven_plugin.wsdl2java.Option* miss to merge the *wsdlLocation property* of the given Option object.","Apache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)
Maven home: C:\dev\apache-maven-3.0.3
Java version: 1.7.0_01, vendor: Oracle Corporation
Java home: C:\dev\jdk1.7.0_01\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows xp"", version: ""5.1"", arch: ""x86"", family: ""windows""",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-03 21:58:35.875,,,no_permission,,Novice,,,,,,,,,,,225514,,,Fri Feb 03 21:58:35 UTC 2012,,,,,,0|i0subr:,166390,,,,,,,,"03/Feb/12 21:58;dkulp;
Yep.   Missing a merge for that option.   Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS WebClient proxy sometimes fails to set Content-Type from @Consumes,CXF-4067,12539991,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,cdolan,cdolan,27/Jan/12 03:22,23/Apr/12 16:45,14/Mar/19 02:29,27/Jan/12 12:22,2.5,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,,,,,,"I have a JAX-RS interface called JobQueueEndpoint with a method like this:

    @POST
    @Path(""job/{queue}"")
    @Consumes(MediaType.TEXT_XML)
    @Produces({MediaType.TEXT_XML, MediaType.APPLICATION_JSON})
    JobIdentifierDTO submitJob(@PathParam(""queue"") String queueName, String jobXml);

I create a client for this API like so:

        JobQueueEndpoint resource = JAXRSClientFactory.create(jobQueueUrl, JobQueueEndpoint.class);

and invoke:

        resource.submitJob(""qFoo"", ""<job/>"");

But I get this:

Jan 26, 2012 8:09:23 PM org.apache.cxf.jaxrs.utils.JAXRSUtils findTargetMethod
WARNING: No operation matching request path ""/jobqueue/job/qFoo"" is found, Relative Path: /job/qFoo, HTTP Method: POST, ContentType: text/plain, Accept: text/xml,application/json,. Please enable FINE/TRACE log level for more details.

The problem is that the client is sending ""text/plain"" and the server is expecting ""text/xml"". I'm guessing that's because the jobXml argument is a String. It seems to me that the client should always use the @Consumes value unless explicitly told otherwise. Perhaps the method should be refactored to take a Document instead of a String, but this problem seems like a bug.

The other methods of this client work fine, so I believe it's not an environmental problem. I've tried to trace the code of WebClient, but I've gotten lost in its complexity...","Talend Service Factory 2.5.0.0 (Karaf 2.2.4, CXF 2.5.0)",,,,,,,,,,,,,,,,27/Jan/12 03:30;cdolan;JaxRsExampleTest.java;https://issues.apache.org/jira/secure/attachment/12512071/JaxRsExampleTest.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-01-27 09:28:16.041,,,no_permission,,Unknown,,,,,,,,,,,225494,,,Fri Jan 27 09:28:16 UTC 2012,,,,,,0|i0b7zb:,63405,,,,,,,,27/Jan/12 03:30;cdolan;A sample failing test case that shows the problem.,"27/Jan/12 09:28;sergey_beryozkin;Yes, I can see in the code it ignores Consumes in case of String, please try the workaround:
WebClient.client(proxy).header(""Content-Type"", ""text/xml"");
before the call",,,,,,,,,,,,,,,,,,,,,,,,,
"AbstractTransportFactory registers itself as extension, before being fully initialized",CXF-4066,12539924,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vsg,vsg,26/Jan/12 16:23,23/Apr/12 16:45,14/Mar/19 02:29,27/Jan/12 01:11,2.4.5,2.5.2,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,,,,,0,,,,,,"AbstractTransportFactory calls register() at the end of its constructor, to register itself as a DestinationFactory and/or as a ConduitInitiator. Classes that extend AbstractTransportFactory (e.g. HTTPTransportFactory), and which call super's constructor, have no way to properly initialize, before being exposed as an extension. Such classes must call super() constructor, before initializing their fields.

This could lead to concurrency issues, when such object is used as an extension, before being fully initialized. Here is a stack trace of such problem:

java.lang.NullPointerException
        at org.apache.cxf.transport.http.HTTPTransportFactory.getDestination(HTTPTransportFactory.java:261)
        at org.apache.cxf.binding.soap.SoapTransportFactory.getDestination(SoapTransportFactory.java:134)
        at org.apache.cxf.endpoint.ServerImpl.initDestination(ServerImpl.java:93)
        at org.apache.cxf.endpoint.ServerImpl.<init>(ServerImpl.java:72)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:158)
        at org.apache.cxf.dosgi.dsw.handlers.PojoConfigurationTypeHandler.createServer(PojoConfigurationTypeHandler.java:143)
        at org.apache.cxf.dosgi.dsw.hooks.ServiceHookUtils.createServer(ServiceHookUtils.java:86)
        at org.apache.cxf.dosgi.dsw.hooks.CxfPublishHook.createServer(CxfPublishHook.java:106)
        at org.apache.cxf.dosgi.dsw.hooks.CxfPublishHook.publishEndpoint(CxfPublishHook.java:80)
        at org.apache.cxf.dosgi.dsw.Activator$1.run(Activator.java:164)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)

Here, the HTTPTransportFactory.getDestination() method, implementing DestinationFactory interface, is called before HTTPTransportFactory's ""registry"" field is assigned by constructor.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,225427,,,Thu Jan 26 16:26:09 UTC 2012,,,,,,0|i0b82f:,63419,,,,,,,,"26/Jan/12 16:26;vsg;Known workaround:

For HTTPTransportFactory, we force its initialization, when bus is being initialized in our CXFBusFactory implementation, and before anyone uses the HTTPTransportFactory:

            DestinationFactoryManager mgr = bus.getExtension(DestinationFactoryManager.class);
            mgr.getDestinationFactory(""http://cxf.apache.org/transports/http"");
",,,,,,,,,,,,,,,,,,,,,,,,,,
Some of the characters in the URI path component are url-encoded  ,CXF-4061,12539692,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,24/Jan/12 23:13,23/Apr/12 16:45,14/Mar/19 02:29,24/Jan/12 23:34,,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,JAX-RS,,,,0,,,,,,"Some of the characters such as
"":@!$&'()*+,;=-._~"";

are too eagerly encoded.
Note '&' will need to be replaced with &amp; in WADL",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,225195,,,2012-01-24 23:13:51.0,,,,,,0|i0b86v:,63439,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"oneway camel scenario is accessing the user principal too late, resulting in IllegalStateException",CXF-4060,12539624,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,24/Jan/12 15:45,25/Jan/12 09:16,14/Mar/19 02:29,25/Jan/12 09:16,2.4.6,2.5.2,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,Transports,,,,0,,,,,,"Camel-CXF looks up the user principal in Camel's DefaultCxfBinding over CXF's SecurityContext object stored in the message.

In the current implementation, the principal in this object is dynamically retrieved from the associated servlet request object.

Under some specific circumstances such as using tomcat with the JVM's security manager enabled, the request object is recycled after the calling thread returns. This can lead to the following exception for oneway call:



java.lang.IllegalStateException: The request object has been recycled and is no longer associated with this facade
	at org.apache.catalina.connector.RequestFacade.getUserPrincipal(RequestFacade.java:831) ~[na:na]
	at org.apache.cxf.transport.http.AbstractHTTPDestination$2.getUserPrincipal(AbstractHTTPDestination.java:304) ~[bundlefile:2.5.1]
	at org.apache.camel.component.cxf.DefaultCxfBinding.populateExchangeFromCxfRequest(DefaultCxfBinding.java:235) ~[bundlefile:2.8.3]
	at org.apache.camel.component.cxf.CxfConsumer$1.perpareCamelExchange(CxfConsumer.java:159) ~[bundlefile:2.8.3]
	at org.apache.camel.component.cxf.CxfConsumer$1.syncInvoke(CxfConsumer.java:117) ~[bundlefile:2.8.3]
	at org.apache.camel.component.cxf.CxfConsumer$1.invoke(CxfConsumer.java:71) ~[bundlefile:2.8.3]
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58) ~[na:na]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441) ~[na:1.6.0_24]
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) ~[na:1.6.0_24]
	at java.util.concurrent.FutureTask.run(FutureTask.java:138) ~[na:1.6.0_24]
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37) ~[bundlefile:2.5.1]
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106) ~[na:na]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263) ~[bundlefile:2.5.1]
	at org.apache.cxf.phase.PhaseInterceptorChain.resume(PhaseInterceptorChain.java:232) ~[bundlefile:2.5.1]
	at org.apache.cxf.interceptor.OneWayProcessorInterceptor$1.run(OneWayProcessorInterceptor.java:130) ~[na:na]
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3.run(AutomaticWorkQueueImpl.java:371) ~[bundlefile:2.5.1]
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) ~[na:1.6.0_24]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) ~[na:1.6.0_24]
	at java.lang.Thread.run(Thread.java:662) ~[na:1.6.0_24]
",gemini.web.tomcat 2.0.1,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,225126,,,Wed Jan 25 09:16:22 UTC 2012,,,,,,0|i0b84f:,63428,,,,,,,,25/Jan/12 08:59;ay;change this fix to use reflection for 2.5.x and 2.4.x because of the servlet compatibility,"25/Jan/12 09:16;ay;saw the test error https://builds.apache.org/job/CXF-2.5.x/29/ and thought this ticket must be reopened to repair the error.

but it seems to be not the case, thereby closing it again.",,,,,,,,,,,,,,,,,,,,,,,,,
Echoed Addressing headers can cause client hangs and timeouts,CXF-4057,12539509,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,23/Jan/12 18:52,23/Apr/12 16:45,14/Mar/19 02:29,23/Jan/12 20:27,2.4.6,2.5.2,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,Core,,,,0,,,,,,"
Due to CXF-4056, addressing headers can be echoed back to the client when a fault is thrown.  The echoed headers will cause it to ""look"" like a partial response (no Relates-To) and thus the fault itself will not be detected.   The client will then wait for 60 seconds for a real response and then throw a timeout.   Fixing CXF-4056 prevents this with CXF->CXF, but would be good to have the client detect a fault anyway and throw it asap.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,225011,,,2012-01-23 18:52:33.0,,,,,,0|i0b89r:,63452,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Faults on server are echoing headers back to the client,CXF-4056,12539507,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,23/Jan/12 18:36,23/Apr/12 16:45,14/Mar/19 02:29,23/Jan/12 20:27,2.5.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,Soap Binding,,,,0,,,,,,"
The SoapHeaderOutFilterInterceptor that filters out the incoming headers is only installed on the Out chain.  It's not installed on the OutFault chain.  Thus, all the incoming headers are echoed back to the client which could result in WS-Addressing issues, security issues, etc...",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,225009,,,2012-01-23 18:36:09.0,,,,,,0|i0b85z:,63435,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parameter Handler not Invoked if Constructor or Static Methods Succeed,CXF-4055,12539504,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,hijon89,hijon89,23/Jan/12 17:24,23/Apr/12 16:45,14/Mar/19 02:29,25/Jan/12 13:19,2.5.1,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,2.6,JAX-RS,,,,0,injectionutils,jaxrs,parameterhandler,queryparam,,"My reading of InjectionUtils suggests that when performing type conversion, custom parameter handlers appear to be the last resort. If the object has a single-string constructor or a static valueOf/fromString method and any of these succeed, custom parameter handlers will not be invoked. 

This is causing issues in our application where users are able to define their own date formats and the string values are passed as query parameters. We implemented ParameterHandler<Date> and in the fromString body parse the string value according to the specific user's date format. But depending on the date format, the String constructor of java.util.Date may or may not throw an exception depending on the specific date format. If it does not succeed, our parameter handler is reached and all is well. But if it does ""succeed"" this date will be used by CXF and our parameter handler is never reached (This is a problem because even if the constructor doesn't throw an exception, the date is usually parsed incorrectly and represents the wrong date).",,10800,10800,,0%,10800,10800,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-25 13:19:39.051,,,no_permission,,Novice,,,,,,,,,,,225006,,,Wed Jan 25 13:19:39 UTC 2012,,,,,,0|i0b86n:,63438,,,,,,,,23/Jan/12 17:30;hijon89;At the very least I think an option should be added to the configuration that allows parameter handlers to override constructors/static methods.,"25/Jan/12 13:19;sergey_beryozkin;Handlers for Date & Locale will always be checked first, additionally a ""check.parameter.handlers.first"" contextual property can be set to true if some other types are processed",,,,,,,,,,,,,,,,,,,,,,,,,
Unclear error messages given if client policy configuration can't be found.,CXF-4054,12539501,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,gmazza,gmazza,gmazza,23/Jan/12 17:17,28/Aug/12 17:44,14/Mar/19 02:29,18/Jun/12 18:07,,,,,,,,,,,,,,,,,,2.6.2,2.7,,,,,,,0,,,,,,"Dennis has noted: http://cxf.547215.n5.nabble.com/Invalid-property-bus-of-bean-class-error-Spring-problem-tp5163771p5165056.html

With this tutorial: http://www.jroller.com/gmazza/entry/cxf_x509_profile_secpol, in particular, the WSC config file within it:

<beans xmlns=""http://www.springframework.org/schema/beans""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xmlns:jaxws=""http://cxf.apache.org/jaxws""
   xsi:schemaLocation=""http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
   http://cxf.apache.org/jaxws 
   http://cxf.apache.org/schemas/jaxws.xsd"">

   <jaxws:client name=""{http://www.example.org/contract/DoubleIt}DoubleItPort"" createdFromAPI=""true"">
      <jaxws:properties>
         <entry key=""ws-security.callback-handler"" value=""client.ClientKeystorePasswordCallback""/>        
         <entry key=""ws-security.encryption.properties"" value=""clientKeystore.properties""/>
         <entry key=""ws-security.signature.properties"" value=""clientKeystore.properties""/>
         <entry key=""ws-security.encryption.username"" value=""myservicekey""/>
      </jaxws:properties>
   </jaxws:client>

</beans>

Usage of an incorrect port name in the ""name"" attribute of the jaxws:client element gives unhelpful/confusing error messages.  

If the port name doesn't exist at all (e.g., ""{http://www.example.org/contract/DoubleIt}DoubleItXYZ""), the reader gets this error:

WARNING: Interceptor for {http://www.example.org/contract/DoubleIt}DoubleItService#{http://www.example.org/contract/DoubleIt}DoubleIt has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: No signature username found.
	at org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler.doSignBeforeEncrypt(AsymmetricBindingHandler.java:172)
	at org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler.handleBinding(AsymmetricBindingHandler.java:96)
	at org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal.handleMessage(PolicyBasedWSS4JOutInterceptor.java:164)
	at org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal.handleMessage(PolicyBasedWSS4JOutInterceptor.java:88)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:519)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:449)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:352)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:304)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:88)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)
	at $Proxy24.doubleIt(Unknown Source)
	at client.WSClient.doubleIt(WSClient.java:28)
	at client.WSClient.main(WSClient.java:21)

I'm not sure what should be done in this case -- because a non-matching port name like the above should indeed be ignored (as it could refer to another port in another WSDL), but perhaps a clearer error given that no configuration was provided for the client endpoint for the port being used.

If the service name was erroneously used instead of the port name, this error is given:

Exception in thread ""main"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name '{http://www.example.org/contract/DoubleIt}DoubleItService': Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'bus' of bean class [org.apache.cxf.service.ServiceImpl]: Bean property 'bus' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)

Here, an error message given that the port, and not the service name, should be referred to.

",,,,,,,,,,,,,,,,,16/Jun/12 18:10;gmazza;CXF4054.patch;https://issues.apache.org/jira/secure/attachment/12532307/CXF4054.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-06-18 11:01:47.082,,,no_permission,,Moderate,,,,,,,,,,,225003,,,Mon Jun 18 18:07:08 UTC 2012,,,,,,0|i05u4f:,31977,,,,,,,,16/Jun/12 18:10;gmazza;Potential solution.,"16/Jun/12 18:15;gmazza;The patch I just attached better separates, for this type of config file: https://github.com/gmazza/blog-samples/blob/master/cxf_x509_profile_secpol/client/src/main/resources/cxf.xml, the case where (1) the jaxws:client element was missing or otherwise not tied to the endpoint properly via its name attribute vs. (2) just a missing ws-security.signature.username or org.apache.ws.security.crypto.merlin.keystore.alias value.  Main concern I have is the message for (1):

+                policyNotAsserted(token, ""Security configuration could not be detected. ""
+                    + ""Potential cause: Make sure jaxws:client element with name "" 
+                    + ""attribute value matching endpoint port is defined as well as a "" 
+                    + SecurityConstants.SIGNATURE_PROPERTIES + "" element within it."");
+                return null;

I'm not sure how many other configuration elements besides jaxws:client this part of the error handling would be relavant for.  If it's just jaxws:client, the patch is probably good-to-go, else I may need to make the message more generic.","18/Jun/12 11:01;coheigea;
Looks fine to me...

Colm.","18/Jun/12 18:07;gmazza;Applied just to 2.6.x and 2.7.x branches (earlier branches were too substantively different to allow an easy merge.)
",,,,,,,,,,,,,,,,,,,,,,,
Crypto cache issues and the PolicyBasedWSS4JInInterceptor used as a singleton,CXF-4052,12539482,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,asoldano,asoldano,23/Jan/12 15:29,03/Oct/12 09:16,14/Mar/19 02:29,10/Feb/12 15:18,2.4.5,2.5.2,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,WS-* Components,,,,0,,,,,,"When using WS-Policy to setup WS-Security interceptors, the WSSecurityInterceptorProvider runs:
{code}
...
this.getInInterceptors().add(PolicyBasedWSS4JInInterceptor.INSTANCE);
this.getInFaultInterceptors().add(PolicyBasedWSS4JInInterceptor.INSTANCE);
...
{code}

which causes the same instance of PolicyBasedWSS4JInInterceptor to be added to any bus.
Unfortunately, the PolicyBasedWSS4JInInterceptor ends up extending org.apache.ws.security.handler.WSHandler which has a Map<String, Crypto> attribute. That is used whenever loading a Crypto instance and caches instances with keys basically given by the Merlin prop file name the user specified for the endpoint.
So, when having multiple deployments referencing properties files with the same name, the first crypto instance is always used.

If we want to keep the singleton approach on using the PolicyBasedWSS4JInInterceptor, we should probably at least use a different mechanism for creating keys so that prop files from different deployments are kept separate.","JBossWS-CXF integration, using Apache CXF 2.4.x",,,,,,,,,,,,CXF-4539,,,,07/Feb/12 19:41;coheigea;cxf-4052-2.patch;https://issues.apache.org/jira/secure/attachment/12513667/cxf-4052-2.patch,26/Jan/12 11:31;coheigea;cxf-4052.patch;https://issues.apache.org/jira/secure/attachment/12511972/cxf-4052.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-01-26 11:31:22.143,,,no_permission,,Unknown,,,,,,,,,,,224984,,,Fri Feb 10 16:58:20 UTC 2012,,,,,,0|i0b85j:,63433,,,,,,,,"26/Jan/12 11:31;coheigea;Hi Alessio,

See attached for a patch for this issue against trunk. If you could review it and test it, that'd be great.

The basic idea is to override the way Crypto objects are loaded and cached in WSHandler. When Crypto objects are loaded via a property filename, we use the full path of the file as the key of the cache, rather than just the filename.

Colm.","26/Jan/12 15:36;asoldano;Hi Colm,
thanks for having worked on this. Unfortunately, I think the patch is not enough to solve the issue. AFAICS, AbstractWSS4JInterceptor::loadCrypto(...) still first tries looking up the Crypto using the refId that comes from the requestData message context (""RefId-bob.properties"" in my case). I think that is set in PolicyBasedWSS4JInInterceptor::computeAction(...) when using WS-Policy.","06/Feb/12 18:03;asoldano;Colm, are you still on this? I can probably trying providing a patch on my own unless you're already working on this.","07/Feb/12 19:41;coheigea;
Here's a better attempt at solving this problem. The PolicyBasedWSS4JInInterceptor uses the URL of the Properties file as the cache key. No changes to WSS4J are required.

Colm.","10/Feb/12 10:55;asoldano;Hi Colm,
the patch is working, cool. I've merged it into 2.4.x branch to test it, let me know if you want me to commit or you're going ahead.
Thanks","10/Feb/12 14:33;coheigea;Hi Alessio,

I'll take care of the merge.

Colm.",10/Feb/12 16:58;asoldano;Added 2.6 fix version (as it's committed on trunk too),,,,,,,,,,,,,,,,,,,,
Custom OAuth scopes are not supported,CXF-4051,12539357,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,22/Jan/12 22:10,23/Apr/12 16:45,14/Mar/19 02:29,23/Jan/12 11:03,,,,,,,,,,,,,,,,,,2.5.3,2.6,,,JAX-RS,,,,0,,,,,,"Clients can include custom scopes (""x-oauth-scope"" in CXF (OAuth 1.0 extension), ""scope"" in OAuth 2.0).
This does not get passed via Authorization header, mainly due to the bug in the Google lib.
Another bug is that on the server side the custom form payload is assumed to be part of the OAuth payload. ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,224859,,,2012-01-22 22:10:56.0,,,,,,0|i0sue7:,166401,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong activator specified for CXF bundle ,CXF-4050,12539135,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,chris@die-schneider.net,amarkevich,amarkevich,20/Jan/12 13:45,25/Jan/12 09:42,14/Mar/19 02:29,20/Jan/12 13:59,2.5.2,,,,,,,,,,,,,,,,,,,,,Core,,,,0,,,,,,"Bundle-Activator: org.apache.cxf.bus.osgi.OSGiExtensionLocator
Actually this class is missing:
java.lang.Exception: Could not start bundle mvn:org.apache.cxf/cxf-bundle/2.5.2 in feature(s) cxf-2.5.2: The activator org.apache.cxf.bus.osgi.OSGiExtensionLocator for bundle org.apache.cxf.bundle is invalid
 at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:356)[16:org.apache.karaf.features.core:2.2.5]
 at org.apache.karaf.features.internal.FeaturesServiceImpl$1.run(FeaturesServiceImpl.java:978)[16:org.apache.karaf.features.core:2.2.5]
Caused by: org.osgi.framework.BundleException: The activator org.apache.cxf.bus.osgi.OSGiExtensionLocator for bundle org.apache.cxf.bundle is invalid
 at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:156)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:751)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:370)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:284)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:276)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.apache.karaf.features.internal.FeaturesServiceImpl.installFeatures(FeaturesServiceImpl.java:353)[16:org.apache.karaf.features.core:2.2.5]
 ... 1 more
Caused by: java.lang.ClassNotFoundException: org.apache.cxf.bus.osgi.OSGiExtensionLocator
 at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:506)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:422)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:410)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)[osgi-3.6.2.R36x_v20110210.jar:]
 at java.lang.ClassLoader.loadClass(ClassLoader.java:247)[:1.6.0_25]
 at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:338)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:232)[osgi-3.6.2.R36x_v20110210.jar:]
 at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:149)[osgi-3.6.2.R36x_v20110210.jar:]
 ... 6 more",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-20 13:46:59.549,,,no_permission,,Unknown,,,,,,,,,,,224637,,,Fri Jan 20 13:59:37 UTC 2012,,,,,,0|i0sxlb:,166919,,,,,,,,20/Jan/12 13:46;chris@die-schneider.net;After my refactoring of the OSGi startup the Activator class has changed to CXFActivator. In the backport I forgot to change this in the poms for the bundles.,20/Jan/12 13:59;chris@die-schneider.net;fix committed,,,,,,,,,,,,,,,,,,,,,,,,,
BusFactory does not catch NoClassDefFoundError,CXF-4045,12538962,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,19/Jan/12 13:21,07/Feb/12 21:50,14/Mar/19 02:29,19/Jan/12 13:34,,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,2.6,Core,,,,0,,,,,,"BusFactory only catches ClassNotFoundException, NoClassDefFoundError is also possible in OSGI",OSGI,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,224464,,,2012-01-19 13:21:54.0,,,,,,0|i0b81b:,63414,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ensure publishedEndpointUrl property could be set to endpoint,CXF-4044,12538921,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,19/Jan/12 04:45,07/Feb/12 21:50,14/Mar/19 02:29,19/Jan/12 05:37,,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,2.6,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,224424,,,Thu Jan 19 05:37:48 UTC 2012,,,,,,0|i0b81r:,63416,,,,,,,,"19/Jan/12 05:37;ffang;commit fix
http://svn.apache.org/viewvc?rev=1233171&view=rev for trunk
http://svn.apache.org/viewvc?rev=1233178&view=rev for 2.5.x branch
http://svn.apache.org/viewvc?rev=1233179&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1233186&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
JSONProvider can not get a custom prefix set for a collection wrapper element,CXF-4043,12538895,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,18/Jan/12 23:17,07/Feb/12 21:50,14/Mar/19 02:29,18/Jan/12 23:22,,,,,,,,,,,,,,,,,,2.4.6,2.5.2,2.6,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,224398,,,2012-01-18 23:17:49.0,,,,,,0|i0b88v:,63448,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When generating schema/wsdl, schemaLocations provided via @XmlSchema are dropped",CXF-4042,12538866,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,18/Jan/12 19:14,07/Feb/12 21:50,14/Mar/19 02:29,18/Jan/12 19:46,,,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,JAXB Databinding,,,,0,,,,,,"
When JAXB generates schemas, it creates internal schemaLocations for the imports.   When we inline the schemas, we remove the schemaLocations.  However, locations that are specified via @XmlSchema attributes should be retained.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,224369,,,2012-01-18 19:14:59.0,,,,,,0|i0b86f:,63437,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem creating dynamic client when WSDL is hosted with secured transport (https),CXF-4037,12538642,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,hdevireddy,hdevireddy,17/Jan/12 15:38,07/Feb/12 21:50,14/Mar/19 02:29,17/Jan/12 21:54,2.4.2,2.4.3,2.4.5,,,,,,,,,,,,,,,2.4.6,2.5.2,,,JAX-WS Runtime,,,,0,,,,,,"I am trying to call a create a client dynamically to invoke the WebService(see below). Notice my WSDL URL is https. 
Also, with a minor modification(to add the spring config file to the bus) to the client generated using the wsdl2java utility I am able to call the secured webservice. 
But my requirement is to dynamically generate clients and call the webservice provided the wsdlUrl, method name and method arguments.

CLIENT CODE
------------
{code}
SpringBusFactory bf = new SpringBusFactory();

bus = bf.createBus(securityConfigFile);

BusFactory.setDefaultBus(bus);

 

JaxWsDynamicClientFactory dcf = JaxWsDynamicClientFactory.newInstance(bus);

dcf.setSimpleBindingEnabled(false);

List<String> bindingFiles = new ArrayList<String>();

File bindingFile = generateCustomBindingFile(fileLocationURL);

try {

bindingFiles.add(bindingFile.getCanonicalPath().toString());

} catch (IOException e) {

throw new LVOException(Level.SEVERE, ""WSDL_INVALID_BINDINGFILE"",

bindingFile.toString());

}

Client client = dcf.createClient(new URL(https://localhost:9999/getAccount?wsdl), bindingFiles);
{code}
 

 
EXCEPTION
----------
 

I get the below Exception while trying to create the client. 

 
{code}
log4j:WARN No appenders could be found for logger (org.apache.cxf.bus.spring.BusApplicationContext).

log4j:WARN Please initialize the log4j system properly.

Jan 14, 2012 4:44:59 PM org.apache.cxf.bus.spring.BusApplicationContext getConfigResources

INFO: Loaded configuration file ./test/resources/wsdl/WibbleClient.xml.

Exception in thread ""main"" org.apache.cxf.service.factory.ServiceConstructionException: Failed to create service.

at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:80)

at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:261)

at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:235)

at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:170)

at com.convergys.lvo.integration.wsdl.WSDLDataModelerImpl.generateClient(WSDLDataModelerImpl.java:82)

at com.convergys.lvo.integration.WebServiceDataModeler.getServiceClient(WebServiceDataModeler.java:414)

at com.convergys.lvo.integration.wsdl.WSDLDataModelerImpl.getEntityData(WSDLDataModelerImpl.java:139)

at com.convergys.lvo.integration.wsdl.WSDLDataModelerImpl.main(WSDLDataModelerImpl.java:302)

Caused by: javax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: Problem parsing 'https://localhost:9999/getCustomer?wsdl'.: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target

at com.ibm.wsdl.xml.WSDLReaderImpl.getDocument(WSDLReaderImpl.java:2111)

at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(WSDLReaderImpl.java:2303)

at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(WSDLReaderImpl.java:2335)

at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:239)

at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:186)

at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:78)

... 7 more

Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target

at com.sun.net.ssl.internal.ssl.Alerts.getSSLException(Alerts.java:174)

at com.sun.net.ssl.internal.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1611)

at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:187)

at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:181)

at com.sun.net.ssl.internal.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1035)

at com.sun.net.ssl.internal.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:124)

at com.sun.net.ssl.internal.ssl.Handshaker.processLoop(Handshaker.java:516)

at com.sun.net.ssl.internal.ssl.Handshaker.process_record(Handshaker.java:454)

at com.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:884)

at com.sun.net.ssl.internal.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1112)

at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1139)

at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1123)

at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:418)

at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:166)

at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1041)

at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:234)

at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:677)

at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:186)

at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:771)

at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)

at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)

at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:225)

at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)

at com.ibm.wsdl.xml.WSDLReaderImpl.getDocument(WSDLReaderImpl.java:2101)

... 12 more

Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target

at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:285)

at sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:191)

at sun.security.validator.Validator.validate(Validator.java:218)

at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:126)

at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:209)

at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:249)

at com.sun.net.ssl.internal.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1014)

... 31 more

Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target

at sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:174)

at java.security.cert.CertPathBuilder.build(CertPathBuilder.java:238)

at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:280)

... 37 more
{code}
 

 
SPRING CONFIG FILE
------------------

Below is my spring config file for my client.
{code:xml}
 

<beans xmlns=""http://www.springframework.org/schema/beans""

xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""

xmlns:sec=""http://cxf.apache.org/configuration/security""

xmlns:http=""http://cxf.apache.org/transports/http/configuration""

xsi:schemaLocation=""

http://cxf.apache.org/configuration/security

http://cxf.apache.org/schemas/configuration/security.xsd

http://cxf.apache.org/transports/http/configuration

http://cxf.apache.org/schemas/configuration/http-conf.xsd

http://www.springframework.org/schema/beans

http://www.springframework.org/schema/beans/spring-beans.xsd"">


<http:conduit name=""{http://www.example.org/AWC/}AWCSOAP.http-conduit"">

<http:tlsClientParameters disableCNCheck=""true"">

<sec:trustManagers>

<sec:keyStore type=""JKS"" password=""password""

file=""test/resources/wsdl/truststore.jks""/>

</sec:trustManagers>

<sec:keyManagers keyPassword=""password"">

<sec:keyStore type=""JKS"" password=""password"" 

file=""test/resources/wsdl/wibble.jks""/>

</sec:keyManagers>

<sec:cipherSuitesFilter>

<!-- these filters ensure that a ciphersuite with

export-suitable or null encryption is used,

but exclude anonymous Diffie-Hellman key change as

this is vulnerable to man-in-the-middle attacks -->

<sec:include>.*_EXPORT_.*</sec:include>

<sec:include>.*_EXPORT1024_.*</sec:include>

<sec:include>.*_WITH_DES_.*</sec:include>

<sec:include>.*_WITH_NULL_.*</sec:include>

<sec:exclude>.*_DH_anon_.*</sec:exclude>

</sec:cipherSuitesFilter>

</http:tlsClientParameters>

<http:authorization>

<sec:UserName>admin</sec:UserName>

<sec:Password>admin</sec:Password>

</http:authorization>

</http:conduit>

</beans> 
{code}

 

Really appreciate your comments and feedback.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-17 15:57:42.143,,,no_permission,,Unknown,,,,,,,,,,,224145,,,Wed Jan 18 22:23:49 UTC 2012,,,,,,0|i0b87r:,63443,,,,,,,,"17/Jan/12 15:57;dkulp;
The issue can likely be resolved by adjusting the line:

{code}
<http:conduit name=""{http://www.example.org/AWC/}AWCSOAP.http-conduit"">
{code}

to be something like:
{code}
<http:conduit name=""http://localhost.*"">
{code}

or similar.    Basically, there isn't a portname or anything during the process of retrieving the wsdl as that is defined in the WSDL.  Thus, you need to configure the conduit based on a URL regex so that the WSDL downloading can associate the proper conduit settings.

","17/Jan/12 16:37;hdevireddy;Thanks Daniel for the prompt response. That chnage you suggested makes sense and seems to work partially. It works when I remove the schema import from my wsdl and have it inline in the wsdl itself. But when I have the schema(xsd) in a seperate file and import it as part of the WSDL then I get the below security exception.

og4j:WARN No appenders could be found for logger (org.apache.cxf.bus.spring.BusApplicationContext).
log4j:WARN Please initialize the log4j system properly.
Jan 17, 2012 11:28:31 AM org.apache.cxf.bus.spring.BusApplicationContext getConfigResources
INFO: Loaded configuration file ./test/resources/wsdl/WibbleClient.xml.
Exception in thread ""main"" java.lang.RuntimeException: Error compiling schema from WSDL at {https://localhost:9999/getCustomer?wsdl}: 
IOException thrown when processing ""https://localhost:9999/getCustomer?xsd=AWC.xsd"". Exception: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target.

	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory$InnerErrorListener.throwException(DynamicClientFactory.java:586)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:288)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:237)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:172)
	at com.convergys.lvo.integration.wsdl.WSDLDataModelerImpl.generateClient(WSDLDataModelerImpl.java:82)
	at com.convergys.lvo.integration.WebServiceDataModeler.getServiceClient(WebServiceDataModeler.java:414)
	at com.convergys.lvo.integration.wsdl.WSDLDataModelerImpl.getEntityData(WSDLDataModelerImpl.java:139)
	at com.convergys.lvo.integration.wsdl.WSDLDataModelerImpl.main(WSDLDataModelerImpl.java:302)
Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at com.sun.tools.xjc.ErrorReceiver.error(ErrorReceiver.java:90)
	at com.sun.tools.xjc.reader.internalizer.DOMForest.parse(DOMForest.java:401)
	at com.sun.tools.xjc.reader.internalizer.DOMForest.parse(DOMForest.java:300)
	at com.sun.tools.xjc.reader.internalizer.AbstractReferenceFinderImpl.startElement(AbstractReferenceFinderImpl.java:110)
	at org.xml.sax.helpers.XMLFilterImpl.startElement(XMLFilterImpl.java:527)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:239)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:276)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:245)
	at com.sun.xml.bind.unmarshaller.DOMScanner.scan(DOMScanner.java:122)
	at com.sun.tools.xjc.api.impl.s2j.SchemaCompilerImpl.parseSchema(SchemaCompilerImpl.java:135)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.cxf.common.util.ReflectionInvokationHandler.invoke(ReflectionInvokationHandler.java:52)
	at $Proxy23.parseSchema(Unknown Source)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.addSchemas(DynamicClientFactory.java:439)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:284)
	... 6 more
Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at com.sun.net.ssl.internal.ssl.Alerts.getSSLException(Alerts.java:174)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1611)
	at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:187)
	at com.sun.net.ssl.internal.ssl.Handshaker.fatalSE(Handshaker.java:181)
	at com.sun.net.ssl.internal.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1035)
	at com.sun.net.ssl.internal.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:124)
	at com.sun.net.ssl.internal.ssl.Handshaker.processLoop(Handshaker.java:516)
	at com.sun.net.ssl.internal.ssl.Handshaker.process_record(Handshaker.java:454)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:884)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1112)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1139)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1123)
	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:418)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:166)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1041)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:234)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:677)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:186)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:771)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)
	at com.sun.tools.xjc.reader.internalizer.DOMForest.parse(DOMForest.java:393)
	... 22 more
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:285)
	at sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:191)
	at sun.security.validator.Validator.validate(Validator.java:218)
	at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:126)
	at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:209)
	at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:249)
	at com.sun.net.ssl.internal.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1014)
	... 41 more
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:174)
	at java.security.cert.CertPathBuilder.build(CertPathBuilder.java:238)
	at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:280)
	... 47 more
","17/Jan/12 21:54;dkulp;
The DynamicClient wasn't using the already preloaded schemas and was instead trying to redownload them.  I've updated it to attempt to reuse the schemas we already gathered.   I'd appreciate it if you could try testing with tonights snapshots.",18/Jan/12 22:23;hdevireddy;Really appreciate your prompt responses and quick turnaround. I tested with 2.4.6-SNAPSHOT and it works fine. Please let me know if you are aware of the release date for 2.4.6. Thanks Daniel.,,,,,,,,,,,,,,,,,,,,,,,
JAXBContextInitializer ignores some javax.xml.bind Annotations,CXF-4036,12538630,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ferbas,ferbas,17/Jan/12 13:47,07/Feb/12 21:51,14/Mar/19 02:29,17/Jan/12 18:22,2.4.3,2.5.1,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,JAXB Databinding,,,,0,,,,,,"{{org.apache.cxf.jaxb.JAXBContextInitializer}} ignores {{@XmlTransient}} and {{@XmlJavaTypeAdapter}} at some locations. This can lead to fatal exceptions because it tries to analyze (add) classes that are not intended to be xml-marshalled.

{{@XmlTransient}} is ignored if placed on a setter (when using {{@XmlAccessorType(XmlAccessType.PUBLIC_MEMBER))}}. Jaxb (tested with jdk 1.6.0_18) honors this no matter if placed on getter or setter of the property.
The problem could be in {{org.apache.cxf.jaxb.JAXBContextInitializer.isMethodAccepted(Method, XmlAccessType)}} where a getter is accepted even if its setter has {{@XmlTransient}}. As a workaround the annotation has to be placed on the getter.

{{@XmlJavaTypeAdapter}} is ignored if placed on class level (that again is OK for Jaxb). 
The problem could be in {{org.apache.cxf.jaxb.JAXBContextInitializer.addClass(Class<?>)}} where the @XmlJavaTypeAdapter annotation is checked only if the class is an interface, but not otherwise (especially the superclass is added w.o. checking if there is a typeadapter to use). 
As a workaround the annotation can be placed on the using field/property of the type. But obviously this leads to duplication if the class with adapter is used more than once.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-17 18:22:28.761,,,no_permission,,Unknown,,,,,,,,,,,224133,,,Tue Jan 17 18:22:28 UTC 2012,,,,,,0|i0b87z:,63444,,,,,,,,"17/Jan/12 18:22;dkulp;
Major thanks for that analysis and suggestions.",,,,,,,,,,,,,,,,,,,,,,,,,,
Allow SecurityConstants.SIGNATURE_CRYPTO and ENCRYPT_CRYPTO to be used on processing side,CXF-4034,12538621,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,17/Jan/12 11:51,23/Apr/12 16:45,14/Mar/19 02:29,17/Feb/12 17:31,2.4.5,2.5.1,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,,,,,0,,,,,,This task is to allow SecurityConstants.SIGNATURE_CRYPTO and ENCRYPT_CRYPTO to be used on processing side. They only work currently on the outbound side.,,,,,,,,,,,,,,,,,17/Jan/12 11:51;coheigea;sig-crypto.patch;https://issues.apache.org/jira/secure/attachment/12510831/sig-crypto.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,Blocked on External,,,,,,no_permission,,Unknown,,,,,,,,,,,224124,,,Tue Jan 17 11:51:42 UTC 2012,,,,,,0|i0b6wf:,63230,,,,,,,,"17/Jan/12 11:51;coheigea;
A patch for this issue. It depends on a fix in WSS4J 1.6.5.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,
NullPoint Exception Raised when input is nothing  and using Holder to return response,CXF-4031,12538478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ext2xhb,ext2xhb,16/Jan/12 06:48,07/Feb/12 21:51,14/Mar/19 02:29,17/Jan/12 18:21,2.5.1,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,,Core,,,,0,,,,,,"for a wsdl's operation, if input message is nothing, but output message has multipart; the jax-ws operation will using  Holder to return result;
the HolderInInterceptor will raise NullPointerException because input (soap:body) is empty;",,,,,,,,,,,,,,,,,16/Jan/12 06:54;ext2xhb;test_cxf_2_5_1.zip;https://issues.apache.org/jira/secure/attachment/12510671/test_cxf_2_5_1.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-01-17 18:21:44.826,,,no_permission,,Unknown,,,,,,,,,,,223982,,,Wed Jan 18 09:12:24 UTC 2012,,,,,,0|i0b87j:,63442,,,,,,,,"16/Jan/12 06:54;ext2xhb;org\apache\camel\component\cxf\anyxml\testMultiResponse is a unit test which failed;

Maybe: 
The HolderInInterceptor should check and create a new MessageContentsList when input is null;
","16/Jan/12 07:24;ext2xhb;In patch I carelessly write the test Unit's ClassName as (testMultiResponse), please makesure the first character is upper case (""TestMultiResponse"") if run the test outside eclipse; 
","17/Jan/12 18:21;dkulp;
Updated HolderInInterceptor to create the list if needed.   Would appreciate it if you could test more with tonights snapshots.","18/Jan/12 09:12;ext2xhb;I just tried it with the latest trunk source code of CXF (2.6.0-snapshot), it works well; 
Thanks your help",,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin doesn't generate any code code when the wsdl parameter is an url,CXF-4029,12538316,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,svenrienstra,svenrienstra,13/Jan/12 13:21,07/Feb/12 21:50,14/Mar/19 02:29,17/Jan/12 18:23,2.5.1,,,,,,,,,,,,,,,,,2.5.2,,,,,,,,0,,,,,,"The maven cxf-codegen-plugin doesn't generate any code when the wsdl parameter is an url. This bug seems to be introduced in 2.5.1, 2.5.0 is working ok.

Output in 2.5.1 (Nothing is generated):
{code}
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building example
[INFO]    task-segment: [generate-sources]
[INFO] ------------------------------------------------------------------------
[INFO] [cxf-codegen:wsdl2java {execution: generate-sources}]
[INFO] Nothing to generate
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Fri Jan 13 14:12:34 CET 2012
[INFO] Final Memory: 19M/169M
[INFO] --------------------------------------------------------------------

Output in 2.5.0 (code is generated ok):
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building example
[INFO]    task-segment: [generate-sources]
[INFO] ------------------------------------------------------------------------
[INFO] [cxf-codegen:wsdl2java {execution: generate-sources}]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 5 seconds
[INFO] Finished at: Fri Jan 13 14:15:14 CET 2012
[INFO] Final Memory: 26M/171M
[INFO] -------------------------------------------------------------------
{code}

Pom:

{code:xml}
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<artifactId>cxf</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>example</name>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-codegen-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>generate-sources</id>
						<phase>generate-sources</phase>
						<configuration>
							<sourceRoot>${basedir}/src/main/generated/</sourceRoot>
							<wsdlOptions>
								<wsdlOption>
									<wsdl>http://www.webservicex.net/CurrencyConvertor.asmx?WSDL</wsdl>
								</wsdlOption>
							</wsdlOptions>
						</configuration>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
{code}
",,,,,,,,,,,,,CXF-3964,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-13 15:22:40.275,,,no_permission,,Unknown,,,,,,,,,,,223822,,,Tue Jan 17 18:23:18 UTC 2012,,,,,,0|i0suf3:,166405,,,,,,,,"13/Jan/12 15:22;bmargulies;this is a duplicate of another JIRA and it is indeed a real bug. I'll mark the duplication soon.

","13/Jan/12 15:26;bmargulies;It turns out that the other report consists of comments attached to the JIRA I was working on when I caused this problem. I've linked to it, there's a test case attached.","17/Jan/12 18:23;dkulp;
Verified that only ""File"" wsdl locations were left in the effective list of wsdl's to process.  ",,,,,,,,,,,,,,,,,,,,,,,,
X509TokenValidator uses signature-crypto-provider instead of encryption-crypto-provider,CXF-4028,12538203,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,jan4talend,jan4talend,12/Jan/12 15:01,10/Apr/17 19:04,14/Mar/19 02:29,28/Mar/17 07:09,2.5,,,,,,,,,,,,,,,,,3.1.11,3.2.0,,,WS-* Components,,,,0,,,,,,"I found a bug in X509TokenValidator class.

There are two crypto handler which can be configured:
<entry key=""ws-security.signature.crypto"" value-ref=""...""/>
<entry key=""ws-security.encryption.crypto"" value-ref=""...""/>

ws-security.signature.crypto is for my own signature, when sending messages, and to decrypt messages, which have been send to me. (here is my private key)
ws-security.encryption.crypto is for encrypting messages before sending and validating of signatures in received messages. (here are all my trusted public keys/CAs)

In X509TokenValidator the signature crypto provider is used to validate a received message signature. But instead the encryption provider should be used! See line 101 in X509TokenValidator.java:
Crypto sigCrypto = stsProperties.getSignatureCrypto();

There might be other sections which needs to be updated as well...

Best regards
Jan

See post on the mailinglist regarding this topic also:
http://cxf.547215.n5.nabble.com/X509TokenValidator-td5139681.html",,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,223709,,,2012-01-12 15:01:49.0,,,,,,0|i0sxlj:,166920,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis BeanType does not ignore super type of java.lang.Enum,CXF-4027,12538183,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mrpotes,mrpotes,12/Jan/12 12:09,07/Feb/12 21:50,14/Mar/19 02:29,17/Jan/12 18:20,2.5.1,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,,Aegis Databinding,,,,0,,,,,,"When using aegis combined with a mapping file on an enum type, aegis ends up trying to create a type for java.lang.Enum, and falls over with an NPE in the process.

It seems to me that when getting the super type in BeanType.getSuperType(), there are some other classes that should be excluded (line 584), java.lang.Enum and java.io.Serializable (the latter may be the super type if the current type is an interface that extends it).",,,,,,,,,,,,,,,,,13/Jan/12 17:15;mrpotes;CXF-4027.patch;https://issues.apache.org/jira/secure/attachment/12510500/CXF-4027.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-01-12 14:09:34.629,,,no_permission,,Unknown,,,,,,,,,,,223689,,,Tue Jan 17 18:20:35 UTC 2012,,,,,,0|i0b813:,63413,,,,,,,,"12/Jan/12 14:09;bmargulies;Please consider yourself encouraged to submit a patch. If you need help, let me know. If you're not so inclined, someone will get around to this presently.
","12/Jan/12 14:17;mrpotes;Hi Benson,

I thought about it :)

The reason I didn't was I started to wonder whether in fact all super types that are in either package java.lang or java.io should be excluded? I thought I'd better leave that sort of decision to someone that knows a bit more.",13/Jan/12 15:23;bmargulies;I'd just do enum. I think that the full packages contain a mixture of good things and bad things in this regard.,"13/Jan/12 15:43;mrpotes;Yeah, I wasn't happy about full packages. How about doing Enum, Serializable and Cloneable? The former as the superclass for enum classes, the latter two because they're often used and likely to be extended by many interfaces.

The particular problem I'm facing with Serializable is that we have all our interfaces extending it (so that resultant implementations are serializable), so we get a namespace, http://io.java with a single type, tns:Serializable, in it, because of the first if statement in BeanType.getSuperType().","13/Jan/12 16:21;bmargulies;Yes, that makes sense.",13/Jan/12 17:15;mrpotes;Patch attached.,17/Jan/12 18:20;dkulp;Patch applied,,,,,,,,,,,,,,,,,,,,
invalid ProtocolVariant causes NullPointerException in RMSoapInterceptor,CXF-4023,12538040,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,m_hess,m_hess,11/Jan/12 11:58,23/Apr/12 16:45,14/Mar/19 02:29,17/Feb/12 15:15,2.5.1,,,,,,,,,,,,,,,,,2.5.3,2.6,,,WS-* Components,,,,0,,,,,,"If a WS-RM request contains a mixture of Protocol Variants (for WS-A and WS-RM) that is unknown to org.apache.cxf.ws.rm.ProtocolVariation, the following NPE is raised. 

Interceptor for {http://ws.ra.bsg.oslee.orga.com/}ReloadAccountService#{http://ws.ra.bsg.oslee.orga.com/}ReloadAccount has thrown exception, unwinding now
java.lang.NullPointerException
	at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.decodeHeaders(RMSoapInterceptor.java:286)
	at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.unmarshalRMProperties(RMSoapInterceptor.java:249)
	at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.decode(RMSoapInterceptor.java:234)
	at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.mediate(RMSoapInterceptor.java:136)
	at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.handleMessage(RMSoapInterceptor.java:124)
	at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.handleMessage(RMSoapInterceptor.java:86)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:123)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:323)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:289)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:943)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:879)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)
	at org.eclipse.jetty.server.Server.handle(Server.java:345)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:441)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.content(HttpConnection.java:936)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:801)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:224)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:51)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:586)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:44)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:598)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:533)
	at java.lang.Thread.run(Thread.java:662)

This can probably be handled more gracefully?","Windows XP
java version ""1.6.0_26""
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)
Java HotSpot(TM) Client VM (build 20.1-b02, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-16 20:06:26.059,,,no_permission,,Unknown,,,,,,,,,,,223546,,,Fri Feb 17 14:48:05 UTC 2012,,,,,,0|i0subj:,166389,,,,,,,,"16/Feb/12 20:06;ay;Hi Michael,

We will be fixing the code so that no NPE will be thrown under this condition.
But we would like to know if there is a combination of namespace usage which you expect CXF to support. 

We don't think that it makes sense to support an arbitrary combination. However, if some existing implementation generates a message having a particular combination that is not currently supported by CXF, we will consider supporting that combination.

Let us know.
Thanks.

Regards, Aki","16/Feb/12 22:07;m_hess;Hi Aki,

thanks for getting back to this.

I am by no means an expert on WS-RM and the namespaces involved. I am pretty sure you have far more smarter people then me on the team, that can make a better statement on what needs to be supported. As far as I am concerned, the combinations that I came across are all covered by CXF already.

In fact my issue is more about the NPE itself. I just wanted to point out, that it somewhat derailed me, and forced me to inspect the code to understand where my mistake was. I think that CXF could have supported me a bit more in that regard, as it technically already knew that I was using a wrong mixture of namespaces. It simply was (or still is) unable to tell me what it thinks is wrong.

So if you change the code so that the log gives a more reasonable explanaition of what went wrong (i.e.invalid mixture of namespaces), then I would consider this fixed.

Let me know if I can give you any additional info on this.","17/Feb/12 14:48;ay;Hi Michael,

thanks for the update. That's a good news.

I just submitted a fix for this NPE issue in trunk and 2.5.3-SNAPSHOT so that the RMException with the message regarding the wrong namespace usage will be reported in this case.

regards, aki

",,,,,,,,,,,,,,,,,,,,,,,,
wsdl2js creates code which when run causes error: 'returnObject' is undefined,CXF-4019,12537960,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ixeldog,ixeldog,10/Jan/12 20:24,09/Apr/13 15:15,14/Mar/19 02:29,07/Mar/13 19:22,2.5.1,,,,,,,,,,,,,,,,,2.5.10,2.6.7,2.7.4,,JavaScript Client,,,,0,,,,,,"I run wsdl2js.bat from cxf 2.5.1 against my wsdl and xsd and it executes correctly without error. When I try and use the javascript code generated I get the error: 'returnObject' is undefined. The specific function that failed was webservices__GetFacilitiesResponse_deserializeResponse().

When I run wsdl2js.bat from cxf 2.4.3 I get a null pointer exception (https://issues.apache.org/jira/browse/CXF-3891), but once I ""fixed"" that and was able to get wsdl2js.bat to run without error that code was usable without error or exception.",Windows 7 64-bit,,,,,,,,,,,,,,,,10/Jan/12 20:25;ixeldog;OnTrack.wsdl;https://issues.apache.org/jira/secure/attachment/12510091/OnTrack.wsdl,10/Jan/12 20:25;ixeldog;OnTrack.xsd;https://issues.apache.org/jira/secure/attachment/12510092/OnTrack.xsd,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,223466,,,2012-01-10 20:24:53.0,,,,,,0|i1aghr:,269138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS Providers created from class (instead of an actual instance bean) do not get the JAXWSMethodInvoker,CXF-4018,12537934,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,10/Jan/12 18:03,07/Feb/12 21:50,14/Mar/19 02:29,10/Jan/12 18:38,,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,,JAX-WS Runtime,,,,0,,,,,,"If using the JaxWsServerFactoryBean to create a server, if you call setServiceClass to set the class, but don't provide a concrete bean, it creates a basic FactoryInvoker, not the JAXWSMethodInvoker.   If you provide a bean, the proper JAXWSMethodInvoker is created.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,223440,,,2012-01-10 18:03:43.0,,,,,,0|i0b887:,63445,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SchemaCollection.addCrossImports handles only XmlSchemaSequence instead of all XmlSchemaGroupParticle,CXF-4017,12537880,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,benoitl,benoitl,10/Jan/12 10:11,07/Feb/12 21:50,14/Mar/19 02:29,13/Jan/12 21:26,2.4.4,,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,JAXB Databinding,,,,0,,,,,,"This issues seems to be the same as: http://cxf.547215.n5.nabble.com/validation-error-td5101800.html

In my context, it happends only when my WebMethod interface holds an Exception

It looks like org.apache.cxf.common.xmlschema.SchemaCollection.addCrossImportsType has been written for XmlSchemaSequence only, while it could be called on any XmlSchemaGroupParticle.

Then, I adapted the code in SchemaCollection.addCrossImportsType to the three specializations of XmlSchemaGroupParticle and it seems to work properly.

{code}

    private static final XmlSchemaChoice EMPTY_CHOICE = new XmlSchemaChoice();
    private static final XmlSchemaAll EMPTY_ALL = new XmlSchemaAll();

...

private void addCrossImportsType(XmlSchema schema, XmlSchemaType schemaType) {
        // the base type might cross schemas.
        if (schemaType instanceof XmlSchemaComplexType) {
            XmlSchemaComplexType complexType = (XmlSchemaComplexType)schemaType;
            XmlSchemaUtils.addImportIfNeeded(schema, complexType.getBaseSchemaTypeName());
            addCrossImports(schema, complexType.getContentModel());
            addCrossImportsAttributeList(schema, complexType.getAttributes());
            // could it be a choice or something else?
            
            // HACK QFS
            if (complexType.getParticle() instanceof XmlSchemaChoice) {
            	XmlSchemaChoice choice = null;

				// XmlSchemaSequence sequence = XmlSchemaUtils.getSequence(complexType);
                {
                    XmlSchemaParticle particle = complexType.getParticle();
                    XmlSchemaChoice localChoice = null;

                    if (particle == null) {
                        // the code that uses this wants to iterate. An empty one is more useful than
                        // a null pointer, and certainly an exception.
                    	localChoice = EMPTY_CHOICE;
                    } else {
                        try {
                        	localChoice = (XmlSchemaChoice) particle;
                        } catch (ClassCastException cce) {
                        	XmlSchemaUtils.unsupportedConstruct(""NON_CHOICE_PARTICLE"", complexType);
                        }
                    }

                    choice = localChoice;
                }
                
                //addCrossImportsSequence(schema, sequence);
                {
                    for (XmlSchemaObject seqMember : choice.getItems()) {
                        if (seqMember instanceof XmlSchemaElement) {
                            addElementCrossImportsElement(schema, (XmlSchemaElement)seqMember);
                        }
                    }
                }
            } else if (complexType.getParticle() instanceof XmlSchemaAll) {
            	XmlSchemaAll all = null;

				// XmlSchemaSequence sequence = XmlSchemaUtils.getSequence(complexType);
                {
                    XmlSchemaParticle particle = complexType.getParticle();
                    XmlSchemaAll localAll = null;

                    if (particle == null) {
                        // the code that uses this wants to iterate. An empty one is more useful than
                        // a null pointer, and certainly an exception.
                    	localAll = EMPTY_ALL;
                    } else {
                        try {
                        	localAll = (XmlSchemaAll) particle;
                        } catch (ClassCastException cce) {
                        	XmlSchemaUtils.unsupportedConstruct(""NON_ALL_PARTICLE"", complexType);
                        }
                    }

                    all = localAll;
                }
                
                //addCrossImportsSequence(schema, sequence);
                {
                    for (XmlSchemaObject seqMember : all.getItems()) {
                        if (seqMember instanceof XmlSchemaElement) {
                            addElementCrossImportsElement(schema, (XmlSchemaElement)seqMember);
                        }
                    }
                }
            } else {
                XmlSchemaSequence sequence = XmlSchemaUtils.getSequence(complexType);
                addCrossImportsSequence(schema, sequence);
            }
            // END QFS HACK
        }
    }
{code}

Benoit Lacelle
ActivePivot Consultant @ Quartetfs",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,223386,,,2012-01-10 10:11:40.0,,,,,,0|i0b83b:,63423,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-WS schema generation of an Exception annoted with @WebFault that contains a property of a class annotated with @XmlRootElement causes the schema of the WSDL to generate the incorrectly,CXF-4016,12537830,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,vrfurl,vrfurl,09/Jan/12 23:00,09/Apr/13 15:15,14/Mar/19 02:29,18/Mar/13 18:16,2.4,,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,JAX-WS Runtime,,,,0,,,,,,"I have the following Exception Class (BusinessException) that is annotated with @WebFault.  BusinessException has a property named exceptionMessage that is of Type ExceptionMessage. ExceptionMessage is annotated with the @XmlRootElement annotation.



When CXF generates the WSDL via hitting the web wervice URL it generates a schema with an invalid element for the BusinessException element.

See the schema in question here:



{code}
<xs:schema attributeFormDefault=""unqualified"" elementFormDefault=""qualified"" targetNamespace=""http://www.mycompany.com/platform/exception"" xmlns:tns=""http://www.mycompany.com/platform/exception"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"">
<xs:element name=""ExceptionMessage"" type=""tns:exceptionMessage""/>
<xs:complexType name=""exceptionMessage"">
<xs:sequence>
<xs:element minOccurs=""0"" name=""classCause"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""severity"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""exceptionMessage"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""displayMessage"" type=""xs:string""/>
<xs:element name=""code"" type=""xs:int""/>
<xs:element minOccurs=""0"" name=""informationCode"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""uniqueID"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""userResolution"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""exceptionCause"" type=""xs:string""/>
<xs:element minOccurs=""0"" name=""stack"" type=""xs:string""/>
</xs:sequence>
</xs:complexType>
<xs:complexType name=""BusinessException"">
<xs:sequence>
<xs:element nillable=""true""/>
</xs:sequence>
</xs:complexType>
<xs:element name=""BusinessException"" type=""tns:BusinessException""/>
</xs:schema>
{code}



Notice this portion of the schema here:

{code}
<xs:complexType name=""BusinessException"">
<xs:sequence>
<xs:element nillable=""true""/>
</xs:sequence>
</xs:complexType>
{code}

It is generating an invalid schema element ""<xs:element nillable=""true""/>"" without a name or ref.


The problem appears to be with the fact that the ExceptionMessage class is annotated with @XmlRootElement.  If I remove the @XmlRootElement from the ExceptionMessage class it all works fine.  My problem is that the ExceptionMessage class is also used by other services in my code that need to serialize the ExceptionMessage to xml via JAXB.  And as I'm sure you already know when using the JaxbContext will throw an Exception if the class is not annotated with the @XmlRootElement.  I have been able to work around this issue by simply removing the @XmlRootElement annotation and programmatically implementing a JAXBElement object which will then allow me to use the JaxbContext without getting the non present @XmlRootElement Exception.

{code}
	QName qName = new QName(""http://www.mycompany.com/platform/exception"", ""ExceptionMessage"");
	JAXBElement<ExceptionMessage> jaxbElement = new JAXBElement<ExceptionMessage>(qName, ExceptionMessage.class, exceptionMessageObj);
{code}




So I guess what I'm asking is isn't it possible just use the simple class name for the WSDL schema name  for a class that is annotated with @XmlRootElement verus generating an invalid schema element without a name or ref? 





Please see the code example below:

{code}

package com.mycompany.platform.exception.checked;

import java.io.Serializable;

import javax.xml.ws.WebFault;

/**
 * <code>BusinessException</code>-
 * 
 * Base class for business exceptions. It is only used by application developer.
 * Caller should have knowledge about how to handle this exception.
 * 
 */
@WebFault(name = ""BusinessException"", targetNamespace = AbstractException.TARGET_NAMESPACE)
public class BusinessException extends AbstractException {



	/**
	 * The exception message
	 */
	private ExceptionMessage exceptionMessage;


	/**
	 * Serial Version ID to compare if the class version has changed in
	 * serialization/deserialization.
	 */
	private static final long serialVersionUID = -4466271192745954077L;
	/**
	 * Default logical exception code
	 */
	private static final String INFO_CODE = ""error.business"";

	/**
	 * @see com.mycompany.platform.exception.checked.AbstractException
	 */
	public BusinessException(final Throwable nested) {
		super(nested);
	}

	/**
	 * @see com.mycompany.platform.exception.checked.AbstractException
	 */
	public BusinessException(final String msg, final Throwable nested,
			final String newInfoCode, final Serializable... args) {
		super(msg, nested, newInfoCode, args);
	}

	/**
	 * @see com.mycompany.platform.exception.checked.AbstractException
	 */
	public BusinessException(final String msg, final String newInfoCode,
			final Serializable... args) {
		super(msg, newInfoCode, args);
	}

	/**
	 * @see com.mycompany.platform.exception.checked.AbstractException
	 */
	public BusinessException(final String msg, final Throwable nested) {
		super(msg, nested);
	}

	/**
	 * @see com.mycompany.platform.exception.checked.AbstractException
	 */
	public BusinessException(final Throwable nested, final String newInfoCode) {
		super(nested, newInfoCode);
	}

	/**
	 * @see com.mycompany.platform.exception.checked.AbstractException
	 */
	public BusinessException(final String msg) {
		super(msg);
	}

	/**
	 * @see com.mycompany.platform.exception.checked.AbstractException
	 */
	public BusinessException() {
		super();
	}

	/**
	 * <code>getDefaultInformationCode</code>-
	 * 
	 * Returns the default exception key to use if none is specified when the
	 * exception is thrown.
	 * 
	 * @return <code>String</code> default information code
	 */
	@Override
	public String getDefaultInformationCode() {
		return INFO_CODE;
	}
	

	public ExceptionMessage getExceptionMessage() {
		return exceptionMessage;
	}

	public void setExceptionMessage(final ExceptionMessage exceptionMessage) {
		this.exceptionMessage = exceptionMessage;
	}
}





package com.mycompany.platform.exception.checked;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 *
 * <code>ExceptionMessage</code>-
 *
 * The ExceptionMessage object that is used in the application to create
 * and utilize error messages. This object provides methods to create an
 * ExceptionMessage object and setters/getters for its various attributes.
 *
 */
@XmlRootElement(name = ""ExceptionMessage"")
@XmlType(propOrder = {
    ""classCause"",
    ""severity"",
    ""exceptionMessage"",
    ""displayMessage"",
    ""code"",
    ""informationCode"",
    ""uniqueID"",
    ""userResolution"",
    ""exceptionCause"",
    ""stack""
})
public class ExceptionMessage {

    /**
     * WARN <code>String</code> definition
     */
    public static final String WARN = ""WARN"";
    /**
     * DEBUG <code>String</code> definition
     */
    public static final String DEBUG = ""DEBUG"";
    /**
     * ERROR <code>String</code> definition
     */
    public static final String ERROR = ""ERROR"";
    /**
     * FATAL <code>String</code> definition
     */
    public static final String FATAL = ""FATAL"";
    /**
     * INFO <code>String</code> definition
     */
    public static final String INFO = ""INFO"";
    /**
     * PERIOD <code>String</code> definition.  Generates a new line.
     */
    private static final String PERIOD = "".\n"";

    private String displayMessage;
    private String severity;
    private String informationCode;
    private String userResolution;
    private String uniqueID;
    private String stack;
    private String exceptionCause;
    private String exceptionMsg;
    private String classCause;
    private int code;


    /**
     * Creates a new <code>ExceptionMessage</code> object.
     */
    public ExceptionMessage() {
        super();
    }


    /**
     * Creates a new <code>ExceptionMessage</code> object.
     *
     * @param informationCode <code>String<code> information code
     * @param theMessage <code>String</code> textual error message
     * @param theCode <code>String</code> error message code
     * @param theSeverity <code>String</code> error severity
     * @param theUserResolution <code>String</code> user resolution
     */
    public ExceptionMessage(final String informationCode,
            final String theMessage, final int theCode,
            final String theSeverity, final String theUserResolution) {
        this.displayMessage = theMessage.replace(""\"""", """");
        this.code = theCode;
        this.severity = theSeverity;
        this.informationCode = informationCode;
        this.userResolution = theUserResolution.replace(""\"""", """");
    }

	public void setInformationCode(String informationCode) {
		this.informationCode = informationCode;
	}


	public void setUserResolution(String userResolution) {
		this.userResolution = userResolution.replace(""\"""", """");
	}

    /**
     * <code>getClassCause</code>-
     * Returns the <code>String<code> Class name that caused the exception.
     *
     * @return <code>String<code> Class name that caused the exception
     */
    public String getClassCause() {
		return classCause;
	}

	/**
	 * <code>setClassCause</code>-
	 * Sets the <code>String<code> Class name that caused the exception.
	 *
	 * @param classCause <code>String<code> Class name that caused the exception
	 */
	public void setClassCause(String classCause) {
		this.classCause = classCause;
	}

    /**
     * <code>setCode</code>-
     *
     * Sets the code.
     *
     * @param theCode <code>int</code> to set
     *
     */
    public void setCode(final int theCode) {
        this.code = theCode;
    }

    /**
     * <code>getCode</code>-
     *
     * Returns the code.
     *
     * @return <code>int<code> code
     */
    public int getCode() {
        return this.code;
    }

    /**
     * <code>setDisplayMessage</code>-
     *
     * Sets the message.
     *
     * @param aDisplayMessage <code>String</code> to set
     *
     */
    public void setDisplayMessage(final String aDisplayMessage) {

        this.displayMessage = aDisplayMessage.replace(""\"""", """");
    }

    /**
     * <code>getDisplayMessage</code>-
     *
     * Returns the message.
     *
     * @return <code>String</code> display message
     */
    public String getDisplayMessage() {
        return this.displayMessage;
    }

    /**
     * <code>setSeverity</code>-
     *
     * Sets the severity.
     *
     * @param theSeverity <code>String</code> to set
     *
     */
    public void setSeverity(final String theSeverity) {
        this.severity = theSeverity;
    }

    /**
     * <code>getSeverity</code>-
     *
     * Returns the severity.
     *
     * @return <code>String</code> severity
     */
    public String getSeverity() {
        return this.severity;
    }

    /**
     * <code>getInformationCode</code>-
     *
     * Returns the logicalName
     *
     * @return <code>String</code> information code
     *
     */
    public String getInformationCode() {
        return this.informationCode;
    }

    /**
     * <code>getUserResolution</code>-
     *
     * Returns the userResolution.
     *
     * @return <code>String</code> user resolution
     *
     */
    public String getUserResolution() {
        return this.userResolution;
    }

    /**
     * <code>getUniqueID</code>-
     *
     * Returns the unique id for the exception
     *
     * @return <code>String</code> Unique ID
     */
    public String getUniqueID() {
        return this.uniqueID;
    }

    /**
     * <code>setUniqueID</code>-
     *
     * Sets the unique id for the exception
     *
     * @param uniqueID <code>String</code> to set
     */
    public void setUniqueID(final String uniqueID) {
        this.uniqueID = uniqueID;
    }


    /**
     * <code>getStack</code>-
     *
     * Gets the stack trace of the exception that occurred
     *
     * @return <code>String</code> containing exception stack
     */
    public String getStack() {
        return stack;
    }

    /**
     * <code>setStack</code>-
     * Sets the stack trace of the exception that occurred
     *
     * @param stackTraceElements <code>String</code> representation of the stack to set
     *
     */
    public void setStack(
            final String stack) {

  		this.stack = stack;

    }


    /**
     * <code>setStackTrace</code>-
     * Sets the stack trace of the exception that occurred
     *
     * @param stackTraceElements <code>StackTraceElement</code> array to set
     *
     */
    public void setStackTrace(
            final StackTraceElement[] stack) {

    	if (stack != null)
    	{
    		StringBuilder builder = new StringBuilder();
    		this.stack = ExceptionMessage.convert(builder, stack).toString();
    	}

    }

    /**
     * <code>getExceptionCause</code>-
     *
     * This method returns the original exception cause. A cause is another
     * <code>Throwable</code> that caused the final exception to be thrown.
     *  It is also known as the chained exception facility, as the cause can,
     * itself, have a cause, and so on,
     * leading to a ""chain"" of exceptions, each caused by another. Please note
     * that this cause may return null if no cause was set using the @see
     * {@link ExceptionMessage.setExceptionCause()} method.
     *
     * @return <code>String</code> representation of the <code>Throwable</code> chained that was set
     */
    public String getExceptionCause() {
        return this.exceptionCause;
    }

    /**
     * <code>setExceptionCause</code>-
     *
     * This method sets the original exception cause. A cause is another
     * <code>Throwable</code> that caused the final exception to be thrown. The cause
     * facility was added new in release 1.4. It is also known as the chained
     * exception facility, as the cause can, itself, have a cause, and so on,
     * leading to a ""chain"" of exceptions, each caused by another. this is
     * OPTIONAL value and only to be used if there is a strong need to display
     * the cause of the exception.
     *
     * @param exceptionCause <code>String</code> representation of <code>Throwable</code> chained exception to set
     */
    public void setExceptionCause(final String exceptionCause) {
        this.exceptionCause = exceptionCause;
    }

    /**
     * <code>setExceptionCausing</code>-
     *
     * This method sets the original exception cause. A cause is another
     * <code>Throwable</code> that caused the final exception to be thrown. The cause
     * facility was added new in release 1.4. It is also known as the chained
     * exception facility, as the cause can, itself, have a cause, and so on,
     * leading to a ""chain"" of exceptions, each caused by another. this is
     * OPTIONAL value and only to be used if there is a strong need to display
     * the cause of the exception.
     *
     * @param exceptionCause <code>Throwable</code> exception to set
     */
    public void setExceptionCausing(final Throwable exceptionCausing) {
        this.exceptionCause = exceptionCausing.toString();
    }

    /**
     * <code>getExceptionMessage</code>-
     *
     * Returns the detail message string of this throwable. The detail message
     * string of this <code>Throwable</code> instance (which may be null).
     *
     * @return <code>String</code> exceptionMessage
     */
    public String getExceptionMessage() {
        return this.exceptionMsg;
    }

    /**
     * <code>setExceptionMessage</code>-
     *
     * Sets the detail message string of the <code>Throwable<code> that the exception
     * message may use to display. this is optional and may not always be set.
     *
     * @param exceptionMessage <code>String</code> exception message to set.
     *
     */
    public void setExceptionMessage(final String exceptionMessage) {
        this.exceptionMsg = exceptionMessage;
    }


    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        final StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(""Unique ID: "");
        stringBuilder.append(this.uniqueID);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""Information Code: "");
        stringBuilder.append(this.informationCode);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""Error Code: "");
        stringBuilder.append(this.code);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""User Message: "");
        stringBuilder.append(this.displayMessage);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""Message: "");
        stringBuilder.append(this.exceptionMsg);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""Resolution: "");
        stringBuilder.append(this.userResolution);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""Exception Class: "");
        stringBuilder.append(this.classCause);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""Detailed Stack Trace: "");
        stringBuilder.append(this.stack);

        stringBuilder.append(PERIOD);
        stringBuilder.append(""Cause: "");
        stringBuilder.append(this.exceptionCause);

        return stringBuilder.toString();
    }

    /**
     * <code>convert</code>-
     *
     * Converts the stack trace of an exception into <code>StringBuilder</code> from <code>StackTraceElement</code>.
     *
     * @param newStringBuilder <code>StringBuilder</code> buffer to which will be appended
     * @param stack <code>StackTraceElement</code> array of elements to append to the stack
     *
     * @return <code>StringBuilder</code> of the exception stack trace
     */
    public static StringBuilder convert(final StringBuilder newStringBuilder,
            final StackTraceElement[] stack) {
        StringBuilder result = newStringBuilder;

        if (stack != null && stack.length > 0) {
            if (result == null) {
                result = new StringBuilder();
            }

            result.append(stack[0]);

            for (int i = 1; i < stack.length; i++) {
                result.append('\n');
                result.append(stack[i]);
            }
        } else {
            if (result == null) {
                result = new StringBuilder();
            }
        }

        return result;
    }



}

{code}


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-13 21:30:16.962,,,no_permission,,Unknown,,,,,,,,,,,223336,,,Mon Mar 18 18:16:12 UTC 2013,,,,,,0|i0b88f:,63446,,,,,,,,"13/Jan/12 21:30;dkulp;Fixed.   Two comments:

1)While writing my test, I was actually getting an Exception thrown instead of the element without a type.   Might be a difference on trunk/2.6 though.

2) You could likely work around this by adding a name=""ExceptionMessage"" attribute to the @XmlType annotation to make it generate the type as a top level type, not an anonymous type in an element.


","23/Jan/12 23:15;vrfurl;Hey Daniel,

Thanks for looking into this for me.

So I had actually tried adding the ""name=ExceptionMessage"" to the @XmlType annotation during my tests with CXF version 2.4 and it did solve name element being generated with no name issue.  

However, since I use the ExceptionMessage class in other code that that serializes the ExceptionMessage to XML using JAXB I would get the ""missing an @XmlRootElement annotation"" JAXBException.  So to fix that I would then add the @XmlRootElement back to the ExceptionMessage class which fixed my JAXB serialization but then caused the schema to get generated incorrectly again without the name attribute being added to the element even if the ""name=ExceptionMessage"" was specified on the @XmlType at the same time. Which ultimately means that as long as the @XmlRootElement is present on the class the WSDL schema generates incorrectly regardless. 

So as I mentioned before I was able to workaround this issue by simply removing the @XmlRootElement annotation and programmatically create the element using this JAXB code:

QName qName = new QName(ExceptionMessage.TARGET_NAMESPACE,exceptionMessage.getClass().getSimpleName());
			JAXBElement<ExceptionMessage> jaxbElement = new JAXBElement<ExceptionMessage>(qName, ExceptionMessage.class, exceptionMessage);


This works but I would rather not have to manually create the JAXBEelemnt and instead use the @XmlRootElement annotation.


So I guess my question is: Is there way to make it pick up the ""name=ExceptionMessage"" from the @XmlType annotation even if the @XmlRootElement is present on the class?  

Or is there any other way to make it generate the element name correctly when the @XmlRootElement is present

Thanks a lot for your time!

","18/Mar/13 18:16;dkulp;
The original issue is fixed (and I think the other issues are as well).  If not, the new issues would need a new bug.",,,,,,,,,,,,,,,,,,,,,,,,
wadl2java: xs:integer param is generated as invalid type,CXF-4015,12537790,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,odendahl,odendahl,09/Jan/12 16:32,07/Feb/12 21:51,14/Mar/19 02:29,11/Jan/12 12:00,2.5.1,,,,,,,,,,,,,,,,,2.4.6,2.5.2,2.6,,JAX-RS,Tooling,,,0,,,,,,"A param of type xs:integer is generated as a Java ""integer"". This is no valid primitive type, probably you mean ""int"" or ""Integer"". But even this is wrong. xs:integer is unbounded and can only be represented by BigInteger.
xs:int however is a signed 32bit integer, generating it as ""int"" or ""Integer"" would be fine.

Example WADL:
  <param name=""my_number"" type=""xs:integer"" style=""query"" required=""true""/>

Created Java code:
  @QueryParam(""my_number"") integer my_number
  ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-11 11:55:30.827,,,no_permission,,Unknown,,,,,,,,,,,223296,,,Wed Jan 11 11:55:30 UTC 2012,,,,,,0|i0b8bb:,63459,,,,,,,,"10/Jan/12 09:02;odendahl;This could be simply that integer is not supported. For other types that are not defined, the outcome is similar. E.g. a type ""foo:bar"" is generated as ""bar"", if the prefix ""foo"" is unknown or foo doesn't contain a definition for ""bar"".","11/Jan/12 11:55;sergey_beryozkin;Hi, for the moment it will probably make sense to map 
xsd:integer to ""long"" given that xsd:long itself is a restriction of xsd:integer.
FYI, required=""true"" will lead to 'long' but dropping this flag will lead to Long.
I also added a mapping for xsd:decimal to java.math.BigInteger",,,,,,,,,,,,,,,,,,,,,,,,,
The AlgorithmSuite class does not use the WS-SP standard maximum symmetric key size,CXF-4012,12537342,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,05/Jan/12 15:35,07/Feb/12 21:50,14/Mar/19 02:29,05/Jan/12 15:45,2.4.5,2.5.1,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,,,,,0,,,,,,"The AlgorithmSuite class does not use the WS-SP standard maximum symmetric key size (256 bits), but instead defines different values for some of the Algorithm Suites.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,222850,,,2012-01-05 15:35:01.0,,,,,,0|i0b8af:,63455,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The STS SAML DefaultSubjectProvider does not set the encryption algorithm when building an EncryptedKey,CXF-4011,12537339,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,05/Jan/12 15:15,07/Feb/12 21:50,14/Mar/19 02:29,05/Jan/12 15:26,2.5.1,,,,,,,,,,,,,,,,,2.5.2,,,,Services,,,,0,,,,,,"The STS SAML DefaultSubjectProvider does not set the encryption algorithm when building an EncryptedKey. Hence, the default of AES-128 is always used, instead of what's set in the EncryptionProperties class associated with the target Service, or default algorithm.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,222847,,,2012-01-05 15:15:48.0,,,,,,0|i14f9b:,233935,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Should also check javax.net.ssl.keyStore* properties....,CXF-4008,12537241,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,04/Jan/12 21:05,07/Feb/12 21:51,14/Mar/19 02:29,04/Jan/12 21:06,,,,,,,,,,,,,,,,,,2.5.2,,,,,,,,0,,,,,,"
When setting up the conduit, we should check the standard javax.net.ssl* properties that are relevant and use them.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,222750,,,2012-01-04 21:05:40.0,,,,,,0|i14f8v:,233933,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jetty threading parameters doesn't setup threadpool properly,CXF-4007,12537132,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,04/Jan/12 02:20,07/Feb/12 21:50,14/Mar/19 02:29,04/Jan/12 03:38,2.5.1,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,,Transports,,,,0,,,,,,"The thread pool is set on the connector, but not on the Server.  Thus, the server starts up a separate pool.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,222642,,,2012-01-04 02:20:14.0,,,,,,0|i0b82n:,63420,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible classloader leak due to ThreadLocal,CXF-4006,12537066,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,artbristol,artbristol,03/Jan/12 15:30,13/Jan/14 03:18,14/Mar/19 02:29,25/Jan/12 22:02,2.5.1,,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,JAX-RS,,,,1,,,,,,"org.apache.cxf.jaxrs.ext.MessageContextImpl is kept in a ThreadLocal for each HTTP request which means when a CXF-servlet-based webapp is undeployed, the webapp's classloader leaks. 

(At least, I think that's what's going on, I'm not that expert at tracking down memory leaks. Perhaps I have misconfigured something?)","Glassfish
OpenJDK Runtime Environment (IcedTea6 1.10.4) (fedora-61.1.10.4.fc16-x86_64)",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-04 15:42:25.126,,,no_permission,,Unknown,,,,,,,,,,,222576,,,Wed Jan 25 22:02:00 UTC 2012,,,,,,0|i0b867:,63436,,,,,,,,"04/Jan/12 15:42;sergey_beryozkin;Hi, the thread local value is released by the runtime after the response has been handled, so no leak will occur.
Do you have some information that shows there could be a leak ?","04/Jan/12 15:48;artbristol;This snippet is from a Yourkit trace to the GC roots, after undeployment:

<class> of org.apache.cxf.jaxrs.ext.MessageContextImpl
value of java.lang.ThreadLocal$ThreadLocalMap$Entry
[482] of java.lang.ThreadLocal$ThreadLocalMap$Entry[512]
table of java.lang.ThreadLocal$ThreadLocalMap
threadLocals of com.sun.grizzly.http.HttpWorkerThread [JNI Global, Stack Local, Thread]  ""http-thread-pool-8080(4)""","05/Jan/12 19:45;sergey_beryozkin;Hmm, I'm wondering why it seems to be happening on unloading the webapp, this is all cleared Ok during the regular call.
Dan, Benson, do you have any ideas ? ","18/Jan/12 10:49;denis.delangle;I am having the same kind of issue under Tomcat which is the client, not the server. After undeploying my webapp, I have this message from Tomcat :
{quote}
GRAVE: The web application [/sipbo] created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@327958ef]) and a value of type [org.apache.cxf.jaxrs.ext.MessageContextImpl] (value [org.apache.cxf.jaxrs.ext.MessageContextImpl@3cbdcccc]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.
{quote}

I am creating my client code like this : 
{code:java}
	//I create my delegate instance lazily
	private NotificationService getDelegate() { 
	   if (delegate == null) {
	      delegate = JAXRSClientFactory.create(url, NotificationService.class, new ArrayList<Object>(), true);
	   }
	}

	//I try to destroy the client when shutting down the webapp
	@PreDestroy
	public void cleanResources() {
		WebClient.getConfig(delegate).getBus().shutdown(true);
	}

{code}

After searching with VisualVM, it seems that instances of MesageContextImpl are still stored in a ThreadLocalMessageContext referenced in the static field AbstractResourceInfo.setterProxyMap and in the instance field JAXBElementProvider.mc.

It can be a misuse of the API or it may help solve the bug.","18/Jan/12 11:37;sergey_beryozkin;Denis, thanks for this info.

Art, in your case, do you also use WebClient in scope of the server web app ?","18/Jan/12 11:43;artbristol;Yes, that is one of the cases for which we're using CXF (so we're using it as both servlet and client).","18/Jan/12 14:16;sergey_beryozkin;This has been fixed on the trunk and all the active branches. 
If you can get a chance to try it with the latest snapshot (2.5.x or 2.4.x, etc) then it would help, 
Trunk is building now at https://builds.apache.org/, I will schedule the 2.5.2-SNAPSHOT build next

Cheers, Sergey",20/Jan/12 14:11;denis.delangle;I tried with version 2.5.3-20120120.065637-1 but still have the same error message.,"25/Jan/12 22:02;sergey_beryozkin;Sorry I did not catch the issue earlier; definitely fixed now, a temp regression spanning last 1-2 releases on 2.4.x/2.5.x
The leak should be more or less negligible, but the way to eliminate it with the released CXFs is to register a simple JAXBElementProvider (or/and JSONProvider) only which will override setMessageContext method and make it no-op. 

MessageContext is needed to check for custom STAX handlers and may be Marshaller properties. This all can be managed in the custom provider using PhaseInterceptorChain.getCurrentMessage().

thanks",,,,,,,,,,,,,,,,,,
Regression: Duplicated option: verbose,CXF-4005,12536813,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,davidkarlsen@gmail.com,davidkarlsen@gmail.com,02/Jan/12 15:09,06/May/13 15:18,14/Mar/19 02:29,03/Jan/12 21:24,2.5.1,,,,,,,,,,,,,,,,,2.5.2,,,,Tooling,,,,0,duplicate,option,verbose,,,"I get:
{noformat}
[ERROR] Failed to execute goal org.apache.cxf:cxf-codegen-plugin:2.5.1:wsdl2java (default) on project cxf-utils: org.apache.cxf.tools.common.toolspec.parser.BadUsageException: Duplicated option: verbose -> [Help 1]
{noformat}

with the following config:

{noformat}
          <plugins>
                        <!-- done implicity by the service generation -->
                        <!-- <plugin> <groupId>org.apache.cxf</groupId> <artifactId>cxf-xjc-plugin</artifactId> 
                                <version>2.3.2</version> <executions> <execution> <phase>generate-sources</phase> 
                                <goals> <goal>xsdtojava</goal> </goals> </execution> </executions> <configuration> 
                                <xsdOptions> <xsdOption> <xsd>src/main/resources/WSCommon_v21.xsd</xsd> <packagename>com.edb.finance.common.cxf.utils.generated</packagename> 
                                </xsdOption> </xsdOptions> </configuration> </plugin> -->
                        <plugin>
                                <groupId>org.apache.cxf</groupId>
                                <artifactId>cxf-codegen-plugin</artifactId>
                                <version>${cxf.version}</version>
                                <dependencies>
                                        <dependency>
                                                <groupId>org.apache.cxf.xjcplugins</groupId>
                                                <artifactId>cxf-xjc-ts</artifactId>
                                                <version>2.4.0</version>
                                        </dependency>
                                        <dependency>
                                                <groupId>net.java.dev.jaxb2-commons</groupId>
                                                <artifactId>jaxb-fluent-api</artifactId>
                                                <version>2.1.8</version>
                                        </dependency>
                                </dependencies>
                                <configuration>
                                        <defaultOptions>
                                                <packagenames>
                                                        <packagename>http://edb.com/ws/WSCommon_v21=com.edb.finance.common.cxf.utils.generated</packagename>
                                                        <packagename>http://ping.monapp.finance.edb.com=com.edb.finance.common.cxf.utils.generated.monapp.ping</packagename>
                                                        <packagename>http://ping.ws.monapp.finance.edb.com=com.edb.finance.common.cxf.utils.generated.monapp.ws.ping</packagename>
                                                </packagenames>
                                                <validateWsdl>true</validateWsdl>
                                                <extraargs>
                                                        <extraarg>-xjc-Xts</extraarg>
                                                        <extraarg>-xjc-Xfluent-api</extraarg>
                                                        <extraarg>-verbose</extraarg>
                                                </extraargs>
                                                <bindingFiles>
                                                        <bindingFile>${basedir}/src/main/resources/wsdl/jaxbbindings.xml</bindingFile>
                                                </bindingFiles>
                                        </defaultOptions>
                                </configuration>
                                <executions>
                                        <execution>
                                                <goals>
                                                        <goal>wsdl2java</goal>
                                                </goals>
                                        </execution>
                                </executions>
                        </plugin>

{noformat}

This did not happen with cxf 2.5.0",maven 3.0.3,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-05-06 15:18:31.902,,,no_permission,,Unknown,,,,,,,,,,,222496,,,Mon May 06 15:18:31 UTC 2013,,,,,,0|i0v49b:,179663,,,,,,,,"06/May/13 15:18;pdecat;For the record, CXF 2.3.11 (released 2012-05-29) is affected by this issue.

Indeed, the fix was not merged into the 2.3.x-fixes branch :
* https://fisheye6.atlassian.com/changelog/cxf/branches/2.3.x-fixes/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/WSDL2JavaMojo.java?max=30&view=all
* https://fisheye6.atlassian.com/changelog/cxf/branches/2.3.x-fixes/maven-plugins/codegen-plugin/src/main/java/org/apache/cxf/maven_plugin/WsdlOptionLoader.java?max=30&view=all
",,,,,,,,,,,,,,,,,,,,,,,,,,
2.5.1 regression: Duplicate code generation with fluent plugin,CXF-4004,12536812,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,davidkarlsen@gmail.com,davidkarlsen@gmail.com,02/Jan/12 15:02,07/Feb/12 21:51,14/Mar/19 02:29,03/Jan/12 21:25,2.5.1,,,,,,,,,,,,,,,,,2.5.2,,,,Tooling,,,,0,codegen,,,,,"With CXF 2.5.1 and:

{noformat}
<plugin>
                                <groupId>org.apache.cxf</groupId>
                                <artifactId>cxf-codegen-plugin</artifactId>
                                <version>${cxf.version}</version>
                                <dependencies>
                                        <dependency>
                                                <groupId>org.apache.cxf.xjcplugins</groupId>
                                                <artifactId>cxf-xjc-ts</artifactId>
                                                <version>2.4.0</version>
                                        </dependency>
                                        <dependency>
                                                <groupId>net.java.dev.jaxb2-commons</groupId>
                                                <artifactId>jaxb-fluent-api</artifactId>
                                                <version>2.1.8</version>
                                        </dependency>
                                </dependencies>
                                <configuration>
                                        <defaultOptions>
                                                <packagenames>
                                                        <packagename>http://edb.com/ws/WSCommon_v21=com.edb.finance.common.cxf.utils.generated</packagename>
                                                        <packagename>http://ping.monapp.finance.edb.com=com.edb.finance.common.cxf.utils.generated.monapp.ping</packagename>
                                                        <packagename>http://ping.ws.monapp.finance.edb.com=com.edb.finance.common.cxf.utils.generated.monapp.ws.ping</packagename>
                                                </packagenames>
                                                <validateWsdl>true</validateWsdl>
                                                <extraargs>
                                                        <extraarg>-xjc-Xfluent-api</extraarg>
                                                </extraargs>
                                                <bindingFiles>
                                                        <bindingFile>${basedir}/src/main/resources/wsdl/jaxbbindings.xml</bindingFile>
                                                </bindingFiles>
                                        </defaultOptions>
                                </configuration>
                                <executions>
                                        <execution>
                                                <goals>
                                                        <goal>wsdl2java</goal>
                                                </goals>
                                        </execution>
                                </executions>
{noformat}

duplicate code is generated for the fluent methods - this did not happen with 2.5.0.

error from compiler:
{noformat}
[ERROR] /home/et2448/projects/common/finance/cxf-utils/target/generated-sources/cxf/com/edb/finance/common/cxf/utils/generated/ItemType.java:[95,20] withKey(java.lang.String) is already defined in com.edb.finance.common.cxf.utils.generated.ItemType

{noformat}","maven 3.0.3, cxf 2.5.1",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-04 00:37:00.679,,,no_permission,,Unknown,,,,,,,,,,,222495,,,Wed Jan 04 00:59:59 UTC 2012,,,,,,0|i0v49r:,179665,,,,,,,,04/Jan/12 00:37;bmargulies;where's the wsdl? I want to set up a regression test.,"04/Jan/12 00:59;davidkarlsen@gmail.com;Same symptom from any wsdl.
So for instance you can use the examples from the [Oracle] JDK.",,,,,,,,,,,,,,,,,,,,,,,,,
Cannot override read-only parameter: classesDirectory in goal: cxf-codegen:wsdl2java,CXF-4002,12536730,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,longbeach,longbeach,31/Dec/11 10:08,05/Jun/12 13:31,14/Mar/19 02:29,01/May/12 16:03,2.5.1,,,,,,,,,,,,,,,,,2.5.4,2.6.1,,,Tooling,,,,3,maven,,,,,"I am getting this error when using the version 2.5.1 of the cxf-codegen-plugin (i did not get this error with the previous version that I was using which was 2.1.8).

Pom of the parent :
  <plugin>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-codegen-plugin</artifactId>
         <version>2.5.1</version>
 </plugin>

Pom of the child :

<plugin>
    <groupId>org.apache.cxf</groupId>
    <artifactId>cxf-codegen-plugin</artifactId>
    <executions>
        <execution>
            <id>generate-sources</id>
            <phase>generate-sources</phase>
            <configuration>
                <sourceRoot>${basedir}/src/main/generated/</sourceRoot>
                <wsdlOptions>
                    <wsdlOption>
                        <wsdl>${basedir}/src/main/resources/wsdl/mobileclient/blablaClient-1.0.wsdl</wsdl>
                        <extraargs>
                            <extraarg>-client</extraarg>       
                            <extraarg>-p</extraarg>
                            <extraarg>http://www.xxx.com/client.blablaClient</extraarg>
                        </extraargs>
                    </wsdlOption>
                </wsdlOptions>
            </configuration>
            <goals>
                <goal>wsdl2java</goal>
            </goals>
        </execution>
    </executions>
</plugin>

Here is the complete stack trace :

Embedded error: Unable to execute maven plugin Error configuring: org.apache.cxf:cxf-codegen-plugin. Reason: ERROR: Cannot override read-only parameter: classesDirectory in goal: cxf-codegen:wsdl2java [INFO] ------------------------------------------------------------------------
[INFO] Trace
Caused by: org.sonar.api.utils.SonarException: Unable to execute maven plugin
    at org.sonar.batch.AbstractMavenPluginExecutor.execute(AbstractMavenPluginExecutor.java:48)
    at org.sonar.batch.AbstractMavenPluginExecutor.execute(AbstractMavenPluginExecutor.java:37)
    at org.sonar.batch.phases.InitializersExecutor.executeMavenPlugin(InitializersExecutor.java:67)
    at org.sonar.batch.phases.InitializersExecutor.execute(InitializersExecutor.java:54)
    at org.sonar.batch.phases.Phases.execute(Phases.java:77)
    at org.sonar.batch.ProjectBatch.execute(ProjectBatch.java:59)
    at org.sonar.batch.Batch.analyzeModule(Batch.java:164)
    at org.sonar.batch.Batch.analyzeModule(Batch.java:155)
    at org.sonar.batch.Batch.analyzeModule(Batch.java:155)
    at org.sonar.batch.Batch.analyzeModules(Batch.java:82)
    at org.sonar.batch.Batch.execute(Batch.java:62)
    at org.sonar.maven.SonarMojo.executeBatch(SonarMojo.java:155)
    at org.sonar.maven.SonarMojo.execute(SonarMojo.java:144)
    at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
    at org.codehaus.mojo.sonar.Bootstraper.executeMojo(Bootstraper.java:98)
    ... 21 more
Caused by: org.apache.maven.lifecycle.LifecycleExecutionException: Error configuring: org.apache.cxf:cxf-codegen-plugin. Reason: ERROR: Cannot override read-only parameter: classesDirectory in goal: cxf-codegen:wsdl2java
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:723)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkProjectLifecycle(DefaultLifecycleExecutor.java:1205)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(DefaultLifecycleExecutor.java:1038)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:643)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
    at org.sonar.maven.Maven2PluginExecutor.concreteExecute(Maven2PluginExecutor.java:52)
    at org.sonar.batch.AbstractMavenPluginExecutor.execute(AbstractMavenPluginExecutor.java:46)
    ... 35 more
Caused by: org.apache.maven.plugin.PluginConfigurationException: Error configuring: org.apache.cxf:cxf-codegen-plugin. Reason: ERROR: Cannot override read-only parameter: classesDirectory in goal: cxf-codegen:wsdl2java
    at org.apache.maven.plugin.DefaultPluginManager.validatePomConfiguration(DefaultPluginManager.java:1157)
    at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:705)
    at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:468)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
    ... 46 more","Maven, Sonar",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-12-31 20:30:24.045,,,no_permission,,Unknown,,,,,,,,,,,222413,,,Tue May 01 16:03:07 UTC 2012,,,,,,0|i089hz:,46138,,,,,,,,"31/Dec/11 20:30;bmargulies;This could well be the results of my work on the codegen plugin for 2.5.1, but I'm rather mystified by the question of how Maven would decide about an attempt to configure classesDirectory when it isn't in the XML here anywhere.","03/Jan/12 21:31;dkulp;My gut feeling is that this really should be considered a bug in Sonar. I have no idea what it's trying to do, but the fact that this works well outside of sonar kind of points at tham.","03/Jan/12 22:09;dkulp;
Another question:  when run in Sonar, what version of Maven do you have it configured to use for the build?",03/Jan/12 22:09;olamy;could be interesting which maven version and sonar plugin version used.,12/Jan/12 12:14;russellr;I experience the error when using Maven 3.0.3 as well as Maven 2.2.1; Sonar 1.7.1 plugin.,"01/Feb/12 12:56;rin;Got the same error on linux using java v1.6.0_30-b12 in Jenkins ver. 1.450 with sonar plugin v1.8 and maven 3. Got that after updating versions of several artifacts in pom including upgrade of cxf from 2.5.0 to 2.5.2. At the same time i have another very similar project configured in the same jenkins, and it has undergone the very similar change without any problems...

The log:


[INFO] [13:34:24.266] -------------  Analyzing XXXXXXX-ws-common
[INFO] [13:34:25.715] Selected quality profile : [name=Sonar way with Findbugs,language=java]
[INFO] [13:34:25.723] Configure maven plugins...
[INFO] [13:34:25.745] Compare to previous analysis (2012-01-30)
[INFO] [13:34:25.759] Compare over 5 days (2012-01-27, analysis of 2012-01-27 10:21:02.0)
[INFO] [13:34:25.770] Compare over 30 days (2012-01-02, analysis of 2012-01-02 15:32:18.0)
[INFO] [13:34:25.802] Initializer FindbugsMavenInitializer...
[INFO] [13:34:25.802] Initializer FindbugsMavenInitializer done: 0 ms
[INFO] [13:34:25.802] Initializer ProjectFileSystemLogger...
[INFO] [13:34:25.802] Source directories:
[INFO] [13:34:25.802]   /var/lib/jenkins/jobs/XXXXXXX/workspace/trunk/XXXXXXX-ws-common/src/main/java
[INFO] [13:34:25.802] Initializer ProjectFileSystemLogger done: 0 ms
[INFO] [13:34:25.802] Initializer MavenInitializer...
[INFO] [13:34:25.802] Source encoding: UTF-8
[INFO] [13:34:25.802] Initializer MavenInitializer done: 0 ms
[INFO] [13:34:25.802] Execute maven plugin cobertura-maven-plugin...
[INFO] [13:34:25.802] Execute org.codehaus.mojo:cobertura-maven-plugin:2.5.1:cobertura...
[INFO] ------------------------------------------------------------------------
[INFO] Building XXXXXXX-ws-common
[INFO]    task-segment: [org.codehaus.mojo:cobertura-maven-plugin:2.5.1:cobertura]
[INFO] ------------------------------------------------------------------------
[INFO] Preparing cobertura:cobertura
[INFO] [enforcer:enforce {execution: default}]
[INFO] [13:34:27.015] Execute org.codehaus.mojo:cobertura-maven-plugin:2.5.1:cobertura done: 1213 ms
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Can not execute Sonar

Embedded error: Unable to execute maven plugin
Error configuring: org.apache.cxf:cxf-codegen-plugin. Reason: ERROR: Cannot override read-only parameter: classesDirectory in goal: cxf-codegen:wsdl2java
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Can not execute Sonar
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:719)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:284)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Can not execute Sonar
	at org.codehaus.mojo.sonar.Bootstraper.executeMojo(Bootstraper.java:103)
	at org.codehaus.mojo.sonar.Bootstraper.start(Bootstraper.java:79)
	at org.codehaus.mojo.sonar.SonarMojo.execute(SonarMojo.java:88)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	... 17 more
Caused by: org.sonar.api.utils.SonarException: Unable to execute maven plugin
	at org.sonar.batch.AbstractMavenPluginExecutor.execute(AbstractMavenPluginExecutor.java:51)
	at org.sonar.batch.AbstractMavenPluginExecutor.execute(AbstractMavenPluginExecutor.java:38)
	at org.sonar.batch.phases.InitializersExecutor.executeMavenPlugin(InitializersExecutor.java:73)
	at org.sonar.batch.phases.InitializersExecutor.execute(InitializersExecutor.java:60)
	at org.sonar.batch.phases.Phases.execute(Phases.java:90)
	at org.sonar.batch.bootstrap.ProjectModule.doStart(ProjectModule.java:143)
	at org.sonar.batch.bootstrap.Module.start(Module.java:83)
	at org.sonar.batch.bootstrap.BatchModule.analyze(BatchModule.java:111)
	at org.sonar.batch.bootstrap.BatchModule.analyze(BatchModule.java:106)
	at org.sonar.batch.bootstrap.BatchModule.doStart(BatchModule.java:101)
	at org.sonar.batch.bootstrap.Module.start(Module.java:83)
	at org.sonar.batch.bootstrap.BootstrapModule.doStart(BootstrapModule.java:102)
	at org.sonar.batch.bootstrap.Module.start(Module.java:83)
	at org.sonar.batch.Batch.execute(Batch.java:100)
	at org.sonar.maven.SonarMojo.executeBatch(SonarMojo.java:152)
	at org.sonar.maven.SonarMojo.execute(SonarMojo.java:142)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.codehaus.mojo.sonar.Bootstraper.executeMojo(Bootstraper.java:98)
	... 21 more
Caused by: org.apache.maven.lifecycle.LifecycleExecutionException: Error configuring: org.apache.cxf:cxf-codegen-plugin. Reason: ERROR: Cannot override read-only parameter: classesDirectory in goal: cxf-codegen:wsdl2java
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:723)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkProjectLifecycle(DefaultLifecycleExecutor.java:1205)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(DefaultLifecycleExecutor.java:1038)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:643)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.sonar.maven.Maven2PluginExecutor.concreteExecute(Maven2PluginExecutor.java:52)
	at org.sonar.batch.AbstractMavenPluginExecutor.execute(AbstractMavenPluginExecutor.java:49)
	... 38 more
Caused by: org.apache.maven.plugin.PluginConfigurationException: Error configuring: org.apache.cxf:cxf-codegen-plugin. Reason: ERROR: Cannot override read-only parameter: classesDirectory in goal: cxf-codegen:wsdl2java
	at org.apache.maven.plugin.DefaultPluginManager.validatePomConfiguration(DefaultPluginManager.java:1157)
	at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:705)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:468)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	... 49 more




",02/Feb/12 10:03;rin;Rollback from CXF 2.5.2 to 2.5.0 fixed this problem. So certainly there are some changes in CXF between these versions that are not very compatible...,"09/Feb/12 08:29;ymombrun;I experience the same issue on Windows 64. It works with Maven 3.0.3 but not with Maven 2.2.1.
Additional plugins configured are pmd, findbugs, cobertura and checkstyle.","16/Mar/12 13:44;christoph.linder@dvbern.ch;Bump for CXF 2.5.2, Linux64, maven 2.2.1","27/Apr/12 21:55;kcsham;CXF 2.6.0 maven 2.2.1 mac same issue.

Failed when running mvn install; works when running mvn generate-sources.

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf.version}</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceRoot>${project.build.directory}/generated/cxf</sourceRoot>
                            <wsdlRoot>${basedir}/src/main/wsdl</wsdlRoot>
                            <includes>
                                <include>**/*.wsdl</include>
                            </includes>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
","01/May/12 16:03;dkulp;
I've gone ahead and removed the @readonly for that param.   Since I've never been able to reproduce the issue, I'm not sure if that will really help.   If someone could test tomorrows snaps, that would be great.",,,,,,,,,,,,,,,,
OAuthUtils should use InputStream available on the current message instead of the one from HttpServletRequest,CXF-4001,12536661,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,30/Dec/11 14:08,07/Feb/12 21:51,14/Mar/19 02:29,30/Dec/11 14:10,2.5.1,,,,,,,,,,,,,,,,,2.5.2,,,,JAX-RS,,,,0,,,,,,This is a problem when LoggingInInterceptor is used and POST form data are submitted from the HTTP form in Glassfish   ,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,222344,,,2011-12-30 14:08:58.0,,,,,,0|i14f8n:,233932,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CORS filter fails to fall back to annotations on entire class when it fails to find one for the specific method,CXF-3995,12536112,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,22/Dec/11 02:03,07/Feb/12 21:51,14/Mar/19 02:29,22/Dec/11 02:39,2.5.1,,,,,,,,,,,,,,,,,2.5.2,,,,JAX-RS,,,,0,,,,,,"For a preflight request, if the annotation is not present on the target method or an @OPTIONS method, the code should look at the service class. It does not.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,221795,,,Thu Dec 22 02:39:49 UTC 2011,,,,,,0|i13zen:,231366,,,,,,,,22/Dec/11 02:39;bmargulies;r1222009 contains the fix.,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM's blueprint configuration fails to parse RMAssertion entries,CXF-3993,12536059,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,21/Dec/11 18:00,23/Apr/12 16:45,14/Mar/19 02:29,23/Feb/12 12:54,2.4.5,2.5.1,,,,,,,,,,,,,,,,2.4.7,2.5.3,2.6,,WS-* Components,,,,0,,,,,,"RMAssertion elements are not correctly parsed by the WS-RM's blueprint namespace handler.
This results in 

Unable to parse property RMAssertion due to javax.xml.bind.JAXBException: org.apache.cxf.ws.rmp.v200702.RMAssertion is not known to this context

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,221742,,,Thu Feb 23 10:26:37 UTC 2012,,,,,,0|i0b6jr:,63173,,,,,,,,"23/Feb/12 10:26;ay;there is still a bug in the node extraction, which needs to be fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,
Address information should be added to error message if conduit is not found,CXF-3991,12536033,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,ashakirin,ashakirin,21/Dec/11 15:43,07/Feb/12 21:50,14/Mar/19 02:29,21/Dec/11 22:26,,,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,,,,,0,,,,,,"Hi,

Error message if conduit is not found in SoapTransportFactory is not enough detailed, because transport id is the same for all SOAP based protocols (http://schemas.xmlsoap.org/soap/http). It makes understaning of error difficult if conduit is assigned with custom protocol prefix (for example udp).
Physical address should be added to error message.
Patch is attached.

TODO: check is this patch doesn't produce security hole.

Regards,
Andrei.",,,,,,,,,,,,,,,,,21/Dec/11 15:43;ashakirin;SoapTransportFactory-2.patch;https://issues.apache.org/jira/secure/attachment/12508248/SoapTransportFactory-2.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,221716,,,Wed Dec 21 15:43:45 UTC 2011,,,,,,0|i0b84v:,63430,,,,,,,,21/Dec/11 15:43;ashakirin;Patch,,,,,,,,,,,,,,,,,,,,,,,,,,
"messageConetxt.setScope(MessageContext.HTTP_REQUEST_HEADERS, Scope.APPLICATION) leads to  java.lang.IllegalArgumentException",CXF-3989,12535952,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,21/Dec/11 02:41,07/Feb/12 21:50,14/Mar/19 02:29,13/Jan/12 18:19,2.4.5,2.5.1,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,JAX-WS Runtime,,,,0,,,,,,"Execute this test will get the following IllegalArgumentException :   
 public void testSetScopeForHttpRequestHeaders() { 
        MessageImpl msg = new MessageImpl();
        MessageContext context = new WrappedMessageContext(msg);
        Hashtable headers = new Hashtable<String,List<String>>();
        List<String> values = new Vector<String>();
        values.add(""Value1"");
        headers.put(""Header1"", values);
        context.put(MessageContext.HTTP_REQUEST_HEADERS, headers);
        context.setScope(MessageContext.HTTP_REQUEST_HEADERS, Scope.APPLICATION);     
    }

java.lang.IllegalArgumentException: non-existant property-javax.xml.ws.http.request.headersis specified
	at org.apache.cxf.jaxws.context.WrappedMessageContext.setScope(WrappedMessageContext.java:488)
	at org.apache.cxf.jaxws.context.WebServiceContextImplTest.testSetScope(WebServiceContextImplTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,221635,,,2011-12-21 02:41:45.0,,,,,,0|i0b893:,63449,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update MessageContext.getContextualProperty to check Exchange if the property is of type Class ,CXF-3986,12535830,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Dec/11 11:45,07/Feb/12 21:50,14/Mar/19 02:29,20/Dec/11 12:25,,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,221513,,,2011-12-20 11:45:44.0,,,,,,0|i0b8bz:,63462,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Impossible to handle Locale parameters with country qualifiers ,CXF-3984,12535827,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Dec/11 11:26,07/Feb/12 21:51,14/Mar/19 02:29,20/Dec/11 11:31,,,,,,,,,,,,,,,,,,2.3.9,2.4.6,2.5.2,,JAX-RS,,,,0,,,,,,"Custom ParameterHandlers are ignored which prevents values like ""en_US"" captured correctly;
lets add a special check for Locale and consider always checking ParameterHandlers first - though this needs to be carefully evaluated",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,221510,,,2011-12-20 11:26:08.0,,,,,,0|i0b8c7:,63463,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Addressing related faults do not contain addressing headers,CXF-3981,12535708,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,dkulp,dkulp,19/Dec/11 14:58,03/Apr/13 16:42,14/Mar/19 02:29,13/Jan/12 20:50,2.5.1,,,,,,,,,,,,,,,,,2.4.6,2.5.2,,,WS-* Components,,,,0,,,,,,"
If a message results in a fault due to some issue with the WS-Addressing related headers (for example: OnlyNonAnonymousAddressSupported), the resulting soap:Fault is correct in the body, but there are not addressing headers present on the fault (such as a ""RelatesTo"" header and FaultDetail headers.


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,221392,,,2011-12-19 14:58:43.0,,,,,,0|i0b89z:,63453,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SoapTransportFactory.getConduit(EndpointInfo ei, EndpointReferenceType target) ignores second parameter",CXF-3976,12535147,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ashakirin,ashakirin,14/Dec/11 13:00,19/Dec/11 16:15,14/Mar/19 02:29,15/Dec/11 16:19,2.5,,,,,,,,,,,,,,,,,2.4.6,2.5.1,,,Core,,,,0,,,,,,"Hi,

I faced the problem in custom conduit selector scenario.

Use case: custom conduit selector (extends AbstractConduitSelector) resolves endpoints dynamically (using external ServiceRegistry).

When address is resolved, resolved address cannot be set to AbstractConduitSelector.endpoint, because different concurrent consumers using the same configuration can resolve endpoint differently.
Therefore address is just set to the message: message.set(Message.ENDPOINT_ADDRESS, resolvedAddress)
In this case addresses in message:  message.get(Message.ENDPOINT_ADDRESS) and in endpoint: AbstractConduitSelector.endpoint.getEndpointInfo().getAddress() are different.

AbstractConduitSelector check it and prepares EndpointReferenceType for this case:
{code:java}
                       String add = (String)message.get(Message.ENDPOINT_ADDRESS);
                        if (StringUtils.isEmpty(add)
                            || add.equals(ei.getAddress())) {
                            replaceEndpointAddressPropertyIfNeeded(message, add);
                            selectedConduit = conduitInitiator.getConduit(ei);
                        } else {
                            EndpointReferenceType epr = new EndpointReferenceType();
                            AttributedURIType ad = new AttributedURIType();
                            ad.setValue(add);
                            epr.setAddress(ad);
                            selectedConduit = conduitInitiator.getConduit(ei, epr);
                        }
{code}
Problem: unfortunately SoapTransportFactory.getConduit(EndpointInfo ei, EndpointReferenceType target) ignores second parameter and calls SoapTransportFactory.getConduit(EndpointInfo ei). In my case it causes wrong Conduit resolving.

Proposal: update SoapTransportFactory.getConduit() in way that it uses address in EndpointReferenceType if it is provided.

Patch is attached.

Regards,
Andrei.",Windows,,,,,,,,,,,,,,,,14/Dec/11 13:09;ashakirin;SoapTransportFactory.patch;https://issues.apache.org/jira/secure/attachment/12507346/SoapTransportFactory.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,220831,,,Wed Dec 14 13:09:17 UTC 2011,,,,,,0|i0b8a7:,63454,,,,,,,,14/Dec/11 13:09;ashakirin;Patch,,,,,,,,,,,,,,,,,,,,,,,,,,
Making non-default bus instances also appear in the JMX monitoring,CXF-3973,12534685,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,11/Dec/11 21:18,19/Dec/11 16:15,14/Mar/19 02:29,12/Dec/11 22:53,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,,,,,0,,,,,,"Currently, only the default bus instance is shown in the JMX monitor.

Removing the name parameter ""cxf"" from the annotation at InstrumentationManagerImpl.setBus.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,220406,,,2011-12-11 21:18:53.0,,,,,,0|i14f9j:,233936,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WrapperStyleNameCollisionValidator doesn't take the -bareMethods flag into consideration,CXF-3969,12534509,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,09/Dec/11 17:33,19/Dec/11 16:15,14/Mar/19 02:29,09/Dec/11 18:13,2.4.4,2.5,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,Tooling,,,,0,,,,,,"
The bareMethods flag can be used to force methods into bare mode to get around various WSDL issues.  However, the WrapperStyleNameCollisionValidator doesn't take it into account and causes a validation failure even when the generated code should be OK due to the bare style.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,220231,,,2011-12-09 17:33:20.0,,,,,,0|i0b8ev:,63475,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLToJava Error: ...is already defined at... when referencing deployed wsdl,CXF-3968,12534496,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pbaker01,pbaker01,09/Dec/11 16:40,19/Dec/11 16:15,14/Mar/19 02:29,12/Dec/11 20:30,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,Tooling,,,,0,wsdl2java,,,,,"cxf-codegen-plugin generates service stubs but is unable to generate client stubs. When generating the service stubs the wsdl and xsds are referenced localy within the project space. When generating the client code the same cxf-codegen-plugin description is used that generated the service stubs except the wsdl location is changed to refer to the deployed wsdl.  

The error reported is:
 [ERROR] Thrown by JAXB: 'xxxx' is already defined

Where xxxx is a type that is defined in an xsd that is referred to by multiple files (wsdl and another xsd).  

Steps to recreate - files to be attached

*CXFService*
# Create Dynamic Web Project that is maven enabled
# Create WebContent/WEB-INF/web.xml
# Create WebContent/WEB-INF/wsdl/myservice/MyService.wsdl
# Create WebContent/WEB-INF/xsd/myservice/MyService.xsd
# Create WebContent/WEB-INF/xsd/mycommon/MyCommon.xsd
# Run wsdl2java 
# Deploy service (no changes) to JBoss (i.e. jboss:hard-deploy)

*CXFClient*
# Create Dynamic Web Project that is maven enabled
# Create WebContent/WEB-INF/web.xml
# Run wsdl2java (referece deployed wsdl)
http://localhost:8080/CXFService-0.0.1-SNAPSHOT?wsdl

Errors are generated... 

Work around (for this issue) is to comment out the MyCommon.xsd include in the MyService.wsdl.  But this causes the wsdl editor graphic to display a linkage error.  But asside from that with the duplicate include removed the cient stubs can be generated.

Note originally I thought that adding the extraargs resolved the issue. But it appears that when -v (version) is added then only the version is displayed.  There is no code generation and consequently no errors.
  <extraargs>
     <extraarg>-v</extraarg>
     <extraarg>-verbose</extraarg>
  </extraargs>




","Windows 7 x64, Eclipse Helios, Maven Plugin (Sonatype - 0.12.1), Maven 3.0.3, cxf-codegen-plugin 2.5.0, JBoss 6.",,,,,,,,,,,,CXF-3927,,,,09/Dec/11 17:01;pbaker01;CXF-3968.jpg;https://issues.apache.org/jira/secure/attachment/12506751/CXF-3968.jpg,09/Dec/11 16:53;pbaker01;CXF-3968.zip;https://issues.apache.org/jira/secure/attachment/12506750/CXF-3968.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,220218,,,Fri Dec 09 17:47:17 UTC 2011,,,,,,0|i13zdj:,231361,,,,,,,,09/Dec/11 16:53;pbaker01;The attached zip file contains the CXFService and CXFClient projects (Eclipse - Helios).  The key files are the wsdl/xsd and the pom files.  To duplicate the issue the service stubs are generated and then the service is disployed to JBoss AS6.  Then when trying to generate the client stubs using the deployed wsdl errors are generated for dup types.,"09/Dec/11 17:01;pbaker01;This image shows this ""little"" issue that I have when I comment out the duplicate include.  By commenting out the duplicate include the sources can be generated but then some wsdl/xsd tools have problem resolving the types.","09/Dec/11 17:47;pbaker01;Also related to thread:
http://cxf.547215.n5.nabble.com/WSDLToJava-Error-is-already-defined-at-td5010580.html#a5060223
",,,,,,,,,,,,,,,,,,,,,,,,
"When client sends invalid XML, JAX-RS returns 500 instead of 4xx",CXF-3966,12534330,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,artbristol,artbristol,08/Dec/11 10:42,19/Dec/11 16:15,14/Mar/19 02:29,09/Dec/11 16:53,2.5,,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,JAX-RS,,,,0,jaxb,,,,,"When unmarshalling an invalid client request, at org.apache.cxf.jaxrs.provider.AbstractJAXBProvider#handleJAXBException creates a response of 500 Internal Server Error. I think this should be 400 Bad Request or 415 Unsupported Media Type.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,220052,,,2011-12-08 10:42:48.0,,,,,,0|i0b8n3:,63512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Codegen plugin tries to use classes dir as wsdl,CXF-3964,12534274,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,07/Dec/11 23:33,24/Feb/12 06:53,14/Mar/19 02:29,08/Dec/11 02:34,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,Core,,,,0,,,,,,"Under circumstances explained in MSITE-622, the maven-artifact-resolver comes up with a bogus answer to resolving the WSDL artifact, and returns a classes directory!

At least, detect this and don't try to use it.

Better, stop using that artifact-resolver component and call what it calls if that gets less ridiculous behavior.
",,,,,,,,,,,,,,,,,10/Jan/12 18:58;owen.farrell;cxf-multi-module-example.zip;https://issues.apache.org/jira/secure/attachment/12510080/cxf-multi-module-example.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2012-01-05 15:11:27.914,,,no_permission,,Unknown,,,,,,,,,,,219996,,,Fri Feb 24 06:50:18 UTC 2012,,,,,,0|i0b8gv:,63484,,,,,,,,"08/Dec/11 01:28;bmargulies;I made the code throw a proper Mojo exception if it can't find a WSDL, and I wrote code to 
refuse to believe that a directory can be a WSDL.","08/Dec/11 02:34;bmargulies;The fixes here make the plugin diagnose the M3 bug politely, and also removes a bunch of unwanted code.","05/Jan/12 15:11;owen.farrell;
It seems that this enhancement requires the WSDL to be added as an explicit project dependency. But as a result, transitive dependencies end up being unnecessarily included.


Here's an example scenario:


I implement a CXF-based web service (named hello-service). CXF will bring Spring along for the ride. I attach the WSDL as a build artifact (using the cxf-java2ws-plugin) as part of the build process (hello-service.wsdl).

When I create a web service client via the cxf-codegen-plugin (v2.5.1), hello-service.wsdl now has to be included as a dependency. After adding the WSDL as a dependency, Spring gets included as a transitive dependency, even though my web service client only needs the JAX-WS API. And now my classpath is bloated with all these libraries which (may) never get used.
","05/Jan/12 16:31;bmargulies;This wasn't an enhancement, it was a bug fix. The feature of using wsdls as dependencies was in there all along. It just failed in some cases. Could you please explain if you are in fact seeing a different behavior in 2.5.1, or are you just trying out the 'wsdl as dependency' feature and not liking the results?
","10/Jan/12 12:51;owen.farrell;I'm definitely noticing a difference in behavior. In 2.5.0, the WSDL does not need to appear in the <dependencies> list of my project. In 2.5.1, it absolutely does.

Perhaps this is because I'm building a multi-module project (where the WSDL was attached as an artifact in a previous module).

Would it help if I attached a sample Maven project that illustrated my point?","10/Jan/12 15:17;bmargulies;YEs it would! It seems like you've found a bug in which I accidently broke the 'non-dependency' case, and a sample would be just the thing.

If you really want to be a hero, create a patch with an integration test in systests/wsdl_maven/codegen/src/it. If you're not careful, you'll end up as a committer!

","10/Jan/12 18:58;owen.farrell;Sample Maven project illustrating a change in behavior between 2.5.0 and 2.5.1.

The version of CXF used (both for plugins and as a dependency) is declared in the parent POM as a property. Changing the value from 2.5.0 to 2.5.1 will cause the client module build to fail.","10/Jan/12 19:00;owen.farrell;And (assuming you agree there is an issue) I would love to take a crack at the patch for this. I'm just not fluent enough in the CXF codebase to know where it should go.

<wishfulThinking>Being a CXF committer someday</wishfulThinking>","10/Jan/12 22:06;bmargulies;I'm happy to help you find your way around here.

All the code of the maven plugin is in maven-plugins/codegen-plugin. If you want to take a run at making the fix, first get a tree from svn. Then set up your failing case in the place I pointed to above. If you need help dealing with the maven-invoker-plugin, just let me know.

Then dive headfirst into the plugin, and gain if you need some guidance just ask.
","24/Feb/12 06:50;owen.farrell;I opened up issue CXF-4136 to track this change in behavior. I came up with a patch that I think covers all scenarios (yours, mine and the issue described in CXF-4029).",,,,,,,,,,,,,,,,,
When using spring/spring-dm servers are started before the bus is initialized,CXF-3962,12534244,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,07/Dec/11 20:33,19/Dec/11 16:15,14/Mar/19 02:29,07/Dec/11 21:30,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,Core,,,,0,,,,,,"
With a spring-dm OSGi setup with a jaxws:endpoint, the call to ServerImpl.start() is done before the call to Bus.initialize().   Thus, any initialization that would be done via a BusLifeCycleListener would not apply.  For example, if a BusLifeCycleListener tried to register a ServerLifeCycleListener that should apply to the server, the server listener would not get called.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,219966,,,2011-12-07 20:33:44.0,,,,,,0|i0sxm7:,166923,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SoapTransportFactory: confused exception by unknown transport protocol,CXF-3961,12534184,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,ashakirin,ashakirin,07/Dec/11 13:57,19/Dec/11 16:15,14/Mar/19 02:29,07/Dec/11 17:31,2.5,,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,Core,,,,0,,,,,,"If custom transport conduit is resolved via SoapTransportFactory.getConduit(EndpointInfo ei) and transport is not found in ConduitInitiatorManager, following exception is thrown:

java.lang.NullPointerException
        at org.apache.cxf.binding.soap.SoapTransportFactory.getConduit(SoapTransportFactor
y.java:228)[131:org.apache.cxf.bundle:2.4.2]

The reason is following: ConduitInitiatorManager.getConduitInitiatorForUri() doesn't throw BusException in case if transport is not found, therefore line ""return conduitInit.getConduit(ei)"" throws NPE.

I see two possible solutions:
A) throw BusException in ConduitInitiatorManager.getConduitInitiatorForUri() in the same way as ConduitInitiatorManager.getConduitInitiator()
B) Check for null in SoapTransportFactory

(A) is risky, because it has invluence on all calls of ConduitInitiatorManager.getConduitInitiatorForUri()
Patch for (B) is attached.
",Windows,,,,,,,,,,,,,,,,07/Dec/11 13:57;ashakirin;SoapTransportFactory.patch;https://issues.apache.org/jira/secure/attachment/12506443/SoapTransportFactory.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-12-07 17:31:22.58,,,no_permission,,Unknown,,,,,,,,,,,219906,,,Wed Dec 07 17:31:22 UTC 2011,,,,,,0|i0b8fz:,63480,,,,,,,,07/Dec/11 13:57;ashakirin;Patch,"07/Dec/11 17:31;dkulp;
Patch  applied.   Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-WS: @PostConstruct methods invoked twice in Spring-based projects,CXF-3959,12534038,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rschaeuble,rschaeuble,06/Dec/11 15:09,19/Dec/11 16:15,14/Mar/19 02:29,07/Dec/11 16:58,2.4.2,2.5,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JAX-WS Runtime,,,,0,,,,,,"Under the following circumstances, @PostConstruct methods on classes exported as JAX-WS WebService are invoked twice:
- The application uses Spring as IoC container
- Spring's support for JSR 250 annotations is active (using the CommonAnnotationBeanPostProcessor bean or <context:annotation-config/>
- The exported bean is declared as Spring bean in the application context
- The <jaxws:endpoint> declaration refers to the declared bean (<jaxws:endpoint implementor=""#beanName""/>

The last point is important:
- <jaxws:endpoint implementor=""the.bean.class.name""/> *does not* not show the wrong behavior
- <bean id=""theBean"" class=""the.bean.class.name""/>
  <jaxws:endpoint implementor=""#theBean'""/> *does* show the wrong behaviur
  
I have built an example application (based on CXF's java_first_spring_support sample) that shows the problem. It contains two classes:
1. PostConstructCalledOnce: this class is exported using the <jaxws:endpoint implementor=""the.bean.class.name""/> synxtax
2. PostConstructCalledTwice.java: this class is exported using the <jaxws:endpoint implementor=""#theBean'""/>

Both classes contain a postConstruct method; both method print the class's name to the console. When the application is started (""mvn -Pserver""), it can be observed that PostConstructCalledOnce#postConstruct is called once and PostConstructCalledTwice#postConstruct is called twice.

Desired behavior: both postConstruct methods should only be invoked once.

Workaround:
1. Annotate the affected classes with CXF's @NoJSR250Annotations annotation
2. Use the <jaxws:endpoint implementor=""the.bean.class.name""/> syntax. Problem: This way, Spring is not able to wrap the bean with a proxy (e.g. for transaction support)",,,,,,,,,,,,,,,,,06/Dec/11 15:10;rschaeuble;cxf-postconstruct-bug.zip;https://issues.apache.org/jira/secure/attachment/12506260/cxf-postconstruct-bug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,219764,,,Tue Dec 06 15:10:38 UTC 2011,,,,,,0|i0b8mv:,63511,,,,,,,,06/Dec/11 15:10;rschaeuble;Sample application that demonstrates the problem.,,,,,,,,,,,,,,,,,,,,,,,,,,
Unmarshalling error when using collections of subtypes with the StaxTransformFeature and 'out' transformations,CXF-3958,12534012,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,gazpowell,gazpowell,06/Dec/11 11:04,19/Dec/11 16:15,14/Mar/19 02:29,06/Dec/11 21:56,2.4,2.5,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,Configuration,Core,JAXB Databinding,,0,,,,,,"We are using the StaxTransformFeature to aid with the versioning of a number or our web services but have hit upon a problem when invoking a web method that returns a collection of subtypes. When the StaxTransformFeature (specifically, the out element transforms) are used, the resultant SOAP payload is malformed, and JAXB cannot unmarshall the collection. Below is an example of the payload we get back:

       <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""xsi"">
           <soap:Body>
               <ns2:getVehiclesResponse xmlns:ns2=""example-1.0"">
                   <vehicles>
                       <vehicle xsi:type=""ns2:bicycle"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
                           <name>Marin</name>
                       </vehicle>
                       <vehicle xsi:type=""ns2:car"">
                           <name>Ferrari</name>
                       </vehicle>
                       <vehicle xsi:type=""ns2:motorcycle"">
                           <name>Yamaha</name>
                       </vehicle>
                   </vehicles>
               </ns2:getVehiclesResponse>
           </soap:Body>
       </soap:Envelope>

When we invoke the same service, but without the StaxTransformFeature, then we get correct xml and JAXB is happy. A correct payload is shown below. As you can clearly see, the difference between the two is that the correct one includes 'xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""' for each instance of the subtype, whereas the broken one, only has it for the first element in the collection. I have attached a sample project in a zip file that demonstrated the problem. It's a simple maven project, so just run 'mvn test' to see the test failure.

       <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
           <soap:Body>
               <ns2:getVehiclesResponse xmlns:ns2=""example-1.0"">
                   <vehicles>
                       <vehicle xsi:type=""ns2:bicycle"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
                           <name>Marin</name>
                       </vehicle>
                       <vehicle xsi:type=""ns2:car"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
                           <name>Ferrari</name>
                       </vehicle>
                       <vehicle xsi:type=""ns2:motorcycle"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
                           <name>Yamaha</name>
                       </vehicle>
                   </vehicles>
               </ns2:getVehiclesResponse>
           </soap:Body>
       </soap:Envelope>

This is a BLOCKER issue for us at the moment and we require urgent resolution. Can you please advise as to whether there is something we can do to either correct or work around the problem.",,,,,,,,,,,,,,,,,06/Dec/11 11:05;gazpowell;cxf-versioning-bug.zip;https://issues.apache.org/jira/secure/attachment/12506243/cxf-versioning-bug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-12-06 21:56:22.039,,,no_permission,,Unknown,,,,,,,,,,,219738,,,Tue Dec 06 21:56:22 UTC 2011,,,,,,0|i0b8m7:,63508,,,,,,,,"06/Dec/11 21:56;dkulp;
A bug in the OutTransformWriter.   ",,,,,,,,,,,,,,,,,,,,,,,,,,
"JAX-WS HandlerResolver consulted for ServiceImpl.createPort, but not for createDispatch",CXF-3956,12533943,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,eirbjo,eirbjo,05/Dec/11 21:22,19/Dec/11 16:15,14/Mar/19 02:29,08/Dec/11 19:38,,,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,,,,,0,,,,,,"Using 2.5.0, service.setHandlerResolver has no effect when later creating a Dispatch:

Service service = Service.create(wsdl, SERVICE_QNAME);
service.setHandlerResolver(new MyHandlerResolver());

Dispatch<SOAPMessage> dispatch = service.createDispatch(PORT_QNAME, SOAPMessage.class, Service.Mode.MESSAGE);
List<Handler> handlerChain = dispatch.getBinding().getHandlerChain();
handlerChain.add(new SomeHandler());
dispatch.getBinding().setHandlerChain(handlerChain);

SomeHandler is invoked, but any handlers returned by MyHandlerResolver.getHandlerChai() are ignored.

Is this a bug in the CXF JAW-WS implementation?
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,219669,,,2011-12-05 21:22:09.0,,,,,,0|i0b8fb:,63477,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wadl2java doesn't find types with underscore in their name,CXF-3953,12533870,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,odendahl,odendahl,05/Dec/11 12:04,19/Dec/11 16:15,14/Mar/19 02:29,06/Dec/11 12:01,2.5,,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JAX-RS,,,,0,,,,,,"wadl2java has problems when type names in XSD have underscores in them. The generated Java interface will be wrong.

Example from the CXF SVN:
The generated Java interface BooStore.java for systests/jaxrs/src/test/resources/wadl/bookstoreImport.xsd
contains this line:
    public void addBook(@PathParam(""bookid"") int bookid, Book book) {

In systests/jaxrs/src/test/resources/wadl/schemas/book.xsd, change the type name ""book"" to ""bo_ok"". After this change, the generated interface looks like this:
    public void addBook(@PathParam(""bookid"") int bookid) {

If the underscore was used in a type that is used for parameters, then the parameter will be missing in the interface.
If the type is used as a response, then it will be replaced by the generic class ""Response"".

The problem is most likely that the class name for the type bo_ok is ""BoOk"" (as expected if you're familiar with JAXB), but wadl2java does not expect this kind of renaming.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-12-06 12:01:16.426,,,no_permission,,Unknown,,,,,,,,,,,219596,,,Tue Dec 06 12:01:16 UTC 2011,,,,,,0|i0b8fr:,63479,,,,,,,,"06/Dec/11 12:01;sergey_beryozkin;thanks for the analysis, made it easy for me to figure out where the problem was",,,,,,,,,,,,,,,,,,,,,,,,,,
Spring and blueprint silently create named busses when needed,CXF-3951,12533671,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,02/Dec/11 18:47,19/Dec/11 16:15,14/Mar/19 02:29,02/Dec/11 20:06,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,Core,,,,0,,,,,,"If using a bus=""foo"" type attribute on most of the spring and blueprint beans in cxf, if a ""foo"" bus isn't in the context, it will silently create a foo bus.   This can cause a lot of confusion if ""foo"" is a typo or something as expected bus config may not get picked up, etc...  The only bus that should always be created and available is the default bus (""cxf"").  All other value should be explicit and throw exceptions if there isn't a matching <cxf:bus name=""foo"".../> definition to define it.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,219398,,,2011-12-02 18:47:16.0,,,,,,0|i0sxmf:,166924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NoClassDefFoundError when using CXF JAX-RS in OSGi environment,CXF-3949,12533635,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,metatech,metatech,02/Dec/11 14:54,02/May/13 02:29,14/Mar/19 02:29,09/Jul/12 12:13,2.3.2,,,,,,,,,,,,,,,,,2.4.9,2.5.5,2.6.2,2.7,JAX-RS,,,,0,,,,,,"When using the CXF JAX-RS implementation in an OSGi environment, the CXF implementation might fail to initialize properly.
The problem is non-consistently reproduceable, but more likely to occur on machines with high parallelism (due to several cores/threads).
The CXF bundle (""org.apache.cxf.bundle"") has a dependency on the JSR 311 API JAR (""org.apache.servicemix.specs.jsr311-api-1.1"").
But the dependency is marked as ""resolution=optional"" in the OSGi headers of the CXF bundle manifest.
As a result, if the JSR-311 bundle is not yet fully started when the CXF bundle is started, OSGi does not ""wire"" these packages into the imports of the CXF bundle:
javax.ws.rs
javax.ws.rs.core
javax.ws.rs.ext

The error is the following : 
java.lang.NoClassDefFoundError: Could not initialize class org.apache.cxf.jaxrs.utils.JAXRSUtils
See similar error DOSGI-1

I guess that these packages are marked as optional because CXF can be used in an environment where no JAX-RS is available, and it works fine as long as the application does not use this API.  However, when an application is known to use the API, the dependency marked as ""optional"" is not correct.

Long-term solution : split CXF bundle into smaller bundles (like Jetty).

Workaround : edit the manifest of the CXF bundle, and remove the ""resolution=optional"" for the packages which are known to be used by the application.  Tip : replace ""resolution"" by ""resolutio2"", this tricks prevents from changing the alignment of the 80-characters columns.
 ",ServiceMix 4.3,28800,28800,,0%,28800,28800,,,,,,,,,SMX4-860,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-12-05 15:59:00.899,,,no_permission,,Moderate,,,,,,,,,,,219362,,,Thu Apr 04 13:14:37 UTC 2013,,,,,,0|i05u4n:,31978,,,,,,,,"05/Dec/11 15:59;dkulp;
This is working properly at this point.   The JSR-311 bundle needs to be installed prior to installing the CXF bundle.  (or the CXF bundle would need to be refreshed after installing it)

If you use the karaf features file that we provide with CXF, all of this is taken care of for you and the api jars are set with a much earlier start level to make sure they are installed and started first.
","05/Dec/11 17:18;sergey_beryozkin;I updated the cxf-jaxrs bundle only to drop the resolution=optional.

Metatech, I guess we should document what needs to be done in case of the DOSGi multibundle distribution (which depends on cxf-minimal bundle); if you could experiment with setting up the start-up levels then it would be great.

Cheers, Sergey","06/Dec/11 09:43;metatech;Daniel,
I did not install CXF manuallly, it got installed by default in the ServiceMix 4.3 distribution.
The problem is, I think, that the CXF bundle gets installed a few milliseconds too early, before the JSR 311 is completely installed, which means that the OSGi framework does not wait for the JSR 311 bundle to become available, but ignores this dependency and installs the CXF bundle without it.
In Felix 3.0.9 (provided in SMX 4.3), manually executing a OSGI refresh of both bundles does not help, because the class ModuleImpl caches the dependencies (in member variable ""m_cachedRequirements""), and the only way to update the dependencies is to uninstall/install the bundle, which cannot be practically performed if many other bundles depend on it.
Regarding the change of the start-level, I experienced that it does not work in all cases, but that it merely reduces the window of the race condition, see my comment in https://issues.apache.org/jira/browse/SMX4-744.
The ideal solution would be that the optional features of the CXF bundle are delivered as separate optional bundles, but I understand that this will create a higher complexity for the CXF distribution.
Regards.","19/Dec/11 14:19;metatech;New info : the problem happened again, with the edited manifest workaround present, therefore the origin of the race condition is not the dependency of the CXF bundle, but something else, most probably not related to CXF itself.

Unfortunately, the ""PropertyBatchUpdateException"" of Spring seems to drop one level of ""caused by"" on the exception, so it is not easy to tell which class exactly is not found.

Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'myBean' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class org.apache.cxf.jaxrs.utils.JAXRSUtils
","20/Dec/11 03:50;ffang;Hi,

Is there any chance that you can append a testcase(src project which we can build and deploy) to reproduce it?

Freeman","20/Dec/11 08:23;metatech;Freeman,
The problem is not really reproduceable.  It occurred only twice : 
1. on one of the 2 nodes on a large machine (similar to our production machine)
2. on a laptop under a debugging session, with breakpoints in SMX deploying/starting tasks (SpringOsgiExtenderThread, FelixStartLevel, Blueprint Extender, DirectoryWatcher, ...).  
This leads me to believe that this is really a narrow race condition that can occur under some very specific timings, which the ""start-level"" workaround does not allow to fix.

","11/Jan/12 10:27;metatech;The problem happened again, this time with a possibility to debug.
It looks like a race condition in the OsgiLocator between the JSR 311 bundle still starting (trying to register the RuntimeDelegate) and the application bundle trying to retrieve the RuntimeDelegate.
The problem still happens even after several SMX restarts.
Any idea ?

{code}
""SpringOsgiExtenderThread-16"" prio=10 tid=0x08ba1400 nid=0x316c runnable [0x8aeb9000]
   java.lang.Thread.State: RUNNABLE
	at org.apache.servicemix.specs.locator.OsgiLocator.locate(OsgiLocator.java:58)
	- locked <0x925e62d8> (a java.lang.Class for org.apache.servicemix.specs.locator.OsgiLocator)
	at javax.ws.rs.ext.FactoryFinder.find(FactoryFinder.java:79)
	at javax.ws.rs.ext.RuntimeDelegate.findDelegate(RuntimeDelegate.java:105)
	at javax.ws.rs.ext.RuntimeDelegate.getInstance(RuntimeDelegate.java:91)
	- locked <0x91fd0a48> (a java.lang.Class for javax.ws.rs.ext.RuntimeDelegate)
	at javax.ws.rs.core.MediaType.<clinit>(MediaType.java:44)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.<clinit>(JAXRSUtils.java:104)
	at org.apache.cxf.jaxrs.model.OperationResourceInfo.checkMediaTypes(OperationResourceInfo.java:169)
	at org.apache.cxf.jaxrs.model.OperationResourceInfo.<init>(OperationResourceInfo.java:74)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createOperationInfo(ResourceUtils.java:341)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:218)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createClassResourceInfo(ResourceUtils.java:204)
	at org.apache.cxf.jaxrs.JAXRSServiceFactoryBean.setResourceClassesFromBeans(JAXRSServiceFactoryBean.java:214)
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(JAXRSServerFactoryBean.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1114)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:900)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1358)
{code}

{code}
""FelixStartLevel"" daemon prio=10 tid=0x8e39ec00 nid=0x3003 waiting for monitor entry [0x8ec73000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.servicemix.specs.locator.OsgiLocator.register(OsgiLocator.java:44)
	- waiting to lock <0x925e62d8> (a java.lang.Class for org.apache.servicemix.specs.locator.OsgiLocator)
	at org.apache.servicemix.specs.locator.Activator.register(Activator.java:116)
	at org.apache.servicemix.specs.locator.Activator.start(Activator.java:70)
	- locked <0x970ce220> (a org.apache.servicemix.specs.locator.Activator)
	at org.apache.felix.framework.util.SecureAction.startActivator(SecureAction.java:629)
	at org.apache.felix.framework.Felix.activateBundle(Felix.java:1842)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1759)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1163)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:662)

{code}
",11/Jan/12 10:29;metatech;Maybe SMX4-860 will make the problem disappear ?,"11/Jan/12 10:55;sergey_beryozkin;> Maybe SMX4-860 will make the problem disappear ?

Hopefully, CXF & DOSGi 1.3-snapshot also have a 1.9.0 dependency
 ","11/Jan/12 14:11;metatech;I found 2 workarounds to make it work with ServiceMix 4.3 (which includes component ""specs-1.7.0"") : 
1. osgi:bundle-level <ID of org.apache.servicemix.specs.jsr311-api-1.1> 50
2. osgi:bundle-level <ID of application using CXF> 80 #for *all* applications using CXF
","12/Apr/12 07:45;klevenzs;Hi,

I found another workaround to get rid of this issue:

public class CXFNonSpringJaxrsServlet2 extends CXFNonSpringJaxrsServlet {

  static {
    // workaround for OSGi environment
    // ensure that the correct JAX-RS implementation is loaded
    RuntimeDelegate runtimeDelegate = new org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl();
    RuntimeDelegate.setInstance(runtimeDelegate);
  }
}

Maybe you can make this as standard for the original CXFNonSpringJaxrsServlet. ","09/Jul/12 12:13;sergey_beryozkin;Hi Stephan, I added the static initializer to CXFNonSpringJaxrsServlet, thanks ","04/Apr/13 13:14;sergey_beryozkin;FYI, I had to move the static initializer from CXFNonSpringJaxrsServlet to its new subclass, CXFJaxrsRuntimeDelegateServlet, in order to fix the regression reported at https://issues.apache.org/jira/browse/CXF-4825.

Also, check https://issues.apache.org/jira/browse/CXF-4825: the idea is to have the runtime not depending on RuntimeDelegate completely and make sure the 'foreign' instances like Response are copied, for example, when the application code uses an active RuntimeDelegate. I'm actually hoping that this new CXFJaxrsRuntimeDelegateServlet will prove to be redundant, if not now then soon enough  ",,,,,,,,,,,,,,
CXF 2.3.x does not configure the Future TTL value for Timestamp processing,CXF-3948,12533624,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,02/Dec/11 13:51,19/Dec/11 16:15,14/Mar/19 02:29,02/Dec/11 13:54,2.3.7,,,,,,,,,,,,,,,,,2.3.8,,,,,,,,0,,,,,,"CXF 2.3.x does not configure the Future TTL value for Timestamp processing, meaning that any future dated timestamps (more than 60s in the future) are rejected, and cannot be accepted by configuration.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,219351,,,2011-12-02 13:51:57.0,,,,,,0|i0b8xr:,63560,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractBeanDefinitionParser loses Bus names,CXF-3947,12533492,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,01/Dec/11 19:37,02/May/13 02:29,14/Mar/19 02:29,01/Dec/11 20:06,,,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,Core,,,,0,,,,,,"
If a bean parse returns true from hasBusProperty(), but the call to parseAttributes was not able to find a bean of the given name, the bus name is lost.

In parseAttributes, if a value is specified for the bus attribute, we need to make sure we set the wiring attribute to the proper bus name.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,219220,,,2011-12-01 19:37:13.0,,,,,,0|i0b8db:,63468,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"<property name=""namespacePrefixes"" ref=""namespaceMap"" /> causes exception due to immutable Map being used in JAXBElementProvider",CXF-3946,12533472,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,sergey_beryozkin,jrfeitosamm,jrfeitosamm,01/Dec/11 16:17,19/Dec/11 16:15,14/Mar/19 02:29,02/Dec/11 22:40,2.5,,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JAX-RS,JAXB Databinding,,,0,,,,,," I was trying to set a specific namespace prefix for a qualified REST xml.

I configured beans.xml and included package-info.java as below:

@javax.xml.bind.annotation.XmlSchema(    namespace=GoldenKey.NS,
                                        elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED,
                                        attributeFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED,
                                        xmlns={@javax.xml.bind.annotation.XmlNs(prefix = GoldenKey.NS_QUALIFIER , namespaceURI=GoldenKey.NS)}
                                     )

package com.upmc.tdc.xml;


beans.xml snippets:

     <jaxrs:server id=""goldenKey_rest"" address=""/rest"">
       <jaxrs:serviceBeans>
         <ref bean=""goldenKey_bean"" />
       </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key=""json"" value=""application/json"" />
            <entry key=""xml"" value=""application/xml"" />
        </jaxrs:extensionMappings>
         <jaxrs:providers>
          <ref bean=""dateProvider"" />
          <ref bean=""exceptionMapper"" />
          <ref bean=""jaxbProvider"" />
        </jaxrs:providers>
     </jaxrs:server>
    
     <jaxws:endpoint serviceName=""GoldenKey"" endpointName=""GoldenKeyPort"" id=""goldenKey_soap"" implementor=""#goldenKey_bean"" address=""/soap"">
        <jaxws:binding>
            <soap:soapBinding version=""1.2"" />
        </jaxws:binding>
        <jaxws:features>
            <bean class=""org.apache.cxf.feature.LoggingFeature"">
                <property name=""prettyLogging"" value=""true"" />
            </bean>
        </jaxws:features>
    </jaxws:endpoint>

     <bean id=""goldenKey_bean"" class=""com.upmc.tdc.server.GoldenKeyImpl""/>
     <bean id=""dateProvider"" class=""com.upmc.tdc.server.parameterhandler.DateParameterHandler""/>
     <bean id=""exceptionMapper"" class=""com.upmc.tdc.exception.ExceptionMapper""/>
    
     <bean id=""jaxbProvider"" class=""org.apache.cxf.jaxrs.provider.JAXBElementProvider"">
        <property name=""marshallerProperties"" ref=""propertiesMap"" />
         <property name=""namespacePrefixes"" ref=""namespaceMap"" />
        <property name=""enableBuffering"" value=""true"" />
    </bean>
   
     <util:map id=""propertiesMap"">
        <entry key=""jaxb.formatted.output"">
            <value type=""java.lang.Boolean"">true</value>
            <!--  prints indented XML for REST, useful for testing, can be disabled for production -->
        </entry>
    </util:map>
   
    <util:map id=""namespaceMap"">
        <entry key=""http://server.tdc.upmc.com/""  value=""GoldenKey""/>
    </util:map>

This setup throws the following exception:

java.lang.UnsupportedOperationException
    at java.util.AbstractMap.put(AbstractMap.java:203)
    at java.util.AbstractMap.putAll(AbstractMap.java:273)
    at org.apache.cxf.jaxrs.provider.JAXBElementProvider.marshalCollectionMember(JAXBElementProvider.java:327)
    at org.apache.cxf.jaxrs.provider.JAXBElementProvider.marshalCollection(JAXBElementProvider.java:293)
    at org.apache.cxf.jaxrs.provider.JAXBElementProvider.writeTo(JAXBElementProvider.java:232)
    at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.serializeMessage(JAXRSOutInterceptor.java:257)
    at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.processResponse(JAXRSOutInterceptor.java:144)
    at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.handleMessage(JAXRSOutInterceptor.java:83)
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
<clipped>

Lines 325-330 of JAXBElementProvider.java contain the following code:
        if (ns.length() > 0) {
            Map<String, String> map = Collections.singletonMap(ns, ""ns1"");
            map.putAll(nsPrefixes);
            setNamespaceMapper(ms, map);
        }
        marshal(obj, cls, genericType, enc, os, mt, ms);

The call Collections.singletonMap(...) is below:

 /**
     * Returns an immutable map, mapping only the specified key to the
     * specified value.  The returned map is serializable.
     *
     * @param key the sole key to be stored in the returned map.
     * @param value the value to which the returned map maps <tt>key</tt>.
     * @return an immutable map containing only the specified key-value
     *         mapping.
     * @since 1.3
     */
    public static <K,V> Map<K,V> singletonMap(K key, V value) {
        return new SingletonMap<>(key, value);
    }

So it seems that
            map.putAll(nsPrefixes);

should fail as it is failing when called because the map is immutable.

In case there are other prefixes to add it seems that the map should be of another type....",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,219200,,,2011-12-01 16:17:57.0,,,,,,0|i0b8mn:,63510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CounterRepository cannot be assigned to a named bus,CXF-3942,12533219,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,29/Nov/11 23:33,19/Dec/11 16:14,14/Mar/19 02:29,05/Dec/11 20:52,2.4.4,2.5,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,Management,,,,0,,,,,,"When using a named bus (i.e., not the default ""cxf"" bus), CounterRepository cannot be assigned to the named bus (as the resource annotation with name ""cxf"" at its setBus is interfering with the correct bus association).

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,218947,,,2011-11-29 23:33:06.0,,,,,,0|i0b8hb:,63486,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WADLgenerator ignores Description annotation targeting the input parameter if it is set inside a method-level Descriptions annotation,CXF-3941,12533119,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,29/Nov/11 14:23,19/Dec/11 16:15,14/Mar/19 02:29,29/Nov/11 14:26,2.4.4,2.5,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,218847,,,2011-11-29 14:23:25.0,,,,,,0|i0b8nr:,63515,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UriInfo returns the list of matched uris and resources in the wrong order,CXF-3939,12533101,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,29/Nov/11 11:41,19/Dec/11 16:15,14/Mar/19 02:29,29/Nov/11 11:46,2.3.7,2.4.4,2.5,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,JAX-RS,,,,0,,,,,,"UriInfo.getMatchedURIs and getMatchedResources return the list of resources in the wrong order, the current/last resource should be on the top of the list",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,218829,,,2011-11-29 11:41:13.0,,,,,,0|i0b8kn:,63501,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS Contexts are not available to MessageBodyReader and MessageBodyWriter providers at the selection stage,CXF-3938,12532938,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,28/Nov/11 17:35,19/Dec/11 16:15,14/Mar/19 02:29,29/Nov/11 11:14,2.4.4,2.5,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,JAX-RS,,,,0,,,,,,Custom MessageBodyReader and MessageBodyWriter providers can not access JAX-RS contexts in isReadable and isWriteable methods,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,218670,,,2011-11-28 17:35:47.0,,,,,,0|i0b8gn:,63483,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UriInfo does not report base address correctly in some cases,CXF-3937,12532924,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,28/Nov/11 15:44,27/Jun/12 07:09,14/Mar/19 02:29,28/Nov/11 15:58,2.4.4,2.5,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JAX-RS,,,,0,,,,,,"When an address like ""http://0.0.0.0/path"" is used, the actual dynamic address is not reported at runtime properly;

Also in some cases a ""//"" is reported at the end of the URI - in this case the problem may be lying at the ServletController level but without a reproducible test case 'fixing' it at the jaxrs-level seems to be the only (temporarily)option",,,,,,,,,,,,,CXF-4396,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,218656,,,2011-11-28 15:44:33.0,,,,,,0|i0b8gf:,63482,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxWsClientProxy clears stacktrace of custom exception,CXF-3934,12532678,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,azago85,azago85,25/Nov/11 08:15,19/Dec/11 16:15,14/Mar/19 02:29,30/Nov/11 02:41,2.3.1,,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,JAX-WS Runtime,,,,0,,,,,,"Web service method throws custom exception annotated by @WebFault, cxf endpoint configuration has faultStackTraceEnabled=true and exceptionMessageCauseEnabled=true properties. On client side we have response with filled stacktrace element in fault/detail then through InFaultInterceptors new instance of our custom exception is created and filled with stacktrace from response. Our custom exception with stacktrace is intercepted in JaxWsClientProxy when its stacktrace is filled again using fillInStackTrace() as a result we have empty stacktrace.

line 120 ..try {
            if (isAsync) {
                result = invokeAsync(method, oi, params);
            } else {
                result = invokeSync(method, oi, params);
            }
        } catch (WebServiceException wex) {
            throw wex.fillInStackTrace();
        } catch (Exception ex) {
            for (Class<?> excls : method.getExceptionTypes()) {
                if (excls.isInstance(ex)) {
                    throw ex.fillInStackTrace();
                }
            }
            }
...

I doubt if this behavior according to custom exceptions is correct because I need this server stacktrace on client. Same code exists in cxf 2.5 too.","AS Jboss 5.1, jbossws-cxf-3.4.1, cxf-2.3.1",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,218411,,,2011-11-25 08:15:13.0,,,,,,0|i0b8hj:,63487,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STS SAMLTokenValidator doesn't validate condition,CXF-3931,12532537,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,owulff,owulff,23/Nov/11 21:39,19/Dec/11 16:15,14/Mar/19 02:29,29/Nov/11 12:20,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,Services,,,,0,,,,,,The SAMLTokenValidator doesn't verify whether the condition in the SAML token meets the current time.,,,,,,,,,,,,,,,,,23/Nov/11 21:45;owulff;diff.txt;https://issues.apache.org/jira/secure/attachment/12504933/diff.txt,28/Nov/11 22:26;owulff;git.diff.patch;https://issues.apache.org/jira/secure/attachment/12505408/git.diff.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-11-24 16:13:06.234,,,no_permission,,Unknown,,,,,,,,,,,218270,,,Mon Nov 28 22:26:41 UTC 2011,,,,,,0|i0v487:,179658,,,,,,,,23/Nov/11 21:45;owulff;Had to add support for the RST lifetime element in DefaultConditionsProvider to create testcase,"24/Nov/11 16:13;coheigea;Hi Oli,

Looks good apart from the change to DefaultConditionsProvider - the change means that the STS will issue tokens by default with the conditions requested by the client...potentially a security concern. Maybe we could make this behaviour pluggable or something.

Colm.","24/Nov/11 16:16;owulff;Hi Colm

Agreed. I was first thinking in adding a parameter like ""maxLifetime"" with a meaningful default like (1 hour). I thought I didn't want to make too many changes but it really makes sense.

What do you think?

Oli","28/Nov/11 16:34;coheigea;Hi Oli,

Yep that sounds good. I would also add a boolean whether to accept client lifetime requests at all (defaults to false).

Colm.",28/Nov/11 22:26;owulff;acceptClientLifetime added,,,,,,,,,,,,,,,,,,,,,,
Present realm ignored by TokenValidateOperation for TokenValidator,CXF-3929,12532359,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,owulff,owulff,22/Nov/11 16:15,19/Dec/11 16:15,14/Mar/19 02:29,01/Dec/11 10:11,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,Services,,,,0,,,,,,"If the configured RealmParser returns a non-null value, the TokenValiateOperation should call the following method on all registered TokenValidator:
public boolean canHandleToken(ReceivedToken validateTarget, String realm)

Instead, the following method is called:
public boolean canHandleToken(ReceivedToken validateTarget)",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-24 15:36:46.744,,,no_permission,,Unknown,,,,,,,,,,,218092,,,Wed Nov 30 19:21:29 UTC 2011,,,,,,0|i0v47b:,179654,,,,,,,,"23/Nov/11 22:15;owulff;Can I migrate everything to canHandleToken(ReceivedToken validateTarget, String realm) for the TokenProvider?
I've checked the corresponding method in the TokenProvider. Only test routines call:
boolean canHandleToken(String tokenType)
","24/Nov/11 15:36;coheigea;
Sure.

Colm.",30/Nov/11 19:21;owulff;This issue is fixed in CXF-3928 (AbstractOperation.validateReceivedToken()),,,,,,,,,,,,,,,,,,,,,,,,
WebFaultOutInterceptor expects the Fault.,CXF-3925,12531929,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,michal.mech,michal.mech,18/Nov/11 12:32,19/Dec/11 16:15,14/Mar/19 02:29,30/Nov/11 02:35,2.4.4,,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,JAX-WS Runtime,,,,0,,,,,,"WebFaultOutInterceptor reports NullPointerException when message content doesn't contains Exception.

I was trying to create custom interceptor to transform SoapFault to SoapMessage ([read more|http://stackoverflow.com/questions/8066474/how-to-transform-soapfault-to-soapmessage-via-interceptor-in-cxf]) and when I registered interceptor like:
{code:title=InternalActServiceFaultOutInterceptor.java|borderStyle=solid}
public class InternalActServiceFaultOutInterceptor extends
		AbstractSoapInterceptor {

	public InternalActServiceFaultOutInterceptor() {
		super(Phase.PRE_STREAM);

		addBefore(Arrays.asList(StaxOutInterceptor.class.getName(), AttachmentOutInterceptor.class.getName()));
	}

	@Override
	public void handleMessage(SoapMessage soapMessage) throws Fault {
		Exception exception = soapMessage.getContent(Exception.class);
		if (exception != null) {
			soapMessage.getExchange().put(Exception.class, null);

			for (Class<?> contentFormat : soapMessage.getContentFormats()) {
				soapMessage.setContent(contentFormat, null);
			}

			soapMessage.setContent(List.class, new MessageContentsList(createSoapMessage(RegisterDocumentResponse.class)));
		}
	}

	private <T> RegisterDocumentResponse createSoapMessage(Class<T> messageType) {
		RegisterDocumentResponse response = new RegisterDocumentResponse();
		response.setStatus(ServiceStatusType.SUCCESS);

		return response;
	}
}
{code}
I saw:
{noformat}
WARN  [http-8080-1][,,][PhaseInterceptorChain.doLog()] Interceptor for {http://...}InternalActServiceImplService#{http://...}registerDocument has thrown exception, unwinding now
java.lang.NullPointerException
	at org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor.handleMessage(WebFaultOutInterceptor.java:83)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:105)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:323)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:206)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:218)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:200)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:114)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:184)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:107)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
{noformat}

It's all because WebFaultOutInterceptor expecting in line 83 Fault in message.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,217665,,,2011-11-18 12:32:30.0,,,,,,0|i0b8g7:,63481,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
transportUri in SoapindingInfo is http even when jms is used,CXF-3920,12531790,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,17/Nov/11 13:36,19/Dec/11 16:15,14/Mar/19 02:29,12/Dec/11 20:31,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,Transports,,,,0,,,,,,"If you define a soap/jms service using the JmsConfigFeature then the transportUri in the SoapBindingInfo is still ""http://schemas.xmlsoap.org/soap/http/"" but it should be ""http://schemas.xmlsoap.org/soap/jms/"" 

According to Dan the uri should be correct when the SOAP/JMS spec is used to configure the transport.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,217526,,,2011-11-17 13:36:23.0,,,,,,0|i0v46f:,179650,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java2ws -createxsdimports generates invalid WSDL/XSD,CXF-3919,12531676,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,conficio,conficio,16/Nov/11 19:47,31/Mar/17 19:38,14/Mar/19 02:29,30/Mar/17 19:53,2.4.3,,,,,,,,,,,,,,,,,3.0,,,,Tooling,,,,1,,,,,,"In the attached app the -createxsdimports option generates invalid WSDL/XSD files

Validation in Eclipse of the entire generated dir fails",,,,,,,,,,,,,,,,,16/Nov/11 19:47;conficio;CXF-WSDLTestGenerateXSD.zip;https://issues.apache.org/jira/secure/attachment/12503934/CXF-WSDLTestGenerateXSD.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2017-03-30 19:53:48.846,,,no_permission,,Unknown,,,,,,,,,,,217412,,,Thu Mar 30 19:53:48 UTC 2017,,,,,,0|i1agkv:,269152,,,,,,,,16/Nov/11 19:48;conficio;The cause for this issue might be related to CXF-3918,"30/Mar/17 19:53;dkulp;This seems to be working fine now with the latest releases.  No idea when it was actually fixed.
",,,,,,,,,,,,,,,,,,,,,,,,,
Java first with external XSD does not resolve name spaces properly,CXF-3918,12531634,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,conficio,conficio,16/Nov/11 15:28,31/Mar/17 19:38,14/Mar/19 02:29,30/Mar/17 19:53,2.4.3,,,,,,,,,,,,,,,,,3.0,,,,Tooling,,,,1,,,,,,"With CXF 2.4.3 working on Java first web services (attached Eclipse project CXF-WSDLTest.zip) produces the following error when attempting to generate WSDL with referenced XSD files.

SEVERE: Schema element {urn:example.com:fault1}appFault references undefined type {urn:example.com:fault}appFaultDetails for service {urn:example.com:role1}RoleApiService.

I want/need to do this, because several services do share the Fault, FaultDetails and error code beans.

Here are my questions:
* Why is java2ws not seeing the appFaultDetails (generating the severe message above)?
* Why is java2ws not generating the import statement for the fault.xsd?
* Why is the import statement for the role.xsd not using the stated location from the package-info.java file?

",,,,,,,,,,,,,,,,,16/Nov/11 15:29;conficio;CXF-WSDLTest.zip;https://issues.apache.org/jira/secure/attachment/12503893/CXF-WSDLTest.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2017-03-30 19:53:25.362,,,no_permission,,Unknown,,,,,,,,,,,217370,,,Thu Mar 30 19:53:25 UTC 2017,,,,,,0|i1agl3:,269153,,,,,,,,16/Nov/11 15:29;conficio;This Eclipse test app shows the issue.,16/Nov/11 19:48;conficio;The cause for this issue might be related to CXF-3919,"30/Mar/17 19:53;dkulp;This seems to be working fine now with the latest releases.  No idea when it was actually fixed.
",,,,,,,,,,,,,,,,,,,,,,,,
partial response problem with SOAP 1.1 use of WS-Addressing,CXF-3916,12531548,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jpangburn,jpangburn,15/Nov/11 22:59,23/Apr/12 16:45,14/Mar/19 02:29,07/Feb/12 21:48,2.4.2,,,,,,,,,,,,,,,,,2.3.10,2.4.7,2.5.3,,JAX-WS Runtime,,,,0,client,dispatch,soap11,ws-addressing,,"Description copied from email:

I've read over this more and now see that the partial response stuff is definitely for asynchronous processing, so the check with the WS-Addressing relatesTo header makes sense.  The problem (I think) appears in your checkin revision 705446 for ClientImpl.java in this section:

{code}
    synchronized (message.getExchange()) {
        if (!isPartialResponse(message) && callback == null) {
            message.getExchange().put(FINISHED, Boolean.TRUE);
            message.getExchange().setInMessage(message);
            message.getExchange().notifyAll();                   
        }
    }
{code}

You added the ""&& callback == null"" test, but I think what is needed is ""|| callback == null"".  The idea here (again, as I'm reading it) is regarding these two cases:
- it's an asynchronous response which is not a partial response
- there is no callback, meaning it's a synchronous response

In either of these cases you want to tell the exchange that it's finished and the message you just got is the inbound message.  I think this worked for a long time without anyone running into this because in the synchronous case (callback == null), the only way you get a partialResponse==true is when WS-Addressing is engaged AND the server that you're connecting to doesn't return the optional (but almost always used) relatesTo header.  Probably in the vast majority of cases either WS-Addressing isn't used or the relatesTo header is present in a response.

If you agree, I can create a defect and describe this.  Since the change is just && to ||, obviously it won't help to send you a patch file :-)

Thanks,
Jesse

{code}
-----Original Message-----
From: Jesse Pangburn [mailto:Jesse.Pangburn@us.lawson.com] 
Sent: Wednesday, November 09, 2011 6:37 PM
To: users@cxf.apache.org
Subject: partial response problem with SOAP 1.1 use of WS-Addressing and SOAPAction

Hi,
I invoked a SOAP 1.1 web service using CXF 2.4.2 DispatchImpl and that service immediately returned the following soap header:
	<soap:Header>
		<wsa:MessageID>uuid:A12B3727-0B3D-11E1-983D-DFB5348FF699</wsa:MessageID>
		<wsa:Action>response</wsa:Action>
	</soap:Header>

My client hung for 60 seconds until a timeout was reached, at which point the response was available in the StaxSource.  Tracing the problem into the code revealed that it was waiting because the message response it had received so far was deemed a ""partial response"" due to the following code which always is called when WS-Addressing is enabled in MAPCodec.java:
    private void markPartialResponse(SoapMessage message, AddressingProperties maps) {
        if (ContextUtils.isRequestor(message) && null != maps
            && (null == maps.getRelatesTo() 
                || (null != maps.getRelatesTo()
                    && Names.WSA_UNSPECIFIED_RELATIONSHIP.equals(maps.getRelatesTo().getValue())))) {
            message.put(Message.PARTIAL_RESPONSE_MESSAGE, Boolean.TRUE);
        } 
    }

The problem, I think, is this condition ""null == maps.getRelatesTo()"".  This essentially means that a WS-Addressing RelatesTo header is required to indicate that a message response is complete- even on a synchronous request/response.  I think the source of this problem is that the original WS-Addressing submission to W3C said that ""This element MUST be present if the message is a reply"" in the description for the RelatesTo header (see http://www.w3.org/Submission/ws-addressing/#_Toc77464323).  This language was struck from the final WS-Addressing 1.0 (see http://www.w3.org/TR/ws-addr-core/#msgaddrpropsinfoset) and means that RelatesTo is not required.

While I think it was sloppy on the part of the service writer to not include the RelatesTo header, it is OPTIONAL according to the spec.  So, especially in the case of a synchronous request, I think this code is incorrect.  A CXF Dispatch client should not hang until timeout is reached because an optional header is not included in the response.

Unfortunately, I'm not really sure what the correct solution is here since I don't understand the case for ever having a partial response message in a synchronous request/response.  Should later code note that the request/response is synchronous and ignore this partial response flag?  I assume the intention of this code is for asynchronous request/response so that the immediate response on the request's socket connection is not treated as the asynchronous response message.

Any clues?
Thanks,
Jesse
{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-02-07 21:48:01.19,,,no_permission,,Moderate,,,,,,,,,,,217284,,,Wed Feb 22 00:24:47 UTC 2012,,,,,,0|i0b89j:,63451,,,,,,,,"06/Feb/12 23:39;jpangburn;The previous fix applied does not resolve the issue.  I've tried this using 2.5.2 and the fix says it's resolved in 2.5.1, but still getting the same problem.

When the response message comes back like this without a relatesTo header is when the trouble happens:
	<soap:Header>
		<wsa:MessageID>uuid:7F0786FA-5118-11E1-9ACE-BB6287EFAC14</wsa:MessageID>
		<wsa:Action>response</wsa:Action>
	</soap:Header>

The original code was:
                if (!isPartialResponse(message) && callback == null) {
                    message.getExchange().put(FINISHED, Boolean.TRUE);
                    message.getExchange().setInMessage(message);
                    message.getExchange().notifyAll();
                }

This was clearly wrong and so I think Dan changed the test to be:
                if (!isPartialResponse(message)) {

I believe the intention is that this test would do what it implies ""if the response is not a partial response then..."".  If that were true this would have worked.  It's not true though, because that test returns true in the case of a synchronous request with no relatesTo header- saying that it's a partial response when it's not.  It's the complete response because it was a synchronous response.

The fault here really lies in the code that sets the variable this test checks, but it's hard to fix there.  This is why my original suggestion was to change the test to:
                if (!isPartialResponse(message) || callback == null) {

This fixes the synchronous case because callback is always null for a synchronous response.  It does not harm the test for asynchronous case because callback is not null.

Changing 2.5.2 code to have this test instead works with that response which is missing the relatesTo header.  The response is returned immediately to the client instead of timing out waiting for the full response to come back (when there is no more forthcoming).

thanks,
Jesse","07/Feb/12 21:48;dkulp;
Added a testcase for this.   

Basing on the presence or not of the callback is definitely not a correct fix and the testcase I added actually proved it.   A couple interceptors based their actions on whether the message was a partial response or not and thus things were not processed correctly.   For example, in the testcase, the response resulted in a ClassCastException as the WrapperClassInInterceptor does not run if the response is a partial message so the contents List had the wrapper object and not the expected integer.   Also, with WS-RM, you can have partial responses and such coming in whether or not you have a callback object.  

I've updated the MAPAggregator to do some extra checks if the message is marked a partial response to reset to a non-partial response if it feels it should be.   That fixes the test.  

It would be great if you could try your cases with tonights snapshots (or build your own snapshots).","08/Feb/12 18:45;jpangburn;Hi Dan,
Perfect, this is definitely the best fix so that isPartialResponse() does what it says it does.  I hadn't considered other downstream interceptors using isPartialResponse and having problems since I didn't encounter any problems like that with my quick fix and don't use WS-RM.  Thank you for fixing it right!

I downloaded the 2.5.3 snapshot this morning and tested it and it worked great with the endpoint that was causing me trouble.

Thanks again,
Jesse","21/Feb/12 16:23;dkulp;
Jesse,

Aki just pointed out to me that according to the WS-Addressing  spec, the wsa:RelatesTo header MUST be present if the message is a reply.  I'm going to leave my fix in place, but I'm pointing this out to you as you may want to fix the service that is generating the invalid WS-Addressing response.

Dan
","21/Feb/12 19:02;jpangburn;Hi Dan,
I don't think that's true.  I looked up the spec before going down this path.  The W3C spec is at http://www.w3.org/TR/ws-addr-core/

Here's the part about relatesTo:
/wsa:RelatesTo
This OPTIONAL (repeating) element information item contributes one abstract [relationship] property value, in the form of an (IRI, IRI) pair. The content of this element (of type xs:anyURI) conveys the [message id] of the related message.

The spec says nothing about it being required, in fact it says in caps ""OPTIONAL"".

Aki is probably looking at the original W3C submission, not the final spec.  The submission is available here: http://www.w3.org/Submission/ws-addressing/

It's different.  It says:
/wsa:RelatesTo
This OPTIONAL (repeating) element information item contributes one abstract [relationship] property value, in the form of a (URI, QName) pair. The [children] property of this element (which is of type xs:anyURI) conveys the [message id] of the related message. This element MUST be present if the message is a reply.

This is probably where he got the idea that it was required, since it is required in the submission version.  Apparently that was lifted in the final version.

Thanks,
Jesse

","21/Feb/12 19:18;dkulp;Right.  However, it is specified in section 3.4 about creating a reply message:


[relationship]: this property MUST include a pair of IRIs as follows; the relationship type is the predefined reply URI ""http://www.w3.org/2005/08/addressing/reply"" and the related message's identifier is the [message id] property value from the message being replied to; other relationships MAY be expressed in this property


So the relationship must be specified.  

So it's optional in that it isn't on all messages, but for a message formulating a reply, it must be there to formulate the relationship.



","22/Feb/12 00:24;jpangburn;Hi Dan,
That makes sense.  I was searching the doc for ""relatesTo"" and it isn't mentioned there.  I see the interpretation making sense though.  The service I was calling was beyond my control- it's a test service for a government service.

Still, doesn't hurt us (CXF users) to be tolerant.  Follows the send precise / receive tolerant idea.

Thanks,
Jesse

",,,,,,,,,,,,,,,,,,,,
Add an archetype for jax-rs,CXF-3912,12531358,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,14/Nov/11 18:55,19/Dec/11 16:15,14/Mar/19 02:29,14/Nov/11 19:04,2.5,,,,,,,,,,,,,,,,,2.5.1,,,,JAX-RS,,,,0,,,,,,Add a maven archetype for a jaxrs service.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-16 11:04:11.177,,,no_permission,,Unknown,,,,,,,,,,,217094,,,Wed Nov 16 11:04:11 UTC 2011,,,,,,0|i1aglj:,269155,,,,,,,,14/Nov/11 19:04;bmargulies;Done.,"16/Nov/11 11:04;sergey_beryozkin;Benson, what is the simplest way to work with cxf-jaxrs-service/pom.xml in order to produce a sample project which compiles.

My initial attempt is: mvn clean install, then go to the target, unpack the jar, update $groupid, etc, in the archetype-resources and then it all works, the integration test passes.
But that is not the way to go I guess.

So my next attempt is:
1. mvn archetype:create-from-project
2. cd target/generated-sources/archetype
3. mvn archetype:generate

and in the end I'm seeing:

[INFO] ----------------------------------------------------------------------------
[INFO] Using following parameters for creating project from Archetype: docbkx-quickstart-archetype:2.0.10
[INFO] ----------------------------------------------------------------------------
[INFO] Parameter: groupId, Value: test
[INFO] Parameter: artifactId, Value: test
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: package, Value: test
[INFO] Parameter: packageInPathFormat, Value: test
[INFO] Parameter: package, Value: test
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: groupId, Value: test
[INFO] Parameter: artifactId, Value: test
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1:18.774s
[INFO] Finished at: Wed Nov 16 10:52:33 GMT 2011
[INFO] Final Memory: 8M/490M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2.1:generate (default-cli) on project cxf-jaxrs-service-archetype-archetype: org.apache.maven.archetype.exception.InvalidPackaging: Unable to add module to the current project as it is not of packaging type 'pom' -> [Help 1]
[ERROR] 

That is obviously FAQ but I can't find what to give to mvn archetype:generate in order to bypass this issue",,,,,,,,,,,,,,,,,,,,,,,,,
Exception mapping not applied to exceptions thrown from providers mapping data to brans,CXF-3911,12531355,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,bmargulies,bmargulies,14/Nov/11 18:42,19/Dec/11 16:15,14/Mar/19 02:29,16/Nov/11 14:14,2.5,,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JAX-RS,,,,0,,,,,,"git://github.com/bimargulies/cxf-jaxrs-archetype.git, branch get-mystery, demonstrates that using an exception mapper to turn an EOFException into a specific response does not work when the EOF is thrown by the Jackson provided mapping.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-16 12:55:41.518,,,no_permission,,Unknown,,,,,,,,,,,217091,,,Wed Nov 16 14:27:14 UTC 2011,,,,,,0|i1aglr:,269156,,,,,,,,"16/Nov/11 12:55;sergey_beryozkin;Benson, can you please add the EOF exception mapper to the ""get-mystery"" branch ? It is not there at the moment...",16/Nov/11 13:52;bmargulies;I just pushed the 'error-mapper-problem' branch instead.,"16/Nov/11 14:13;sergey_beryozkin;After moving the mapper to jaxrs:providers I'm seeing with With 2.5.1-SNAPSHOT:

HTTP/1.1 406 Not Acceptable

Server: Apache-Coyote/1.1

Date: Wed, 16 Nov 2011 14:09:15 GMT

Content-Type: text/plain

Content-Length: 19



No input parameters


",16/Nov/11 14:14;sergey_beryozkin;The fix has been confirmed,"16/Nov/11 14:18;bmargulies;Could this have been fixed since 2.5.0? In my original code, I have:
{code}
  <jaxrs:serviceBeans>
      <ref bean=""document-service-impl"" />
    </jaxrs:serviceBeans>
    <jaxrs:providers>
        <bean class=""org.codehaus.jackson.jaxrs.JacksonJsonProvider""/>
        <bean class=""com.basistech.rlp.ws.EofExceptionProvider""/>
    </jaxrs:providers>
    </jaxrs:server>
{code}
","16/Nov/11 14:27;sergey_beryozkin;Yep, it's fixed for 2.5.1-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,
Java First WSDL Generation Incorrect in 2.4.3 vs 2.1.10,CXF-3906,12531308,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,melloware,melloware,14/Nov/11 11:25,16/Nov/11 21:26,14/Mar/19 02:29,16/Nov/11 21:26,2.4.3,,,,,,,,,,,,,,,,,Invalid,,,,JAXB Databinding,,,,0,cxf,java2wsdl,jaxb,,,"I have been using CXF since 2008 version 2.1.x branch.  It generated the same WSDL every time which I have attached and labeled wsdl-211.wsdl.   I recently upgraded to 2.4.3 and did not touch the interface and now CXF is generating the WSDL differently that is now breaking all my test clients.

The major difference being it is generating ref= instead of type= which is then causing the client generation to generate SoapStyle.BARE in both my Java and .NET clients.

2.1.10:

<xs:complexType name=""getAllAceResponse"">
   <xs:sequence>
       <xs:element minOccurs=""0"" name=""collectionActualValueData"" type=""tns:collectionActualValueData"" />
   </xs:sequence>
</xs:complexType>


2.4.3:
<xs:complexType name=""getAllAceResponse"">
   <xs:sequence>
        <xs:element minOccurs=""0"" ref=""tns:collectionActualValueData""/>
   </xs:sequence>
</xs:complexType>

","Java 6,7 on Windows 7 and Suse Linux 11",,,,,,,,,,,,,,,,14/Nov/11 11:27;melloware;cxf-3906.zip;https://issues.apache.org/jira/secure/attachment/12503597/cxf-3906.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,217044,,,Wed Nov 16 21:26:46 UTC 2011,,,,,,0|i1agmf:,269159,,,,,,,,14/Nov/11 11:27;melloware;This zip file contains my Interface and the WSDL it generates in 2.1.10 vs 2.4.3,16/Nov/11 21:26;melloware;Discovered the reason was due to my XMlRootElement having the same name as my WebResult.  THis caused it to generate ref= instead of type =,,,,,,,,,,,,,,,,,,,,,,,,,
The archetype is missing,CXF-3905,12531277,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,13/Nov/11 23:30,19/Dec/11 16:15,14/Mar/19 02:29,12/Dec/11 20:53,2.5,,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,Build system,,,,0,,,,,,"The one archetype we have does not appear in the global catalog. This may be because it isn't set up in any way that quite resembles the current doc for the maven-archetype-plugin.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-12-05 21:01:50.038,,,no_permission,,Unknown,,,,,,,,,,,217013,,,Mon Dec 05 21:25:28 UTC 2011,,,,,,0|i0b8in:,63492,,,,,,,,"05/Dec/11 21:01;dkulp;
Benson,

Any idea what needs to be done for this?

",05/Dec/11 21:25;bmargulies;I think that the solution is to make the old one be shaped like my new one in terms of the archetype metadata.,,,,,,,,,,,,,,,,,,,,,,,,,
CXF and Java 7,CXF-3904,12531197,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,aravindan_thulasinat,aravindan_thulasinat,11/Nov/11 23:26,23/Apr/12 00:13,14/Mar/19 02:29,09/Dec/11 17:55,,,,,,,,,,,,,,,,,,2.5.1,,,,WS-* Components,,,,0,,,,,,"CXF based web service client with https crashes JVM. This started happening after we switched to Java 7. We are considering incorporating Java 7 for our next release and would like to know, when would be Java 7 usable with CXF.

I have attached the Stack-trace here

Stack: [0x245e0000,0x24630000],  sp=0x2462f070,  free space=316k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [Secur32.dll+0x75bc]  DeleteSecurityContext+0x35
C  [net.dll+0xa171]  Java_sun_net_www_protocol_http_ntlm_NTLMAuthSequence_getCredentialsHandle+0x195
C  [net.dll+0xa2b1]  Java_sun_net_www_protocol_http_ntlm_NTLMAuthSequence_getNextToken+0x137

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  sun.net.www.protocol.http.ntlm.NTLMAuthSequence.getNextToken(J[B)[B+0
j  sun.net.www.protocol.http.ntlm.NTLMAuthSequence.getAuthHeader(Ljava/lang/String;)Ljava/lang/String;+24
j  sun.net.www.protocol.http.ntlm.NTLMAuthentication.setHeaders(Lsun/net/www/protocol/http/HttpURLConnection;Lsun/net/www/HeaderParser;Ljava/lang/String;)Z+73
j  sun.net.www.protocol.http.HttpURLConnection.getServerAuthentication(Lsun/net/www/protocol/http/AuthenticationHeader;)Lsun/net/www/protocol/http/AuthenticationInfo;+760
j  sun.net.www.protocol.http.HttpURLConnection.getInputStream()Ljava/io/InputStream;+972
j  java.net.HttpURLConnection.getResponseCode()I+16
j  sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode()I+4
j  org.apache.cxf.transport.http.HTTPConduit.processRetransmit(Ljava/net/HttpURLConnection;Lorg/apache/cxf/message/Message;Lorg/apache/cxf/io/CacheAndWriteOutputStream;)Ljava/net/HttpURLConnection;+1
j  org.apache.cxf.transport.http.HTTPConduit.access$600(Lorg/apache/cxf/transport/http/HTTPConduit;Ljava/net/HttpURLConnection;Lorg/apache/cxf/message/Message;Lorg/apache/cxf/io/CacheAndWriteOutputStream;)Ljava/net/HttpURLConnection;+4
j  org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleRetransmits()V+142
j  org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse()V+1
j  org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close()V+98
j  org.apache.cxf.transport.AbstractConduit.close(Lorg/apache/cxf/message/Message;)V+18
j  org.apache.cxf.transport.http.HTTPConduit.close(Lorg/apache/cxf/message/Message;)V+50
j  org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(Lorg/apache/cxf/message/Message;)V+9
j  org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(Lorg/apache/cxf/message/Message;)Z+88
j  org.apache.cxf.endpoint.ClientImpl.invoke(Lorg/apache/cxf/service/model/BindingOperationInfo;[Ljava/lang/Object;Ljava/util/Map;Lorg/apache/cxf/message/Exchange;)[Ljava/lang/Object;+282
j  org.apache.cxf.endpoint.ClientImpl.invoke(Lorg/apache/cxf/service/model/BindingOperationInfo;[Ljava/lang/Object;Lorg/apache/cxf/message/Exchange;)[Ljava/lang/Object;+65
j  org.apache.cxf.endpoint.ClientImpl.invoke(Lorg/apache/cxf/service/model/BindingOperationInfo;[Ljava/lang/Object;)[Ljava/lang/Object;+4
j  org.apache.cxf.frontend.ClientProxy.invokeSync(Ljava/lang/reflect/Method;Lorg/apache/cxf/service/model/BindingOperationInfo;[Ljava/lang/Object;)Ljava/lang/Object;+6
j  org.apache.cxf.jaxws.JaxWsClientProxy.invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;+218","Windows, Java 7",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-12-08 22:03:32.458,,,no_permission,,Unknown,,,,,,,,,,,216934,,,Mon Apr 23 00:13:18 UTC 2012,,,,,,0|i13zdz:,231363,,,,,,,,"08/Dec/11 22:03;dkulp;I've gone through and run the complete CXF build with java 7:
{code}
java version ""1.7.0_01""
Java(TM) SE Runtime Environment (build 1.7.0_01-b08)
{code}
and am down to a single failure.  I did have to update a bunch of HTTPs tests to specify some additional algorithms, but everything else worked fine.

In this particular case, since the JVM is completely crashing, it's really a bug in the JVM and would need to be reported to Oracle.  However, if you haven't already tried the ""update 1"" version of Java7, I'd suggest that.


","09/Dec/11 17:55;dkulp;All tests have now passed with Java 7.  There are a couple of random failures that I think are timing related that still need to be investigated to get them to pass reliably, but all the features (that we have tests for) are now known to work.","15/Mar/12 17:59;seumas.soltysik;Hi Dan,
Were these tests with Java 7 run on all supported branches(2.3 +) or just the trunk? We hava customer looking to move to Java 7 later this year.","15/Mar/12 19:50;dkulp;
Seumas,

At the time, just the trunk and 2.5.x branch.   No idea how the other branches would do.

Dan
","22/Apr/12 22:24;rossjudson;I have this exact problem when I try to use the JDK's built-in JAX-WS to connect to Sharepoint 2010 web services. I submitted a VM bug report for it (7129065). Without tracing through the native code it's difficult to figure out why this fault occurs. It does not occur with JDK 6. My guess is that it has something to do with not being joined to a domain.

It's also quite tricky to force Java's Http NOT to use NTLM, or force it to take credentials each time, instead of using the ones that are cached with the current Windows session.","23/Apr/12 00:13;bmargulies;It's quite clearly a java bug, nothing CXF can do.
",,,,,,,,,,,,,,,,,,,,,
WADL contains wrong parameter names for multipart/form-data,CXF-3903,12531154,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,thecoolace,thecoolace,11/Nov/11 17:12,14/Nov/13 18:06,14/Mar/19 02:29,14/Nov/11 15:31,2.4.4,,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JAX-RS,,,,0,,,,,,"I have the following annotated REST function:
{code:java}
    @POST
    @Path(""/umsinfo/profileid/{profileId}"")
    @Consumes(""multipart/form-data"")
    public UmsInfo getUmsInfoByProfileId(@PathParam(""profileId"") String profileId,
                                         @Multipart(value=""includeCompany"") Boolean includeCompany,
                                         @Multipart(value=""passwordToCheck"") String passwordToCheck,
                                         @Context UriInfo info)
{code}
and it produces the following relevant WADL entry:
{code:xml}
            <resource path=""/umsinfo/profileid/{profileId}"">
                <param name=""profileId"" style=""template"" type=""xs:string""/>
                <method name=""POST"">
                    <request>
                        <representation mediaType=""multipart/form-data"">
                            <param name=""request"" style=""plain"" type=""xs:boolean""/>
                        </representation>
                        <representation mediaType=""multipart/form-data"">
                            <param name=""request"" style=""plain"" type=""xs:string""/>
                        </representation>
                    </request>
                    <response>
                        <representation mediaType=""application/octet-stream""/>
                    </response>
                </method>
{code}

Please note that the param name is always ""request"". This is true for all multipart/form-data functions inside this WADL.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-14 15:31:26.719,,,no_permission,,Unknown,,,,,,,,,,,216892,,,Thu Nov 14 18:06:25 UTC 2013,,,,,,0|i0b89b:,63450,,,,,,,,"14/Nov/11 15:31;sergey_beryozkin;With the fix you will get
<resource path=""/umsinfo/profileid/{profileId}"">
                <param name=""profileId"" style=""template"" type=""xs:string""/>
                <method name=""POST"">
                    <request>
                        <representation mediaType=""multipart/form-data"">
                            <param name=""includeCompany"" style=""query"" type=""xs:boolean""/>
                            <param name=""passwordToCheck"" style=""query"" type=""xs:string""/>
                        </representation>
                    </request>
                    
                </method>
</resource>
","14/Nov/13 15:27;labbenes;Hi,
Actually @Multipart parameters of InputStream type don't show in generated WADL. I'm wondering if this is a bug !
I'm using 2.6.8 version.
Do you confirm the issue (in such case this ticket needs to be re-opened) ?
Thanks.",14/Nov/13 18:06;sergey_beryozkin;Can you please open a new minor-level JIRA for WADLGenerator to support InputStream so that any InputStream parameter will have an xsd:anyType attribute ?,,,,,,,,,,,,,,,,,,,,,,,,
InjectionUtils do not handle correctly collections inside query bean,CXF-3900,12531058,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,lordorient,lordorient,10/Nov/11 22:09,19/Dec/11 16:15,14/Mar/19 02:29,14/Nov/11 12:28,2.4.2,,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,JAX-RS,,,,0,,,,,,"{code}
                } else if (isSupportedCollectionOrArray(value.getClass())) {
                    // ignoring arrrays for a moment
                    List<Object> theValues = null;
                    if (value.getClass().isArray()) {
                        theValues = Arrays.asList(value);
                    } else {
                        theValues = CastUtils.cast((List<?>)value);
                    }
                    values.put(propertyName, theValues);
                } else {
                    fillInValuesFromBean(value, propertyName, values);
                }
{code}
*theValues = CastUtils.cast((List<?>)value);* limits us to use only Lists in beans used as query params, while any type of collection could be fine(Set for example).",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,216796,,,2011-11-10 22:09:09.0,,,,,,0|i0b8jz:,63498,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDL2JS Null Pointer Exception,CXF-3891,12529434,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ixeldog,ixeldog,31/Oct/11 02:22,19/Dec/11 16:15,14/Mar/19 02:29,05/Dec/11 20:52,2.4.3,,,,,,,,,,,,,,,,,2.4.5,2.5.1,,,JavaScript Client,,,,0,,,,,,"Given my wsdl and xsd wsdl2java.bat runs without issue but wsdl2js.bat throws Null Pointer Exception:

{code}
org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:294)
        at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:154)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:67)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.run(WSDLToJavaScript.java:60)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.main(WSDLToJavaScript.java:97)
Caused by: java.lang.NullPointerException
        at org.apache.ws.commons.schema.XmlSchemaCollection.getTypeByQName(XmlSchemaCollection.java:221)
        at org.apache.cxf.common.xmlschema.SchemaCollection.getTypeByQName(SchemaCollection.java:106)
        at org.apache.cxf.javascript.service.ServiceJavascriptBuilder.getElementsForParts(ServiceJavascriptBuilder.java:745)
        at org.apache.cxf.javascript.service.ServiceJavascriptBuilder.createResponseDeserializer(ServiceJavascriptBuilder.java:516)
        at org.apache.cxf.javascript.service.ServiceJavascriptBuilder.end(ServiceJavascriptBuilder.java:269)
        at org.apache.cxf.service.ServiceModelVisitor.walk(ServiceModelVisitor.java:76)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScriptProcessor.process(WSDLToJavaScriptProcessor.java:93)
        at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:147)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:286)
        ... 5 more
{code}

xsd:
{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<schema
	xmlns=""http://www.w3.org/2001/XMLSchema"" targetNamespace=""http://webservices/""
	xmlns:tns=""http://webservices/"" elementFormDefault=""qualified"">
	
	<!-- getFacilities -->
	<element name=""FacilityID"" type=""string"" />
	<element name=""FacilityName"" type=""string"" />
	<element name=""Facility"">
		<complexType>
			<sequence>
				<element ref=""tns:FacilityID"" />
				<element ref=""tns:FacilityName"" />
			</sequence>
		</complexType>
	</element>
	<element name=""Facilities"">
		<complexType>
			<sequence>
				<element maxOccurs=""unbounded"" ref=""tns:Facility"" />
			</sequence>
		</complexType>
	</element>
	
	<!-- getAreasForFacility -->
	<element name=""AreaName"" type=""string"" />
	<element name=""Area"">
		<complexType>
			<sequence>
				<element ref=""tns:FacilityID"" />
				<element ref=""tns:AreaName"" />
			</sequence>
		</complexType>
	</element>
	<element name=""Areas"">
		<complexType>
			<sequence>
				<element maxOccurs=""unbounded"" ref=""tns:Area"" />
			</sequence>
		</complexType>
	</element>
	
	<!-- getLocationsForArea -->
	<element name=""GetLocationsRequestParam"">
		<complexType>
			<sequence>
				<element ref=""tns:FacilityID"" />
				<element ref=""tns:AreaName"" />
			</sequence>
		</complexType>
	</element>
	<element name=""LocationName"" type=""string"" />
	<element name=""LocationState"" type=""string"" />
	<element name=""Location"">
		<complexType>
			<sequence>
				<element ref=""tns:FacilityID"" />
				<element ref=""tns:AreaName"" />
				<element ref=""tns:LocationName"" />
				<element ref=""tns:LocationState"" />
			</sequence>
		</complexType>
	</element>
	<element name=""Locations"">
		<complexType>
			<sequence>
				<element maxOccurs=""unbounded"" ref=""tns:Location"" />
			</sequence>
		</complexType>
	</element>
	
	<!-- getLocationState -->
	<element name=""GetLocationStateRequestParam"">
		<complexType>
			<sequence>
				<element ref=""tns:FacilityID"" />
				<element ref=""tns:AreaName"" />
				<element ref=""tns:LocationName"" />
			</sequence>
		</complexType>
	</element>
	
</schema>
{code}

wsdl:

{code}
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<wsdl:definitions
	xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tns=""http://webservices/""
	xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
	name=""OnTrack"" targetNamespace=""http://webservices/"">

	<wsdl:types>
		<xsd:schema>
			<xsd:import schemaLocation=""OnTrack.xsd"" namespace=""http://webservices/"" />
		</xsd:schema>
	</wsdl:types>
  
	<wsdl:message name=""GetFacilitiesRequest"" />
	<wsdl:message name=""GetFacilitiesResponse"">
		<wsdl:part element=""tns:Facilities"" name=""Facilities"" />
	</wsdl:message>
	<wsdl:message name=""GetAreasRequest"">
		<wsdl:part element=""tns:FacilityID"" name=""FacilityID"" />
	</wsdl:message>
	<wsdl:message name=""GetAreasResponse"">
		<wsdl:part element=""tns:Areas"" name=""Areas"" />
	</wsdl:message>
	<wsdl:message name=""GetLocationsRequest"">
		<wsdl:part element=""tns:GetLocationsRequestParam"" name=""FacilityID_AreaName"" />
	</wsdl:message>
	<wsdl:message name=""GetLocationsResponse"">
		<wsdl:part element=""tns:Locations"" name=""Locations"" />
	</wsdl:message>
	<wsdl:message name=""GetLocationStateRequest"">
		<wsdl:part element=""tns:GetLocationStateRequestParam"" name=""FacilityID_AreaName_LocationName"" />
	</wsdl:message>
	<wsdl:message name=""GetLocationStateResponse"">
		<wsdl:part element=""tns:Location"" name=""Location"" />
	</wsdl:message>
  
	<wsdl:portType name=""OnTrack"">
		<wsdl:operation name=""GetFacilities"">
			<wsdl:input message=""tns:GetFacilitiesRequest""/>
			<wsdl:output message=""tns:GetFacilitiesResponse""/>
		</wsdl:operation>
		<wsdl:operation name=""GetAreas"">
			<wsdl:input message=""tns:GetAreasRequest"" />
			<wsdl:output message=""tns:GetAreasResponse"" />
		</wsdl:operation>
		<wsdl:operation name=""GetLocations"">
			<wsdl:input message=""tns:GetLocationsRequest"" />
			<wsdl:output message=""tns:GetLocationsResponse"" />
		</wsdl:operation>
		<wsdl:operation name=""GetLocationState"">
			<wsdl:input message=""tns:GetLocationStateRequest"" />
			<wsdl:output message=""tns:GetLocationStateResponse"" />
		</wsdl:operation>
	</wsdl:portType>
  
	<wsdl:binding name=""OnTrackSOAP"" type=""tns:OnTrack"">
		<soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
		<wsdl:operation name=""GetFacilities"">
			<soap:operation soapAction=""""/>
			<wsdl:input>
				<soap:body use=""literal""/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use=""literal""/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name=""GetAreas"">
			<soap:operation soapAction=""""/>
			<wsdl:input>
				<soap:body use=""literal""/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use=""literal""/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name=""GetLocations"">
			<soap:operation soapAction=""""/>
			<wsdl:input>
				<soap:body use=""literal""/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use=""literal""/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name=""GetLocationState"">
			<soap:operation soapAction=""""/>
			<wsdl:input>
				<soap:body use=""literal""/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use=""literal""/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
  
	<wsdl:service name=""OnTrack"">
		<wsdl:port binding=""tns:OnTrackSOAP"" name=""OnTrackSOAP"">
			<soap:address location=""http://godleski2-dt/OnTrack""/>
		</wsdl:port>
	</wsdl:service>
  
</wsdl:definitions>
{code}",Windows Vista 64-bit,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,215294,,,Mon Nov 07 19:45:57 UTC 2011,,,,,,0|i0b8en:,63474,,,,,,,,"07/Nov/11 19:45;ixeldog;I downloaded the source code to try and find some sort of solution to this problem. I don't really understand conceptually what I did, but I know I was able to get it working and have been using it without issue. There was one change I made:

org.apache.cxf.javascript.service.ServiceJavascriptBuilder
private void getElementsForParts(MessageInfo message, List<ParticleInfo> elements)
if (betterElement instanceof XmlSchemaElement) {} - I commented out this entire if statement block.

Again, no idea what this really did but it fixed my problem and I've been adding webservices to the xsd and wsdl given above without a problem so far.",,,,,,,,,,,,,,,,,,,,,,,,,,
OOM when uploading files greater than 2GB,CXF-3889,12529306,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ar_narayanan,ar_narayanan,28/Oct/11 19:41,03/Nov/11 05:48,14/Mar/19 02:29,28/Oct/11 20:30,2.4.3,,,,,,,,,,,,,,,,,2.5,,,,Core,,,,0,,,,,,"The totalLength field in org.apache.cxf.io.CachedOutputStream is declared as a int field, so when a file greater than 2GB is uploaded for a PUT operation, OOM is thrown.

When the file size is over 2GB the condition 'totalLength < limit' becomes true when it should not.

 public void writeCacheTo(StringBuilder out, String charsetName, int limit) throws IOException {
294        flush();
295        if (totalLength < limit
296            || limit == -1) {
297            writeCacheTo(out);
298            return;
299        }",All environments,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-28 20:30:08.536,,,no_permission,,Novice,,,,,,,,,,,215166,,,Thu Nov 03 05:48:12 UTC 2011,,,,,,0|i0sxn3:,166927,,,,,,,,"28/Oct/11 20:30;dkulp;
Fixed for 2.5.

As it changes the type of the getSize() method, not something that can be backported to 2.4.x as it's an API change.","03/Nov/11 05:48;ar_narayanan;How about not writing the payload to the log if the content type is of type ""application/octet-stream"". Right now first 100k is written to the log.",,,,,,,,,,,,,,,,,,,,,,,,,
Maven Config Error,CXF-3886,12529055,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jan4talend,jan4talend,27/Oct/11 14:19,01/Nov/11 02:11,14/Mar/19 02:29,27/Oct/11 16:54,2.5,,,,,,,,,,,,,,,,,2.5,,,,Build system,,,,0,build,maven,,,,"After downloading latest build from svn (revision: 1189767), I tried to build cxf. Following error occurred:

PS C:\Users\jbernhard\workspace\DIMDI STS\cxf> mvn clean install
[INFO] Scanning for projects...
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]
[ERROR]   The project org.apache.cxf.services.sts:cxf-services-sts-systests:2.5.0-SNAPSHOT (C:\Users\jbernhard\workspace\DIMDI STS\cxf\services\sts\systests\pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Could not find artifact org.apache.cxf:cxf:pom:2.5.0-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 28, column 13 -> [Help 2]","Apache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)
Maven home: C:\Program Files\apache-maven-3.0.3
Java version: 1.6.0_25, vendor: Sun Microsystems Inc.
Java home: C:\Program Files\Java\jdk1.6.0_25\jre
Default locale: de_DE, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows""",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,214915,,,2011-10-27 14:19:42.0,,,,,,0|i1ag53:,269081,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[JAXB] DynamicClientFactory#setupClasspath does not handle URL encoded file names correctly,CXF-3884,12528856,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ocostet,ocostet,26/Oct/11 11:19,08/Nov/11 05:31,14/Mar/19 02:29,27/Oct/11 07:38,2.4.3,,,,,,,,,,,,,,,,,2.3.8,2.4.4,,,JAXB Databinding,,,,0,,,,,,"Hi,

I believe there is a bug in
org.apache.cxf.endpoint.dynamic.DynamicClientFactory#setupClasspath(StringBuilder, ClassLoader).

That method goes through the classloader hierarchy trying to find
classpath components. Among others, it checks the resource URLs returned
by java.net.URLClassLoader#getUrls(), trying to find a corresponding JAR
file.

However, its handling of the URLs is incorrect and fails if it
encounters a URL-encoded file path, for instance:
 file:/C:/Program%20Files/Crapware/etc.

The code is:

URI uri = new URI(url.getProtocol(), null, url.getPath(), null, null);
file = new File(uri.getPath()); 


This doesn't work. The java.net.URI c'tor used here *escapes* characters
as necessary.

Correct code would use:

URI uri = new URI(url.toString());
file = new File(uri.getPath());

or

URI uri = new URI(url.getProtocol(), null,
URLDecoder.decode( url.getPath(), ""UTF-8"" ), null, null);
file = new File(uri.getPath()); 

-.-

_Use case and why it fails_

My code, running in an application container, creates a client using the
DynamicClientFactory from some WSDL. 

That WSDL declares some (simple) types.

Those types are bound (via JAXB) to Java types that are part of my
application.

Code generation works fine, creating Adapters from the basic types to
the bound types.

But #setupClasspath() fails to find my application's JARs, because
they're loaded by the application classloader, a URLClassLoader, and are
on a path containing a space.

Consequently, the generated files cannot be compiled, because the bound
Java types cannot be resolved.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-27 07:38:26.303,,,no_permission,,Moderate,,,,,,,,,,,214716,,,Thu Oct 27 07:38:26 UTC 2011,,,,,,0|i0b8lb:,63504,,,,,,,,"26/Oct/11 11:19;ocostet;Comment from Aki Yoshida <elakito@googlemail.com>:

Instead of going over URI, I think the code could simply use the
URLDecoder.decode(url.getPath(), ""utf-8"") in the File's constructor
after checking url.getPath() being not null.","27/Oct/11 07:38;ay;url-decoding now applied for file path determination.

Thanks to Oliver for analyzing this issue.",,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper does not print the WebApplicationException stack trace even when log level is set to FINEST,CXF-3878,12528545,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,dearjadu,dearjadu,24/Oct/11 19:07,08/Nov/11 05:30,14/Mar/19 02:29,26/Oct/11 14:38,2.3.7,2.4.3,,,,,,,,,,,,,,,,2.3.8,2.4.4,,,JAX-RS,,,,0,log,,,,,"WebApplicationException occurring as a result of a JAXB mapping (an internal NullPointerException caused it), never got printed on the console or in the logs.  The following message did get printed:

  WARNING WebApplicationException has been caught, cause: java.lang.NullPointerException

But beyond this, no other information was available. Debugging revealed that the problem was in JAXB mapping in one of my classes, but it would have been very helpful if the exception trace is printed in the logs or on the console.

The problem remained even after setting the log levels in logging.properties to FINEST.  Other FINEST logs did get printed fine, except for the stack trace of the exception.  My research showed that the setPrintStackTrace(boolean) method of WebApplicationExceptionMapper never gets called from anywhere.  This will mean that the printStackTrace variable of the class always remains false, resulting in eternal shadowing of the stack trace. 

I made a small change to my local copy of org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper Java file and patched it to cxf-2.4.3.jar to get the stack trace in my logs when log level was set to INFO or lower.  The three line change is as below:

    public Response toResponse(WebApplicationException ex) {
+    	if(LOG.isLoggable(Level.INFO)) {
+    		printStackTrace = true;
+    	}
    	...
(lines with + are added lines)

It would be great if you can make this change in subsequent versions.","Windows 7 64-bit, JDK 1.7.0",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-25 20:44:38.639,,,no_permission,,Novice,,,,,,,,,,,214405,,,Wed Oct 26 08:24:12 UTC 2011,,,,,,0|i0b6vj:,63226,,,,,,,,"25/Oct/11 20:44;dkulp;Actually, the printStackTrace stuff is kind of crappy as that would just print to stderr and not into the logs at all.   I've done:

{code}
        Message msg = PhaseInterceptorChain.getCurrentMessage();
        FaultListener flogger = null;
        if (msg != null) {
            flogger = (FaultListener)PhaseInterceptorChain.getCurrentMessage()
                .getContextualProperty(FaultListener.class.getName());
        }
        if (flogger != null) {
            flogger.faultOccurred(ex, message, msg);
        } else if (LOG.isLoggable(Level.FINE)) {
            LOG.log(Level.FINE, message, ex);
        }
{code}

Which accomplishes two things:

1) If a FaultListener is registered (example: on the bus), the Exception will feed into there and the listener can do whatever it wants.

2) Otherwise, log the full exception at FINE level.

","25/Oct/11 21:03;sergey_beryozkin;Hi Dan - thanks for the fix - that printing to the stderr was messy - Glen asked me to remove that awhile back but somehow I forgot.
JAXBProviders would LOG the captured trace but NPE is escaping that...

I'll probably create some exception utils later on and push this common code there

cheers","25/Oct/11 21:11;sergey_beryozkin;The only thing is that we probably do not want the stack trace, etc to happen in case of say throw new WebApplicationException(404) which is part of the flow - may be that can be configurable - will look into it later ","26/Oct/11 08:24;sergey_beryozkin;indeed, using the custom fault logger is the best option to regulate whether to log or not, thanks.
also if needed, users can add custom WbApplicationExceptionMappers ",,,,,,,,,,,,,,,,,,,,,,,
WADL generator fails if no parameter type is specified,CXF-3875,12528478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,24/Oct/11 12:49,01/Nov/11 02:11,14/Mar/19 02:29,25/Oct/11 16:49,,,,,,,,,,,,,,,,,,2.4.4,2.5,,,JAX-RS,,,,0,,,,,,and also ignores default values,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,214338,,,2011-10-24 12:49:06.0,,,,,,0|i0b6nb:,63189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE is thrown when ws-addr is configured using policy and ws-addr Action is absent,CXF-3871,12528234,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,ay,ay,ay,21/Oct/11 08:05,01/Nov/11 02:11,14/Mar/19 02:29,25/Oct/11 15:14,2.3.7,2.4.3,,,,,,,,,,,,,,,,2.3.8,2.4.4,2.5,,WS-* Components,,,,0,,,,,,"When using ws-policy to configure ws-addressing and when the addressing's Action is not correctly given (e.g., the Action is not set or the namespace is given incorrectly), an NPE is thrown from ws-a's ContextUtils' getAction method shown below (using trunk):

Caused by: java.lang.NullPointerException
        at org.apache.cxf.ws.addressing.ContextUtils.getAction(ContextUtils.java:921)
        at org.apache.cxf.ws.addressing.ContextUtils.getActionFromMessageAttributes(ContextUtils.java:896)
        at org.apache.cxf.ws.addressing.ContextUtils.getActionFromServiceModel(ContextUtils.java:832)
        at org.apache.cxf.ws.addressing.ContextUtils.getAction(ContextUtils.java:800)
        at org.apache.cxf.ws.addressing.MAPAggregator.assembleGeneric(MAPAggregator.java:687)
        at org.apache.cxf.ws.addressing.MAPAggregator.aggregate(MAPAggregator.java:660)
        at org.apache.cxf.ws.addressing.MAPAggregator.mediate(MAPAggregator.java:515)
        at org.apache.cxf.ws.addressing.MAPAggregator.handleMessage(MAPAggregator.java:228)

Instead, in this case, a null should be returned from this method so that the subsequent fallback logic gets the addressing action value from the soap action value.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,97577,,,2011-10-21 08:05:56.0,,,,,,0|i0b6dj:,63145,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
aegis databing SOAP response does not respect validation standard ,CXF-3870,12527959,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,acollier,acollier,20/Oct/11 16:17,19/Dec/11 16:15,14/Mar/19 02:29,29/Nov/11 19:02,2.4.3,,,,,,,,,,,,,,,,,2.5,,,,Aegis Databinding,,,,0,,,,,,"We are using aegis data binding to produce SOAP and wsdl content in front a web server. Integration with spring works great, and the services are consumable by both Java and PHP clients. But if I validate the SOAP response with a tool (such as SOAP UI), an error occurs on complex type binding involving an inheritance pattern.

Complex inheritance scheme:
{quote} 
   AbstractObjectA implements-> InterfaceObjectA
   ObjectAImpl extends-> AbstractObjectA
   AbstractObjectB implements-> InterfaceObjectB
   AbstractObjectB extends-> AbstractObjectA
   ObjectBImpl extends-> AbstractObjectB
{quote} 

Spring and aegis configuration:
{quote} 
	<bean id=""aegisContext"" class=""org.apache.cxf.aegis.AegisContext"">
		<property name=""writeXsiTypes"" value=""true"" />
		<property name=""enableJDOMMappings"" value=""true"" />
		<property name=""mtomEnabled"" value=""true"" />
		<property name=""beanImplementationMap"">
			<map>
				<entry key=""my.company.domain.ObjectA"" value=""AbstractObjectA""/>
				<entry key=""my.company.domain.ObjectB"" value=""AbstractObjectB""/>
			</map>
		</property>
		<property name=""rootClassNames"">
			<set>
				<value>my.company.domain.ObjectAImpl</value>
				<value>my.company.domain.ObjectBImpl</value>
			</set>
		</property>
	</bean>
		
	<bean id=""aegisBean"" class=""org.apache.cxf.aegis.databinding.AegisDatabinding"" scope=""prototype"">
		<property name=""aegisContext"" ref=""aegisContext""/>
	</bean>
	
	<bean id=""service-factory"" class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"" scope=""prototype"">
		<property name=""dataBinding"" ref=""aegisBean"" />
		<property name=""serviceConfigurations"">
			<list>
				<bean class=""org.apache.cxf.jaxws.support.JaxWsServiceConfiguration"" />
				<bean class=""org.apache.cxf.service.factory.DefaultServiceConfiguration"" />
			</list>
		</property>
	</bean>

	<jaxws:endpoint id=""SoapServiceTestJaxws"" implementor=""#testService"" address=""/serviceTestJaxws"" >
		<jaxws:serviceFactory>
			<ref bean='service-factory' />
		</jaxws:serviceFactory>
	</jaxws:endpoint>	
{quote} 

here is the wsdl:types part of resulting wsdl :
{quote} 
<wsdl:types>
<xsd:schema attributeFormDefault=""qualified"" elementFormDefault=""qualified"" argetNamespace=""http://domain.company.my"">

<xsd:complexType name=""ObjectB"">
   <xsd:sequence>
      <xsd:element minOccurs=""0"" name=""attributeA"" nillable=""true"" type=""xsd:string""/>
      <xsd:element minOccurs=""0"" name=""attributeB"" nillable=""true"" type=""xsd:string""/>
      <xsd:element minOccurs=""0"" name=""id"" type=""xsd:long""/>
   </xsd:sequence>
</xsd:complexType>

<xsd:complexType name=""ObjectBImpl"">
   <xsd:complexContent>
      <xsd:extension base=""tns:AbstractObjectB"">
         <xsd:sequence/>
      </xsd:extension>
   </xsd:complexContent>
</xsd:complexType>

<xsd:complexType abstract=""true"" name=""AbstractObjectB"">
   <xsd:complexContent>
      <xsd:extension base=""tns:AbstractObjectA"">
         <xsd:sequence>
            <xsd:element minOccurs=""0"" name=""attributeB"" nillable=""true"" type=""xsd:string""/>
         </xsd:sequence>
      </xsd:extension>
   </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name=""ObjectAImpl"">
   <xsd:complexContent>
      <xsd:extension base=""tns:AbstractObjectA"">
         <xsd:sequence/>
      </xsd:extension>
   </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name=""ObjectA"">
   <xsd:sequence>
      <xsd:element minOccurs=""0"" name=""attributeA"" nillable=""true"" type=""xsd:string""/>
      <xsd:element minOccurs=""0"" name=""id"" type=""xsd:long""/>
   </xsd:sequence>
</xsd:complexType>

<xsd:complexType abstract=""true"" name=""AbstractObjectA"">
   <xsd:sequence>
      <xsd:element minOccurs=""0"" name=""attributeA"" nillable=""true"" type=""xsd:string""/>
      <xsd:element minOccurs=""0"" name=""id"" type=""xsd:long""/>
   </xsd:sequence>
</xsd:complexType>

</xsd:schema>
</wsdl:types>
{quote} 

Here is a web service declaration:
{quote}
	@WebMethod
	public ObjectB methodWithB(@WebParam(name = ""pInputTypeB"", mode = WebParam.Mode.IN) ObjectB pInputTypeB)
{quote}

and the soap response to a call to that service:
{quote}
<soap:Envelope>
   <soap:Body>
      <ns1:methodWithBResponse>
         <return xsi:type=""ns2:ObjectBImpl"">
            <ns2:attributeA>attributeAValue</ns2:attributeA>
            <ns2:id>0</ns2:id>
            <ns2:attributeB>attributeBValue</ns2:attributeB>
         </return>
      </ns1:methodWithBResponse>
   </soap:Body>
</soap:Envelope>
{quote}

We can see in wsdl content that inheritance between interfaces and abstract objects are not described. The inheritance tree isn't complete and similar to what is coded in java. If a service return type is described with an interface and the real content is an implementation object, validation of soap response will fail. Java clients (cxf aegis client) seem to be smart enough to unmarshall that kind of inheritance tree, PHP clients need to declare a data type mapping to complete the inheritance tree, but .NET client are blocking on validation of the soap response as they fail to match interface and implementation types (As far as I know). 

Existing tickets on XFire's jira were pointing that problem, have they been fixed in CXF : 
   http://jira.codehaus.org/browse/XFIRE-556
   http://jira.codehaus.org/browse/XFIRE-558

I've upgraded the CXF lib on my project to the last stable version (2.4.3) but the problem remains.

If someone want to test it, I can supply a full working project (~40Mb due to a messy lib dir).

Alex",Debian/Tomcat/Spring/CXF/Aegis/Hibernate/PostgreSQL,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-20 16:20:13.886,,,no_permission,,Unknown,,,,,,,,,,,92374,,,Tue Nov 29 19:02:11 UTC 2011,,,,,,0|i14f5j:,233918,,,,,,,,"20/Oct/11 16:20;bmargulies;If you could take the time to create a small example of the phenomenon that would be helpful; otherwise one of us will have to do that.
","21/Oct/11 08:43;acollier;Here you can download an eclipse project which demonstrate the problem : http://dl.free.fr/q6D63s3Vs
I can't upload it on the jira because the file is too large (20Mo).

Alex","25/Oct/11 20:31;dkulp;
Only ""fixed"" on 2.5 as is changes some mapping in Aegis which could break thing.

It's now ""somewhat fixed"" in that it will map the interface hierarchy into the schema.  Thus, you will get schema like:

{code:xml}
<wsdl:types>
    <xsd:schema xmlns:ns0=""http://persistence.core.spring.uml2.cartridges.fornax.org"" xmlns:tns=""http://domain.company.my"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" attributeFormDefault=""qualified"" elementFormDefault=""qualified"" targetNamespace=""http://domain.company.my"">
        <xsd:import namespace=""http://persistence.core.spring.uml2.cartridges.fornax.org""/>
        <xsd:complexType name=""ObjectA"">
            <xsd:sequence>
                <xsd:element minOccurs=""0"" name=""attributeA"" nillable=""true"" type=""xsd:string""/>
                <xsd:element minOccurs=""0"" name=""id"" type=""xsd:long""/>
            </xsd:sequence>
        </xsd:complexType>
        <xsd:complexType name=""ObjectB"">
            <xsd:complexContent>
                <xsd:extension base=""tns:ObjectA"">
                    <xsd:sequence>
                        <xsd:element minOccurs=""0"" name=""attributeB"" nillable=""true"" type=""xsd:string""/>
                    </xsd:sequence>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
        <xsd:complexType name=""ObjectBDao"">
            <xsd:complexContent>
                <xsd:extension base=""ns0:GenericDao"">
                    <xsd:sequence/>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
        <xsd:complexType name=""ObjectADao"">
            <xsd:complexContent>
                <xsd:extension base=""ns0:GenericDao"">
                    <xsd:sequence/>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:tns=""http://persistence.core.spring.uml2.cartridges.fornax.org"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" attributeFormDefault=""qualified"" elementFormDefault=""qualified"" targetNamespace=""http://persistence.core.spring.uml2.cartridges.fornax.org"">
        <xsd:complexType name=""GenericDao"">
            <xsd:sequence>
                <xsd:element minOccurs=""0"" name=""count"" nillable=""true"" type=""xsd:long""/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:schema>
</wsdl:types>

{code}

However, you cannot really set the rootClasses to the concrete classes or they will start to appear in the schema as well and there isn't a way, in schema, to represent both the interface and the concrete class hierarchies that you have.
","14/Nov/11 09:17;acollier;This bug is not fixed yet, as inheritance between interfaces and abstract classes is still not present in generated wsdl.","14/Nov/11 09:29;acollier;I've tested with the 2.5 cxf snapshot, and there is no change for the problem mentioned earlier. Inheritance between interfaces and abstract classes is still not present in wsdl. Moreover, SOAP response is still not valid as it returns implementation object for a method declared to return an interface object. 



","29/Nov/11 19:02;dkulp;
The result with 2.5 is the best that can be done with XMLSchema.   XSD does not allow interfaces to be mapped in.  Thus, the best we can do is the hierarchy of the abstract classes which is what it is doing now.   WSDL operations must return an element with a concrete (or abstract) type, not an interface.  Thus, the current behavior is ""correct"".


",,,,,,,,,,,,,,,,,,,,,
"CXF STS WSDL not updating both SOAP 1.2 and SOAP 1.1 addresses upon initial ""?wsdl"" view from browser.",CXF-3868,12527929,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,gmazza,gmazza,20/Oct/11 14:13,10/Apr/17 19:06,14/Mar/19 02:29,18/Sep/13 16:47,2.5,,,,,,,,,,,,,,,,,,,,,Services,,,,0,,,,,,"I haven't had time to research this further, it could be a CXF-wide problem and not just a STS one, but for a CXF STS WSDL that offers both a SOAP 1.2 and SOAP 1.1 endpoint, viewing one of the endpoints (via ...?wsdl) from the browser shows that the other's soap:address field has not been updated with the actual soap:address (taking into account the deployment environment, etc.) Switching to the other endpoint's ""?wsdl"" causes it to be updated, and both endpoints shown properly, and returning to the original ?wsdl call will again cause both endpoints to be displayed properly.",Ubuntu Linux JDK 1.6 CXF 2.5,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-09-18 16:47:16.355,,,no_permission,,Moderate,,,,,,,,,,,92340,,,Wed Sep 18 16:47:16 UTC 2013,,,,,,0|i1ag5r:,269084,,,,,,,,"18/Sep/13 16:47;coheigea;
This seems to have been fixed in the meantime. Confirmed with a STS WSDL with a SOAP 1.1 + 1.2 endpoint on trunk + 2.7.x-fixes.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix for CXF-1816 causes startup performance regression,CXF-3867,12527927,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,joel.turkel,joel.turkel,20/Oct/11 13:50,03/Jan/12 00:24,14/Mar/19 02:29,12/Dec/11 22:02,2.2,2.3,2.4,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,,,,,0,,,,,,The fix for CXF-1816 is causing a 50% startup performance regression for my application. The problem stems from changing the default value for URL connection caching to false which really slows down classloader performance. Perhaps CXF could make this workaround configurable like Tomcat does with the urlCacheProtection setting?,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-12-12 22:02:50.821,,,no_permission,,Unknown,,,,,,,,,,,92337,,,Tue Jan 03 00:24:51 UTC 2012,,,,,,0|i0b8cv:,63466,,,,,,,,"20/Oct/11 13:52;joel.turkel;Note it's possible to workaround this by resetting the default value for connection caching e.g.

{code}
// Grab a logger from CXF to force CXF to install its workarounds
LogUtils.getL7dLogger(getClass());

// Create a dummy URL connection so we can change the default value
URLConnection urlConnection = new URLConnection(new URL(""jar:file://dummy.jar!/"")) {
	
	@Override
	public void connect() throws IOException {
		// Do nothing
	}
};
urlConnection.setDefaultUseCaches(true);
{code}","12/Dec/11 22:02;dkulp;
Added a system property (org.apache.cxf.JDKBugHacks.defaultUsesCaches) and a META-INF/cxf file that can be used to control it.",03/Jan/12 00:24;joel.turkel;It looks like the approach of using a META-INF/cxf/org.apache.cxf.JDKBugHacks.defaultUsesCaches file to configure this feature requires the resource to be in the system classloader (because the first line of JDKBugHacks.doHacks() sets the current thread context classloader to the system classloader). Is this expected? It makes it harder to deploy the workaround in certain environments.,,,,,,,,,,,,,,,,,,,,,,,,
"""CXF-Service List"" page mess up in some case",CXF-3866,12527871,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,20/Oct/11 04:05,01/Nov/11 02:11,14/Mar/19 02:29,20/Oct/11 09:34,,,,,,,,,,,,,,,,,,2.4.4,2.5,,,Transports,,,,0,,,,,,"to reproduce, deploy an endpoint in OSGi container using http-osgi transport with address like
http://localhost:8181/cxf/
1. in a browser go in address http://localhost:8181/cxf/, get expected out put like
Endpoint address: http://localhost:8181/cxf/HelloWorld
WSDL : {http://cxf.examples.servicemix.apache.org/}HelloWorldImplService
Target namespace: http://cxf.examples.servicemix.apache.org/
2. click to see the wsdl in page
3. in a browser go in address http://127.0.0.1:8181/cxf/, get messed up out put this time like
Endpoint address: http://127.0.0.1:8181/cxfhttp://localhost:8181/cxf/HelloWorld
WSDL : {http://cxf.examples.servicemix.apache.org/}HelloWorldImplService
Target namespace: http://cxf.examples.servicemix.apache.org/

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,92138,,,Thu Oct 20 09:34:32 UTC 2011,,,,,,0|i0b6en:,63150,,,,,,,,"20/Oct/11 09:34;ffang;commit fix
http://svn.apache.org/viewvc?rev=1186634&view=rev for trunk
http://svn.apache.org/viewvc?rev=1186645&view=rev for 2.4.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
BindingCustomization does not work for the wsdl url like file://home/usr/../../wsdl/helloworld.wsdl,CXF-3862,12527699,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,19/Oct/11 04:33,01/Nov/11 02:11,14/Mar/19 02:29,25/Oct/11 16:16,,,,,,,,,,,,,,,,,,2.4.4,2.5,,,Tooling,,,,0,,,,,,"When the the binding file like the below is gave to customize the package name and there is some "".."" or ""."" in the given wsdl url, wsdl2java fails to generate the class in the expected package :

----binding file ----------

<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<bindings wsdlLocation=""hello-world.wsdl"" xmlns=""http://java.sun.com/xml/ns/jaxws"">    
    <bindings node=""ns1:definitions"" xmlns:ns1=""http://schemas.xmlsoap.org/wsdl/"">
        <package name=""org.apache.cxf""/>
    </bindings>
</bindings>

----command to generate code ---
wsdl2java -b bindingfile.xml file://home/usr/hello/world/../../hello-world.wsdl ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,89020,,,2011-10-19 04:33:06.0,,,,,,0|i0b6nz:,63192,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CXF sample ""restful_dispatch"" Readme.txt need to be updated",CXF-3860,12527575,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,njiang,njiang,njiang,18/Oct/11 11:49,01/Nov/11 02:11,14/Mar/19 02:29,18/Oct/11 12:57,,,,,,,,,,,,,,,,,,2.3.8,2.4.4,2.5,,Samples,,,,0,,,,,,"A HTTP GET request to URL http://localhost:9000/customerservice/customer?id=1234 
returns a customer instance whose id is 1234. The XML document returned:
<Customer>
<id>1234</id>
<name>John</name>
<phoneNumber>123456</phoneNumber>
</Customer>

A HTTP POST request to URL http://localhost:9000/customerservice/customer 
with the data:

<Customer>
<id>1234</id>
<name>John</name>
<phoneNumber>123456</phoneNumber>
</Customer>

updates customer 1234 with the data provided.

==================================================================
vs. client output:

Invoking server through HTTP GET to query customer info

Response ******
<Customer>
<name>John</name>
<id>123456</id>
</Customer>
Invoking through HTTP POST to update customer using JAX-WS Dispatch

Response ******
<Customer>
<name>John</name>
<id>123456</id>
</Customer>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,88798,,,2011-10-18 11:49:50.0,,,,,,0|i0b6in:,63168,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-codegen-plugin cannot allow element references for wrapped style,CXF-3856,12526787,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,dretzlaff,dretzlaff,12/Oct/11 01:51,08/Nov/11 05:30,14/Mar/19 02:29,20/Oct/11 01:20,2.4.3,,,,,,,,,,,,,,,,,2.4.4,,,,Tooling,,,,0,,,,,,"The fix to https://issues.apache.org/jira/browse/CXF-1079 contains a typo in WsdlOption.java which prevents the allowElementReferences option from being used in cxf-codegen-plugin. Whereas WsdlOption uses ""-allowElementRefs"", WSDLToJava/ToolConstants expects ""-allowElementReferences"". Maybe WsdlOption#generateCommandLine() can use ToolConstants as well?",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,73842,,,2011-10-12 01:51:32.0,,,,,,0|i0b6rj:,63208,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect character escaping by URIParserUtil,CXF-3855,12526668,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jenya,jenya,11/Oct/11 14:16,08/Nov/11 05:29,14/Mar/19 02:29,20/Oct/11 16:31,2.4.2,,,,,,,,,,,,,,,,,2.3.8,2.4.4,,,Tooling,,,,0,parse,utf-8,util,,,"Class URIParserUtil. Function escapeChars(String s) produces incorrect result for characters, which utf-8 representation is greater than 1 byte length.
For example, character ""ц"" ([-47, -122] in utf-8) is encoded as ""%d861"", but expected value is ""%d186"".
This patch should fix the problem.

{noformat}
--- URIParserUtil.java	2011-10-11 18:02:59.786548800 +0400
+++ URIParserUtil.java	2011-10-11 18:03:09.544548800 +0400
@@ -236,8 +236,9 @@
                     b.setCharAt(x++, '%');
                     for (int y = 0; y < bytes.length; y++) {
                         b.insert(x++, HEX_DIGITS.charAt((bytes[y] & 0xFF) >> 4));
-                        b.insert(x, HEX_DIGITS.charAt(bytes[y] & 0x0F));
+                        b.insert(x++, HEX_DIGITS.charAt(bytes[y] & 0x0F));
                     }
+					x--;
                 } catch (UnsupportedEncodingException e) {
                     //should not happen
                 }
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-20 14:00:37.206,,,no_permission,,Novice,,,,,,,,,,,59138,,,Thu Oct 27 11:11:45 UTC 2011,,,,,,0|i0b8of:,63518,,,,,,,,"20/Oct/11 14:00;dkulp;
Actually, I think it should be escaped to %d8%61 to go into a URI?  Right?

If I do:
{code}
      String orig = new String(new byte[] {-47, -122}, ""UTF-8"");
      orig = ""/foo"" + orig + "".txt"";
      String s = URIParserUtil.escapeChars(orig);
      assertEquals(orig, new File(new URI(""file:"" + s)).
{code}

it fails as the URI doesn't decode properly with the old code or your code.  If I use %d8%61, it passes.   Does anyone agree/disagree with that?


","20/Oct/11 14:07;dkulp;According to:

http://en.wikipedia.org/wiki/Percent-encoding

the percent encoding is in octets and thus it should be %d8%61.

","20/Oct/11 16:33;jenya;Daniel, you're right. Each encoded byte should be escaped with the percent sign. But it's not enough.
The sequence of hex digits in the original method implementation is not correct.
We have: [d 8 6 1], but correct is [d 1 8 6].

So, result for the example above should be %d1%86.
","20/Oct/11 16:39;dkulp;
Right. %d1%86    I actually rewrote the whole method to simplify it which fixes that issue and the each byte needs it issue. 

Fixed on trunk and 2.4.x now.","27/Oct/11 11:11;ay;The unit test for this patch seems to fail on windows because of the windows specific directory prefix automatically added by URI.getAbsolutePath() in

        assertEquals(orig, new File(new URI(""file:"" + s)).getAbsolutePath());

resulting in:

Running org.apache.cxf.tools.util.URIParserUtilTest
Tests run: 4, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec <<< FAILURE!
testCXF3855(org.apache.cxf.tools.util.URIParserUtilTest)  Time elapsed: 0.001 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[/]foo?.txt> but was:<[C:\]foo?.txt>

We should change this assertion line to:
        assertEquals(orig, URLDecoder.decode(s, ""UTF-8""));

",,,,,,,,,,,,,,,,,,,,,,
java.lang.StringIndexOutOfBoundsException is thrown when generating sources for a WADL with WADL2Java Maven plugin,CXF-3854,12526632,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,particle,particle,11/Oct/11 09:57,01/Nov/11 02:11,14/Mar/19 02:29,25/Oct/11 16:41,2.5,,,,,,,,,,,,,,,,,2.4.4,2.5,,,Build system,JAX-RS,JAXB Databinding,,0,cxf-wadl2java-plugin,jaxrs,wadl,wadl2java,,"I want to create the client stubs with a .wadl file.
*Before you ask, it's not possible for me to attach the file due to an NDA.*

(on) *Important:*
It works fine, if I don't use the {{<extraarg>-impl</extraarg>}} extraarg.

This is the maven plugin definition in the {{pom.xml}} file:

{code:xml} 
<plugin>
    <groupId>org.apache.cxf</groupId>
    <artifactId>cxf-wadl2java-plugin</artifactId>
    <!-- version>2.4.1</version -->
    <version>2.5.0-SNAPSHOT</version>
    <executions>
            <execution>
                    <id>generate-sources</id>
                    <phase>generate-sources</phase>
                    <configuration>
                            <sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
                            <wadlOptions>
                                    <wadlOption>
                                            <wadl>${basedir}/src/main/resources/wadl/myWadlFile.wadl</wadl>
                                            <!-- impl>true</impl -->
                                            <packagename>org.apache.cxf.systest.jaxrs.codegen.service</packagename>
                                            <schemaPackagenames>
                                                    <schemaPackagename>http://MYPACKNAME=org.apache.cxf.systest.jaxrs.codegen.schema</schemaPackagename>
                                            </schemaPackagenames>
                                            <extraargs>
                                                    <extraarg>-impl</extraarg>
                                                    <extraarg>-interface</extraarg>
                                                    <extraarg>-verbose</extraarg>
                                            </extraargs>
                                    </wadlOption>
                            </wadlOptions>
                    </configuration>
                    <goals>
                            <goal>wadl2java</goal>
                    </goals>
            </execution>
    </executions>
</plugin>
{code} 

Then, after calling {{mvn clean generate-sources}}, I get this exception:


{noformat}
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] java.lang.StringIndexOutOfBoundsException: String index out of range: 0

[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:719)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
	at org.apache.cxf.maven_plugin.wadlto.AbstractCodeGeneratorMojo.callCodeGenerator(AbstractCodeGeneratorMojo.java:458)
	at org.apache.cxf.maven_plugin.wadlto.WADL2JavaMojo.execute(WADL2JavaMojo.java:101)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	... 17 more
Caused by: org.apache.cxf.tools.common.ToolException: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:84)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
	at org.apache.cxf.tools.wadlto.WADLToJava.run(WADLToJava.java:65)
	at org.apache.cxf.tools.wadlto.WADLToJava.run(WADLToJava.java:57)
	at org.apache.cxf.maven_plugin.wadlto.AbstractCodeGeneratorMojo.callCodeGenerator(AbstractCodeGeneratorMojo.java:455)
	... 20 more
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
	at java.lang.String.charAt(String.java:686)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.getClassName(SourceGenerator.java:432)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResourceMethod(SourceGenerator.java:595)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeMethods(SourceGenerator.java:474)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResourceClass(SourceGenerator.java:381)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.generateResourceClasses(SourceGenerator.java:234)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.generateSource(SourceGenerator.java:201)
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.processWadl(JAXRSContainer.java:144)
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:67)
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:76)
	... 24 more
{noformat}
","Apache Maven 2.2.1 (rdebian-4)
Java version: 1.6.0_26
Java home: /usr/lib/jvm/java-6-sun-1.6.0.26/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"" version: ""2.6.38-11-generic"" arch: ""amd64"" Family: ""unix""",,,,,,,,,,,,,,,,13/Oct/11 15:31;sergey_beryozkin;logging.properties;https://issues.apache.org/jira/secure/attachment/12498888/logging.properties,18/Oct/11 15:03;particle;patch.txt;https://issues.apache.org/jira/secure/attachment/12499547/patch.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-10-11 21:27:19.39,,,no_permission,,Unknown,,,,,,,,,,,58996,,,Tue Oct 25 16:41:54 UTC 2011,,,,,,0|i0b6tj:,63217,,,,,,,,"11/Oct/11 21:27;sergey_beryozkin;That works for me. Can you please run it in a debug mode and get something like this from the trace:

11-Oct-2011 22:21:46 org.apache.cxf.tools.common.toolspec.parser.CommandLineParser parseArguments
FINE: <command xmlns=""http://cxf.apache.org/Xutil/Command"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://cxf.apache.org/Xutil/Command http://cxf.apache.org/schema/xutil/commnad.xsd"">
<option name=""outputdir"">/home/sberyozkin/work/apache/cxf/trunk/systests/jaxrs/target/generated/src/main/java</option>
<option name=""packagename"">org.apache.cxf.systest.jaxrs.codegen.service</option>
<option name=""schemaPackagename"">http://superbooks=org.apache.cxf.systest.jaxrs.codegen.schema</option>
<option name=""impl""/>
<option name=""interface""/>
<option name=""verbose""/>
<argument name=""wadl"">file:/home/sberyozkin/work/apache/cxf/trunk/systests/jaxrs/src/test/resources/wadl/bookstoreImport.xml</argument>
</command>

here is some more output that I see:

[INFO] --- cxf-wadl2java-plugin:2.5.0-SNAPSHOT:wadl2java (generate-sources) @ cxf-systests-jaxrs ---
wadl2java -d /home/sberyozkin/work/apache/cxf/trunk/systests/jaxrs/target/generated/src/main/java -p org.apache.cxf.systest.jaxrs.codegen.service -sp http://superbooks=org.apache.cxf.systest.jaxrs.codegen.schema -impl -interface -verbose file:/home/sberyozkin/work/apache/cxf/trunk/systests/jaxrs/src/test/resources/wadl/bookstoreImport.xml
wadl2java - Apache CXF 2.5.0-SNAPSHOT

11-Oct-2011 22:26:16 org.apache.cxf.jaxb.JAXBUtils logGeneratedClassNames
INFO: Created classes: org.apache.cxf.systest.jaxrs.codegen.schema.Book, org.apache.cxf.systest.jaxrs.codegen.schema.Book2, org.apache.cxf.systest.jaxrs.codegen.schema.Chapter, org.apache.cxf.systest.jaxrs.codegen.schema.ObjectFactory


and the system info:

Apache Maven 3.0.3 (r1075438; 2011-02-28 17:31:09+0000)
Maven home: /home/sberyozkin/work/apache/apache-maven-3.0.3
Java version: 1.6.0_26, vendor: Sun Microsystems Inc.
Java home: /usr/lib/jvm/java-6-sun-1.6.0.26/jre
Default locale: en_IE, platform encoding: UTF-8
OS name: ""linux"", version: ""2.6.38-8-generic"", arch: ""amd64"", family: ""unix""



","12/Oct/11 20:35;particle;I will do so tomorrow when I am back at work.
I have the current dev sources, so maybe I can provide a patch then.","13/Oct/11 12:27;particle;
I think you wanted to see these lines, am I correct?

{noformat}
[DEBUG] Configuring mojo 'org.apache.cxf:cxf-wadl2java-plugin:2.5.0-SNAPSHOT:wadl2java' -->
[DEBUG]   (f) classesDirectory = /home/weberl/Development/workspace/MyClient/target/classes
[DEBUG]   (f) disableDependencyScan = false
[DEBUG]   (f) disableDirectoryScan = false
[DEBUG]   (f) fork = false
[DEBUG]   (f) javaExecutable = /usr/lib/jvm/java-6-sun-1.6.0.26/jre/bin/java
[DEBUG]   (f) localRepository = Repository[local|file:///home/weberl/.m2/repository]
[DEBUG]   (f) markerDirectory = /home/weberl/Development/workspace/MyClient/target/cxf-codegen-plugin-markers
[DEBUG]   (f) mavenSession = org.apache.maven.execution.MavenSession@396c75ed
[DEBUG]   (f) pluginArtifacts = [org.apache.maven.shared:maven-artifact-resolver:jar:1.0:runtime, org.codehaus.plexus:plexus-utils:jar:2.0.5:runtime, org.codehaus.plexus:plexus-archiver:jar:1.2:runtime, org.codehaus.plexus:plexus-io:jar:1.0.1:runtime, org.apache.cxf:cxf-tools-common:jar:2.5.0-SNAPSHOT:runtime, org.apache.velocity:velocity:jar:1.7:runtime, commons-collections:commons-collections:jar:3.2.1:runtime, commons-lang:commons-lang:jar:2.6:runtime, wsdl4j:wsdl4j:jar:1.6.2:runtime, com.sun.xml.bind:jaxb-xjc:jar:2.1.13:runtime, com.sun.xml.bind:jaxb-impl:jar:2.1.13:runtime, org.apache.cxf:cxf-api:jar:2.5.0-SNAPSHOT:runtime, org.apache.cxf:cxf-common-utilities:jar:2.5.0-SNAPSHOT:runtime, org.apache.ws.xmlschema:xmlschema-core:jar:2.0.1:runtime, org.codehaus.woodstox:woodstox-core-asl:jar:4.1.1:runtime, org.codehaus.woodstox:stax2-api:jar:3.1.1:runtime, org.apache.neethi:neethi:jar:3.0.1:runtime, org.apache.cxf:cxf-rt-core:jar:2.5.0-SNAPSHOT:runtime, org.apache.geronimo.specs:geronimo-javamail_1.4_spec:jar:1.7.1:runtime, org.apache.cxf:cxf-tools-wadlto-jaxrs:jar:2.5.0-SNAPSHOT:runtime, org.apache.cxf:cxf-rt-frontend-jaxrs:jar:2.5.0-SNAPSHOT:runtime, org.springframework:spring-core:jar:3.0.6.RELEASE:runtime, org.springframework:spring-asm:jar:3.0.6.RELEASE:runtime, commons-logging:commons-logging:jar:1.1.1:runtime, javax.ws.rs:jsr311-api:jar:1.1.1:runtime, org.apache.cxf:cxf-rt-bindings-xml:jar:2.5.0-SNAPSHOT:runtime, org.apache.cxf:cxf-rt-transports-http:jar:2.5.0-SNAPSHOT:runtime, org.apache.cxf:cxf-rt-transports-common:jar:2.5.0-SNAPSHOT:runtime, org.springframework:spring-web:jar:3.0.6.RELEASE:runtime, aopalliance:aopalliance:jar:1.0:runtime, org.springframework:spring-beans:jar:3.0.6.RELEASE:runtime, org.springframework:spring-context:jar:3.0.6.RELEASE:runtime, org.springframework:spring-aop:jar:3.0.6.RELEASE:runtime, org.springframework:spring-expression:jar:3.0.6.RELEASE:runtime, org.codehaus.jettison:jettison:jar:1.3:runtime, xml-resolver:xml-resolver:jar:1.2:runtime, org.apache.geronimo.specs:geronimo-jaxws_2.2_spec:jar:1.1:runtime, org.apache.ant:ant:jar:1.8.2:runtime, org.apache.ant:ant-launcher:jar:1.8.2:runtime, org.apache.ant:ant-nodeps:jar:1.8.1:runtime]
[DEBUG]   (f) project = MavenProject: com.project:MyClient:0.0.1-SNAPSHOT @ /home/weberl/Development/workspace/MyClient/pom.xml
[DEBUG]   (f) repositories = [org.apache.maven.model.Repository@7fb2380e, org.apache.maven.model.Repository@d7e60a1, org.apache.maven.model.Repository@63f9f0f2, org.apache.maven.model.Repository@2e39d325, org.apache.maven.model.Repository@565539d8, org.apache.maven.model.Repository@7548c02f]
[DEBUG]   (f) sourceRoot = /home/weberl/Development/workspace/MyClient/target/generated/src/main/java
[DEBUG]   (f) testWadlRoot = /home/weberl/Development/workspace/MyClient/src/test/resources/wadl
[DEBUG]   (f) useCompileClasspath = false
[DEBUG]   (s) wadl = /home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl
[DEBUG]   (s) packagename = org.apache.cxf.systest.jaxrs.codegen.service
[DEBUG]   (s) schemaPackagenames = [http://MYPACKNAME=org.apache.cxf.systest.jaxrs.codegen.schema]
[DEBUG]   (s) extraargs = [-impl, -interface, -verbose]
[DEBUG]   (f) wadlOptions = [WADL: /home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl
OutputDir: null

]
[DEBUG]   (f) wadlRoot = /home/weberl/Development/workspace/MyClient/src/main/resources/wadl
[DEBUG] -- end configuration --
[INFO] [cxf-wadl2java:wadl2java {execution: generate-sources}]
[DEBUG] Classpath: [file:/home/weberl/Development/workspace/MyClient/target/classes/, file:/home/weberl/Development/workspace/MyClient/target/classes/, file:/home/weberl/.m2/repository/org/jvnet/ws/wadl/wadl-core/1.1-SNAPSHOT/wadl-core-1.1-SNAPSHOT.jar, file:/home/weberl/.m2/repository/com/sun/localizer/localizer/1.0/localizer-1.0.jar, file:/home/weberl/.m2/repository/com/sun/localizer/comresrcgen/1.0/comresrcgen-1.0.jar, file:/home/weberl/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar, file:/home/weberl/.m2/repository/com/sun/xml/bind/jaxb-xjc/2.2/jaxb-xjc-2.2.jar, file:/home/weberl/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2/jaxb-impl-2.2.jar, file:/home/weberl/.m2/repository/javax/xml/bind/jaxb-api/2.1/jaxb-api-2.1.jar, file:/home/weberl/.m2/repository/javax/xml/bind/jsr173_api/1.0/jsr173_api-1.0.jar, file:/home/weberl/.m2/repository/com/sun/jersey/jersey-client/1.8/jersey-client-1.8.jar, file:/home/weberl/.m2/repository/com/sun/jersey/jersey-core/1.8/jersey-core-1.8.jar]
[DEBUG] Calling wadl2java with args: [-d, /home/weberl/Development/workspace/MyClient/target/generated/src/main/java, -p, org.apache.cxf.systest.jaxrs.codegen.service, -sp, http://MYPACKNAME=org.apache.cxf.systest.jaxrs.codegen.schema, -impl, -interface, -verbose, file:/home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl]
wadl2java -d /home/weberl/Development/workspace/MyClient/target/generated/src/main/java -p org.apache.cxf.systest.jaxrs.codegen.service -sp http://MYPACKNAME=org.apache.cxf.systest.jaxrs.codegen.schema -impl -interface -verbose file:/home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl
wadl2java - Apache CXF 2.5.0-SNAPSHOT

[DEBUG]
org.apache.cxf.tools.common.ToolException: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
       at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:84)
       at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
       at org.apache.cxf.tools.wadlto.WADLToJava.run(WADLToJava.java:65)
       at org.apache.cxf.tools.wadlto.WADLToJava.run(WADLToJava.java:57)
       at org.apache.cxf.maven_plugin.wadlto.AbstractCodeGeneratorMojo.callCodeGenerator(AbstractCodeGeneratorMojo.java:455)
       at org.apache.cxf.maven_plugin.wadlto.WADL2JavaMojo.execute(WADL2JavaMojo.java:101)
       at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
       at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
       at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
       at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
       at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
       at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
       at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
       at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
       at java.lang.String.charAt(String.java:686)
       at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.getClassName(SourceGenerator.java:432)
       at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResourceMethod(SourceGenerator.java:595)
       at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeMethods(SourceGenerator.java:474)
       at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResourceClass(SourceGenerator.java:381)
       at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.generateResourceClasses(SourceGenerator.java:234)
       at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.generateSource(SourceGenerator.java:201)
       at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.processWadl(JAXRSContainer.java:144)
       at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:67)
       at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:76)
       ... 24 more
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] java.lang.StringIndexOutOfBoundsException: String index out of range: 0

[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 7 seconds
[INFO] Finished at: Thu Oct 13 13:52:22 CEST 2011
[INFO] Final Memory: 17M/168M
[INFO] ------------------------------------------------------------------------
{noformat}","13/Oct/11 12:29;particle;I also tried to add a OutputDir via:
{noformat}
<outputDir>${basedir}/target/generated/src/impl</outputDir>
{noformat}

But the result is the same.","13/Oct/11 13:35;particle;I think the important part you are looking for is this:

{noformat}
[DEBUG] Calling wadl2java with args: [-d, /home/weberl/Development/workspace/MyClient/target/generated/src/main/java, -p, org.apache.cxf.systest.jaxrs.codegen.service, -sp, http://MYPACKNAME=org.apache.cxf.systest.jaxrs.codegen.schema, -impl, -interface, -verbose, file:/home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl]
wadl2java -d /home/weberl/Development/workspace/MyClient/target/generated/src/main/java -p org.apache.cxf.systest.jaxrs.codegen.service -sp http://MYPACKNAME=org.apache.cxf.systest.jaxrs.codegen.schema -impl -interface -verbose file:/home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl
wadl2java - Apache CXF 2.5.0-SNAPSHOT
{noformat}","13/Oct/11 13:38;particle;This one looks suspicious:

{color:red}file:{color}/home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl 

I think -file--:- shouldn't be there.
","13/Oct/11 14:26;sergey_beryozkin;that one is OK, it's a proper URI.
I'm not sure how to reproduce it, just works for me. Can you please capture one more fragment, something like this:

11-Oct-2011 22:21:46 org.apache.cxf.tools.common.toolspec.parser.CommandLineParser parseArguments
FINE: <command xmlns=""http://cxf.apache.org/Xutil/Command"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://cxf.apache.org/Xutil/Command http://cxf.apache.org/schema/xutil/commnad.xsd"">
<option name=""outputdir"">/home/sberyozkin/work/apache/cxf/trunk/systests/jaxrs/target/generated/src/main/java</option>
<option name=""packagename"">org.apache.cxf.systest.jaxrs.codegen.service</option>
<option name=""schemaPackagename"">http://superbooks=org.apache.cxf.systest.jaxrs.codegen.schema</option>
<option name=""impl""/>
<option name=""interface""/>
<option name=""verbose""/>
<argument name=""wadl"">file:/home/sberyozkin/work/apache/cxf/trunk/systests/jaxrs/src/test/resources/wadl/bookstoreImport.xml</argument>
</command>

there could be some space or something which may be prevents the tool to recognize the parameters properly.
I captured this output with -Djava.util.logging.config.file=logging.properties


 ",13/Oct/11 15:27;particle;What is the content of your {{logging.properties}} file?,13/Oct/11 15:31;sergey_beryozkin;please see attached,"13/Oct/11 15:38;particle;Here you are:

{noformat}
FINE: <command xmlns=""http://cxf.apache.org/Xutil/Command"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://cxf.apache.org/Xutil/Command http://cxf.apache.org/schema/xutil/commnad.xsd"">
<option name=""outputdir"">/home/weberl/Development/workspace/MyClient/target/generated/src/impl</option>
<option name=""packagename"">org.apache.cxf.systest.jaxrs.codegen.service</option>
<option name=""schemaPackagename"">http://MYPACKNAME=org.apache.cxf.systest.jaxrs.codegen.schema</option>
<option name=""impl""/>
<option name=""interface""/>
<option name=""verbose""/>
<argument name=""wadl"">file:/home/weberl/Development/workspace/MyClient/src/main/resources/wadl/REST.wadl</argument>
</command>

Oct 13, 2011 5:35:50 PM org.apache.cxf.tools.common.toolspec.parser.CommandDocument getParameters
FINE: Getting parameters for help
Oct 13, 2011 5:35:50 PM org.apache.cxf.tools.common.toolspec.ToolSpec getParameterDefault
FINE: Element with id help is [option: null]
Oct 13, 2011 5:35:50 PM org.apache.cxf.tools.common.toolspec.ToolSpec getParameterDefault
FINE: local name is option
Oct 13, 2011 5:35:50 PM org.apache.cxf.tools.common.toolspec.parser.CommandDocument getParameters
FINE: Getting parameters for version
Oct 13, 2011 5:35:50 PM org.apache.cxf.tools.common.toolspec.ToolSpec getParameterDefault
FINE: Element with id version is [option: null]
{noformat}","13/Oct/11 15:40;particle;BTW: I think there is a typo here:
schemaLocation=""http://cxf.apache.org/Xutil/Command http://cxf.apache.org/schema/xutil/{color:red}commnad.xsd{color}""

I think it should be {{command.xsd}}.","13/Oct/11 15:51;sergey_beryozkin;Indeed, I spotted it too, but we probably can't get that fixed, that schema name has been around for years...
The latest trace is identical to the one I'm seeing on my system except for the actual values for the named options.
I think all roads lead to REST.wadl - there's something there that exposes a bug in SourceGenerator.
Would it be possible to emulate the structure of this WADL somehow and attach ? Or may be you can experiment with its content locally and see if you can narrow the problem ? Here is another idea, can you download this file:
http://svn.apache.org/repos/asf/cxf/trunk/tools/wadlto/jaxrs/src/test/resources/wadl/bookstore.xml

and repeat the test but using this file ? If it passes then it's definitely something with REST.wadl","13/Oct/11 16:08;particle;Ok, no problem.

Can you give me any clue on running this plugin in debug mode in eclipse so I can inspect my breakpoints?
I don't see any good unit tests for that. Any idea?","13/Oct/11 16:17;sergey_beryozkin;That would be great.
At the moment, the tests are run from cxf-tools-wadlto-jaxrs, see JAXRSContainerTest and WADL2JavaTest. I yet have to enhance them to verify the Java model same as WSDL tool tests do, but you can use either of those tests to get the breakpoints in SourceGenerator ","13/Oct/11 16:18;particle;I am now very certain that this is an issue with the SourceGenerator and my .wadl file.
I'm going after that.","14/Oct/11 17:30;particle;I found the Problem:
We have .wadl with this form:

{code:xml|title=project.wadl}
  <wadl:resources base=""http://Mycompany.de"">
    <wadl:doc title=""RESTful Services""/>
    <wadl:resource path=""/mypath/data/{uniqueId}"">
      <wadl:method href=""#retrieveData""/>
    </wadl:resource>
  </wadl:resources>
  <wadl:method id=""retrieveData"" name=""GET"">
     <!-- some more stuff here... but it's not of matter now... -->
  </wadl:method>
</wadl:application>
{code}

Accodring to the .xsd files, this is a completely valid valid .wadl.
But WADL2Java has some issues with this line:
{code:xml}<wadl:method href=""#retrieveData""/>{code}

It contains a reference to the method.  (http://www.w3.org/Submission/wadl/#x3-160002.8.1)

But the Java generating code is not following the reference.
If you want, I can come up with a patch for that.

But I have a question:
What is your prefered way to fetch the referenced {{wadl:method}} element(s)?
I would do the patch in {{SourceGenerator.writeMethods(...)}}

Do you have any preferences?","14/Oct/11 21:07;sergey_beryozkin;thanks for getting to the bottom of it.
well, believe it or not, supporting references to methods and representations was absolutely on the map :-)

We already support references to abstract resource_types. 
It's in SourceGenerator.getResourceElement() method. It has a branch dealing with local # references.
I would like to get that branch extracted into a sep method, say 
Element resolveLocalReference(...)

so SourceGenerator.getResourceElement()
   SourceGenerator.getMethodElement()
   SourceGenerator.getRepresentationElement()

would all use it. And then all the method and representation lookups would have to go through those getMethodElement/getRepresentationElement,
they would resolve the local reference or return the element as is if no refs exist

If you can get a chance to look into it then it would be nice - no probs if not, I'll try to get that fixed before 2.5 is out

thanks
 
",16/Oct/11 21:42;particle;I'd give it a try tomorrow evening.,"18/Oct/11 07:38;particle;I have solved the issue. 
I do some testing, then i commit the patch.","18/Oct/11 15:03;particle;- fixes issue CXF-3854
- fixes issue of missing includes of types are generated to a different package
- fixes issue when Interface has the same name as a generated type
","25/Oct/11 16:41;sergey_beryozkin;Lars, many thanks for the patch. Please create a new issue dedicated to fixing the other 2 issues",,,,,,
RMTxStore: Vendor specific condition check,CXF-3853,12526573,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,harshakhegde,harshakhegde,11/Oct/11 07:56,01/Nov/11 02:11,14/Mar/19 02:29,27/Oct/11 07:39,,,,,,,,,,,,,,,,,,2.3.8,2.4.4,2.5,,JAX-WS Runtime,,,,1,,,,,,"While using the reliable messaging in the CXF. The condition checks to create Database tables for a given RM store is vendor specific. As the method which does this check is private static, this behavior cannot be overridden.
In the class org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore the while initializing the RM store the method isTableExistsError is hard coded with vendor error codes for derby and oracle, so if we use any other RDBMS underneath then we run into errors that the tables already exists. As this method is private static this cannot be overridden either.
Please provide means to have vendor independent checks.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-26 16:21:57.916,,,no_permission,,Moderate,,,,,,,,,,,58989,,,Wed Oct 26 16:21:57 UTC 2011,,,,,,0|i0b8jj:,63496,,,,,,,,"26/Oct/11 16:21;ay;Initially, I was thinking of introducing some properties in the store configuration. But this will require a change in the configuration schema and hence will require more thought to find the best solution. 

Therefore, for now, I think we should provide a simpler less-invasive approach, namely changing the isTableExistsError method of RMTxStore to a protected instance method so that you can write your own RMTxStore to overwrite this method.

This means, you can write your store as:

{code}
package demo.cxf.ws.rm.persistence.jdbc;

import java.sql.SQLException;

import org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore;


public class MyCustomRMStore extends RMTxStore {
    private static final String MYDB_TABLE_EXISTS_STATE = ""I6000"";

    @Override
    protected boolean isTableExistsError(SQLException ex) {
        return MYDB_TABLE_EXISTS_STATE.equals(ex.getSQLState());
    }

}
{code}

and you can instantiate this bean and set to it the rm-manager's store.
{code}
<bean id=""testStore"" class=""demo.cxf.ws.rm.persistence.jdbc.MyCustomRMStore"">
    <property name=""driverClassName"" value=""...""/>
    <property name=""userName"" value=""...""/>
    <property name=""password"" value=""...""/>
    <property name=""url"" value=""jdbc:...""/>
</bean>
{code} 
",,,,,,,,,,,,,,,,,,,,,,,,,,
ResponseBuilderImpl.status - validation against instance var instead of parameter,CXF-3847,12526085,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,jpsona,jpsona,06/Oct/11 17:49,01/Nov/11 02:11,14/Mar/19 02:29,06/Oct/11 21:05,2.2.12,2.4.2,2.4.3,,,,,,,,,,,,,,,2.3.8,2.4.4,2.5,,JAX-RS,,,,0,ResponseBuilder,status,,,,"ResponseBuilderImpl.java
{code}
    public ResponseBuilder status(int s) {
        if (status < 100 || status > 599) {
            throw new IllegalArgumentException(""Illegal status value : "" + s);
        }
        status = s;
        return this;
    }
{code}

Noticed we were calling this with a value of 999 and not getting the IllegalArgumentException.   If I add a second call immediately following I do get the exception.

Verified the issue exists in our version (2.2.12) and current version.

I expect the if statement should be checking the parameter 's' and not the instance variable 'status'.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,49654,,,2011-10-06 17:49:53.0,,,,,,0|i0b6n3:,63188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when requesting ?wsdl using AegisDatabinding and @SchemaValidation,CXF-3846,12525843,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,rikvb,rikvb,05/Oct/11 15:08,08/Nov/11 05:29,14/Mar/19 02:29,19/Oct/11 19:06,2.4.1,,,,,,,,,,,,,,,,,2.3.8,2.4.4,,,Aegis Databinding,,,,0,,,,,,"After getting schema validation to work with aegis databinding, I noticed the ?wsdl is no longer working due to a NullPointerException. The relevant part of the stacktrace:

unwinding now: java.lang.NullPointerException
        at org.apache.cxf.wstx_msv_validation.Stax2ValidationUtils.setupValidation(Stax2ValidationUtils.java:71) [cxf-wstx-msv-validation-2.4.1.jar:]
        at org.apache.cxf.wstx_msv_validation.WoodstoxValidationImpl.setupValidation(WoodstoxValidationImpl.java:67) [cxf-wstx-msv-validation-2.4.1.jar:]
        at org.apache.cxf.aegis.databinding.AegisSchemaValidationInInterceptor.setSchemaInMessage(AegisSchemaValidationInInterceptor.java:68) [cxf-rt-databinding-aegis-2.4.1.jar:2.4.1]
        at org.apache.cxf.aegis.databinding.AegisSchemaValidationInInterceptor.handleMessage(AegisSchemaValidationInInterceptor.java:56) [cxf-rt-databinding-aegis-2.4.1.jar:2.4.1]
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263) [cxf-api-2.4.1.jar:2.4.1]

It seems that at AegisSchemaValidationInInterceptor:54 the result of message.getContent(XMLStreamReader.class) is null.

Obviously, a ?wsdl from a webbrowser is not a valid message, so a validation error could be expectable (a NPE isn't of course). I am wondering though if it is desirable, as it would leave ?wsdl broken.","Debian 6.1 x64, java 1.6.0_18, JBoss 7.0.1",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,46472,,,2011-10-05 15:08:42.0,,,,,,0|i0b6cf:,63140,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incompatibility between Derby 10.8 and WS-RM RMTxStore,CXF-3845,12525681,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,siano,siano,04/Oct/11 15:03,01/Nov/11 02:11,14/Mar/19 02:29,26/Oct/11 08:42,2.5,,,,,,,,,,,,,,,,,2.3.8,2.4.4,2.5,,WS-* Components,,,,0,,,,,,"The RMTxStore implementation does not work with Derby versions 10.8 and higher due to a bugfix for 
https://issues.apache.org/jira/browse/DERBY-4965. The issue can be reproduced by replacing the Derby version in the parent pom.xml to 10.8.1.2, afterwards some of the existing test cases for WS-RM fail.

The fix for this is rather trivial (and proposed in the Derby 10.8 release notes). I attach a patch for the trunk to this issue.",,,,,,,,,,,,,,,,,04/Oct/11 15:04;siano;Update-to-Derby-10812.patch;https://issues.apache.org/jira/secure/attachment/12497645/Update-to-Derby-10812.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-10-04 15:10:14.373,,,no_permission,,Unknown,,,,,,,,,,,44380,,,Wed Oct 26 08:42:29 UTC 2011,,,,,,0|i0b6t3:,63215,,,,,,,,04/Oct/11 15:10;dkulp;Do you know if that change will make it still be compatible with the older version of Derby?,"04/Oct/11 15:22;siano;The change in the RMTxStore is compatible (the old code relies on a bug that booleans are mapped to ""1"" and ""0"" instead of ""true"" and ""false"" if mapped to a char, the new coding does that conversion to ""1"" and ""0"" in code, so it behaves as before). 

I can't figure how the same code built against 10.8 should not work with previous versions (but after changing the version in the parent pom other developers might use API extensions that are not in 10.2 in future which might then break compatibility).","24/Oct/11 10:36;ay;I have another ticket CXF-3853 for RMTxStore to make its implementation more flexible.
This boolean thing also has some relevance to this ticket, as boolean is not widely supported.

I can take these two things into account.
 
For this particular ticket, we have requirements:
- CXF shall support both derby versions
- Upgrading CXF or Derby shall not make the already stored data unreadable

right?
  ","26/Oct/11 08:15;ay;It is simpler to handle this case separately from CXF-3853.

I am applying Stephan's patch with minor modification (and added some write/read tests which were previously absent)
","26/Oct/11 08:42;ay;replaced setBoolean with setString to make the implementation more interoperable with various DBs.

added some write/read tests
",,,,,,,,,,,,,,,,,,,,,,
"WS-Policy: Caused by: java.lang.IllegalArgumentException: local part cannot be ""null"" when creating a QName",CXF-3842,12525534,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gigerstyle,gigerstyle,03/Oct/11 13:34,19/Oct/11 17:30,14/Mar/19 02:29,03/Oct/11 20:34,2.4.2,,,,,,,,,,,,,,,,,2.4.3,,,,WS-* Components,,,,0,,,,,,"Setting up WS-Policy via Policy annotation throws the following exception:

Caused by: java.lang.IllegalArgumentException: local part cannot be ""null"" when creating a QName
        at javax.xml.namespace.QName.<init>(QName.java:246)
        at javax.xml.namespace.QName.<init>(QName.java:190)
        at org.apache.neethi.builders.converters.AbstractDOMConverter.getAttributes(AbstractDOMConverter.java:51)
        ... 43 more



",Sun-JDK 1.6.0_26 and no other javax.xml.namespace.QName in classpath as the one in the jdk.,,,,,,,,,,,,,,,,03/Oct/11 13:35;gigerstyle;cxf-2.4.2-policy.patch;https://issues.apache.org/jira/secure/attachment/12497460/cxf-2.4.2-policy.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-10-03 20:34:04.03,,,no_permission,,Unknown,,,,,,,,,,,43805,,,Mon Oct 03 20:34:04 UTC 2011,,,,,,0|i0b79j:,63289,,,,,,,,"03/Oct/11 20:34;dkulp;
Patch applied.  Thanks!

Also logged NEETHI-13 to track the issue  on the Neethi side.",,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Addressing and WS-RM: Nested Reference Parameters in request are not supported and become concatenated in the response to client,CXF-3840,12525473,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,chriseebee,chriseebee,02/Oct/11 10:38,01/Nov/11 02:11,14/Mar/19 02:29,25/Oct/11 16:21,2.4.2,,,,,,,,,,,,,,,,,2.3.8,2.4.4,2.5,,WS-* Components,,,,0,,,,,,"I have created a test one way ping service on JBoss using CXF with Addressing and WS-RM. JBoss client to JBoss service works fine.

I have then created a service client on Oracle Service Bus (OSB) to the same service.

OSB creates reference parameters as follows:

<wsa:ReferenceParameters xmlns:serviceidentity=""http://www.bea.com/ServiceIdentity"">
<serviceidentity:ServiceIdentity xmlns:wsu=""http://schemas.xmlsoap.org/ws/2002/07/utility"" xmlns:serviceidentity=""http://www.bea.com/ServiceIdentity"">
<serviceidentity:ServerName>AdminServer</serviceidentity:ServerName>
<serviceidentity:ServiceName>weblogic.wsee.conversation.msg.cluster.service</serviceidentity:ServiceName>
</serviceidentity:ServiceIdentity>
</wsa:ReferenceParameters>

and JBoss returns (as an element in the soap header)

<ns2:ServiceIdentity xmlns=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" xmlns:ns2=""http://www.bea.com/ServiceIdentity"" xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" wsa:IsReferenceParameter=""1"">AdminServerweblogic.wsee.conversation.msg.cluster.service</ns2:ServiceIdentity>


So, I have looked at the CXF source and see that there is no provision for nested reference parameters as provided by OSB. Hence 2 child elements in the reference parameter returns a concatenated object that we see in the CXF response.

In section 2.3 of the WS-Addressing Spec (http://www.w3.org/Submission/ws-addressing/), the second rule states that:

Each [reference property] and [reference parameter] element becomes a header block in the SOAP message. The element information item of each [reference property] or [reference parameter] (including all of its [children], [attributes] and [in-scope namespaces]) is to be added as a header block in the new message.

The key in here is the [children], which implies that child elements of a reference parameter are acceptable and should be processed.

The MAPCodec.encodeReferenceParameters class.method in CXF does not appear to cater for nested reference parameter elements.

Am I correct in my understanding and therefore, this is a bug?

Many thanks in advance

Chris","Client: Oracle Service Bus 11g R1 Patchset 3
Server : RedHat SOA Platform 5.1.0.GA with CXF
OS: Windows XP SP3",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,43150,,,2011-10-02 10:38:22.0,,,,,,0|i0b6cv:,63142,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing output parameters in wrapped method implementations generate NPE,CXF-3836,12525240,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tag@cpan.org,tag@cpan.org,29/Sep/11 21:10,19/Jul/13 12:34,14/Mar/19 02:29,10/Nov/11 07:40,2.3.6,2.4.2,,,,,,,,,,,,,,,,2.3.8,2.4.5,2.5.1,,JAX-WS Runtime,,,,0,,,,,,"When implementing an interface generated from a WSDL which has an output parameter stored in a holder, as in

{code}
        @WebParam(mode = WebParam.Mode.OUT, name = ""created"", targetNamespace = """")
        javax.xml.ws.Holder<java.lang.Boolean> created
{code}

Failing to provide a value in the supplied holder results in an NPE, originating from the runtime-generated WrapperTypeHelper class, e.g.

{code}
java.lang.NullPointerException
	at com.vindicia.soap.v3_6.account.UpdateResponse_WrapperTypeHelper1.createWrapperObject(Unknown Source)
	at org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor.handleMessage(WrapperClassOutInterceptor.java:105)
{code}

This fails to inform the user of the cause of the issue or how to diagnose it.  Instead, required parameters should be validated to atleast be not null before they are assumed to have been provided.

I have validated this behavior on 2.4.2, 2.4.0 and 2.3.6.

The work-around for the user is of course to provide a non-null value in the holder object.

It is worth noting this appears to only happen for output parameters that are normally mapped to primitive types.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-11-10 07:37:57.091,,,no_permission,,Unknown,,,,,,,,,,,40584,,,Fri Jul 19 12:34:23 UTC 2013,,,,,,0|i0b8on:,63519,,,,,,,,"10/Nov/11 07:37;ffang;Hi,
I just write a testcase which can verify null value for output Holder parameter works, so I believe this issue already get resolved after CXF 2.4.2, I'll commit the testcase soon.

Could you run your test with latest released CXF 2.4.4 or even CXF 2.5?

Freeman ","10/Nov/11 07:40;ffang;commit testcase
http://svn.apache.org/viewvc?rev=1200189&view=rev for trunk
http://svn.apache.org/viewvc?rev=1200196&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1200205&view=rev for 2.3.x branch","19/Jul/13 12:34;donatasc;Please reopen this bug, there is a regression in CXF 2.7.5.
We recently got:

Caused by: java.lang.NullPointerException at lt.asseco.iaps.ws.bookingservice.CreateBookingResponse_WrapperTypeHelper1.createWrapperObject(Unknown Source)
        at org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor.handleMessage(WrapperClassOutInterceptor.java:101)
        ... 54 more

The reason: supplying NULL to Holder OUT parameter. 
",,,,,,,,,,,,,,,,,,,,,,,,
Array JAXRS parameters are not supported,CXF-3834,12525179,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,29/Sep/11 12:24,19/Oct/11 17:30,14/Mar/19 02:29,29/Sep/11 12:31,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,39780,,,2011-09-29 12:24:44.0,,,,,,0|i0b7qv:,63367,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in wsdl2java if soap:binding tag is omitted,CXF-3829,12524959,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,piepera,piepera,27/Sep/11 19:24,08/Nov/11 05:29,14/Mar/19 02:29,19/Oct/11 19:05,2.4.2,,,,,,,,,,,,,,,,,2.3.8,2.4.4,,,Tooling,,,,0,cxf-codegen-plugin,wsdl2java,,,,The cxf-codegen-plugin's wsdl2java functionality fails with a NullPointerException if the soap:binding tag is omitted from the WSDL. Reintroducing the soap:binding tag avoids the NPE.,,,,,,,,,,,,,,,,,27/Sep/11 19:26;piepera;Rodene.wsdl;https://issues.apache.org/jira/secure/attachment/12496787/Rodene.wsdl,27/Sep/11 19:27;piepera;stack-trace.txt;https://issues.apache.org/jira/secure/attachment/12496788/stack-trace.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-09-27 21:12:19.223,,,no_permission,,Novice,,,,,,,,,,,33607,,,Tue Sep 27 21:12:19 UTC 2011,,,,,,0|i0b6cn:,63141,,,,,,,,"27/Sep/11 19:26;piepera;The WSDL which causes an error. If you uncomment the ""soap:binding"" line on line 38, the error goes away.",27/Sep/11 19:27;piepera;The stack trace which is thrown by the cxf-codegen-plugin.,"27/Sep/11 21:12;gmazza;The solution appears to be to halt with a user-friendly error message should either no binding or one of the three bindings supported by CXF (SOAP, CORBA, XML) not be given.
",,,,,,,,,,,,,,,,,,,,,,,,
german umlauts not supported in path names,CXF-3828,12524848,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,dr.seltsam,dr.seltsam,27/Sep/11 12:10,19/Oct/11 17:30,14/Mar/19 02:29,29/Sep/11 15:32,2.2,,,,,,,,,,,,,,,,,2.4.3,NeedMoreInfo,,,Integration,,,,0,maven,plugins,,,,"The parsing of a WSDL file with org.apache.cxf:cxf-codegen-plugin during a maven build fails if the path contains german umlauts like 'ä'. In this specific case, the 'ä' gets translated to '%ca43'.

Fail to create wsdl definition from : file:/D:/develop/svn/branches/ver%ca43ndert/myclient/../myserver/target/generated/wsdl/WebService.wsdl","Apache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)
Maven home: C:\Programme\apache\maven\3.0.3
Java version: 1.6.0_26, vendor: Sun Microsystems Inc.
Java home: C:\Programme\Java\jdk\1.6.0_26\jre
Default locale: de_DE, platform encoding: Cp1252
OS name: ""windows xp"", version: ""5.1"", arch: ""x86"", family: ""windows""",,,,,,,,,,,,,,,,28/Sep/11 06:40;dr.seltsam;build.log;https://issues.apache.org/jira/secure/attachment/12496852/build.log,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-09-27 14:59:27.277,,,no_permission,,Moderate,,,,,,,,,,,19176,,,Fri Sep 30 05:38:52 UTC 2011,,,,,,0|i0b6e7:,63148,,,,,,,,"27/Sep/11 14:59;dkulp;Can you try with a more recent version of CXF.   In particular, can you try with 2.4.2?   There have been a bunch of updates in the URI handling in the tooling since 2.2 and this may already be fixed.
","28/Sep/11 06:38;dr.seltsam;Yes ,sorry for using an old version.
I changed dependencies to the version 2.4.2 now, but the bug is still there.
I ran mvn -X and added the log to this issue.",30/Sep/11 05:38;dr.seltsam;Great. Thanks a lot!,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS: A 406 status could should be returned for an improperly formatted Accept header,CXF-3822,12524499,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,kfung,kfung,24/Sep/11 01:36,19/Oct/11 17:30,14/Mar/19 02:29,26/Sep/11 16:35,2.3.6,2.4.2,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,JAX-RS,,,,0,,,,,,"If you send an Accept header that doesn't contain a slash (i.e., /), CXF's JAX-RS implementation returns a HTTP status of 500 (Internal Server Error). Instead of this status, it would be preferred if a HTTP status of 406 (Not Acceptable) is returned.

Here's the test header:

bq. {{Accept: foo}}

Here's the current response:

bq. {{Status Code: 500 org.apache.cxf.interceptor.Fault: Media type separator is missing}}

Here's the preferred response:

bq. {{Status Code: 406 Not Acceptable}}

I've attached a potential patch against trunk for this issue:",Java 1.6,900,900,,0%,900,900,,,,,,,,,,24/Sep/11 01:46;kfung;cxf3822.trunk.patch.diff;https://issues.apache.org/jira/secure/attachment/12496349/cxf3822.trunk.patch.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-09-25 21:00:23.755,,,no_permission,,Novice,,,,,,,,,,,760,,,Mon Sep 26 16:32:04 UTC 2011,,,,,,0|i0b7lz:,63345,,,,,,,,24/Sep/11 01:46;kfung;Potential patch against trunk for review.,"25/Sep/11 21:00;sergey_beryozkin;I agree 500 is a wrong status to return, but I'm thinking that 400 is more appropriate, given that it's a client bug ?

If we have Accept: foo and return 406, then what should happen if we have

Accept: foo
and 

@Produces(""foo"") ?

Technically, it's a match ? 
May be we should get some clarifications at the spec level
 ","26/Sep/11 01:49;kfung;So the best spec would be [RFC2616: Hypertext Transfer Protocol -- HTTP/1.1|http://www.ietf.org/rfc/rfc2616.txt].

According to the spec, the Accept header needs to meet the following specification:

{noformat}
       media-range    = ( ""*/*""
                        | ( type ""/"" ""*"" )
                        | ( type ""/"" subtype )
                        ) *( "";"" parameter )
{noformat}

Looking at the above, it looks like the slash is mandatory.

[RFC2616|http://www.ietf.org/rfc/rfc2616.txt] also states the following:

{noformat}
If an Accept header field is present,
and if the server cannot send a response which is acceptable
according to the combined Accept field value, then the server SHOULD
send a 406 (not acceptable) response.
{noformat}

This leads me to believe that 406 is the appropriate response to send to the client. However, the missing slash is also a client side error so 400 could be an appropriate response as well.

At the end of the day, just pick one. Either one would be better than the 500 that's there right now :-)","26/Sep/11 16:32;sergey_beryozkin;Lets go for 406 for now :-), given that 415 is currently returned in case of malformed Content-Type; 400 can be introduced if JAX-RS 2.0 will recommend it",,,,,,,,,,,,,,,,,,,,,,,
FormEncodingProvider does not check for null incoming object,CXF-3821,12524265,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,m4rkmckenna,m4rkmckenna,22/Sep/11 11:04,19/Oct/11 17:30,14/Mar/19 02:29,26/Sep/11 16:57,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,JAX-RS,,,,0,,,,,,FormEncodingProvider does not check for null incoming object. A NPE is then thrown at line FormEncodingProvider Line 133,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-22 11:15:49.511,,,no_permission,,Novice,,,,,,,,,,,759,,,Mon Sep 26 16:57:45 UTC 2011,,,,,,0|i0b7l3:,63341,,,,,,,,"22/Sep/11 11:15;sergey_beryozkin;Hi, which object happens to be null ? In my current 2.4.x copy a line 133 points to comments","22/Sep/11 11:54;m4rkmckenna;In the below function clazz can be null and when clazz.newInstance() is called NPE is thrown

    protected MultivaluedMap<String, String> createMap(Class<?> clazz) throws Exception {
        if (clazz == MultivaluedMap.class || clazz == Form.class) {
            return new MetadataMap<String, String>();
        }else if (clazz != null){
        return (MultivaluedMap<String, String>)clazz.newInstance();
        }
    }

I have overwritten createMap to ..........

         @Override
            protected javax.ws.rs.core.MultivaluedMap<String, String> createMap(final java.lang.Class<?> clazz)
                    throws InstantiationException, IllegalAccessException {
                if (clazz == MultivaluedMap.class || clazz == Form.class) {
                    return new MetadataMap<String, String>();
                } else if (clazz != null) {
                    return (MultivaluedMap<String, String>) clazz.newInstance();
                }
                return null;
            };","22/Sep/11 12:02;sergey_beryozkin;thanks, but I don't understand how a class can be null, can you explain please.
Also, returning null there would result in NPE immediately in the next call ?",22/Sep/11 12:14;m4rkmckenna;class will be null if say the payload of the message is empty. The above solution works for me but I havent had time to implemnet a more elegant solution.....in the readFrom function i check for the returned MultivaluedMap being null also (if null return null),"22/Sep/11 16:28;sergey_beryozkin;I can not reproduce, sorry. A
I can easily add a null guard - but a bit concerned re the null value coming in - that should not even happen.
How does the signature of your method look like ?

","26/Sep/11 16:08;sergey_beryozkin;As I said, I can not reproduce it, I did add a local test with an empty form payload posted and got no exception.
You are seeing NPE but I need to see more details because adding an NPE guard would simply hide an issue existing elsewhere.
Can you help me with reproducing it ? Catch a TCP trace and show the method signature and may be we can do something, otherwise I'd need to close it as Can't Reproduce
thanks ","26/Sep/11 16:35;m4rkmckenna;Hi Sergey.
I have looked into this a bit more.....It appears that the root of the problem is in the readFrom function. If the inputStream (arg5) is null a NPE is thrown when populateMap is called.
M","26/Sep/11 16:57;sergey_beryozkin;I've added NPE guard against IS, the spec says that an empty content in case of JAXB should result in 400, otherwise a corresponding method parameter has to be set to null... I can't get is set to null - probably specific to the servlet container you are working with... thanks",,,,,,,,,,,,,,,,,,,
Problems with Maven pom's,CXF-3819,12524243,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,njiang,igor.bljahhin,igor.bljahhin,22/Sep/11 07:21,01/Nov/11 02:11,14/Mar/19 02:29,22/Sep/11 09:07,2.5,,,,,,,,,,,,,,,,,2.5,,,,Core,,,,0,maven,,,,,"Hello,

I downloaded the source of CXF 2.5.0-SNAPSHOT and tried to build it using Maven's command ""mvn install"". The following error was raised:

C:\projects\cxf>mvn install
[INFO] Scanning for projects...
[ERROR] The build could not read 2 projects -> [Help 1]
[ERROR]
[ERROR]   The project org.apache.cxf:cxf-rt-rs-security-oauth-parent:2.5.0-SNAPS
HOT (C:\projects\cxf\rt\rs\security\oauth-parent\pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Failure to find org.apache.cxf:cxf-parent
:pom:2.5.0-SNAPSHOT in http://repos.zeroturnaround.com/nexus/content/groups/publ
ic was cached in the local repository, resolution will not be reattempted until
the update interval of nexus has elapsed or updates are forced and 'parent.relat
ivePath' points at wrong local POM @ line 31, column 13 -> [Help 2]
[ERROR]
[ERROR]   The project org.apache.cxf:cxf-services-sts:2.5.0-SNAPSHOT (C:\project
s\cxf\services\sts\pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Could not find artifact org.apache.cxf:cx
f:pom:2.5.0-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line
28, column 13 -> [Help 2]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e swit
ch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please rea
d the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildin
gException
[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableMo
delException
C:\projects\cxf>

The problem was fixed, when I changed the value of the node ""parent/project/relativePath"" in ""/cxf/rt/rs/security/oauth-parent/pom.xml"" from ""../../../parent/pom.xml"" to ""../../../../parent/pom.xml"" and added ""<relativePath>../../pom.xml</relativePath>"" to the ""parent/project"" node in ""/cxf/services/sts/pom.xml"".

To reproduce the problem you need to remove org/apache/cxf folder from your local maven's repository.

Hope it helps you!

With best regards,
Igor",Maven 3,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-22 09:07:31.294,,,no_permission,,Unknown,,,,,,,,,,,3534,,,Thu Sep 22 09:18:25 UTC 2011,,,,,,0|i0sxnj:,166929,,,,,,,,22/Sep/11 09:07;njiang;Applied patch into trunk with thanks to Igor.,"22/Sep/11 09:08;njiang;@Igor, It could be more handy if you provide a patch which is generated by svn diff.","22/Sep/11 09:18;igor.bljahhin;OK, next time I will provide a patch.
Thanks, Willem!",,,,,,,,,,,,,,,,,,,,,,,,
Tests failing with: The signature or decryption was invalid,CXF-3809,12523591,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,rnfm7avr,rnfm7avr,19/Sep/11 17:50,23/Apr/12 16:45,14/Mar/19 02:29,17/Feb/12 17:31,2.4.2,2.4.3,,,,,,,,,,,,,,,,2.4.7,2.5.3,,,WS-* Components,,,,0,,,,,,"running ""mvn"" to build latest stable CXF or latest trunk CXF yields the following build error:

Results :

Failed tests: testDigestPasswordUnauthorized(org.apache.cxf.ws.security.wss4j.UserNameTokenAuthorizationTest): expected:<[Unauthorize]d> but was:<[The signature or decryption was invali]d>

Tests in error:
  testSignedEncryptedPartsWithIncompleteCoverage(org.apache.cxf.ws.security.wss4j.PolicyBasedWss4JInOutTest): The signature or decryption was invalid
  testSignedEncryptedPartsWithCompleteCoverage(org.apache.cxf.ws.security.wss4j.PolicyBasedWss4JInOutTest): The signature or decryption was invalid
  testSignature(org.apache.cxf.ws.security.wss4j.RoundTripTest): The signature or decryption was invalid
  testEncryptionPlusSig(org.apache.cxf.ws.security.wss4j.RoundTripTest): The signature or decryption was invalid
  testUsernameToken(org.apache.cxf.ws.security.wss4j.RoundTripTest): The signature or decryption was invalid
  testDigestPasswordAuthorized(org.apache.cxf.ws.security.wss4j.UserNameTokenAuthorizationTest): The signature or decryption was invalid

Tests run: 64, Failures: 1, Errors: 6, Skipped: 0 


--
report also under https://issues.apache.org/jira/browse/WSS-316 because I'm not sure where this belongs.","latest stable Ubuntu, amd64, java version ""1.6.0_22""
OpenJDK Runtime Environment (IcedTea6 1.10.2) (6b22-1.10.2-0ubuntu1~11.04.1)
OpenJDK 64-Bit Server VM (build 20.0-b11, mixed mode) ",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3543,,,2011-09-19 17:50:27.0,,,,,,0|i0b6pz:,63201,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS proxies don't work with the failover feature,CXF-3808,12523578,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,19/Sep/11 16:47,19/Oct/11 17:30,14/Mar/19 02:29,19/Sep/11 17:05,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,JAX-RS,,,,0,,,,,,Proxies build wrong request URI across multiple retries - this issue was hidden by the fact that the system tests were creating a new proxy for every iteration ,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3544,,,2011-09-19 16:47:10.0,,,,,,0|i0b7o7:,63355,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BeanInCreationException when CXF client factorybean used,CXF-3805,12523180,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,tomaszbech,tomaszbech,15/Sep/11 11:46,19/Oct/11 17:30,14/Mar/19 02:29,16/Sep/11 16:58,2.4.2,,,,,,,,,,,,,,,,,2.4.3,,,,JAX-WS Runtime,,,,0,,,,,,"In complex spring context, when JaxWsProxyFactoryBean is used, context fails to start with BeanCurrentlyInCreationException.
Part of exception:

        at org.springframework.context.support.AbstractApplicationContext.getBea
nNamesForType(AbstractApplicationContext.java:1136)
        at org.apache.cxf.bus.spring.SpringBeanLocator.getBeansOfType(SpringBean
Locator.java:89)
        at org.apache.cxf.bus.CXFBusImpl.getExtension(CXFBusImpl.java:99)
        at org.apache.cxf.service.factory.AbstractServiceFactoryBean.setBus(Abst
ractServiceFactoryBean.java:98)
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.initializeSe
rviceFactory(AbstractWSDLBasedEndpointFactory.java:232)
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoi
nt(AbstractWSDLBasedEndpointFactory.java:100)
        at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.ja
va:90)
        at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFact
oryBean.java:153)
        at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBe
an.java:151)

...
Caused by: org.springframework.beans.factory.BeanCurrentlyInCreationException: E
rror creating bean with name 'testBeanBBO': org.springframework.beans.factory.Fa
ctoryBeanNotInitializedException: FactoryBean is not fully initialized yet
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.
doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:146)
        at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.
getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:109)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getObje
ctForBeanInstance(AbstractBeanFactory.java:1429)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBe
an(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean
(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver
.resolveReference(BeanDefinitionValueResolver.java:322)
        ... 133 more

The main reason of the problem is that JaxWsProxyFactoryBean calls spring getBeanNamesForType, which
needs to instantiate all spring beans - and it is very easy to reach the case, that in spring context
in creation there are beans not fully initialized yet - and when getBeanNamesForType is called - BIG BUM - exception.

It is not proper pattern to use spring getBeanNamesForType from FactoryBean.create method.

I've tracked the problem and isolated simple test case - it is attached.
Unpack it into apache-cxf-2.4.2-src\apache-cxf-2.4.2-src\systests\jaxws\src\test\java
and run:
mvn -Dtest=BeanInCreationExceptionTest test
It fails for spring2 and spring3 as well.

When you look at beans.xml, you will see that there are no circular dependencies which usually cause 
BeanCurrentlyInCreationException - but JaxWsProxyFactoryBean.create is making the problem.

Just comment one line as below in beans.xml:
	<bean id=""testBeanBBOImpl"" class=""org.apache.cxf.systest.beanincreationexception.TestBeanABOImpl"">
		<property name=""bean"" ref=""testBeanABO""/>
<!--  		<property name=""client"" ref=""client2""/> --> 
	</bean>


and test runs ok.

How to fix? Provide lighter version (or a switch) of JaxWsProxyFactoryBean - it can just create the proxy,
and the rest (endpoint, client, all the stuff which requires getBeanNamesForType) can be instantiated later - for example in AfterpropertiesSet phase.
Or avoid getBeanNamesForType if possible.

Now the workaround we try, is to change the order of spring beans xml's and have a luck. Eventually changing from injecting client service/portType to
getting them from applicationcontext.getBean - but it is not good practice.
",,,,,,,,,,,,,,,,,16/Sep/11 05:18;tomaszbech;beanincreationexction.zip;https://issues.apache.org/jira/secure/attachment/12494753/beanincreationexction.zip,15/Sep/11 11:46;tomaszbech;beanincreationexction.zip;https://issues.apache.org/jira/secure/attachment/12494604/beanincreationexction.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-09-15 14:36:14.722,,,no_permission,,Unknown,,,,,,,,,,,3547,,,Fri Sep 16 07:35:41 UTC 2011,,,,,,0|i0b7lr:,63344,,,,,,,,"15/Sep/11 14:36;dkulp;Any chance you can re-attach the zip and check the ""grant license to Apache"" checkbox?   I can then add this directly in the test suite.

I do have a fix coming.  It's something I saw a month or so ago and questioned to myself, but didn't mess with it at the time as I was afraid to do anything about it.   The calls to getBeanNamesForType have a flag to eagerly init things that we are setting to true.   When I saw that it did raise concerns in my head, but didn't have time to really figure out if it's an issue or not.  Apparently it is.   Changing that flag to false fixes your testcase (and doesn't seem to break any of our other tests).

",16/Sep/11 05:18;tomaszbech;as you wish :),"16/Sep/11 07:35;tomaszbech;i've patched cxf localy (changing true->false in 3 places), and it seems it fixes the problem (context in our real project starts nicely).",,,,,,,,,,,,,,,,,,,,,,,,
Non-spring based servlet not destroying Bus instances,CXF-3803,12523105,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,14/Sep/11 21:04,19/Oct/11 17:30,14/Mar/19 02:29,14/Sep/11 22:42,2.4.2,,,,,,,,,,,,,,,,,2.4.3,,,,Transports,,,,0,,,,,,"
The Non-Spring variants of the CXF servlet are not calling bus.shutdown(true)  to shutdown the bus and have it release any resources that it is holding onto.   That also results in things like the lifecycle listeners not being called and other issues.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3549,,,2011-09-14 21:04:00.0,,,,,,0|i0b7sn:,63375,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jaxws Provider doesn't allow override of outbound ws addressing headers,CXF-3802,12522788,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jpangburn,jpangburn,12/Sep/11 19:24,19/Oct/11 17:30,14/Mar/19 02:29,14/Sep/11 17:55,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-WS Runtime,,,,0,jaxws,provider,ws-addressing,,,"I have a jaxws Provider configured to do WS-Addressing and the defaults seem to work fine.  However, if I try to override some of the WS-Addressing headers in the MessageContext, it gets ignored.  I've tried the following :

AddressingProperties wsaServer = new AddressingPropertiesImpl(); AttributedURIType aut = new AttributedURIType(); aut.setValue(""urn:get:some""); wsaServer.setAction(aut); messageContext.put(JAXWSAConstants.SERVER_ADDRESSING_PROPERTIES_OUTBOUND, wsaServer); 

But the Action header sent in the response is the default from the WSDL, not my override value.  Am I doing something wrong or this never worked?  I've tried doing:
messageContext.get(JAXWSAConstants.SERVER_ADDRESSING_PROPERTIES_OUTBOUND)

But that returns null, so I've been using the put instead.  I tried overriding the messageId as well, but that didn't work either.

Debugging through the code illustrates that you can't just set this property on the MessageContext object for the Provider, you must set it on the outbound message object, like this:
((org.apache.cxf.jaxws.context.WrappedMessageContext)messageContext).getWrappedMessage().getExchange().getOutMessage().put(JAXWSAConstants.SERVER_ADDRESSING_PROPERTIES_OUTBOUND, wsaServer);

So the working code for me becomes something like:
AddressingProperties wsaServer = new AddressingPropertiesImpl(); AttributedURIType aut = new AttributedURIType(); aut.setValue(""urn:get:some""); wsaServer.setAction(aut); ((org.apache.cxf.jaxws.context.WrappedMessageContext)messageContext).getWrappedMessage().getExchange().getOutMessage().put(JAXWSAConstants.SERVER_ADDRESSING_PROPERTIES_OUTBOUND, wsaServer);

I've tried overriding the message id and the action headers, both were successful.

Dan suggested the following fix in ContextUtils.  Change these lines:
        AddressingPropertiesImpl maps =
            (AddressingPropertiesImpl)message.get(mapProperty);
        if (maps != null) {
            LOG.log(Level.FINE, ""current MAPs {0}"", maps);
        }
to:
        AddressingPropertiesImpl maps =
            (AddressingPropertiesImpl)message.get(mapProperty);
        if (maps == null && isOutbound && !isRequestor) {
        	maps = (AddressingPropertiesImpl)message.getExchange().getInMessage().get(mapProperty);
        }
        if (maps != null) {
            LOG.log(Level.FINE, ""current MAPs {0}"", maps);
        }

I've tested this and it is successful with just the expected messageContext.put() call.  Thanks Dan!",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3550,,,2011-09-12 19:24:58.0,,,,,,0|i0b7sf:,63374,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointReferenceUtils.convertToXML() causes ConcurrentModificationException under load,CXF-3801,12522779,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,owulff,owulff,12/Sep/11 18:41,19/Oct/11 17:30,14/Mar/19 02:29,29/Sep/11 13:10,2.4.2,,,,,,,,,,,,,,,,,2.4.3,,,,Core,,,,0,,,,,,"If EndpointReferenceUtils.convertToXML() is called very often by a service implementation it causes ConcurrentModificationException.

[2011-09-08 03:08:00.038:http-17600-12] ERROR
org.example.service.LocatorServiceImpl
java.util.ConcurrentModificationException
         at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
         at java.util.HashMap$KeyIterator.next(HashMap.java:828)
         at org.apache.cxf.common.util.WeakIdentityHashMap.keySet(WeakIdentityHashMap.java:95) at
         org.apache.cxf.common.util.CacheMap.updateMainDataMap(CacheMap.java:57) at
         org.apache.cxf.common.util.CacheMap.entrySet(CacheMap.java:78) at
         org.apache.cxf.jaxb.JAXBContextCache.getCachedContextAndSchemas(JAXBContextCache.java:148) at
         org.apache.cxf.wsdl.EndpointReferenceUtils.convertToXML(EndpointReferenceUtils.java:1018) at
         org.example.service.LocatorServiceImpl.createEndpoint(LocatorServiceImpl.java:461) at
         org.example.service.LocatorServiceImpl.listEndpoints(LocatorServiceImpl.java:277)",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-12 19:19:50.547,,,no_permission,,Unknown,,,,,,,,,,,3551,,,Mon Sep 12 19:19:50 UTC 2011,,,,,,0|i0b7nb:,63351,,,,,,,,"12/Sep/11 19:19;dkulp;Oli,

How easy is it for you to reproduce and test this?

I just discovered the call in JAXBContextCache to ""remove"" was not in a synchronized block which could definitely cause this.   I'm committing that fix to trunk and the branches, but would definitely like to see this tested to make sure it really fixes the problem.
",,,,,,,,,,,,,,,,,,,,,,,,,,
Error in apache-cxf-2.4.2-features.xml,CXF-3793,12521447,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pan4o,pan4o,06/Sep/11 13:13,19/Oct/11 17:30,14/Mar/19 02:29,06/Sep/11 13:28,2.4.2,,,,,,,,,,,,,,,,,2.4.3,,,,Configuration,,,,0,,,,,,"Hi,

in org/apache/cxf/karaf/apache-cxf/2.4.2/apache-cxf-2.4.2-features.xml is an error:

    <feature name=""saaj-impl"" version=""1.3.2""  resolver='(obr)'>
        <bundle start-level='25'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.saaj-impl/1.3.2_2</bundle>
        <bundle start-level='25'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxpri/1.4.4_2</bundle>   
    </feature>

jaxpri should be jaxp-ri!!!

Can somepne confirm this?

Thx",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-06 13:27:50.387,,,no_permission,,Unknown,,,,,,,,,,,3559,,,Tue Sep 06 13:28:19 UTC 2011,,,,,,0|i1aga7:,269104,,,,,,,,"06/Sep/11 13:27;ffang;It's already get fixed by
http://svn.apache.org/viewvc?rev=1164223&view=rev",06/Sep/11 13:28;dkulp;Already fixed on the branch for 2.4.3.,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor.handleMessage(Message) contains cruft code,CXF-3790,12521194,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,garydgregory,garydgregory,02/Sep/11 14:56,19/Oct/11 17:30,14/Mar/19 02:29,02/Sep/11 16:05,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-WS Runtime,,,,0,,,,,,"While debugging our server, in {{org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor.handleMessage(Message)}} I saw:
{code:java}
            MessageContentsList lst = MessageContentsList.getContentsList(message);
            if (lst == null) {
                return;
            }
            if (lst != null) {
                message.put(MessageInfo.class, messageInfo);
                message.put(BindingMessageInfo.class, bmi);
                ex.put(BindingOperationInfo.class, boi2);
                ex.put(OperationInfo.class, op);
            }
{code}
Offering patch to redo as:
{code:java}
            MessageContentsList lst = MessageContentsList.getContentsList(message);
            if (lst == null) {
                return;
            }
            message.put(MessageInfo.class, messageInfo);
            message.put(BindingMessageInfo.class, bmi);
            ex.put(BindingOperationInfo.class, boi2);
            ex.put(OperationInfo.class, op);
{code}","Apache Maven 3.0.3 (r1075438; 2011-02-28 12:31:09-0500)
Maven home: C:\Java\apache-maven-3.0.3\bin\..
Java version: 1.6.0_24, vendor: Sun Microsystems Inc.
Java home: C:\Program Files\Java\jdk1.6.0_24\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows""",,,,,,,,,,,,,,,,02/Sep/11 14:57;garydgregory;WrapperClassInInterceptor.diff;https://issues.apache.org/jira/secure/attachment/12492757/WrapperClassInInterceptor.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3562,,,Fri Sep 02 14:57:02 UTC 2011,,,,,,0|i0b6kn:,63177,,,,,,,,02/Sep/11 14:57;garydgregory;trunk patch,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.cxf.endpoint.ClientImpl.invoke(BindingOperationInfo, Object[], Exchange) wastes cycles",CXF-3789,12521191,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,garydgregory,garydgregory,02/Sep/11 14:36,19/Oct/11 17:30,14/Mar/19 02:29,02/Sep/11 16:06,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,,,,,0,,,,,,"While debugging our server, I saw in {{org.apache.cxf.endpoint.ClientImpl.invoke(BindingOperationInfo, Object[], Exchange)}}:
{code:java}
Map<String, Object> resp = new HashMap<String, Object>();
resp.clear();
{code}
That's silly and a noop. Attaching patch to remove and do:
{code:java}
Map<String, Object> resp = new HashMap<String, Object>();
{code}
If you want an empty map to avoid wasting space for a rarely used feature, perhaps use:
{code:java}
Map<String, Object> resp = new HashMap<String, Object>(0);
{code}
or:
{code:java}
Map<String, Object> resp = new HashMap<String, Object>(1);
{code}
","Apache Maven 3.0.3 (r1075438; 2011-02-28 12:31:09-0500)
Maven home: C:\Java\apache-maven-3.0.3\bin\..
Java version: 1.6.0_24, vendor: Sun Microsystems Inc.
Java home: C:\Program Files\Java\jdk1.6.0_24\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows""",,,,,,,,,,,,,,,,02/Sep/11 14:50;garydgregory;ClientImpl.diff;https://issues.apache.org/jira/secure/attachment/12492756/ClientImpl.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3563,,,Fri Sep 02 14:50:56 UTC 2011,,,,,,0|i0b6vz:,63228,,,,,,,,02/Sep/11 14:50;garydgregory;trunk patch.,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow CXF HTTP Client to handle HTTP 202 for twoway calls when the real response is sent back to the decoupled endpoint.,CXF-3788,12521186,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,02/Sep/11 13:47,19/Oct/11 17:30,14/Mar/19 02:29,13/Sep/11 12:14,2.3.6,2.4.2,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,Transports,,,,0,,,,,,"CXF's HTTP Client can currently only handle HTTP 202 for oneway calls. This can lead to problems for twoway calls using a decouple endpoint when the server sends back the actual response to the decoupled endpoint and just an HTTP 202 response with no content to the HTTP response channel.

This problem was not noticed until now in various CXF-to-CXF tests, as the CXF server returns an HTTP 200 with an empty SOAP envelope (not filled) to the HTTP response channel.

But this behavior does not conform to the standard, it will be fixed with CXF-3768. CXF-366 and CXF-981 are also related to CXF-3768.

This jira ticket is created so that this patch can be ported to the older releases. And this patch needs to precede the patch for CXF-3768.
 ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,3564,,,Tue Sep 13 12:14:17 UTC 2011,,,,,,0|i0b7nj:,63352,,,,,,,,"12/Sep/11 15:35;ay;This fix broke some scenarios (reported by CXF-3796) and it needs to be corrected.

","13/Sep/11 12:14;ay;After running the entire systests, I found out that an additional check was required in HTTPConduit and ClientImpl before deciding to call callback.handleResponse() in HTTPConduit or return from ClientImpl without waiting.

More precisely, we need to avoid calling the handleResponse or quitting without waiting if a decoupled endpoint is supposed to be waiting for the real response. When callback.handleResponse is called, the callback's status is also set to done, although the real response is yet to arrive and the status should not be set done in that case. Similarly, when a request-response call is invoked with a decoupled endpoint, the ClientImpl gets 202 but it still needs to wait for the real response from the decoupled endpoint.

So, I needed to add this decoupled endpoint check in both places. Currently, the property name used is ""org.apache.cxf.ws.addressing.MAPAggregator.decoupledDestination"" and this name is defined as constant MAPAggregator.DECOUPLED_ENDPOINT in rt-ws-addr. 

Because of this, I am using this string value instead of this constant. But we should be defining a constant in Message. But I am not sure how and if we can replace this MAPAggregator's constant with this new constant. 


Our options are:
1. introduce a new constant in Message with another string and always set both properties at the same time
2. introduce a new constant in Message with the same string value and make MAPAggregator's constant simply refer to this new constant
3. introduce a new constant in Message with another string (one not containing ""ws.addressing.MAPAggregator"") and make MAPAggregator's constant simply refer to this new constant
4. replace the MAPAggregator's constant with the new constant of Message.
5. don't introduce a new constant in Message.

I think I prefer option 4 for 2.5.x and 3 for 2.4.x/2.3.x.

So, the problem itself has been resolved. But we will need to track this constant renaming/addition in another jira ticket.
",,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not set the correct host when viewing WSDLs that are published with JAXWS API,CXF-3787,12521178,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,mageshbk,mageshbk,02/Sep/11 12:31,19/Oct/11 17:30,14/Mar/19 02:29,23/Sep/11 17:59,2.4.1,,,,,,,,,,,,,,,,,2.4.3,2.5,,,JAX-WS Runtime,,,,1,,,,,,"Using Endpoint.publish method when the WSDL is queried the soap:address returned is always the local address rather than the requester's address. For such endpoints the rewriteSoapAddress property is null, so the code modifies the soap:address (MessageUtils.isTrue(rewriteSoapAddress)), but the base URL is always pointing to the localAddress.

",JAXWS frontend using HTTP transport,,,,,,,,,,,,,,,,02/Sep/11 12:36;mageshbk;CXF-3787.diff;https://issues.apache.org/jira/secure/attachment/12492736/CXF-3787.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3565,,,Fri Sep 02 12:36:35 UTC 2011,,,,,,0|i0b7in:,63330,,,,,,,,02/Sep/11 12:36;mageshbk;Patch attached.,,,,,,,,,,,,,,,,,,,,,,,,,,
Calling start on a server that already is started resets things,CXF-3785,12521093,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,01/Sep/11 18:31,19/Oct/11 17:30,14/Mar/19 02:29,01/Sep/11 19:47,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,Core,,,,0,,,,,,"
If you start() a ServerImpl that is already started, the  destinations listener is reset, the server is re-registerd with the registry, lifecycle manager is recalled, etc....",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3567,,,2011-09-01 18:31:41.0,,,,,,0|i0b75b:,63270,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
incorrect OSGi metadata header for the jbi tansport and binding,CXF-3784,12521020,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,01/Sep/11 07:56,19/Oct/11 17:30,14/Mar/19 02:29,01/Sep/11 08:08,,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,,,,,0,,,,,,"should use fine-grained export like
org.apache.cxf.transport.jbi.* but not org.apache.cxf.*
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3568,,,Thu Sep 01 08:08:47 UTC 2011,,,,,,0|i0b727:,63256,,,,,,,,"01/Sep/11 08:08;ffang;commit fix
http://svn.apache.org/viewvc?rev=1163931&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1163933&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Provide an option for the dispatch client to automatically set the correct SOAPAction based on the message payload,CXF-3783,12520910,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,31/Aug/11 11:43,19/Oct/11 17:30,14/Mar/19 02:29,06/Sep/11 12:23,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,JAX-WS Runtime,,,,0,,,,,,"This issue relates to CXF-2836 and CXF-3755,

A similar problem exists for the soapaction header when the dispatch client is created with a WSDL file.
Unlike for the WS-Addressing case, it makes less sense to always invoke the operation determination code implemented in DispatchImpl, as this code is expensive. So, there should be a configuration property (a request context property) to determine whether to invoke this code in this case.

The objective is to provide an option for the dispatch client to automatically set the correct soapaction header when the payload matches one of the operations given in the WSDL.


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3569,,,2011-08-31 11:43:12.0,,,,,,0|i0b6pr:,63200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DynamicClientFactory trying to resolve wsdl URL prior to calling into service factories,CXF-3780,12520866,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,31/Aug/11 01:58,19/Oct/11 17:30,14/Mar/19 02:29,31/Aug/11 02:16,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAXB Databinding,,,,0,,,,,,"
The DynamicClientFactory is trying to resolve the wsdlLocation to a URL.   This is unnecessary, but the bigger issue is that it then doesn't use the http-conf stuff to get https settings.
",,,,,,,,,,,,,CXF-3421,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3572,,,2011-08-31 01:58:10.0,,,,,,0|i0b713:,63251,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Minor WSDL errors in some of the sample projects,CXF-3779,12520764,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,gliesian,gliesian,30/Aug/11 15:35,24/Oct/11 17:12,14/Mar/19 02:29,24/Oct/11 17:12,2.4.2,,,,,,,,,,,,,,,,,,,,,Samples,,,,0,,,,,,"I moved several of the sample project WSDL's to a temporary location and performed WSDL validation with CXF's wsdlvalidator tool.  Below are some results that may flag the need for the associated WSDL's to be refined:

===========================================================
c:\apache-cxf-2.4.2\bin\wsdlvalidator bank.wsdl
WSDLValidator Error : Mixed style, invalid WSDL
===========================================================
c:\apache-cxf-2.4.2\bin\wsdlvalidator jms_greeter.wsdl
WSDLValidator Error : 
line 127 column 57 of file:/C:/WSDLS/jms_greeter.wsdl: cvc-complex-type.3.2.2: Attribute 'soapaction' is not allowed to appear in element 'soap:operation'.
===========================================================
c:\apache-cxf-2.4.2\bin\wsdlvalidator hello_world_client.wsdl
WSIBP Validator found <{http://apache.org/hello_world}JMSGreeterPortBinding> is NOT a SOAP binding
===========================================================
c:\apache-cxf-2.4.2\bin\wsdlvalidator BankWS-corba.wsdl
WSIBP Validator found <{http://cxf.apache.org/schemas/cxf/idl/Bank}BankCORBABinding> is NOT a SOAP binding
WSIBP Validator found <{http://cxf.apache.org/schemas/cxf/idl/Bank}AccountCORBABinding> is NOT a SOAP binding
===========================================================
c:\apache-cxf-2.4.2\bin\wsdlvalidator HelloWorld.wsdl
Aug 30, 2011 11:26:08 AM org.apache.cxf.tools.validator.internal.WSDLRefValidator collectValidationPoints
WARNING: WSDL document file:/C:/WSDLS/HelloWorld.wsdl does not define any services
WSDLValidator Error : WSI-BP-1.0 R2718 violation: A wsdl:binding in a DESCRIPTION MUST have the same set of wsdl:operations as the wsdl:portType to which it refers. greetMe not found in wsdl:binding.
===========================================================
c:\apache-cxf-2.4.2\bin\wsdlvalidator BankWS.wsdl
Aug 30, 2011 11:26:32 AM org.apache.cxf.tools.validator.internal.WSDLRefValidator collectValidationPoints
WARNING: WSDL document file:/C:/WSDLS/BankWS.wsdl does not define any services
WSDLValidator Error : WSI-BP-1.0 R2718 violation: A wsdl:binding in a DESCRIPTION MUST have the same set of wsdl:operations as the wsdl:portType to which it refers. create_account not found in wsdl:binding.
===========================================================",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-21 04:06:40.776,,,no_permission,,Unknown,,,,,,,,,,,3573,,,Mon Oct 24 17:12:49 UTC 2011,,,,,,0|i0b6vb:,63225,,,,,,,,"21/Oct/11 04:06;njiang;The sample corba wsdl is not using a stander soap binding, we can ignore that part of error.
I committed the patch to fix the jms_greeter.wsdl validation error. ",24/Oct/11 17:12;gliesian;Thanks for the patch.,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM provider may try to send a CreateSequence message to the anonymous endpoint in some cases,CXF-3777,12520707,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,30/Aug/11 08:26,19/Oct/11 17:30,14/Mar/19 02:29,30/Aug/11 16:04,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,WS-* Components,,,,0,,,,,,"When a WS-RM client wrongly sends out a CreateSeqeunce message for twoway calls without a create sequence offer and without a decoupled replyTo endpoint, the WS-RM server/provider tries to send a CreateSequence message to the anonymous endpoint (http://www.w3.org/2005/08/addressing/anonymous) and results in an exception such as:

Caused by: org.apache.cxf.transport.http.HTTPException: HTTP response '401: Authorization Required' when communicating with http://www.w3.org/2005/08/addressing/anonymous

The server should not try to send a CreateSequence message to the anonymous endpoint and instead should handle this situation by throwing a more descriptive exception.

I'm fixing it to throw an RMException with the following more descriptive text (which I add to the props file).

CREATE_SEQ_ANON_TARGET = It is not possible to send a create sequence request to the anonymous address {0}
",,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,3575,,,2011-08-30 08:26:24.0,,,,,,0|i0b6rz:,63210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate policy getting added with java-first approach,CXF-3776,12520692,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,w_raj@yahoo.com,w_raj@yahoo.com,30/Aug/11 06:39,10/Sep/11 13:28,14/Mar/19 02:29,31/Aug/11 18:09,2.4.2,,,,,,,,,,,,,,,,,2.4.3,,,,WS-* Components,,,,0,,,,,,"I am trying the latest CXF release 2.4.2 for adding policy using java-first approach. The generated wsdl had two occurences of policy. 
Since I put the ""wsu:id""  attribute in wsp:Policy tag, two policies with the same id got added in the generated wsdl. Also tried removing ""wsu:id"" attribute to avoid the duplicate policy exception, but it failed at some other point with error message ""Signature creation failed"" (please refer attached stack_trace_without_policy_id.txt).

when I removed ""implementorClass"" attribute from jaxws:endpoint configuration it was observed that the generated wsdl has only one instance of policy as expected, but the client stub generation for some of my webservices failed when configured without implementorClass.

Please refer the attached artifacts for code/configuration to reproduce the issue. generated wsdl with duplicate policy is also attached.

CXF / WSS artifacts used for the sample webapp are as below:
 cxf-2.4.2.jar
 cxf-manifest.jar
 cxf-xjc-boolean-2.4.0.jar
 cxf-xjc-bug671-2.4.0.jar
 cxf-xjc-dv-2.4.0.jar
 cxf-xjc-ts-2.4.0.jar
 wsdl4j-1.6.2.jar
 wss4j-1.6.2.jar
",Local build,86400,86400,,0%,86400,86400,,,,,,,,,,31/Aug/11 05:14;w_raj@yahoo.com;HelloWorld_generated_wsdl_with_duplicate_policy.xml;https://issues.apache.org/jira/secure/attachment/12492418/HelloWorld_generated_wsdl_with_duplicate_policy.xml,30/Aug/11 06:41;w_raj@yahoo.com;duplicate_policy_Issue.zip;https://issues.apache.org/jira/secure/attachment/12492206/duplicate_policy_Issue.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-08-30 17:40:51.785,,,no_permission,,Moderate,,,,,,,,,,,3576,,,Sat Sep 10 13:28:28 UTC 2011,,,,,,0|i0b75z:,63273,,,,,,,,30/Aug/11 06:44;w_raj@yahoo.com;3668 was about multiple policies being added depending on the number of webservices exposed with java-first approach. However this issue is only about two occurences of policy.,"30/Aug/11 17:40;dkulp;
I just checked the generated_wsdl_with_duplicate_policy_HelloWorld.xml file in the zip and there is only a single occurrence of the policy in there.   I'm a bit confused what the issue is.
","31/Aug/11 05:20;w_raj@yahoo.com;That was my mistake. Wsdl that you saw was generated (as expected with single instance of policy) when I didn't use implementorClass attribute in jaxws:endpoint configuration.
I have uploaded the one with duplicate policy today (HelloWorld_generated_wsdl_with_duplicate_policy.xml), this happens when I use implementorClass attribute.
","10/Sep/11 13:28;w_raj@yahoo.com;I have verified the fix using 2.4.3 snapshot build. 
Thanks a lot!!!


",,,,,,,,,,,,,,,,,,,,,,,
Cache-Control header provider won't emit the right values if multiple privateFields or noCacheFields are provided,CXF-3775,12520678,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,sergey_beryozkin,dobes_vandermeer,dobes_vandermeer,30/Aug/11 02:55,19/Oct/11 17:30,14/Mar/19 02:29,07/Sep/11 15:08,,,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,JAX-RS,,,,0,header,http,,,,"I was recently basing some code on the org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider and I noticed that it's handling of the no-cache and private fields isn't quite right.

Current if you have two private fields you would get output like:

Cache-Control: private=""Field1"",""Field2""

If you then parse this back into a CacheControl object it would be interpreted as one private field and an extension directive.

Based on my interpretation of the HTTP 1.1 spec sections:

http://www.w3.org/Protocols/rfc2616/rfc2616-sec2.html#sec2.1 where 1#field is defined as a comma seperated list of one or more fields and

http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 where it shows that the list of fields is a optional =, double quote, and a list of fields, and another double quote.

I think the correct output should be:

Cache-Control: private=""Field1, Field2""

And of course when parsing a naive splitting based on comma won't work because you have to ignore commas inside the quotes.

I don't think this is a much-used feature of the Cache-Control system or someone would already have reported this problem.




 ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,3577,,,2011-08-30 02:55:50.0,,,,,,0|i0b6yn:,63240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF unregisters MBeans for JAX-WS endpoints twice,CXF-3773,12520540,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,drzewo,drzewo,29/Aug/11 08:59,19/Oct/11 17:30,14/Mar/19 02:29,30/Aug/11 17:33,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,JAX-WS Runtime,,,,0,,,,,,"MBeans created for JAX-WS endpoints do get unregistered twice during context shutdown.

I've placed a breakpoint in {{org.apache.cxf.management.jmx.InstrumentationManagerImpl.unregister(ObjectName)}} and caught following stacks when reaching it. The first line shows the ObjectName being unregistered.

You may notice that the first three stacks are observed during the {{CXFBus}} shutdown, and the fourth one during {{JAXWS22SpringEndpointImpl}}.

The last invocation of {{org.apache.cxf.management.jmx.InstrumentationManagerImpl.unregister(ObjectName)}} results in {{javax.management.InstanceNotFoundException}} being thrown (the full message is {{""WARNING: Unregistering ManagedEndpoint failed. javax.management.InstanceNotFoundException: org.apache.cxf:bus.id=cxf52615653,type=Bus.Service.Endpoint,service=""{http://ws.xxx.xxxxx.com/}Service"",port=""ServicePort""}}) which prevents from shutting down the endpoint bean, spring context and web application context cleanly.

{noformat}
org.apache.cxf:bus.id=cxf52615653,type=Bus.Service.Endpoint,service=""{http://ws.xxx.xxxxxx.com/}Service"",port=""ServicePort""
Thread [main] (Suspended (entry into method unregister in InstrumentationManagerImpl))	
	InstrumentationManagerImpl.unregister(ObjectName) line: 229	
	InstrumentationManagerImpl.unregister(ManagedComponent) line: 225	
	ServerImpl.destroy() line: 180	
	ServerRegistryImpl.preShutdown() line: 88	
	CXFBusLifeCycleManager.preShutdown() line: 84	
	CXFBusLifeCycleManager.postShutdown() line: 91	
	SpringBus.onApplicationEvent(ApplicationEvent) line: 94	
	SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent) line: 97	
	XmlWebApplicationContext(AbstractApplicationContext).publishEvent(ApplicationEvent) line: 303	
	XmlWebApplicationContext(AbstractApplicationContext).doClose() line: 1007	
	XmlWebApplicationContext(AbstractApplicationContext).close() line: 970	
	ContextLoaderListener(ContextLoader).closeWebApplicationContext(ServletContext) line: 384	
	ContextLoaderListener.contextDestroyed(ServletContextEvent) line: 78	
	StandardContext.listenerStop() line: 4245	
	StandardContext.stop() line: 4886	
	StandardHost(ContainerBase).stop() line: 1110	
	StandardEngine(ContainerBase).stop() line: 1110	
	StandardEngine.stop() line: 468	
	StandardService.stop() line: 604	
	StandardServer.stop() line: 788	
	Catalina.stop() line: 662	
	Catalina.start() line: 629	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 601	
	Bootstrap.start() line: 289	
	Bootstrap.main(String[]) line: 414	
{noformat}

{noformat}
org.apache.cxf:bus.id=cxf52615653,type=Bus.Service.Endpoint,service=""{http://ws.xxx.xxxxx.com/}Service"",port=""Service""
Thread [main] (Suspended (entry into method unregister in InstrumentationManagerImpl))	
	InstrumentationManagerImpl.unregister(ObjectName) line: 229	
	InstrumentationManagerImpl.unregister(ManagedComponent) line: 225	
	ServerImpl.destroy() line: 180	
	ServerRegistryImpl.preShutdown() line: 88	
	CXFBusLifeCycleManager.preShutdown() line: 84	
	CXFBusLifeCycleManager.postShutdown() line: 91	
	SpringBus.onApplicationEvent(ApplicationEvent) line: 94	
	SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent) line: 97	
	XmlWebApplicationContext(AbstractApplicationContext).publishEvent(ApplicationEvent) line: 303	
	XmlWebApplicationContext(AbstractApplicationContext).doClose() line: 1007	
	XmlWebApplicationContext(AbstractApplicationContext).close() line: 970	
	ContextLoaderListener(ContextLoader).closeWebApplicationContext(ServletContext) line: 384	
	ContextLoaderListener.contextDestroyed(ServletContextEvent) line: 78	
	StandardContext.listenerStop() line: 4245	
	StandardContext.stop() line: 4886	
	StandardHost(ContainerBase).stop() line: 1110	
	StandardEngine(ContainerBase).stop() line: 1110	
	StandardEngine.stop() line: 468	
	StandardService.stop() line: 604	
	StandardServer.stop() line: 788	
	Catalina.stop() line: 662	
	Catalina.start() line: 629	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 601	
	Bootstrap.start() line: 289	
	Bootstrap.main(String[]) line: 414	
{noformat}

{noformat}
org.apache.cxf:bus.id=cxf52615653,type=Bus
Thread [main] (Suspended (entry into method unregister in InstrumentationManagerImpl))	
	InstrumentationManagerImpl.unregister(ObjectName) line: 229	
	InstrumentationManagerImpl.shutdown() line: 263	
	InstrumentationManagerImpl.postShutdown() line: 279	
	CXFBusLifeCycleManager.postShutdown() line: 97	
	SpringBus.onApplicationEvent(ApplicationEvent) line: 94	
	SimpleApplicationEventMulticaster.multicastEvent(ApplicationEvent) line: 97	
	XmlWebApplicationContext(AbstractApplicationContext).publishEvent(ApplicationEvent) line: 303	
	XmlWebApplicationContext(AbstractApplicationContext).doClose() line: 1007	
	XmlWebApplicationContext(AbstractApplicationContext).close() line: 970	
	ContextLoaderListener(ContextLoader).closeWebApplicationContext(ServletContext) line: 384	
	ContextLoaderListener.contextDestroyed(ServletContextEvent) line: 78	
	StandardContext.listenerStop() line: 4245	
	StandardContext.stop() line: 4886	
	StandardHost(ContainerBase).stop() line: 1110	
	StandardEngine(ContainerBase).stop() line: 1110	
	StandardEngine.stop() line: 468	
	StandardService.stop() line: 604	
	StandardServer.stop() line: 788	
	Catalina.stop() line: 662	
	Catalina.start() line: 629	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 601	
	Bootstrap.start() line: 289	
	Bootstrap.main(String[]) line: 414	
{noformat}

{noformat}
org.apache.cxf:bus.id=cxf52615653,type=Bus.Service.Endpoint,service=""{http://ws.xxx.xxxxx.com/}Service"",port=""ServicePort""
Thread [main] (Suspended (entry into method unregister in InstrumentationManagerImpl))	
	InstrumentationManagerImpl.unregister(ObjectName) line: 229	
	InstrumentationManagerImpl.unregister(ManagedComponent) line: 225	
	ServerImpl.destroy() line: 180	
	JAXWS22SpringEndpointImpl(EndpointImpl).stop() line: 263	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 601	
	DisposableBeanAdapter.invokeCustomDestroyMethod(Method) line: 273	
	DisposableBeanAdapter.destroy() line: 199	
	DefaultListableBeanFactory(DefaultSingletonBeanRegistry).destroyBean(String, DisposableBean) line: 487	
	DefaultListableBeanFactory(DefaultSingletonBeanRegistry).destroySingleton(String) line: 463	
	DefaultListableBeanFactory(DefaultSingletonBeanRegistry).destroySingletons() line: 431	
	XmlWebApplicationContext(AbstractApplicationContext).destroyBeans() line: 1048	
	XmlWebApplicationContext(AbstractApplicationContext).doClose() line: 1022	
	XmlWebApplicationContext(AbstractApplicationContext).close() line: 970	
	ContextLoaderListener(ContextLoader).closeWebApplicationContext(ServletContext) line: 384	
	ContextLoaderListener.contextDestroyed(ServletContextEvent) line: 78	
	StandardContext.listenerStop() line: 4245	
	StandardContext.stop() line: 4886	
	StandardHost(ContainerBase).stop() line: 1110	
	StandardEngine(ContainerBase).stop() line: 1110	
	StandardEngine.stop() line: 468	
	StandardService.stop() line: 604	
	StandardServer.stop() line: 788	
	Catalina.stop() line: 662	
	Catalina.start() line: 629	
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
	Method.invoke(Object, Object...) line: 601	
	Bootstrap.start() line: 289	
	Bootstrap.main(String[]) line: 414	
{noformat}

For the completness, my spring context is as simple as:
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd""
	xmlns:context=""http://www.springframework.org/schema/context""
	xmlns:jaxws=""http://cxf.apache.org/jaxws"" xmlns:jaxrs=""http://cxf.apache.org/jaxrs""
	xmlns:cxf=""http://cxf.apache.org/core"">

	<import resource=""classpath:META-INF/cxf/cxf.xml"" />
	<import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

	<cxf:bus />

	<bean id=""instrumentationManager""
		class=""org.apache.cxf.management.jmx.InstrumentationManagerImpl"" >
		<property name=""bus"" ref=""cxf"" />
		<property name=""enabled"" value=""true"" />
		<property name=""usePlatformMBeanServer"" value=""true"" />
	</bean>

	<bean id=""counterRepository"" class=""org.apache.cxf.management.counters.CounterRepository"" >
		<property name=""bus"" ref=""cxf"" />
	</bean>

	<jaxws:endpoint id=""webService"" implementor=""#service""
		address=""${web.ws.uri}"" />
</beans>
{code}
While the class and the interface exposed as a service looks somewhat like this:

{code}
@WebService(endpointInterface=""com.xxxxx.xxx.ws.IService"", serviceName=""Service"" )
@Component(""service"")
public class Service implements IService {
 // implementation here
}
{code}

{code}
@WebService
public interface IService {
	@WebResult(name = ""status"")
	@WebMethod(operationName = ""send"")
	public boolean send(@WebParam(name = ""message"") SomeMessage message)
			throws SomeException;

	@Oneway
	@WebMethod(operationName = ""doSend"")
	public void doSend(@WebParam(name = ""message"") SomeMessage message)
			throws SomeException;
}
{code}",Tomcat 6.0.33 / Spring 3.0.[56] / Java 1.[67],,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-30 17:03:09.461,,,no_permission,,Unknown,,,,,,,,,,,3579,,,Tue Aug 30 17:03:09 UTC 2011,,,,,,0|i0b747:,63265,,,,,,,,"30/Aug/11 17:03;ay;This problem can happen when the container tries to stop the endpoint after its associated bus has been stopped.

I'm fixing the clean up code of ServerImpl to prevent this problem from happening.
 
",,,,,,,,,,,,,,,,,,,,,,,,,,
Apache CXF 2.4.2 samples do not build on Windows 7 Ultimate 64 bit using Java SDK 1.7 and ant 1.8.2. following the README.txt directions.,CXF-3772,12520499,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,gmazza,pasofinmailbox-apachesf@yahoo.com,pasofinmailbox-apachesf@yahoo.com,28/Aug/11 23:21,19/Oct/11 17:30,14/Mar/19 02:29,06/Sep/11 02:41,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,Samples,,,,0,,,,,,"I set out to build the examples for Apache CXF 2.4.2, the binary distribution. I am using Windows 7 Ultimate 64 bit, Java SDK 1.7, Tomcat 7.0, and Eclipse Indigo 3.7.

I down loaded the Apache CXF 2.4.2 binary distribution for Windows zip file. I uncompressed and copied the expanded directory to:

""C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2""

I changed directory to the samples directory:

""C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples""

I began to follow the directions in the README.txt file in that directory which begins with:
""Basic Setup for Building and Running the Demos.""

I had already installed the Java SDK V1.7.
I installed Apache ant v1.8.2.

I opened a cmd tool window and verified that I had set up the environment correctly:

CXF_HOME:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>echo %CXF_H
OME%
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2

JAVA_HOME:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>echo %JAVA_
HOME%
C:\Program Files\Java\jdk1.7.0

ANT_HOME:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>echo %ANT_H
OME%
C:\Program Files\Apache Software Foundation\apache-ant-1.8.2

PATH:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>echo %PATH%

C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x8
6)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\
Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Fil
es (x86)\QuickTime\QTSystem\;C:\Program Files (x86)\Common Files\Roxio Shared\9.
0\DLLShared\;C:\Program Files (x86)\GTK2-Runtime\bin;C:\Program Files (x86)\Wind
ows Live\Shared;C:\Program Files (x86)\Apache Software Foundation\Tomcat 7.0\bin
;C:\Program Files\Java\jdk1.7.0\bin;C:\Program Files\Apache Software Foundation\
apache-ant-1.8.2\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.
0.3\bin;C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\bin


CLASSPATH:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>echo %CLASS
PATH%
.;C:\Program Files (x86)\QuickTime\QTSystem\QTJava.zip;C:\Program Files\MySQL\my
sql-connector-java-5.1.17\mysql-connector-java-5.1.17-bin.jar;C:\Program Files\A
pache Software Foundation\apache-cxf-2.4.2\lib\cxf-manifest.jar;.\build\classes

CATALINA_HOME:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>echo %CATAL
INA_HOME%
C:\Program Files (x86)\Apache Software Foundation\Tomcat 7.0


I verified that Tomcat 7.0 was running with the Tomcat icon in the system tray.

The REAME.txt now Says:

[Now we have two flavors WAR, one is Full WAR that included all the jars 
in the $WAR/WEB-INF/lib folder, the other is minimum WAR, which did not 
include any jars in the WAR.

1)run ""ant war"" to build a Full WAR.
2)run ""ant war -Dwithout.libs=true"" to build a minimum WAR.]
    
I issued the command:
""C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>ant war""

ERROR MESSAGE:
Buildfile: build.xml does not exist!
Build failed

I checked in the directory, and indeed there was no file named ""build.xml"". There was a file named ""common_build.xml"".
ant -help said there was a command line option ""-buildfile"".

I issued the command:
""C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>ant -buildf
ile common_build.xml war

ERROR MESSAGE:
Buildfile: C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\
common_build.xml
 [loadfile] Do not set property srcbuild.classpath as its length is 0.

BUILD FAILED
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\common_buil
d.xml:75: Apache CXF requires Java version 1.5 or higher. You are currently usin
g Java version 1.7.

Total time: 1 second

I edited the file common-build.xml. I replaced the section:

    <condition property=""is.java.version.15"">
        <or>
            <equals arg1=""${ant.java.version}"" arg2=""1.5""/>
            <equals arg1=""${ant.java.version}"" arg2=""1.6""/>
       </or>
    </condition>

    <fail message=""Apache CXF requires Java version 1.5 or higher. You are currently using Java version ${ant.java.version}.""
        unless=""is.java.version.15""/>


with:


    <condition property=""is.java.version.15"">
        <or>
            <equals arg1=""${ant.java.version}"" arg2=""1.5""/>
            <equals arg1=""${ant.java.version}"" arg2=""1.6""/>
            <equals arg1=""${ant.java.version}"" arg2=""1.7""/>
      </or>
    </condition>

    <fail message=""Apache CXF requires Java version 1.5 or higher. You are currently using Java version ${ant.java.version}.""
        unless=""is.java.version.15""/>


I issued the command:
""C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>ant -buildf
ile common_build.xml war

ERROR MESSAGE:
Buildfile: C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\
common_build.xml
 [loadfile] Do not set property srcbuild.classpath as its length is 0.

BUILD FAILED
Target ""war"" does not exist in the project ""cxf  build file"".

Total time: 1 second

I checked ""common_build.xml"" and verified that indeed there is no target name line like:

<target name=""war"">

There is a line
        <antcall target=""war""/>
but this does not appear to be the same thing.

Some research suggested that the default build option would create the war file.

I issued the command:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples>ant -buildf
ile common_build.xml

ERROR MESAGE:
Buildfile: C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\
common_build.xml
 [loadfile] Do not set property srcbuild.classpath as its length is 0.

maybe.generate.code:
 [loadfile] Do not set property srcbuild.classpath as its length is 0.

BUILD FAILED
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\common_buil
d.xml:120: The following error occurred while executing this line:
Target ""generate.code"" does not exist in the project ""cxf  build file"".

Total time: 1 second

I decided to give up trying to build all of the Apache CXF 2.4.2 samples at once.

I changed directory to:
""C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\java_first_jaxws"". 

I would now try to build just this one sample.

The README.txt file begins with:
""Java First demo using jax-ws APIs and jsr-181""

The environment was correct, so I proceeded onward!

later in the README.txt file:
""Building and running the demo using ant""
From the base directory of this sample (i.e., where this README file is
located), the Ant build.xml file can be used to build and run the demo.
The server and client targets automatically build the demo.

Using either UNIX or Windows:

  ant server  (from one command line window)
  ant client  (from a second command line window)


I issued the command:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\java_first_
jaxws>ant server

ERROR MESSAGE:
Buildfile: C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\
java_first_jaxws\build.xml
 [loadfile] Do not set property srcbuild.classpath as its length is 0.

maybe.generate.code:

compile:
    [javac] C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples
\common_build.xml:128: warning: 'includeantruntime' was not set, defaulting to b
uild.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 9 source files to C:\Program Files\Apache Software Foundat
ion\apache-cxf-2.4.2\samples\java_first_jaxws\build\classes
    [javac] javac: invalid flag: Files\Apache
    [javac] Usage: javac <options> <source files>
    [javac] use -help for a list of possible options

BUILD FAILED
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\common_buil
d.xml:128: Compile failed; see the compiler error output for details.

Total time: 1 second

I issued the command:
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\java_first_
jaxws>ant client

ERROR MESSAGE:
Buildfile: C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\
java_first_jaxws\build.xml
 [loadfile] Do not set property srcbuild.classpath as its length is 0.

maybe.generate.code:

compile:
    [javac] C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples
\common_build.xml:128: warning: 'includeantruntime' was not set, defaulting to b
uild.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 9 source files to C:\Program Files\Apache Software Foundat
ion\apache-cxf-2.4.2\samples\java_first_jaxws\build\classes
    [javac] javac: invalid flag: Files\Apache
    [javac] Usage: javac <options> <source files>
    [javac] use -help for a list of possible options

BUILD FAILED
C:\Program Files\Apache Software Foundation\apache-cxf-2.4.2\samples\common_buil
d.xml:128: Compile failed; see the compiler error output for details.

Total time: 1 second

There would appear to be an issue with the Microsoft passion for putting spaces in the path. I read many warnings about not using quotes for any of the paths in the environment for fear of breaking ant.

I would like to compile, run, and use these samples.

Can anyone out there help me?
 


","Windows 7 Ultimate Edition 64 bit, Java SDK v1.7, ant v1.8.2, Apache Tomcat v7.0, Eclipse Indigo v3.7",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-29 21:11:02.614,,,no_permission,,Unknown,,,,,,,,,,,3580,,,Tue Sep 06 02:41:25 UTC 2011,,,,,,0|i1agbz:,269112,,,,,,,,"29/Aug/11 21:11;gmazza;We're in the process of getting rid of the Ant build files and going all-Maven (and in some cases, OSGi bundles) like Jersey and RESTEasy -- several build.xml's have been taken out but I haven't gotten to the others yet.  Best to use Maven for your builds.

Thankfully, web services are an easy and fun way to get up-to-speed with Maven (http://www.jroller.com/gmazza/entry/web_service_tutorial), you won't look back once you've done so.

Glen
","29/Aug/11 21:25;gmazza;Actually, that README file is as old as the moon and needs updating to tell people to use Maven.","06/Sep/11 02:41;gmazza;I updated the main README to emphasize the use of Maven for builds and removed Ant build.xmls from an additional ten projects, there are still some legacy ant projects and ant references that will continue to be cleaned out over time.

",,,,,,,,,,,,,,,,,,,,,,,,
WADL Generator does not handle Enums correctly,CXF-3770,12520314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,26/Aug/11 22:36,11/Nov/11 16:38,14/Mar/19 02:29,31/Aug/11 12:32,,,,,,,,,,,,,,,,,,2.4.3,2.5,,,JAX-RS,,,,0,,,,,,WADL generator should print multiple options when dealing with Enum,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-10-18 23:44:59.506,,,no_permission,,Unknown,,,,,,,,,,,3582,,,Fri Nov 11 16:36:13 UTC 2011,,,,,,0|i0b8jr:,63497,,,,,,,,"18/Oct/11 23:44;jasonchaffee;This looks like it is working for PathParam now, but still isn't working for QueryParam.","18/Oct/11 23:54;jasonchaffee;I believe the issue is in the method doWriteBeanParam, I believe the conditional is not checking for Enum as one of the supported types.  It is only checking for primitives, collections and arrays.

{noformat}
if (isPrimitive || InjectionUtils.isSupportedCollectionOrArray(paramCls)) {
    doWriteParam(sb, entry.getKey(), paramCls, paramCls, name, new Annotation[]{});
} else {
    doWriteBeanParam(sb, paramCls, entry.getKey(), name);
}
{noformat} ","24/Oct/11 14:55;sergey_beryozkin;I have a test involving QueryParam, how does the signature of your method look like ?
Can you paste a sample enum Class ?","24/Oct/11 22:52;jasonchaffee;The example is when the Enum is part of a POJO/bean.

{noformat}
    @GET
    @Path(""{storeId}"")
    Response getStore(@PathParam(""storeId"") Long storeId,
        @QueryParam("""") StoreParameters params) 
{noformat}

StoreParameters.java: 
{noformat}
public class StoreParameters {
    private String groupId;
    private PromotionTypeEnum promotionType;
    private StatusTypeEnum status;

    /**
     * Creates a new StoreParameters object.
     */
    public StoreParameters() {
    }

    /**
     * Returns the group id value.
     *
     * @return  group id value.
     */
    public String getGroupId() {
        return groupId;
    }

    /**
     * Returns the promotion type value.
     *
     * @return  promotion type value.
     */
    public PromotionTypeEnum getPromotionType() {
        return promotionType;
    }

    /**
     * Returns the status value.
     *
     * @return  status value.
     */
    public StatusTypeEnum getStatus() {
        return status;
    }

    /**
     * Sets the group id value.
     *
     * @param  groupId
     */
    public void setGroupId(final String groupId) {
        this.groupId = groupId;
    }

    /**
     * Sets the promotion type value.
     *
     * @param  promotionType
     */
    public void setPromotionType(final PromotionTypeEnum promotionType) {
        this.promotionType = promotionType;
    }

    /**
     * Sets the status value.
     *
     * @param  status
     */
    public void setStatus(final StatusTypeEnum status) {
        this.status = status;
    }
}
{noformat}

StatusTypeEnum.java: 
{noformat}
@XmlEnum public enum StatusTypeEnum implements Serializable {
    @XmlEnumValue(""Deactivated"")
    DEACTIVATED(4L, ""Deactivated""),
    @XmlEnumValue(""*"")
    DEFAULT(-1L, ""*""),
    @XmlEnumValue(""In Progress"")
    IN_PROGRESS(1L, ""In Progress""),
    @XmlEnumValue(""Limited Published"")
    LIMITED_PUBLISHED(3L, ""Limited Published""),
    @XmlEnumValue(""Published"")
    PUBLISHED(2L, ""Published"");

    private final String name;
    private final Long value;

    private StatusTypeEnum(final Long v, final String n) {
        this.value = v;
        this.name = n;
    }

    public static StatusTypeEnum fromValue(final Long v) {
        for (final StatusTypeEnum c : StatusTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }

        return null;
    }

    public static StatusTypeEnum fromValue(final String n) {
        for (final StatusTypeEnum c : StatusTypeEnum.values()) {
            if (c.name.equalsIgnoreCase(n)) {
                return c;
            }
        }

        return null;
    }

    public String nameValue() {
        return this.name;
    }

    public String toString() {
        return nameValue();
    }

    public Long value() {
        return value;
    }
{noformat}

I expect the @XmlEnumValue to be used for the <option> element.","11/Nov/11 16:36;sergey_beryozkin;those enums which are inside beans will also be checked now, toString() is used which should produce be the same value as @XmlEnumValue does",,,,,,,,,,,,,,,,,,,,,,
HTTP response code 202 is not set for WS-Addressing partial responses,CXF-3768,12520271,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,rnd,rnd,26/Aug/11 16:48,01/Nov/11 02:11,14/Mar/19 02:29,07/Sep/11 07:58,2.4.2,,,,,,,,,,,,,,,,,2.5,,,,WS-* Components,,,,0,,,,,,"When asyncronous processing is requested by specifying an endpoint reference in the request's ReplyTo WSA header, an immediate acknowledgement should be sent with HTTP code 202.  Older CXF versions (e.g. 2.2.11) implemented this requirement in the method {{org.apache.cxf.transport.http.AbstractHTTPDestination#markPartialResponse}}, but the newer ones (2.4.1, 2.4.2) do not set the HTTP response code explicitely, therefore acknowledgements are delivered with code 200.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-29 07:31:36.237,,,no_permission,,Unknown,,,,,,,,,,,3584,,,Wed Sep 07 07:58:24 UTC 2011,,,,,,0|i14f5z:,233920,,,,,,,,"29/Aug/11 07:31;ay;The change needed to correct the following issue introduced this regression problem.
CXF-3004 Inconsistent HTTP response code 202 returned for WS-RM piggybacked Ack response message

We probably need to introduce another method in MessageUtils to check if the partial response is empty or non-empty so that AbstractHTTPDestination knows which HTTP status code to return.

- no partial response or an empty partial response -> http 202
This is the case for normal oneway calls or oneway calls with ws-a engaged which sets a partial response.

- a non-empty partial response -> http 200
This is the case for oneway calls with ws-a and additionally some interceptors (ws-rm) setting some properties of the partial response.
 ","29/Aug/11 08:00;ffang;Hi Aki,

Isn't it a good practice that when you assign a issue for yourself, you should check if this issue already assigned to other guys? Or at least you should ping the guy who is the previous assignee if you want to take over an issue?

I'm totally OK with that you take over this issue as you obviously know better about this issue history, however IMHO we should follow some good practice when we work on same project together.

What do you think?

Freeman

","29/Aug/11 08:23;elakito@googlemail.com;Freeman,
I am very sorry. I thought I saw the status as unsigned when I
assigned this issue to me. I saw the issue on Friday and it was on my
browser's cache and the status was still unsigned when I did reload
this page this morning.  The page was in my browsers cache. I didn't
see that you had already taken it. I am really sorry. It was not
intended.

regards, aki

","29/Aug/11 08:29;ffang;Hi Aki,

Understood and It doesn't matter.
Just ensure we follow same practice when we work on same project.
Btw, you're welcome to take this issue, :-)

Best Regards
Freeman","29/Aug/11 08:59;elakito@googlemail.com;Hi Freeman,

thanks. I'll take the issue. And do you think the suggested solution is alright?

I am introducing a new constant EMPTY_PARTIAL_RESPONSE_MESSAGE in
Message. This is set to Boolean.TRUE along with the existing Boolean
property PARTIAL_RESPONSE_MESSAGE when a partial response message is
created. Later when some component updates the partial response
message, we remove this EMPTY_PARTIAL_RESPONSE_MESSAGE property so
that the AbstractHTTPDestination can decide which http response must
be returned. I tried this out and it seems to be working fine.

I would appreciate your comments.

Thanks.

regards, aki
p.s. I'll double check the status next time when I am taking an issue,
but I am worried what will happen when two people push ""Assgin to me""
button around the same time, whether the second person will get some
warning or error message and not getting the issue assigned.

","29/Aug/11 11:30;ffang;Hi Aki,

Your solution sounds ok for me.
The rough idea is that we need figure out a way to tell the difference between empty and non-empty partial response(so that use different http return code), and your solution exactly can do it.

And about the ""Assign to me"" issue, I don't think jira can really warn you that there's another guy to do same operation at the same time, the ""Assign to me"" request would be processed one by one, that said, the last one would be the assignee. Anyway, we have email notification for jira changes and IMO that's very rare that two guys try to assign same issue to himself at the same time, so we shouldn't worry this too much.

Best Regards.
Freeman
","29/Aug/11 12:07;dkulp;
Well, part of the problem is that CXF is returning a non-empty partial response when it should be returning an empty one.    I started looking into this briefly on Friday and noticed that when the incoming request has a reply to to a decoupled dest, we're sending back a 200 with a message with an envelope with an empty body.   The 200 is correct there.   Instead, it SHOULD be a 202 with an empty response.   ","31/Aug/11 12:00;ay;My reply to Dan was sent to dev@cxf and not to this jira. The link to the mail thread is at:

http://cxf.547215.n5.nabble.com/Re-jira-Commented-CXF-3768-HTTP-response-code-202-is-not-set-for-WS-Addressing-partial-responses-tt4746059.html

Basically, I fixed the behavior as described in the above thread. But the problem is that many existing WS-RM systests are failing after this change, as some of their test assertions are counting those empty messages as well.

I need to look into this and restructure those tests to not rely on the number of physical messages but rely on the information exchanged (i.e., real acks).

After I figure this out, I will submit the change.

","31/Aug/11 20:34;dkulp;
I think CXF-981 is related to this or is a duplicate of this.  Aki, can you check on that. 

Actually, in the WS-* component in JIRA, there are a bunch of open WS-RM and WS-Addressing related open issues that may be related to this or are already implemented.","31/Aug/11 21:21;ay;Hi Dan,
Okay. I looked at CXF-981. It's difficult to say what is meant by ""partial responses"" and by ""ws-rm is enabled"" in this ticket. 

Within the server runtime, we have partial responses at some point when ws-a is enabled. Prior to the change I made for CXF-3768, we had these PR serialized as http 200 responses. And depending on which interceptors are configured, those responses differ:
- http 200 empty soap body (if only ws-a is used as in this ticket or if ws-rm is used but there is no sequence ack attached to this PR).
- http 200 with non empty soap (if ws-rm is used and there is some sequence ack attached).

If Dan Diephaus meant that he didn't want to see those empty soap with http 200 in those ws-a only cases or those ws-rm without any sequence ack attached cases, his issue would be resolved with this change.

I will search for other tickets you suggested.

regards, aki
p.s. I have a question about how I should fix the test cases and whether to keep the fall back option. I will post it to dev@cxf.
","02/Sep/11 11:59;ay;Regarding the related jira tickets, I found

CXF-366	
mods to partial response mechanism to facilitate wider interop

CXF-981	
Partial responses are always sent when WS-A is enabled

CXF-366 and CXF-981 both talk about suppressing the superfluous http 200 responses. Additionally, CXF-366 talks about accepting HTTP 200 with no content, which is already implemented in CXF.

So, the patch for this CXF-3768 which suppresses the transmission of HTTP 200 empty SOAP envelope responses, I suppose these both issues can be resolved as well.

I will also create a separate jira ticket to make the client side change that is required for letting the CXF client handle HTTP 202 for the CreateSequence call when the CreateSequenceResponse is sent back to the decoupled endpoint.

regards, aki","07/Sep/11 07:58;ay;The patch is applied for 2.5.

We had discussion on the potential impact of this change to other part of CXF and decided to make this change only for 2.5 for now.

http://cxf.547215.n5.nabble.com/Adjusting-WS-RM-systests-for-http-202-tt4756114.html

If this change needs to be integrated to 2.4, this ticket can be reopened.
regards, aki

",,,,,,,,,,,,,,,
JARS does not respect encoding when reading application/x-www-form-urlencoded;charset=Iso-8859-1 parameters,CXF-3764,12520235,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,gigerstyle,gigerstyle,26/Aug/11 10:26,19/Oct/11 17:30,14/Mar/19 02:29,31/Aug/11 12:47,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,JAX-RS,,,,0,,,,,,"JAXRS calls UrlUtils.urlDecode(value);

which has hardcoded UTF-8 as encoding:

public static String urlDecode(String value) {
    try {
        value = URLDecoder.decode(value, ""UTF-8"");
    } catch (UnsupportedEncodingException e) {
        LOG.warning(""UTF-8 encoding can not be used to decode "" + value);          
    }
    return value;
}
    
I've provided the stack trace so that you can see which path it went through:

java.lang.Exception: Stack trace
        at java.lang.Thread.dumpStack(Thread.java:1206)
        at org.apache.cxf.common.util.UrlUtils.urlDecode(UrlUtils.java:53)
        at org.apache.cxf.jaxrs.utils.HttpUtils.urlDecode(HttpUtils.java:72)
        at org.apache.cxf.jaxrs.utils.FormUtils.populateMapFromString(FormUtils.java:85)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processFormParam(JAXRSUtils.java:732)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.createHttpParameterValue(JAXRSUtils.java:659)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:617)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:571)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:118)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:208)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:166)
        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:113)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:184)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:107)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:163)",,,,,,,,,,,,,,,,,30/Aug/11 20:10;gigerstyle;JAXRSUtilsTest.java.diff;https://issues.apache.org/jira/secure/attachment/12492293/JAXRSUtilsTest.java.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-08-29 12:27:39.84,,,no_permission,,Unknown,,,,,,,,,,,3588,,,Wed Aug 31 12:47:04 UTC 2011,,,,,,0|i0b74f:,63266,,,,,,,,"29/Aug/11 12:27;sergey_beryozkin;Reproduced - please use
MultivaluedMap as a parameter, instead of @FormParam as a workaround","29/Aug/11 12:37;sergey_beryozkin;actually, seems to work for me.
Can you post please a sample form payload, they way it looks on the wire ?

I have this test:
http://svn.apache.org/repos/asf/cxf/trunk/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/FormEncodingProviderTest.java#testReadFromISO,

",30/Aug/11 20:10;gigerstyle;Testcases for parameter Encodings,31/Aug/11 12:47;sergey_beryozkin;thanks for the tests,,,,,,,,,,,,,,,,,,,,,,,
CLONE - JaxWsDynamicClientFactory unable to handle custom exceptions,CXF-3763,12520179,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,esalaza,esalaza,25/Aug/11 23:17,14/Oct/14 09:06,14/Mar/19 02:29,26/Aug/11 19:58,2.4.2,,,,,,,,,,,,,,,,,2.4.3,,,,JAX-WS Runtime,,,,2,,,,,,"When server throws a custom exception client is showing a NULLPointerException and returning a SoapFault with the error message thrown by the server. But the expected output should be the custom exception.
Below is the full stack trace.

Nov 21, 2009 11:25:01 AM org.apache.cxf.bus.spring.BusApplicationContext getConfigResources
INFO: No cxf.xml configuration file detected, relying on defaults.
Nov 21, 2009 11:25:03 AM org.apache.cxf.endpoint.dynamic.DynamicClientFactory outputDebug
INFO: Created classes: contactus.CxCSWebserviceExcpetion123, contactus.ObjectFactory, contactus.PostMessage, contactus.PostMessageResponse
Nov 21, 2009 11:25:05 AM org.apache.cxf.interceptor.ClientFaultConverter processFaultDetail
INFO: Exception occurred while creating exception: null
java.lang.NullPointerException
	at org.apache.cxf.interceptor.ClientFaultConverter.getConstructor(ClientFaultConverter.java:182)
	at org.apache.cxf.interceptor.ClientFaultConverter.processFaultDetail(ClientFaultConverter.java:154)
	at org.apache.cxf.interceptor.ClientFaultConverter.handleMessage(ClientFaultConverter.java:74)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:96)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:69)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:34)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:658)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2139)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2022)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1947)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:632)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:236)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:472)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:302)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:254)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:274)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:260)
	at com.chordiant.cs.scheduler.client.CXFDynamicContactClient.main(CXFDynamicContactClient.java:23)
org.apache.cxf.binding.soap.SoapFault: Exception from postMessages



Here is the client Code.

		try
		{
			JaxWsDynamicClientFactory dcf = JaxWsDynamicClientFactory.newInstance();
			Client client = dcf.createClient(""http://localhost:8080/contactUs/contactus?wsdl"", Thread.currentThread().getContextClassLoader());
			client.invoke(""postMessage"", ""test"");
		}
		catch(Exception e){
			System.out.println(e);
		}
			
",Windows OS with tomcat server,,,,,,,,,,CXF-2555,,,,,,25/Aug/11 23:22;esalaza;TypeClassInitializer.java.patch;https://issues.apache.org/jira/secure/attachment/12491708/TypeClassInitializer.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-08-26 19:58:07.671,,,no_permission,,,,,,,,,,,,,3589,,,Thu Sep 01 19:19:12 UTC 2011,,,,,,0|i0b71b:,63252,,,,,,,,"25/Aug/11 23:19;esalaza;Although CXF-2555 is closed as fixed in 2.2.6, some users reported the issue was still happening in 2.2.8.

I tried it in 2.4.2 and the issue is also still hapenning.

The stack trace in 2.4.2 is almost the same:

java.lang.NullPointerException
	at org.apache.cxf.interceptor.ClientFaultConverter.getConstructor(ClientFaultConverter.java:204)
	at org.apache.cxf.interceptor.ClientFaultConverter.processFaultDetail(ClientFaultConverter.java:176)
	at org.apache.cxf.interceptor.ClientFaultConverter.handleMessage(ClientFaultConverter.java:80)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:105)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:69)
	at org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor.handleMessage(CheckFaultInterceptor.java:34)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:771)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1600)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1485)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1393)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:640)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:519)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:449)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:352)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:304)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:324)
	at test.CustomExceptionDynamicTestClientMain.main(CustomExceptionDynamicTestOASClientMain.java:31)

The fix in Jira for CXF-2555 includes code (ExceptionCreator in TypeClassInitializer) to generate a JAXWS-type exception class which is mandatory to fix the error, but I have noticed this code is not being reached for the MessagePartInfo parts corresponding to the FaultInfo message.

In the physical code generation phase, DynamicClientFactory generates the exception faultInfo bean class, but not  the jaxws excepcion class (the one that extends java.lang.Exception). Later, before returning the generated Client, the TypeClassInitializer service model visitor is called and is expected to generate the missing exception classes when visiting the MessagePartInfo parts related to the FaultInfo message. In my test cases, the visitor's ""begin"" method always return before generating the class due to the condition {{if (!allowWrapperOperations && op.isUnwrappedCapable() && !op.isUnwrapped())}}. For this reason, when ClientFaultConverter asks for the exception class (which is supossed to be stored as a property of the FaultInfo message), it finds it null and generate the NPE.

I modified the condition to {{if (!isFault && !allowWrapperOperations && op.isUnwrappedCapable() && !op.isUnwrapped())}} and my tests now work OK, but I'm afraid I'm maybe not taking into account all the wrapped/unwrapped variations.
","26/Aug/11 19:58;dkulp;
Patch applied.  Thanks!",01/Sep/11 19:19;esalaza;I did the test again and the custom exceptions are now handled correctly.,,,,,,,,,,,,,,,,,,,,,,,,
STSClient can't process EncryptedKey elements received from an STS,CXF-3761,12519978,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,24/Aug/11 15:09,19/Oct/11 17:30,14/Mar/19 02:29,24/Aug/11 15:37,2.3.6,2.4.2,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,,,,,0,,,,,,"
There is a bug in the STSClient when processing a RequestedProofToken received from an STS. This element can contain an EncryptedKey child, but the STSClient searches in the wrong namespace and so never finds the element.

Secondly, the STSClient doesn't support the scenario where a RequestedProofToken contains a ComputedKey, and the associated Entropy element has an EncryptedKey child (instead of a BinarySecret).",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3591,,,2011-08-24 15:09:39.0,,,,,,0|i0b6l3:,63179,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problematic inheritance of @Produces/@Consumes,CXF-3760,12519851,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,marco.schulte,marco.schulte,23/Aug/11 17:16,19/Oct/11 17:30,14/Mar/19 02:29,29/Aug/11 17:28,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,JAX-RS,,,,0,,,,,,"Given the sample interface invoiceWebservice:

{code} 
@Path(""invoice/"")
@Consumes(MediaType.APPLICATION_XML)
@Produces(MediaType.APPLICATION_XML)
public interface InvoiceWebservice {
	@POST
	public void insert(WSInvoice wsInvoice);

	[...]
}
{code} 

The usage of insert of this sample interface will cause an error, if used as both client and server interface.

The client will send the http header ""Accept: text/plain"" due to return type void of insert(WSInvoice). But the server will respond with http ""406 not acceptable"", because the method inherited @Produces(MediaType.APPLICATION_XML).

A workaround is to only annotate the methods, so insert does not get an @Produces annotation, or adding ""text/plain"" to @Consumes.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-29 17:28:01.542,,,no_permission,,Unknown,,,,,,,,,,,3592,,,Mon Aug 29 17:28:01 UTC 2011,,,,,,0|i0b6un:,63222,,,,,,,,29/Aug/11 17:28;sergey_beryozkin;I made a minor update which should get it fixed - please check with 2.4.3-SNAPSHOT when you get a chance,,,,,,,,,,,,,,,,,,,,,,,,,,
wadl2java fails with NullPointerException if status codes of multiple response elements are not in ascending numerical order,CXF-3759,12519830,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,ojelinski,ojelinski,23/Aug/11 14:30,19/Oct/11 17:30,14/Mar/19 02:29,26/Aug/11 12:26,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,,,,,0,,,,,,"Strangely, if I have the status codes in the response not in ascending order in the wadl-document, wadl2java fails with NPE.

For example the following works correctly:

<?xml version=""1.0"" encoding=""UTF-8""?>
<application 
  xmlns=""http://wadl.dev.java.net/2009/02""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://wadl.dev.java.net/2009/02 wadl.xsd"" >
  <resources base=""http://localhost:9900/MyService"">
    <resource path=""/MyResource"" id=""my.Resource"">
	  <method name=""GET"" id=""putSomething"">
	    <request />
	    <response status=""200"" />
	    <response status=""400"" />
	  </method>
    </resource>
  </resources>
</application>

... while the following doesn't:

<?xml version=""1.0"" encoding=""UTF-8""?>
<application 
  xmlns=""http://wadl.dev.java.net/2009/02""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://wadl.dev.java.net/2009/02 wadl.xsd"" >
  <resources base=""http://localhost:9900/MyService"">
    <resource path=""/MyResource"" id=""my.Resource"">
	  <method name=""GET"" id=""putSomething"">
	    <request />
	    <response status=""400"" />
	    <response status=""200"" />
	  </method>
    </resource>
  </resources>
</application>

... but throws the following exception:

[ERROR] Failed to execute goal org.apache.cxf:cxf-wadl2java-plugin:2.4.2:wadl2java (generate-sources) on project XXX: java.lang.NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.cxf:cxf-wadl2java-plugin:2.4.2:wadl2java (generate-sources) on project XXX: java.lang.NullPointerException
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:217)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:534)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.MojoExecutionException: java.lang.NullPointerException
	at org.apache.cxf.maven_plugin.wadlto.AbstractCodeGeneratorMojo.callCodeGenerator(AbstractCodeGeneratorMojo.java:458)
	at org.apache.cxf.maven_plugin.wadlto.WADL2JavaMojo.execute(WADL2JavaMojo.java:101)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:107)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	... 19 more
Caused by: org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:75)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
	at org.apache.cxf.tools.wadlto.WADLToJava.run(WADLToJava.java:65)
	at org.apache.cxf.tools.wadlto.WADLToJava.run(WADLToJava.java:57)
	at org.apache.cxf.maven_plugin.wadlto.AbstractCodeGeneratorMojo.callCodeGenerator(AbstractCodeGeneratorMojo.java:455)
	... 22 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.helpers.DOMUtils.getChildrenWithName(DOMUtils.java:341)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResponseType(SourceGenerator.java:598)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResourceMethod(SourceGenerator.java:505)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeMethods(SourceGenerator.java:416)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResourceClass(SourceGenerator.java:331)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.generateResourceClasses(SourceGenerator.java:208)
	at org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.generateSource(SourceGenerator.java:173)
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.processWadl(JAXRSContainer.java:128)
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:58)
	at org.apache.cxf.tools.wadlto.jaxrs.JAXRSContainer.execute(JAXRSContainer.java:67)
	... 26 more",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3593,,,2011-08-23 14:30:51.0,,,,,,0|i0b6w7:,63229,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
when web container be redeployed WebServiceContextImpl's static atrribute ThreadLocal<MessageContext> may not be release successfully.,CXF-3758,12519828,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,qiuboboy,qiuboboy,23/Aug/11 14:03,19/Oct/11 17:30,14/Mar/19 02:29,30/Aug/11 16:05,2.4.2,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,Core,,,,0,api-change,,,,,"when I redeploy cxf application in tomcat 7,I found some log indicate that  ThreadLocal<MessageContext> object may not be release successfully，When I implements GenericServlet's destroy method as follows：
	@Override
	public void destroy() {
		WebServiceContextImpl.clear();
	}
this bug been fixed。
there may be some other resources not be destroy as above。",tomcat,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-30 16:05:41.868,,,no_permission,,Novice,,,,,,,,,,,3594,,,Tue Aug 30 16:05:41 UTC 2011,,,,,,0|i0b7d3:,63305,,,,,,,,"30/Aug/11 16:05;dkulp;
I couldn't reproduce this at all.  The patch should also not be necessary as where ever we set the threadlocal, we have a clear call in a finally block to make sure the local is kept clear.   I did find one location where, in the finally, there was other code preceding it that, if it errors, could leave the thread local set.   I've gone ahead and fixed that.",,,,,,,,,,,,,,,,,,,,,,,,,,
wadl2java ignores multiple inline XML schemas,CXF-3756,12519822,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,metatech,metatech,23/Aug/11 13:08,21/Sep/11 11:52,14/Mar/19 02:29,26/Aug/11 12:09,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,JAX-RS,,,,0,,,,,,"When generating classes from a WADL, if multiple inline XML schemas are present in the file, they are ignored, only the last one is taken into account.
This seems to happen because multiple schemas have the same SystemID, which are later parsed by the com.sun.tools.xjc.api.SchemaCompiler.parseSchema(String systemId, Element element) method, which documents that the SystemID should be made unique.
I followed this advice and added the targetNamespace to the SystemID, and now classes for all schemas are generated.
In method SourceGenerator.getSchemaElements(...)
======
for (Element schemaEl : schemasEls) {
    String targetNS = schemaEl.getAttribute(""targetNamespace"");
    schemas.add(createSchemaInfo(schemaEl, app.getWadlPath() + ""#"" + targetNS));
}
Could you please apply this contribution if you think it makes sense.",,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-26 12:09:35.365,,,no_permission,,Moderate,,,,,,,,,,,3596,,,Wed Sep 21 11:52:08 UTC 2011,,,,,,0|i0b6u7:,63220,,,,,,,,"26/Aug/11 12:09;sergey_beryozkin;I updated a code to append ""#grammar1"", ""#grammar2"", etc -
that will make it easier to refer to inlined schemas from jaxb binding files
thanks ","26/Aug/11 20:42;gmazza;Unsure if I'm mixing apples and oranges here, but I wonder if it would be better to use the same naming standard already done by CXF's JAX-WS implementation (types1, types2, etc.) See: http://www.jroller.com/gmazza/entry/customizing_jaxb_artifacts#BindingFile.  Not that big a deal, just mentioning it.","26/Aug/11 21:43;sergey_beryozkin;Hi Glen, yes I was thinking about ""#types"", but assumed that convention came from the fact that in WSDL a 'types' container tag is used to group
schemas, in WADL - it's a grammar tag, so for the moment I'd like to name it as ""#grammars"" - just to align it with WADL's application:grammar.
We can easily switch it to #types

thanks",26/Aug/11 22:01;gmazza;Oh.  I like #grammar then.,21/Sep/11 11:52;metatech;Thanks.,,,,,,,,,,,,,,,,,,,,,,
setting wsa:addressing feature in cxf:bus causes wrong action header to be sent when using Dispatch API,CXF-3755,12519735,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jpangburn,jpangburn,22/Aug/11 21:05,06/Sep/11 20:50,14/Mar/19 02:29,23/Aug/11 23:01,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-WS Runtime,,,,0,dispatch,jaxws,ws-addressing,,,"I configured ws addressing on the cxf bus like this, instead of adding the feature directly to the dispatch client:
<cxf:bus>
	<cxf:features>
		<wsa:addressing/>
	</cxf:features>
</cxf:bus>

However using both SOAP 1.1 and 1.2 Dispatch API clients, I found that it sets the wrong Action header by just using a default rather than the one from the WSDL.  I'm not certain which code is responsible for this but I see in the DispatchImpl.java the following code:
boolean wsaEnabled = false;
for (AbstractFeature feature : ((JaxWsClientEndpointImpl)client.getEndpoint()).getFeatures()) {
  if (feature instanceof WSAddressingFeature) {
    wsaEnabled = true; 
  }
}

This only looks for the features on the endpoint to determine if it should do ws addressing, not the features on the bus too.  So the DispatchImpl doesn't set this stuff up.  Further investigation shows that if the wsAddressing feature is added via jaxws:client spring configuration, the action header is wrong here too.",,14400,14400,,0%,14400,14400,,,,,,,,,,22/Aug/11 23:38;jpangburn;patch3754_partial_and3755.txt;https://issues.apache.org/jira/secure/attachment/12491290/patch3754_partial_and3755.txt,23/Aug/11 18:40;jpangburn;patch3754and3755.txt;https://issues.apache.org/jira/secure/attachment/12491377/patch3754and3755.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,3597,,,Tue Sep 06 20:50:10 UTC 2011,,,,,,0|i0b75j:,63271,,,,,,,,22/Aug/11 23:38;jpangburn;The attached patch file fixes this bug (3755) and also includes the patch for 3754 because 3754 required a change to the same file which I cannot commit separately.,"23/Aug/11 18:40;jpangburn;The attached patch file fixes this bug (3755) and also includes the full patch for 3754 because 3754 required a change to the same file which I cannot commit separately.
Previously attached patch file only had the partial fix for 3754.","06/Sep/11 20:50;jpangburn;Verified by downloading latest version of affected file(s) from SVN on the 2.4.x fixes branch, building CXF 2.4.2 with the fixed file(s) and testing this defect",,,,,,,,,,,,,,,,,,,,,,,,
Dispatch API's ServiceImpl class fails to copy address/properties/bus/handlers from jaxws:client spring configuration,CXF-3754,12519717,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jpangburn,jpangburn,22/Aug/11 18:31,06/Sep/11 20:49,14/Mar/19 02:29,23/Aug/11 23:01,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-WS Runtime,,,,0,dispatch,jaxws,,,,"When using the Dispatch API to create a dispatch object, the ServiceImpl class helps create the Dispatch object and copies in a number of objects from the jaxws:client spring configuration (if present and properly configured). However, it fails to copy the following:
address, properties, bus, handlers

These overrides can be required in some deployments to make things work right.  The workaround is to use the default bus and set those things there but this limits the amount of services that can be configured in one instance when those services need to have different bus settings.",,10800,10800,,0%,10800,10800,,,,,,,,,,23/Aug/11 18:39;jpangburn;patch3754.txt;https://issues.apache.org/jira/secure/attachment/12491376/patch3754.txt,22/Aug/11 18:35;jpangburn;patch3754_partial.txt;https://issues.apache.org/jira/secure/attachment/12491243/patch3754_partial.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,3598,,,Tue Sep 06 20:49:53 UTC 2011,,,,,,0|i0b753:,63269,,,,,,,,22/Aug/11 18:35;jpangburn;This patch addresses all issues in this bug report except for the handlers.  I looked around but couldn't see how to construct a handler chain from the config to call dispatch.getBinding().setHandlerChain(..) with.,23/Aug/11 18:39;jpangburn;This patch is the same as the first one except it adds the handler chain support so it completely resolves this issue.,"06/Sep/11 20:49;jpangburn;Verified by downloading latest version of affected file(s) from SVN on the 2.4.x fixes branch, building CXF 2.4.2 with the fixed file(s) and testing this defect",,,,,,,,,,,,,,,,,,,,,,,,
"Sometimes, CXF servlet will blocked until bussiness logical finished for one-way operation",CXF-3750,12519374,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,ext2xhb,ext2xhb,19/Aug/11 05:26,19/Oct/11 17:30,14/Mar/19 02:29,19/Aug/11 17:41,,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,,,,,0,,,,,,"sometime,the servlet handle(JettyHTTPHandler) at server side doesn't return back to servlet engine(Jetty) immediately, it will waiting until the asynchrouse business logical finished; 
","CXF2.3.3 windows xp, jdk1.5_22 or jdk1.6_17",,,,,,,,,,,,,,,,22/Aug/11 05:09;ext2xhb;oneway-deadlock-temporary-file.zip;https://issues.apache.org/jira/secure/attachment/12491177/oneway-deadlock-temporary-file.zip,19/Aug/11 05:32;ext2xhb;oneway-deadlock.zip;https://issues.apache.org/jira/secure/attachment/12490923/oneway-deadlock.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3602,,,Mon Aug 22 05:09:04 UTC 2011,,,,,,0|i0b6o7:,63193,,,,,,,,"19/Aug/11 05:32;ext2xhb;ProductClient.java: it contains a comment indicate how to change source code of CXF to show the execution sequence caused dead lock;

ProductClient.java: client
ProductService.java: service;
TestSyn.java : a simple program simulate the dead lock execution sequence, but it's never dead locked;","19/Aug/11 05:33;ext2xhb;if the execute sequence  as following, every thing is ok.  there is no dead lock;
    chain.wait enter
    chian.notify invoked
    chain.wait return;
    chain.resume(); //resume also synchronzed on chain object;

if the execute sequence as following , dead lock will occurs:
    chain.wait enter
    chain.notify 
    chain.resume// ..now waiting on chain will blocked until chain.resume finished(release sync on chain)
    chain.wait return;
 
following dump on console indicate the above sequence:

No DeadLock dump :
--wait begin
--notify all
--wait end
--api chain resume
product service begin Fri Aug 19 12:10:28 CST 2011 //a lone time(10 seconds) one way business logical begin
product service end Fri Aug 19 12:10:38 CST 2011    .//a lone time(10 seconds) one way business logical end;


DeadLock Dump:
--wait begin
--notify all
--api chain resume
product service begin Fri Aug 19 12:10:40 CST 2011
product service end Fri Aug 19 12:10:50 CST 2011
--wait end

Until now I am not sure if  problem is CXF's or JDK's, or something which I don't  know cause such a deadlock;
I also wrote a simple program to simulate the execute sequnce  which causeddead lock in CXF, but the simple program never dead lock;
","22/Aug/11 05:00;ext2xhb;the patch may cause a problem: when the user's business logic reached a runtime exception in the one-way operation, a  temporary file of big attachment will be left on the disk;

The reason details is: 
1) one way interceptor will cache the input stream to avoid underly transport discard data (patch of CXF-3750 did), this may create a temporary file in disk when the request contains a big attachment;

2) if user's business logical has no exception, so when ServieInvokeInterceptor finished, the OutgoingChainInterceptor will release input stream then temporary file will be released;
OutgoingChainInterceptor.handleMessage(){
    if (null != bin && null != bin.getOperationInfo() && bin.getOperationInfo().isOneWay()) {
            closeInput(message); //here , the temporary file will be released
            return;
        }
}

3) if user's business logical reached a runtime exception (unhandled) , ServieInvokeInterceptor  return ABORT, so OutgoingChainInterceptor  will not executed continously, then the temporary file will not be released

","22/Aug/11 05:09;ext2xhb;oneway-deadlock-temporary-file.zip is a test case show this problem;

1) ProductService.java : service which receive a request which contains a big attachment;
and service's business logical will consume and close the attachment's input stream, then raise a runtime exception
2) ProductClient.java: client;

once the service is invoked, a temporary file will left in the ""./attservice"" directory;
That to say: now the user must make sure  there is no any exception(even runtime exception) occurs in the one-way business logical. Otherwise a temporary file may left in the disk;
But I am not sure if this problem should be take care of by CXF or the end user;


Some source code of patch relate to the problem is:

OneWayProcessorInterceptor.handleMessage(){
....
DelegatingInputStream in = message.getContent(DelegatingInputStream.class);
.....
}

",,,,,,,,,,,,,,,,,,,,,,,
Using Dispatch API with Source type fails to set WS-Addressing action header properly in MESSAGE mode with SOAP 1.2,CXF-3749,12519334,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jpangburn,jpangburn,18/Aug/11 19:21,06/Sep/11 20:49,14/Mar/19 02:29,19/Aug/11 02:08,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-WS Runtime,,,,0,dispatch,jaxws,soap12,,,"Prior tests with PAYLOAD mode were successful with SOAP 1.2, but a quick test on MESSAGE mode with a StaxSource revealed that the WS-Addressing action header is not properly set in SOAP 1.2.  In one of the DispatchImpl.java's getPayloadElementName methods, there is the following code with a SOAP 1.1 namespace hardcoded:
            if (this.mode == Service.Mode.MESSAGE) {
                StaxUtils.skipToStartOfElement(reader);
                StaxUtils.toNextTag(reader,
                                    new QName(""http://schemas.xmlsoap.org/soap/envelope/"", ""Body""));
                reader.nextTag();
                return reader.getName().toString();
            }

To work with SOAP 1.1 or SOAP 1.2, it should be changed to:
            if (this.mode == Service.Mode.MESSAGE) {
                StaxUtils.skipToStartOfElement(reader);
                StaxUtils.toNextTag(reader,
                                    new QName(ele.getNamespaceURI(), ""Body""));
                reader.nextTag();
                return reader.getName().toString();
            }

I've tested this fix with a Source type in MESSAGE mode and it works with SOAP 1.1 and 1.2.",,,,,,,,,,,,,,,,,18/Aug/11 19:23;jpangburn;patch3747and3748and3749.txt;https://issues.apache.org/jira/secure/attachment/12490839/patch3747and3748and3749.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-08-19 02:08:09.077,,,no_permission,,Novice,,,,,,,,,,,3603,,,Tue Sep 06 20:49:32 UTC 2011,,,,,,0|i0b767:,63274,,,,,,,,"18/Aug/11 19:23;jpangburn;Since I've patched two other defects on this same file in the same revision, this patch fixes those defects as well as this one.","19/Aug/11 02:08;dkulp;
Patch applied, but I had to fix some checkstyle issues and I also used our DOMUtils.getFirstElement to get the first element.

Major thanks for the patch though!",06/Sep/11 20:49;jpangburn;Verified by downloading latest version of affected file(s) from SVN on the 2.4.x fixes branch and checked code contains the fix,,,,,,,,,,,,,,,,,,,,,,,,
Using Dispatch API with SOAPMessage type fails to set WS-Addressing action header properly if there's whitespace after the soap:body,CXF-3748,12519213,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jpangburn,jpangburn,18/Aug/11 00:02,06/Sep/11 20:49,14/Mar/19 02:29,19/Aug/11 02:08,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-WS Runtime,,,,0,dispatch,soapmessage,ws-addressing,,,"if you use a SOAPMessage instead of a Source then the following function fails (ignoring the exception) and your ws-addressing action doesn't get set- if you have any whitespace after the soap:body element before your first payload element:
    private String getPayloadElementName(SOAPMessage soapMessage) {
        try {            
            SOAPElement element  = (SOAPElement)soapMessage.getSOAPBody().getChildElements().next();
            return new QName(element.getNamespaceURI(), element.getLocalName()).toString();
        } catch (Exception e) {
            //ignore
        }
        return null;
        
    }

This fails because the .next() call at the end gets a text node instead of an element object so the cast fails.  So inexplicably your ws-addressing action header doesn't get set as far as the user sees.",,7200,7200,,0%,7200,7200,,,,,,,,,,18/Aug/11 03:37;jpangburn;patch3747and3748.txt;https://issues.apache.org/jira/secure/attachment/12490740/patch3747and3748.txt,18/Aug/11 03:37;jpangburn;patch3748.txt;https://issues.apache.org/jira/secure/attachment/12490739/patch3748.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,3604,,,Tue Sep 06 20:49:01 UTC 2011,,,,,,0|i0b7cf:,63302,,,,,,,,18/Aug/11 03:37;jpangburn;Two patches are attached.  patch3748.txt fixes just this bug. patch3747and3748.txt fixes this bug and 3747 together since they're both in the same file and I am editing on the same revision.,06/Sep/11 20:49;jpangburn;Verified by downloading latest version of affected file(s) from SVN on the 2.4.x fixes branch and checking the code contains the fix,,,,,,,,,,,,,,,,,,,,,,,,,
Dispatch client fails to set WS-Addressing Action header when WSDL's soap:operation does not have a style attribute,CXF-3747,12519210,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jpangburn,jpangburn,17/Aug/11 23:46,06/Sep/11 20:47,14/Mar/19 02:29,19/Aug/11 02:08,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-WS Runtime,,,,0,dispatch,ws-addressing,,,,"I found the cause of the problem to be a bug in this method in CXF (I have version 2.4.1):
    private Map<String, QName> createPayloadEleOpNameMap(BindingInfo bindingInfo) {
        Map<String, QName> payloadElementMap = new java.util.HashMap<String, QName>();
        for (BindingOperationInfo bop : bindingInfo.getOperations()) {
            SoapOperationInfo soi = (SoapOperationInfo)bop.getExtensor(SoapOperationInfo.class);
            if (soi != null) {
                if (""document"".equals(soi.getStyle())) {
                    // if doc
                    if (bop.getOperationInfo().getInput() != null
                        && !bop.getOperationInfo().getInput().getMessageParts().isEmpty()) {
                        QName qn = bop.getOperationInfo().getInput().getMessagePartByIndex(0)
                            .getElementQName();
                        payloadElementMap.put(qn.toString(), bop.getOperationInfo().getName());
                    }
                } else if (""rpc"".equals(soi.getStyle())) {
                    // if rpc
                    payloadElementMap.put(bop.getOperationInfo().getName().toString(), bop.getOperationInfo()
                        .getName());
                }
            }
        }
        return payloadElementMap;
    }

The problem is that it requires the SoapOperationInfo to have a style attribute, but in the W3C spec for WSDL it says the style attribute on the soap operation is optional, specifically 'If the attribute is not specified, it defaults to the value specified in the soap:binding element. If the soap:binding element does not specify a style, it is assumed to be ""document"".'  So the code needs to check if the soi has a style and if not read it from the binding and if not then set it as ""document"". This is not a problem in the WSDLs generated by CXF (as I found out with a HelloWorld test) because it creates these optional style attributes, but since W3C says people can generate WSDLs without these (and I ran into one) I think it's worth fixing.
",,7200,7200,,0%,7200,7200,,,,,,,,,,18/Aug/11 03:38;jpangburn;patch3747.txt;https://issues.apache.org/jira/secure/attachment/12490742/patch3747.txt,18/Aug/11 03:38;jpangburn;patch3747and3748.txt;https://issues.apache.org/jira/secure/attachment/12490743/patch3747and3748.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,3605,,,Tue Sep 06 20:47:39 UTC 2011,,,,,,0|i0b6uv:,63223,,,,,,,,18/Aug/11 03:38;jpangburn;Two patches are attached.  patch3747.txt fixes just this bug. patch3747and3748.txt fixes this bug and 3748 together since they're both in the same file and I am editing on the same revision.,"06/Sep/11 20:47;jpangburn;Verified by downloading latest version of affected file(s) from SVN on the 2.4.x fixes branch, building CXF 2.4.2 with the fixed file(s) and testing this defect",,,,,,,,,,,,,,,,,,,,,,,,,
LoggingOutInterceptor shows wrong or no payload if StaxTransformFeature is active,CXF-3744,12518962,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,akuhtz,akuhtz,16/Aug/11 07:36,19/Oct/11 17:30,14/Mar/19 02:29,17/Aug/11 08:22,2.4.2,,,,,,,,,,,,,,,,,2.4.3,2.5,,,,,,,0,,,,,,"If the transform feature is configured the SoapMessage is not logged correct. In case of a SoapFault no payload is logged. If a valid response is logged only the content of the SoapBody is logged but not the whole Envelope.

The corresponding thread in the mailing list: http://cxf.547215.n5.nabble.com/LoggingOutInterceptor-shows-wrong-or-no-payload-if-StaxTransformFeature-is-active-td4678061.html",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-16 09:07:23.955,,,no_permission,,Unknown,,,,,,,,,,,3608,,,Wed Aug 17 08:22:59 UTC 2011,,,,,,0|i0b71j:,63253,,,,,,,,"16/Aug/11 09:07;ay;added the fault checking (i.e., getContent(Exception.class)) to skip the transformation if the fault was already raised.
","16/Aug/11 11:04;akuhtz;One problem still exists. 
If the transformFeature is enabled (applicationContext.xml: line 67) and the Test transformedCallTest is executed, the following output is traced (note the payload! ... and the missing Encoding):

{code}
12:55:25.030 INFO  [qtp19725666-15][org.apache.cxf.interceptor.LoggingOutInterceptor] - Outbound Message
---------------------------
ID: 2
Content-Type: text/xml
Headers: {}
Payload: <TransformTestResponse xmlns=""http://cxf.apache.org/transform/test"" xmlns:ns2=""http://cxf.apache.org/transform/header"" xmlns:ns3=""http://cxf.apache.org/transform/header/element"" xmlns:ns4=""http://cxf.apache.org/transform/fault""><Status>LOOPBACK</Status></TransformTestResponse>
--------------------------------------
{code}

whereas the following is logged if the feature is disabled:

{code}
13:01:32.381 INFO  [qtp19725666-14][org.apache.cxf.interceptor.LoggingOutInterceptor] - Outbound Message
---------------------------
ID: 2
Encoding: UTF-8
Content-Type: text/xml
Headers: {}
Payload: <?xml version='1.0' encoding='UTF-8'?><soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Header><ns2:SoapHeaderOut xmlns:ns4=""http://cxf.apache.org/transform/fault"" xmlns:ns3=""http://cxf.apache.org/transform/header/element"" xmlns:ns2=""http://cxf.apache.org/transform/header"" xmlns=""http://cxf.apache.org/transform/test""><ns2:OperationalMode>SIMULATION1</ns2:OperationalMode><ns2:SomeCorrelationId>test-123</ns2:SomeCorrelationId></ns2:SoapHeaderOut></soap:Header><soap:Body><TransformTestResponse xmlns:ns4=""http://cxf.apache.org/transform/fault"" xmlns:ns3=""http://cxf.apache.org/transform/header/element"" xmlns:ns2=""http://cxf.apache.org/transform/header"" xmlns=""http://cxf.apache.org/transform/test""><Status>LOOPBACK</Status></TransformTestResponse></soap:Body></soap:Envelope>
--------------------------------------
{code}

Unfortunately I don't know how to track this in a unit testcase.",17/Aug/11 08:22;ay;fixed the position of the TransformOutInterceptor.,,,,,,,,,,,,,,,,,,,,,,,,
Too many startServer() and clientDestroyed() got invoked when spring created and java code created client/server mixed used.,CXF-3742,12518855,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,xldai,xldai,15/Aug/11 06:13,19/Oct/11 17:30,14/Mar/19 02:29,01/Sep/11 19:46,2.5,,,,,,,,,,,,,,,,,2.4.3,,,,JAX-WS Runtime,,,,0,CXF,,,,,"From the testcase, there are 2 servers(one is spring created,the other is code created) and 2 clients(one is sprint created,the other is code created), when install/uninstall this bundle to osgi container, startServer() got invoked 3 times and clientDestroyed() got invoked 4 times!","Windows 7, JDK1.6",,,,,,,,,,,,,,,,15/Aug/11 06:15;xldai;testlifecycle_bundle.zip;https://issues.apache.org/jira/secure/attachment/12490404/testlifecycle_bundle.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3610,,,Mon Aug 15 06:16:12 UTC 2011,,,,,,0|i0b6wn:,63231,,,,,,,,"15/Aug/11 06:16;xldai;karaf@tesb> install -s file:///D:/testlifecycle_bundle/target/testlifecycle_bundle-1.0-SNAPSHOT.jar
Bundle ID: 167
karaf@tesb> Client created!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Client created!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Java Code client created!!!!!!!!!!!!!!!!!!!!!!!!!!!
Service start!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Service start!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Java Code server created/start!!!!!!!!!!!!!!!!!!!!!!!!!!!
Service start!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

karaf@tesb> Client destroyed!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Client destroyed!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Client destroyed!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

karaf@tesb> uninstall 167
Service stop!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Service stop!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Client destroyed!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
karaf@tesb>",,,,,,,,,,,,,,,,,,,,,,,,,,
CXF WSA handler have to throw WebServiceException on client side if addressing is required but not found in the message,CXF-3740,12518791,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,opalka,opalka,13/Aug/11 19:16,19/Oct/11 17:30,14/Mar/19 02:29,19/Aug/11 06:51,2.3.6,2.4.2,,,,,,,,,,,,,,,,2.4.3,2.5,,,WS-* Components,,,,0,,,,,,,,,,,,,,,,,,,,,,,16/Aug/11 09:42;opalka;CXF-3740.patch;https://issues.apache.org/jira/secure/attachment/12490516/CXF-3740.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-08-19 06:51:32.801,,,no_permission,,Unknown,,,,,,,,,,,3612,,,Fri Aug 19 06:51:32 UTC 2011,,,,,,0|i0b6kv:,63178,,,,,,,,19/Aug/11 06:51;ema;Patch is applied. Thanks Richard!,,,,,,,,,,,,,,,,,,,,,,,,,,
TLSParameterJaxBUtils is unable to use keystores with empty file/url/resource.,CXF-3729,12518487,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,szhemzhitsky,szhemzhitsky,10/Aug/11 17:39,19/Aug/11 03:30,14/Mar/19 02:29,10/Aug/11 19:59,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Transports,,,,0,,,,,,"I have a vendor specific keystore type. As a rule such a keystore is located on an external device.
With current implementation of TLSParameterJaxBUtils only PKCS11 keystores do not expect file/url/resource to be specified.
So it's not possible to use keystores with empty file/url/resource.",,,,,,,,,,,,,,,,,10/Aug/11 17:40;szhemzhitsky;device_keystore.patch;https://issues.apache.org/jira/secure/attachment/12490014/device_keystore.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,3623,,,Wed Aug 10 17:43:57 UTC 2011,,,,,,0|i0b7br:,63299,,,,,,,,10/Aug/11 17:43;szhemzhitsky;Is it possible to configure http conduit with a vendor specific keystore type until the patch is applied? Is there any workaround?,,,,,,,,,,,,,,,,,,,,,,,,,,
depends-on attribute not working on factory based beans,CXF-3727,12518458,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,10/Aug/11 14:45,19/Aug/11 03:29,14/Mar/19 02:29,10/Aug/11 15:18,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,,,,,0,,,,,,The depends-on attribute is not working for factory bean based spring elements.  (like jaxws:client),,,,,,,,,,,,,CXF-3723,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,5736,,,2011-08-10 14:45:37.0,,,,,,0|i0b77z:,63282,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
clientCreated() of ClientLifeCycleListener can't be invoked on Spring created clients,CXF-3723,12518304,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,xldai,xldai,09/Aug/11 10:24,19/Aug/11 03:30,14/Mar/19 02:29,10/Aug/11 15:20,2.5,,,,,,,,,,,,,,,,,2.4.2,,,,JAX-WS Runtime,,,,0,ClientLifeCycleListener,,,,,"when create client with spring bean like this: 

	<jaxws:client id=""test_client"" 
        address=""http://localhost:8080/testlifecycle/services/GreeterService""
		serviceClass=""org.talend.esb.examples.sam.lifecycle.Greeter"">
	</jaxws:client>

clientCreated() of ClientLifeCycleListener can't be invoked; 

if using java codes: 

JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();
factory.setServiceClass(org.talend.esb.examples.sam.lifecycle.Greeter.class);
factory.setAddress(""http://localhost:8080/testlifecycle/services/GreeterService"");
client = (Greeter)factory.create();
...

clientCreated() of ClientLifeCycleListener has been invokded successful!
",,,,,,,,,,,,,,,,,10/Aug/11 02:18;xldai;testlifecycle.zip;https://issues.apache.org/jira/secure/attachment/12489930/testlifecycle.zip,10/Aug/11 10:06;xldai;testlifecycle_bundle.zip;https://issues.apache.org/jira/secure/attachment/12489961/testlifecycle_bundle.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-08-09 16:22:25.609,,,no_permission,,Unknown,,,,,,,,,,,46724,,,Fri Aug 12 08:33:56 UTC 2011,,,,,,0|i1agdz:,269121,,,,,,,,"09/Aug/11 16:22;dkulp;Can you create a testcase?

I just tested and it does look like the clientCreated is being called correctly when the bean is created.   Keep in mind, the jaxws:clients are lazy-init=true and thus are not created up front.   They would be created when the bean is looked up from the context.   That is when the clientCreated would be called.",10/Aug/11 02:18;xldai;Please find attached testlifecycle.zip.,"10/Aug/11 02:28;xldai;if any Bean which has a ref property to jaxws:client, then clientCreated() works well;
if you comment: 
	<bean id=""greeterTest"" class=""org.talend.runtime.testlifecycle.GreeterTest"">
	    <property name=""greeter"" ref=""test_client""/>
	</bean>	

then clientCreated() will not be got invoked.
For a war application which deployed into Tomcat, we can add this wrapped bean in the beans.xml; but for a OSGI application, like this:
<jaxws:client id=""CRMServiceClient"">
...
</jaxws:client>
<osgi:service ref=""CRMServiceClient"" interface=""org.talend.services.crmservice.CRMService""/>

jaxws:client will be init as a osgi service, then if added a wrapped bean:
	<bean id=""crmTest"" class=""....GreeterTest"">
	    <property name=""crmClient"" ref=""CRMServiceClient""/>
	</bean>	
the clientCreated() will not be got invoked.","10/Aug/11 02:34;dkulp;If I build the war and deploy into tomcat, I see:

{code}

INFO: Creating Service {http://talend.org/esb/examples/}GreeterService from class org.talend.runtime.testlifecycle.Greeter
Client created!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
{code}

so it looks like it's working.","10/Aug/11 02:39;dkulp;In the first case, that's completely correct.   If you commend that out, there is no need to create the client bean so Spring won't.   Thus, you won't see it.

Not sure on the second OSGi case.  It may be the same.   The client itself may not be created until something looks up the service from the registry or possibly when the service is first used.

","10/Aug/11 08:55;xldai;From my testing result, the clientCreated() still can't be invoked even the service has been used. but the osgi:service works well. strange .... Maybe none of the ClientImpl constructor has been invoked. is this a OSGI/Karaf or Spring DM issue? ",10/Aug/11 10:06;xldai;testlifecycle_bundle.zip attached for testing with osgi container.,"10/Aug/11 15:20;dkulp;
With the fix to CXF-3728, this is now working if you move your listener beans to be actual spring beans.  There seems to be a bug in osgi:service that it's ignoring the depends-on stuff so it's generally creating the client before the listeners are created.","12/Aug/11 08:33;xldai;From testing with these fix, clientCreated() get invoked on sprint created clients. Thanks!

but on the other side, now startServer() of ServerLifeCycleListener and clientCreated() of ClientLifeCycleListener will still not get invoked on jave code created clients which using JaxWsProxyFactoryBean.

In our application, spring based clients and code based clients both be used. and from testing result, we have to select one either using spring listener bean or using xxx.registerListener() code, if both have been used, then clientCreated() or startServer() will get invoded twice!
",,,,,,,,,,,,,,,,,,
SOAP over JMS miss SOAPJMS_soapAction property when use soap12,CXF-3720,12518266,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,jflo1234,jflo1234,09/Aug/11 00:54,19/Oct/11 17:30,14/Mar/19 02:29,25/Aug/11 11:43,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,Soap Binding,,,,0,,,,,,"I have created a service consumer using the CXF JMSConfigFeature. I notice the SOAP action in the generated request message is included in the JMS custom property SOAPJMS_contentType. For example,   

Properties={
    ""SOAPJMS_isFault""={boolean:false}
    ""SOAPJMS_contentType""={string:'application/soap+xml; action=""sayHello""; charset=UTF-8'} 
    ""SOAPJMS_bindingVersion""={string:'1.0'}} 

Is there any reason why the header property 'SOAPJMS_soapAction' is not included in the CXF SOAP/JMS implementation? ",Windows Server 2008 R2,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-25 05:17:02.303,,,no_permission,,Unknown,,,,,,,,,,,5731,,,Thu Aug 25 11:43:00 UTC 2011,,,,,,0|i0b6yf:,63239,,,,,,,,"25/Aug/11 05:17;ffang;Hi,

Per Soap over jms spec, if using soap1.2 the SOAPJMS_contentType would have an ""action"" parameter which should be same as the soapAction, so SOAPJMS_contentType""={string:'application/soap+xml; action=""sayHello""; charset=UTF-8'}  here is correct.

However, current implementation miss SOAPJMS_soapAction properties which need be fixed.

Freeman","25/Aug/11 05:18;ffang;change the issue summary to make it more accurate.
","25/Aug/11 06:54;njiang;According to SOAP/JMS specification, the SOAPJMS_soapAction header is optional.
And if using SOAP 1.2 binding, we need to check this property matches the one within the content-type.
{code}
[Definition: If using SOAP 1.2, and the contentType property has an action parameter, that parameter value is compared with the SOAPJMS_soapAction value. A fault MUST be generated with fault subcode mismatchedSoapAction if the SOAP 1.2 action does not match the SOAPJMS_soapAction value.†]
{code}","25/Aug/11 07:08;ffang;Yeah, actually we have SOAPJMS_soapAction property correctly when use soap11, but only miss it when use soap12.
And currently implementation doesn't throw missingSoapAction fault(though this is an optional fault), I'll add it also.
Freeman","25/Aug/11 10:22;ffang;Per the spec
[Definition: If using SOAP 1.2, and the contentType property has an action parameter, that parameter value is compared with the SOAPJMS_soapAction value. A fault MUST be generated with fault subcode mismatchedSoapAction if the SOAP 1.2 action does not match the SOAPJMS_soapAction value.

But current implementation miss SOAPJMS_soapAction when use SOAP1.2(it has SOAPJMS_soapAction when use SOAP1.1 on the contrary), so can't compare the soapAction with the action in contentType at all, IMO this is a bug, so will change issue TYPE accordingly.

Freeman","25/Aug/11 11:43;ffang;commit fix
http://svn.apache.org/viewvc?rev=1161458&view=rev for trunk
http://svn.apache.org/viewvc?rev=1161508&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1161517&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,
"AbstractClient.java split Cookie ""BC=0; expires=Fri,  05-Aug-2011 22:04:41 GMT; path=/; domain=.jolira.com"" into two cookies ""BC=0; expires=Fri,"" and ""05-Aug-2011 22:04:41 GMT; path=/; domain=.jolira.com""",CXF-3715,12518083,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jolira,jolira,05/Aug/11 21:34,19/Oct/11 17:30,14/Mar/19 02:29,09/Sep/11 12:42,2.2.12,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAX-RS,,,,0,,,,,,AbstactClient.java line 347 to 355 does not make sense for us. Perfectly good cookies are split into two parts for no reason.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-07 20:09:17.424,,,no_permission,,Unknown,,,,,,,,,,,46729,,,Sun Aug 07 20:09:17 UTC 2011,,,,,,0|i0denj:,76303,,,,,,,,"07/Aug/11 20:09;sergey_beryozkin;I'm not sure we can fix it for 2.2.x given that 2.2.x line has been dropped and not supported.
I believe it has been fixed for 2.3.x, 2.4.x.
Can you afford moving to 2.3.5 for example ?

If not then a workaround is required, example, registering CXF in interceptor which would preprocess cookies containing commas 
",,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect URL handling in org.apache.cxf.transport.servlet.BaseUrlHelper method getBaseURL,CXF-3709,12517926,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,sergey_beryozkin,k.salikhov,k.salikhov,04/Aug/11 13:50,19/Aug/11 03:30,14/Mar/19 02:29,05/Aug/11 09:39,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Transports,,,,0,,,,,,"I've found a piece of incorrect code in org.apache.cxf.transport.servlet.BaseUrlHelper method getBaseURL()
There's such a code at line 41: ""index = reqPrefix.indexOf(basePath);""
This code handles URL badly when host name starts with application context name.

Example:
URL ""http://arm.mycompany.com:8998/arm/arm"" will produce return value of ""http://arm"" instead of ""http://arm.mycompany.com:8998/arm""",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,5752,,,2011-08-04 13:50:06.0,,,,,,0|i0b787:,63283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A validated and transformed SAML Token is not cached in the STSTokenValidator,CXF-3708,12517905,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,04/Aug/11 09:56,19/Aug/11 03:30,14/Mar/19 02:29,04/Aug/11 10:04,2.4.1,,,,,,,,,,,,,,,,,2.4.2,,,,,,,,0,,,,,,"
CXF-3568 added the ability to cache returned tokens in the STSTokenValidator. There is a bug for the case that a SAML Token is received and then transformed. The returned token will not be cached. ",,,,,,,,,,,,,CXF-3568,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,5748,,,2011-08-04 09:56:01.0,,,,,,0|i0b78v:,63286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF can not generate right schema information if a empty schema-location is passed into the ServerFactoryBean,CXF-3707,12517897,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,04/Aug/11 08:20,19/Aug/11 03:30,14/Mar/19 02:29,04/Aug/11 08:48,2.3.4,2.3.5,2.4,2.4.1,,,,,,,,,,,,,,2.3.6,2.4.2,,,JAXB Databinding,,,,0,,,,,,"If you pass the schemaLocations with an empty array into the ServerFactoryBean, the generated wsdl will have no schema definition for the type class.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,5759,,,Thu Aug 04 08:48:32 UTC 2011,,,,,,0|i0b79b:,63288,,,,,,,,"04/Aug/11 08:48;njiang;Applied patch into trunk, 2.4.x-fixes and 2.3.x-fixes branch.",,,,,,,,,,,,,,,,,,,,,,,,,,
Configured namespace map entry overwritten in AegisJSONProvider,CXF-3704,12517800,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,mrpotes,mrpotes,03/Aug/11 15:01,19/Aug/11 03:30,14/Mar/19 02:29,05/Aug/11 09:56,2.4,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Aegis Databinding,,,,0,,,,,,"I have a jaxrs service configured as follows:

{code:xml}
<util:map id=""jsonNamespaceMap"" map-class=""java.util.Hashtable"">
	<entry key=""http://acme.com/aegis/customtypes"" value=""t""/>
	<entry key=""http://acme.com/v1/activities"" value=""a""/>
	<entry key=""http://model.v1.acme.com"" value=""m""/>
</util:map>	

<jaxrs:server id=""restServer"" address=""/rest"">
	<jaxrs:serviceBeans>
		<ref bean=""bookstoreService"" />
	</jaxrs:serviceBeans>
	<jaxrs:providers>
		<bean class=""org.apache.cxf.jaxrs.provider.AegisJSONProvider"">
			<property name=""namespaceMap"" ref=""jsonNamespaceMap""/>
		</bean>
	</jaxrs:providers>
</jaxrs:server>
{code}

I then have a JSON payload for my service request:

{code:javascript}
{
  ""m.details"": {
    ""m.date"": ""2011-08-05"",
    ""m.updates"": [ 
      {
        ""a.value"": {
          ""t.string"": {
            ""t.name"": ""My String"",
            ""t.value"": ""myValue""
          }
        }
      }
    ]
  }
}
{code}

However, the object parameter to the service method is not correctly populated with the value of {{date}}, or {{updates}}, and the logs contain messages such as:

{noformat}
WARNING: xsi:type absent, and no type available for m.date
{noformat}

A bit of digging around, and it seems to me the problem is at line 142 of AegisJSONProvider (and yes, I dislike the namespace map concept as much as the person that added comments at line 140 of AegisJSONProvider!):

{code:java}
namespaceMap.put(typeToRead.getSchemaType().getNamespaceURI(), ""ns1"");
{code}

I believe that {{put}} here should be switched to {{putIfAbsent}} - what is happening is that on initialisation, the namespace map correctly contains the 3 entries as per the spring config, but when the message is processed, {{typeToRead}} is not null, and the configured namespace prefix, {{m}}is overwritten with {{ns1}}.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-05 09:56:10.495,,,no_permission,,Unknown,,,,,,,,,,,5749,,,Fri Aug 05 09:56:10 UTC 2011,,,,,,0|i0b73j:,63262,,,,,,,,05/Aug/11 09:56;sergey_beryozkin;ignoreNamespaces may be of help if no input JSON is expected,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid overriding Content-Type in WebClient for GET requests,CXF-3703,12517691,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,02/Aug/11 19:55,19/Aug/11 03:30,14/Mar/19 02:29,03/Aug/11 07:09,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,JAX-RS,,,,0,,,,,,this is causing sideeffects with services using Content-Type for the signature calculation,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5762,,,2011-08-02 19:55:07.0,,,,,,0|i0b773:,63278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the stopServer() method in ServerLifeCycleListener has been invoked twice when a service stopped,CXF-3700,12516865,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,xldai,xldai,02/Aug/11 06:14,19/Aug/11 03:30,14/Mar/19 02:29,03/Aug/11 19:10,2.4.1,2.5,,,,,,,,,,,,,,,,2.4.2,,,,Core,,,,0,ServerLifeCycleListener,,,,,"when implemented a ServerLifeCycleListener and register it to Bus, the stopServer() method in ServerLifeCycleListener will be invoked twice when stopped service.

public class ServiceListenerImpl implements ServerLifeCycleListener{
 public void stopServer(Server server) {
   ......
 }
}",,,,,,,,,,,,,,,,,03/Aug/11 05:16;xldai;testlifecycle.zip;https://issues.apache.org/jira/secure/attachment/12489160/testlifecycle.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-08-02 17:13:10.543,,,no_permission,,,,,,,,,,,,,5760,,,Wed Aug 03 19:10:46 UTC 2011,,,,,,0|i0b7bb:,63297,,,,,,,,"02/Aug/11 17:13;dkulp;
I checked our LifecycleTest and verified that in that case, the stopServer is only called once.  Thus, we'd need a testcase to see what is different in your case.
","03/Aug/11 05:16;xldai;testlifecycle project attached!
when undeployed testlifecycle.war from Tomcat, ""Service stop!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"" will be printed twice in the console.","03/Aug/11 14:34;snesteruk;I make some investigation of the problem. First time stopServer() method called from BusLifeCycleListener.preshutdown() as expected. Second time stopServer() called from spring when he tries destroy endPoint bean. EndPointImpl.stop() method is called which in turn makes the call to server.destroy() method once again.
I am not sure about the correct solution, but one of the possible way is to refactor EndointImpl to use ServerRegistry to destroy servers. Another way is that you can modify ServerImpl.stop() method:
    public void stop() {
LOG.fine(""Server is stopping."");
//set slcMgr to null after invocation
if (slcMgr != null) {
slcMgr.stopServer(this);
slcMgr = null; 
}
","03/Aug/11 19:10;dkulp;
Thanks for the analysis.

I went with a slightly simpler fix of just recording if the ServerImpl is stopped or not.  I don't want to null out anything as you should be able to stop a server and then restart it so I wanted the mgr's to be kept around.   This fix should fix the issue.
",,,,,,,,,,,,,,,,,,,,,,,
Wsdl2java generates illegal code for faults,CXF-3699,12516130,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,dna,dna,01/Aug/11 22:53,19/Aug/11 03:30,14/Mar/19 02:29,02/Aug/11 13:55,2.4.1,,,,,,,,,,,,,,,,,2.4.2,,,,Tooling,,,,0,,,,,,"when generating java code from a wsdl with the option to insert the @Generated annotation, the code starts with:

@Generated(value = ""org.apache.cxf.tools.wsdlto.WSDLToJava"", date = ""2011-08-01T15:05:39.642-07:00"", comments = ""Apache CXF 2.4.1"")
public class ... extends Exception {
@Generated(value = ""org.apache.cxf.tools.wsdlto.WSDLToJava"", date = ""2011-08-01T15:05:39.642-07:00"")

@Generated(value = ""org.apache.cxf.tools.wsdlto.WSDLToJava"", date = ""2011-08-01T15:05:39.642-07:00"")
private li.antonio.XxxServiceFault xxxServiceFault;

The bug is in tools/wsdlto/frontend/jaxws/src/main/java/org/apache/cxf/tools/wsdlto/frontend/jaxws/template/fault.vm, which starts with:
#if ($mark-generated == ""true"")
    @Generated(value = ""org.apache.cxf.tools.wsdlto.WSDLToJava"", date = ""$currentdate"", comments = ""$fullversion"")
#end
public class $expClass.Name extends $exceptionSuperclass {
#if ($mark-generated == ""true"")
    @Generated(value = ""org.apache.cxf.tools.wsdlto.WSDLToJava"", date = ""$currentdate"")
#end
#if (${suid} != """")
    public static final long serialVersionUID = ${suid}L;
#end

It should be:

#if ($mark-generated == ""true"")
    @Generated(value = ""org.apache.cxf.tools.wsdlto.WSDLToJava"", date = ""$currentdate"", comments = ""$fullversion"")
#end
public class $expClass.Name extends $exceptionSuperclass {
#if (${suid} != """")
#if ($mark-generated == ""true"")
    @Generated(value = ""org.apache.cxf.tools.wsdlto.WSDLToJava"", date = ""$currentdate"")
#end
    public static final long serialVersionUID = ${suid}L;
#end
",,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,5763,,,2011-08-01 22:53:02.0,,,,,,0|i0b70v:,63250,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the clientDestroyed() of ClientLifeCycleListener impl not be called when the service with jaxws:client undeployed,CXF-3697,12515818,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,xldai,xldai,29/Jul/11 23:33,19/Aug/11 03:30,14/Mar/19 02:29,02/Aug/11 17:11,2.4.1,2.5,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Bus,,,,0,ClientLifeCycleListener,,,,,"the clientDestroyed() of ClientLifeCycleListener impl not be called when the service with jaxws:client undeployed.
sample code:

import org.apache.cxf.endpoint.ClientLifeCycleListener;
public class ClientListenerImpl implements ClientLifeCycleListener{

  public void clientCreated(Client client) {

   System.out.println(""clientCreated!"");

  }

  public void clientDestroyed(Client client) {

   System.out.println(""clientDestroyed!"");

  }

}

ClientLifeCycleManager clcm = bus.getExtension(ClientLifeCycleManager.class);
if (null != clcm){

  ClientListenerImpl cltListener = new ClientListenerImpl();
  clcm.registerListener(cltListener);

}",,,,,,,,,,,,,,,,,01/Aug/11 07:47;xldai;patch.txt;https://issues.apache.org/jira/secure/attachment/12488374/patch.txt,01/Aug/11 02:00;xldai;testlifecycle.zip;https://issues.apache.org/jira/secure/attachment/12488368/testlifecycle.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5768,,,Mon Aug 01 07:34:51 UTC 2011,,,,,,0|i0b793:,63287,,,,,,,,"01/Aug/11 01:57;xldai;tried to add these code to ClientImpl.java: 

    @Override
    protected void finalize() throws Throwable {
        destroy();
        super.finalize();
    }

but still not work! ",01/Aug/11 02:00;xldai;testlifecycle project attached,"01/Aug/11 07:34;xldai;clientDestroyed() triggered after add finalize() to org.apache.cxf.frontend.ClientProxy class.

    @Override
    protected void finalize() throws Throwable {
        client.destroy();
        super.finalize();
    }",,,,,,,,,,,,,,,,,,,,,,,,
Race condition in BusFactory,CXF-3696,12515728,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,29/Jul/11 03:00,19/Aug/11 03:30,14/Mar/19 02:29,29/Jul/11 03:21,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Bus,,,,0,,,,,,"
There is a race condition in BusFactory that can lead to deadlocks.   If one threads calls getThreadDefaultBus(true) while another thread is calling getDefaultBus(true), it can lock up as the first thread blocks waiting to call getDefaultBus(), but the second will block calling maybeSetThreadBus.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5754,,,2011-07-29 03:00:35.0,,,,,,0|i0b7a7:,63292,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jetty startup is not threadsafe,CXF-3695,12515708,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,28/Jul/11 21:39,19/Aug/11 03:30,14/Mar/19 02:29,28/Jul/11 22:07,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Transports,,,,0,,,,,,"
If several threads try to start a service on the same port at the same time, the Jetty engine may end up creating several JettyHTTPServerEngine's for the same port, but only one will activate.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5769,,,2011-07-28 21:39:45.0,,,,,,0|i0b7af:,63293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurityTokenServiceProvider does not handle exceptions properly,CXF-3693,12515671,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,28/Jul/11 15:39,19/Aug/11 03:30,14/Mar/19 02:29,28/Jul/11 16:17,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,,,,,0,,,,,,"
The SecurityTokenServiceProvider shipped from CXF 2.4 onwards does not handle exceptions properly. There are three issues:

1) For an exception thrown in an STS implementation, the provider returns a reflection error message as the error String. This is because there is no specific check for an InvocationTargetException.
2) The exception stacktrace is returned as a Detail, which might reveal internal information to an attacker
3) There is no way to send back the WS-Trust standard error code/Strings.

Points 1 and 2 are easily fixed. Point 3 will be fixed by extending the STSException so that a FaultCode (QName) can be set. If it is set on the exception, the standard code/String will be returned, otherwise the error message of the exception will be returned.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5767,,,2011-07-28 15:39:18.0,,,,,,0|i0b72v:,63259,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF and Tibco BW : JMS transport does not copy protocol headers in the destination message,CXF-3691,12515492,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bvilletot,bvilletot,27/Jul/11 08:47,19/Oct/11 17:30,14/Mar/19 02:29,30/Aug/11 21:44,2.4,,,,,,,,,,,,,,,,,2.4.3,,,,Transports,,,,0,,,,,,"An old workaround for integrating CXF and Tibco BW was using an interceptor, for setting a property ""SoapAction"" (expected by Tibco BW and case-sensitive): https://issues.apache.org/jira/browse/CXF-2612

But it doesnt work no more with CXF 2.4. The method org.apache.cxf.transport.jms.JMSUtils.buidJMSMessageFromCXF() no more uses addProtocolHeaders(...) to build the JMS message, so the custom message properties are not transmitted....

","CXF 2.4 , Tibco BW 5.6",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5729,,,2011-07-27 08:47:45.0,,,,,,0|i0b72n:,63258,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
path_info should not be contextPath + req.getPathInfo(),CXF-3689,12515416,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,qiuboboy,qiuboboy,26/Jul/11 15:42,19/Aug/11 03:30,14/Mar/19 02:29,26/Jul/11 16:23,2.3.5,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Transports,,,,0,api-change,patch,,,,"when i extends CXFServlet to dispacth request by http header Content-Type,i found that in AbstractHTTPDestination#setupMessage
inMessage.put(Message.REQUEST_URI, req.getRequestURI());
inMessage.put(Message.PATH_INFO, contextPath + req.getPathInfo());
 
the two statements above ,the first put Message.REQUEST_URI into inMessage ,and the second put Message.PATH_INFO into inMessage,if my request url is http://localhost:8080/cxf/ws/rest1/roomservice/room/12 and 
 org.apache.cxf.request.uri=/cxf/ws/rest1/roomservice/room/12, 
 org.apache.cxf.message.Message.PATH_INFO=/cxf/rest1/roomservice/room/12
and servletPath is missing.

",,,,,,,,,,,,,,,,,26/Jul/11 15:44;qiuboboy;patch.txt;https://issues.apache.org/jira/secure/attachment/12487852/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,5774,,,2011-07-26 15:42:14.0,,,,,,0|i0b7av:,63295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not create a Holder for the headers,CXF-3684,12515274,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,pablolagreca,pablolagreca,25/Jul/11 14:47,19/Aug/11 03:30,14/Mar/19 02:29,25/Jul/11 18:27,2.3.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,,,,,0,,,,,,"When the body part name attribute and the header part name attribute have the same name in the wsdl, CXF do not create holders correctly for headers causing an IllegalArgumentException when invoking service implementation.

Attached you can found a wsdl and xsds for that wsdl.

If you change header part name attribute to something different then it will work.",,,,,,,,,,,,,,,,,25/Jul/11 14:48;pablolagreca;wsdl.zip;https://issues.apache.org/jira/secure/attachment/12487713/wsdl.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5772,,,2011-07-25 14:47:18.0,,,,,,0|i0b7fb:,63315,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transform feature can loop endless in combination with PartialXMLStreamReader,CXF-3681,12515152,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,akuhtz,akuhtz,23/Jul/11 07:11,19/Aug/11 03:29,14/Mar/19 02:29,31/Jul/11 17:53,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Core,,,,0,,,,,,"A bug in the InTransformReader can cause an endless loop in combination with PartialXMLStreamReader. The attached patch contains the fix and more tests for InTransformReader but currently none for the combination with PartialXMLStreamReader.

See also http://cxf.547215.n5.nabble.com/Problem-with-new-transform-feature-td4599185.html","WinXP, Java SDK 1.6.0_26",,,,,,,,,,,,,,,,23/Jul/11 07:13;akuhtz;cxf-3681-patch.diff;https://issues.apache.org/jira/secure/attachment/12487583/cxf-3681-patch.diff,25/Jul/11 09:27;akuhtz;cxf-3681-patch2.diff;https://issues.apache.org/jira/secure/attachment/12487678/cxf-3681-patch2.diff,25/Jul/11 10:25;akuhtz;cxf-3681-patch3.diff;https://issues.apache.org/jira/secure/attachment/12487684/cxf-3681-patch3.diff,26/Jul/11 14:44;akuhtz;cxf-3681-patch5.diff;https://issues.apache.org/jira/secure/attachment/12487841/cxf-3681-patch5.diff,26/Jul/11 14:59;akuhtz;cxf-3681-patch6.diff;https://issues.apache.org/jira/secure/attachment/12487844/cxf-3681-patch6.diff,,,5.0,,,,,,,,,,,,,,,,,,,,2011-07-25 10:37:22.673,,,no_permission,,,,,,,,,,,,,5773,,,Mon Aug 01 11:20:09 UTC 2011,,,,,,0|i0b7fr:,63317,,,,,,,,25/Jul/11 09:27;akuhtz;New unit tests that can be used to reproduce the problem. See the comment in the tests.,25/Jul/11 10:25;akuhtz;New unit test for the partial stream reader.,25/Jul/11 10:37;sergey_beryozkin;Thanks - I'm on it...,26/Jul/11 14:23;akuhtz;New unit test. The PartialXMLStreamReader does not work correct. It must return only the header part with an empty body but currently it returns the body with content. This leads to the problem that the DocLiteralInInterceptor fails.,26/Jul/11 14:43;akuhtz;Updated test. cxf-3681-patch4.diff was invalid.,"26/Jul/11 14:59;akuhtz;Added new method notGetElement to test that verifies that an element is not in the document.
The cxf-3681-patch6.diff is a replacement for cxf-3681-patch5.diff.",31/Jul/11 17:53;sergey_beryozkin;Thanks Aki for getting it resolved,"01/Aug/11 11:20;elakito@googlemail.com;Hi Sergey,
glad to see you are back.

I submitted my version with some new features we discussed. I left out
the attributes-transformation feature, as I wanted to discuss with you
about it.

InTransformReader takes the inAttributes map that allows you to
translate/drop some attributes.
However, this needs to be worked out. Currently, we can use
key=""aname1"" value=""aname2"" to change attribute name form aname1 aname2 and
key=""aname1"" value="""" to delete attribute aname1.

But this operaiton is limited for the global context and not for the
local element context (i.e., we can't refer to an attribute within a
specific element).

So we need a way to refer to an attribute within an element. But I am
not sure which syntax to use.

One approach would be to use the xpath syntax.
for example,
to change attribute aname1 within element ename to aname2,
how should we set inAttributes map?
1. key=""ename/@aname1"" value=""aname2"".
2. key=""ename/@aname1"" value=""@aname2""
3. key=""ename/@aname1"" value=""ename/@aname2""
4. others?

I think I am for 1 or 2. Option 3 can imply the potential move of the
attribute to another element, so I don't like it, as it complicates
the logic too much.

The advantage of option 2 is that we can reuse inElements map and do
not need inAttributesMap. This approach can be extended to do
transformation from an element to an attribute or from an attribute to
an element. That makes it more complicated but it's kind of cute.

For working on attributes in the global context, we can omit the
element part in this case.
key=""@aname1"" ...

Once we decide on this syntax, we can derive an analogue syntax for
the attribute-append as in the element-append.

regards, aki

",,,,,,,,,,,,,,,,,,,
CXFNonSpringJaxrsServlet can not register CXF in/out interceptors when Application is also registered,CXF-3679,12515049,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,22/Jul/11 17:10,19/Aug/11 03:30,14/Mar/19 02:29,22/Jul/11 20:55,2.3.5,2.4.1,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5775,,,2011-07-22 17:10:17.0,,,,,,0|i0b7fz:,63318,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BlueprintBeanLocator throw NPE when looking up Bean instance with Type class,CXF-3678,12514986,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,22/Jul/11 03:14,19/Aug/11 03:30,14/Mar/19 02:29,22/Jul/11 03:35,2.4.1,,,,,,,,,,,,,,,,,2.4.2,,,,,,,,0,,,,,,"When create the cxf bus instance with blueprint configure, you may hit this kind of NPE error.

{code}
org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to intialize bean cxf
	at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:638)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:724)
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:64)
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:219)
	at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:147)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:640)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:331)
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:227)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.NullPointerException
	at java.lang.Class.isAssignableFrom(Native Method)
	at org.apache.cxf.bus.blueprint.BlueprintBeanLocator.getBeansOfType(BlueprintBeanLocator.java:89)
	at org.apache.cxf.bus.CXFBusImpl.getExtension(CXFBusImpl.java:99)
	at org.apache.cxf.bus.extension.ExtensionManagerBus.initialize(ExtensionManagerBus.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.aries.blueprint.utils.ReflectionUtils.invoke(ReflectionUtils.java:226)
	at org.apache.aries.blueprint.container.BeanRecipe.invoke(BeanRecipe.java:824)
	at org.apache.aries.blueprint.container.BeanRecipe.runBeanProcInit(BeanRecipe.java:636)
	... 15 more

{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5776,,,Fri Jul 22 03:35:22 UTC 2011,,,,,,0|i0b7gf:,63320,,,,,,,,22/Jul/11 03:35;njiang;committed the patch into trunk and 2.4.x-fixes branch.,,,,,,,,,,,,,,,,,,,,,,,,,,
DOMUtils Caching vs. ClassLoading problems,CXF-3675,12514902,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,opalka,opalka,21/Jul/11 12:53,19/Aug/11 03:29,14/Mar/19 02:29,05/Aug/11 08:54,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Core,,,,0,,,,,,"When both CXF clients & CXF services coexist in same JVM
there're java.lang.NoClassDefFoundError thrown due to wrong
DocumentDuilderFactory caching approach.",,,,,,,,,,,,,,,,,21/Jul/11 12:57;opalka;CXF3675.patch;https://issues.apache.org/jira/secure/attachment/12487298/CXF3675.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-08-03 10:19:26.377,,,no_permission,,,,,,,,,,,,,5750,,,Wed Aug 03 10:19:26 UTC 2011,,,,,,0|i0b6xj:,63235,,,,,,,,21/Jul/11 12:57;opalka;Proposed patch - let's cache DocumentBuilderFactory but associate it with ClassLoader,"03/Aug/11 10:19;asoldano;I'm reopening as the fix seems to be causing some performance regression. Investigation in process, fix coming asap.",,,,,,,,,,,,,,,,,,,,,,,,,
Regression CXF-3159: Jettison required for json processing with some classloader implementations,CXF-3670,12514724,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,youngm,youngm,19/Jul/11 23:57,19/Aug/11 03:29,14/Mar/19 02:29,20/Jul/11 23:17,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,JAX-RS,,,,0,,,,,,"We recently upgraded our application from 2.3.x to 2.4.1 and we appear to be having trouble similar to that described in CXF-3159.

In CXF-3159 the fix was to basically force the vm to do more class initialization.  I wonder if a better fix would be to just modify the JSONProvider to more eagarly check for a jettison class in a static initializer so that there is less reliance on Classloader implementations to find the existence of dependencies like this?  I'd be happy to provide a patch if that would be useful.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-20 10:56:30.687,,,no_permission,,Novice,,,,,,,,,,,46739,,,Wed Jul 20 23:17:09 UTC 2011,,,,,,0|i1afwv:,269044,,,,,,,,"20/Jul/11 10:56;sergey_beryozkin;Just out of curiosity, where does the exception escape from this time ?

But adding a static check to JSONProvider provider seems like a good idea - please provide a patch
thanks 


","20/Jul/11 21:35;youngm;Here is a simple patch applied to trunk.  I've tested it and it solves my problem.
{code}
Index: rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/provider/JSONProvider.java
===================================================================
--- rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/provider/JSONProvider.java	(revision 1148828)
+++ rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/provider/JSONProvider.java	(working copy)
@@ -66,7 +65,12 @@
 @Consumes(""application/json"")
 @Provider
 public class JSONProvider extends AbstractJAXBProvider  {
-    
+
+    static {
+        //Force the use of Jettison to ensure jettison is in the classpath: CXF-3670, CXF-3159
+        new SimpleConverter();
+    }
+   
     private static final String MAPPED_CONVENTION = ""mapped"";
     private static final String BADGER_FISH_CONVENTION = ""badgerfish"";
{code}



The exception escapes here:

	at org.apache.cxf.jaxrs.model.AbstractResourceInfo.findContextFields(AbstractResourceInfo.java:82)
	at org.apache.cxf.jaxrs.model.AbstractResourceInfo.<init>(AbstractResourceInfo.java:61)
	at org.apache.cxf.jaxrs.model.ProviderInfo.<init>(ProviderInfo.java:27)
	at org.apache.cxf.jaxrs.provider.ProviderFactory.initJaxbProviders(ProviderFactory.java:118)
	at org.apache.cxf.jaxrs.provider.ProviderFactory.<init>(ProviderFactory.java:103)
	at org.apache.cxf.jaxrs.provider.ProviderFactory.<clinit>(ProviderFactory.java:63)
	at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setupFactory(AbstractJAXRSFactoryBean.java:317)
	at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:161)",20/Jul/11 21:47;youngm;I would be forever in your debt if it were possible for this fix to make it into 2.4.2.  Thanks.,"20/Jul/11 23:17;sergey_beryozkin;Your fix has been applied - thanks - and of course you won't owe me anything :-) given
you've confirmed the fix is working :-), cheers",,,,,,,,,,,,,,,,,,,,,,,
Duplicate Poclies added in Java-First approach,CXF-3668,12514534,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rahul.bindu,rahul.bindu,19/Jul/11 04:04,30/Aug/11 06:44,14/Mar/19 02:29,26/Jul/11 02:31,2.4.1,,,,,,,,,,,,,,,,,2.4.2,,,,WS-* Components,,,,0,,,,,,"Polices added to the generated multiple times in the WSDL which causes the service to throw error when invoked by a client.When I removed all the other end points from the system, the number of duplicate polices reduced to half.

On debugging found that there are two instances of PolicyAnnotationListener in the FactoryBeanListenerManager. Is this causing the event to be handled multiple times and thus duplication of the policy? 

The first instance is added during the setBus method on the FactoryBeanListenerManager. The method looks for a bean of type FactoryBeanListener and an instance of the PolicyAnnotationListener is found. The next instance is added in the PolicyEngineImpl's setBus method, where new instance of  PolicyAnnotationListener is created and added to the FactoryBeanListenerManager. ","Tomact 6.0.1.4, JDK 1.6_21",,,,,,,,,,,,CXF-3776,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5757,,,2011-07-19 04:04:59.0,,,,,,0|i0b7dj:,63307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Content negotiation & ResponseBuilder without entity - wrong Content-Type,CXF-3667,12514511,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,lstrzelecki,lstrzelecki,18/Jul/11 21:35,19/Aug/11 03:30,14/Mar/19 02:29,26/Jul/11 20:40,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,JAX-RS,,,,0,,,,,,"With creation of response without content, based on javax.ws.rs.core.Response.ResponseBuilder. I get wrong Content-Type. 

Sample of REST resource (This is not valid rest service, but I want only show strange behaviour)
{code}
package com.sozix.rest.service;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

@Path(""/hello"")
public class HelloResource {
	// 1
	@GET
	// 2
	@Produces(MediaType.APPLICATION_JSON)
	public Response greeting() {
		// 3
		return Response.noContent().build();
	}
}
{code}

At 1) No matter which kind of request (GET, POST, PUT, DELETE) i will invoke. Issiue is the same.
At 2) I set that method produces ONLY Content-type: application/json
At 3) Constructing response without content, using javax.ws.rs.core.Response.ResponseBuilder

Invoking servcie

$ curl *--header ""Accept: application/json""* http://localhost:8080/hello -v
I'm setting header that as client accept only JSON content type.

{code}
$ curl --header ""Accept: application/json"" http://localhost:8080/hello -v
* About to connect() to localhost port 8080 (#0)
*   Trying 127.0.0.1... connected
* Connected to localhost (127.0.0.1) port 8080 (#0)
> GET /hello HTTP/1.1
> User-Agent: curl/7.20.1 (i686-pc-cygwin) libcurl/7.20.1 OpenSSL/0.9.8q zlib/1.
2.5 libidn/1.18 libssh2/1.2.5
> Host: localhost:8080
> Accept: application/json
>
< HTTP/1.1 204 No Content
< Content-Type: text/xml
< Date: Mon, 18 Jul 2011 21:19:19 GMT
< Server: Jetty(7.4.2.v20110526)
<
* Connection #0 to host localhost left intact
* Closing connection #0
{code}

But as you can see at response i'm getting Content-Type: *text/xml*. Which is not i'm expecting.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5756,,,2011-07-18 21:35:01.0,,,,,,0|i0b7b3:,63296,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong code in MessageBodyWriter example,CXF-3666,12514463,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,sergey_beryozkin,mrpi,mrpi,18/Jul/11 16:13,19/Dec/11 16:15,14/Mar/19 02:29,18/Jul/11 22:35,,,,,,,,,,,,,,,,,,2.5.1,,,,Documentation,,,,0,,,,,,"The example for MessageBodyWriter on http://cxf.apache.org/docs/jax-rs-basics.html#JAX-RSBasics-CustomMessageBodyProviders contains:

@ProduceMime(""text/plain"")

Which I believe should be:

@Produces(""text/plain"")",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,46741,,,2011-07-18 16:13:26.0,,,,,,0|i1afxb:,269046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
server-sid​e endpoint cleanup problem in spring based CXF scenarios in OSGi,CXF-3665,12514457,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,18/Jul/11 15:07,19/Aug/11 03:30,14/Mar/19 02:29,20/Jul/11 14:40,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Transports,,,,0,,,,,,"Server-side endpoints configured using spring may not be cleaned up in OSGi under certain situation. This issue can lead to memory leak and an inconsistent system state that requires the restart of the whole container. The detail about this problem and its proposed solution were discussed in cxf@dev mailing thread:

http://cxf.547215.n5.nabble.com/server-side-endpoint-cleanup-problem-in-spring-based-CXF-scenarios-in-OSGi-td4556654.html
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5819,,,2011-07-18 15:07:36.0,,,,,,0|i0b7hj:,63325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wadl2java : xsd data types aren't mapped to java data types properly if they use mixed case.,CXF-3664,12514448,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,cerihughes,cerihughes,18/Jul/11 14:27,19/Aug/11 03:30,14/Mar/19 02:29,20/Jul/11 22:28,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Tooling,,,,0,,,,,,"The data types in my xsd use mixed case names - e.g. ""userDefaults""

When I reference these in my reponse's representation elements, the wadl2java tool is unable to match them to the types processed by the xsd parser.

E.g.

<response status=""200"">
    <representation mediaType=""application/xml"" element=""fmc:userDefaults"" />
</response>

There is a line of code in the org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.matchClassName method that checks the lower-cased version of the generated class name matches the local name of the type from the xsd. This will only ever work ig the local name is completely lowercased OR the method changes to match the 2 strings lower cased.","Windows 7 32 bit
java version ""1.6.0_26""
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)
Java HotSpot(TM) Client VM (build 20.1-b02, mixed mode, sharing)",,,,,,,,,,,,,,,,20/Jul/11 15:07;cerihughes;example.zip;https://issues.apache.org/jira/secure/attachment/12487168/example.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-07-19 22:29:09.827,,,no_permission,,,,,,,,,,,,,5791,,,Wed Jul 20 22:28:31 UTC 2011,,,,,,0|i0b7kv:,63340,,,,,,,,"19/Jul/11 22:29;sergey_beryozkin;Hi, can you provide more info please ? 
I updated the schema in this file:
http://svn.apache.org/repos/asf/cxf/trunk/tools/wadlto/jaxrs/src/test/resources/wadl/bookstore.xml

by changing ""<xs:element name=""thebook2"" type=""tns:book2""/>""
to
<xs:element name=""theBook2"" type=""tns:book2""/>

and then updated element=""prefix:thebook2"" to ""prefix:theBook2""

and it worked OK.

Can you post a sample schema fragment and provide more details please ?
","20/Jul/11 15:07;cerihughes;Run wadl2java on the attached application.wadl (which references model.xsd).

The data type is called myData at the moment, and this generates 3 methods with the following signatures:

{code}
    Response exportData();
    void createData();
    void deleteAll();
{code}

If I rename the data type to be mydata (all 3 cases in the model xsd and 2 cases in wadl), I correctly get the following signatures:

{code}
    Mydata exportData();
    void createData(Mydata mydata);
    void deleteAll();
{code}
","20/Jul/11 22:28;sergey_beryozkin;thanks for this example - I missed yesterday that it were the type names which were used with non-anonymous complex types.

Thus JAXBElementProvider with marshalAsJAxbElement property needs to be configured in such cases - however I think we may just need to add an option like -config (where Spring/etc config would be generated with providers added) or update the main code - to be generated as well ",,,,,,,,,,,,,,,,,,,,,,,,
wadl2java : Return types aren't generated properly on server interfaces for methods with more than 1 response element.,CXF-3662,12514442,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,cerihughes,cerihughes,18/Jul/11 14:01,22/Apr/14 14:54,14/Mar/19 02:29,18/Jul/11 22:33,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Tooling,,,,0,,,,,,"My wadl file frequently has more than 1 response element in the method elements, i.e.:
{code}
<method name=""GET"" id=""getUserDefaults"">
	<doc>Gets default user configuration values.</doc>
	<response status=""200"">
		<representation mediaType=""application/xml"" element=""fmc:userDefaults"" />
	</response>
	<response status=""400"">
		<representation mediaType=""application/xml"" element=""fmc:errorList"" />
	</response>
</method>
{code}

If there is more than 1 response element, the wadl2java tool assumes that the return type from generated methods is always void. There is a line of code that checks for exactly 1 response element - if there isn't 1 (i.e. 0 or more than 1), then void is assumed. Can it not take the representation of the 1st response in a case when there is more than 1 (or better, the representation from the response with a success status)?

See the first line of org.apache.cxf.jaxrs.ext.codegen.SourceGenerator.writeResponseType","Windows 7 32 bit
java version ""1.6.0_26""
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)
Java HotSpot(TM) Client VM (build 20.1-b02, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-19 11:22:03.386,,,no_permission,,,,,,,,,,,,,5795,,,Tue Apr 22 14:54:59 UTC 2014,,,,,,0|i0b6mn:,63186,,,,,,,,"19/Jul/11 11:22;sergey_beryozkin;The following fix from Aki also applies to this JIRA:

http://svn.apache.org/viewvc?rev=1148257&view=rev","22/Apr/14 14:54;claudal75;In this example, there is a normal response and an error. In that case, the error can be treated with an exception mapper. In case there a additional response (for example with status code = 204), I think it would be more logical to have a return type ""javax.ws.rs.core.Response"" instead of taking the first one.",,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS proxies should not append single slash path values ,CXF-3660,12514342,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,16/Jul/11 23:20,19/Aug/11 03:30,14/Mar/19 02:29,16/Jul/11 23:34,2.3.5,2.4.1,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5790,,,2011-07-16 23:20:21.0,,,,,,0|i0b7pj:,63361,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wadl generation problem with @FormParam cause IllegalStateException,CXF-3656,12514106,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,bgennadiy,bgennadiy,14/Jul/11 18:42,19/Aug/11 03:30,14/Mar/19 02:29,18/Jul/11 21:58,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,JAX-RS,,,,0,,,,,,"When we are migrate to 2.4.1 from 2.3.1 we have an exception with wadl generation
java.lang.IllegalStateException
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.getRequestBodyParam(WadlGenerator.java:606)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.handleRepresentation(WadlGenerator.java:574)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.handleFormRepresentation(WadlGenerator.java:618)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.handleOperation(WadlGenerator.java:359)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.handleResource(WadlGenerator.java:285)
	at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.handleRequest(WadlGenerator.java:216)
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.handleMetadataRequest(RequestPreprocessor.java:201)
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.checkMetadataRequest(RequestPreprocessor.java:186)
	at org.apache.cxf.jaxrs.impl.RequestPreprocessor.preprocess(RequestPreprocessor.java:82)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:112)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:118)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:205)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:113)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:184)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:112)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:163)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:343)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at com.utest.service.security.FlexSecurityContextPersistenceFilter.doFilter(FlexSecurityContextPersistenceFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:149)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:176)
	at org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:145)
	at org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:92)
	at org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:381)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:190)
	at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:92)
	at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)
	at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)
	at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:436)
	at org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:384)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)



Investigation shown that exception cause for next method:
@POST
@Path(""/{id}/replyInfo"")
@Consumes( { MediaType.APPLICATION_FORM_URLENCODED })
public ResourceIdentity processReplyRequestedInfo( @PathParam(""id"") final Integer id,  @FormParam(""comments"") final String comments) 

when change method signature to:
public ResourceIdentity processReplyRequestedInfo( @FormParam(""comments"") final String comments, @PathParam(""id"") final Integer id )
resolves issue.

Analysis of source code for class org.apache.cxf.jaxrs.model.wadl.WadlGenerator.java provide conclusion why it happen.

Chain of calls:
private boolean handleOperation(StringBuilder sb, Set<Class<?>> jaxbTypes,
                                 ElementQNameResolver qnameResolver,
                                 Map<Class<?>, QName> clsMap,
                                 OperationResourceInfo ori,
                                 OperationResourceInfo nextOp,
                                 boolean resourceTagOpened,
                                 int index) {
....
            if (isFormRequest(ori)) {
358:                handleFormRepresentation(sb, jaxbTypes, qnameResolver, clsMap, ori, getFormClass(ori));

859: private Class<?> getFormClass(OperationResourceInfo ori) {
        if (ori.getParameters().get(0).getType() == ParameterType.FORM) { <-- here it could be a problem. Code checks only first parameter. 
            return null;
        } else {
            return MultivaluedMap.class;
        }
    }

in case of first parameter is @PathParam the formClass returned value MultivaluedMap.class and exception thrown.
in 

private void handleFormRepresentation(StringBuilder sb, Set<Class<?>> jaxbTypes,
                                      ElementQNameResolver qnameResolver,
                                      Map<Class<?>, QName> clsMap, OperationResourceInfo ori,
                                      Class<?> type) {
617:    if (type != null) {
            handleRepresentation(sb, jaxbTypes, qnameResolver, clsMap, ori, type, true);

.....
            if (inbound) {
573:                int index = getRequestBodyParam(ori).getIndex();

599:private Parameter getRequestBodyParam(OperationResourceInfo ori) {
        for (Parameter p : ori.getParameters()) {
            if (p.getType() == ParameterType.REQUEST_BODY) { <-- there is no body type request 
                return p;
            }
        }
        throw new IllegalStateException();
    }




",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-18 21:58:32.798,,,no_permission,,,,,,,,,,,,,5815,,,Mon Jul 18 21:58:32 UTC 2011,,,,,,0|i0b7n3:,63350,,,,,,,,18/Jul/11 21:58;sergey_beryozkin;thanks for the analysis of the problem,,,,,,,,,,,,,,,,,,,,,,,,,,
"Role based authorization not working with DefaultSecurityContext (i.e., when using JAASLoginInterceptor with non-prefixed role names)",CXF-3655,12514083,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,14/Jul/11 16:05,19/Aug/11 03:30,14/Mar/19 02:29,15/Jul/11 13:30,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Core,,,,0,,,,,,"org.apache.cxf.interceptor.security.DefaultSecurityContext's isUserInRole(String) is not working with jetty's nor virgo's role configuration. This method assumes a role principal to have interface java.security.acl.Group. 

However, both jetty and virgo represent role principals using their own principal classes
org.eclipse.jetty.plus.jaas.JAASRole or org.eclipse.virgo.kernel.authentication.Role, respectively.

And these role classes do not implement java.security.acl.Group.

So, in order to check if the specified role matches the role-principals assigned to the current context, the specified role must be compared against those principals set in the subject that are not equal to the user principal.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5800,,,2011-07-14 16:05:42.0,,,,,,0|i0b7rz:,63372,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Type in Documentation: usePlatformMbeanServer must be usePlatformMBeanServer,CXF-3651,12513772,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,ffang,ojelinski,ojelinski,12/Jul/11 09:54,12/Jul/11 13:41,14/Mar/19 02:29,12/Jul/11 10:03,,,,,,,,,,,,,,,,,,,,,,Documentation,,,,0,,,,,,"On the webpage ""Configuring JMX Integration"" (http://cxf.apache.org/docs/jmx-management.html) there is the typo in the table that contains the configuration options. The option ""usePlatformMbeanServer"" must be ""usePlatformMBeanServer"" (uppercase ""B"").

This isn't a big issue but leads to failing spring initialization:

SCHWERWIEGEND: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'XXX': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.cxf.management.InstrumentationManager' defined in ServletContext resource [/WEB-INF/beans.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'usePlatformMbeanServer' of bean class [org.apache.cxf.management.jmx.InstrumentationManagerImpl]: Bean property 'usePlatformMbeanServer' is not writable or has an invalid setter method. Did you mean 'usePlatformMBeanServer'?
",http://cxf.apache.org/docs/jmx-management.html,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-12 10:03:50.896,,,no_permission,,,,,,,,,,,,,46746,,,Tue Jul 12 13:41:24 UTC 2011,,,,,,0|i1afyf:,269051,,,,,,,,"12/Jul/11 10:03;ffang;Thanks for letting us know this issue.
Doc get fixed and will be sync up in next few hours",12/Jul/11 13:41;ojelinski;Thanks for fixing this.,,,,,,,,,,,,,,,,,,,,,,,,,
jax-rs basic example doesn't work when there's a space in file path url,CXF-3650,12513485,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,11/Jul/11 07:28,19/Aug/11 03:30,14/Mar/19 02:29,11/Jul/11 08:07,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,,,,,0,,,,,,"If the path url has space like
/Users/ffang/apache-cxf-2.4.1/samples/jax_rs/my basic/
then the resolved file url is 
/Users/ffang/apache-cxf-2.4.1/samples/jax_rs/my%20basic/target/classes/demo/jaxrs/client/update_customer.xml
here %20 represent space, it's ok on windows platform but not ok on mac, on mac we need replaceAll(""%20"", "" "");
we should use org.apache.cxf.resource.URIResolver to resolve the file url here which both works on windows and *nix.
",Mac,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5783,,,Mon Jul 11 08:07:40 UTC 2011,,,,,,0|i0b7rj:,63370,,,,,,,,"11/Jul/11 08:07;ffang;commit fix
http://svn.apache.org/viewvc?rev=1145049&view=rev for trunk
http://svn.apache.org/viewvc?rev=1145052&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1145055&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Out policies are not being applied for an unchecked fault,CXF-3649,12513297,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,08/Jul/11 18:50,19/Aug/11 03:30,14/Mar/19 02:29,08/Jul/11 21:13,2.4.1,,,,,,,,,,,,,,,,,2.4.2,,,,WS-* Components,,,,0,,,,,,"
If an application throws an unchecked exception or other exception that cannot be mapped into a FaultInfo in the WSDL, none of the policies are being applied.   It should at least grab the policies for the operation/binding/service/port and apply those to make sure the addressing and basic security requirements are met.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5822,,,2011-07-08 18:50:17.0,,,,,,0|i0b7mn:,63348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong scope for commons-pool,CXF-3648,12513266,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,08/Jul/11 13:52,19/Aug/11 03:30,14/Mar/19 02:29,08/Jul/11 14:16,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,,,,,0,,,,,," 
The jms transport has commons-pool as a runtime scope.  However, it's not needed for compile and it's only needed at runtime if using ActiveMQ.   The ActiveMQ poms would pull that in anyway.   Thus, it should be either removed or moved to test scope.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5820,,,2011-07-08 13:52:33.0,,,,,,0|i0b7mv:,63349,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
configuration_interceptor simple doesn't work due to missing configuration file,CXF-3645,12513204,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,08/Jul/11 00:07,19/Aug/11 03:29,14/Mar/19 02:29,08/Jul/11 02:50,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Samples,,,,0,,,,,,"when run mvn -Pclient, get exception like
org.springframework.context.ApplicationContextException: Failed to load configuration /Users/ffang/apache-cxf-2.4.1/samples/configuration_interceptor/src/demo/stream/client/client.xml
	at org.apache.cxf.bus.spring.BusApplicationContext.getConfigResources(BusApplicationContext.java:152)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:120)
	at org.apache.cxf.bus.spring.BusApplicationContext.loadBeanDefinitions(BusApplicationContext.java:262)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5778,,,Fri Jul 08 02:50:58 UTC 2011,,,,,,0|i0b7v3:,63386,,,,,,,,"08/Jul/11 02:35;ffang;Seems this issue already get fixed by Dan on trunk and 2.4.x branch, but we still have this issue for 2.3.x and I'd like to remove the redundant configuration_interceptor/src/demo/stream/server/server.xml as we already have it in configuration_interceptor folder and maven-ant-plugin will copy it to the proper target folder during build.","08/Jul/11 02:50;ffang;commit fix
http://svn.apache.org/viewvc?rev=1144131&view=rev for trunk
http://svn.apache.org/viewvc?rev=1144133&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1144134&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAXRS Proxies can not handle explicilt collections of form parameters,CXF-3641,12513090,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,szhemzhitsky,szhemzhitsky,07/Jul/11 07:16,19/Aug/11 03:30,14/Mar/19 02:29,10/Jul/11 22:17,2.3.3,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,JAX-RS,,,,0,,,,,,"Explicit collections of query and matrix parameters are supported (CXF-2958), but at the same time such collections of form parameters are not.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5779,,,2011-07-07 07:16:47.0,,,,,,0|i0b7pz:,63363,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The duplicate soap body is appended  when the endpoint is both configured with soap handler and wsse enabled,CXF-3639,12513081,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,07/Jul/11 06:36,16/Jul/13 19:29,14/Mar/19 02:29,10/Jul/11 15:06,2.2.12,2.3.5,,,,,,,,,,,,,,,,2.3.6,,,,Soap Binding,WS-* Components,,,0,,,,,,"If the endpoint impl is annotated with @HandlerChain and wsse enabled. There is duplicate soap body is appended. If the soap body is configured for signature, it is always failed with message: 

14:04:47,210 WARN [Reference] Expected Digest: SW43BqTLb8U2V2eS6/aX6wLNu54=
14:04:47,210 WARN [Reference] Actual Digest:tpFK1QQIUk14Tx1VQRSvcOmmD2g=
14:04:47,220 WARN [WSS4JInInterceptor]
org.apache.ws.security.WSSecurityException: The signature or decryption was invalid

This happens only in 2.3.x release. There is no such issue in cxf 2.2.5 and cxf 2.4.1.  
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5821,,,2011-07-07 06:36:20.0,,,,,,0|i0b7hr:,63326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl_first_dynamic_client example doesn't work,CXF-3638,12513073,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,07/Jul/11 03:14,19/Aug/11 03:30,14/Mar/19 02:29,22/Jul/11 06:56,2.3.5,2.4.1,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Samples,,,,0,,,,,,"If we run mvn -Pserver and then mvn -Pclient

then from the client console we get exception like
org.apache.cxf.interceptor.Fault: com.company.application.GetAgentDetails cannot be cast to com.company.application.AgentWSRequest
	at org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor.handleMessage(WrapperClassOutInterceptor.java:121)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:546)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:343)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:295)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:315)
	at demo.hw.client.ComplexClient.main(ComplexClient.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:291)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.ClassCastException: com.company.application.GetAgentDetails cannot be cast to com.company.application.AgentWSRequest
	at com.company.application.GetAgentDetails_WrapperTypeHelper1.createWrapperObject(Unknown Source)
	at org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor.handleMessage(WrapperClassOutInterceptor.java:105)
	... 12 more
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5770,,,Fri Jul 22 06:56:48 UTC 2011,,,,,,0|i0b7g7:,63319,,,,,,,,"13/Jul/11 07:32;ffang;find out that this is only issue with JDK6, the bare mode server publish a wrapped style wsdl, which cause client side fail.

With JDK5, by default the jaxws 2.2 was used so everything is ok.
With JDK6, unless we endorse the jaxws 2.2 api, by default the maven will use jaxws 2.1, somehow this example can't work with jaxws2.1, the bare mode server publish a wrapped style wsdl, so client dynamically generate wrapped style invocation which cause this error.
","22/Jul/11 06:56;ffang;commit fix
http://svn.apache.org/viewvc?rev=1149476&view=rev for trunk
http://svn.apache.org/viewvc?rev=1149478&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1149479&view=rev for 2.3.x branch
",,,,,,,,,,,,,,,,,,,,,,,,,
wsdl_first_https README.txt isn't correct,CXF-3637,12513064,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,ffang,ffang,07/Jul/11 02:03,19/Aug/11 03:30,14/Mar/19 02:29,07/Jul/11 02:27,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Samples,,,,0,,,,,,"In the README.txt file for the WSDL first demo using HTTPS (wsdl_first_https), the following:

""In separate windows:
mvn -Pserver (starts the server)
mvn -Psecure.client (runs the client in secure mode, Scenario 2)
mvn -Pinsecure.client (runs the client in insecure mode, Scenario 1)
mvn -Pinsecure.client.non.secure (runs the client in secure mode, Scenario 3)
mvn -Psecure.client.non.secure (runs the client in secure mode, Scenario 4)
mvn clean (removes all generated and compiled classes)""

should read:

""In separate windows:
mvn -Pserver (starts the server)
mvn -Pinsecure.client (runs the client in insecure mode, Scenario 1)
mvn -Psecure.client (runs the client in secure mode, Scenario 2)
mvn -Pinsecure.client.non.spring (runs the client in insecure mode, Scenario 3)
mvn -Psecure.client.non.spring (runs the client in secure mode, Scenario 4)
mvn clean (removes all generated and compiled classes)""",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5812,,,Thu Jul 07 02:27:13 UTC 2011,,,,,,0|i0b7tr:,63380,,,,,,,,"07/Jul/11 02:27;ffang;commit fix
http://svn.apache.org/viewvc?rev=1143631&view=rev for trunk
http://svn.apache.org/viewvc?rev=1143632&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1143634&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
aegis_standalone sample README.txt isn't correct,CXF-3636,12513060,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,ffang,ffang,07/Jul/11 01:57,02/Sep/11 00:48,14/Mar/19 02:29,07/Jul/11 02:02,2.3.5,,,,,,,,,,,,,,,,,2.3.6,,,,,,,,0,,,,,,README file mentions to use the run goal with in fact that goal does not exist. While the write and read goal do exist but they are not mentioned within the README file. ,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46750,,,Thu Jul 07 02:02:10 UTC 2011,,,,,,0|i1afz3:,269054,,,,,,,,"07/Jul/11 02:02;ffang;commit fix
http://svn.apache.org/viewvc?rev=1143628&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,
WADL Generator ignores @PathParams mapped on class fields,CXF-3631,12512707,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,rvullriede,rvullriede,04/Jul/11 10:36,19/Aug/11 03:30,14/Mar/19 02:29,12/Jul/11 17:17,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,JAX-RS,,,,0,WADL,,,,,"I have a request scoped resource via a RequestScopeResourceFactory and <aop:scoped-proxy /> as described on http://cxf.apache.org/docs/jaxrs-services-configuration.html#JAXRSServicesConfiguration-Lifecyclemanagement to be able to inject @PathParams on class fields. This works as expected however the mapped parameters do not show up in the auto-generated WADL. After a quick look in the source code of org.apache.cxf.jaxrs.model.wadl.WADLGenerator it seems it is only looking for method-level parameters.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-12 17:16:56.225,,,no_permission,,,,,,,,,,,,,5784,,,Tue Jul 12 17:16:56 UTC 2011,,,,,,0|i0b6wv:,63232,,,,,,,,"12/Jul/11 17:16;sergey_beryozkin;private @PathParam(""id"") int id;

or

@PathParam(""id"")
public void setId(int id) {
}

(as well for matrix, query, header)

should be recognized by the generator now
",,,,,,,,,,,,,,,,,,,,,,,,,,
SEVERE message seen in wsdl_first_pure_xml example,CXF-3628,12512356,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,gliesian,gliesian,30/Jun/11 17:43,19/Aug/11 03:30,14/Mar/19 02:29,01/Jul/11 03:20,2.4.1,,,,,,,,,,,,,,,,,2.4.2,,,,Samples,,,,0,,,,,,"In this example program ""WSDL first demo using BARE Style in XML Binding (pure XML over HTTP)"" - (i.e., wsdl_first_pure_xml), a SEVERE warning is encountered:

[java] SEVERE: the message content list of the in message and out message are same, CXF can't set the holder object into the message content list of the out message.

See attachment.

Note: This issue is also seen in with the wsdl_first_rpclit example.",,,,,,,,,,,,,,,,,30/Jun/11 17:45;gliesian;severe_message.bmp;https://issues.apache.org/jira/secure/attachment/12484804/severe_message.bmp,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-07-01 02:30:39.483,,,no_permission,,,,,,,,,,,,,46753,,,Fri Jul 01 03:19:58 UTC 2011,,,,,,0|i1afzr:,269057,,,,,,,,"01/Jul/11 02:30;njiang;This issue is related to CXF-3572, and I committed a quick fix for it just after CXF 2.4.1 was released. If you try out the latest CXF 2.4.2-SNAPSHOT, it should be OK now.
","01/Jul/11 03:19;njiang;I just did a quick test on the CXF 2.4.2-SNAPSHOT, the error is gone :)
",,,,,,,,,,,,,,,,,,,,,,,,,
high load may cause deadlocks,CXF-3627,12512338,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,repp,repp,30/Jun/11 15:37,19/Aug/11 03:30,14/Mar/19 02:29,01/Jul/11 04:19,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Core,,,,0,,,,,,"we tried to implement bi directional ws communication (both sides are client and servers)
methods were annotated with @oneway to make sure that on the other side request is processed in separate thread and to make sure requesting thread do not wait for the server processing (because server can issue another request back).

Unfortunately there is confusing part of the code in org/apache/cxf/interceptor/OneWayProcessorInterceptor.java 

} catch (RejectedExecutionException e) {
      //the executor queue is full, so run the task in the caller thread
      chain.resume();

that ignores @oneway and continues with the current thread, which means requesting thread (acting as client) will wait... in some cases forever (or till some network timeout)


What is even worse, there is no single log line indicating that (and suggesting to increase thread pool size), so it was really hard to debug it
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-01 02:51:53.373,,,no_permission,,,,,,,,,,,,,5814,,,Fri Jul 01 04:19:06 UTC 2011,,,,,,0|i0b7u7:,63382,,,,,,,,"01/Jul/11 02:51;ffang;Hi,

This code
{code}
} catch (RejectedExecutionException e) {
//the executor queue is full, so run the task in the caller thread
chain.resume();
{code}

ensure that we won't lose oneway invocation if the executor queue is full. Anyway you can alawys configure a larger executor queue for high load. And I agree that add a log to indicate the ""the executor queue is full, so run the task in the caller thread"" should be good.

Freeman","01/Jul/11 04:19;ffang;commit fix
http://svn.apache.org/viewvc?rev=1141787&view=rev for trunk
http://svn.apache.org/viewvc?rev=1141788&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1141789&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
CXF-3229 all over again,CXF-3625,12512296,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jesselong,jesselong,30/Jun/11 09:01,19/Aug/11 03:30,14/Mar/19 02:29,08/Aug/11 21:33,2.4,2.4.1,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Core,,,,0,,,,,,"See issue 3229. in 2.4 things have changed, and the patch I applied for 2.3.2 is no longer in place. However, the problem that was fixed in 3229 is back again in 2.4.1.

Step1:
Java 2 wsdl: an operation throws java.lang.Exception.

Step2: wsdl 2 java based on resulting wsdl from step1. Codegen creates an XML binding class ""Exception"". Other exceptions ""extends Exception"", not ""extends java.lang.Exception"".

See: tools/wsdlto/frontend/jaxws/src/main/java/org/apache/cxf/tools/wsdlto/frontend/jaxws/generators/FaultGenerator.java

Why would a generated exception ever extends anything other than java.lang.Exception? Is it attempting to mirror the hierarchy from the server side? My suggestion: exceptionSuperclass = ""java.lang.Exception""; End of story.",Generating Java code from WSDL,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-08 21:33:14.877,,,no_permission,,,,,,,,,,,,,5741,,,Mon Aug 08 21:33:14 UTC 2011,,,,,,0|i0b78f:,63284,,,,,,,,"08/Aug/11 21:33;dkulp;
Hopefully now resolved.

The purpose is to get it to generate code like ""class MyException extends Exception"" and not ""extends java.lang.Exception"" in all cases as some people don't like to see fully qualified class names unless absolutely necessary. 

I've updated the FaultGenerator to check the ClassCollector to see if anything names Exception has been created and if so, switch to fully qualifying in that case.",,,,,,,,,,,,,,,,,,,,,,,,,,
BinarySecurityToken validated by STSTokenValidator doesn't satisfy IssuedToken policy,CXF-3624,12512289,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,owulff,owulff,30/Jun/11 08:27,19/Aug/11 03:30,14/Mar/19 02:29,08/Jul/11 18:35,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,WS-* Components,,,,0,,,,,,"I've configured a JAX-WS endpoint to validate a BinarySecurityToken sent in the WS-Security Header against an STS like this:

         <entry key=""ws-security.bst.validator"">
            <bean class=""org.apache.cxf.ws.security.trust.STSTokenValidator""/>

After successful validation, I get the following exception on the server side:

Jun 30, 2011 10:57:21 AM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://www.example.org/contract/DoubleIt}DoubleItService#{http://www.example.org/contract/DoubleIt}DoubleIt has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: These policy alternatives can not be satisfied:
{http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}IssuedToken
        at org.apache.cxf.ws.policy.AbstractPolicyInterceptor.handleMessage(AbstractPolicyInterceptor.java:47)

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5799,,,2011-06-30 08:27:55.0,,,,,,0|i0b7jj:,63334,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSRM AckRange's number parsing not tolerating whitespace after CXF 2.4 upgrade,CXF-3623,12512285,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ay,ay,ay,30/Jun/11 07:09,19/Aug/11 03:30,14/Mar/19 02:29,30/Jun/11 09:16,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,WS-* Components,,,,0,,,,,,"The behavior of the number value parsing in WSRM has been changed in CXF 2.4 and this may lead to an interoperability issue with other implementations.

According to the whitespace handling for atomic types[1], the number types such as xs:unsignedLong used for AcknowledgementRange's Lower/Upper values should collapse the leading and trailing whitespace. This behavior is present in CXF 2.3.x, where type xs:unsignedLong is simply bound to its default java type BigInteger.

In 2.4, this type is bound to Long using the binding file. This is causing any number value containing a leading or trailing whitespace to be not correctly read.

I am adding the parseMethod option for the Long type in the biding file as shown below so that the above mentioned whitespace handling is automatically provided for the Long type by jaxb:

                <jaxb:javaType name=""java.lang.Long""
                    parseMethod=""javax.xml.bind.DatatypeConverter.parseLong"" 
                    printMethod=""javax.xml.bind.DatatypeConverter.printLong""/>


[1]  http://www.w3.org/TR/xmlschema-2/#rf-whiteSpace, 

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5786,,,2011-06-30 07:09:38.0,,,,,,0|i0b6xr:,63236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chunking is not supported for non-empty HTTP PUT requests,CXF-3620,12512178,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,29/Jun/11 07:57,19/Aug/11 03:30,14/Mar/19 02:29,29/Jun/11 08:10,2.3.5,2.4.1,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Transports,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5738,,,Wed Jun 29 07:59:35 UTC 2011,,,,,,0|i0b77r:,63281,,,,,,,,"29/Jun/11 07:59;sergey_beryozkin;http://svn.apache.org/viewvc?rev=1140843&view=rev
relates to it",,,,,,,,,,,,,,,,,,,,,,,,,,
Missing build.xml file for jms_pubsub and jms_queue samples,CXF-3619,12512041,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,gliesian,gliesian,28/Jun/11 20:37,01/Sep/11 18:31,14/Mar/19 02:29,03/Jul/11 12:53,2.4.1,,,,,,,,,,,,,,,,,,,,,Samples,,,,0,,,,,,"In the README.txt file for the ""JMS Transport Demo using Document-Literal Style"" (i.e., jms_queue (and and also the jms_pubsub sample)), the following text is presented:

""From the base directory of this sample (i.e., where this README file is
located), the Ant build.xml file can be used to build and run the demo.""


There is no build.xml file in these folders for the 2.4.1 build, binary release. 
 



",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-07-02 00:01:45.476,,,no_permission,,,,,,,,,,,,,5813,,,Thu Sep 01 18:31:55 UTC 2011,,,,,,0|i0b7tz:,63381,,,,,,,,"01/Jul/11 13:49;gliesian;The build.xml file is also missing in the jms-spec-demo.  

However, the jms-spec-demo's README.txt also reads: 

""From the base directory of this sample (i.e., where this README file is ocated), the Ant build.xml file can be used to build and run the demo.""","02/Jul/11 00:01;ffang;Hi,

We decide to drop ant build.xml files for samples requiring extra stuff(those examples you mentioned here are in this case), see the discussion here, but all samples can run with maven. To demonstrate how to use ant to build, a new example ""antbuild"" was added. We need revise the README.txt of those changed example accordingly.

[1]http://cxf.547215.n5.nabble.com/Proposal-drop-ant-build-xml-files-for-samples-requiring-extra-stuff-td3704042.html

Freeman","03/Jul/11 12:50;gmazza;I fixed the READMEs for those three samples in the CXF 2.4.x and trunk branches.  According to the thread Freeman linked to, apparently the build.xml's still need to be removed from all the other samples, as ""antbuild"" is to remain our lone Ant example.
","03/Jul/11 12:53;gmazza;Updated README files.  (Unsure of the etiquette of resolving an issue assigned to someone else, apologies if any offense.)",01/Sep/11 18:31;gliesian;Thank you for the resolution.,,,,,,,,,,,,,,,,,,,,,,
Extremely bad performance in JMS transport when the MessageListenerContainer is used,CXF-3618,12511481,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,24/Jun/11 15:11,19/Aug/11 03:30,14/Mar/19 02:29,24/Jun/11 15:17,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Transports,,,,0,,,,,,"When configuring the JMS transport for a fixed queue and using the async api the MessageListenerContainer is used.
Normally this should increase the performance compared to jmsTemplate. When doing performance tests I found that the performance is extremely bad though.
(Few messages per second). When I profiled where time is spent I found that the ListenerContainer is shut down all the time and restarted on next call.

I removed the shutdown calls when no async messages are outstanding as the listeners may be kept open without any problems. Now the performance is fine again ( about 1500 request/reply calls per second).
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5823,,,Fri Jun 24 15:17:23 UTC 2011,,,,,,0|i0b7un:,63384,,,,,,,,24/Jun/11 15:17;chris@die-schneider.net;Committed change to remove mayBeShutDownListener. Performance is now normal again,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread leak in WorkQueueManagerImpl and AutomaticWorkQueueImpl when we use it in tomcat,CXF-3614,12511338,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,veaven,veaven,23/Jun/11 10:10,19/Aug/11 03:30,14/Mar/19 02:29,23/Jun/11 16:00,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Core,,,,0,,,,,,"Hi,

  There is the threadleak in WorkQueueManagerImpl / AutomaticWorkQueueImpl when we use it in tomcat or other web container. In AutomaticWorkQueueImpl created by WorkQueueManagerImpl, it has a class WatchDog which is a daemon thread, If we call shutdown in WorkQueueManagerImpl, it only clean the queue in AutomaticWorkQueueImpl but it won't notify WatchDog thread, so the WatchDog will wait and live until we exit JVM.
  It won't cause issue if we run CXF as standalone app, however, it will cause thread leak in tomcat because we do not stop tomcat when we undeploy cxf web-app, so we cannot destroy WatchDog thread in this case.

  Could you please fix it? thanks.

{code}
public class MyWorkQueueManagerImpl extends WorkQueueManagerImpl implements DisposableBean {

    @Override
    public void destroy() throws Exception {
        this.shutdown(false);
        for (AutomaticWorkQueue queue : namedQueues.values()) {
            if (queue instanceof AutomaticWorkQueueImpl) {
                AutomaticWorkQueueImpl queueimpl = ((AutomaticWorkQueueImpl) queue);
                queueimpl.terminated();
                queueimpl.watchDog.interrupt();
            }
        }
    }
}
{code}

David",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-06-23 16:00:22.995,,,no_permission,,,,,,,,,,,,,5827,,,Fri Jun 24 07:12:08 UTC 2011,,,,,,0|i0b8t3:,63539,,,,,,,,"23/Jun/11 16:00;njiang;Applied the patch into trunk, 2.4.x-fixes and 2.3.x-fixes branch.

","24/Jun/11 07:12;veaven;Thanks Willem.

David",,,,,,,,,,,,,,,,,,,,,,,,,
"Various problems with ""java.lang.Class""",CXF-3613,12511293,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,ancoron,ancoron,22/Jun/11 23:37,19/Dec/12 14:38,14/Mar/19 02:29,24/Oct/12 21:20,2.4.1,,,,,,,,,,,,,,,,,2.5.7,2.6.4,2.7.1,,Aegis Databinding,,,,0,,,,,,"I just noted that the following exception is thrown when trying to create server for some service interface that contains some reference to ""java.lang.Class"".

Consider a service interface like this:
{code:java}
package org.apache.cxf.aegis.type.java5;

import java.io.Serializable;

public class GenericsService {

    public <T extends Serializable> T createInstance(Class<T> type)
        throws InstantiationException, IllegalAccessException {
        return type.newInstance();
    }
}
{code}

\\
The problem is, that during creation time it throws a NullPointerException like this:
{noformat}
java.lang.NullPointerException
	at org.apache.cxf.aegis.type.basic.BeanTypeInfo$1.compare(BeanTypeInfo.java:307)
	at org.apache.cxf.aegis.type.basic.BeanTypeInfo$1.compare(BeanTypeInfo.java:306)
	at java.util.Arrays.mergeSort(Arrays.java:1270)
	at java.util.Arrays.mergeSort(Arrays.java:1282)
	at java.util.Arrays.mergeSort(Arrays.java:1281)
	at java.util.Arrays.mergeSort(Arrays.java:1281)
	at java.util.Arrays.sort(Arrays.java:1210)
	at org.apache.cxf.aegis.type.basic.BeanTypeInfo.initializeProperties(BeanTypeInfo.java:305)
	at org.apache.cxf.aegis.type.basic.BeanTypeInfo.<init>(BeanTypeInfo.java:75)
	at org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo.<init>(AnnotatedTypeInfo.java:41)
	at org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo.<init>(AnnotatedTypeInfo.java:36)
	at org.apache.cxf.aegis.type.java5.Java5TypeCreator.createDefaultType(Java5TypeCreator.java:208)
	at org.apache.cxf.aegis.type.XMLTypeCreator.createDefaultType(XMLTypeCreator.java:398)
	at org.apache.cxf.aegis.type.AbstractTypeCreator.createTypeForClass(AbstractTypeCreator.java:135)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.getParameterType(AegisDatabinding.java:574)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeMessage(AegisDatabinding.java:315)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeOperation(AegisDatabinding.java:273)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initialize(AegisDatabinding.java:239)
	at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:438)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:501)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:241)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:157)
	at org.apache.cxf.dosgi.dsw.handlers.HttpServiceConfigurationTypeHandler.createServer(HttpServiceConfigurationTypeHandler.java:169)
	at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminCore.exportService(RemoteServiceAdminCore.java:245)
	at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance$1.run(RemoteServiceAdminInstance.java:78)
	at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance$1.run(RemoteServiceAdminInstance.java:71)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance.exportService(RemoteServiceAdminInstance.java:71)
	at org.apache.cxf.dosgi.dsw.service.RemoteServiceAdminInstance.exportService(RemoteServiceAdminInstance.java:40)
	at org.apache.cxf.dosgi.topologymanager.TopologyManager$2.run(TopologyManager.java:259)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
{noformat}

The cause for this is that the ""{{org.springframework.beans.BeanUtils#getPropertyDescriptor}}"" method returns ""{{null}}"" for the property ""{{classLoader}}"". However, this is not a real problem, so as a test I just modified the ""{{org.apache.cxf.aegis.type.basic.BeanTypeInfo#initializeProperties}}"" method to omit any {{PropertyDescriptor}} that is {{null}}.

So far so good, but immediately afterwards, I get the next error:
{noformat}
java.lang.NullPointerException
	at java.lang.reflect.Array.newArray(Native Method)
	at java.lang.reflect.Array.newInstance(Array.java:52)
	at org.apache.cxf.aegis.type.TypeUtil.getTypeRelatedClass(TypeUtil.java:261)
	at org.apache.cxf.aegis.type.AbstractTypeCreator.createTypeForClass(AbstractTypeCreator.java:108)
	at org.apache.cxf.aegis.type.AbstractTypeCreator.createType(AbstractTypeCreator.java:395)
	at org.apache.cxf.aegis.type.basic.BeanTypeInfo.getType(BeanTypeInfo.java:196)
	at org.apache.cxf.aegis.type.basic.BeanType.getDependencies(BeanType.java:532)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.addDependencies(AegisDatabinding.java:394)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeMessage(AegisDatabinding.java:370)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeOperation(AegisDatabinding.java:273)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initialize(AegisDatabinding.java:239)
	at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:438)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:501)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:241)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:157)
	at org.apache.cxf.aegis.AbstractAegisTest.createService(AbstractAegisTest.java:151)
	at org.apache.cxf.aegis.type.java5.GenericsTypeTest.testCreateService(GenericsTypeTest.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:119)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at $Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
{noformat}

\\
This one is for the property ""{{java.lang.Class#enumConstants}}"" and I guess there are even more errors coming.

What I had in ming was to substitute ""java.lang.Class"" with ""java.lang.String"" on-the-fly, so that there is an automatic default handling, e.g.:
* {{public <T extends Serializable> T createInstance(Class<T> type)}} will become something like {{public Serializable createInstance(String type)}}
* {{public Class getType(Serializable obj)}} will become something like {{public String getType(Serializable obj)}}

...so that CXF internally does something like ""{{ClassLoaderUtils.loadClass(type, refClass);}}"" and ""{{type.getName()}}"" for the other way around.

What do you think?",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-24 21:20:10.122,,,no_permission,,,,,,,,,,,,,46757,,,Wed Oct 24 21:20:10 UTC 2012,,,,,,0|i0b25j:,62461,,,,,,,,"26/Jun/11 13:41;ancoron;For a simple test, I have added a new type ""ClassAsStringType"":

{noformat}
Index: rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/basic/ClassAsStringType.java
===================================================================
--- rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/basic/ClassAsStringType.java   (revision 1136667)
+++ rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/basic/ClassAsStringType.java   (working copy)
@@ -30,35 +30,48 @@
 /**
  * 
  */
-public class CharacterAsStringType extends AegisType {
+public class ClassAsStringType extends AegisType {
     
-    public static final QName CHARACTER_AS_STRING_TYPE_QNAME 
-        = new QName(""http://cxf.apache.org/aegisTypes"", ""char"");
+    public static final QName CLASS_AS_STRING_TYPE_QNAME 
+        = new QName(""http://cxf.apache.org/aegisTypes"", ""class"");
     
-    private IntType intType;
+    private StringType stringType;
     
-    public CharacterAsStringType() {
-        intType = new IntType();
+    public ClassAsStringType() {
+        stringType = new StringType();
     }
 
     /** {@inheritDoc}*/
     @Override
-    public Object readObject(MessageReader reader, Context context) throws DatabindingException {
-        Integer readInteger = (Integer)intType.readObject(reader, context);
-        return new Character((char)readInteger.intValue());
+    public Object readObject(MessageReader reader, Context context)
+        throws DatabindingException {
+        String className = (String) stringType.readObject(reader, context);
+        Class cls = null;
+        
+        try {
+            context.getClass().getClassLoader().loadClass(className);
+        } catch (ClassNotFoundException x) {
+            throw new DatabindingException(""Unable to dynamically load class '""
+                    + className + ""'"", x);
+        }
+
+        return cls;
     }
 
     /** {@inheritDoc}*/
     @Override
     public void writeObject(Object object, MessageWriter writer, Context context) 
         throws DatabindingException {
-        Character charObject = (Character) object;
-        intType.writeObject(Integer.valueOf(charObject.charValue()), writer, context);
+        if (object == null) {
+            stringType.writeObject(null, writer, context);
+        } else {
+            Class cls = (Class) object;
+            stringType.writeObject(cls.getName(), writer, context);
+        }
     }
 
     @Override
     public boolean usesUtilityTypes() {
         return true;
     }
-
 }
{noformat}

\\
...then I added that one to the DefaultTypeMapping:
{noformat}
Index: rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/DefaultTypeMapping.java
===================================================================
--- rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/DefaultTypeMapping.java        (revision 1136667)
+++ rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/DefaultTypeMapping.java        (working copy)
@@ -47,6 +47,7 @@
 import org.apache.cxf.aegis.type.basic.CalendarType;
 import org.apache.cxf.aegis.type.basic.CharacterAsStringType;
 import org.apache.cxf.aegis.type.basic.CharacterType;
+import org.apache.cxf.aegis.type.basic.ClassAsStringType;
 import org.apache.cxf.aegis.type.basic.DateTimeType;
 import org.apache.cxf.aegis.type.basic.DoubleType;
 import org.apache.cxf.aegis.type.basic.FloatType;
@@ -373,6 +374,10 @@
                         CharacterAsStringType.CHARACTER_AS_STRING_TYPE_QNAME,
                         new CharacterAsStringType());
 
+        defaultRegister(tm, defaultNillable, Class.class, 
+                        ClassAsStringType.CLASS_AS_STRING_TYPE_QNAME,
+                        new ClassAsStringType());
+
         defaultRegister(tm, defaultNillable, javax.xml.datatype.Duration.class, XMLSchemaQNames.XSD_DURATION,
                             new org.apache.cxf.aegis.type.java5.DurationType());
         defaultRegister(tm, defaultNillable, javax.xml.datatype.XMLGregorianCalendar.class,
{noformat}

\\
...and I added the declaration in ""META-INF/cxf/aegisTypes.xsd"":
{noformat}
Index: rt/databinding/aegis/src/main/resources/META-INF/cxf/aegisTypes.xsd
===================================================================
--- rt/databinding/aegis/src/main/resources/META-INF/cxf/aegisTypes.xsd (revision 1136667)
+++ rt/databinding/aegis/src/main/resources/META-INF/cxf/aegisTypes.xsd (working copy)
@@ -27,4 +27,8 @@
       </xs:restriction>
     </xs:simpleType>
 
+    <xs:simpleType name=""class"">
+      <xs:restriction base=""xs:string"" />
+    </xs:simpleType>
+
 </xs:schema>
{noformat}

\\
However, I still have to manually map it to that type at runtime, e.g.:
{noformat}
<mappings>
    <mapping>
        <method name=""createInstance"">
            <parameter index=""0"" class=""java.lang.Class"" type=""org.apache.cxf.aegis.type.basic.ClassAsStringType""/>
        </method>
    </mapping>
</mappings>
{noformat}

\\
That would not be a problem unless the generated WSDL was consistent, but the type declaration for ""{{class}}"" is still missing (although being referenced from the service method request type).","24/Oct/12 21:20;dkulp;
This is not something we'd expose by default as having the ability to load random classes like that is definitely a huge issue.   However, I did write a system test in rt/databinding/aegis/src/test/java/org/apache/cxf/aegis/type/java5/ClassTest.java  that can show how to create the custom type, register it, create the schema, etc....   It did require a minor bug fix in the aegis databinding though so it will require 2.7.1/2.6.4/2.5.7 to work.",,,,,,,,,,,,,,,,,,,,,,,,,
JAXBEncoderDecoder.marshallException fails if exception object contains a map,CXF-3611,12511261,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,k_o_,k_o_,22/Jun/11 17:09,19/Oct/11 17:30,14/Mar/19 02:29,14/Sep/11 17:58,2.4.1,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,JAXB Databinding,,,,0,,,,,,"In the method JAXBEncoderDecoder.marshallException a Map is detected as an array. 
Finally in the method writeArrayObject in line 414 int len = Array.getLength(objArray); an exception is thrown.",Java 1.6.0 Windows/Linux,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-14 17:58:07.418,,,no_permission,,,,,,,,,,,,,46295,,,Wed Sep 14 17:58:07 UTC 2011,,,,,,0|i0b7p3:,63359,,,,,,,,"14/Sep/11 17:58;dkulp;
Fixed the detection of maps as an array, but since JAXB doesn't really support Maps very well, this is likely to blow up in other areas.  If you need a map, I'd suggest defining a fault bean and using that in the faultInfo and providing correct mappings and such for the map (XmlTypeAdapter things).",,,,,,,,,,,,,,,,,,,,,,,,,,
Oneway CXF service having problem with Gemini-Web​/Tomcat-ca​talina,CXF-3609,12511127,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,21/Jun/11 17:45,19/Aug/11 03:30,14/Mar/19 02:29,24/Jun/11 11:23,2.3.5,2.4.1,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Transports,,,,0,,,,,,"Hi, 
There seems to be some IO handling problem in oneway CXF services on 
equinox with the latest gemini-web. 
It think I have identified the cause of the problem and that we could 
fix it in CXF. But I would like to get your comments. 

The problem happens sporadically for oneway services when the 
StaxInInterceptor tries to instantiate the XMLStreamReader from the 
InputStream object. In this test scenario, a series of oneway calls 
are sequentially sent to a CXF oneway service. And sporadically, some 
calls result in the following exception, that is indicating the input 
stream is already closed, even though the data should be available in 
the stream. 

Caused by: java.lang.RuntimeException: Couldn't parse stream. 
        at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:1143) 
~[na:na] 
        at org.apache.cxf.interceptor.StaxInInterceptor.handleMessage(StaxInInterceptor.java:105) 
~[na:na] 
        ... 27 common frames omitted 
Caused by: com.ctc.wstx.exc.WstxIOException: Stream closed 
        at com.ctc.wstx.stax.WstxInputFactory.doCreateSR(WstxInputFactory.java:536) 
~[na:na] 
        at com.ctc.wstx.stax.WstxInputFactory.createSR(WstxInputFactory.java:585) 
~[na:na] 
        at com.ctc.wstx.stax.WstxInputFactory.createSR(WstxInputFactory.java:610) 
~[na:na] 
        at com.ctc.wstx.stax.WstxInputFactory.createXMLStreamReader(WstxInputFactory.java:316) 
~[na:na] 
        at org.apache.cxf.staxutils.StaxUtils.createXMLStreamReader(StaxUtils.java:1141) 
~[na:na] 
        ... 28 common frames omitted 
Caused by: java.io.IOException: Stream closed 
        at org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:308) 
~[na:na] 
        at org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:202) 
~[na:na] 
        at org.apache.cxf.transport.servlet.LogServletInputStream.read(LogServletInputStream.java:80) 
~[na:na] 
        at com.ctc.wstx.io.BaseReader.readBytes(BaseReader.java:155) ~[na:na] 
        at com.ctc.wstx.io.UTF8Reader.loadMore(UTF8Reader.java:368) ~[na:na] 
        at com.ctc.wstx.io.UTF8Reader.read(UTF8Reader.java:111) ~[na:na] 
        at com.ctc.wstx.io.ReaderBootstrapper.initialLoad(ReaderBootstrapper.java:250) 
~[na:na] 
        at com.ctc.wstx.io.ReaderBootstrapper.bootstrapInput(ReaderBootstrapper.java:133) 
~[na:na] 
        at com.ctc.wstx.stax.WstxInputFactory.doCreateSR(WstxInputFactory.java:531) 
~[na:na] 

I didn't see this problem with jetty before and started to see this 
problem sporadically right after switching to gemini-web. 

...
Further details described in:
http://cxf.547215.n5.nabble.com/Oneway-CXF-service-having-problem-with-Gemini-Web-Tomcat-catalina-td4500191.html
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5828,,,2011-06-21 17:45:02.0,,,,,,0|i0b8vz:,63552,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-RS selection algorithm always prefers resource methods to subresource locators,CXF-3608,12511081,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,21/Jun/11 11:09,19/Aug/11 03:30,14/Mar/19 02:29,21/Jun/11 11:37,,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,JAX-RS,,,,0,,,,,,"JAX-RS 1.1 spec says:

Sort E using the number of literal characters in each member as the primary key (descending order), the number of capturing groups as a secondary key (descending order), the number of capturing groups with non-default regular expressions (i.e. not '([^ /]+?)') as the tertiary key (descending order), and the source of each member as quaternary key sorting those derived from Tmethod ahead of those derived from Tlocator. 

At the moment CXF JAX-RS using the ""the source of each member"" criteria as the primary key, thus

given

@Path(""/"")
public Resource {
    @Path(""somepath"") 
    Subresource getSub() {}

    @GET @Path(""{id}"")
    Book get(@PathParam(""id"") String id) {} 
}

get() method will always be preferred even though a subresource locator has a more specific path expression",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5811,,,2011-06-21 11:09:25.0,,,,,,0|i0b8pj:,63523,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF STS Provider framework only works with Issue Operation,CXF-3606,12510974,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,20/Jun/11 16:04,19/Aug/11 03:30,14/Mar/19 02:29,20/Jun/11 16:23,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,,,,,0,,,,,,"
The STS Provider framework added as part of CXF 2.4.0 only works with the IssueOperation. There is a bug in SecurityTokenServiceProvider when getting the declared methods of each of the Operations - this is all done using the ""IssueOperation"" class, meaning that none of the other operations work. ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5809,,,2011-06-20 16:04:10.0,,,,,,0|i0b8qf:,63527,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression in SecureConversationInInterceptor.STSInvoker Expiry value,CXF-3605,12510970,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,20/Jun/11 15:21,19/Aug/11 03:30,14/Mar/19 02:29,20/Jun/11 15:29,2.4.1,,,,,,,,,,,,,,,,,2.4.2,2.5,,,,,,,0,,,,,,"
There has been a regression in CXF 2.4+ in the value of the expiry of a token issued by the SecureConversationInInterceptor.STSInvoker - a token is now valid for 5000 minutes instead of 5 minutes.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5825,,,2011-06-20 15:21:48.0,,,,,,0|i0b8sf:,63536,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXBDataBinding swallowing exception,CXF-3598,12510695,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,17/Jun/11 16:55,19/Aug/11 03:30,14/Mar/19 02:29,17/Jun/11 17:16,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,Tooling,,,,0,,,,,,"
If an IOException occurs while generating the types in the wsdl2java tool, the exception is completely swallowed and you just get a generic ""Failed to generate types"" error message.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5883,,,2011-06-17 16:55:23.0,,,,,,0|i0b8pr:,63524,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM client keeps using an expired source sequence,CXF-3597,12510589,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,16/Jun/11 15:38,19/Aug/11 03:30,14/Mar/19 02:29,17/Jun/11 13:45,2.3.4,2.4,,,,,,,,,,,,,,,,2.4.2,2.5,,,WS-* Components,,,,0,,,,,,"The WS-RM client does not check if the current source sequence has expired or not. Consequently, the client keeps using the expired source sequence to transmit the messages.

When the current sequence has been expired, a new sequence should be created as in the handling of the very first message.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5788,,,2011-06-16 15:38:22.0,,,,,,0|i0b8q7:,63526,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM server does not honor the Expire value set in th eclient's CreateSequence message,CXF-3594,12510544,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,16/Jun/11 08:34,19/Aug/11 03:30,14/Mar/19 02:29,17/Jun/11 13:44,2.3.4,2.4,,,,,,,,,,,,,,,,2.4.2,2.5,,,WS-* Components,,,,0,,,,,,"When processing the CreateSequence request that has its Expires value set, the WS-RM server must create a new sequence accordingly and set the Expires duration of the CreateSequenceResponse to the duration equal or lesser to the Expires value set in the CreateSequence request.

There is a bug in the code that prevents this to happen.
",,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5909,,,2011-06-16 08:34:32.0,,,,,,0|i0b8rj:,63532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the generated wadl contain empty grammar section even though only jaxb classes are used,CXF-3591,12510387,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sashablank,sashablank,15/Jun/11 02:01,19/Aug/11 03:30,14/Mar/19 02:29,20/Jun/11 21:38,2.4,,,,,,,,,,,,,,,,,2.4.2,2.5,,,JAX-RS,,,,0,,,,,,"when deploying the following service interface below with the jaxb classes one of them below
the generated wadl (in firefox by going to wadl url) does not have generated schema and grammar section is empty.

I tried setting properties to WADLGenerator with no effect.
Is it a bug (I have the same problem with version 2.3.0) or I need to configure something properly.
I am using jdk 1,5.

The configuration of the jaxrs server is below
<jaxrs:server id=""myService"" address=""/"" staticSubresourceResolution = ""true"">
        <jaxrs:serviceBeans>
        <ref bean=""rateManagerResource""/>
     
         </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
        	<entry key=""json"" value=""application/json""/>
            <entry key=""xml"" value=""application/xml"" />
        </jaxrs:extensionMappings>
    </jaxrs:server> 

@Path(""/riskfoundation"")
public interface RateManagerResource {
	@GET
	@Path(""/ratesets"")
	@Produces({ ""application/xml"" })
	@WadlElement(response = RateSetRes.class)
	public Response getAllRateSets();
	
	@GET
    @Path(""/curves"")
    @Produces({ ""application/xml"" })
    public Response getAllCurves();
    
	
	@GET
	@Path(""/ratesets/{name}"")
	@Produces({ ""application/xml"" })
	public List<CurveDetailRes> getRateInput(@PathParam(""name"") String name);
	
	@GET
    @Path(""/ratesets({id})"")
    @Produces({ ""application/xml"" })
    public Response getRateInput(@PathParam(""id"") long id);

	
	@POST
	@Path(""/ratesets({id})"")
	@Consumes({""application/xml""})
	@Produces({""application/xml""})
	public Response postRateDataWithId(@PathParam(""id"") long id,List<CurveDetailRes> rateData);

	@POST
    @Path(""/ratesets/{name}"")
    @Consumes({""application/xml""})
    @Produces({""application/xml""})
    public Response postRateDataWithName(@PathParam(""name"") String name,List<CurveDetailRes> rateData);

}






@XmlRootElement(name = ""rateset"", namespace=""http://analytics.moodys.com/"")
public class RateSetRes extends RepresentationWithLinks{
    public RateSetRes() {
    }
    private long id;
    private String name;
    
    public void setId(long id) {
        this.id = id;
    }
    @XmlAttribute
    public long getId() {
        return id;
    }
    public void setName(String name) {
        this.name = name;
    }
    public String getName() {
        return name;
    }
}
",cxf servlet on tomcat 6.0.29,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-06-15 16:44:01.013,,,no_permission,,,,,,,,,,,,,5807,,,Wed Jun 15 16:44:01 UTC 2011,,,,,,0|i0b8tj:,63541,,,,,,,,"15/Jun/11 16:44;sergey_beryozkin;I think the cause of it is that 
@WadlElement(response = RateSetRes.class)

is only checked during the linking process but not at the initial context creation time...Will get it fixed for 2.4.2

By the way 

List<CurveDetailRes>

won't link to a generated grammar.

but you can create a schema yourself and configure WADLGenerator to link to it and use @XmlName annotations to 'connect' types with the actual schema
",,,,,,,,,,,,,,,,,,,,,,,,,,
Exception when setPrettyLogging(true) for LoggingInInterceptor (or LoggingOutInterceptor),CXF-3590,12510324,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,dany305,dany305,14/Jun/11 15:58,19/Aug/11 03:30,14/Mar/19 02:29,15/Jun/11 06:38,2.4.1,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Core,,,,0,,,,,,"to reproduce

create own logging interceptor

public class PrettyLoggingInInterceptor extends LoggingInInterceptor {

  @Override
  protected void writePayload(StringBuilder builder, CachedOutputStream cos,
      String encoding, String contentType)
      throws Exception {

    setPrettyLogging(true);

    super.writePayload(builder, cos, encoding, contentType);
  }

}


1. add PrettyLoggingInInterceptor to web service 
2. run client 
3. javax.wsdl.WSDLException: WSDLException arise because some client request have no content (e.g get wsdl)


workaround

public class PatchPrettyLoggingInInterceptor extends LoggingInInterceptor {

  @Override
  protected void writePayload(StringBuilder builder, CachedOutputStream cos,
      String encoding, String contentType)
      throws Exception {

    setPrettyLogging(true);

    //patch
    if (cos.size() == 0)
      setPrettyLogging(false);

    super.writePayload(builder, cos, encoding, contentType);
  }

}

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-06-15 02:17:09.659,,,no_permission,,,,,,,,,,,,,5801,,,Wed Jun 15 06:38:03 UTC 2011,,,,,,0|i0b8sn:,63537,,,,,,,,"15/Jun/11 02:17;njiang;It's not safe to change the setPrettyLogging(true) when you write the message, as the interceptor will be called by multiple thread. We need to fix it in the super.writePayload(builder, cos, encoding, contentType).","15/Jun/11 06:38;njiang;Applied patch into trunk, 2.4.x-fixes, and 2.3.x-fixes branch.",,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-RS clients ignore custom service QNames when creating the service model ,CXF-3586,12510294,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,14/Jun/11 10:22,19/Aug/11 03:30,14/Mar/19 02:29,14/Jun/11 11:30,2.3.5,2.4.1,2.5,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5900,,,2011-06-14 10:22:44.0,,,,,,0|i0b8tr:,63542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLGetInterceptor throws NullPointException when using EndpointSelectionInterceptor,CXF-3585,12510088,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,veaven,veaven,13/Jun/11 11:12,19/Aug/11 03:30,14/Mar/19 02:29,14/Jun/11 10:26,2.4,,,,,,,,,,,,,,,,,2.4.2,2.5,,,Core,,,,0,,,,,,"Hi, 
  It looks like WSDLGetInterceptor assumes that the current exchange has one Endpoint, however, there is the case we can use EndpointSelectionInterceptor to get the Endpoint later, so the Endpoint could be null and which causes NullPointException .

e.g. WSDLGetInterceptor expects one Endpoint,
{code}
class WSDLGetInterceptor {
        //cannot have two wsdl's being written for the same endpoint at the same
        //time as the addresses may get mixed up
        synchronized (message.getExchange().getEndpoint()) {  <-- NullPointException 
 ...
{code}

However, the Endpoint is null at this moment and it will be set in EndpointSelectionInterceptor later.
{code}
    public void handleMessage(Message message) throws Fault {
        Exchange ex = message.getExchange();
        Set<Endpoint> endpoints = CastUtils.cast((Set)ex.get(MultipleEndpointObserver.ENDPOINTS));

        Endpoint ep = selectEndpoint(message, endpoints);

        if (ep == null) {
            return;
        }

        ex.put(Endpoint.class, ep);
{code}


David",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-06-14 07:20:59.222,,,no_permission,,,,,,,,,,,,,5895,,,Sat Jun 18 07:16:32 UTC 2011,,,,,,0|i0b8qn:,63528,,,,,,,,"14/Jun/11 03:10;veaven;Instead of using _message.getExchange().getEndpoint()_, I think we can use the EndpointInfo from Destination, because every Destination should have EndpointInfo and it can also make sure we do not have two wsdl for the same endpoint.

{code}
AbstractDestination destination = (AbstractDestination) message.getDestination();
synchronized (destination.getEndpointInfo()) {
...
writeResponse(message, baseUri, map, ctx, destination.getEndpointInfo(), os);
}
{code}

David","14/Jun/11 07:20;ffang;Hi David,

I'm wondering how you use EndpointSelectionInterceptor?
By my test, If there's an EndpointSelectionInterceptor in the InInterceptor Chain, it always get invoked before the WSDLGetInterceptor, so I'm curious how you see the NPE. We may not use same scenario, so if you can append a testcase, it would be great.

Anyway, I think add 
getAfter().add(EndpointSelectionInterceptor.class.getName());
for WSDLGetInterceptor constructor which ensure WSDLGetInterceptor always get invoked after EndpointSelectionInterceptor(as both are in same phase) if there's an EndpointSelectionInterceptor in the chain should be good.

Freeman
","14/Jun/11 10:26;ffang;commit fix
http://svn.apache.org/viewvc?rev=1135457&view=rev for trunk
http://svn.apache.org/viewvc?rev=1135465&view=rev for 2.4.x branch","18/Jun/11 07:16;veaven;Thanks Freeman.
I extend EndpointSelectionInterceptor to choose different Endpoint in my cxf server, so I did not use EndpointSelectionInterceptor  directly.

David",,,,,,,,,,,,,,,,,,,,,,,
?wsdl does not rewrite soap:address for soap1.2 service,CXF-3584,12509874,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,massfords,massfords,10/Jun/11 20:42,19/Aug/11 03:30,14/Mar/19 02:29,11/Jun/11 08:37,2.4,,,,,,,,,,,,,,,,,2.3.6,2.4.2,2.5,,Simple Frontend,,,,0,,,,,,"*org.apache.cxf.frontend.WSDLGetInterceptor* is responsible for constructing the WSDL in response to a ?wsdl request. This class will rewrite the soap:address/@location attribute to match the fully qualified uri for the service. 

The rewrite for the address occurs in updateDoc but the code there is only checking for the soap:address element within the 1.1 namespace.

For example:
{code:java}
  List<Element> sadEls = DOMUtils.findAllElementsByTagNameNS(el,
                       ""http://schemas.xmlsoap.org/wsdl/soap/"",
                       ""address"");
  for (Element soapAddress : sadEls) {
    soapAddress.setAttribute(""location"", base);
  }
{code}

This code should be changed to support 1.2 as well.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-06-11 08:37:51.841,,,no_permission,,Novice,,,,,,,,,,,5802,,,Sat Jun 11 08:37:51 UTC 2011,,,,,,0|i0b933:,63584,,,,,,,,"11/Jun/11 08:37;ffang;commit fix
http://svn.apache.org/viewvc?rev=1134523&view=rev for trunk
http://svn.apache.org/viewvc?rev=1134858&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1134528&view=rev for 2.3.x branch
",,,,,,,,,,,,,,,,,,,,,,,,,,
Reading attachments using the middle of large buffer results in corruption,CXF-3582,12509779,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,dkulp,dkulp,09/Jun/11 23:59,08/Aug/11 14:43,14/Mar/19 02:29,10/Jun/11 00:41,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Core,,,,0,,,,,,"
When reading the attachment streams using ins.read(buf, 300, 500) or similar (using the middle of a  byte buffer), when a boundary is reached, not all the data is pushed back.   The result is that attachment headers get lost and thus attachments are not found.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5805,,,2011-06-09 23:59:19.0,,,,,,0|i0b8wn:,63555,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS JAXB providers are missing  XmlJavaTypeAdapter annotation in readFrom unless it is available in resource method annotations ,CXF-3578,12509587,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,08/Jun/11 14:01,08/Aug/11 14:43,14/Mar/19 02:29,08/Jun/11 14:06,2.3.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5912,,,2011-06-08 14:01:27.0,,,,,,0|i0b953:,63593,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential overflow for lifetime calculation in STSClient,CXF-3576,12509514,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,owulff,owulff,07/Jun/11 21:07,08/Aug/11 14:43,14/Mar/19 02:29,08/Jun/11 07:29,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,,,,,,"This code performs integer multiply and then converts the result to a long:
expirationTime.setTime(creationTime.getTime() + (ttl * 1000));

Fix:
expirationTime.setTime(creationTime.getTime() + (ttl * 1000L));
",,,,,,,,,,,,,,,,,08/Jun/11 06:25;owulff;STSClient.patch;https://issues.apache.org/jira/secure/attachment/12481778/STSClient.patch,07/Jun/11 21:31;owulff;patch.diff;https://issues.apache.org/jira/secure/attachment/12481745/patch.diff,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-06-08 05:19:59.186,,,no_permission,,,,,,,,,,,,,5810,,,Wed Jun 08 07:29:57 UTC 2011,,,,,,0|i0b8sv:,63538,,,,,,,,07/Jun/11 21:31;owulff;diff of patch attached,"08/Jun/11 05:19;chris@die-schneider.net;Hi Oli. This is no ordinary patch file. How do I apply this?
","08/Jun/11 06:25;owulff;I've updated the patch and attached again.

I used the following tool to create the patch:
diff -crB <old> <new>
",08/Jun/11 07:29;chris@die-schneider.net;Patch applied Jenkins tests currently running,,,,,,,,,,,,,,,,,,,,,,,
JMSPropertyType should support non string properties,CXF-3574,12509480,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,rakeshmalpani,rakeshmalpani,07/Jun/11 16:20,10/Apr/17 19:04,14/Mar/19 02:29,23/Mar/17 13:55,2.3,,,,,,,,,,,,,,,,,3.0.13,3.1.11,3.2.0,,Core,,,,0,,,,,,"The class: JMSPropertyType accepts only string property values, this causes major problems when other object types need to be sent.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,46765,,,2011-06-07 16:20:30.0,,,,,,0|i0sxof:,166933,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF/JAX-RS can not handle encoded urls that contain a jsessionid,CXF-3573,12509473,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,xi.zhang,xi.zhang,07/Jun/11 15:14,08/Aug/11 14:43,14/Mar/19 02:29,08/Jun/11 12:18,2.2.12,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"CXF/JAX-RS stack can not handle encoded urls that contain a jsessionid, 
I get the warning in the logger after ich try to get data thru REST URL that contains a session cookie lsited below
http://localhost:8099/workplace/service;jsessionid=ctjy3rhkbyya1j73rceiw2rup?patientId=1109&responseTimeZone=America%2FLos_Angeles&noCache=1307087541416


Jun 7, 2011 4:58:40 PM org.apache.cxf.jaxrs.utils.JAXRSUtils findTargetMethod
WARNING: No operation matching request path /;jsessionid=ctjy3rhkbyya1j73rceiw2rup is found, HTTP Method : GET, ContentType : */*, Accept : text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,.
Jun 7, 2011 4:58:40 PM org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse
WARNING: WebApplicationException has been caught : no cause is available
2011-06-07 16:58:40,457 WARN  o.a.cxf.jaxrs.utils.JAXRSUtils[]: No operation matching request path /;jsessionid=ctjy3rhkbyya1j73rceiw2rup is found, HTTP Method : GET, ContentType : */*, Accept : text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,.
2011-06-07 16:58:40,473 WARN  o.a.c.j.i.WebApplicationExceptionMapper[]: WebApplicationException has been caught : no cause is available
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-06-07 15:18:53.673,,,no_permission,,,,,,,,,,,,,5904,,,Wed Jun 08 12:24:11 UTC 2011,,,,,,0|i0b8rr:,63533,,,,,,,,"07/Jun/11 15:18;sergey_beryozkin;Hi, can you please try CXF 2.3.4 or CXF 2.4.0 ? There were relevant changes there.

CXF 2.2.x branch is not officially supported anymore

thanks","07/Jun/11 16:26;xi.zhang;No improvement in the CXF releases tested: 2.3.3, 2.3.4, 2.4.0
I got always same warning

Jun 7, 2011 6:21:51 PM org.apache.cxf.jaxrs.utils.JAXRSUtils findTargetMethod
WARNING: No operation matching request path /;jsessionid=9fav5csenpgyuqq06ffgehpy is found, HTTP Method : GET, ContentType : */*, Accept : text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,.
Jun 7, 2011 6:21:51 PM org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse
WARNING: WebApplicationException has been caught : no cause is available
2011-06-07 18:21:51,278 WARN  o.a.cxf.jaxrs.utils.JAXRSUtils[]: No operation matching request path /;jsessionid=9fav5csenpgyuqq06ffgehpy is found, HTTP Method : GET, ContentType : */*, Accept : text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,.
2011-06-07 18:21:51,293 WARN  o.a.c.j.i.WebApplicationExceptionMapper[]: WebApplicationException has been caught : no cause is available
","07/Jun/11 20:17;sergey_beryozkin;I'll investigate.
How is your root resource annotated ? Particularly, what are class and resource method Path values ?","08/Jun/11 07:38;xi.zhang;Hi,
for your request, I have no annotated Path direct in the java resource class, I configured the path only in the Spring ApplicationContext thru the address attribute like below

	<jaxrs:server id=""reviewHistoryService"" address=""/ReviewHistory"">
		<jaxrs:serviceBeans>
			<ref bean=""reviewHistoryResource"" />
		</jaxrs:serviceBeans>
	</jaxrs:server>
        <bean id=""reviewHistoryResource"" ...

by the way , if I enter a url to invoke REST services without the jsessionid, I can get the data response correctly, the JAX-RS stack can map this URL to matching operations.

Hopefully this can help you to clarify the issue.

Regards ","08/Jun/11 09:57;sergey_beryozkin;I need to know how reviewHistoryResource is annotated.
Are you saying it looks like this:
// no @Path defaults to @Path(""/"")
public class ReviewHistoryResource {
  @GET
  public void getHistory() {...}

}

In other words, a request URI ends with something like

/ReviewHistory;jSessionId=somevalue?query1=value&query2=value

?","08/Jun/11 10:23;sergey_beryozkin;Reproduced it; happens only when root resource @Path value is empty or equal to ""/""","08/Jun/11 12:24;sergey_beryozkin;By the way, the workaround is to have jaxrs:server/@address = ""/""
and push ""/ReviewHistory"" to the root resource",,,,,,,,,,,,,,,,,,,,
wsa wrongly assumes that code using WSA must be employing a request-reply exchange.,CXF-3560,12508793,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ema,ema,31/May/11 05:46,08/Aug/11 14:43,14/Mar/19 02:29,07/Jun/11 03:17,,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,WS-* Components,,,,0,,,,,,"JaxWsServiceFactoryBean.buildWSAActions wrongly assumes that each wsa operation has output:
        if (action == null && addressing != null) {
            operation.getInput().addExtensionAttribute(JAXWSAConstants.WSAM_ACTION_QNAME,
                                                       inputAction);
            operation.getInput().addExtensionAttribute(JAXWSAConstants.WSAW_ACTION_QNAME,
                                                       inputAction);
            operation.getOutput().addExtensionAttribute(JAXWSAConstants.WSAM_ACTION_QNAME,
                                                       computeAction(operation, ""Response""));
            operation.getOutput().addExtensionAttribute(JAXWSAConstants.WSAW_ACTION_QNAME,
                                                        computeAction(operation, ""Response""));
        } else {

        }
The caused NPE exception:
Caused by: java.lang.NullPointerException
    at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildWSAActions(JaxWsServiceFactoryBean.java:547)
    at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.createOperation(JaxWsServiceFactoryBean.java:620)
    at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createInterface(ReflectionServiceFactoryBean.java:903)
    at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:429)
    at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:680)
    at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:501)
    at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:241)
    at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:202)
    at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
    at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:157)
    at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:192)
    at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:433)
    at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:322)",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5896,,,2011-05-31 05:46:33.0,,,,,,0|i0b8u7:,63544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JaxWsProxyFactoryBean.create is not thread-safe,CXF-3558,12508750,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,nurkiewicz,nurkiewicz,30/May/11 20:00,08/Aug/11 14:43,14/Mar/19 02:29,31/May/11 09:59,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-WS Runtime,,,,0,,,,,,"While running {{JaxWsProxyFactoryBean.create}} concurrently I encountered the following exception:

{code}Caused by: java.util.ConcurrentModificationException
	at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:761)
	at java.util.LinkedList$ListItr.next(LinkedList.java:696)
	at org.apache.cxf.service.factory.AbstractServiceFactoryBean.sendEvent(AbstractServiceFactoryBean.java:71)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:238)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:202)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:90)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:152)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:142)
{code}

Although not documented (?), {{org.apache.cxf.service.factory.ReflectionServiceFactoryBean#create}} called somewhere during endpoint creation is {{synchronized}} which suggests whole {{create}} is thread-safe, but apparently it's not.

I managed to discover source of this problem. I captured two threads: one ({{pool-1-thread-4}}) entered synchronized {{ReflectionServiceFactoryBean#create}}, the second one ({{pool-1-thread-2}}) didn't made there yet but instead it calls {{AbstractServiceFactoryBean.setBus}} outside of the {{synchronized}} block. This causes the {{org.apache.cxf.service.factory.AbstractServiceFactoryBean#listeners}} to be updated, making the former thread being susceptible to {{ConcurrentModificationException}}. Stack dumps attached.

Please either fix concurrency issue (making {{listeners}} instance of {{java.util.concurrent.CopyOnWriteArrayList}} might not be enough though) or document that {{JaxWsProxyFactoryBean.create}} is not thread-safe.",,,,,,,,,,,,,,,,,30/May/11 20:01;nurkiewicz;CXF-3558.txt;https://issues.apache.org/jira/secure/attachment/12480871/CXF-3558.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-31 02:27:07.218,,,no_permission,,Moderate,,,,,,,,,,,5891,,,Wed Jun 01 06:37:00 UTC 2011,,,,,,0|i0b8y7:,63562,,,,,,,,31/May/11 02:27;njiang;You don't need to create the proxy per thread. CXF client proxy is thread safe :),"31/May/11 02:55;ffang;Hi Tomasz,

As Willem mentioned here, the proxy itself is actually thread safe already, do you really need create multiple proxies per thread, I can't image a necessary scenario for it, could you please clarify your requirement?
Moreover, I don't think currently the way to create a proxy is thread safe by design, besides the create method, we also have lots of other variable for ClientProxyFactoryBean like username/password/properties/bus/features/databinding which can cause uncertain if you try to set those from different thread.

So the correct way is create only one proxy and use it in different thread.

Freeman","31/May/11 06:30;nurkiewicz;Thank you very much for your comment. I am perfectly aware client is thread-safe once created and this is the way I use it typically. But I started to play a bit with clustering/failover features in Apache CXF which state in their JavaDocs ({{LoadDistributorFeature}} and {{FailoverTargetSelector}}): _Note that this feature changes the conduit on the fly and thus makes the Client not thread safe._

So my solution was to pool the clients and create as many clients as necessary using just one factory (username/password etc. won't change once configured). And this is where the problem manifests - if two threads simultaneously try to create two CXF clients (since they shouldn't share the same one due to the load-balancing/failover restrictions mentioned above). I wrote some small [article|http://nurkiewicz.blogspot.com/2011/05/enabling-load-balancing-and-failover-in.html] about it.","31/May/11 09:50;ffang;Hi,

Thanks for your clarification.
I get your point, so if your factory won't change any properties once configured, we can synchronized ClientProxyFactoryBean create() method, as well as use ModCountCopyOnWriteArrayList for ListenerList, ensure that the proxy creation is thread safe.

Freeman","31/May/11 09:59;ffang;commit fix
http://svn.apache.org/viewvc?rev=1129592&view=rev for trunk
http://svn.apache.org/viewvc?rev=1129594&view=rev for 2.3.x branch","01/Jun/11 06:37;ffang;Hi Tomasz,

Btw, your blog about ""Enabling load balancing and failover in Apache CXF"" is really good, I've added the link to cxf resources and articles list.

Thanks
Freeman",,,,,,,,,,,,,,,,,,,,,
Wrong log message logged by AbstractStaticFailoverStrategy,CXF-3555,12508654,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,ffang,nurkiewicz,nurkiewicz,29/May/11 14:03,08/Aug/11 14:43,14/Mar/19 02:29,30/May/11 01:32,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Core,,,,0,,,,,,"Class {{org.apache.cxf.clustering.AbstractStaticFailoverStrategy}} logs the following message:

{code}FAILING_OVER_TO_ADDRESS_OVERRIDE{code}

In line 74. The correct message (defined in {{/org/apache/cxf/clustering/Messages.properties}}) is:

{code}failing over to alternate address {0}{code}

Message is not resolved due to typo in aforementioned {{properties}} file. Patch included. Please verify whether all other messages are displayed correctly.",,,,,,,,,,,,,,,,,29/May/11 14:06;nurkiewicz;CXF-3555.patch;https://issues.apache.org/jira/secure/attachment/12480781/CXF-3555.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-30 01:32:13.32,,,no_permission,,Novice,,,,,,,,,,,5890,,,Mon May 30 01:32:13 UTC 2011,,,,,,0|i0b8w7:,63553,,,,,,,,"30/May/11 01:32;ffang;apply patch on behalf of Tomasz Nurkiewicz with thanks
http://svn.apache.org/viewvc?rev=1128979&view=rev for trunk
http://svn.apache.org/viewvc?rev=1128980&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Setting log4j level to org.apache.cxf makes the message failed to sent,CXF-3554,12508626,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,yguerro,yguerro,28/May/11 17:12,09/Jun/11 00:20,14/Mar/19 02:29,31/May/11 18:00,2.3.4,2.4,,,,,,,,,,,,,,,,2.4.1,,,,JAXB Databinding,,,,0,,,,,,"When updating the logging level for the package org.apache.cxf the messages fails to be sent with the following exception:
17:40:43,548 (LogUtils.java:371) - Interceptor for {http://wsdl.example.com/Baseline_v1_v2}Baseline_Service#{http://wsdl.example.com/Baseline_v1}MyOperation has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Could not send Message.
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:64)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:484)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:414)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:317)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:269)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy26.myoperation(Unknown Source)
	at com.example.ws.client.MyClient.myoperation(MyClient.java:41)
	at com.example.ws.test.WebServiceTestCase.setUp(WebServiceTestCase.java:42)
	at com.example.ws.test.MyTest.setUp(MyTest.java:29)
	at junit.framework.TestCase.runBare(TestCase.java:128)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.io.IOException: IOException invoking https://test.webservices.example.com/si/Baseline_v1: Stream is closed
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1385)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1370)
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:614)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	... 24 more
Caused by: java.io.IOException: Stream is closed
	at sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream.checkError(HttpURLConnection.java:2518)
	at sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream.write(HttpURLConnection.java:2507)
	at org.apache.cxf.io.AbstractWrappedOutputStream.write(AbstractWrappedOutputStream.java:46)
	at org.apache.cxf.io.AbstractThresholdOutputStream.write(AbstractThresholdOutputStream.java:69)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1342)
	... 29 more

Perhaps above line in logs may help:

17:40:42,923 (HTTPConduit.java:876) - Conduit '{http://wsdl.example.com/Baseline_v1_v2}Baseline_Port.http-conduit' has been (re)configured for plain http.
17:40:42,923 (HTTPConduit.java:358) - No Trust Decider configured for Conduit '{http://wsdl.example.com/Baseline_v1_v2}Baseline_Port.http-conduit'
17:40:42,923 (HTTPConduit.java:371) - No Auth Supplier configured for Conduit '{http://wsdl.example.com/Baseline_v1_v2}Baseline_Port.http-conduit'
17:40:42,923 (HTTPConduit.java:390) - Conduit '{http://wsdl.example.com/Baseline_v1_v2}Baseline_Port.http-conduit' has been configured for plain http.
...
17:40:43,329 (TrustDecisionUtil.java:106) - No Trust Decider for Conduit '{http://wsdl.example.com/Baseline_v1_v2}Baseline_Port.http-conduit'. An afirmative Trust Decision is assumed.
17:40:43,548 (HTTPConduit.java:1277) - Sending POST Message with Headers to https://test.example.amadeus.com/si/Baseline_v1 Conduit :{http://wsdl.example.com/Baseline_v1_v2}Baseline_Port.http-conduit
Content-Type: null","JDK 1.6 Eclipse IDE
log4j 1.2.16",345600,345600,,0%,345600,345600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-31 18:00:27.893,,,no_permission,,Advanced,,,,,,,,,,,46771,,,Wed Jun 01 07:06:15 UTC 2011,,,,,,0|i0l70n:,121787,,,,,,,,"31/May/11 18:00;dkulp;
This was fixed a couple weeks ago.  Will be in 2.4.1.",01/Jun/11 07:06;yguerro;As per above comment.,,,,,,,,,,,,,,,,,,,,,,,,,
EndPointImpl's hasCode value should not change when its mutable properties are changed,CXF-3548,12508292,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,25/May/11 09:15,08/Aug/11 14:43,14/Mar/19 02:29,26/May/11 14:53,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Core,,,,0,,,,,,"The current implementation of hashCode() simply calls HashMap's hashCode(). Consequently, the hashCode changes whenever some changes occur in this property table. The endpoint's hashCode should be calculated on the immutable part to avoid confusion as the following abnormality can be observed:

Endpoint ep = ...
map = new HashMap<...>();
map.put(ep, ""A"");
assertNotNull(map.get(ep)); // okay
ep.put(USING_ADDRESSING, b);
assertEquals(ep, map.keySet().iterator().next()); // okay
assertNotNull(map.get(ep)); // error

This issue was discussed in dev@cxf:
http://cxf.547215.n5.nabble.com/org-apache-cxf-endpoint-EndpointImpl-may-not-be-used-as-a-hash-map-key-td4393354.html


",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,5915,,,Thu May 26 14:53:13 UTC 2011,,,,,,0|i0b7rb:,63369,,,,,,,,"26/May/11 14:53;ay;Thanks Dan.
I should have used svnmerge to track the merged version.
Regards, aki",,,,,,,,,,,,,,,,,,,,,,,,,,
LocalDestination with DirectDispatch does not work with interceptors that decorate the OutputStream,CXF-3545,12508204,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pkedvessy,pkedvessy,24/May/11 15:06,08/Aug/11 14:43,14/Mar/19 02:29,25/May/11 01:03,2.3.2,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Transports,,,,0,,,,,,"Create a Server that uses the local transport.
Set property org.apache.cxf.transport.local.LocalConduit.directDispatch
Add an Out interceptor to the Server that decorates the OutputStream. For example GZIPOutInterceptor.

Expected:
decorated OutputStream to work.

Actual:
ClassCastException

Cause:
{code:title=org.apache.cxf.transport.local.LocalDestination.close(Message)}
CachedOutputStream stream = (CachedOutputStream)message.getContent(OutputStream.class);
{code}","Found in CXF 2.3.2, confirmed the code is the same in 2.4.0
Windows 2003 Server x64
",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5872,,,2011-05-24 15:06:33.0,,,,,,0|i0b93r:,63587,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The nested policy reference can not be resolved,CXF-3544,12508026,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,23/May/11 05:24,08/Aug/11 14:43,14/Mar/19 02:29,24/May/11 08:26,,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,WS-* Components,,,,0,,,,,,"The policy reference wrapped in a <wsp:policy> element can not be resolved:
<wsdl:definitions>
   ...
      <wsdl:binding name=""GreeterSOAPBinding"" type=""tns:Greeter"">
        <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
        
        <wsp:Policy> 
           <wsp:PolicyReference URI=""#WSAM_Addressing_Policy""/>          
        </wsp:Policy>
       ....
       </wsdl:binding>
       <wsp:Policy wsu:Id=""WSAM_Addressing_Policy""
		xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
		<wsam:Addressing>
			<wsp:Policy>
				<wsam:Addressing/>
			</wsp:Policy>
		</wsam:Addressing>
	</wsp:Policy>
</wsdl:definitions>

Error message:
--------------

INFO: Creating Service {http://cxf.apache.org/greeter_control}BasicGreeterService from WSDL: org/apache/cxf/systest/ws/policy/http_server_greeter.wsdl
javax.xml.ws.WebServiceException: java.lang.RuntimeException: #WSAM_Addressing_Policy can't be resolved server startup failed (not a log message)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:350)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:239)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createAndPublishEndpoint(ProviderImpl.java:144)
	at javax.xml.ws.Endpoint.publish(Endpoint.java:170)
	at org.apache.cxf.systest.ws.policy.HTTPServerPolicyTest$Server.run(HTTPServerPolicyTest.java:65)
	at org.apache.cxf.testutil.common.AbstractTestServerBase.start(AbstractTestServerBase.java:68)
	at org.apache.cxf.systest.ws.policy.HTTPServerPolicyTest$Server.main(HTTPServerPolicyTest.java:81)
Caused by: java.lang.RuntimeException: #WSAM_Addressing_Policy can't be resolved
	at org.apache.neethi.AbstractPolicyOperator.normalizeOperator(AbstractPolicyOperator.java:130)
	at org.apache.neethi.AbstractPolicyOperator.normalize(AbstractPolicyOperator.java:87)
	at org.apache.neethi.Policy.normalize(Policy.java:95)
	at org.apache.cxf.ws.policy.EndpointPolicyImpl.initializePolicy(EndpointPolicyImpl.java:154)
	at org.apache.cxf.ws.policy.EndpointPolicyImpl.initialize(EndpointPolicyImpl.java:141)
	at org.apache.cxf.ws.policy.PolicyEngineImpl.createEndpointPolicyInfo(PolicyEngineImpl.java:533)
	at org.apache.cxf.ws.policy.PolicyEngineImpl.getEndpointPolicy(PolicyEngineImpl.java:285)
	at org.apache.cxf.ws.policy.PolicyEngineImpl.getServerEndpointPolicy(PolicyEngineImpl.java:273)
	at org.apache.cxf.transport.http.policy.PolicyUtils.getServer(PolicyUtils.java:180)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.initConfig(AbstractHTTPDestination.java:404)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.<init>(AbstractHTTPDestination.java:142)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.<init>(JettyHTTPDestination.java:90)
	at org.apache.cxf.transport.http_jetty.JettyDestinationFactory.createDestination(JettyDestinationFactory.java:37)
	at org.apache.cxf.transport.http.HTTPTransportFactory.getDestination(HTTPTransportFactory.java:263)
	at org.apache.cxf.binding.soap.SoapTransportFactory.getDestination(SoapTransportFactory.java:134)
	at org.apache.cxf.endpoint.ServerImpl.initDestination(ServerImpl.java:92)
	at org.apache.cxf.endpoint.ServerImpl.<init>(ServerImpl.java:71)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:161)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:202)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:433)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:322)
	... 6 more",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-31 14:13:34.613,,,no_permission,,,,,,,,,,,,,5846,,,Tue May 31 14:13:34 UTC 2011,,,,,,0|i0b993:,63611,,,,,,,,"31/May/11 14:13;vivekkrai;I'm also getting an error something on the similar lines , but not sure though that the root cause is same. I'm runnning wsdl2java with the WSDL on my local machine which has policyreference with ID definition and that Id is defined within the WSDL 
I'm getting error  

*****************************************************************************************************************************************************
E:\apache-cxf\bin>wsdl2java -d e:\SAP -mark-generated -verbose -wsdlList e:/SAP/Needles(20110503-DMZ)-Policy.wsdl
Loading FrontEnd jaxws ...
Loading DataBinding jaxb ...
wsdl2java -d e:\SAP -mark-generated -verbose -wsdlList e:/SAP/Needles(20110503-DMZ)-Policy.wsdl
wsdl2java - Apache CXF 2.4.0


WSDLToJava Error: org.apache.cxf.wsdl11.WSDLRuntimeException: Fail to create wsdl definition from : file:/%3c?xml%20version=%221.0%22%20encoding=%22utf-8%22?%3e%3cwsdl:definitions%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsdl=%22http://schemas.xmlsoap.org/wsdl/%22%20xmlns:xsd=%22http://www.w3.org/2001/XMLSchema%22%20xmlns:soap=%22http://schemas.xmlsoap.org/wsdl/soap/%22%20xmlns:http=%22http://schemas.xmlsoap.org/wsdl/http/%22%20xmlns:mime=%22http://schemas.xmlsoap.org/wsdl/mime/%22%20xmlns:tns=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:wsu=%22http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%20xmlns:n1=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cwsdl:documentation%3e%3csidl:sidl%20xmlns:sidl=%22http://www.sap.com/2007/03/sidl%22/%3e%3c/wsdl:documentation%3e%3cwsp:UsingPolicy%20wsdl:required=%22true%22/%3e%3cwsp:Policy%20wsu
:Id=%22BN_BN_ZVNEEDLES%22%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://xml.sap.com/2006/11/esi/esp/binxml%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://www.w3.org/2004/08/soap/features/http-optimization%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3cwsp:ExactlyOne%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:sapsp=%22http://www.sap.com/webas/630/soap/features/security/policy%22%20xmlns:sp=%22http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702%22%20xmlns:wsa=%22http://www.w3.org/2005/08/addressing%22%20xmlns:wst=%22http://docs.oasis-open.org/ws-sx/ws-trust/200512%22%20xmlns:wsu=%22http://schemas.xmlsoap.org/ws/2002/07/utility%22%20xmlns:wsx=%22http://schemas.xmlsoap.org/ws/2004/09/mex%22%3e%3cwsp:All%3e%3csp:TransportBinding%3e%3cwsp:Policy%3e%3csp:Transport
Token%3e%3cwsp:Policy%3e%3csp:HttpsToken/%3e%3c/wsp:Policy%3e%3c/sp:TransportToken%3e%3csp:AlgorithmSuite%3e%3cwsp:Policy%3e%3csp:TripleDesRsa15/%3e%3c/wsp:Policy%3e%3c/sp:AlgorithmSuite%3e%3csp:Layout%3e%3cwsp:Policy%3e%3csp:Strict/%3e%3c/wsp:Policy%3e%3c/sp:Layout%3e%3c/wsp:Policy%3e%3c/sp:TransportBinding%3e%3c/wsp:All%3e%3c/wsp:ExactlyOne%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22IF_IF_ZVNEEDLES%22%3e%3csapsession:Session%20xmlns:sapsession=%22http://www.sap.com/webas/630/soap/features/session/%22%3e%3csapsession:enableSession%3efalse%3c/sapsession:enableSession%3e%3c/sapsession:Session%3e%3csapcentraladmin:CentralAdministration%20xmlns:sapcentraladmin=%22http://www.sap.com/webas/700/soap/features/CentralAdministration/%22%20wsp:Optional=%22true%22/%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesUpdate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBloc
king%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesValidate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsdl:types%3e
%3cxsd:schema%20attributeFormDefault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:simpleType%20name=%22char1%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%221%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char10%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2210%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char3%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%223%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char30%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2230%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3c/xsd:schema%3e%3cxsd:schema%20attributeFormDefault=%22qual
ified%22%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:n0=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:import%20namespace=%22urn:sap-com:document:sap:rfc:functions%22/%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name1%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22City%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22CustName%22%20type=%22tns:char35%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:ele
ment%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22State%22%20type=%22n0:char3%22/%3e%3cxsd:element%20name=%22Street%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Valid%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Zipcode%22%20type=%22n0:char10%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Acknowledge%22%20type=%
22n0:char1%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3c/xsd:schema%3e%3c/wsdl:types%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesValidate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesUpdate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:portType%20name=%22ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#IF_IF_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNee
dlesValidate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesValidate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesUpdate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesUpdate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:operation%3e%3c/wsdl:portType%3e%3cwsdl:binding%20name=%22ZVNEEDLES%22%20type=%22tns:ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#BN_BN_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3csoap:binding%20transport=%22http://schemas.xmlsoap.org/soap/http%22%20style=%22document%22/%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/
wsdl:output%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3c/wsdl:binding%3e%3cwsdl:service%20name=%22ZVNEEDLESService%22%3e%3cwsdl:port%20name=%22ZVNEEDLES%22%20binding=%22tns:ZVNEEDLES%22%3e%3csoap:address%20location=%22http://testorder.allergan.com:1081/sap/bc/srt/rfc/sap/zvneedles/050/zvneedles/zvneedles%22/%3e%3c/wsdl:port%3e%3c/wsdl:service%3e%3c/wsdl:definitions%3e
Caused by : WSDLException: faultCode=PARSER_ERROR: Problem parsing 'file:/%3c?xml%20version=%221.0%22%20encoding=%22utf-8%22?%3e%3cwsdl:definitions%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsdl=%22http://schemas.xmlsoap.org/wsdl/%22%20xmlns:xsd=%22http://www.w3.org/2001/XMLSchema%22%20xmlns:soap=%22http://schemas.xmlsoap.org/wsdl/soap/%22%20xmlns:http=%22http://schemas.xmlsoap.org/wsdl/http/%22%20xmlns:mime=%22http://schemas.xmlsoap.org/wsdl/mime/%22%20xmlns:tns=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:wsu=%22http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%20xmlns:n1=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cwsdl:documentation%3e%3csidl:sidl%20xmlns:sidl=%22http://www.sap.com/2007/03/sidl%22/%3e%3c/wsdl:documentation%3e%3cwsp:UsingPolicy%20wsdl:required=%22true%22/%3e%3cwsp:Policy%20wsu:Id=%22BN_BN_ZVNEEDLES%22%3e%3cs
aptrnbnd:OptimizedXMLTransfer%20uri=%22http://xml.sap.com/2006/11/esi/esp/binxml%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://www.w3.org/2004/08/soap/features/http-optimization%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3cwsp:ExactlyOne%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:sapsp=%22http://www.sap.com/webas/630/soap/features/security/policy%22%20xmlns:sp=%22http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702%22%20xmlns:wsa=%22http://www.w3.org/2005/08/addressing%22%20xmlns:wst=%22http://docs.oasis-open.org/ws-sx/ws-trust/200512%22%20xmlns:wsu=%22http://schemas.xmlsoap.org/ws/2002/07/utility%22%20xmlns:wsx=%22http://schemas.xmlsoap.org/ws/2004/09/mex%22%3e%3cwsp:All%3e%3csp:TransportBinding%3e%3cwsp:Policy%3e%3csp:TransportToken%3e%3cwsp:Policy%3e%3csp:Ht
tpsToken/%3e%3c/wsp:Policy%3e%3c/sp:TransportToken%3e%3csp:AlgorithmSuite%3e%3cwsp:Policy%3e%3csp:TripleDesRsa15/%3e%3c/wsp:Policy%3e%3c/sp:AlgorithmSuite%3e%3csp:Layout%3e%3cwsp:Policy%3e%3csp:Strict/%3e%3c/wsp:Policy%3e%3c/sp:Layout%3e%3c/wsp:Policy%3e%3c/sp:TransportBinding%3e%3c/wsp:All%3e%3c/wsp:ExactlyOne%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22IF_IF_ZVNEEDLES%22%3e%3csapsession:Session%20xmlns:sapsession=%22http://www.sap.com/webas/630/soap/features/session/%22%3e%3csapsession:enableSession%3efalse%3c/sapsession:enableSession%3e%3c/sapsession:Session%3e%3csapcentraladmin:CentralAdministration%20xmlns:sapcentraladmin=%22http://www.sap.com/webas/700/soap/features/CentralAdministration/%22%20wsp:Optional=%22true%22/%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesUpdate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://
www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesValidate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsdl:types%3e%3cxsd:schema%20attributeFormDef
ault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:simpleType%20name=%22char1%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%221%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char10%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2210%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char3%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%223%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char30%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2230%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3c/xsd:schema%3e%3cxsd:schema%20attributeFormDefault=%22qualified%22%20targetNamespace=%22ur
n:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:n0=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:import%20namespace=%22urn:sap-com:document:sap:rfc:functions%22/%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name1%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22City%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22CustName%22%20type=%22tns:char35%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%
22n0:char1%22/%3e%3cxsd:element%20name=%22State%22%20type=%22n0:char3%22/%3e%3cxsd:element%20name=%22Street%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Valid%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Zipcode%22%20type=%22n0:char10%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Acknowledge%22%20type=%22n0:char1%22/%3e%3c/xsd:sequenc
e%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3c/xsd:schema%3e%3c/wsdl:types%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesValidate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesUpdate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:portType%20name=%22ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#IF_IF_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesValidate%22/%3e%3c/wsp:Polic
y%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesValidate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesUpdate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesUpdate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:operation%3e%3c/wsdl:portType%3e%3cwsdl:binding%20name=%22ZVNEEDLES%22%20type=%22tns:ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#BN_BN_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3csoap:binding%20transport=%22http://schemas.xmlsoap.org/soap/http%22%20style=%22document%22/%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation
%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3c/wsdl:binding%3e%3cwsdl:service%20name=%22ZVNEEDLESService%22%3e%3cwsdl:port%20name=%22ZVNEEDLES%22%20binding=%22tns:ZVNEEDLES%22%3e%3csoap:address%20location=%22http://testorder.allergan.com:1081/sap/bc/srt/rfc/sap/zvneedles/050/zvneedles/zvneedles%22/%3e%3c/wsdl:port%3e%3c/wsdl:service%3e%3c/wsdl:definitions%3e'.: java.io.FileNotFoundException: \<?xml version=""1.0"" encoding=""utf-8""?><wsdl:definitions targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsdl=""http:\schemas.xmlsoap.org\wsdl\"" xmlns:xsd=""http:\www.w3.org\2001\XMLSchema"" xmlns:soap=""http:\schemas.xmlsoap.org\wsdl\soap\"" xmlns:http=""http:\schemas.xmlsoap.org\wsdl\http\"" xmlns:mime=""http:\schemas.xmlsoap.org\wsdl\mime\"" xmln
s:tns=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:wsu=""http:\docs.oasis-open.org\wss\2004\01\oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:n1=""urn:sap-com:document:sap:rfc:functions""><wsdl:documentation><sidl:sidl xmlns:sidl=""http:\www.sap.com\2007\03\sidl""\><\wsdl:documentation><wsp:UsingPolicy wsdl:required=""true""\><wsp:Policy wsu:Id=""BN_BN_ZVNEEDLES""><saptrnbnd:OptimizedXMLTransfer uri=""http:\xml.sap.com\2006\11\esi\esp\binxml"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><saptrnbnd:OptimizedXMLTransfer uri=""http:\www.w3.org\2004\08\soap\features\http-optimization"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><wsp:ExactlyOne xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:sapsp=""http:\www.sap.com\webas\630\soap\features\security\policy"" xmlns:sp=""http:\docs.oasis-open.org\ws-sx\ws-securityp
olicy\200702"" xmlns:wsa=""http:\www.w3.org\2005\08\addressing"" xmlns:wst=""http:\docs.oasis-open.org\ws-sx\ws-trust\200512"" xmlns:wsu=""http:\schemas.xmlsoap.org\ws\2002\07\utility"" xmlns:wsx=""http:\schemas.xmlsoap.org\ws\2004\09\mex""><wsp:All><sp:TransportBinding><wsp:Policy><sp:TransportToken><wsp:Policy><sp:HttpsToken\><\wsp:Policy><\sp:TransportToken><sp:AlgorithmSuite><wsp:Policy><sp:TripleDesRsa15\><\wsp:Policy><\sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict\><\wsp:Policy><\sp:Layout><\wsp:Policy><\sp:TransportBinding><\wsp:All><\wsp:ExactlyOne><\wsp:Policy><wsp:Policy wsu:Id=""IF_IF_ZVNEEDLES""><sapsession:Session xmlns:sapsession=""http:\www.sap.com\webas\630\soap\features\session\""><sapsession:enableSession>false<\sapsession:enableSession><\sapsession:Session><sapcentraladmin:CentralAdministration xmlns:sapcentraladmin=""http:\www.sap.com\webas\700\soap\features\CentralAdministration\"" wsp:Optional=""true""\><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesUpdate""><sapcomhn
d:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesValidate""><sapcomhnd:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsdl:typ
es><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:rfc:functions""><xsd:simpleType name=""char1""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""1""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char10""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""10""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char3""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""3""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char30""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""30""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><\xsd:schema><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:n0=""urn:sap-com:document:sap:rfc:functions""><xsd:import namespace=""urn:sap-com:document:sap:rfc:functions""\><xsd:simpleType name=""cha
r35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><xsd:element name=""ZVfreeNeedlesValidate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:element name=""Name1"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesValidateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""City"" type=""n0:char35""\><xsd:element name=""CustName"" type=""tns:char35""\><xsd:element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""State"" type=""n0:char3""\><xsd:element name=""Street"" type=""n0:char35""\><xsd:element name=""Title"" type=""n0:char30""\><xsd:element name=""Valid"" type=""n0:char1""\><xsd:element name=""Zipcode"" type=""n0:char10""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:
element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""Title"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""Acknowledge"" type=""n0:char1""\><\xsd:sequence><\xsd:complexType><\xsd:element><\xsd:schema><\wsdl:types><wsdl:message name=""ZVfreeNeedlesValidate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesValidate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesValidateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesValidateResponse""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesUpdate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesUpdateResponse""\><\wsdl:message><wsdl:portType name=""ZVNEEDLES""><wsp:Policy><wsp:PolicyReference
URI="" (The filename, directory name, or volume label syntax is incorrect)

org.apache.cxf.tools.common.ToolException: org.apache.cxf.wsdl11.WSDLRuntimeException: Fail to create wsdl definition from : file:/%3c?xml%20version=%221.0%22%20encoding=%22utf-8%22?%3e%3cwsdl:definitions%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsdl=%22http://schemas.xmlsoap.org/wsdl/%22%20xmlns:xsd=%22http://www.w3.org/2001/XMLSchema%22%20xmlns:soap=%22http://schemas.xmlsoap.org/wsdl/soap/%22%20xmlns:http=%22http://schemas.xmlsoap.org/wsdl/http/%22%20xmlns:mime=%22http://schemas.xmlsoap.org/wsdl/mime/%22%20xmlns:tns=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:wsu=%22http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%20xmlns:n1=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cwsdl:documentation%3e%3csidl:sidl%20xmlns:sidl=%22http://www.sap.com/2007/03/sidl%22/%3e%3c/wsdl:documentation%3e%3cwsp:UsingPolicy%20wsdl:required=%22true%
22/%3e%3cwsp:Policy%20wsu:Id=%22BN_BN_ZVNEEDLES%22%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://xml.sap.com/2006/11/esi/esp/binxml%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://www.w3.org/2004/08/soap/features/http-optimization%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3cwsp:ExactlyOne%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:sapsp=%22http://www.sap.com/webas/630/soap/features/security/policy%22%20xmlns:sp=%22http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702%22%20xmlns:wsa=%22http://www.w3.org/2005/08/addressing%22%20xmlns:wst=%22http://docs.oasis-open.org/ws-sx/ws-trust/200512%22%20xmlns:wsu=%22http://schemas.xmlsoap.org/ws/2002/07/utility%22%20xmlns:wsx=%22http://schemas.xmlsoap.org/ws/2004/09/mex%22%3e%3cwsp:All%3e%3csp:TransportBinding%3e%3cwsp
:Policy%3e%3csp:TransportToken%3e%3cwsp:Policy%3e%3csp:HttpsToken/%3e%3c/wsp:Policy%3e%3c/sp:TransportToken%3e%3csp:AlgorithmSuite%3e%3cwsp:Policy%3e%3csp:TripleDesRsa15/%3e%3c/wsp:Policy%3e%3c/sp:AlgorithmSuite%3e%3csp:Layout%3e%3cwsp:Policy%3e%3csp:Strict/%3e%3c/wsp:Policy%3e%3c/sp:Layout%3e%3c/wsp:Policy%3e%3c/sp:TransportBinding%3e%3c/wsp:All%3e%3c/wsp:ExactlyOne%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22IF_IF_ZVNEEDLES%22%3e%3csapsession:Session%20xmlns:sapsession=%22http://www.sap.com/webas/630/soap/features/session/%22%3e%3csapsession:enableSession%3efalse%3c/sapsession:enableSession%3e%3c/sapsession:Session%3e%3csapcentraladmin:CentralAdministration%20xmlns:sapcentraladmin=%22http://www.sap.com/webas/700/soap/features/CentralAdministration/%22%20wsp:Optional=%22true%22/%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesUpdate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit
%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesValidate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:
Policy%3e%3cwsdl:types%3e%3cxsd:schema%20attributeFormDefault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:simpleType%20name=%22char1%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%221%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char10%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2210%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char3%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%223%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char30%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2230%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3c/xsd:schema%3e%3cxsd:schema%20att
ributeFormDefault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:n0=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:import%20namespace=%22urn:sap-com:document:sap:rfc:functions%22/%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name1%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22City%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22CustName%22%20type=%22tns:char35%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22
n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22State%22%20type=%22n0:char3%22/%3e%3cxsd:element%20name=%22Street%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Valid%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Zipcode%22%20type=%22n0:char10%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%
22Acknowledge%22%20type=%22n0:char1%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3c/xsd:schema%3e%3c/wsdl:types%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesValidate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesUpdate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:portType%20name=%22ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#IF_IF_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20U
RI=%22#OP_IF_OP_ZVfreeNeedlesValidate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesValidate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesUpdate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesUpdate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:operation%3e%3c/wsdl:portType%3e%3cwsdl:binding%20name=%22ZVNEEDLES%22%20type=%22tns:ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#BN_BN_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3csoap:binding%20transport=%22http://schemas.xmlsoap.org/soap/http%22%20style=%22document%22/%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20
use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3c/wsdl:binding%3e%3cwsdl:service%20name=%22ZVNEEDLESService%22%3e%3cwsdl:port%20name=%22ZVNEEDLES%22%20binding=%22tns:ZVNEEDLES%22%3e%3csoap:address%20location=%22http://testorder.allergan.com:1081/sap/bc/srt/rfc/sap/zvneedles/050/zvneedles/zvneedles%22/%3e%3c/wsdl:port%3e%3c/wsdl:service%3e%3c/wsdl:definitions%3e
Caused by : WSDLException: faultCode=PARSER_ERROR: Problem parsing 'file:/%3c?xml%20version=%221.0%22%20encoding=%22utf-8%22?%3e%3cwsdl:definitions%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsdl=%22http://schemas.xmlsoap.org/wsdl/%22%20xmlns:xsd=%22http://www.w3.org/2001/XMLSchema%22%20xmlns:soap=%22http://schemas.xmlsoap.org/wsdl/soap/%22%20xmlns:http=%22http://schemas.xmlsoap.org/wsdl/http/%22%20xmlns:mime=%22http://schemas.xmlsoap.org/wsdl/mime/%22%20xmlns:tns=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:wsu=%22http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%20xmlns:n1=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cwsdl:documentation%3e%3csidl:sidl%20xmlns:sidl=%22http://www.sap.com/2007/03/sidl%22/%3e%3c/wsdl:documentation%3e%3cwsp:UsingPolicy%20wsdl:required=%22true%22/%3e%3cwsp:Policy%20wsu:Id=%22BN_BN_ZVNEEDLES%22%3e%3cs
aptrnbnd:OptimizedXMLTransfer%20uri=%22http://xml.sap.com/2006/11/esi/esp/binxml%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://www.w3.org/2004/08/soap/features/http-optimization%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3cwsp:ExactlyOne%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:sapsp=%22http://www.sap.com/webas/630/soap/features/security/policy%22%20xmlns:sp=%22http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702%22%20xmlns:wsa=%22http://www.w3.org/2005/08/addressing%22%20xmlns:wst=%22http://docs.oasis-open.org/ws-sx/ws-trust/200512%22%20xmlns:wsu=%22http://schemas.xmlsoap.org/ws/2002/07/utility%22%20xmlns:wsx=%22http://schemas.xmlsoap.org/ws/2004/09/mex%22%3e%3cwsp:All%3e%3csp:TransportBinding%3e%3cwsp:Policy%3e%3csp:TransportToken%3e%3cwsp:Policy%3e%3csp:Ht
tpsToken/%3e%3c/wsp:Policy%3e%3c/sp:TransportToken%3e%3csp:AlgorithmSuite%3e%3cwsp:Policy%3e%3csp:TripleDesRsa15/%3e%3c/wsp:Policy%3e%3c/sp:AlgorithmSuite%3e%3csp:Layout%3e%3cwsp:Policy%3e%3csp:Strict/%3e%3c/wsp:Policy%3e%3c/sp:Layout%3e%3c/wsp:Policy%3e%3c/sp:TransportBinding%3e%3c/wsp:All%3e%3c/wsp:ExactlyOne%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22IF_IF_ZVNEEDLES%22%3e%3csapsession:Session%20xmlns:sapsession=%22http://www.sap.com/webas/630/soap/features/session/%22%3e%3csapsession:enableSession%3efalse%3c/sapsession:enableSession%3e%3c/sapsession:Session%3e%3csapcentraladmin:CentralAdministration%20xmlns:sapcentraladmin=%22http://www.sap.com/webas/700/soap/features/CentralAdministration/%22%20wsp:Optional=%22true%22/%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesUpdate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://
www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesValidate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsdl:types%3e%3cxsd:schema%20attributeFormDef
ault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:simpleType%20name=%22char1%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%221%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char10%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2210%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char3%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%223%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char30%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2230%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3c/xsd:schema%3e%3cxsd:schema%20attributeFormDefault=%22qualified%22%20targetNamespace=%22ur
n:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:n0=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:import%20namespace=%22urn:sap-com:document:sap:rfc:functions%22/%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name1%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22City%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22CustName%22%20type=%22tns:char35%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%
22n0:char1%22/%3e%3cxsd:element%20name=%22State%22%20type=%22n0:char3%22/%3e%3cxsd:element%20name=%22Street%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Valid%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Zipcode%22%20type=%22n0:char10%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Acknowledge%22%20type=%22n0:char1%22/%3e%3c/xsd:sequenc
e%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3c/xsd:schema%3e%3c/wsdl:types%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesValidate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesUpdate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:portType%20name=%22ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#IF_IF_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesValidate%22/%3e%3c/wsp:Polic
y%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesValidate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesUpdate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesUpdate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:operation%3e%3c/wsdl:portType%3e%3cwsdl:binding%20name=%22ZVNEEDLES%22%20type=%22tns:ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#BN_BN_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3csoap:binding%20transport=%22http://schemas.xmlsoap.org/soap/http%22%20style=%22document%22/%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation
%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3c/wsdl:binding%3e%3cwsdl:service%20name=%22ZVNEEDLESService%22%3e%3cwsdl:port%20name=%22ZVNEEDLES%22%20binding=%22tns:ZVNEEDLES%22%3e%3csoap:address%20location=%22http://testorder.allergan.com:1081/sap/bc/srt/rfc/sap/zvneedles/050/zvneedles/zvneedles%22/%3e%3c/wsdl:port%3e%3c/wsdl:service%3e%3c/wsdl:definitions%3e'.: java.io.FileNotFoundException: \<?xml version=""1.0"" encoding=""utf-8""?><wsdl:definitions targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsdl=""http:\schemas.xmlsoap.org\wsdl\"" xmlns:xsd=""http:\www.w3.org\2001\XMLSchema"" xmlns:soap=""http:\schemas.xmlsoap.org\wsdl\soap\"" xmlns:http=""http:\schemas.xmlsoap.org\wsdl\http\"" xmlns:mime=""http:\schemas.xmlsoap.org\wsdl\mime\"" xmln
s:tns=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:wsu=""http:\docs.oasis-open.org\wss\2004\01\oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:n1=""urn:sap-com:document:sap:rfc:functions""><wsdl:documentation><sidl:sidl xmlns:sidl=""http:\www.sap.com\2007\03\sidl""\><\wsdl:documentation><wsp:UsingPolicy wsdl:required=""true""\><wsp:Policy wsu:Id=""BN_BN_ZVNEEDLES""><saptrnbnd:OptimizedXMLTransfer uri=""http:\xml.sap.com\2006\11\esi\esp\binxml"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><saptrnbnd:OptimizedXMLTransfer uri=""http:\www.w3.org\2004\08\soap\features\http-optimization"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><wsp:ExactlyOne xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:sapsp=""http:\www.sap.com\webas\630\soap\features\security\policy"" xmlns:sp=""http:\docs.oasis-open.org\ws-sx\ws-securityp
olicy\200702"" xmlns:wsa=""http:\www.w3.org\2005\08\addressing"" xmlns:wst=""http:\docs.oasis-open.org\ws-sx\ws-trust\200512"" xmlns:wsu=""http:\schemas.xmlsoap.org\ws\2002\07\utility"" xmlns:wsx=""http:\schemas.xmlsoap.org\ws\2004\09\mex""><wsp:All><sp:TransportBinding><wsp:Policy><sp:TransportToken><wsp:Policy><sp:HttpsToken\><\wsp:Policy><\sp:TransportToken><sp:AlgorithmSuite><wsp:Policy><sp:TripleDesRsa15\><\wsp:Policy><\sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict\><\wsp:Policy><\sp:Layout><\wsp:Policy><\sp:TransportBinding><\wsp:All><\wsp:ExactlyOne><\wsp:Policy><wsp:Policy wsu:Id=""IF_IF_ZVNEEDLES""><sapsession:Session xmlns:sapsession=""http:\www.sap.com\webas\630\soap\features\session\""><sapsession:enableSession>false<\sapsession:enableSession><\sapsession:Session><sapcentraladmin:CentralAdministration xmlns:sapcentraladmin=""http:\www.sap.com\webas\700\soap\features\CentralAdministration\"" wsp:Optional=""true""\><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesUpdate""><sapcomhn
d:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesValidate""><sapcomhnd:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsdl:typ
es><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:rfc:functions""><xsd:simpleType name=""char1""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""1""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char10""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""10""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char3""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""3""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char30""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""30""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><\xsd:schema><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:n0=""urn:sap-com:document:sap:rfc:functions""><xsd:import namespace=""urn:sap-com:document:sap:rfc:functions""\><xsd:simpleType name=""cha
r35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><xsd:element name=""ZVfreeNeedlesValidate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:element name=""Name1"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesValidateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""City"" type=""n0:char35""\><xsd:element name=""CustName"" type=""tns:char35""\><xsd:element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""State"" type=""n0:char3""\><xsd:element name=""Street"" type=""n0:char35""\><xsd:element name=""Title"" type=""n0:char30""\><xsd:element name=""Valid"" type=""n0:char1""\><xsd:element name=""Zipcode"" type=""n0:char10""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:
element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""Title"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""Acknowledge"" type=""n0:char1""\><\xsd:sequence><\xsd:complexType><\xsd:element><\xsd:schema><\wsdl:types><wsdl:message name=""ZVfreeNeedlesValidate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesValidate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesValidateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesValidateResponse""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesUpdate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesUpdateResponse""\><\wsdl:message><wsdl:portType name=""ZVNEEDLES""><wsp:Policy><wsp:PolicyReference
URI="" (The filename, directory name, or volume label syntax is incorrect)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:298)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:113)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:86)
        at org.apache.cxf.tools.wsdlto.WSDLToJava.main(WSDLToJava.java:184)
Caused by: org.apache.cxf.wsdl11.WSDLRuntimeException: Fail to create wsdl definition from : file:/%3c?xml%20version=%221.0%22%20encoding=%22utf-8%22?%3e%3cwsdl:definitions%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsdl=%22http://schemas.xmlsoap.org/wsdl/%22%20xmlns:xsd=%22http://www.w3.org/2001/XMLSchema%22%20xmlns:soap=%22http://schemas.xmlsoap.org/wsdl/soap/%22%20xmlns:http=%22http://schemas.xmlsoap.org/wsdl/http/%22%20xmlns:mime=%22http://schemas.xmlsoap.org/wsdl/mime/%22%20xmlns:tns=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:wsu=%22http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%20xmlns:n1=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cwsdl:documentation%3e%3csidl:sidl%20xmlns:sidl=%22http://www.sap.com/2007/03/sidl%22/%3e%3c/wsdl:documentation%3e%3cwsp:UsingPolicy%20wsdl:required=%22true%22/%3e%3cwsp:Policy%20wsu:Id=%22
BN_BN_ZVNEEDLES%22%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://xml.sap.com/2006/11/esi/esp/binxml%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://www.w3.org/2004/08/soap/features/http-optimization%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3cwsp:ExactlyOne%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:sapsp=%22http://www.sap.com/webas/630/soap/features/security/policy%22%20xmlns:sp=%22http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702%22%20xmlns:wsa=%22http://www.w3.org/2005/08/addressing%22%20xmlns:wst=%22http://docs.oasis-open.org/ws-sx/ws-trust/200512%22%20xmlns:wsu=%22http://schemas.xmlsoap.org/ws/2002/07/utility%22%20xmlns:wsx=%22http://schemas.xmlsoap.org/ws/2004/09/mex%22%3e%3cwsp:All%3e%3csp:TransportBinding%3e%3cwsp:Policy%3e%3csp:TransportToken%3
e%3cwsp:Policy%3e%3csp:HttpsToken/%3e%3c/wsp:Policy%3e%3c/sp:TransportToken%3e%3csp:AlgorithmSuite%3e%3cwsp:Policy%3e%3csp:TripleDesRsa15/%3e%3c/wsp:Policy%3e%3c/sp:AlgorithmSuite%3e%3csp:Layout%3e%3cwsp:Policy%3e%3csp:Strict/%3e%3c/wsp:Policy%3e%3c/sp:Layout%3e%3c/wsp:Policy%3e%3c/sp:TransportBinding%3e%3c/wsp:All%3e%3c/wsp:ExactlyOne%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22IF_IF_ZVNEEDLES%22%3e%3csapsession:Session%20xmlns:sapsession=%22http://www.sap.com/webas/630/soap/features/session/%22%3e%3csapsession:enableSession%3efalse%3c/sapsession:enableSession%3e%3c/sapsession:Session%3e%3csapcentraladmin:CentralAdministration%20xmlns:sapcentraladmin=%22http://www.sap.com/webas/700/soap/features/CentralAdministration/%22%20wsp:Optional=%22true%22/%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesUpdate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20
xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesValidate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsdl:types%3e%3cxsd:
schema%20attributeFormDefault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:simpleType%20name=%22char1%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%221%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char10%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2210%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char3%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%223%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char30%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2230%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3c/xsd:schema%3e%3cxsd:schema%20attributeFormDefault=%22qualified%2
2%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:n0=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:import%20namespace=%22urn:sap-com:document:sap:rfc:functions%22/%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name1%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22City%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22CustName%22%20type=%22tns:char35%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20
name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22State%22%20type=%22n0:char3%22/%3e%3cxsd:element%20name=%22Street%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Valid%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Zipcode%22%20type=%22n0:char10%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Acknowledge%22%20type=%22n0:ch
ar1%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3c/xsd:schema%3e%3c/wsdl:types%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesValidate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesUpdate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:portType%20name=%22ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#IF_IF_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesVal
idate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesValidate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesUpdate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesUpdate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:operation%3e%3c/wsdl:portType%3e%3cwsdl:binding%20name=%22ZVNEEDLES%22%20type=%22tns:ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#BN_BN_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3csoap:binding%20transport=%22http://schemas.xmlsoap.org/soap/http%22%20style=%22document%22/%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:ou
tput%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3c/wsdl:binding%3e%3cwsdl:service%20name=%22ZVNEEDLESService%22%3e%3cwsdl:port%20name=%22ZVNEEDLES%22%20binding=%22tns:ZVNEEDLES%22%3e%3csoap:address%20location=%22http://testorder.allergan.com:1081/sap/bc/srt/rfc/sap/zvneedles/050/zvneedles/zvneedles%22/%3e%3c/wsdl:port%3e%3c/wsdl:service%3e%3c/wsdl:definitions%3e
Caused by : WSDLException: faultCode=PARSER_ERROR: Problem parsing 'file:/%3c?xml%20version=%221.0%22%20encoding=%22utf-8%22?%3e%3cwsdl:definitions%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsdl=%22http://schemas.xmlsoap.org/wsdl/%22%20xmlns:xsd=%22http://www.w3.org/2001/XMLSchema%22%20xmlns:soap=%22http://schemas.xmlsoap.org/wsdl/soap/%22%20xmlns:http=%22http://schemas.xmlsoap.org/wsdl/http/%22%20xmlns:mime=%22http://schemas.xmlsoap.org/wsdl/mime/%22%20xmlns:tns=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:wsu=%22http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%20xmlns:n1=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cwsdl:documentation%3e%3csidl:sidl%20xmlns:sidl=%22http://www.sap.com/2007/03/sidl%22/%3e%3c/wsdl:documentation%3e%3cwsp:UsingPolicy%20wsdl:required=%22true%22/%3e%3cwsp:Policy%20wsu:Id=%22BN_BN_ZVNEEDLES%22%3e%3cs
aptrnbnd:OptimizedXMLTransfer%20uri=%22http://xml.sap.com/2006/11/esi/esp/binxml%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://www.w3.org/2004/08/soap/features/http-optimization%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3cwsp:ExactlyOne%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:sapsp=%22http://www.sap.com/webas/630/soap/features/security/policy%22%20xmlns:sp=%22http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702%22%20xmlns:wsa=%22http://www.w3.org/2005/08/addressing%22%20xmlns:wst=%22http://docs.oasis-open.org/ws-sx/ws-trust/200512%22%20xmlns:wsu=%22http://schemas.xmlsoap.org/ws/2002/07/utility%22%20xmlns:wsx=%22http://schemas.xmlsoap.org/ws/2004/09/mex%22%3e%3cwsp:All%3e%3csp:TransportBinding%3e%3cwsp:Policy%3e%3csp:TransportToken%3e%3cwsp:Policy%3e%3csp:Ht
tpsToken/%3e%3c/wsp:Policy%3e%3c/sp:TransportToken%3e%3csp:AlgorithmSuite%3e%3cwsp:Policy%3e%3csp:TripleDesRsa15/%3e%3c/wsp:Policy%3e%3c/sp:AlgorithmSuite%3e%3csp:Layout%3e%3cwsp:Policy%3e%3csp:Strict/%3e%3c/wsp:Policy%3e%3c/sp:Layout%3e%3c/wsp:Policy%3e%3c/sp:TransportBinding%3e%3c/wsp:All%3e%3c/wsp:ExactlyOne%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22IF_IF_ZVNEEDLES%22%3e%3csapsession:Session%20xmlns:sapsession=%22http://www.sap.com/webas/630/soap/features/session/%22%3e%3csapsession:enableSession%3efalse%3c/sapsession:enableSession%3e%3c/sapsession:Session%3e%3csapcentraladmin:CentralAdministration%20xmlns:sapcentraladmin=%22http://www.sap.com/webas/700/soap/features/CentralAdministration/%22%20wsp:Optional=%22true%22/%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesUpdate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://
www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesValidate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsdl:types%3e%3cxsd:schema%20attributeFormDef
ault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:simpleType%20name=%22char1%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%221%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char10%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2210%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char3%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%223%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char30%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2230%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3c/xsd:schema%3e%3cxsd:schema%20attributeFormDefault=%22qualified%22%20targetNamespace=%22ur
n:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:n0=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:import%20namespace=%22urn:sap-com:document:sap:rfc:functions%22/%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name1%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22City%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22CustName%22%20type=%22tns:char35%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%
22n0:char1%22/%3e%3cxsd:element%20name=%22State%22%20type=%22n0:char3%22/%3e%3cxsd:element%20name=%22Street%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Valid%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Zipcode%22%20type=%22n0:char10%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Acknowledge%22%20type=%22n0:char1%22/%3e%3c/xsd:sequenc
e%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3c/xsd:schema%3e%3c/wsdl:types%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesValidate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesUpdate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:portType%20name=%22ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#IF_IF_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesValidate%22/%3e%3c/wsp:Polic
y%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesValidate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesUpdate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesUpdate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:operation%3e%3c/wsdl:portType%3e%3cwsdl:binding%20name=%22ZVNEEDLES%22%20type=%22tns:ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#BN_BN_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3csoap:binding%20transport=%22http://schemas.xmlsoap.org/soap/http%22%20style=%22document%22/%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation
%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3c/wsdl:binding%3e%3cwsdl:service%20name=%22ZVNEEDLESService%22%3e%3cwsdl:port%20name=%22ZVNEEDLES%22%20binding=%22tns:ZVNEEDLES%22%3e%3csoap:address%20location=%22http://testorder.allergan.com:1081/sap/bc/srt/rfc/sap/zvneedles/050/zvneedles/zvneedles%22/%3e%3c/wsdl:port%3e%3c/wsdl:service%3e%3c/wsdl:definitions%3e'.: java.io.FileNotFoundException: \<?xml version=""1.0"" encoding=""utf-8""?><wsdl:definitions targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsdl=""http:\schemas.xmlsoap.org\wsdl\"" xmlns:xsd=""http:\www.w3.org\2001\XMLSchema"" xmlns:soap=""http:\schemas.xmlsoap.org\wsdl\soap\"" xmlns:http=""http:\schemas.xmlsoap.org\wsdl\http\"" xmlns:mime=""http:\schemas.xmlsoap.org\wsdl\mime\"" xmln
s:tns=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:wsu=""http:\docs.oasis-open.org\wss\2004\01\oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:n1=""urn:sap-com:document:sap:rfc:functions""><wsdl:documentation><sidl:sidl xmlns:sidl=""http:\www.sap.com\2007\03\sidl""\><\wsdl:documentation><wsp:UsingPolicy wsdl:required=""true""\><wsp:Policy wsu:Id=""BN_BN_ZVNEEDLES""><saptrnbnd:OptimizedXMLTransfer uri=""http:\xml.sap.com\2006\11\esi\esp\binxml"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><saptrnbnd:OptimizedXMLTransfer uri=""http:\www.w3.org\2004\08\soap\features\http-optimization"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><wsp:ExactlyOne xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:sapsp=""http:\www.sap.com\webas\630\soap\features\security\policy"" xmlns:sp=""http:\docs.oasis-open.org\ws-sx\ws-securityp
olicy\200702"" xmlns:wsa=""http:\www.w3.org\2005\08\addressing"" xmlns:wst=""http:\docs.oasis-open.org\ws-sx\ws-trust\200512"" xmlns:wsu=""http:\schemas.xmlsoap.org\ws\2002\07\utility"" xmlns:wsx=""http:\schemas.xmlsoap.org\ws\2004\09\mex""><wsp:All><sp:TransportBinding><wsp:Policy><sp:TransportToken><wsp:Policy><sp:HttpsToken\><\wsp:Policy><\sp:TransportToken><sp:AlgorithmSuite><wsp:Policy><sp:TripleDesRsa15\><\wsp:Policy><\sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict\><\wsp:Policy><\sp:Layout><\wsp:Policy><\sp:TransportBinding><\wsp:All><\wsp:ExactlyOne><\wsp:Policy><wsp:Policy wsu:Id=""IF_IF_ZVNEEDLES""><sapsession:Session xmlns:sapsession=""http:\www.sap.com\webas\630\soap\features\session\""><sapsession:enableSession>false<\sapsession:enableSession><\sapsession:Session><sapcentraladmin:CentralAdministration xmlns:sapcentraladmin=""http:\www.sap.com\webas\700\soap\features\CentralAdministration\"" wsp:Optional=""true""\><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesUpdate""><sapcomhn
d:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesValidate""><sapcomhnd:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsdl:typ
es><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:rfc:functions""><xsd:simpleType name=""char1""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""1""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char10""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""10""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char3""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""3""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char30""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""30""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><\xsd:schema><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:n0=""urn:sap-com:document:sap:rfc:functions""><xsd:import namespace=""urn:sap-com:document:sap:rfc:functions""\><xsd:simpleType name=""cha
r35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><xsd:element name=""ZVfreeNeedlesValidate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:element name=""Name1"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesValidateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""City"" type=""n0:char35""\><xsd:element name=""CustName"" type=""tns:char35""\><xsd:element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""State"" type=""n0:char3""\><xsd:element name=""Street"" type=""n0:char35""\><xsd:element name=""Title"" type=""n0:char30""\><xsd:element name=""Valid"" type=""n0:char1""\><xsd:element name=""Zipcode"" type=""n0:char10""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:
element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""Title"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""Acknowledge"" type=""n0:char1""\><\xsd:sequence><\xsd:complexType><\xsd:element><\xsd:schema><\wsdl:types><wsdl:message name=""ZVfreeNeedlesValidate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesValidate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesValidateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesValidateResponse""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesUpdate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesUpdateResponse""\><\wsdl:message><wsdl:portType name=""ZVNEEDLES""><wsp:Policy><wsp:PolicyReference
URI="" (The filename, directory name, or volume label syntax is incorrect)
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.parseWSDL(WSDLDefinitionBuilder.java:97)
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.build(WSDLDefinitionBuilder.java:69)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.build(JAXWSDefinitionBuilder.java:84)
        at org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.build(JAXWSDefinitionBuilder.java:61)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.processWsdl(WSDLToJavaContainer.java:171)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:124)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:290)
        ... 4 more
Caused by: javax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: Problem parsing 'file:/%3c?xml%20version=%221.0%22%20encoding=%22utf-8%22?%3e%3cwsdl:definitions%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsdl=%22http://schemas.xmlsoap.org/wsdl/%22%20xmlns:xsd=%22http://www.w3.org/2001/XMLSchema%22%20xmlns:soap=%22http://schemas.xmlsoap.org/wsdl/soap/%22%20xmlns:http=%22http://schemas.xmlsoap.org/wsdl/http/%22%20xmlns:mime=%22http://schemas.xmlsoap.org/wsdl/mime/%22%20xmlns:tns=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:wsu=%22http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%20xmlns:n1=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cwsdl:documentation%3e%3csidl:sidl%20xmlns:sidl=%22http://www.sap.com/2007/03/sidl%22/%3e%3c/wsdl:documentation%3e%3cwsp:UsingPolicy%20wsdl:required=%22true%22/%3e%3cwsp:Policy%20wsu:Id=%22
BN_BN_ZVNEEDLES%22%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://xml.sap.com/2006/11/esi/esp/binxml%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3csaptrnbnd:OptimizedXMLTransfer%20uri=%22http://www.w3.org/2004/08/soap/features/http-optimization%22%20xmlns:saptrnbnd=%22http://www.sap.com/webas/710/soap/features/transportbinding/%22%20wsp:Optional=%22true%22/%3e%3cwsp:ExactlyOne%20xmlns:wsp=%22http://schemas.xmlsoap.org/ws/2004/09/policy%22%20xmlns:sapsp=%22http://www.sap.com/webas/630/soap/features/security/policy%22%20xmlns:sp=%22http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702%22%20xmlns:wsa=%22http://www.w3.org/2005/08/addressing%22%20xmlns:wst=%22http://docs.oasis-open.org/ws-sx/ws-trust/200512%22%20xmlns:wsu=%22http://schemas.xmlsoap.org/ws/2002/07/utility%22%20xmlns:wsx=%22http://schemas.xmlsoap.org/ws/2004/09/mex%22%3e%3cwsp:All%3e%3csp:TransportBinding%3e%3cwsp:Policy%3e%3csp:TransportToken%3
e%3cwsp:Policy%3e%3csp:HttpsToken/%3e%3c/wsp:Policy%3e%3c/sp:TransportToken%3e%3csp:AlgorithmSuite%3e%3cwsp:Policy%3e%3csp:TripleDesRsa15/%3e%3c/wsp:Policy%3e%3c/sp:AlgorithmSuite%3e%3csp:Layout%3e%3cwsp:Policy%3e%3csp:Strict/%3e%3c/wsp:Policy%3e%3c/sp:Layout%3e%3c/wsp:Policy%3e%3c/sp:TransportBinding%3e%3c/wsp:All%3e%3c/wsp:ExactlyOne%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22IF_IF_ZVNEEDLES%22%3e%3csapsession:Session%20xmlns:sapsession=%22http://www.sap.com/webas/630/soap/features/session/%22%3e%3csapsession:enableSession%3efalse%3c/sapsession:enableSession%3e%3c/sapsession:Session%3e%3csapcentraladmin:CentralAdministration%20xmlns:sapcentraladmin=%22http://www.sap.com/webas/700/soap/features/CentralAdministration/%22%20wsp:Optional=%22true%22/%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesUpdate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20
xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsp:Policy%20wsu:Id=%22OP_IF_OP_ZVfreeNeedlesValidate%22%3e%3csapcomhnd:enableCommit%20xmlns:sapcomhnd=%22http://www.sap.com/NW05/soap/features/commit/%22%3efalse%3c/sapcomhnd:enableCommit%3e%3csapblock:enableBlocking%20xmlns:sapblock=%22http://www.sap.com/NW05/soap/features/blocking/%22%3etrue%3c/sapblock:enableBlocking%3e%3csaptrhnw05:required%20xmlns:saptrhnw05=%22http://www.sap.com/NW05/soap/features/transaction/%22%3eno%3c/saptrhnw05:required%3e%3csaprmnw05:enableWSRM%20xmlns:saprmnw05=%22http://www.sap.com/NW05/soap/features/wsrm/%22%3efalse%3c/saprmnw05:enableWSRM%3e%3c/wsp:Policy%3e%3cwsdl:types%3e%3cxsd:
schema%20attributeFormDefault=%22qualified%22%20targetNamespace=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:simpleType%20name=%22char1%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%221%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char10%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2210%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char3%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%223%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char30%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2230%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3c/xsd:schema%3e%3cxsd:schema%20attributeFormDefault=%22qualified%2
2%20targetNamespace=%22urn:sap-com:document:sap:soap:functions:mc-style%22%20xmlns:n0=%22urn:sap-com:document:sap:rfc:functions%22%3e%3cxsd:import%20namespace=%22urn:sap-com:document:sap:rfc:functions%22/%3e%3cxsd:simpleType%20name=%22char35%22%3e%3cxsd:restriction%20base=%22xsd:string%22%3e%3cxsd:maxLength%20value=%2235%22/%3e%3c/xsd:restriction%3e%3c/xsd:simpleType%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name1%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22City%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22CustName%22%20type=%22tns:char35%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20
name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22State%22%20type=%22n0:char3%22/%3e%3cxsd:element%20name=%22Street%22%20type=%22n0:char35%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Valid%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Zipcode%22%20type=%22n0:char10%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdate%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Kunnr%22%20type=%22n0:char10%22/%3e%3cxsd:element%20name=%22Name%22%20type=%22n0:char30%22/%3e%3cxsd:element%20name=%22Qty100%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Qty50%22%20type=%22n0:char1%22/%3e%3cxsd:element%20name=%22Title%22%20type=%22n0:char30%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3cxsd:element%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cxsd:complexType%3e%3cxsd:sequence%3e%3cxsd:element%20name=%22Acknowledge%22%20type=%22n0:ch
ar1%22/%3e%3c/xsd:sequence%3e%3c/xsd:complexType%3e%3c/xsd:element%3e%3c/xsd:schema%3e%3c/wsdl:types%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesValidate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesValidateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsdl:part%20name=%22parameters%22%20element=%22tns:ZVfreeNeedlesUpdate%22/%3e%3c/wsdl:message%3e%3cwsdl:message%20name=%22ZVfreeNeedlesUpdateResponse%22%3e%3cwsdl:part%20name=%22parameter%22%20element=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:message%3e%3cwsdl:portType%20name=%22ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#IF_IF_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesVal
idate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesValidate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesValidateResponse%22/%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#OP_IF_OP_ZVfreeNeedlesUpdate%22/%3e%3c/wsp:Policy%3e%3cwsdl:input%20message=%22tns:ZVfreeNeedlesUpdate%22/%3e%3cwsdl:output%20message=%22tns:ZVfreeNeedlesUpdateResponse%22/%3e%3c/wsdl:operation%3e%3c/wsdl:portType%3e%3cwsdl:binding%20name=%22ZVNEEDLES%22%20type=%22tns:ZVNEEDLES%22%3e%3cwsp:Policy%3e%3cwsp:PolicyReference%20URI=%22#BN_BN_ZVNEEDLES%22/%3e%3c/wsp:Policy%3e%3csoap:binding%20transport=%22http://schemas.xmlsoap.org/soap/http%22%20style=%22document%22/%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesValidate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:ou
tput%3e%3c/wsdl:operation%3e%3cwsdl:operation%20name=%22ZVfreeNeedlesUpdate%22%3e%3csoap:operation%20soapAction=%22%22%20style=%22document%22/%3e%3cwsdl:input%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:input%3e%3cwsdl:output%3e%3csoap:body%20use=%22literal%22/%3e%3c/wsdl:output%3e%3c/wsdl:operation%3e%3c/wsdl:binding%3e%3cwsdl:service%20name=%22ZVNEEDLESService%22%3e%3cwsdl:port%20name=%22ZVNEEDLES%22%20binding=%22tns:ZVNEEDLES%22%3e%3csoap:address%20location=%22http://testorder.allergan.com:1081/sap/bc/srt/rfc/sap/zvneedles/050/zvneedles/zvneedles%22/%3e%3c/wsdl:port%3e%3c/wsdl:service%3e%3c/wsdl:definitions%3e'.: java.io.FileNotFoundException: \<?xml version=""1.0"" encoding=""utf-8""?><wsdl:definitions targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsdl=""http:\schemas.xmlsoap.org\wsdl\"" xmlns:xsd=""http:\www.w3.org\2001\XMLSchema"" xmlns:soap=""http:\schemas.xmlsoap.org\wsdl\soap\"" xmlns:http=""http:\schemas.xmlsoap.org\wsdl\http\"" xmlns:mime=""http:\schemas.xml
soap.org\wsdl\mime\"" xmlns:tns=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:wsu=""http:\docs.oasis-open.org\wss\2004\01\oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:n1=""urn:sap-com:document:sap:rfc:functions""><wsdl:documentation><sidl:sidl xmlns:sidl=""http:\www.sap.com\2007\03\sidl""\><\wsdl:documentation><wsp:UsingPolicy wsdl:required=""true""\><wsp:Policy wsu:Id=""BN_BN_ZVNEEDLES""><saptrnbnd:OptimizedXMLTransfer uri=""http:\xml.sap.com\2006\11\esi\esp\binxml"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><saptrnbnd:OptimizedXMLTransfer uri=""http:\www.w3.org\2004\08\soap\features\http-optimization"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><wsp:ExactlyOne xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:sapsp=""http:\www.sap.com\webas\630\soap\features\security\policy"" xmlns:sp=""http:\docs.oasis-op
en.org\ws-sx\ws-securitypolicy\200702"" xmlns:wsa=""http:\www.w3.org\2005\08\addressing"" xmlns:wst=""http:\docs.oasis-open.org\ws-sx\ws-trust\200512"" xmlns:wsu=""http:\schemas.xmlsoap.org\ws\2002\07\utility"" xmlns:wsx=""http:\schemas.xmlsoap.org\ws\2004\09\mex""><wsp:All><sp:TransportBinding><wsp:Policy><sp:TransportToken><wsp:Policy><sp:HttpsToken\><\wsp:Policy><\sp:TransportToken><sp:AlgorithmSuite><wsp:Policy><sp:TripleDesRsa15\><\wsp:Policy><\sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict\><\wsp:Policy><\sp:Layout><\wsp:Policy><\sp:TransportBinding><\wsp:All><\wsp:ExactlyOne><\wsp:Policy><wsp:Policy wsu:Id=""IF_IF_ZVNEEDLES""><sapsession:Session xmlns:sapsession=""http:\www.sap.com\webas\630\soap\features\session\""><sapsession:enableSession>false<\sapsession:enableSession><\sapsession:Session><sapcentraladmin:CentralAdministration xmlns:sapcentraladmin=""http:\www.sap.com\webas\700\soap\features\CentralAdministration\"" wsp:Optional=""true""\><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfre
eNeedlesUpdate""><sapcomhnd:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesValidate""><sapcomhnd:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWS
RM><\wsp:Policy><wsdl:types><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:rfc:functions""><xsd:simpleType name=""char1""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""1""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char10""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""10""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char3""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""3""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char30""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""30""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><\xsd:schema><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:n0=""urn:sap-com:document:sap:rfc:functions""><xsd:import namespace=""urn:sap-com:document:sap:rfc:functions""\>
<xsd:simpleType name=""char35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><xsd:element name=""ZVfreeNeedlesValidate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:element name=""Name1"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesValidateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""City"" type=""n0:char35""\><xsd:element name=""CustName"" type=""tns:char35""\><xsd:element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""State"" type=""n0:char3""\><xsd:element name=""Street"" type=""n0:char35""\><xsd:element name=""Title"" type=""n0:char30""\><xsd:element name=""Valid"" type=""n0:char1""\><xsd:element name=""Zipcode"" type=""n0:char10""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr
"" type=""n0:char10""\><xsd:element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""Title"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""Acknowledge"" type=""n0:char1""\><\xsd:sequence><\xsd:complexType><\xsd:element><\xsd:schema><\wsdl:types><wsdl:message name=""ZVfreeNeedlesValidate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesValidate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesValidateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesValidateResponse""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesUpdate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesUpdateResponse""\><\wsdl:message><wsdl:portType name=""ZVNEEDLES""><wsp:Pol
icy><wsp:PolicyReference URI="" (The filename, directory name, or volume label syntax is incorrect)
        at com.ibm.wsdl.xml.WSDLReaderImpl.getDocument(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
        at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:239)
        at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:186)
        at org.apache.cxf.wsdl11.WSDLDefinitionBuilder.parseWSDL(WSDLDefinitionBuilder.java:78)
        ... 10 more
Caused by: java.io.FileNotFoundException: \<?xml version=""1.0"" encoding=""utf-8""?><wsdl:definitions targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsdl=""http:\schemas.xmlsoap.org\wsdl\"" xmlns:xsd=""http:\www.w3.org\2001\XMLSchema"" xmlns:soap=""http:\schemas.xmlsoap.org\wsdl\soap\"" xmlns:http=""http:\schemas.xmlsoap.org\wsdl\http\"" xmlns:mime=""http:\schemas.xmlsoap.org\wsdl\mime\"" xmlns:tns=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:wsu=""http:\docs.oasis-open.org\wss\2004\01\oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:n1=""urn:sap-com:document:sap:rfc:functions""><wsdl:documentation><sidl:sidl xmlns:sidl=""http:\www.sap.com\2007\03\sidl""\><\wsdl:documentation><wsp:UsingPolicy wsdl:required=""true""\><wsp:Policy wsu:Id=""BN_BN_ZVNEEDLES""><saptrnbnd:OptimizedXMLTransfer uri=""http:\xml.sap.com\2006\11\esi\esp\binxml"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:
Optional=""true""\><saptrnbnd:OptimizedXMLTransfer uri=""http:\www.w3.org\2004\08\soap\features\http-optimization"" xmlns:saptrnbnd=""http:\www.sap.com\webas\710\soap\features\transportbinding\"" wsp:Optional=""true""\><wsp:ExactlyOne xmlns:wsp=""http:\schemas.xmlsoap.org\ws\2004\09\policy"" xmlns:sapsp=""http:\www.sap.com\webas\630\soap\features\security\policy"" xmlns:sp=""http:\docs.oasis-open.org\ws-sx\ws-securitypolicy\200702"" xmlns:wsa=""http:\www.w3.org\2005\08\addressing"" xmlns:wst=""http:\docs.oasis-open.org\ws-sx\ws-trust\200512"" xmlns:wsu=""http:\schemas.xmlsoap.org\ws\2002\07\utility"" xmlns:wsx=""http:\schemas.xmlsoap.org\ws\2004\09\mex""><wsp:All><sp:TransportBinding><wsp:Policy><sp:TransportToken><wsp:Policy><sp:HttpsToken\><\wsp:Policy><\sp:TransportToken><sp:AlgorithmSuite><wsp:Policy><sp:TripleDesRsa15\><\wsp:Policy><\sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict\><\wsp:Policy><\sp:Layout><\wsp:Policy><\sp:TransportBinding><\wsp:All><\wsp:ExactlyOne><\wsp:Policy><wsp:Policy wsu:Id
=""IF_IF_ZVNEEDLES""><sapsession:Session xmlns:sapsession=""http:\www.sap.com\webas\630\soap\features\session\""><sapsession:enableSession>false<\sapsession:enableSession><\sapsession:Session><sapcentraladmin:CentralAdministration xmlns:sapcentraladmin=""http:\www.sap.com\webas\700\soap\features\CentralAdministration\"" wsp:Optional=""true""\><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesUpdate""><sapcomhnd:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\features\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsp:Policy wsu:Id=""OP_IF_OP_ZVfreeNeedlesValidate""><sapcomhnd:enableCommit xmlns:sapcomhnd=""http:\www.sap.com\NW05\soap\featu
res\commit\"">false<\sapcomhnd:enableCommit><sapblock:enableBlocking xmlns:sapblock=""http:\www.sap.com\NW05\soap\features\blocking\"">true<\sapblock:enableBlocking><saptrhnw05:required xmlns:saptrhnw05=""http:\www.sap.com\NW05\soap\features\transaction\"">no<\saptrhnw05:required><saprmnw05:enableWSRM xmlns:saprmnw05=""http:\www.sap.com\NW05\soap\features\wsrm\"">false<\saprmnw05:enableWSRM><\wsp:Policy><wsdl:types><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:rfc:functions""><xsd:simpleType name=""char1""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""1""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char10""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""10""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char3""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""3""\><\xsd:restriction><\xsd:simpleType><xsd:simpleType name=""char30""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""30""\><\xsd:restriction
><\xsd:simpleType><xsd:simpleType name=""char35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><\xsd:schema><xsd:schema attributeFormDefault=""qualified"" targetNamespace=""urn:sap-com:document:sap:soap:functions:mc-style"" xmlns:n0=""urn:sap-com:document:sap:rfc:functions""><xsd:import namespace=""urn:sap-com:document:sap:rfc:functions""\><xsd:simpleType name=""char35""><xsd:restriction base=""xsd:string""><xsd:maxLength value=""35""\><\xsd:restriction><\xsd:simpleType><xsd:element name=""ZVfreeNeedlesValidate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:element name=""Name1"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesValidateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""City"" type=""n0:char35""\><xsd:element name=""CustName"" type=""tns:char35""\><xsd:element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty
50"" type=""n0:char1""\><xsd:element name=""State"" type=""n0:char3""\><xsd:element name=""Street"" type=""n0:char35""\><xsd:element name=""Title"" type=""n0:char30""\><xsd:element name=""Valid"" type=""n0:char1""\><xsd:element name=""Zipcode"" type=""n0:char10""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdate""><xsd:complexType><xsd:sequence><xsd:element name=""Kunnr"" type=""n0:char10""\><xsd:element name=""Name"" type=""n0:char30""\><xsd:element name=""Qty100"" type=""n0:char1""\><xsd:element name=""Qty50"" type=""n0:char1""\><xsd:element name=""Title"" type=""n0:char30""\><\xsd:sequence><\xsd:complexType><\xsd:element><xsd:element name=""ZVfreeNeedlesUpdateResponse""><xsd:complexType><xsd:sequence><xsd:element name=""Acknowledge"" type=""n0:char1""\><\xsd:sequence><\xsd:complexType><\xsd:element><\xsd:schema><\wsdl:types><wsdl:message name=""ZVfreeNeedlesValidate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesValidate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesValidateResponse""
><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesValidateResponse""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdate""><wsdl:part name=""parameters"" element=""tns:ZVfreeNeedlesUpdate""\><\wsdl:message><wsdl:message name=""ZVfreeNeedlesUpdateResponse""><wsdl:part name=""parameter"" element=""tns:ZVfreeNeedlesUpdateResponse""\><\wsdl:message><wsdl:portType name=""ZVNEEDLES""><wsp:Policy><wsp:PolicyReference URI="" (The filename, directory name, or volume label syntax is incorrect)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.<init>(FileInputStream.java:106)
        at java.io.FileInputStream.<init>(FileInputStream.java:66)
        at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:70)
        at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:161)
        at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:653)
        at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:186)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:772)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
        ... 16 more

E:\apache-cxf\bin>
******************************************************************",,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointPolicyImpl overcalculating the required vocabulary,CXF-3542,12507931,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,dkulp,dkulp,20/May/11 21:15,08/Aug/11 14:43,14/Mar/19 02:29,21/May/11 01:39,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,,,,,,"
EndpointPolicyImpl.initializeVocabulary() is creating the vocabulary for input, output, and faults.   On the server side, it only needs to calculate the vocab for the input.   On the client side, for the output and faults.   

It's not a huge deal, but it makes the AssertionInfoMap larger and thus requires slightly more processing.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5866,,,2011-05-20 21:15:48.0,,,,,,0|i0b907:,63571,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java - XmlBeans Binding does not handle collections/array properly,CXF-3541,12507887,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,czhang1690,czhang1690,20/May/11 16:29,08/Aug/11 14:43,14/Mar/19 02:29,25/May/11 01:03,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Tooling,,,,0,,,,,,"Generated Java code using CXF wsdl2java with xmlbeans databinding contains wrong return type for collections/arrays.

To reproduce the problem.

   1. Use CustomerService.wsdl file from the wsdl_first sample.
   2. Run wsdl2java without a binding file.
   3. Look at the generated interface CustomerService.java

The generated code for getCustomersByName operation on CustomerService service is shown below
 
  @WebService(targetNamespace = ""http://customerservice.example.com/"", name = ""CustomerService"")
  @DataBinding(org.apache.cxf.xmlbeans.XmlBeansDataBinding.class)
  public interface CustomerService {
      @WebResult(name = ""return"", targetNamespace = """")
      @RequestWrapper(localName = ""getCustomersByName"", targetNamespace = ""http://customerservice.example.com/"", 
                      className = ""com.example.customerservice.GetCustomersByNameDocument"")
      @WebMethod
      @ResponseWrapper(localName = ""getCustomersByNameResponse"", targetNamespace = ""http://customerservice.example.com/"", 
                       className = ""com.example.customerservice.GetCustomersByNameResponseDocument"")
      public com.example.customerservice.Customer getCustomersByName(
           @WebParam(name = ""name"", targetNamespace = """")
           String name
      ) throws NoSuchCustomerException;
   }
 
Note that the getCustomersByName () method returns Customer object. 
Based on the CusotmerService.wsdl, it should return a list of Customers or the wrapper GetCustomersByNameResponse object.

Workaround (Credit Daniel Kulp):

You can flip it to BARE mode by creating a small binding file containing:

<jaxws:bindings
    wsdlLocation=""CustomerService.wsdl""
    xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws"">
    <jaxws:enableWrapperStyle>false</jaxws:enableWrapperStyle>
</jaxws:bindings>

and passing that to wsdl2java via the -b flag.   That would force the BARE 
mode and wouldn't attempt the unwrapping.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5888,,,2011-05-20 16:29:11.0,,,,,,0|i0b7qn:,63366,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS PrimitiveTextProvider ignores media type charset parameters on the input,CXF-3540,12507860,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/May/11 11:03,08/Aug/11 14:43,14/Mar/19 02:29,20/May/11 11:15,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5859,,,2011-05-20 11:03:28.0,,,,,,0|i0b92f:,63581,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when sending packet to STS using default namespaces instead of namespace prefixes,CXF-3539,12507811,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,akphipps,akphipps,19/May/11 20:35,08/Aug/11 14:43,14/Mar/19 02:29,25/May/11 18:17,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Core,,,,0,Exception,NPE,,,,"common/common/src/main/java/org/apache/cxf/staxutils/StaxSource#getAttributes() sets the ""localname"" to null for default namespaces changes.  However, when this is set it causes JAXB binding to throw an NPE in com.sun.xml.internal.bind.v2.util.QNameMap.hash().  This occurs when creating an STS using the CXF STS provider framework and sending a RST packet which uses default namespaces instead of namespace prefixes.

A workaround that seems to work for the STS is setting the localname to """" instead of null, however I'm not sure what other effects that might have.

Example packet:
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:s=""http://www.w3.org/2001/XMLSchema"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""><SOAP-ENV:Header><Security xmlns=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><Timestamp xmlns=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp""><Created>2011-05-19T20:25:45.197Z</Created><Expires>2011-05-19T20:30:45.197Z</Expires></Timestamp><BinarySecurityToken EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"" wsu:Id=""SecurityToken"">...snip...</BinarySecurityToken><Signature xmlns=""http://www.w3.org/2000/09/xmldsig#""><SignedInfo><CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/><SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1""/><Reference URI=""#Timestamp""><Transforms><Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/></Transforms><DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""/><DigestValue>...snip...</DigestValue></Reference></SignedInfo><SignatureValue>...snip...</SignatureValue><KeyInfo><SecurityTokenReference xmlns=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><Reference URI=""#SecurityToken"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3""/></SecurityTokenReference></KeyInfo></Signature></Security></SOAP-ENV:Header><SOAP-ENV:Body><RequestSecurityToken xmlns=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"" xmlns:s=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""><SecondaryParameters><TokenType>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1</TokenType></SecondaryParameters><RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</RequestType><AppliesTo xmlns=""http://schemas.xmlsoap.org/ws/2004/09/policy""><EndpointReference xmlns=""http://www.w3.org/2005/08/addressing""><Address>...snip...</Address></EndpointReference></AppliesTo><KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</KeyType><KeySize>256</KeySize></RequestSecurityToken></SOAP-ENV:Body></SOAP-ENV:Envelope>

Example stacktrace:

java.lang.NullPointerException
        at com.sun.xml.internal.bind.v2.util.QNameMap.hash(QNameMap.java:201)
        at com.sun.xml.internal.bind.v2.util.QNameMap.getEntry(QNameMap.java:452
)
        at com.sun.xml.internal.bind.v2.util.QNameMap.get(QNameMap.java:147) [note: 2nd param(s1)  = null]
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.StructureLoader.sta
rtElement(StructureLoader.java:187)                                          [note: s1 = attributes.getLocalName(i); . .... = null]
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.ProxyLoader.startEl
ement(ProxyLoader.java:44)
        at com.sun.xml.internal.bind.v2.runtime.ElementBeanInfoImpl$IntercepterL
oader.startElement(ElementBeanInfoImpl.java:226)
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContex
t._startElement(UnmarshallingContext.java:470)
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContex
t.startElement(UnmarshallingContext.java:448)
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.InterningXmlVisitor
.startElement(InterningXmlVisitor.java:60)
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.SAXConnector.startE
lement(SAXConnector.java:137)
        at org.apache.cxf.staxutils.StaxSource.parse(StaxSource.java:138)
        at org.apache.cxf.staxutils.StaxSource.parse(StaxSource.java:270)
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.un
marshal0(UnmarshallerImpl.java:200)
        at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.un
marshal(UnmarshallerImpl.java:173)
        at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnm
arshallerImpl.java:120)
        at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnm
arshallerImpl.java:103)
        at org.apache.cxf.ws.security.sts.provider.SecurityTokenServiceProvider.
convertToJAXBObject(SecurityTokenServiceProvider.java:255)
        at org.apache.cxf.ws.security.sts.provider.SecurityTokenServiceProvider.
invoke(SecurityTokenServiceProvider.java:182)
        at org.apache.cxf.ws.security.sts.provider.SecurityTokenServiceProvider.
invoke(SecurityTokenServiceProvider.java:64)
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-25 18:17:35.21,,,no_permission,,,,,,,,,,,,,5910,,,Wed May 25 18:17:35 UTC 2011,,,,,,0|i0b7k7:,63337,,,,,,,,"25/May/11 18:17;dkulp;
It looks like """" is the right thing to do so I've changed it to do that.",,,,,,,,,,,,,,,,,,,,,,,,,,
RMTxStore unable to create tables in Oracle DB (SQL Error: ORA-00902: invalid datatype),CXF-3534,12507597,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,ay,maciejstarzyk,maciejstarzyk,18/May/11 11:34,08/Aug/11 14:43,14/Mar/19 02:29,27/May/11 13:48,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,ORA-00902,Oracle,,,,"Between CXF 2.3.4 and 2.4.0 in RMTxStore there is a change in data types for RM tables. All DECIMAL types have been changed to BIGINT. When starting application which uses RM the RMTxStore throws exception trying to create tables in Oracle DB:

java.sql.SQLSyntaxErrorException: ORA-00902: invalid datatype
 
        at oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:91)
        at oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:112)
        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:173)
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:455)
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:413)
        at oracle.jdbc.driver.T4C8Oall.receive(T4C8Oall.java:1030)
        at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:183)
        at oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:936)
        at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1222)
        at oracle.jdbc.driver.OracleStatement.executeUpdateInternal(OracleStatement.java:1706)
        at oracle.jdbc.driver.OracleStatement.executeUpdate(OracleStatement.java:1674)
        at oracle.jdbc.driver.OracleStatementWrapper.executeUpdate(OracleStatementWrapper.java:274)
        at org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore.createTables(RMTxStore.java:603)
        at org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore.init(RMTxStore.java:668)
   ",Oracle DB: 10.1.0.5.0 ,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-24 09:02:50.771,,,no_permission,,,,,,,,,,,,,5998,,,Fri May 27 13:48:12 UTC 2011,,,,,,0|i0b8yf:,63563,,,,,,,,"24/May/11 09:02;ay;Hi,
I think the best option would be to keep the code part of RMTxStore unchanged but simply to change those BIGINT types to DECIMAL(19,0) in the DB-schema declaration in this class. 
I thought we may have problems changing the DB-schema, but I think it should be okay because of the compatibilty between DECIMAL and BIGINT, both of which can be read via getLong().

regards, aki 
","24/May/11 19:42;ay;Maybe we need to first clarify which drivers are supported by RMTxStore and discuss how we should proceed.

Althought it's simple to make the current RMTxStore to also work for Oracle, the question remains for other drivers (e.g., MSSQL not working with BLOB).

If we want to support other drivers or make life easier for people writing their own store implementaiton, should we introduce an abtraction in RMTxStore? 

please comment.
thanks. aki","27/May/11 13:48;ay;Replaced BIGINT with DECIMAL(19,0) and this will now work for Oracle DB.

For other drivers, I will create a separate jira feature ticket.

Thus, I am closing this ticket.
regards, aki",,,,,,,,,,,,,,,,,,,,,,,,
jms set username/password missmatch,CXF-3532,12507556,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,18/May/11 03:38,08/Aug/11 14:43,14/Mar/19 02:29,19/May/11 02:52,,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,,,,,0,,,,,,"related discussion from maillinglist[1]
[1]http://cxf.547215.n5.nabble.com/JMS-Username-Password-issue-td4384709.html",,,,,,,,,,,,,,,,,18/May/11 13:29;cpike;patch.txt;https://issues.apache.org/jira/secure/attachment/12479587/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-18 13:29:20.687,,,no_permission,,,,,,,,,,,,,5881,,,Thu May 19 02:52:56 UTC 2011,,,,,,0|i0b9a7:,63616,,,,,,,,18/May/11 13:29;cpike;Patch correctly sets JMS connection password.  Also includes slight refactoring for testability.,"19/May/11 02:52;ffang;apply patch on behalf of Christopher Pike with thanks
http://svn.apache.org/viewvc?rev=1124521&view=rev for trunk
http://svn.apache.org/viewvc?rev=1124523&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
CXF doesn't always generate 415 when POSTing to a resource with an invalid media type,CXF-3531,12507548,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,kfung,kfung,18/May/11 01:11,08/Aug/11 14:43,14/Mar/19 02:29,18/May/11 18:05,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"When you POST to a resource using an invalid Content-Type of ""foo"", CXF doesn't return 415.

Instead, CXF throws a 500 because an IllegalArgumentException is thrown instead of a WebApplicationException.
",JDK 1.6,,,,,,,,,,,,,,,,18/May/11 01:18;kfung;cxf.post.mediatype.trunk.diff;https://issues.apache.org/jira/secure/attachment/12479537/cxf.post.mediatype.trunk.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-18 18:05:53.607,,,no_permission,,Novice,,,,,,,,,,,5869,,,Wed May 18 18:05:53 UTC 2011,,,,,,0|i0b93b:,63585,,,,,,,,"18/May/11 01:18;kfung;Potential patch for this issue.

Basically, if an {{IllegalArgumentException}} while parsing the MediaType, we will convert that into a {{WebApplicationException}} with a 415 status code.

Added a systest to catch this scenario. Unfortunately, I had to use {{HttpURLConnection}} instead of {{WebClient}} because {{WebClient}} actually validates media types :)","18/May/11 18:05;sergey_beryozkin;patch applied, thanks.
Actually, I forgot again to mention the contributor's name in the commit message, really sorry. The patch point has been accumulated anyway, thanks",,,,,,,,,,,,,,,,,,,,,,,,,
Performing an OPTIONS on a JAX-RS subresource causes CXF to generate a 405 status instead of a 200 status,CXF-3530,12507546,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,kfung,kfung,18/May/11 00:04,08/Aug/11 14:43,14/Mar/19 02:29,19/May/11 21:22,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"If you OPTIONS the subresource of a JAX-RS resource, CXF's JAX-RS implementation returns 405 instead of 200.

If you OPTIONS a JAX-RS resource directly, CXF generates a 200.
",JDK 1.6,,,,,,,,,,,,,,,,18/May/11 00:08;kfung;cxf.subresource.options.trunk.diff;https://issues.apache.org/jira/secure/attachment/12479535/cxf.subresource.options.trunk.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,5862,,,Wed May 18 00:08:19 UTC 2011,,,,,,0|i0b92n:,63582,,,,,,,,"18/May/11 00:08;kfung;Attaching a potential patch for this issue.

This patch copies the behaviour as seen in the working case in {{JAXRSInInterceptor.processRequest}} and applies it to {{JAXRSInvoker.invoke}}.

Also added a systest so that this issue doesn't regress in the future.",,,,,,,,,,,,,,,,,,,,,,,,,,
TransformFeature can not be applied to outtbound explicit collections,CXF-3528,12507478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,17/May/11 11:21,08/Aug/11 14:43,14/Mar/19 02:29,17/May/11 12:19,2.3.4,2.4.1,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"If a resource method returns an explicit collection such as List<Book> then attempting to transform the output with TransformFeature fails.
This is due to the fact JAX-RS JAXB providers manage the process of writing the collections manually, they manually write a collection wrapper tag and then they serialize every collection member individually",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5865,,,2011-05-17 11:21:03.0,,,,,,0|i0b97z:,63606,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointer exception when interface contains generics,CXF-3527,12507458,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,vasvir,vasvir,17/May/11 08:31,08/Aug/11 14:43,14/Mar/19 02:29,26/May/11 12:15,2.3.3,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Aegis Databinding,,,,0,,,,,,"The following code fails with a NULL pointer exception in deploy. Always the same. In order to reproduce the problem you have to uncomment the method declarations otherwise the war does not deploy.

What I would like in case it is not possible to make it work in Aegis due to other constraints is a better error mentioning the problematic method because right now I have to suspect all methods and play binary search to find the problematic ones.

    // fails with null pointer exception in deploy
    // public T testGeneric(Collection<T> collection);

    // success
    public Integer testGeneric(Collection<T> collection);

    // fails with null pointer exception in deploy
    // public <T1, T2> Pair<T1, T2> testReturnGenericPair(T1 first, T2 second);

    // fails with null pointer exception in deploy
    // public Pair<Integer, String> testReturnQualifiedPair(Integer first,
    // String second);

    // fails with null pointer exception in deploy
    // public <T1, T2> int testGenericPair(Pair<T1, T2> pair);

    // fails with null pointer exception in deploy
    // public int testQualifiedPair(Pair<Integer, String> pair);

You cant find the eclipse project attached in 
https://issues.apache.org/jira/browse/CXF-3526

and here is the exception

May 16, 2011 5:38:12 PM org.apache.catalina.core.StandardContext listenerStart
SEVERE: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'test': Invocation of init method failed; nested exception is java.lang.NullPointerException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1420)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:580)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)
        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:799)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:779)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:601)
        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:943)
        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:563)
        at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1397)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:616)
        at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:297)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:857)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:795)
        at org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1500)
        at org.apache.catalina.manager.ManagerServlet.deploy(ManagerServlet.java:849)
        at org.apache.catalina.manager.ManagerServlet.doGet(ManagerServlet.java:351)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:636)
Caused by: java.lang.NullPointerException
        at org.apache.cxf.aegis.type.AbstractTypeCreator.isArray(AbstractTypeCreator.java:167)
        at org.apache.cxf.aegis.type.AbstractTypeCreator.createTypeForClass(AbstractTypeCreator.java:113)
        at org.apache.cxf.aegis.type.AbstractTypeCreator.createType(AbstractTypeCreator.java:390)
        at org.apache.cxf.aegis.type.basic.BeanTypeInfo.getType(BeanTypeInfo.java:192)
        at org.apache.cxf.aegis.type.basic.BeanType.getDependencies(BeanType.java:532)
        at org.apache.cxf.aegis.databinding.AegisDatabinding.addDependencies(AegisDatabinding.java:394)
        at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeMessage(AegisDatabinding.java:370)
        at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeOperation(AegisDatabinding.java:273)
        at org.apache.cxf.aegis.databinding.AegisDatabinding.initialize(AegisDatabinding.java:239)
        at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:442)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:505)
        at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:242)
        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:148)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:616)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1544)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1485)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1417)
        ... 45 more
May 16, 2011 5:38:12 PM org.apache.catalina.core.ApplicationContext log
INFO: Closing Spring root WebApplicationContext
",Debian GNU/Linux Tomcat6,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-26 12:15:45.207,,,no_permission,,,,,,,,,,,,,6002,,,Thu May 26 12:15:45 UTC 2011,,,,,,0|i0b91z:,63579,,,,,,,,"26/May/11 12:15;ffang;commit fix
http://svn.apache.org/viewvc?rev=1127829&view=rev for trunk
http://svn.apache.org/viewvc?rev=1127855&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis cannot handle nested map inheritance,CXF-3526,12507455,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,vasvir,vasvir,17/May/11 08:08,08/Aug/11 14:43,14/Mar/19 02:29,25/May/11 10:25,2.3.3,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Aegis Databinding,,,,0,,,,,,"The following code fails when trying to retrieve data with the simple fronted

    public class ComplexMapResult extends
            HashMap<String, Map<Integer, Integer>> {
    }

    // fail returns null map value
    public ComplexMapResult testComplexMapResult();

How it fails. On retrieve when I try to print the resulting matrix I get
INFO: client.TestClient.testComplexMapResult(TestClient.java:35): {key1=[#document: null]}
where I should get a valid map for the key ""key1""

The following code succeeds

    // success
    public Map<String, Map<Integer, Integer>> testDirectComplexMapResult();

So my guess is Aegis doesn't handle the inheritance very well.

Further more the following code succeeds

    // success
    public class SimpleMapResult extends HashMap<String, Integer> {
    }

    // success
    public SimpleMapResult testSimpleMapResult();

so that means it handles the extension when there is no nesting

I will try to attach the eclipse project for this (~7k)
",Debian GNU/Linux tomcat 6,,,,,,,,,,,,,,,,17/May/11 08:12;vasvir;ws-test.tgz;https://issues.apache.org/jira/secure/attachment/12479436/ws-test.tgz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-25 10:07:08.017,,,no_permission,,,,,,,,,,,,,5892,,,Tue May 31 09:29:58 UTC 2011,,,,,,0|i0b7mf:,63347,,,,,,,,"17/May/11 08:12;vasvir;And here is the eclipse project. You will need the following jars
cxf-libraries
log4j
commons-logging","25/May/11 10:07;ffang;Hi,

As the super class HashMap<String, Map<Integer, Integer>> of ComplexMapResult isn't directly visible by reflection of the service interface, so actually this is the expected behavior, the solution(as described from[1],Using Java Classes That Aren't Visible to the Service Interface) is declare the method signature using base type(HashMap<String, Map<Integer, Integer>> for your case)

So the code should be
{code}
Map<String, Map<Integer, Integer>> testComplexMapResult();
{code}
in interface
and 
{code}
public Map<String, Map<Integer, Integer>> testComplexMapResult() {
        ComplexMapResult result 
            = new ComplexMapResult();
        Map<Integer, Integer> map1 = new HashMap<Integer, Integer>();
        map1.put(1, 3);
        result.put(""key1"", map1);
        return result;

    }
{code}

in impl class.

Anyway, I'm going to commit a testcase to demonstrate how it works.
[1]http://cxf.apache.org/docs/aegis-21.html

Freeman","25/May/11 10:25;ffang;not a real fix but a testcase demonstrate how to use inherited nested map with aegis databinding
http://svn.apache.org/viewvc?rev=1127459&view=rev for trunk
http://svn.apache.org/viewvc?rev=1127464&view=rev for 2.3.x branch","25/May/11 13:54;vasvir;Looks like that I missed the documentation.

Do you think that it would be possible to give a warning when that happens during deploy so the user can tell when something goes wrong from the logs and not wait the runtime to see the problem.

Thanks","31/May/11 09:29;ffang;Hi,

Honestly I'm not so sure if it's a good idea we should add such warning message, IMHO interface oriented programming should be a good practice, if you don't follow it, you may encounter some side effect. If we add warning message for such potential problem I'm afraid we may need add too many warning message everywhere else. :-)

Freeman",,,,,,,,,,,,,,,,,,,,,,
JAXB provider can not read explicit collections of beans which have no @XmlRootElement,CXF-3525,12507413,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,16/May/11 21:25,08/Aug/11 14:43,14/Mar/19 02:29,16/May/11 21:31,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5860,,,2011-05-16 21:25:39.0,,,,,,0|i0b9dr:,63632,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support Derived Keys with the Symmetric Binding + SAML Assertions,CXF-3524,12507378,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,16/May/11 16:00,08/Aug/11 14:43,14/Mar/19 02:29,01/Jun/11 14:14,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,,,,,,"There are a couple of problems with using Derived Keys pointing towards SAML Assertions when using the symmetric binding:

 1) The SymmetricBindingHandler can't handle creating a reference to SAML Assertion if the security token does not have a (un)attached Reference to the Assertion.
 2) In the holder-of-key case, using a derived key will cause the holder-of-key requirements processing to fail.

Creating a JIRA + patch for this, as it depends on a fix in WSS4J 1.6.1 which is not released yet.",,,,,,,,,,,,,,,,,16/May/11 16:04;coheigea;cxf-3524.patch;https://issues.apache.org/jira/secure/attachment/12479340/cxf-3524.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,Blocked on External,,,,,,no_permission,,,,,,,,,,,,,5902,,,2011-05-16 16:00:23.0,,,,,,0|i0b8rz:,63534,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebClient doesn't handle responses containing a quoted-string in a header correctly,CXF-3518,12507253,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,kfung,kfung,15/May/11 05:30,08/Aug/11 14:43,14/Mar/19 02:29,17/May/11 13:03,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"Similar to CXF-2462, if a request returns a response header that looks like the following:

bq. {{q: ""stuff with commas, and spaces""}}

WebClient's response.getMetadata() returns 2 values:

{quote}
# ""stuff with commas
# and spaces""
{quote}

while the correct response should be:

{quote}
# stuff with commas, and spaces
{quote}

Here's the WebClient code which reproduces the issue (as long as the server response contains a header that returns the header value above):

{code:Java}
Response r = WebClient.create(new URI(""http://localhost:8080"")).path(""key/quoted"").get();
List<Object> l = r.getMetadata().get(""q"");
{code}
",JDK 1.6,,,,,,,,,,,,,,,,15/May/11 05:42;kfung;trunk.wc_quote_minimal.diff;https://issues.apache.org/jira/secure/attachment/12479250/trunk.wc_quote_minimal.diff,17/May/11 06:45;kfung;trunk.webclient.quote.try2.diff;https://issues.apache.org/jira/secure/attachment/12479434/trunk.webclient.quote.try2.diff,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-05-16 20:08:45.874,,,no_permission,,Novice,,,,,,,,,,,5854,,,Tue May 17 13:03:51 UTC 2011,,,,,,0|i0b987:,63607,,,,,,,,"15/May/11 05:42;kfung;Here's my first attempt at a patch for this issue against trunk.

I'm more than willing to make further changes if anyone has any feedback.

Three specific comments about this patch from my side:
* To leverage the work done in CXF-2462, instead of rolling our own header parsing code in {{WebClient}}, {{HttpHeadersImpl}} is used to do the header parsing.
* This patch could be made more efficient by adding a function to {{HttpHeadersImpl}} to return a {{Map<String, List<String>>}} (see comment in patch). If you don't object to the function addition, I can update the patch with this change.
* I was also looking into adding a unit test but it seems there's no easy way for me to do so (because the header parsing done in {{WebClient}} is only done after a physical connection to a server). If anyone has any feedback on how to add a unit test for this, I'll greatly appreciate it.","16/May/11 20:08;sergey_beryozkin;Hi, thanks for this patch.

I'm a bit concerned about introducing HttpHeaderImpl in there, given that some headers, notably Set-Cookie, can contain a combination of all sort of values, ex, 
Set-Cookie: bar.com.anoncart=107894933471602436; Domain=.bar.com;Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/

and I'm worried we could break some existing code there if we try to generalize, because HttpHeadersImpl will split by default.

What do you think of the following approach:

I reckon that realistically, as far as \"" character is concerned, we can expect
SomeHeader: ""some text, some more text""

or

SomeHeader: ""some text, some more text"",""even more text""

but not 

SomeHeader: ""some text, some more text with inlined \""""
which may not be even legal.

So would checking if the header value starts with \"" and if yes then parse it using fast indexOf will work well in most/all such cases ?

Cheers, Sergey
","16/May/11 20:52;kfung;For my use cases, your suggestion will work:

bq. So would checking if the header value starts with \"" and if yes then parse it using fast indexOf will work well in most/all such cases ? 

However, this is technically allowed (per RFC2616, section 2.2, see quoted-pair)

bq. SomeHeader: ""some text, some more text with inlined \""""

What do you think of me submitting another patch that works for the following use cases:

* {{SomeHeader: ""some text, some more text""}}
* {{SomeHeader: ""some text"",""quoted,text"",""even more text""}}
* {{SomeHeader: ""some text, some more text with inlined \""""}}

but would fail for the following use case:

* {{SomeHeader: some text,""other quoted, text"",""blah""}}

Because we're doing text scanning, I'm thinking that the most efficient way to do this is actually going character by character in the string (converting to {{char[]}} first) than using indexOf. However, I could do a benchmark to see which is faster and choose that for the patch :)

What do you think?","16/May/11 20:59;sergey_beryozkin;Hi

Failing

* {{SomeHeader: some text,""other quoted, text"",""blah""}}

is not a problem because it's reasonable to expect multiple SomeHeader headers in such cases.

SomeHeader: some text
SomeHeader: ""other quoted, text"",""blah""

If we ever get a single line like that then we can see what can be improved. We can always have contextual properties which can tell the client which headers may need some special processing/etc

thanks, Sergey
","16/May/11 21:05;kfung;Okay, that works for me. I'll work on this tonight then.

By the way, did you have any suggestions for the unit test question I had? Is there a way I can easily/moderately add a unit test for this?

-kl","16/May/11 21:17;sergey_beryozkin;At the moment the fact that HttpURLConnection is directly dealt with is problematic. We will definitely refactor the client runtime, for the async conduit be supported better, for a local transport be supported, etc. That will have to become a priority soon enough, however we are more focused at the moment on wadl and security.

In meantime, I tend to update real system tests to test such cases, ex, please copy & paste one of BookStore methods in systest/jaxrs and then add a test invocation in JAXRSClientServerBookTest. That will work with Jetty. I believe one can do a similar test even in rt/frontend/jaxrs, but I'll need to review how it can be done

Cheers, Sergey 



","17/May/11 06:45;kfung;I've implemented the ""good enough"" proposal per the feedback from Sergey.

As long as long all the values inside the header are appropriately quoted, they will be available to {{WebClient}}. If the values aren't quoted correctly, {{WebClient}} will apply a ""best effort"" approach to return the header data from the server to the client.

I've also added/modified three system tests to component test these changes:
* I've extended the ETag test to make sure the current {{WebClient}} behaviour remains - that is, if the server returned quoted values, {{WebClient}} also return quoted values.
* Added a test for quoted-strings in headers
* Added a test for malformed quoted-strings in headers & broken per spec case discussed above","17/May/11 13:03;sergey_beryozkin;Patch with a minor modification has been applied, many thanks.
I just had to update AbstractClient to check if a given value was empty or null, before testing if it was quoted


http://svn.apache.org/viewvc?rev=1104217&view=rev",,,,,,,,,,,,,,,,,,,
Karaf features descriptor override the ASM bundle in the jetty feature,CXF-3515,12507135,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,jbonofre,jbonofre,13/May/11 14:39,08/Aug/11 14:43,14/Mar/19 02:29,16/May/11 06:29,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,OSGi,,,,0,,,,,,"CXF defines the ASM bundle in the jetty feature.

Installing the jetty feature, due to the ASM bundle refresh (used in the Karaf system bundles), could set Karaf is an unstable state.

CXF jetty feature shouldn't define the ASM bundle and should use the one provided by Karaf.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-16 06:19:54.77,,,no_permission,,,,,,,,,,,,,5857,,,Mon May 16 06:29:49 UTC 2011,,,,,,0|i0b95r:,63596,,,,,,,,"16/May/11 06:19;njiang;I think we can remove the Jetty feature like camel does, and reuse karaf one by default.
For the ASM bundle, I just updated the ASM 3.3 bundle version that CXF use, it will not cause ASM bundle refreshing within karaf 2.2.1 anymore.",16/May/11 06:29;njiang;Removed the jetty feature from apache-cxf.,,,,,,,,,,,,,,,,,,,,,,,,,
Interaction of JAXWS Handler and WSS4JInInterceptor breaks SOAP Message,CXF-3514,12507130,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,diru,diru,13/May/11 14:12,27/May/11 11:24,14/Mar/19 02:29,26/May/11 00:53,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,JAX-WS Runtime,WS-* Components,,,0,security,,,,,Adding a JAXWS Handler (SOAPHandler implementation) to an endpoint configuration that uses the WSS4JInInterceptor breaks the recieved SOAPMessage. This results in missing binding or parameter information while invoking the webservice methods.,The java_first_spring_support example.,,,,,,,,,,,,,,,,13/May/11 14:17;diru;SOAPRequestHandler.java;https://issues.apache.org/jira/secure/attachment/12479103/SOAPRequestHandler.java,13/May/11 14:17;diru;UTPasswordCallback.java;https://issues.apache.org/jira/secure/attachment/12479102/UTPasswordCallback.java,13/May/11 14:17;diru;beans.xml;https://issues.apache.org/jira/secure/attachment/12479101/beans.xml,13/May/11 14:17;diru;pom.xml;https://issues.apache.org/jira/secure/attachment/12479104/pom.xml,,,,4.0,,,,,,,,,,,,,,,,,,,,2011-05-26 00:53:37.878,,,no_permission,,,,,,,,,,,,,5994,,,Fri May 27 11:24:12 UTC 2011,,,,,,0|i0b91r:,63578,,,,,,,,"13/May/11 14:17;diru;To reporduce the problem add this files to the java_first_spring_support example.

pom.xml
webapp/WEB-INF/beans.xml
src/demo/spring/servlet/UTPasswordCallback.java
src/demo/spring/servlet/SOAPRequestHandler.java
","13/May/11 14:20;diru;I fixed this issue by adding the WSS4JInInterceptor before the SOAPHandlerInInterceptor but this is only a dirty work around.
In my project I have to use the SOAPHandler to start/stop the Seam lifecycle that is also needed by the PasswordCallback.","26/May/11 00:53;dkulp;I created a whole new phase for the JAX-WS handlers to live in.  Thus, this should now be fixed, but if you could run your tests with tomorrows snapshots (or build from trunk), that would be great.","27/May/11 08:05;diru;I tested your changes against the java_first_spring_support example and my current project and it works for both.

The last unresolved question remaining in my mind is, why the WSS4JInInterceptor can't  be run after the SOAPHandlerInterceptor? When I set the Phase for a custom WSS4JInInterceptor to USER_PROTOCOL (for example) the same problems occure. 
The background of my question is this. I use a jaxws handler to start an application lifecycle (seam framework), which is already needed in the PasswordCallback invoked by the WSS4JInInterceptor.","27/May/11 11:00;dkulp;
Per JAX-WS spec, we have to fill in the operation name in the context when passing into the JAX-WS handlers.   In many cases, we need to have the body decrypted in order to figure out the operation that is being invoked which is the primary reason for having the WSS4J stuff run before hand.  ","27/May/11 11:24;diru;Ok. I will try to implement a CXF specific interceptor for starting the seam lifecycle.

Thank you.",,,,,,,,,,,,,,,,,,,,,
wrong destination determination by OSGi based CXF entry point (regarding its fallback logic),CXF-3510,12506869,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,11/May/11 16:00,08/Aug/11 14:43,14/Mar/19 02:29,23/May/11 14:28,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Transports,,,,0,,,,,,"This problem is described in cxf-user thread

http://cxf.547215.n5.nabble.com/strange-destination-determination-logic-used-by-the-osgi-based-cxf-entry-point-td4385312.html

In summary, the http entry point in the OSGi container uses the destination determination logic using a simple request path matching when there is no exact match of the request URL path to one of the registered destination paths. Consequently, when you have a service registered at ""/abc"", a request to any URL path starting with this string, for example, ""/abc2"", ""/abctest"" is also fowarded to this service. And this is not intended.

The intention of this fallback logic was for the rest based calls to forward a request with an additional path argument to its correct service. For examples, requests to ""/abc/def"" or ""/abc/1/2"" should be forwarded to the service registered at ""/abc"".

I'll be suggesting the change required in org.apache.cxf.transport.http_osgi.OsgiServletController for 2.3.x and org.apache.cxf.transport.http.DestinationRegistryImpl for 2.4.x.


",,7200,7200,,0%,7200,7200,,,,,,CXF-3559,,,,12/May/11 17:52;ay;2.3.x-fixes-20110512.diff.txt;https://issues.apache.org/jira/secure/attachment/12478997/2.3.x-fixes-20110512.diff.txt,12/May/11 17:52;ay;trunk-20110512.diff.txt;https://issues.apache.org/jira/secure/attachment/12478998/trunk-20110512.diff.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-05-11 16:19:05.95,,,no_permission,,,,,,,,,,,,,5766,,,Mon May 23 14:28:52 UTC 2011,,,,,,0|i0b70n:,63249,,,,,,,,"11/May/11 16:19;sergey_beryozkin;It is also meant to serve SOAP GET requests where method name and parameter value is embedded in URI
","12/May/11 17:52;ay;Attached are the 2.3.x and trunk fixes with unit tests.

M       2.3.x-fixes/rt/transports/http-osgi/src/test/java/org/apache/cxf/transport/http_osgi/OsgiServletTest.java
M       2.3.x-fixes/rt/transports/http-osgi/src/main/java/org/apache/cxf/transport/http_osgi/OsgiServletController.java

A       trunk/rt/transports/http/src/test/java/org/apache/cxf/transport/http/DestinationRegistryImplTest.java
M       trunk/rt/transports/http/src/main/java/org/apache/cxf/transport/http/DestinationRegistryImpl.java

The path matching code checks the trailing '/' to avoid false matching. This change itself is straightforward.

The test class is also straightforward for 2.4.x, as the method to be tested is public. In cotrast, it is somehow complicated for 2.3.x, as the coresponding method is not public and the test uses another accessible method.

For both codelines, the provided tests cover the cases that we discussed in the dev@cxf mailing list.

regards, aki","13/May/11 15:15;sergey_beryozkin;Hi Aki - that looks like a very effective solution, I was thinking of splitting and comparing segments but your solution is much simpler, looks good","23/May/11 08:13;ay;trunk - Committed revision 1126369.
2.3.x-fixed - Committed revision 1126371.","23/May/11 12:43;ay;the code submitted with the previous patch does not match the request (e.g., /bookstore/books/123) against the regisered service when the service is registered at the root ""/"". Consequently, the change is breaking some of the jaxrs systest.

I need to add the path.equals(""/"") as a special case in the matching condition to handle these cases.
","23/May/11 14:28;ay;fixed the mentioned issue by adding the ""/"" check.
trunk       - r1126478
2.3.x-fixed - r1126488",,,,,,,,,,,,,,,,,,,,,
Unhelpful / misleading JAX-RS log message,CXF-3509,12506851,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,bmargulies,bmargulies,11/May/11 14:05,08/Aug/11 14:43,14/Mar/19 02:29,17/May/11 13:24,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"2011-05-11 10:01:52,277 [http-9167-2] WARN org.apache.cxf.jaxrs.utils.JAXRSUtils - No operation matching request path / is found, HTTP Method : POST, ContentType : application/json, Accept : application/xml,.
2011-05-11 10:01:52,277 [http-9167-2] WARN org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper - WebApplicationException has been caught : no cause is available

The request path here is very unhelpful. That is '/' relative to a particular jaxrs:service, which is nowhere named. The message should somehow 'name that service'.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-17 13:24:41.446,,,no_permission,,,,,,,,,,,,,5867,,,Tue May 17 13:24:41 UTC 2011,,,,,,0|i0b97r:,63605,,,,,,,,"17/May/11 13:24;sergey_beryozkin;Benson, I've added a template var for capturing Absolute URI as well and reworded the messages a bit. Enabling FINE level will tell you which root resource class and which methods have been tried.
It's difficult to 'name' the endpoint - it could be a non spring endpoint, it could be a subresource which fails to provide a resource method.",,,,,,,,,,,,,,,,,,,,,,,,,,
Constructor injection is not working for JAX-RS Applications,CXF-3507,12506703,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,10/May/11 10:51,08/Aug/11 14:43,14/Mar/19 02:29,10/May/11 10:55,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"At least the limited form of constructor injection should be supported for custom Applications:

public CustomApplication(@Context ServletContext sc) {}
public CustomApplication(@Context ServletConfig sc) {}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5875,,,2011-05-10 10:51:25.0,,,,,,0|i0b9cv:,63628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service list page displays no services in unformatted mode,CXF-3506,12506686,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,plajko,plajko,10/May/11 07:32,08/Aug/11 14:43,14/Mar/19 02:29,13/May/11 09:55,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,,,,,0,formatted,servicelist,,,,"[cxfServletUrll]/services?formatted=false displays message: ""No services have been found."" While the standard url (without formatted=false query parameter) lists all published services. (The page style changed too, frames disappeared)","Windows 7, SUSE Linux Enterprise 10 sp2, Tomcat 6.0.18, Jetty 7.2.0.v20101020",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-13 09:55:21.614,,,no_permission,,Novice,,,,,,,,,,,5879,,,Fri May 13 09:55:21 UTC 2011,,,,,,0|i0b95z:,63597,,,,,,,,"13/May/11 09:55;ffang;only a problem on trunk
commit fix
http://svn.apache.org/viewvc?rev=1102640&view=rev to trunk",,,,,,,,,,,,,,,,,,,,,,,,,,
CXF attachment doesn't compatible with SUN's  ACTIVATION library,CXF-3505,12506678,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ext2xhb,ext2xhb,10/May/11 04:46,08/Aug/11 14:43,14/Mar/19 02:29,18/May/11 09:55,,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,,,,,0,,,,,,"if using sun's javax.activation api (version 1.1) instead of geronimo's activation api. CXF's attachments . the http connection cannot be released corrrectly;

",,,,,,,,,,,,,,,,,10/May/11 04:47;ext2xhb;attachment-clean.zip;https://issues.apache.org/jira/secure/attachment/12478666/attachment-clean.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-17 08:35:23.137,,,no_permission,,,,,,,,,,,,,5853,,,Wed May 18 09:55:06 UTC 2011,,,,,,0|i0b693:,63125,,,,,,,,"10/May/11 04:57;ext2xhb;1)attachment is a POM project for testing this problem; the test app is 
SunActivationClientAttachmentRelease.java

2) while I cannot give a simple assertion for such a test to check system socket's status; but the test program has such special points:
2.1) the client will invoke the server continuously; and the KEEP-ALIVE options is disabled;
2.2) if using geronimo's activation , we will find many ""TIME_WAITING"" status socket at server side; it's correctly， because  ""TIME_WAITING"" is inevitable status according to tcp-ip protocol;
2.3) if using sun's activation, we will find some ""FIN_WAIT2"" status socket at server side, and ""CLOSE_WAITING"" status at client side. this is not correctly and indicate that the server socket is closed but client socket hasn't;","10/May/11 05:02;ext2xhb;the problem is somewhat releate the javax.acivation.DataHandler's implement; check the difference of two activation library:

Geronimo's :
    public DataHandler(DataSource ds) {
        this.ds = ds;
        this.flavor = new ActivationDataFlavor(ds.getContentType(), null);
    } 
	// getContentType() of CXF's LazyDataSource will en-force it to be loaded; then:  attachments(not last one) will cached, and the last attachment still keep delegate to network stream;

Sun's:
    public DataHandler(DataSource ds) {
	// save a reference to the incoming DS
	dataSource = ds;
	oldFactory = factory; // keep track of the factory
    }
	//doesn't call any method of LazyDataSource, so it cannot enforce the CXF's LazyDataSource to Load; so the attachments are not cached; Then 2 problem will occurs: 1) cannot release http-connection 2)if user-application doesn't consume the inputstream, just close it. A temporary file will be left on disk and keep open;

","17/May/11 08:35;ffang;Hi,

Thanks for the testcase, I believe you're using JDK5,right? I can see this difference when I switch back to use JDK5, as with JDK6, by default it will always use SUN built-in activation lib unless we endorse it, so with JDK6 this problem is more severe, as you'll always see this bug.

Yeah,using SUN activation lib can cause your conclusion 1)cannot release http-connection.
But your conclusion 2)if user-application doesn't consume the inputstream, just close it. A temporary file will be left on disk and keep open(which I believe tracked by another jira CXF-3504) has nothing to do with this issue, it's actually caused by a bug in org.apache.cxf.attachment.MimeBodyPartInputStream, after close MimeBodyPartInputStream, shouldn't be able to read it, which isn't the case currently.

Freeman","18/May/11 09:55;ffang;commit fix
http://svn.apache.org/viewvc?rev=1104697&view=rev for trunk
http://svn.apache.org/viewvc?rev=1124152&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,
"for big attachment, a temporary file is left on disk and keep opend, if the application just close the DataSource's inputStream and doesn't consume it; ",CXF-3504,12506677,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ext2xhb,ext2xhb,10/May/11 03:51,08/Aug/11 14:43,14/Mar/19 02:29,18/May/11 06:14,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,,,,,0,,,,,,"when the client receiving multiple larget attachments from server. here ""large"" means : attachment size is large enough to be saved as temporary file on disk;

for the last attachment, if the user application only close the input stream got from DataSource and doesn't consume the input stream at all, a temporary file will be left on the disk.",,,,,,,,,,,,,,,,,20/May/11 11:20;ffang;CXF-3504-new.patch;https://issues.apache.org/jira/secure/attachment/12479894/CXF-3504-new.patch,20/May/11 08:37;ffang;CXF-3504.patch;https://issues.apache.org/jira/secure/attachment/12479886/CXF-3504.patch,10/May/11 04:28;ext2xhb;attachment-clean.zip;https://issues.apache.org/jira/secure/attachment/12478665/attachment-clean.zip,10/May/11 03:53;ext2xhb;mtom.wsdl;https://issues.apache.org/jira/secure/attachment/12478664/mtom.wsdl,,,,4.0,,,,,,,,,,,,,,,,,,,,2011-05-17 13:50:03.827,,,no_permission,,,,,,,,,,,,,5858,,,Mon May 23 09:47:54 UTC 2011,,,,,,0|i0b94f:,63590,,,,,,,,"10/May/11 04:28;ext2xhb;this is the test case's pom project.
","17/May/11 13:50;ffang;This is caused by still can read MimeBodyPartInputStream after closing it, so that after closing the unread stream , it cache to temp file but have no chance to delete temp file even the process exit.","18/May/11 06:14;ffang;commit fix
http://svn.apache.org/viewvc?rev=1104243&view=rev for trunk
http://svn.apache.org/viewvc?rev=1104252&view=rev for 2.3.x branch","19/May/11 11:49;ext2xhb;Yes the patch will leave no temporary file on disk. 
But it introduce another problem: the http-connection doesn't closed; 

After execute the last-attachment input-stream's close, I can saw a ""ESBTABLISHING"" status socket, that indicate the socket cannot be closed;

To understand the problem, let's check some source code of CXF attachment:
class AttachmentDeserializer{
   //because the patch just close MIMEPartInputStream, so the network-inputstream isn't consumed over; then stream.read() will return another bytes to indicate the ""we still have another attachment""(but actually , we didn't)
   public boolean hasNext() throws IOException {
         .......
        int v = stream.read();
        if (v == -1) {
            return false;
        }
        stream.unread(v);
        return true;
    }
  //now because  attachments.hasNext() will never return false, so the network-stream cannot be closed; 
  public void markClosed(DelegatingInputStream delegatingInputStream){
        closedCount++;
        if (closedCount == createCount && !attachments.hasNext(false)) {
            int x = stream.read();
            while (x != -1) {
                x = stream.read();
            }
            stream.close();
            closed = true;
        }
  }
}
","19/May/11 11:51;ext2xhb;maybe while close the MIMEPartInputstream, the close method should consume  all content of Current MIMEPart from underly input stream;","19/May/11 12:30;ffang;Hi,

Actually after closing MIMEPartInputStream, when you try to read this stream, it will always -1, that's exactly this fix does, you can get more details from[1].
And when you observe http-connection doesn't closed, did you already include my fix from CXF-3505? I believe CXF-3505 fix the http-connection issue.
[1]http://svn.apache.org/viewvc/cxf/trunk/rt/core/src/main/java/org/apache/cxf/attachment/MimeBodyPartInputStream.java?r1=1104243&r2=1104242&pathrev=1104243

Freeman","20/May/11 02:37;ext2xhb;I am sure I have  correct patch for CXF3504 and CXF3505.  there are still socket left not closed;
Actualy the new problem (http-connection not close ) caused by CXF 3504 's patch is  different to the CXF3505. 
cxf3505's bug are always: server socket closed, client not closed(FIN_WAIT socket STATUS); 
the new problem of CXF 3504 's patch are : server and client both not closed[ESTABLISHED SOCKET STATUS] if you provide a LARGE ENOUGH attachment, you will find 
HERE :LARGE ENOUGH ATTACHMENT means :attatchment’size should be larger than double size of underly buffer for socket), In my enviroment I using a 64K attachment in JDK5 and windows XP system。 the attachment size is quite different on different operation-system and JDK.
You can try it by using a very big attachment[etc: 10M size (arbitrary)]","20/May/11 03:01;ext2xhb;when I reported CXF3504 & CXF3505 bug previously, I just use a ""user's word to say what the problem I have saw outside CXF"". But the underly technical reason which caused CXF3505 & CXF3504 are differnet;

CXF3505 's underly reason is: sun's activation library caused all attachments are delegate to inputstream ( not cached) ;the patch for CXF3505 only fixed: only last attachment using delegate inputstream, other attachments cached. Anyway there is still a attachment(the last) which using delegate inputstream;

CXF3504's underly reason is : delegate input stream 's close method doest take care of underly-http-connection and Cacheing mechanism both; the original code of CXF only tare of underly-http-connection 's close; and the new patch of CXF3504 only take care of Cacheing mechanism.

By the way， I fixed the patch of CXF3504 and CXF3505 in CXF2.3.3 version. (although I think the trunk source code of CXF2.4 also have the new problem, but I haven't tried it yet)

","20/May/11 03:48;njiang;@ext2
There is not much change of the attachement code between CXF 2.3.x and CXF 2.4.x.
Can you submit your patch with the test case? We are happy to accept the contribution :)
","20/May/11 08:36;ffang;Hi,

Ok, I saw the introduced connection can't release issue, it also only happened when you not actually read the attachment stream but close it directly.

The fix should be when we close a stream, we needn't check if there's hasNext attachment(as we intend to close it, we don't care if there's any attachment we don't read), just mark this stream as closed.

I will append a new patch, could you verify it works for your scenario?

Also, if you wanna contribute your patch you mentioned before, I'm very glad to review it.

Freeman","20/May/11 11:19;ffang;Or simply read through DelegatingInputStream when you close it, ensure no cache file left on disk and correctly close the connection.
Append as CXF-3504-new.patch","20/May/11 11:21;ext2xhb;@FreeMan Fang:

My private temporary fix is quite different;the strategy I am using is:  ""doesn't make attachments pre cached"" but ""make delegate input stream always work right""; That's to say if using sun's activation. my private fix will still keep all attachment being delegate inputstream(doesn't cach any one); 
key fixed as following :

1)avoid recursive calling to DelegateInputStream's close
boolean closing = false;
DelegateInputStream.close{
  if(!closing){
     closing = true;
     is.close();
     if (!isClosed && deserializer != null) {
       deserializer.markClosed(this);
     }
     isClosed = true;
  }
}
2) consume all underlying bytes while close MIMEPartInputStream()-->(avoid mis read MIME part: for example, if user just close first attachment, and  doesn't read it, then read second attachment)

MIMEPartInputStream.close(){
  while(read() >= 0)
   ;
}
now using sun's activation will be better than geronimo; because the attachment's content will never be cached if user doesnt' care about content of the attachment","23/May/11 04:06;ext2xhb;@FreeMan Fang
I have tried the new patch. it could works in my scenior;
Thanks a lot;","23/May/11 04:30;ext2xhb;@FreeMan Fang:
by the way, I suggest you'd better to add the checking code of Delegate input stream's close to avoid recursively close one delegate-input-stream twice; 

Tne delegate-input-stream will be recursived closed twice; to ensure this, you can tracking it use a java-debugger: the calling stack is :

DelegateInputStream.close-->deserailizer.markClosed()-->attachmentDeserailizer.hasNext()-->attachment.cache()-->DelegateInputStream.close() [here recursive occurs]

Anyway, if we don't check it, thinks will also work right.(because delegate-input-stream is only used by the last attachment). but it may cause potential problem in future;

","23/May/11 09:47;ffang;Hi,

I think the recursive call is ok here.

First of all, not all ins in attachment.cache is DelegateInputStream, and we need close the ins in anycase after caching it.
If the ins in attachment.cache is DelegateInputStream, it's also fine, the deserializer.markClosed(this) can safely end the call and won't cause infinite invocation. 

I'll commit my new patch soon.

Freeman",,,,,,,,,,,,
IllegalArgumentException: wrong number of arguments with Dispatch/Provider service,CXF-3502,12506564,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,09/May/11 05:28,08/Aug/11 14:43,14/Mar/19 02:29,09/May/11 07:11,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-WS Runtime,,,,0,,,,,,"If the part contains a header and it's partIndex is 0, there are two empty object will be added to the parameter list to call the provider invoke method. 
WSDL:
<wsdl:definitions xmlns=""http://schemas.xmlsoap.org/wsdl/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tns=""http://apache.org/header_test/rpc"" xmlns:x1=""http://apache.org/header_test/rpc/types"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" targetNamespace=""http://apache.org/header_test/rpc"" name=""TestHeaderWSDL"">
    <wsdl:types>
        <schema targetNamespace=""http://apache.org/header_test/rpc/types"" xmlns=""http://www.w3.org/2001/XMLSchema"" xmlns:x1=""http://apache.org/header_test/rpc/types"" elementFormDefault=""qualified"">
            <element name=""headerMessage"">
                <complexType>
		    <sequence>
                        <element name=""headerVal"" type=""string""/>
		    </sequence>
		</complexType>
            </element>
        </schema>
    </wsdl:types>
    <wsdl:message name=""testHeader1Request"">
        <wsdl:part name=""inHeader"" element=""x1:headerMessage""/>
        <wsdl:part name=""in"" type=""xsd:string""/>        
    </wsdl:message>
    <wsdl:message name=""testHeader1Response"">
        <wsdl:part name=""out"" type=""xsd:string""/>
    </wsdl:message>

    <wsdl:message name=""testInOutHeaderRequest"">
        <wsdl:part name=""in"" type=""xsd:string""/>
        <wsdl:part name=""inOutHeader"" element=""x1:headerMessage""/>
    </wsdl:message>
    <wsdl:message name=""testInOutHeaderResponse"">
        <wsdl:part name=""out"" type=""xsd:string""/>
        <wsdl:part name=""inOutHeader"" element=""x1:headerMessage""/>
    </wsdl:message>

    <wsdl:portType name=""TestRPCHeader"">
        <wsdl:operation name=""testHeader1"">
            <wsdl:input name=""testHeader1Request"" message=""tns:testHeader1Request""/>
            <wsdl:output name=""testHeader1Response"" message=""tns:testHeader1Response""/>
        </wsdl:operation>
        <wsdl:operation name=""testInOutHeader"">
            <wsdl:input name=""testInOutHeaderRequest"" message=""tns:testInOutHeaderRequest""/>
            <wsdl:output name=""testInOutHeaderResponse"" message=""tns:testInOutHeaderResponse""/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name=""TestHeader_SOAPRPCBinding"" type=""tns:TestRPCHeader"">
        <soap:binding style=""rpc"" transport=""http://schemas.xmlsoap.org/soap/http""/>
        <wsdl:operation name=""testHeader1"">
            <soap:operation/>
            <wsdl:input name=""testHeader1Request"">
                <soap:body message=""tns:testHeader1Request"" parts=""in"" use=""literal"" namespace=""http://apache.org/header_test""/>
                <soap:header message=""tns:testHeader1Request"" part=""inHeader"" use=""literal""/>
            </wsdl:input>
            <wsdl:output name=""testHeader1Response"">
                <soap:body message=""tns:testHeader1Response"" use=""literal"" namespace=""http://apache.org/header_test""/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name=""testInOutHeader"">
            <soap:operation/>
            <wsdl:input>
                <soap:body message=""tns:testInOutHeaderRequest"" parts=""in"" use=""literal"" namespace=""http://apache.org/header_test""/>
                <soap:header message=""tns:testInOutHeaderRequest"" part=""inOutHeader"" use=""literal""/>
            </wsdl:input>
            <wsdl:output>
                <soap:body message=""tns:testInOutHeaderResponse"" parts=""out"" use=""literal"" namespace=""http://apache.org/header_test""/>
                <soap:header message=""tns:testInOutHeaderRequest"" part=""inOutHeader"" use=""literal""/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name=""SOAPRPCHeaderService"">
        <wsdl:port name=""SoapRPCHeaderPort"" binding=""tns:TestHeader_SOAPRPCBinding"">
            <soap:address location=""http://localhost:9104/SoapHeaderRPCContext/SoapHeaderRPCPort""/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>

Error message:
org.apache.cxf.interceptor.Fault: wrong number of arguments while invoking public abstract java.lang.Object javax.xml.ws.Provider.invoke(java.lang.Object) with params [com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl@543cb1, javax.xml.transform.dom.DOMSource@5cc942].
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:159)
	at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:86)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:133)
	at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:60)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
	at org.apache.cxf.transport.local.LocalConduit$1$1.run(LocalConduit.java:132)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: wrong number of arguments
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:173)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:89)
	... 12 more
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5850,,,2011-05-09 05:28:15.0,,,,,,0|i0b9d3:,63629,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DynamicClient fails to send an array of String,CXF-3501,12506532,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,blattlaus,blattlaus,08/May/11 11:04,08/Aug/11 14:43,14/Mar/19 02:29,13/May/11 08:38,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,,,,,0,,,,,,"I ran into some trouble using {{JaxWsDynamicClientFactory}} to access a SOAP service which signature is unknown a compile time and is passed to my code, from an external part at runtime. Following is a minimal example to reproduce the problem.

The service defines the following operation:

@WebMethod(operationName=""init"")
	public void initValueNotNull(
			   @WebParam(name=""values"")String[] values);

I generate a SOAP service and a corresponding WSDL from this by using {{org.apache.cxf.tools.java2ws.JavaToWS}}. Then I generate a WAR file and deploy this to tomcat.

Now I want to use {{JaxWsDynamicClientFactory}} to access this service:
  JaxWsDynamicClientFactory dcf = JaxWsDynamicClientFactory.newInstance();
  Client client = dcf.createClient(new URL(""http://localhost:8080/dserv/ArrayService?wsdl""));

  String[] values = new String[] { ""foobar"", ""something"" };
        
  client.invoke(""init"", values);

In the implementation of the service I have the following code:
    @Override
    public void initValueNotNull(String[] values) {
        System.out.println(""Got values: "" + Arrays.asList(values));
    }


I would expect, that the two strings from the client get ouputted. Instead I simple see {{Got values: []}}.

If I look at the SOAP-message that get exchanged, I see the this:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
<soap:Body>
<ns1:init xmlns:ns1=""de.fhl.dserv.ws"">
<values xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xsi:type=""xs:string"">foobar</values>
</ns1:init>
</soap:Body>
</soap:Envelope>

So somewhere and somehow the array of strings get transformed in a single string (which happens to be the first element of the original array).

--

I have created a demo project and uploaded it to http://dl.dropbox.com/u/338429/CXF_Bug.zip
Included is a ant file to compile and build the service using {{ant build}} and execute the client using {{ant client}}
",JaxWsDynamicClientFactory and Tomcat 6.,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-13 07:16:54.62,,,no_permission,,Unknown,,,,,,,,,,,5878,,,Fri May 13 08:38:36 UTC 2011,,,,,,0|i0b9c7:,63625,,,,,,,,"13/May/11 07:16;ffang;Hi,

Your SEI is incorrect, it shouldn't have @SOAPBinding(style=SOAPBinding.Style.RPC), which will expect pass in net.java.dev.jaxb.array.StringArray as method parameter, this make your dynamic client very hard to use as it don't know this class during compile time at all.

Also for your dynamic client invocation, it should put string values into a list like
{code}
        String[] values = new String[] {""foobar"", ""something"" };
        List<String> list = Arrays.asList(values);
        client.invoke(""init"", list);
{code}

I'll commit a testcase to demonstrate how it works

Freeman","13/May/11 08:38;ffang;commit test
http://svn.apache.org/viewvc?rev=1102593&view=rev for trunk
http://svn.apache.org/viewvc?rev=1102605&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
URIMappingInterceptor and ArrayIndexOutOfBoundsException,CXF-3499,12506441,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,rdgrimes,rdgrimes,06/May/11 18:51,08/Aug/11 14:43,14/Mar/19 02:29,09/May/11 04:37,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Core,,,,0,interceptors,,,,,"URIMappingInterceptor keeps throwing:

May 6, 2011 11:52:35 AM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://ws.ds.soc.com/}MessageService has thrown exception, unwinding now
java.lang.ArrayIndexOutOfBoundsException: 1
	at org.apache.cxf.interceptor.URIMappingInterceptor.getQueries(URIMappingInterceptor.java:319)
	at org.apache.cxf.interceptor.URIMappingInterceptor.getParameters(URIMappingInterceptor.java:165)
	at org.apache.cxf.interceptor.URIMappingInterceptor.handleMessage(URIMappingInterceptor.java:102)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:118)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:166)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:113)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:184)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:112)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:163)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:619)


Current Code Affected:
{code}
        if (!StringUtils.isEmpty(query)) {            
            List<String> parts = Arrays.asList(query.split(""&""));
            for (String part : parts) {
                if (part.contains(""="")) {
                    String[] keyValue = part.split(""="");
                    queries.put(keyValue[0], uriDecode(keyValue[1]));
                }
            }
            return queries;
        }
{code}

Proposed Code Fix:
{code}
        if (!StringUtils.isEmpty(query)) { 
            List<String> parts = Arrays.asList(query.split(""&""));
            for (String part : parts) {
                if (part.contains(""="")) {
                    String[] keyValue = part.split(""="");
                    if (keyValue.length >= 2) {
                    	queries.put(keyValue[0], uriDecode(keyValue[1]));
                    }
                }
            }
            return queries;
        }
{code}

Diagnosis of Problem:
If the value portion of the name/value pair is missing, then the keyValue length will only be 1, and consequently there will be no index entry 1.","Tomcat 6.0.23, Spring 3.0.5, CXF 2.4.1",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-09 04:37:23.921,,,no_permission,,Novice,,,,,,,,,,,5874,,,Mon May 09 04:38:50 UTC 2011,,,,,,0|i0b95j:,63595,,,,,,,,"09/May/11 04:37;ffang;commit fix per Ron's proposal
http://svn.apache.org/viewvc?rev=1100873&view=rev for trunk
http://svn.apache.org/viewvc?rev=1100884&view=rev for 2.3.x branch

","09/May/11 04:38;ffang;Hi Ron,

Btw, you can use svn diff . > patch.txt to generate a patch file next time, this is easy for applying the changes.

Thanks
Freeman",,,,,,,,,,,,,,,,,,,,,,,,,
SpnegoAuthSupplier using Kerberos OID instead of Spnego,CXF-3496,12506374,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,dunkelhaar,dunkelhaar,06/May/11 06:58,08/Aug/11 14:43,14/Mar/19 02:29,06/May/11 13:08,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,Transports,,,,0,,,,,,"Updating from 2.3.4 to 2.4.0 added the SpnegoAuthSupplier which is called everytime you use ""Negotiate"" as AuthorizationType. SpnegoAuthSupplier uses Kerberos OID instead of Spnego. Spnego would be correct.

http://cxf.547215.n5.nabble.com/CXF-2-4-Kerberos-SpnegoAuthSupplier-Message-content-from-Soap-Response-is-null-td4369582.html

## correct code in SpnegoAuthSupplier.java

 private byte[] getToken(AuthorizationPolicy proxyAuthPolicy, String spn) throws GSSException, 
        LoginException {
        GSSManager manager = GSSManager.getInstance();
        GSSName serverName = manager.createName(spn, null);

        // need to use SPNEGO_OID
        Oid oid = new Oid(SPNEGO_OID);
        
        GSSContext context = manager
                .createContext(serverName.canonicalize(oid), oid, null, GSSContext.DEFAULT_LIFETIME);
        // TODO Do we need mutual auth. Will the code we have really work with
        // mutual auth?
        context.requestMutualAuth(true);
        // TODO Credential delegation could be a security hole if it was not
        // intended. Both settings should be configurable
        context.requestCredDeleg(true);

        return getToken(proxyAuthPolicy, context);
    }",,,,,,,,,,,,,,,,,06/May/11 07:00;dunkelhaar;SpnegoAuthSupplier.java;https://issues.apache.org/jira/secure/attachment/12478379/SpnegoAuthSupplier.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-06 13:07:59.33,,,no_permission,,Novice,,,,,,,,,,,5856,,,Fri May 06 13:07:59 UTC 2011,,,,,,0|i0b9br:,63623,,,,,,,,06/May/11 07:00;dunkelhaar;fixed SpnegoAuthSupplier,06/May/11 10:21;dunkelhaar;added the working SpnegoAuthSupplier.java (see attachment),"06/May/11 13:07;chris@die-schneider.net;I committed the change. Seems I already had a TODO there to check if Kerberos OID was correct. Thanks for the contribution. Btw. Ideally you should send a patch against the subversion head source. This makes it easier to see what you changed.
",,,,,,,,,,,,,,,,,,,,,,,,
"StaxUtils.copy(XMLStreamReader,XMLStreamWriter) does not preserve empty namespace URIs",CXF-3493,12506338,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,piepera,piepera,05/May/11 21:14,08/Aug/11 14:43,14/Mar/19 02:29,06/May/11 10:16,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,Core,,,,0,commons,namespaces,xml,,,"StaxUtils.copy(XMLStreamReader,XMLStreamWriter)  fails to copy documents correctly if they declare a namespace with a zero-length URI. In some cases, this URI is frivolous, but in other cases it is important, such as in the following document:

<foo xmlns=""http://example.com""><bar xmlns=""""/></foo>

StaxUtils will remove this zero-length URI, resulting in the following XML document:

<foo xmlns=""http://example.com""><bar/></foo>

These two documents are not equivalent. In the first document, bar assumes the ""empty namespace"". In the second document, ""bar"" assumes the example.com namespace.",,,,,,,,,,,,,,,,,05/May/11 21:17;piepera;StaxUtilsTest.java;https://issues.apache.org/jira/secure/attachment/12478330/StaxUtilsTest.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-05 21:19:21.766,,,no_permission,,Novice,,,,,,,,,,,5864,,,Fri May 06 10:16:35 UTC 2011,,,,,,0|i0b99j:,63613,,,,,,,,05/May/11 21:17;piepera;A test case demonstrating the bug.,05/May/11 21:19;sergey_beryozkin;That was probably my change which introduced the regression - I'll have a look,"06/May/11 10:16;sergey_beryozkin;Fixed, thanks for a test. It was a regression.

http://svn.apache.org/viewvc?rev=1100157&view=rev",,,,,,,,,,,,,,,,,,,,,,,,
Spring OSGI Service Reference as JAXWS:endpoint implementor,CXF-3492,12506336,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,edwardost,edwardost,05/May/11 21:00,08/Aug/11 14:43,14/Mar/19 02:29,06/May/11 02:23,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,OSGi,,,,0,,,,,,Problem pointing <jaxws:endpoint> to an implementor that's provided by <osgi:reference>,,,,,,,,,,,,,,,,,05/May/11 21:06;edwardost;ServerFactoryBean.java;https://issues.apache.org/jira/secure/attachment/12478326/ServerFactoryBean.java,05/May/11 21:06;edwardost;SpringAopClassHelper.java;https://issues.apache.org/jira/secure/attachment/12478327/SpringAopClassHelper.java,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-05-05 23:43:50.648,,,no_permission,,Moderate,,,,,,,,,,,5842,,,Fri May 06 02:19:54 UTC 2011,,,,,,0|i0b9b3:,63620,,,,,,,,"05/May/11 21:01;edwardost;This bug report was contributed by David Metcalf.  I'm filing on his behalf.  He has also submitted a proposed patch fix.  In order to capture the full thread, I will post each individual message, four in total.","05/May/11 21:01;edwardost;I've hit a problem pointing <jaxws:endpoint> to an implementor that's provided by <osgi:reference>.

e.g. 
<jaxws:endpoint id=""morticeAdapterEndpoint""
implementor=""#MorticeCourseUnitService""
address=""/MorticeAdapterServiceProvider"">
</jaxws:endpoint>

<osgi:reference 
id=""MorticeCourseUnitService"" 
interface=""au.edu.mq.informatics.dataswitch.poc.mortice.common.MorticeCourseUnitService"">
</osgi:reference>


Here's the exception:

karaf@tesb> Exception in thread ""SpringOsgiExtenderThread-16"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'morticeAdapterEndpoint': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: java.lang.ClassCastException: $Proxy76 cannot be cast to org.springframework.aop.framework.Advised
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1420)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:580)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$1600(AbstractDelegatedExecutionApplicationContext.java:69)
at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$4.run(AbstractDelegatedExecutionApplicationContext.java:355)
at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)
at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.completeRefresh(AbstractDelegatedExecutionApplicationContext.java:320)
at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor$CompleteRefreshTask.run(DependencyWaiterApplicationContextExecutor.java:132)
at java.lang.Thread.run(Thread.java:662)
Caused by: javax.xml.ws.WebServiceException: java.lang.ClassCastException: $Proxy76 cannot be cast to org.springframework.aop.framework.Advised
at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:350)
at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:239)
at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:509)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1544)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1485)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1417)
... 14 more
Caused by: java.lang.ClassCastException: $Proxy76 cannot be cast to org.springframework.aop.framework.Advised
at org.apache.cxf.common.util.SpringAopClassHelper.getRealClassInternal(SpringAopClassHelper.java:59)
at org.apache.cxf.common.util.ClassHelper.getRealClass(ClassHelper.java:55)
at org.apache.cxf.jaxws.EndpointImpl.getImplementorClass(EndpointImpl.java:203)
at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:376)
at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:322)
... 23 more


Here's how I declare the service  (in another bundle, checked with ""osgi:ls""):

<osgi:service 
ref=""MorticeCourseUnitServiceImpl"" 
interface=""au.edu.mq.informatics.dataswitch.poc.mortice.common.MorticeCourseUnitService""/>

<bean id=""MorticeCourseUnitServiceImpl"" 
class=""au.edu.mq.informatics.dataswitch.poc.mortice.adapter.MorticeCourseUnitServiceImpl""/> 


If I point jaxws directly at the bean it works.

<jaxws:endpoint id=""morticeAdapterEndpoint""
implementor=""#MorticeCourseUnitService""
address=""/MorticeAdapterServiceProvider"">
</jaxws:endpoint>

<bean id=""MorticeCourseUnitService"" 
class=""au.edu.mq.informatics.dataswitch.poc.mortice.adapter.MorticeCourseUnitServiceImpl""/> 


If I point a bean directly at the osgi reference it works   (tested by invoking a service method inside setMorticeCourseUnitService).
<bean class=""soaphttp.MorticeCourseUnitServiceTestBean""> 
   <property name=""morticeCourseUnitService"" ref=""MorticeCourseUnitService""></property>
</bean> 

<osgi:reference id=""MorticeCourseUnitService"" interface=""au.edu.mq.informatics.dataswitch.poc.mortice.common.MorticeCourseUnitService""> </osgi:reference>  


","05/May/11 21:02;edwardost;Actually the solution in that thread does work:

<jaxws:endpoint id=""morticeAdapterEndpoint""
implementor=""#MorticeCourseUnitService""
implementorClass=""au.edu.mq.informatics.dataswitch.poc.mortice.common.MorticeCourseUnitService""
address=""/MorticeAdapterServiceProvider"">

The error was because org.springframework.osgi.service.util.internal.aop.ProxyUtils.createProxy calls ProxyFactory.setOpaque(true), which prevents the Advised interface being set on the proxy.

So org.apache.cxf.common.util.SpringAopClassHelper.getRealClassInternal should probably check first whether it's assignable to Advised, and if not throw an more meaningful exception up to EndpointImpl.getImplementorClass for an ""implementorClass must be supplied"" message.

Maybe this was obvious from the stacktrace in hindsight  ;-)

 

On Fri, Apr 29, 2011 at 10:10 AM, David Metcalf <david.metcalf@mq.edu.au> wrote:
Hi Ed,

To me this looks like a bug in Spring's  org.springframework.aop.support.AopUtils.isAopProxy(Object object)

It returns true for any JDK or CGLIB proxy, whether or not the object is assignable to org.springframework.aop.framework.Advised.  (I think this is because before Spring DM they assumed all SpringProxy instances were proxies for AOP advice, but I expect they're now SpringProxys for OSGI too).

org.apache.cxf.common.util.SpringAopClassHelper.getRealClassInternal assumes it must be assignable to Advised, because Spring told it it was an AopProxy.

I found this thread too http://mail-archives.apache.org/mod_mbox/cxf-users/201004.mbox/%3C28168894.post@talk.nabble.com%3E, 
but the originator's solution doesn't seem to help and I suspect the change Dan Kulp refers too is different (I can dig into that to check later) 
  
I think I may need a patch for either CXF or Spring to get this working.","05/May/11 21:02;edwardost;Sorry to be going on a goose chase here, but I wasn't able to reproduce that successful test  (I'm pretty certain it was actually running a previous build). 

I've set up and attached a fresh project to demonstrate the issue in isolation (and run against a clean TESB4 container and MVN repository).  This was tested on talend-esb-4.0-prerelease-kit-2 against the CXF bundle 2.4.0-SNAPSHOT (included) and also against an upgraded CXF 2.4.0 bundle.

I couldn't find a Maven source dependencies for 2.4.0-SNAPSHOT to debug against, so I've used 2.4.0 to determine the following:

When using a spring OSGI reference as the JAXWS implementor, e.g.

<osgi:reference 
id=""TestService"" 
interface=""au.edu.mq.dataswitch.poc.TestService"">
</osgi:reference>
<jaxws:endpoint id=""testEndpoint""
implementor=""#TestService""
implementorClass=""au.edu.mq.dataswitch.poc.TestService""
address=""/TestServiceProvider"">
</jaxws:endpoint>

It's dying in JaxWsServerFactoryBean(org.apache.cxf.frontend.ServerFactoryBean).create() line: 180:

            if (serviceBean != null) {
                initializeAnnotationInterceptors(server.getEndpoint(),
                                                 ClassHelper.getRealClass(getServiceBean()));
            } else if (getServiceClass() != null) {
                initializeAnnotationInterceptors(server.getEndpoint(), getServiceClass());
            }

The code here ignores the ""implementorClass"" on the JAXWS tag (which populates ServerFactoryBean.getServiceClass()) and tries to determine the underlying class via ""ClassHelper.getRealClass"".  (which fails because ClassHelper throws a ClassCastException internally because it tries to cast an opaque proxy (spring OSGI proxy) to org.springframework.aop.framework.Advised).

I'm guessing the above if/else block may be incorrect, and possibly should be:

            if (getServiceClass() != null) {
                initializeAnnotationInterceptors(server.getEndpoint(), getServiceClass());
            } else if (serviceBean != null) {
                initializeAnnotationInterceptors(server.getEndpoint(),
                                                 ClassHelper.getRealClass(getServiceBean()));
            }


Would you mind passing this on for investigation?

The attached tar ball should just build with ""mvn install"", then ""install mvn:au.edu.mq.dataswitch.poc/jaxws-osgi-test/1.0-SNAPSHOT"", except that it's built against CXF 2.4.0.

If running against talend-esb-4.0-prerelease-kit-2.tar.gz, can either
(a) change in pom.xml to <cxf.version>2.4.0-SNAPSHOT</cxf.version> , or 
(b) uninstall default CXF bundle and use ""features:addurl mvn:org.apache.cxf.karaf/apache-cxf/2.4.0/xml/features"", ""features:install cxf-bundle/2.4.0""
","05/May/11 21:03;edwardost;I've patched these two files on CXF 2.4.0  (attached) and it's working fine now.

./common/common/src/main/java/org/apache/cxf/common/util/SpringAopClassHelper.java
./rt/frontend/simple/src/main/java/org/apache/cxf/frontend/ServerFactoryBean.java

I'll post to patches to dev-cxf mailing list.

To install on TESB 4.0:

rm -Rf system/org/apache/cxf
mkdir -p system/org/apache/cxf/cxf-bundle/2.4.0/
mkdir -p system/org/apache/cxf/karaf/apache-cxf/2.4.0/
cp ~/.m2/repository/org/apache/cxf/cxf-bundle/2.4.0/cxf-bundle-2.4.0.jar system/org/apache/cxf/cxf-bundle/2.4.0/
cp ~/.m2/repository/org/apache/cxf/karaf/apache-cxf/2.4.0/apache-cxf-2.4.0-features.xml system/org/apache/cxf/karaf/apache-cxf/2.4.0/
find . -name *.xml -exec grep -l '2.4.0-SNAPSHOT' {} \; | xargs sed -i 's/2.4.0-SNAPSHOT/2.4.0/g'
find . -name *.cfg -exec grep -l '2.4.0-SNAPSHOT' {} \; | xargs sed -i 's/2.4.0-SNAPSHOT/2.4.0/g'

David","05/May/11 23:43;dlmetcalf;Thanks Ed & Dan,

These were my final changes  (apologies for mistakes in the initial analysis - was a long week):

{{diff apache-cxf-2.4.0-src/common/common/src/main/java/org/apache/cxf/common/util/SpringAopClassHelper.java apache-cxf-2.4.0-src.patched/common/common/src/main/java/org/apache/cxf/common/util/SpringAopClassHelper.java}}
{code}
58c58
<         if (AopUtils.isAopProxy(o)) {
---
>         if (AopUtils.isAopProxy(o) && (o instanceof Advised)) {
{code}

(May be better if it logs something when skipping over an unadvised proxy, but not sure it matters.)


{{diff apache-cxf-2.4.0-src/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/ServerFactoryBean.java apache-cxf-2.4.0-src.patched/rt/frontend/simple/src/main/java/org/apache/cxf/frontend/ServerFactoryBean.java}}
{code}
179c179
<             if (serviceBean != null) {
---
>             if (serviceBean != null && getServiceClass() == null) {
187c187
<     
---
>    
191,192c191,195
<                                               ? getServiceFactory().getServiceClass() : getServiceClass()
<                                               : ClassHelper.getRealClass(getServiceBean()));
---
>                                               ? getServiceFactory().getServiceClass() 
>                                               : getServiceClass()
>                                           : getServiceClass() == null
>                                               ? ClassHelper.getRealClass(getServiceBean()) 
>                                               : getServiceClass());
329c332
< }
{code}

Patch contributed under CXF's license http://www.apache.org/licenses/LICENSE-2.0.txt


Kind Regards,
David Metcalf.","06/May/11 00:19;dkulp;
David,


This part of the change:

179c179
<             if (serviceBean != null) {
---
>             if (serviceBean != null && getServiceClass() == null) {

breaks a bunch of our unit tests and thus is probably not acceptable.   I'm going to play around a bit to see if there is alternative that could possibly do something reasonable here.

","06/May/11 01:25;dkulp;
David,

I just committed part of this patch to trunk but made some major modifications to it.   Is there anyway you can checkout trunk and build it and test to make sure it still solves your issue?

Dan
","06/May/11 02:19;dlmetcalf;Thanks Dan.

I tested 2.4.1-SNAPSHOT for this case and your fix works beautifully.

David.",,,,,,,,,,,,,,,,,,
can't refer to java.lang.Exception in gererated client/server main code,CXF-3491,12506249,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,05/May/11 06:05,08/Aug/11 14:43,14/Mar/19 02:29,05/May/11 06:58,,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Tooling,,,,0,,,,,,"This is related to CXF-3353, but problem exposed when pass in ""all"" flag which will generate client and server main process class which should refer java.lang.Exception also",,,,,,,,,,,,,CXF-3353,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-23 12:51:25.58,,,no_permission,,,,,,,,,,,,,5849,,,Wed May 25 15:00:53 UTC 2011,,,,,,0|i0b9cn:,63627,,,,,,,,"05/May/11 06:15;ffang;related discussion from mailing list

http://cxf.547215.n5.nabble.com/Exception-used-as-ComplexType-name-td4364282.html#a4370533
","05/May/11 06:58;ffang;commit fix
http://svn.apache.org/viewvc?rev=1099697&view=rev for trunk
http://svn.apache.org/viewvc?rev=1099701&view=rev for 2.3.x branch","23/May/11 12:51;muralidh;Hi,

We are using cxf-codegen-plugin's (tested with both 2.3.4 and 2.4.0 versions) wsdl2java command in our multi-module maven project.
If we are throwing some exception, the generated code contains a class suffixed by _Exception.
Is there any advantage of generating code this way? 
Though not an error, its forcing the client to use the generated Any-Exception-Class-Name_Exception class.
Is there any temporary workaround to avoid this Or has this been fixed already ?


Thanks,
Gayathri","23/May/11 13:20;ffang;Hi Gayathri,

Could you please post this question on mailing list for better track? As your question actually is unrelated to this issue.

Freeman","23/May/11 13:48;muralidh;Hi,

Sorry for spamming the thread :)
Created http://cxf.547215.n5.nabble.com/cxf-codegen-plugin-s-wsdl2java-generates-a-class-ExceptionClass-Exception-tc4419074.html to track the issue

Thanks,
Gayathri","25/May/11 15:00;dkulp;
Nabble is being very slow getting the message to the list....  

In anycase, the Exception naming is per JAX-WS spec and not really anything we can do about it.   You can use a JAX-WS binding file to customize the exception name.   That should work.",,,,,,,,,,,,,,,,,,,,,
WADL Generator does not show repeating request parameters,CXF-3490,12506228,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,04/May/11 21:24,08/Aug/11 14:43,14/Mar/19 02:29,04/May/11 22:07,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"JAX-RS parameters such as
@QueryParam(""id"") List<String> list

are ignored by WADL generator, instead it should produce

<param name=""a"" type=""xs:string"" repeating=""true""/>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5844,,,2011-05-04 21:24:46.0,,,,,,0|i0b9fz:,63642,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSON sequences created from explicit collections of unqualified beans can not be read,CXF-3489,12506184,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,04/May/11 15:49,08/Aug/11 14:43,14/Mar/19 02:29,04/May/11 15:55,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"JSON sequences created from explicit collections of unqualified beans can not be read without additional configuration.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5836,,,2011-05-04 15:49:28.0,,,,,,0|i0b9bj:,63622,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deployment failure while upgrading 2.3.2 to 2.4.0,CXF-3488,12506166,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,,mohancxf,mohancxf,04/May/11 13:32,17/May/11 10:50,14/Mar/19 02:29,17/May/11 10:50,2.4,,,,,,,,,,,,,,,,,NeedMoreInfo,,,,JAX-WS Runtime,,,,0,,,,,,Deployment failure while upgrading 2.3.2 to 2.4.0:: ,Tomcat + java 1.6.,660,660,,0%,660,660,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-05 00:24:56.597,,,no_permission,,Unknown,,,,,,,,,,,46785,,,Tue May 17 10:50:10 UTC 2011,,,,,,0|i0uzr3:,178933,,,,,,,,"05/May/11 00:24;dkulp;
What kind of failure?   There is no useful information in this report.","05/May/11 13:08;mohancxf;hi Daniel, got resolution for the above problem (deployment problem with 2.4.0), but now i am getting different problem here is the error statement while accessing my service: java.lang.IllegalStateException: 

Context attribute is not of type WebApplicationContext: org.springframework.context.support.ClassPathXmlApplicationContext. 

It worked fine with cxf 2.3.2 and not working with 2.4.0, i did not change any context relates chnages after upgrading to new version. I replaced all the the jars which i'm presently using wrt cxf. please help..Thanks.. ","17/May/11 10:50;mohancxf;Hi Daniel, I got the resolution for this issue. 

Thanks for your quick response!!",,,,,,,,,,,,,,,,,,,,,,,,
CXF throws java.lang.UnsupportedOperationException when a OneWay webservice is invoked via HTTP,CXF-3486,12506137,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mageshbk,mageshbk,04/May/11 06:21,08/Aug/11 14:43,14/Mar/19 02:29,05/May/11 01:49,2.3.3,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Transports,,,,0,,,,,,"at org.apache.cxf.transport.http_jaxws_spi.HttpServletResponseAdapter.setContentLength(HttpServletResponseAdapter.java:119)
at org.apache.cxf.transport.http.AbstractHTTPDestination.flushHeaders(AbstractHTTPDestination.java:561)
at org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream.close(AbstractHTTPDestination.java:670)
at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
at org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit.close(AbstractHTTPDestination.java:619)
at org.apache.cxf.interceptor.OneWayProcessorInterceptor.handleMessage(OneWayProcessorInterceptor.java:93)
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
at org.apache.cxf.transport.http_jaxws_spi.JAXWSHttpSpiDestination.serviceRequest(JAXWSHttpSpiDestination.java:145)
at org.apache.cxf.transport.http_jaxws_spi.JAXWSHttpSpiDestination.doService(JAXWSHttpSpiDestination.java:121)
at org.apache.cxf.transport.http_jaxws_spi.HttpHandlerImpl.handle(HttpHandlerImpl.java:61)
at org.jboss.wsf.stack.cxf.addons.transports.httpserver.HttpServerDestination$Handler.handle(HttpServerDestination.java:142)",,,,,,,,,,,,,,,,,04/May/11 07:25;mageshbk;CXF-3486.diff;https://issues.apache.org/jira/secure/attachment/12478136/CXF-3486.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-05-05 01:49:48.505,,,no_permission,,,,,,,,,,,,,5839,,,Thu May 05 01:49:48 UTC 2011,,,,,,0|i0b99b:,63612,,,,,,,,04/May/11 07:25;mageshbk;Patch attached.,"05/May/11 01:49;dkulp;
Patch applied.   Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,
Some samples in the userguide not available due to macro error,CXF-3485,12506136,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,ssmith@atlassian.com,ssmith@atlassian.com,04/May/11 06:19,08/Aug/11 14:43,14/Mar/19 02:29,05/May/11 01:29,,,,,,,,,,,,,,,,,,2.4.1,,,,Documentation,,,,0,documentation,,,,,"Example page: http://cxf.apache.org/docs/writing-a-service-with-spring.html

Error is:
{noformat}
Error formatting macro: snippet: java.lang.IndexOutOfBoundsException: Index: 20, Size: 20 
{noformat}",,,,,,,,,,,,,,,,,04/May/11 06:19;ssmith@atlassian.com;2011-05-04_16-18-10.png;https://issues.apache.org/jira/secure/attachment/12478129/2011-05-04_16-18-10.png,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46787,,,Wed May 04 06:19:45 UTC 2011,,,,,,0|i0l713:,121789,,,,,,,,04/May/11 06:19;ssmith@atlassian.com;Adding screenshot of page,,,,,,,,,,,,,,,,,,,,,,,,,,
wsse:Reference used instead of wsse:KeyIdentifier error on the server: Cannot resolve KeyInfo for verifying signature,CXF-3482,12505891,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,souer1,souer1,01/May/11 23:23,27/Jun/14 11:53,14/Mar/19 02:29,06/May/11 09:06,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,JAX-WS Runtime,,,,0,,,,,,"I am tring to call the Organization web service of the MS Dynamics CRM in a claims based configuration.
The code can connect to ADFS 2.0 to obtain a token. the 2nd request tries to connect to the CRM. I get a soap fault : An error occurred when verifying security for the message.
In the logs of the server I see : Cannot resolve KeyInfo for verifying signature: KeyInfo 'SecurityKeyIdentifier
Here is the complete sequence:

INFO: Outbound Message
---------------------------
ID: 1
Address: https://sts1/adfs/services/trust/13/usernamemixed
Encoding: UTF-8
Content-Type: application/soap+xml; action=""http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue""
Headers: {Accept=[*/*]}
Payload: <soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Header><Action xmlns=""http://www.w3.org/2005/08/addressing"">http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue</Action><MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:0b60f2c3-6469-46b3-9d65-ee4f5b1e6ad8</MessageID><To xmlns=""http://www.w3.org/2005/08/addressing"">https://sts1/adfs/services/trust/13/usernamemixed</To><ReplyTo xmlns=""http://www.w3.org/2005/08/addressing""><Address>http://www.w3.org/2005/08/addressing/anonymous</Address></ReplyTo><wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" soap:mustUnderstand=""true""><wsu:Timestamp wsu:Id=""TS-1""><wsu:Created>2011-05-01T23:17:28.421Z</wsu:Created><wsu:Expires>2011-05-01T23:22:28.421Z</wsu:Expires></wsu:Timestamp><wsse:UsernameToken wsu:Id=""UsernameToken-2""><wsse:Username>username</wsse:Username><wsse:Password Type=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"">password</wsse:Password></wsse:UsernameToken></wsse:Security></soap:Header><soap:Body><wst:RequestSecurityToken xmlns:wst=""http://docs.oasis-open.org/ws-sx/ws-trust/200512""><wst:SecondaryParameters><trust:KeyType xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</trust:KeyType><trust:KeySize xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">256</trust:KeySize><trust:Claims xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"" Dialect=""http://schemas.xmlsoap.org/ws/2005/05/identity"">
                                    <wsid:ClaimType xmlns:wsid=""http://schemas.xmlsoap.org/ws/2005/05/identity"" Uri=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn""></wsid:ClaimType>
                                </trust:Claims><trust:KeyWrapAlgorithm xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p</trust:KeyWrapAlgorithm><trust:EncryptWith xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptWith><trust:SignWith xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2000/09/xmldsig#hmac-sha1</trust:SignWith><trust:CanonicalizationAlgorithm xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/10/xml-exc-c14n#</trust:CanonicalizationAlgorithm><trust:EncryptionAlgorithm xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptionAlgorithm></wst:SecondaryParameters><wst:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</wst:RequestType><wsp:AppliesTo xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""><wsa:EndpointReference xmlns:wsa=""http://www.w3.org/2005/08/addressing""><wsa:Address>https://crmrtm2011:444/org/XRMServices/2011/Organization.svc</wsa:Address></wsa:EndpointReference></wsp:AppliesTo><wst:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</wst:KeyType><wst:Entropy><wst:BinarySecret Type=""http://docs.oasis-open.org/ws-sx/ws-trust/200512/Nonce"">IcdkHWBqqvwdCZeTTS2af58wfuV21xZ9X9pPOnXdNo8=</wst:BinarySecret></wst:Entropy><wst:ComputedKeyAlgorithm>http://docs.oasis-open.org/ws-sx/ws-trust/200512/CK/PSHA1</wst:ComputedKeyAlgorithm></wst:RequestSecurityToken></soap:Body></soap:Envelope>
--------------------------------------
May 1, 2011 7:17:29 PM org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Inbound Message
----------------------------
ID: 1
Response-Code: 200
Encoding: UTF-8
Content-Type: application/soap+xml; charset=utf-8
Headers: {Content-Length=[11651], content-type=[application/soap+xml; charset=utf-8], Date=[Sun, 01 May 2011 23:15:21 GMT], Server=[Microsoft-HTTPAPI/2.0]}
Payload: <s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""><s:Header><a:Action s:mustUnderstand=""1"">http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTRC/IssueFinal</a:Action><a:RelatesTo>urn:uuid:0b60f2c3-6469-46b3-9d65-ee4f5b1e6ad8</a:RelatesTo><o:Security s:mustUnderstand=""1"" xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><u:Timestamp u:Id=""_0""><u:Created>2011-05-01T23:15:21.127Z</u:Created><u:Expires>2011-05-01T23:20:21.127Z</u:Expires></u:Timestamp></o:Security></s:Header><s:Body><trust:RequestSecurityTokenResponseCollection xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512""><trust:RequestSecurityTokenResponse><trust:Entropy><trust:BinarySecret>aeSwuX9biuxiwSflr+e4FEUZ9X+lwOq1Zvc6riRc2MY=</trust:BinarySecret></trust:Entropy><trust:Lifetime><wsu:Created xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">2011-05-01T23:15:21.097Z</wsu:Created><wsu:Expires xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">2011-05-02T00:15:21.097Z</wsu:Expires></trust:Lifetime><wsp:AppliesTo xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""><wsa:EndpointReference xmlns:wsa=""http://www.w3.org/2005/08/addressing""><wsa:Address>https://crmrtm2011:444/</wsa:Address></wsa:EndpointReference></wsp:AppliesTo><trust:RequestedSecurityToken><xenc:EncryptedData Type=""http://www.w3.org/2001/04/xmlenc#Element"" xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""><xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc""/><KeyInfo xmlns=""http://www.w3.org/2000/09/xmldsig#""><e:EncryptedKey xmlns:e=""http://www.w3.org/2001/04/xmlenc#""><e:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p""><DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""/></e:EncryptionMethod><KeyInfo><o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><X509Data><X509IssuerSerial><X509IssuerName>CN=*.CRM</X509IssuerName><X509SerialNumber>-65730648812231138535659641280185854183</X509SerialNumber></X509IssuerSerial></X509Data></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>dn0lFBveDReKjN4UX/yqDZw+Pt1KZb5ePH+5JBUCPG4m/qS8d8LB17FKybnuMPTnDVaXxZkSAQj1PhUyTzIbXUZdlSUV3fhQ8ZSSrVCDEkeNoaiBAcbo7kATJr+RNFNFS+NSKha6booFG2Kw8GWAikchavbASKp6gnwHyAVXzKM=</e:CipherValue></e:CipherData></e:EncryptedKey></KeyInfo><xenc:CipherData><xenc:CipherValue>iRjwVV8QOF8j2fcemFdVRytWHNY6kJT576boobwT74xqZaCBhH0orK0ZCdp4KZtygNr6hIA3xXF0NuUye9C/dFT3H/jr5C+5wuSYcn9dkJjRg41IDvyHou0rsRStMPZN+UPHuI6VOFIP/eKGsyHpeuyCgalcwJqUQtYQbSorge6bgoKpPjaP6Xge9LnMg4kzqj+nOzbBzJ6y44shozWUK/1Lwrr/sQbxjiLIJD5jlXrLM+SI5oexbv38VsJoJ/FD1aNfJ0R+1nVeugfI1Jc7/Qek2HkLs/tIOLctjIHAKPIfpflw3vHWZPOYB70QlNIu5F7qc+tJxpzEzCjVpKVayWcxargl/7Joa/v9qJA0ZGqhe4NViDC/gkTZeSB4tU0B8D4jhglCJm/Y14+BEOLSPT4uTavOBOFCM/bExLfb4/Rc9GDfXqUN3qO47W7s8wYrzfZB8YCcfbcwaloBZlHLPeuLes/2Nk2xARyOBEE5TbNeDgEeGRDqhALHq3X7gB7jqkBAnFTMsqCsVGIIJAVXgfQ5MJBj/RNXmYLdXbHXPjHgLU+TxCppi3obgnQ32CeS2WkktJKvlt1GgYDqmc9PQ+ih7YVGDj++PFnwYXo1tJgZMoijBSYCHaMtPNYeo+NVTz54P8K2P2SHaSFUF2LGvv7s0nYa5MP8HJOp+zIysUdAdl5jQ5J3zWyrEQ3GSvhcYKA9DCNN9X+pi5/IC5ZLvJNak9bDor/h2VMKKLwxocAbnpSeMrbJx9whEsMSQdUNFp+JJhHzSEv3gkty/dfLHk0WwjW0uXw8lzjue8FLD017OIUtyROuV8AV4WO1/vGOaSpJDZIf4mnbMVD1BZqfNipDKBFZBONUlGMah1jkvh4hr3Y+aR1UceQFesNt7QQiPRN0/php/FO+8VNBOHrMc06qZc+82VpTyZzZcojo4TLITMK8LoDT1QyNqHISRHTUHBhnlGH96PGoBnTUsPoDEF2d/HWNBBIeVvC6xwmUk2rcztA02UjvdR3q7pEggw7ji/uZJ8iF+PN76NsKD+puTHaYdUg05YvWWFd/aYXAjyxRT9MWcVj6gcyRM3hj3wmriiugrJ6v9V4ZFUAlhuZ9O2aa+wNmX6XCUp/L2x3iRBR3JwDI21TVrSCTqilUxsRsny7dRMAz/ou4U85+YiSg5rVEgKPdwxo3uLwI6Y/slVkGJ/UtE95ioTg3tJVwAyrfHy7tXbjvPlEE2Oz/Pm5x+4cxbuQc6BBiMFF9W/vAOu/RlAQRdzoCMjTqdpyrOFz+t8/2/lH4ec8/b+LB95Dm8jadAdhNJ8dCy/b5Uijjw76obCM1szDZTu7lF7iE1dz9lWxA7+dCcKU17PIbN9sQ5R/uLByKn/bVFNfMaqXq6ZLBprH3qzNBWN2vfS0sBCHG64hKBvETQ6mXjIVCazp7ptQQX/cbQUN6BVtlPXFrpbMx3NdyZ8Zwd86zwkqSO6YCqsTTn0HRBxEsGN3Guuo9sm1cyWW2BHGPwzcsDOywkQJ53UgMY/Lagat3rYiR1+aZaAj21NkNmJ8GHXr7OKIjmGaBv4ywgsLZ0imz8Z+UzqP1pg+IJflGG8cemsUeTVLTPNkMD68ch98Cnmww6nGuT5COxJka+j84FSIiygNVOhxCKwszas2HsNzrR06dlIg+HYM+OJBra/zhm3DTD0lJ+DsVhatyZaG07axvaUNkSoWnP0m6J5xfT+jz2NiFOJNyKIEkQQY/HW/tT0FSAHUke6OVbyhBpKzI2qratp1XN6/bf047hdBqvV9SVrmYm1DO6//2av++uuJtTFANV+4EInDkA/lNoG3je7BKnnMjL5uFOmYHaCztmiQSEJG+vvnz/CYj3whraHqGxujqDa2HYusphsAXqrb1HYII2wJQzXsJI/FJJ2P4Ioquwac9149GnD924ZlERd5RzhR98MBlE6a+eBjnIbiLd/BR9D3ULqeO8N9vwM2AWtCXj9WFd2wQBYOdeYISsbVF5Q7WUD6dfKPAgIufNGT22I0BtwhDwpz0N/qTcp5ATujtS1aiKWdDNM87pdzvC44KK3PXCEp4dJimIsE+KcUZYxj/PILuiOGThUqrVyD/qQVPShW6nbUpM3icTbSUw6jAx5CIjiW5VFsqOjURJXZziCHp1tbaIPEvhNTx/dgO+rHisM79Jo3buOLIYVecT3Z/MFDityWajh1y/2kYPnmAeL4zG5TSCSCJl7CRKC2ycjVZGcJAQksA8VenufBSCsX6lgwZ/Cvk8p+0RRsBcw51lNvghFyDsQOGfbwZVDWI3y1iOFaz8FqiWhoOmMgacSQhuUXVV49HwXVqWLTWvVChtlZQVlqvOwcl3gx5EJgYQu/M9KqKgZZYpbCDuMakOECyVyeIbUWvW0LJBaME6Tl/x3ooRhBZzcWg+5mVrxqJKcu/08dTELy6ULSqpb5PuQ2gRccUQBodciorNzHiLt5GIV0MiW0CYvtGLl8QlSNlfaCfUFVrOjWE5ZVd879znGmqpxjlPqhgtWkVaXv7ZaoCSh6bNZzb494DDxnAfpflXVPFYN8MlLxNav/KhZKcAV0ZbZyOgLFC447aAz80rytzaWO4s5L852W/UrTkBmE8G6LnhWlFdTRjX2Ktcc4MV8G2tiQv+9g2GqnYc6vP4Ir0743x89YgYzaSe4Wa3izwMIyLE/Cu7ffFRe77AEUM6/ovKoxDYYWtxZfQeoZsONl5ir6gD1b0c5x9OEXCjRSKuo02LODqUrTCagcUzJVrYFZzZwE+u2hg3UMyQEZp1e7CGj2X/uRjJvjXYl5JZIFvk7Fa31QfPnnE5wVRAMcYjib8TuNe63nuIYmj4/z0jxC1l9QGR44IACihcql0+hxJrSiPRtkOwDXPL/tv9nOiYvHS2ADgqs7HlCP7o/+MdKaJcfLcKS6742mmYOIoQFD3uCRoVt7SDUR2jZ5Geh62gksU0M0VmkJs0y0ftTx+IsYOrAT+Ed2f3lS16eTQxPtWuccFVKO++pSFyGAjd4x/KRvb2RWTPJwVr2xxcwWuWym4JH+ar6jdLrqQP589mByjwIGnRwS2qQpXa4F90zzUEqt9wRC8r/ZxusgQ+gticwlUyxdyDn9zj/OP43ddipuC1PpO8z7rzepkearTko/zoewbFnqgPTS7bbdKaJ7ysMurMPJswGgokpx7LF6At/7u3QsjkKoETpuDPV3z4uJfQRtbLXWV65thZbCxmlXBrf2P1AJShSjMxcK0KhKI4psfbLkClAcgwTWHkBlIFpna228aNYkFEKy0GBzA0+FE1TjH8qxFKk+0wy4u+05RAYYcUHZHV6CeFsacyrAyOQV1/+Onlj8Hs+Vsk+kDTkMX3iX1bJnUVAy8dj5I4aKbD1gxoyu7uAw7BNqlE8w8rtf7hNM9SF9oGkTgT6tdpOTEJ0xMUGFGyh7tBz8uX3kPP9yej1oDRAjC5jhfgAdwU6gAjD7PUCqmwT+0L1UrMq/3TU1w0FmFZlqinwdd2DH6jx8UkchhOCb4GGHJmslQWjEQ32eXS/FZJlY8LxghYSYN7NSCIVZ0QAZf4fyDuwcAajHa9JmB1uxdk80fHKQ42Ja1zvMREuYVlNGp4mpZVln5hpOtN+HTjSr/osoBKMIc1wCecNU0nV8jn5uPp4jm1P6lHbPwmWWERMNvBh+EvN3CN6N1i3ex6MpfNR5hCYFC6u/ktawpoS6Tqu6wgB8wiZWxgWJ4vTRiOrExP88JsnhCH7n77X/U1eD1IY+SYsarEYH5dtc5TwXbsT4c2dnlkgsM9vF6RMNBx+qCl9UQGRDRi8w+H11ER1O2VzM0OkzT35pKNNE2GQTknKq7l+wljtN5dR4eRs4YvKMklNJkIzeWbH9/4StWY+2zNBhkw0cImpUfIw7EjzZ6wwZsb6lRmY7oUXzVn61+SBqKR4JOGcmgJ4IaZXhzMgHBblfI1ErTCMH0UIHfQgL/unMBjdadgaVyHzYSeJU3pJ80/TaQ/bZCV99RmA4BR3cTharSSsJCZ0kVpbaA7p3/v5lrlUXpBdp0FpKIhZ+Zlu3DCERAde4MG0ZwQfKzoAvky6qoXJUy7jXwC+v5TsyxZsGrHSEZ6mGD5AUs9sYXL8uGOwSx5pGx/9Rm2WRGTB47cn9g8RJeSk0fK9wryk1LRRINgwkYUmBSpEXABpvDiaCDiY+R7spWfaccWZSCNfmFN3F7sqBZ2HNJMinLAv8HnJ4hDt41LU7r75jE5pxn3jin6YJlOnI0bwmTNyLmMwAB6Lv/LXgoMBSQokx9lkehgvyHYkSK4ddUmAIWFZDsf+pn7zCElSy/H60ANZpN7l7WQA8bfWer50r4Q3qHbZcGbWTruN2VYrdOsfdo3YR5LbzcFX75ooswjKeIrXqjZHZa0/vXxcR/z4OG4gRP2RyH2dAGp0OHdEJDQfJVstR0ZL89Z4JGP+qcw+R3xG+8VmL7cBfwlrSzkLv3KmldTcrJf6ymDaaE1ANpUEDi9E7stYGrygi2Q47jDW+6aXMM3zUZsSNIAUHqj32XsSrvyg6PO8KnIE7lwacM7en4C6fhflhAKkRwL0EG9k8XSaKNqJJNqxQTtAf1rKZnDvyWzlpWV5EUVNg6mggTPe9QZRMFNi0ByqqyIhlkynKoED/33nM/b3F3Gsi3FOZfr0cDZkE0Zb7XfkQ7/ObaWbYOBc3qMSiPMuB25g15U9bubyXdxBhNeytn5Z06fCHSik/btPBZHQLYFZUcF/Wjxeg+M9klBU7L93K5zKDBfwhOOETYotaL1H0nLxpXTFDN76O1EMZsABXxGTVu3r21Eo7QA5yfGmCwRbfLGAgvIddTggNdALAUP/C5DqyoxZDn7x8B3sLVGtHi1S84VD2PuHO63y4efy3eG9DXas+bKe6xgORWFKGNfdr14JkbBCfrJO9IoJgpn9mUGdaf8D8Pe+qqeRYNtiGbbzFwtzEfZAMDUgsRatI8NrPzoiUNsBvKUrBOb/5CEKGfTDCTRXnbE8i9Qn0xwE+C2oGIHn+RZ99D/J1WLMle72BcDP8oqLe0HLi6OOlfhummV0DMClPQ/uOBRSzzcvPWLcbpezdEiqa+8MkWqCXVV4Wy4L8Naf2IbMuAja/ES8VhI9D8f0s39al4HW30xcsIdxEQctCyxJ+Ylnpjr7IVb7ZE+9Ajc90XD+5MynS+iwMu9brgrSZ9f9t7P4XEmj6nw3W10UAvUXAnK+Wc7OHzkQWI4qN4b8SpRY2TGOkwF24t5TFYyy94Kghedm+dGJovL+Zv7OycpTHr4IRZRaOanTMPcvPXOmQ2KusnkOtP/PfpgLHV30O5Y4qBGplzT0D9RlD+Y847pJCM+2PVC6D5HG+Qg8aipus0Vtj3p8EmLVJUl0l8LJJnsn92tPhQVu1TsBO6pPdhXrfJIyima1o2Z9tpD1XVBHRxQW0SzxvK6DuTim/r6mZubb5etxRA5UNpiYstH9ja/J+BU+mdrLjKHPqm10Q8Z6ytgqfHt6gPKMNH4i9XieSqSQXjNHOENjyFjgY0oYdGvw1oqxtNAKMB/COcXr84egSwd0WlEHAHhGvs11leTfwpHmqr7sDNLyHpXy5N/hWR3qg1a7F1Lh0scCYzkgTqd0M4V2b7Ht9+J9DxBx6U0Na5wJeDvR2H/hRak6uJ4ztUuOBS7y28zU8yDMpGiY06xITrjQCNbY/r27aYJFrRc2aulCTGO9RTIK5Lv27GpFEwuxQ2nW0HGCa3AmXYEObpeSj5TAh3pi7zSp4i5Q0EkbBkDYTCc6/YbrHfiBR8ftz9Am/lDPDGQKVZVUPC0Y12k69+GIxi0Z4StmVkKfStOdArWVQzgekQ/HjL73dXtcStkLb25fXplWym8j8EUdrS1FIupKCU14LmmmTSwM6bqTow20h1N7uUuOPXVjQcmhsKZDFxoaQBFQTxhw1pOPENd2fF4Tpdjb9aeKJRTeDxNftb4S2Cl049XqYrXOm8XYenZxMegNcu1HTlJZ7Mn2yZuJXydsKQzUzty/c4oUE/eGP6bUFX6laGIUm3i1hrHDmrCV1uhgJCh1ZVbak+vlSYS5zzhJ7shHkD1+wQ7c8qr1a0oZlCRw+LmUcalsKsVoE6I9YJ4BLObrF+ZdmYqH7451GWvFXbcl4+5vWye1wBBNd1KfDVmtuXwZhHKkLU7jIeRE1bgigGwf8ZGjEvGa1X+As9FGVi7bsPx6WAKiHV0hb8N29RLeuUXg6l/oh+tfgNTFav2R4RQ8umxv7TNt5eYt3dOWieccl6Avjggq7v6aPDHCWd/ZImNT9ygIpPRcpRKHhKMXaKDoX4zEn2YiFzRejrtoH96pu5QJM+Z95tlUo0GeykQ21BORYkYJaCUzwMB5iRVqsFlgu2PMb9vlSUSTunLLR7/6WbtQ1WTqdKfhdblGARMA7cr7kvx02FAZmyoo6+ZKvRT4zyZiL1KAqspZSuCLLXYO1+9OGDr7TnHjyEw1ELtKwnkMYIEO5OkdKZtX7AeaZMEi7+7rr4282TXjRaiqj/onRl3o8ydeQti9VhkWRbAGm7+01lnbsO94QAI1Hapiw4kN/YXD6BXRTm+69j9EDFY0OZeyEUswFaoN1082nF3pHUjxxeO4n02kvOozX32xvN+JdxEYWUo5/2D5SzmsUuNboLdILDhLNedErpMFieKg0y+7Az4RBJTdiC+L3dEysbAlegc59l/azUpZ0ITeKwGS2Gr3tgOYqLlKTauCyd9bzjSnlPRTZI+geLd1vANCfJKiLBHTQLHaiCD/+Zn93fnxTa5X7Kw+FF2RHKv3GSAqtM32EtGZRz6ZiTCjxmNey0RbT4n5/6wSHWBJfCSv7Fl4lTAYMUvgSrwG6y4D69XXgSiLzPfGVZ+PLeAk1RjU1EQJ9xbxvYRM/VPkPNgdtyvSlhGU0mOHnyaDFbAkaVt6zlzHach8P7BnNxYswK9lnsCaq6qpdy4BSrI+bCohZLtp0BiMO6aFZdKrdxwJ6Zar0p2awlZihMDpxR/ho69m0pzrAFbpBT22LOiP4OhF0BiKVrCiEmAReQGFTMff+yiuLSu/zzHktomUIVIviguv2Se681HSuyEwVzkG0hBvzcQW02NDJAj2Jy1Xy4BZYpP6fGmgRvVInhUiOEnQ669d7x4S5FEMfbQL5laweDrH1k7ZR5NHbaKzLO0U7ZgzoU1l+yuz7TW5NbjmEYoOZdxMTth5dr7MR79nbKhCqetpTFwJosW5ugsua2EakUBtbpquDmsqwYiygxSSEhhFMa8OeYQ8GDjFxQuixyA30uvVPlUyhjvW1RAxx9IZLcvLcGE/nYUb6jYBIiqzEGHkB99QdTUkMHnBLzevex/7aDPSr1he2RyLmxCAg8p1RvUnDfBLt0VOJiCC7VH0NiWxwpHZ/YJ5hhef+gDxnLMnfyew/DXfbfkScLCfCrk72ZKZ9QAAdokTZWz3sil3nnkIjHeRlUMIYiQwTjsAD6Y0+robz6oUe37Kp36oy7fWbEZutEi9PbTRYRJq8BthBw9h5pU8bH2zftYr1/424qzENRcsIDsunyCVhvRLFQaslr5PXkDHhhVTYLszBrVAWhRpWRv83yHS+dRvPLGapzHU+W647YJQUt19wu</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData></trust:RequestedSecurityToken><trust:RequestedProofToken><trust:ComputedKey>http://docs.oasis-open.org/ws-sx/ws-trust/200512/CK/PSHA1</trust:ComputedKey></trust:RequestedProofToken><trust:RequestedAttachedReference><o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><o:KeyIdentifier ValueType=""http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"">_1cf56dfa-a508-4a95-8de2-1ffa703e278f</o:KeyIdentifier></o:SecurityTokenReference></trust:RequestedAttachedReference><trust:RequestedUnattachedReference><o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><o:KeyIdentifier ValueType=""http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"">_1cf56dfa-a508-4a95-8de2-1ffa703e278f</o:KeyIdentifier></o:SecurityTokenReference></trust:RequestedUnattachedReference><trust:TokenType>urn:oasis:names:tc:SAML:1.0:assertion</trust:TokenType><trust:RequestType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue</trust:RequestType><trust:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</trust:KeyType></trust:RequestSecurityTokenResponse></trust:RequestSecurityTokenResponseCollection></s:Body></s:Envelope>
--------------------------------------
May 1, 2011 7:17:29 PM org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Outbound Message
---------------------------
ID: 2
Address: https://crmrtm:444/org1/XRMServices/2011/Organization.svc
Encoding: UTF-8
Content-Type: application/soap+xml; action=""http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultiple""
Headers: {Accept=[*/*]}
Payload: <soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Header><Action xmlns=""http://www.w3.org/2005/08/addressing"">http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultiple</Action><MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:54913bc4-cb08-4a85-9eba-3becb47e992d</MessageID><To xmlns=""http://www.w3.org/2005/08/addressing"">https://crmrtm2011:444/org/XRMServices/2011/Organization.svc</To><ReplyTo xmlns=""http://www.w3.org/2005/08/addressing""><Address>http://www.w3.org/2005/08/addressing/anonymous</Address></ReplyTo><wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" soap:mustUnderstand=""true""><wsu:Timestamp wsu:Id=""TS-3""><wsu:Created>2011-05-01T23:17:29.531Z</wsu:Created><wsu:Expires>2011-05-01T23:22:29.531Z</wsu:Expires></wsu:Timestamp><xenc:EncryptedData xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"" Type=""http://www.w3.org/2001/04/xmlenc#Element""><xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc""></xenc:EncryptionMethod><KeyInfo xmlns=""http://www.w3.org/2000/09/xmldsig#""><e:EncryptedKey xmlns:e=""http://www.w3.org/2001/04/xmlenc#""><e:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p""><DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""></DigestMethod></e:EncryptionMethod><KeyInfo><o:SecurityTokenReference xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><X509Data><X509IssuerSerial><X509IssuerName>CN=*.CRM.DEMO</X509IssuerName><X509SerialNumber>-65730648812231138535659641280185854183</X509SerialNumber></X509IssuerSerial></X509Data></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>dn0lFBveDReKjN4UX/yqDZw+Pt1KZb5ePH+5JBUCPG4m/qS8d8LB17FKybnuMPTnDVaXxZkSAQj1PhUyTzIbXUZdlSUV3fhQ8ZSSrVCDEkeNoaiBAcbo7kATJr+RNFNFS+NSKha6booFG2Kw8GWAikchavbASKp6gnwHyAVXzKM=</e:CipherValue></e:CipherData></e:EncryptedKey></KeyInfo><xenc:CipherData><xenc:CipherValue>iRjwVV8QOF8j2fcemFdVRytWHNY6kJT576boobwT74xqZaCBhH0orK0ZCdp4KZtygNr6hIA3xXF0NuUye9C/dFT3H/jr5C+5wuSYcn9dkJjRg41IDvyHou0rsRStMPZN+UPHuI6VOFIP/eKGsyHpeuyCgalcwJqUQtYQbSorge6bgoKpPjaP6Xge9LnMg4kzqj+nOzbBzJ6y44shozWUK/1Lwrr/sQbxjiLIJD5jlXrLM+SI5oexbv38VsJoJ/FD1aNfJ0R+1nVeugfI1Jc7/Qek2HkLs/tIOLctjIHAKPIfpflw3vHWZPOYB70QlNIu5F7qc+tJxpzEzCjVpKVayWcxargl/7Joa/v9qJA0ZGqhe4NViDC/gkTZeSB4tU0B8D4jhglCJm/Y14+BEOLSPT4uTavOBOFCM/bExLfb4/Rc9GDfXqUN3qO47W7s8wYrzfZB8YCcfbcwaloBZlHLPeuLes/2Nk2xARyOBEE5TbNeDgEeGRDqhALHq3X7gB7jqkBAnFTMsqCsVGIIJAVXgfQ5MJBj/RNXmYLdXbHXPjHgLU+TxCppi3obgnQ32CeS2WkktJKvlt1GgYDqmc9PQ+ih7YVGDj++PFnwYXo1tJgZMoijBSYCHaMtPNYeo+NVTz54P8K2P2SHaSFUF2LGvv7s0nYa5MP8HJOp+zIysUdAdl5jQ5J3zWyrEQ3GSvhcYKA9DCNN9X+pi5/IC5ZLvJNak9bDor/h2VMKKLwxocAbnpSeMrbJx9whEsMSQdUNFp+JJhHzSEv3gkty/dfLHk0WwjW0uXw8lzjue8FLD017OIUtyROuV8AV4WO1/vGOaSpJDZIf4mnbMVD1BZqfNipDKBFZBONUlGMah1jkvh4hr3Y+aR1UceQFesNt7QQiPRN0/php/FO+8VNBOHrMc06qZc+82VpTyZzZcojo4TLITMK8LoDT1QyNqHISRHTUHBhnlGH96PGoBnTUsPoDEF2d/HWNBBIeVvC6xwmUk2rcztA02UjvdR3q7pEggw7ji/uZJ8iF+PN76NsKD+puTHaYdUg05YvWWFd/aYXAjyxRT9MWcVj6gcyRM3hj3wmriiugrJ6v9V4ZFUAlhuZ9O2aa+wNmX6XCUp/L2x3iRBR3JwDI21TVrSCTqilUxsRsny7dRMAz/ou4U85+YiSg5rVEgKPdwxo3uLwI6Y/slVkGJ/UtE95ioTg3tJVwAyrfHy7tXbjvPlEE2Oz/Pm5x+4cxbuQc6BBiMFF9W/vAOu/RlAQRdzoCMjTqdpyrOFz+t8/2/lH4ec8/b+LB95Dm8jadAdhNJ8dCy/b5Uijjw76obCM1szDZTu7lF7iE1dz9lWxA7+dCcKU17PIbN9sQ5R/uLByKn/bVFNfMaqXq6ZLBprH3qzNBWN2vfS0sBCHG64hKBvETQ6mXjIVCazp7ptQQX/cbQUN6BVtlPXFrpbMx3NdyZ8Zwd86zwkqSO6YCqsTTn0HRBxEsGN3Guuo9sm1cyWW2BHGPwzcsDOywkQJ53UgMY/Lagat3rYiR1+aZaAj21NkNmJ8GHXr7OKIjmGaBv4ywgsLZ0imz8Z+UzqP1pg+IJflGG8cemsUeTVLTPNkMD68ch98Cnmww6nGuT5COxJka+j84FSIiygNVOhxCKwszas2HsNzrR06dlIg+HYM+OJBra/zhm3DTD0lJ+DsVhatyZaG07axvaUNkSoWnP0m6J5xfT+jz2NiFOJNyKIEkQQY/HW/tT0FSAHUke6OVbyhBpKzI2qratp1XN6/bf047hdBqvV9SVrmYm1DO6//2av++uuJtTFANV+4EInDkA/lNoG3je7BKnnMjL5uFOmYHaCztmiQSEJG+vvnz/CYj3whraHqGxujqDa2HYusphsAXqrb1HYII2wJQzXsJI/FJJ2P4Ioquwac9149GnD924ZlERd5RzhR98MBlE6a+eBjnIbiLd/BR9D3ULqeO8N9vwM2AWtCXj9WFd2wQBYOdeYISsbVF5Q7WUD6dfKPAgIufNGT22I0BtwhDwpz0N/qTcp5ATujtS1aiKWdDNM87pdzvC44KK3PXCEp4dJimIsE+KcUZYxj/PILuiOGThUqrVyD/qQVPShW6nbUpM3icTbSUw6jAx5CIjiW5VFsqOjURJXZziCHp1tbaIPEvhNTx/dgO+rHisM79Jo3buOLIYVecT3Z/MFDityWajh1y/2kYPnmAeL4zG5TSCSCJl7CRKC2ycjVZGcJAQksA8VenufBSCsX6lgwZ/Cvk8p+0RRsBcw51lNvghFyDsQOGfbwZVDWI3y1iOFaz8FqiWhoOmMgacSQhuUXVV49HwXVqWLTWvVChtlZQVlqvOwcl3gx5EJgYQu/M9KqKgZZYpbCDuMakOECyVyeIbUWvW0LJBaME6Tl/x3ooRhBZzcWg+5mVrxqJKcu/08dTELy6ULSqpb5PuQ2gRccUQBodciorNzHiLt5GIV0MiW0CYvtGLl8QlSNlfaCfUFVrOjWE5ZVd879znGmqpxjlPqhgtWkVaXv7ZaoCSh6bNZzb494DDxnAfpflXVPFYN8MlLxNav/KhZKcAV0ZbZyOgLFC447aAz80rytzaWO4s5L852W/UrTkBmE8G6LnhWlFdTRjX2Ktcc4MV8G2tiQv+9g2GqnYc6vP4Ir0743x89YgYzaSe4Wa3izwMIyLE/Cu7ffFRe77AEUM6/ovKoxDYYWtxZfQeoZsONl5ir6gD1b0c5x9OEXCjRSKuo02LODqUrTCagcUzJVrYFZzZwE+u2hg3UMyQEZp1e7CGj2X/uRjJvjXYl5JZIFvk7Fa31QfPnnE5wVRAMcYjib8TuNe63nuIYmj4/z0jxC1l9QGR44IACihcql0+hxJrSiPRtkOwDXPL/tv9nOiYvHS2ADgqs7HlCP7o/+MdKaJcfLcKS6742mmYOIoQFD3uCRoVt7SDUR2jZ5Geh62gksU0M0VmkJs0y0ftTx+IsYOrAT+Ed2f3lS16eTQxPtWuccFVKO++pSFyGAjd4x/KRvb2RWTPJwVr2xxcwWuWym4JH+ar6jdLrqQP589mByjwIGnRwS2qQpXa4F90zzUEqt9wRC8r/ZxusgQ+gticwlUyxdyDn9zj/OP43ddipuC1PpO8z7rzepkearTko/zoewbFnqgPTS7bbdKaJ7ysMurMPJswGgokpx7LF6At/7u3QsjkKoETpuDPV3z4uJfQRtbLXWV65thZbCxmlXBrf2P1AJShSjMxcK0KhKI4psfbLkClAcgwTWHkBlIFpna228aNYkFEKy0GBzA0+FE1TjH8qxFKk+0wy4u+05RAYYcUHZHV6CeFsacyrAyOQV1/+Onlj8Hs+Vsk+kDTkMX3iX1bJnUVAy8dj5I4aKbD1gxoyu7uAw7BNqlE8w8rtf7hNM9SF9oGkTgT6tdpOTEJ0xMUGFGyh7tBz8uX3kPP9yej1oDRAjC5jhfgAdwU6gAjD7PUCqmwT+0L1UrMq/3TU1w0FmFZlqinwdd2DH6jx8UkchhOCb4GGHJmslQWjEQ32eXS/FZJlY8LxghYSYN7NSCIVZ0QAZf4fyDuwcAajHa9JmB1uxdk80fHKQ42Ja1zvMREuYVlNGp4mpZVln5hpOtN+HTjSr/osoBKMIc1wCecNU0nV8jn5uPp4jm1P6lHbPwmWWERMNvBh+EvN3CN6N1i3ex6MpfNR5hCYFC6u/ktawpoS6Tqu6wgB8wiZWxgWJ4vTRiOrExP88JsnhCH7n77X/U1eD1IY+SYsarEYH5dtc5TwXbsT4c2dnlkgsM9vF6RMNBx+qCl9UQGRDRi8w+H11ER1O2VzM0OkzT35pKNNE2GQTknKq7l+wljtN5dR4eRs4YvKMklNJkIzeWbH9/4StWY+2zNBhkw0cImpUfIw7EjzZ6wwZsb6lRmY7oUXzVn61+SBqKR4JOGcmgJ4IaZXhzMgHBblfI1ErTCMH0UIHfQgL/unMBjdadgaVyHzYSeJU3pJ80/TaQ/bZCV99RmA4BR3cTharSSsJCZ0kVpbaA7p3/v5lrlUXpBdp0FpKIhZ+Zlu3DCERAde4MG0ZwQfKzoAvky6qoXJUy7jXwC+v5TsyxZsGrHSEZ6mGD5AUs9sYXL8uGOwSx5pGx/9Rm2WRGTB47cn9g8RJeSk0fK9wryk1LRRINgwkYUmBSpEXABpvDiaCDiY+R7spWfaccWZSCNfmFN3F7sqBZ2HNJMinLAv8HnJ4hDt41LU7r75jE5pxn3jin6YJlOnI0bwmTNyLmMwAB6Lv/LXgoMBSQokx9lkehgvyHYkSK4ddUmAIWFZDsf+pn7zCElSy/H60ANZpN7l7WQA8bfWer50r4Q3qHbZcGbWTruN2VYrdOsfdo3YR5LbzcFX75ooswjKeIrXqjZHZa0/vXxcR/z4OG4gRP2RyH2dAGp0OHdEJDQfJVstR0ZL89Z4JGP+qcw+R3xG+8VmL7cBfwlrSzkLv3KmldTcrJf6ymDaaE1ANpUEDi9E7stYGrygi2Q47jDW+6aXMM3zUZsSNIAUHqj32XsSrvyg6PO8KnIE7lwacM7en4C6fhflhAKkRwL0EG9k8XSaKNqJJNqxQTtAf1rKZnDvyWzlpWV5EUVNg6mggTPe9QZRMFNi0ByqqyIhlkynKoED/33nM/b3F3Gsi3FOZfr0cDZkE0Zb7XfkQ7/ObaWbYOBc3qMSiPMuB25g15U9bubyXdxBhNeytn5Z06fCHSik/btPBZHQLYFZUcF/Wjxeg+M9klBU7L93K5zKDBfwhOOETYotaL1H0nLxpXTFDN76O1EMZsABXxGTVu3r21Eo7QA5yfGmCwRbfLGAgvIddTggNdALAUP/C5DqyoxZDn7x8B3sLVGtHi1S84VD2PuHO63y4efy3eG9DXas+bKe6xgORWFKGNfdr14JkbBCfrJO9IoJgpn9mUGdaf8D8Pe+qqeRYNtiGbbzFwtzEfZAMDUgsRatI8NrPzoiUNsBvKUrBOb/5CEKGfTDCTRXnbE8i9Qn0xwE+C2oGIHn+RZ99D/J1WLMle72BcDP8oqLe0HLi6OOlfhummV0DMClPQ/uOBRSzzcvPWLcbpezdEiqa+8MkWqCXVV4Wy4L8Naf2IbMuAja/ES8VhI9D8f0s39al4HW30xcsIdxEQctCyxJ+Ylnpjr7IVb7ZE+9Ajc90XD+5MynS+iwMu9brgrSZ9f9t7P4XEmj6nw3W10UAvUXAnK+Wc7OHzkQWI4qN4b8SpRY2TGOkwF24t5TFYyy94Kghedm+dGJovL+Zv7OycpTHr4IRZRaOanTMPcvPXOmQ2KusnkOtP/PfpgLHV30O5Y4qBGplzT0D9RlD+Y847pJCM+2PVC6D5HG+Qg8aipus0Vtj3p8EmLVJUl0l8LJJnsn92tPhQVu1TsBO6pPdhXrfJIyima1o2Z9tpD1XVBHRxQW0SzxvK6DuTim/r6mZubb5etxRA5UNpiYstH9ja/J+BU+mdrLjKHPqm10Q8Z6ytgqfHt6gPKMNH4i9XieSqSQXjNHOENjyFjgY0oYdGvw1oqxtNAKMB/COcXr84egSwd0WlEHAHhGvs11leTfwpHmqr7sDNLyHpXy5N/hWR3qg1a7F1Lh0scCYzkgTqd0M4V2b7Ht9+J9DxBx6U0Na5wJeDvR2H/hRak6uJ4ztUuOBS7y28zU8yDMpGiY06xITrjQCNbY/r27aYJFrRc2aulCTGO9RTIK5Lv27GpFEwuxQ2nW0HGCa3AmXYEObpeSj5TAh3pi7zSp4i5Q0EkbBkDYTCc6/YbrHfiBR8ftz9Am/lDPDGQKVZVUPC0Y12k69+GIxi0Z4StmVkKfStOdArWVQzgekQ/HjL73dXtcStkLb25fXplWym8j8EUdrS1FIupKCU14LmmmTSwM6bqTow20h1N7uUuOPXVjQcmhsKZDFxoaQBFQTxhw1pOPENd2fF4Tpdjb9aeKJRTeDxNftb4S2Cl049XqYrXOm8XYenZxMegNcu1HTlJZ7Mn2yZuJXydsKQzUzty/c4oUE/eGP6bUFX6laGIUm3i1hrHDmrCV1uhgJCh1ZVbak+vlSYS5zzhJ7shHkD1+wQ7c8qr1a0oZlCRw+LmUcalsKsVoE6I9YJ4BLObrF+ZdmYqH7451GWvFXbcl4+5vWye1wBBNd1KfDVmtuXwZhHKkLU7jIeRE1bgigGwf8ZGjEvGa1X+As9FGVi7bsPx6WAKiHV0hb8N29RLeuUXg6l/oh+tfgNTFav2R4RQ8umxv7TNt5eYt3dOWieccl6Avjggq7v6aPDHCWd/ZImNT9ygIpPRcpRKHhKMXaKDoX4zEn2YiFzRejrtoH96pu5QJM+Z95tlUo0GeykQ21BORYkYJaCUzwMB5iRVqsFlgu2PMb9vlSUSTunLLR7/6WbtQ1WTqdKfhdblGARMA7cr7kvx02FAZmyoo6+ZKvRT4zyZiL1KAqspZSuCLLXYO1+9OGDr7TnHjyEw1ELtKwnkMYIEO5OkdKZtX7AeaZMEi7+7rr4282TXjRaiqj/onRl3o8ydeQti9VhkWRbAGm7+01lnbsO94QAI1Hapiw4kN/YXD6BXRTm+69j9EDFY0OZeyEUswFaoN1082nF3pHUjxxeO4n02kvOozX32xvN+JdxEYWUo5/2D5SzmsUuNboLdILDhLNedErpMFieKg0y+7Az4RBJTdiC+L3dEysbAlegc59l/azUpZ0ITeKwGS2Gr3tgOYqLlKTauCyd9bzjSnlPRTZI+geLd1vANCfJKiLBHTQLHaiCD/+Zn93fnxTa5X7Kw+FF2RHKv3GSAqtM32EtGZRz6ZiTCjxmNey0RbT4n5/6wSHWBJfCSv7Fl4lTAYMUvgSrwG6y4D69XXgSiLzPfGVZ+PLeAk1RjU1EQJ9xbxvYRM/VPkPNgdtyvSlhGU0mOHnyaDFbAkaVt6zlzHach8P7BnNxYswK9lnsCaq6qpdy4BSrI+bCohZLtp0BiMO6aFZdKrdxwJ6Zar0p2awlZihMDpxR/ho69m0pzrAFbpBT22LOiP4OhF0BiKVrCiEmAReQGFTMff+yiuLSu/zzHktomUIVIviguv2Se681HSuyEwVzkG0hBvzcQW02NDJAj2Jy1Xy4BZYpP6fGmgRvVInhUiOEnQ669d7x4S5FEMfbQL5laweDrH1k7ZR5NHbaKzLO0U7ZgzoU1l+yuz7TW5NbjmEYoOZdxMTth5dr7MR79nbKhCqetpTFwJosW5ugsua2EakUBtbpquDmsqwYiygxSSEhhFMa8OeYQ8GDjFxQuixyA30uvVPlUyhjvW1RAxx9IZLcvLcGE/nYUb6jYBIiqzEGHkB99QdTUkMHnBLzevex/7aDPSr1he2RyLmxCAg8p1RvUnDfBLt0VOJiCC7VH0NiWxwpHZ/YJ5hhef+gDxnLMnfyew/DXfbfkScLCfCrk72ZKZ9QAAdokTZWz3sil3nnkIjHeRlUMIYiQwTjsAD6Y0+robz6oUe37Kp36oy7fWbEZutEi9PbTRYRJq8BthBw9h5pU8bH2zftYr1/424qzENRcsIDsunyCVhvRLFQaslr5PXkDHhhVTYLszBrVAWhRpWRv83yHS+dRvPLGapzHU+W647YJQUt19wu</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData><ds:Signature xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"" Id=""SIG-4""><ds:SignedInfo><ds:CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""><ec:InclusiveNamespaces xmlns:ec=""http://www.w3.org/2001/10/xml-exc-c14n#"" PrefixList=""soap""></ec:InclusiveNamespaces></ds:CanonicalizationMethod><ds:SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#hmac-sha1""></ds:SignatureMethod><ds:Reference URI=""#TS-3""><ds:Transforms><ds:Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""><ec:InclusiveNamespaces xmlns:ec=""http://www.w3.org/2001/10/xml-exc-c14n#"" PrefixList=""wsse soap""></ec:InclusiveNamespaces></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""></ds:DigestMethod><ds:DigestValue>mu/rdn6c+jsqytcY9F8N71EI9tE=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>aKgnc0uX9aGlk2gi/MwNOSFSPCo=</ds:SignatureValue><ds:KeyInfo Id=""KI-2162C63C3B5219C3A513042918495311""><wsse:SecurityTokenReference wsu:Id=""STR-2162C63C3B5219C3A513042918495462""><wsse:Reference URI=""#_1cf56dfa-a508-4a95-8de2-1ffa703e278f"" ValueType=""urn:oasis:names:tc:SAML:1.0:assertion""></wsse:Reference></wsse:SecurityTokenReference></ds:KeyInfo></ds:Signature></wsse:Security></soap:Header><soap:Body><ns3:RetrieveMultiple xmlns=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:ns2=""http://schemas.microsoft.com/xrm/2011/Contracts"" xmlns:ns3=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"" xmlns:ns4=""http://schemas.microsoft.com/2003/10/Serialization/Arrays"" xmlns:ns5=""http://schemas.microsoft.com/xrm/2011/Metadata"" xmlns:ns6=""http://schemas.microsoft.com/crm/2011/Contracts"" xmlns:ns7=""http://schemas.microsoft.com/2003/10/Serialization/""><ns3:query xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""ns2:QueryExpression""><ns2:ColumnSet><ns2:AllColumns>true</ns2:AllColumns><ns2:Columns></ns2:Columns></ns2:ColumnSet><ns2:Criteria><ns2:Conditions><ns2:ConditionExpression><ns2:AttributeName>lastname</ns2:AttributeName><ns2:Operator>BeginsWith</ns2:Operator><ns2:Values><ns4:anyType xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xsi:type=""xs:string"">THELEMAQUE</ns4:anyType></ns2:Values></ns2:ConditionExpression></ns2:Conditions><ns2:FilterOperator>And</ns2:FilterOperator><ns2:Filters xsi:nil=""true""></ns2:Filters></ns2:Criteria><ns2:EntityName>contact</ns2:EntityName><ns2:LinkEntities xsi:nil=""true""></ns2:LinkEntities><ns2:Orders xsi:nil=""true""></ns2:Orders><ns2:PageInfo xsi:nil=""true""></ns2:PageInfo></ns3:query></ns3:RetrieveMultiple></soap:Body></soap:Envelope>
--------------------------------------
May 1, 2011 7:17:30 PM org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Inbound Message
----------------------------
ID: 2
Response-Code: 500
Encoding: UTF-8
Content-Type: application/soap+xml; charset=utf-8
Headers: {Cache-Control=[private], Content-Length=[648], content-type=[application/soap+xml; charset=utf-8], Date=[Sun, 01 May 2011 23:15:22 GMT], Server=[Microsoft-IIS/7.0], X-AspNet-Version=[4.0.30319], X-Powered-By=[ASP.NET]}
Payload: <s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing""><s:Header><a:Action s:mustUnderstand=""1"">http://www.w3.org/2005/08/addressing/soap/fault</a:Action><a:RelatesTo>urn:uuid:54913bc4-cb08-4a85-9eba-3becb47e992d</a:RelatesTo></s:Header><s:Body><s:Fault><s:Code><s:Value>s:Sender</s:Value><s:Subcode><s:Value xmlns:a=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">a:InvalidSecurity</s:Value></s:Subcode></s:Code><s:Reason><s:Text xml:lang=""en-US"">An error occurred when verifying security for the message.</s:Text></s:Reason></s:Fault></s:Body></s:Envelope>

","windows xp, cxf 2.4, MS Dynamics 2011 crm organization Web service (claims based). jdk 1.6.23, ADFS 2.0 STS",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-04 16:16:02.189,,,no_permission,,Advanced,,,,,,,,,,,5848,,,Fri Jun 27 11:53:50 UTC 2014,,,,,,0|i0b9en:,63636,,,,,,,,"01/May/11 23:28;souer1;I think i should see this
<wsse:KeyIdentifier ValueType=""http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"">_3d46c220-4d4b-4913-bac9-f0484cfe6ae6</wsse:KeyIdentifier>

instead of this:
<wsse:Reference URI=""#_70b9be2c-8fac-44b6-98cd-1cca6e317602""
    ValueType=""urn:oasis:names:tc:SAML:1.0:assertion""></wsse:Reference>

","01/May/11 23:39;souer1;here is the policy part of the wsdl
    targetNamespace=""http://schemas.microsoft.com/xrm/2011/Contracts/Services""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
    xmlns:wsx=""http://schemas.xmlsoap.org/ws/2004/09/mex""
    xmlns:wsa10=""http://www.w3.org/2005/08/addressing""
    xmlns:tns=""http://schemas.microsoft.com/xrm/2011/Contracts/Services""
    xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/""
    xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
    xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""
    xmlns:wsap=""http://schemas.xmlsoap.org/ws/2004/08/addressing/policy""
    xmlns:msc=""http://schemas.microsoft.com/ws/2005/12/wsdl/contract""
    xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing""
    xmlns:wsam=""http://www.w3.org/2007/05/addressing/metadata""
    xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl""
    xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"">
    <wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_policy"">
        <wsp:ExactlyOne>
            <wsp:All>
                <sp:TransportBinding xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
                    <wsp:Policy>
                        <sp:TransportToken>
                            <wsp:Policy>
                                <sp:HttpsToken />
                            </wsp:Policy>
                        </sp:TransportToken>
                        <sp:AlgorithmSuite>
                            <wsp:Policy>
                                <sp:Basic256 />
                            </wsp:Policy>
                        </sp:AlgorithmSuite>
                        <sp:Layout>
                            <wsp:Policy>
                                <sp:Strict />
                            </wsp:Policy>
                        </sp:Layout>
                        <sp:IncludeTimestamp />
                    </wsp:Policy>
                </sp:TransportBinding>
                <sp:EndorsingSupportingTokens xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
                    <wsp:Policy>
                        <sp:IssuedToken
                            sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
                            <Issuer
                                xmlns=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
                                <Address xmlns=""http://www.w3.org/2005/08/addressing"">https://sts1.cgipratiquecrm.demo/adfs/services/trust/13/usernamemixed</Address>
                                <Metadata xmlns=""http://www.w3.org/2005/08/addressing"">
                                    <Metadata xmlns=""http://schemas.xmlsoap.org/ws/2004/09/mex"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
                                        <wsx:MetadataSection xmlns="""">
                                            <wsx:MetadataReference>
                                                <Address xmlns=""http://www.w3.org/2005/08/addressing"">https://sts1.cgipratiquecrm.demo/adfs/services/trust/mex</Address>
                                            </wsx:MetadataReference>
                                        </wsx:MetadataSection>
                                    </Metadata>
                                </Metadata>
                            </Issuer>
                            <sp:RequestSecurityTokenTemplate>
                                <trust:KeyType
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey</trust:KeyType>
                                <trust:KeySize
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">256</trust:KeySize>
                                 <trust:Claims Dialect=""http://schemas.xmlsoap.org/ws/2005/05/identity""
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">
                                    <wsid:ClaimType
                                        Uri=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn""
                                        xmlns:wsid=""http://schemas.xmlsoap.org/ws/2005/05/identity"" />
                                </trust:Claims>
                                <trust:KeyWrapAlgorithm
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p</trust:KeyWrapAlgorithm>
                                <trust:EncryptWith
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptWith>
                                <trust:SignWith
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2000/09/xmldsig#hmac-sha1</trust:SignWith>
                                <trust:CanonicalizationAlgorithm
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/10/xml-exc-c14n#</trust:CanonicalizationAlgorithm>
                                <trust:EncryptionAlgorithm
                                    xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptionAlgorithm>
                            </sp:RequestSecurityTokenTemplate>
                            <wsp:Policy>
                                <sp:RequireInternalReference />
                            </wsp:Policy>
                        </sp:IssuedToken>
                    </wsp:Policy>
                </sp:EndorsingSupportingTokens>
                <sp:Wss11 xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
                    <wsp:Policy />
                </sp:Wss11>
                <sp:Trust13
                    xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
                    <wsp:Policy>
                        <sp:MustSupportIssuedTokens />
                        <sp:RequireClientEntropy />
                        <sp:RequireServerEntropy />
                    </wsp:Policy>
                </sp:Trust13>
                <wsaw:UsingAddressing />
            </wsp:All>
        </wsp:ExactlyOne>
    </wsp:Policy>
","03/May/11 14:13;souer1;by the way this works using Metro as a client, in metro, I do have 
<wsse:SecurityTokenReference>
    <wsse:KeyIdentifier	ValueType=""http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"">someid
    </wsse:KeyIdentifier>
</wsse:SecurityTokenReference>","04/May/11 16:16;coheigea;
Fixed:

http://svn.apache.org/viewvc?view=revision&revision=1099499
http://svn.apache.org/viewvc?view=revision&revision=1099500

Colm.","05/May/11 13:47;souer1;I did a snapshot build and I still get the same behavior
i.e. I still get 

<ds:KeyInfo Id=""KI-5599B78EE4FB95C80E13046026344061"">
    <wsse:SecurityTokenReference wsu:Id=""STR-5599B78EE4FB95C80E13046026344062"">
        <wsse:Reference URI=""_5ed0385b-57ff-4b3c-   b81a-f58e36841dde""			ValueType=""urn:oasis:names:tc:SAML:1.0:assertion"">                    </wsse:Reference>
    </wsse:SecurityTokenReference>
</ds:KeyInfo>","05/May/11 14:40;coheigea;
I just merged another fix for this issue....

Colm.","05/May/11 17:15;souer1;It works! Thank you for your help, have a great day!","25/Jun/14 12:33;krisjasti;Hi Eric,

I am getting the same error but i am able to see the <KeyIdentifier> correctly. Can you please help me with the code you have used to generate Digest Value and Signature Value  ","25/Jun/14 14:09;coheigea;What does the security policy, request + error message look like?

Colm.","26/Jun/14 05:11;krisjasti;Security Policy

<wsdl:definitions xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:wsx=""http://schemas.xmlsoap.org/ws/2004/09/mex"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsa10=""http://www.w3.org/2005/08/addressing"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy"" xmlns:wsap=""http://schemas.xmlsoap.org/ws/2004/08/addressing/policy"" xmlns:msc=""http://schemas.microsoft.com/ws/2005/12/wsdl/contract"" xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/"" xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" xmlns:wsam=""http://www.w3.org/2007/05/addressing/metadata"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:tns=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl"" xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"" targetNamespace=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"">
<wsp:Policy wsu:Id=""CustomBinding_IOrganizationService_policy"">
<wsp:ExactlyOne>
<wsp:All>
<ms-xrm:AuthenticationPolicy xmlns:ms-xrm=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"">
<ms-xrm:Authentication>Federation</ms-xrm:Authentication>
<ms-xrm:SecureTokenService>
<ms-xrm:Identifier>
http://bhdevsts.brighthorizons.com:444/adfs/services/trust
</ms-xrm:Identifier>
</ms-xrm:SecureTokenService>
</ms-xrm:AuthenticationPolicy>
<sp:TransportBinding xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<wsp:Policy>
<sp:TransportToken>
<wsp:Policy>
<sp:HttpsToken/>
</wsp:Policy>
</sp:TransportToken>
<sp:AlgorithmSuite>
<wsp:Policy>
<sp:Basic256/>
</wsp:Policy>
</sp:AlgorithmSuite>
<sp:Layout>
<wsp:Policy>
<sp:Strict/>
</wsp:Policy>
</sp:Layout>
<sp:IncludeTimestamp/>
</wsp:Policy>
</sp:TransportBinding>
<sp:EndorsingSupportingTokens xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<wsp:Policy>
<sp:IssuedToken sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
<Issuer xmlns=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<Address xmlns=""http://www.w3.org/2005/08/addressing"">http://www.w3.org/2005/08/addressing/anonymous</Address>
<Metadata xmlns=""http://www.w3.org/2005/08/addressing"">
<Metadata xmlns=""http://schemas.xmlsoap.org/ws/2004/09/mex"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
<wsx:MetadataSection xmlns="""">
<wsx:MetadataReference>
<Address xmlns=""http://www.w3.org/2005/08/addressing"">
https://bhdevsts.brighthorizons.com:444/adfs/services/trust/mex
</Address>
</wsx:MetadataReference>
</wsx:MetadataSection>
</Metadata>
</Metadata>
</Issuer>
<sp:RequestSecurityTokenTemplate>
<trust:KeyType xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">
http://docs.oasis-open.org/ws-sx/ws-trust/200512/SymmetricKey
</trust:KeyType>
<trust:KeySize xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">256</trust:KeySize>
<trust:Claims xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"" Dialect=""http://schemas.xmlsoap.org/ws/2005/05/identity"">
<wsid:ClaimType xmlns:wsid=""http://schemas.xmlsoap.org/ws/2005/05/identity"" Uri=""http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn""/>
</trust:Claims>
<trust:KeyWrapAlgorithm xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p</trust:KeyWrapAlgorithm>
<trust:EncryptWith xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptWith>
<trust:SignWith xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2000/09/xmldsig#hmac-sha1</trust:SignWith>
<trust:CanonicalizationAlgorithm xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/10/xml-exc-c14n#</trust:CanonicalizationAlgorithm>
<trust:EncryptionAlgorithm xmlns:trust=""http://docs.oasis-open.org/ws-sx/ws-trust/200512"">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptionAlgorithm>
</sp:RequestSecurityTokenTemplate>
<wsp:Policy>
<sp:RequireInternalReference/>
</wsp:Policy>
</sp:IssuedToken>
</wsp:Policy>
</sp:EndorsingSupportingTokens>
<sp:Wss11 xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<wsp:Policy/>
</sp:Wss11>
<sp:Trust13 xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<wsp:Policy>
<sp:MustSupportIssuedTokens/>
<sp:RequireClientEntropy/>
<sp:RequireServerEntropy/>
</wsp:Policy>
</sp:Trust13>
<wsaw:UsingAddressing/>
</wsp:All>
</wsp:ExactlyOne>
</wsp:Policy>","26/Jun/14 05:44;krisjasti;Request SOAP Message

<soapenv:Envelope xmlns:soapenv=""http://www.w3.org/2003/05/soap-envelope"">
   <soapenv:Header xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
      <o:Security soapenv:mustUnderstand=""true"" xmlns:o=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
         <u:Timestamp u:Id=""_0"" xmlns:u=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
            <u:Created>2014-06-25T22:38:47Z</u:Created>
            <u:Expires>2014-06-25T22:43:47Z</u:Expires>
         </u:Timestamp>
         <xenc:EncryptedData Type=""http://www.w3.org/2001/04/xmlenc#Element"" xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"">
            <xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc""/>
            <KeyInfo xmlns=""http://www.w3.org/2000/09/xmldsig#"">
               <e:EncryptedKey xmlns:e=""http://www.w3.org/2001/04/xmlenc#"">
                  <e:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"">
                     <DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""/>
                  </e:EncryptionMethod>
                  <KeyInfo>
                     <o:SecurityTokenReference>
                        <X509Data>
                           <X509IssuerSerial>
                              <X509IssuerName>CN=Entrust Certification Authority - L1C, OU=""(c) 2009 Entrust, Inc."", OU=www.entrust.net/rpa is incorporated by reference, O=""Entrust, Inc."", C=US</X509IssuerName>
                              <X509SerialNumber>1276836729</X509SerialNumber>
                           </X509IssuerSerial>
                        </X509Data>
                     </o:SecurityTokenReference>
                  </KeyInfo>
                  <e:CipherData>
                     <e:CipherValue>pUEAbUbDoWCTUCnjgPtnaiqG+bE4+Ja7YI9z9CYwncQFx4No5vKMQ8ZiwgSiHZbfVw8tA6chNnxL7BZzSNDu0sYfKkXFGklXKmvMkdduu2rc4m6idJE6tUjH4ljsS/ZytZo4B+/l9YmHhF+AfaGwivGe8rPtDuSTesbuSrfVbCcvdvtrWehhyJn+byDcy77MJR1IV7Fxc1IVJt+TnDLtDRuY7I2zRJmE6Q2qjVJjrOecLEvDMRg80bgdh9rvIZmAnUjRfXKPy4+2hgnmyAfi5OchhLnC9cTkZdTOWnKLu1GJqdKz183/Kb3MbabiaFpbEdEPfq8QsAx8l2CVdwzPvA==</e:CipherValue>
                  </e:CipherData>
               </e:EncryptedKey>
            </KeyInfo>
            <xenc:CipherData>
               <xenc:CipherValue></xenc:CipherValue>
            </xenc:CipherData>
         </xenc:EncryptedData>
         <Signature xmlns=""http://www.w3.org/2000/09/xmldsig#"">
            <SignedInfo>
               <CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/>
               <SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#hmac-sha1""/>
               <Reference URI=""#_0"">
                  <Transforms>
                     <Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/>
                  </Transforms>
                  <DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""/>
                  <DigestValue>1YULkx/uyih7Hi6jfGEB5hPLOMo=</DigestValue>
               </Reference>
            </SignedInfo>
            <SignatureValue>98+zkwiTEa8Oh3bFQKNcM70RwXg=</SignatureValue>
            <KeyInfo>
               <o:SecurityTokenReference>
                  <o:KeyIdentifier ValueType=""http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"">_4010ede2-9c90-4d00-bead-e7bee520d4e6</o:KeyIdentifier>
               </o:SecurityTokenReference>
            </KeyInfo>
         </Signature>
      </o:Security>
      <wsa:To>https://XXXXXXXXXX.com/XrmServices/2011/Organization.svc</wsa:To>
      <wsa:MessageID>urn:uuid:50cdb94b-ba1d-48c0-b451-c20d87573c8b</wsa:MessageID>
      <wsa:Action>http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/Create</wsa:Action>
   </soapenv:Header>
   <soapenv:Body>
      <ns7:Create xmlns:ns7=""http://schemas.microsoft.com/xrm/2011/Contracts/Services"">
         <ns7:entity>
            <Attributes xmlns=""http://schemas.microsoft.com/xrm/2011/Contracts"">
               <KeyValuePairOfstringanyType>
                  <ns3:key xmlns:ns3=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"">name</ns3:key>
                  <ns3:value s1:type=""s2:string"" xmlns:ns3=""http://schemas.datacontract.org/2004/07/System.Collections.Generic"" xmlns:s1=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:s2=""http://www.w3.org/2001/XMLSchema"">Fabrikam</ns3:value>
               </KeyValuePairOfstringanyType>
            </Attributes>
            <ns2:LogicalName xmlns:ns2=""http://schemas.microsoft.com/xrm/2011/Contracts"">account</ns2:LogicalName>
         </ns7:entity>
      </ns7:Create>
   </soapenv:Body>
</soapenv:Envelope>

Response Error message

<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing"">
   <s:Header>
      <a:Action s:mustUnderstand=""1"">http://www.w3.org/2005/08/addressing/soap/fault</a:Action>
      <a:RelatesTo>urn:uuid:50cdb94b-ba1d-48c0-b451-c20d87573c8b</a:RelatesTo>
   </s:Header>
   <s:Body>
      <s:Fault>
         <s:Code>
            <s:Value>s:Sender</s:Value>
            <s:Subcode>
               <s:Value xmlns:a=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">a:InvalidSecurity</s:Value>
            </s:Subcode>
         </s:Code>
         <s:Reason>
            <s:Text xml:lang=""en-US"">An error occurred when verifying security for the message.</s:Text>
         </s:Reason>
      </s:Fault>
   </s:Body>
</s:Envelope>
","26/Jun/14 14:01;coheigea;
What makes you think the error you are seeing is related to the issue in this JIRA (Reference used instead of KeyIdentifier)? What do the service logs say what the failure is?

Colm.","27/Jun/14 11:53;krisjasti;I am sorry if i posted this in wrong place. I am new web services and searching for a fix to issue that i am having while trying to call Organization web service of the MS Dynamics CRM in a claims based configuration. I am getting the same error response as in this issue but not sure about the reason for the error. I was trying to check with Eric Soucy who submitted this issue for the source code he used to generate digest value and signature value that he used in the security header of this soap request.  Any help in this regard is highly appreciated. I got the access to server log today and below is the error at server side which says signature verification failed. Please send me the source code used to generate the security header for this SOAP Message

<TraceRecord xmlns=""http://schemas.microsoft.com/2004/10/E2ETraceEvent/TraceRecord"" Severity=""Error""><TraceIdentifier>http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.ThrowingException.aspx</TraceIdentifier><Description>Throwing an exception.</Description><AppDomain>/LM/W3SVC/2/ROOT-1-130483368865545997</AppDomain><Exception><ExceptionType>System.ServiceModel.Security.MessageSecurityException, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ExceptionType><Message>Message security verification failed.</Message><StackTrace>   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout)
   at System.ServiceModel.Security.SecurityProtocol.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout, SecurityProtocolCorrelationState[] correlationStates)
   at System.ServiceModel.Channels.SecurityChannelListener`1.ServerSecurityChannel`1.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout, SecurityProtocolCorrelationState[] correlationState)
   at System.ServiceModel.Channels.SecurityChannelListener`1.SecurityReplyChannel.ProcessReceivedRequest(RequestContext requestContext, TimeSpan timeout)
   at System.ServiceModel.Channels.SecurityChannelListener`1.ReceiveItemAndVerifySecurityAsyncResult`2.OnInnerReceiveDone()
   at System.ServiceModel.Channels.SecurityChannelListener`1.ReceiveItemAndVerifySecurityAsyncResult`2.InnerTryReceiveCompletedCallback(IAsyncResult result)
   at System.Runtime.Fx.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)
   at System.Runtime.AsyncResult.Complete(Boolean completedSynchronously)
   at System.Runtime.InputQueue`1.AsyncQueueReader.Set(Item item)
   at System.Runtime.InputQueue`1.EnqueueAndDispatch(Item item, Boolean canDispatchOnThisThread)
   at System.Runtime.InputQueue`1.EnqueueAndDispatch(T item, Action dequeuedCallback, Boolean canDispatchOnThisThread)
   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, Action dequeuedCallback, Boolean canDispatchOnThisThread)
   at System.ServiceModel.Channels.HttpPipeline.EnqueueMessageAsyncResult.CompleteParseAndEnqueue(IAsyncResult result)
   at System.ServiceModel.Channels.HttpPipeline.EnqueueMessageAsyncResult.HandleParseIncomingMessage(IAsyncResult result)
   at System.Runtime.AsyncResult.SyncContinue(IAsyncResult result)
   at System.ServiceModel.Channels.HttpPipeline.EmptyHttpPipeline.BeginProcessInboundRequest(ReplyChannelAcceptor replyChannelAcceptor, Action dequeuedCallback, AsyncCallback callback, Object state)
   at System.ServiceModel.Channels.HttpChannelListener`1.HttpContextReceivedAsyncResult`1.ProcessHttpContextAsync()
   at System.ServiceModel.Channels.HttpChannelListener`1.BeginHttpContextReceived(HttpRequestContext context, Action acceptorCallback, AsyncCallback callback, Object state)
   at System.ServiceModel.Activation.HostedHttpTransportManager.HttpContextReceived(HostedHttpRequestAsyncResult result)
   at System.ServiceModel.Activation.HostedHttpRequestAsyncResult.HandleRequest()
   at System.ServiceModel.Activation.HostedHttpRequestAsyncResult.BeginRequest()
   at System.ServiceModel.Activation.HostedHttpRequestAsyncResult.OnBeginRequest(Object state)
   at System.ServiceModel.AspNetPartialTrustHelpers.PartialTrustInvoke(ContextCallback callback, Object state)
   at System.ServiceModel.Activation.HostedHttpRequestAsyncResult.OnBeginRequestWithFlow(Object state)
   at System.Runtime.IOThreadScheduler.ScheduledOverlapped.IOCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)
   at System.Runtime.Fx.IOCompletionThunk.UnhandledExceptionFrame(UInt32 error, UInt32 bytesRead, NativeOverlapped* nativeOverlapped)
   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)
</StackTrace><ExceptionString>System.ServiceModel.Security.MessageSecurityException: Message security verification failed. ---&amp;gt; System.Security.Cryptography.CryptographicException: The signature verification failed.
   at System.IdentityModel.SignedXml.StartSignatureVerification(SecurityKey verificationKey)
   at System.ServiceModel.Security.WSSecurityOneDotZeroReceiveSecurityHeader.VerifySignature(SignedXml signedXml, Boolean isPrimarySignature, SecurityHeaderTokenResolver resolver, Object signatureTarget, String id)
   at System.ServiceModel.Security.ReceiveSecurityHeader.ProcessSupportingSignature(SignedXml signedXml, Boolean isFromDecryptedSource)
   at System.ServiceModel.Security.ReceiveSecurityHeader.ExecuteFullPass(XmlDictionaryReader reader)
   at System.ServiceModel.Security.ReceiveSecurityHeader.Process(TimeSpan timeout, ChannelBinding channelBinding, ExtendedProtectionPolicy extendedProtectionPolicy)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessageCore(Message&amp;amp; message, TimeSpan timeout)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout)
   --- End of inner exception stack trace ---</ExceptionString><InnerException><ExceptionType>System.Security.Cryptography.CryptographicException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ExceptionType><Message>The signature verification failed.</Message><StackTrace>   at System.IdentityModel.SignedXml.StartSignatureVerification(SecurityKey verificationKey)
   at System.ServiceModel.Security.WSSecurityOneDotZeroReceiveSecurityHeader.VerifySignature(SignedXml signedXml, Boolean isPrimarySignature, SecurityHeaderTokenResolver resolver, Object signatureTarget, String id)
   at System.ServiceModel.Security.ReceiveSecurityHeader.ProcessSupportingSignature(SignedXml signedXml, Boolean isFromDecryptedSource)
   at System.ServiceModel.Security.ReceiveSecurityHeader.ExecuteFullPass(XmlDictionaryReader reader)
   at System.ServiceModel.Security.ReceiveSecurityHeader.Process(TimeSpan timeout, ChannelBinding channelBinding, ExtendedProtectionPolicy extendedProtectionPolicy)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessageCore(Message&amp;amp; message, TimeSpan timeout)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout)</StackTrace><ExceptionString>System.Security.Cryptography.CryptographicException: The signature verification failed.
   at System.IdentityModel.SignedXml.StartSignatureVerification(SecurityKey verificationKey)
   at System.ServiceModel.Security.WSSecurityOneDotZeroReceiveSecurityHeader.VerifySignature(SignedXml signedXml, Boolean isPrimarySignature, SecurityHeaderTokenResolver resolver, Object signatureTarget, String id)
   at System.ServiceModel.Security.ReceiveSecurityHeader.ProcessSupportingSignature(SignedXml signedXml, Boolean isFromDecryptedSource)
   at System.ServiceModel.Security.ReceiveSecurityHeader.ExecuteFullPass(XmlDictionaryReader reader)
   at System.ServiceModel.Security.ReceiveSecurityHeader.Process(TimeSpan timeout, ChannelBinding channelBinding, ExtendedProtectionPolicy extendedProtectionPolicy)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessageCore(Message&amp;amp; message, TimeSpan timeout)
   at System.ServiceModel.Security.TransportSecurityProtocol.VerifyIncomingMessage(Message&amp;amp; message, TimeSpan timeout)</ExceptionString></InnerException></Exception></TraceRecord>
",,,,,,,,,,,,,,
URIMappingInterceptor and ArrayIndexOutOfBounds Error,CXF-3480,12505807,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,rdgrimes,rdgrimes,29/Apr/11 17:12,08/Aug/11 14:43,14/Mar/19 02:29,03/May/11 05:55,2.4,,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Core,,,,0,Interceptors,,,,,"URIMappingInterceptor keeps throwing ArrayIndexOutOfBounds error. 

Method:          getQueries
Statement (318): queries.put(keyValue[0], uriDecode(keyValue[1]));

Proposed Fix
Change from:
{code}
        if (!StringUtils.isEmpty(query)) {            
            List<String> parts = Arrays.asList(query.split(""&""));
            for (String part : parts) {
                String[] keyValue = part.split(""="");
                queries.put(keyValue[0], uriDecode(keyValue[1]));
            }
            return queries;
        }
{code}

Change to:
{code}
        if (!StringUtils.isEmpty(query)) { 
            List<String> parts = Arrays.asList(query.split(""&""));
            for (String part : parts) {
               if (part.contains(""="")) {
                   String[] keyValue = part.split(""="");
                   queries.put(keyValue[0], uriDecode(keyValue[1]));
               }
            }
            return queries;
        }
{code}","Tomcat 6.0.32, CXF 2.4, JDK 1.6.0_23",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-03 05:55:54.689,,,no_permission,,Novice,,,,,,,,,,,5833,,,Tue May 03 05:55:54 UTC 2011,,,,,,0|i0b9cf:,63626,,,,,,,,"03/May/11 05:55;ffang;commit fix per Ron's proposal
http://svn.apache.org/viewvc?rev=1098915&view=rev for trunk
http://svn.apache.org/viewvc?rev=1098921&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Endpoint address not resolved correctly when message exchange destination is not instance of AbstractHTTPDestination,CXF-3478,12505762,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,aukjan,aukjan,29/Apr/11 07:53,08/Aug/11 14:43,14/Mar/19 02:29,04/May/11 12:32,2.3.2,2.3.3,2.3.4,2.3.5,2.4,2.4.1,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,,,,0,,,,,,"Issue occurs (for example) if CXF jaxrs server is called as a consumer in a Camel Route. The jaxrs server is then setup with an direct camel address: 'camel://direct:jaxrsEndpoint', and is fed requests from a camel-jetty component. 

At this point Calls to HttpUtils.getEndpointAddress returns the 'camel://direct:jaxrsEndpoint' address, instead of the actual 'http://' address. This seems to be correct behavior, but is not what the user might expect. 

I am not completely sure where to change this (since I just stared using CXF), but I think it is either: org.apache.cxf.jaxrs.utils.HttpUtils.getEndpointAddress(), where the endpoint is fetched from the destination of the message, or: org.apache.cxf.jaxrs.impl.UriInfoImpl.getBaseUri(), where an extra check can be Build in looking for the existence of:  org.apache.cxf.message.Message.BASE_PATH (which can be set to indicate the base path (I think)), indicating the 'real' HTTP Base Uri, instead of the destination Endpoint.

I am going to make a patch for the second option, but if anyone has a better suggestion, please let me know.
",,,,,,,,,,,,,,,,,29/Apr/11 11:10;aukjan;patch.txt;https://issues.apache.org/jira/secure/attachment/12477747/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-04-29 09:02:14.789,,,no_permission,,,,,,,,,,,,,5834,,,Fri May 06 07:45:15 UTC 2011,,,,,,0|i0b9fr:,63641,,,,,,,,"29/Apr/11 09:02;chris@die-schneider.net;The code in org.apache.cxf.jaxrs.utils.HttpUtils.getEndpointAddress(Message) looks wrong to me. It first checks if the destination is of type AbstractHTTPDestination and then decides if it should use the property ""org.apache.cxf.transport.endpoint.address"" or the address from the endpoint. I think it would be better to always use the property if it is present. I am not sure though if there could be problems if the transport is a non http transport e.g. jms.

In general I think the getEndpointAddress is the better place to fix. I will also ask Sergey as he has written most of the jaxrs code.
","29/Apr/11 09:49;sergey_beryozkin;Hi, as discussed on IRC, checking for Message.BASE_PATH in 'else' branch, in case it is not AbstractHttpDestination, can provide a fix.
If that works then may be I can also remove

""org.apache.cxf.transport.endpoint.address"" altogether

Workaround (till this issue is closed) is also available - please check http://www.talend.com/resources/documentation.php#SF (talend-if-2.7.1.0-examples), spring-security or jaxrs-http-jms demos","29/Apr/11 11:10;aukjan;As discussed in IRC: Patch includes changes made to HttpUtils.getEndpointAddress, to also check the Message.BASE_PATH (if it exists).","04/May/11 12:32;sergey_beryozkin;Hi, I applied your patch with a minor update:
http://svn.apache.org/viewvc?rev=1099428&view=rev

I just realized I did not acknowledge that it was you patch in the commit message, sorry :-)

My tests with existing Talend Integration Factory Camel demos show that this patch is sufficient, I only needed one minor update to make sure
Message.BASE_PATH such as jms://topic, etc, are handled properly. 

thanks","06/May/11 07:45;aukjan;Thanks for the quick turnaround on this issue.. I forgive you for not giving credit on this, because of your speed ;) 


",,,,,,,,,,,,,,,,,,,,,,
NPE while unmarshalling attachments,CXF-3477,12505356,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,cgs,cgs,27/Apr/11 21:54,08/Aug/11 14:43,14/Mar/19 02:29,01/Jun/11 03:09,2.3.4,,,,,,,,,,,,,,,,,2.4.1,,,,,,,,0,,,,,,"Unfortunately, I cannot provide the message that generates this exception. It worked with 2.2.2, but after updating to 2.2.12 to get past another issue, it was similarly affected by CXF-3383. 2.3.4 just moves the exception to here:

DefaultValidationEventHandler: [ERROR]: null
     Location: line 1
org.apache.cxf.interceptor.Fault: Unmarshalling Error: null
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:787)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:628)
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:133)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:109)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2404)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2274)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2119)
        at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
        at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:695)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
[...]
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:425)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:362)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:764)
        ... 125 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:642)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:671)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:667)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.handleParseConversionException(Loader.java:267)
        at com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader.text(LeafPropertyLoader.java:65)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.text(UnmarshallingContext.java:494)
        at com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator.startElement(MTOMDecorator.java:103)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:242)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:176)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
        ... 127 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
        ... 137 more
Caused by: java.lang.NullPointerException
        at org.apache.cxf.attachment.LazyDataSource.getInputStream(LazyDataSource.java:67)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.get(Base64Data.java:188)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.getExact(Base64Data.java:154)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.decodeBase64(RuntimeBuiltinLeafInfoImpl.java:877)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.access$100(RuntimeBuiltinLeafInfoImpl.java:111)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$14.parse(RuntimeBuiltinLeafInfoImpl.java:678)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$14.parse(RuntimeBuiltinLeafInfoImpl.java:681)
        at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.parse(TransducedAccessor.java:243)
        at com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader.text(LeafPropertyLoader.java:61)
        ... 132 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:425)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:362)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:764)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:628)
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:133)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:109)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2404)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2274)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2119)
        at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
        at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:695)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
        ... 106 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:642)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:671)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:667)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.handleParseConversionException(Loader.java:267)
        at com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader.text(LeafPropertyLoader.java:65)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.text(UnmarshallingContext.java:494)
        at com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator.startElement(MTOMDecorator.java:103)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:242)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:176)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
        ... 127 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
        ... 137 more
Caused by: java.lang.NullPointerException
        at org.apache.cxf.attachment.LazyDataSource.getInputStream(LazyDataSource.java:67)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.get(Base64Data.java:188)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.getExact(Base64Data.java:154)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.decodeBase64(RuntimeBuiltinLeafInfoImpl.java:877)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.access$100(RuntimeBuiltinLeafInfoImpl.java:111)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$14.parse(RuntimeBuiltinLeafInfoImpl.java:678)
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$14.parse(RuntimeBuiltinLeafInfoImpl.java:681)
        at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.parse(TransducedAccessor.java:243)
        at com.sun.xml.bind.v2.runtime.unmarshaller.LeafPropertyLoader.text(LeafPropertyLoader.java:61)
        ... 132 more 
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-06-01 03:09:08.009,,,no_permission,,,,,,,,,,,,,5903,,,Wed Jun 01 03:09:08 UTC 2011,,,,,,0|i0b93z:,63588,,,,,,,,"01/Jun/11 03:09;dkulp;
Without the messages and/or a testcase, there likely isn't much we can do.   I did add additional exception information from the LazyDataSource instead of getting an NPE.

",,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractUsernameTokenAuthenticatingInterceptor does not handle digest passwords correctly,CXF-3476,12505284,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,27/Apr/11 08:33,08/Aug/11 14:43,14/Mar/19 02:29,27/Apr/11 08:56,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,,,,,,"
The AbstractUsernameTokenAuthenticatingInterceptor does not handle digest passwords correctly.

boolean isHashed = usernameToken.isDerivedKey();

should be:

boolean isHashed = usernameToken.isHashed();",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5935,,,2011-04-27 08:33:26.0,,,,,,0|i0b9f3:,63638,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thread issue in CXF LocalConduit and LocalDestination,CXF-3473,12505171,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,veaven,veaven,26/Apr/11 09:18,08/Aug/11 14:43,14/Mar/19 02:29,29/Apr/11 11:54,2.2,2.4,,,,,,,,,,,,,,,,2.4.1,,,,Core,,,,0,,,,,,"  In CXF's LocalConduit and LocalDestination, it always creates a new Thread to process Request message and Response message. It will cause performance issue if we use Local transport for internal message routing.

  Can we use Executor instead of creating thread? thanks.

In LocalDestination.java:
{code}
    final Runnable receiver = new Runnable() {
        public void run() {                                    
            if (exchange != null) {
                exchange.setInMessage(m);
            }
            conduit.getMessageObserver().onMessage(m);
        }
    };
    
    new Thread(receiver).start();
{code} 

In LocalConduit:
{code}
   final Runnable receiver = new Runnable() {
       public void run() {
           ExchangeImpl ex = new ExchangeImpl();
           ex.setInMessage(inMsg);
           ex.put(IN_EXCHANGE, exchange);
           destination.getMessageObserver().onMessage(inMsg);
       }
   };

   new Thread(receiver).start();
{code} 


David
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-27 03:35:13.289,,,no_permission,,,,,,,,,,,,,5835,,,Thu May 05 01:13:37 UTC 2011,,,,,,0|i0b9bb:,63621,,,,,,,,27/Apr/11 03:35;njiang;I think we could use the AutomaticWorkQueue to do this kind of job instead create a new thread each time.,"27/Apr/11 04:16;veaven;I just checked 2.4, the issue is there.","27/Apr/11 07:09;veaven;Thanks Willem, I think it also would be good to allow user to config their own Excutor. e.g. have a property for get/set Executor.

David","29/Apr/11 11:54;njiang;Applied patch into trunk, now the LocalTransport has the {get|set}Executor method.","05/May/11 01:13;veaven;Thanks Willem.

David",,,,,,,,,,,,,,,,,,,,,,
Cannot override HTTPConduit's handleResponse() method,CXF-3472,12505157,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,veaven,veaven,26/Apr/11 06:19,08/Aug/11 14:43,14/Mar/19 02:29,12/May/11 08:38,2.2,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,Core,,,,0,,,,,,"  Current, all response message processing of HTTPConduit is in the class WrappedOutputStream, e.g. handleResponse(), and handleResponseInternal() method, so we cannot extend HTTPConduit to override both method if we want to add more functions during processing response. because the class WrappedOutputStream need some input parameter and the its sub-class cannot get these private properties.
  My use case is: I have my customized HTTPConduit which needs to override handleResponse() method to catch its instead of cxf's default logic.

  Can cxf move both meothd from WrappedOutputStream class to HTTPConduit so that we can override them? thanks.

David",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-09 09:00:17.422,,,no_permission,,,,,,,,,,,,,5870,,,Wed May 25 01:40:00 UTC 2011,,,,,,0|i0b96v:,63601,,,,,,,,"27/Apr/11 04:18;veaven;I just check cxf 2.4, it is a same issue.","06/May/11 06:11;veaven;Could someone please take a look at this jira? We want to override handleResponse(), and handleResponseInternal() method to extend HttpConduit, thanks.

David","09/May/11 09:00;njiang;Hi David,

I just checked the HttpConduit code in the trunk and 2.3.x branch, the WrappedOutputStream and it's members are all protected.
You should be able to override the handleResponse() and handleResponseInternal() method in the sub class.
And you can set your customerized WrappedOutputStream by override the HTTPConduit.prepare(Message) method.

Willem
","11/May/11 02:32;veaven;Hi,

  Yup, this is the problem. I can extend both HttpConduit and its WrappedOutputStream class, and also I can override the handleResponse() and handleResponseInternal() method in the sub class.
  However, the problem is that I cannot access WrappedOutputStream's protected field to construct my sub class (java does not allow it). please see my code:

{code} 
public class MyHTTPConduit extends HTTPConduit {

    public MyHTTPConduit(Bus b, EndpointInfo ei) throws IOException {
        super(b, ei);
    }

    public void prepare(Message message) throws IOException {
        super.prepare(message);

        WrappedOutputStream wos = (WrappedOutputStream) message.getContent(OutputStream.class);
        MyWrappedOutputStream my = new MyWrappedOutputStream(wos);//compile error
        message.put(OutputStream.class, my);
    }

    protected class MyWrappedOutputStream extends WrappedOutputStream {

        protected MyWrappedOutputStream(WrappedOutputStream wos) {
            //Message m = wos.outMessage;// java access restriction, cannot access protected outMessage in WrappedOutputStream  
            super(m, c, possibleRetransmit, isChunking, chunkThreshold);
        }

        protected void handleResponse() throws IOException {
            super.handleResponse();
        }

        protected void handleResponseInternal() throws IOException {
            super.handleResponseInternal();
        }
    }
}

{code} 
","11/May/11 07:56;njiang;I think you can still use the below code to set a new WrappedOutputStream, in the MyHTTPConduit.prepare() method.

{code} 
message.setContent(OutputStream.class, 
                           new MyWrappedOutputStream(
                                   message, connection,
                                   needToCacheRequest, 
                                   isChunking,
                                   chunkThreshold,
                                   getConduitName()));
{code}","11/May/11 08:40;veaven;Unfortunately, I cannot. All properties:connection, needToCacheRequest, isChunking, chunkThreshold　ａｒｅ　ｃｏｎｓｔｒｕｃｔｅｄ　ｉｎ　ｔｈｅ　ｍｅｔｈｏｄ　ＨｔｔｐＣｏｎｄｕｉｔ．ｐｒｅｐａｒｅ（）　 method, so MyHTTPConduit.prepare() cannot get these values, unless we copy all code from HTTPConduit.prepare() method to MyHTTPConduit.prepare() method. (I want to avoid copy HttpConduit's code if it is possible)

  If we can provide a getMethod in WrappedOutputStream to allow us to get these value, it can also resolve the issue. thanks.

David","12/May/11 08:11;njiang;Hi David,

I just did a simple test by adding a new construction of WrappedOutputStream() which takes the instance of WrappedOutputStream. Then the MyWrappedOutputStream construction code could be like this.
{code}
        protected MyWrappedOutputStream(WrappedOutputStream wos) {
             super(wos);
        }
{code}

I will commit the change shortly.

Willem",12/May/11 08:38;njiang;committed the patch into trunk and 2.3.x-fixes branch.,"12/May/11 12:09;veaven;Thanks Willem!

David","16/May/11 17:30;dkulp;
I just added a new protected ""createOutputStream"" method to the conduit so you may be able to make this even easier/cleaner by not even having the original  WrappedOutputStream created.

","25/May/11 01:40;veaven;Thanks Dan!

David",,,,,,,,,,,,,,,,
JAX-RS attachment content its are malformed,CXF-3471,12505132,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,25/Apr/11 18:28,08/Aug/11 14:43,14/Mar/19 02:29,25/Apr/11 22:34,2.3.4,2.4,,,,,,,,,,,,,,,,2.4.1,,,,JAX-RS,,,,0,,,,,,"AttachmentUtil creates silly content ID:

Line 159 of Attachment Util:
id = ""Content-ID: <root.message@cxf.apache.org"";

Likely something is  wrong around there.   The best option is probably to move
the ""decode"" into the above ""if"" and set the id to just
root.message@cxf.apache.org or something at that point.

And ""Content-ID: "" definitely shouldn't be there.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46791,,,Mon Apr 25 18:42:51 UTC 2011,,,,,,0|i0l71b:,121790,,,,,,,,"25/Apr/11 18:42;bmargulies;You know, if there's a disposition with a name, why not use that?",,,,,,,,,,,,,,,,,,,,,,,,,,
WildcardTypeImpl cannot be cast to java.lang.Class - Class Cast exception thrown after upgrading from 2.2.3 to 2.4.0,CXF-3470,12505122,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,carlos.marin,carlos.marin,25/Apr/11 16:51,08/Aug/11 14:43,14/Mar/19 02:29,27/Apr/11 10:34,2.3.2,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,JAX-RS,JAXB Databinding,,,1,,,,,,"My project was working fine with CXF version 2.2.3. After trying to upgrade to 2.3.2 and 2.4.0, in both cases I'm getting the following exception:

java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.WildcardTypeImpl cannot be cast to java.lang.Class
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:204)
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:209)
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:209)
	at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:192)
	at org.apache.cxf.jaxrs.provider.ProviderFactory.compareClasses(ProviderFactory.java:778)
	at org.apache.cxf.jaxrs.provider.ProviderFactory.access$400(ProviderFactory.java:61)
	at org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator.compare(ProviderFactory.java:760)
	at java.util.Arrays.mergeSort(Arrays.java:1270)
	at java.util.Arrays.sort(Arrays.java:1210)
	at java.util.Collections.sort(Collections.java:159)
	at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:508)
	at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:304)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:1004)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:594)
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:559)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:118)
	at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:208)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:223)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:166)
	at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:113)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:184)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:107)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:163)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
...
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:680)




Method declaration is like (not working in CXF v2.4.0... but worked fine in v2.2.3):

    @POST
    @Path(""mypath"")
    @Consumes({""application/json"", ""application/xml""})
    public JAXBElement<MyElement> methodName(JAXBElement<? extends ParentClass> zzz)


Workaround is to declare method like:

    @POST
    @Path(""mypath"")
    @Consumes({""application/json"", ""application/xml""})
    public JAXBElement<MyElement> methodName(ParentClass zzz)","java version ""1.6.0_24""
Java(TM) SE Runtime Environment (build 1.6.0_24-b07-334-10M3326)
Java HotSpot(TM) 64-Bit Server VM (build 19.1-b02-334, mixed mode)

Apache Tomcat/6.0.32

Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386",,,,,,,,,,,,,,,,25/Apr/11 19:52;carlos.marin;patch.txt;https://issues.apache.org/jira/secure/attachment/12477328/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-04-27 10:34:02.954,,,no_permission,,,,,,,,,,,,,5838,,,Wed Apr 27 10:34:02 UTC 2011,,,,,,0|i0b9an:,63618,,,,,,,,25/Apr/11 19:52;carlos.marin;Please consider the following to fix the issue.,"25/Apr/11 19:54;carlos.marin;Please consider the following to fix:

{noformat} 
 Index: src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java
 ===================================================================
 --- src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java	(revision 1095513)
 +++ src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java	(working copy)
 @@ -30,6 +30,7 @@
  import java.lang.reflect.Proxy;
  import java.lang.reflect.Type;
  import java.lang.reflect.TypeVariable;
 +import java.lang.reflect.WildcardType;
  import java.security.AccessController;
  import java.security.PrivilegedAction;
  import java.util.ArrayList;
 @@ -197,10 +198,18 @@
         if (genericType == null) {
             return null;
         }
 -        if (!ParameterizedType.class.isAssignableFrom(genericType.getClass())) {
 +        if (!ParameterizedType.class.isAssignableFrom(genericType.getClass())) { 
             if (genericType instanceof TypeVariable) {
                 genericType = getType(((TypeVariable)genericType).getBounds(), pos);
 +            } else if (genericType instanceof WildcardType) { 
 +                WildcardType wildcardType = (WildcardType)genericType;
 +                Type[] bounds = wildcardType.getLowerBounds(); // '? extends Number'
 +                if (bounds.length == 0) { 
 +                    bounds = wildcardType.getUpperBounds(); // '? super Integer'
 +                }
 +                genericType = getType(bounds, pos);
             }
 +            
             Class<?> cls = (Class<?>)genericType;
             return cls.isArray() ? cls.getComponentType() : cls;
         }
{noformat} ","27/Apr/11 10:34;sergey_beryozkin;Carlos - your patch has been applied, thanks",,,,,,,,,,,,,,,,,,,,,,,,
"apache-cxf-2.4.0-src: minor issue when used with Eclipse 3.5.2: helloWorldSoapHttp created all llowercase in code, and M2_REPO classpath variable missing in Eclipse",CXF-3467,12504855,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,barret,barret,21/Apr/11 06:56,08/Aug/11 14:43,14/Mar/19 02:29,25/May/11 18:42,2.4,,,,,,,,,,,,,,,,,2.4,,,,OSGi,,,,0,,,,,,"The following procedure was followed when installing apache-cxf-2.4.0-src:
1. Expansion of zip to C:\apache-cxf-2.4.0-src
2. @mvn -Pfastinstall
3. @mvn -Psetup.eclipse -Declipse.workspace.dir=C:/eclipse-workspaces/3.5.2_Galileo-SR2/Eclipse_CXF
4. Import into Eclipse of all projects in C:\apache-cxf-2.4.0-src
5. Then 2 errors appear: a) class path variable M2_REPO is referred to but not present in Eclipse, so it had to be manually added. b) inconsistency in java code of Eclipse project cxf-systests-databinding, such that helloWorldSoapHttp is in lowercase in references to imported packages.

Details of error: C:\apache-cxf-2.4.0-src\systests\databinding\target\generated\src\test\java\jibx_bindings\hello_world.xml: helloworldsoaphttp is all lowercase, while in Eclipse, created Java is helloWorldSoapHttp - that causes errors in eclipse. See also: C:\apache-cxf-2.4.0-src\systests\databinding\target\generated\src\test\java\org\apache, and C:\apache-cxf-2.4.0-src\systests\databinding\target\test-classes\schemaorg_apache_xmlbeans


For more information, don't hesistate to contact me by mail.

Best Regards, Runo Barrdahl","Windows XP
JDK 1.6.0_24
apache-maven-2.2.1
Eclipse 3.5.2 Galileo SR2
",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-21 11:05:28.164,,,no_permission,,Moderate,,,,,,,,,,,6003,,,Wed May 25 18:42:30 UTC 2011,,,,,,0|i0b8zz:,63570,,,,,,,,"21/Apr/11 11:05;gmazza;As for (5), The missing M2_REPO is not an error, you need to define it in your workspace to point to your local Maven repository.  M2_REPO is used by just about every Maven-based project that you import into Eclipse, not just CXF.  Google ""setting m2_repo in eclipse"" for more countless links.

Further, I'm not sure if the other is a CXF bug either--could be though.  We do our builds using Maven (normally in a separate command-line window), not Eclipse, Eclipse is just for editing the code.  I'm not sure of the benefits of customizing the source code for one particular IDE.  (There are people using NetBeans, for example.)

","21/Apr/11 11:59;barret;Dear Glen:

Thanks for your fast comments.

Well, as regards the M2_REPO variable, what I implicitly meant was that the requirement to define it in Eclipse may be added in the configuration quide, in order to avoid the error.

You mighet be right about the second issue, I can not judge on that. Only, I saw a discrepance in Eclipse java project code as compared to the *.xml referred to by me.


Med vänlig hälsning / Best regards,

Runo Barrdahl, civ. ing., tekn. lic


Tieto Sweden AB, Financial Services
  


","22/Apr/11 11:43;dkulp;
The maven eclipse plugin should have set the M2_REPO variable.    Can you try again and then check the file :


workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.jdt.core.prefs

and see if it's defined in there?   I just tried it with:

 mvn -Psetup.eclipse -Declipse.workspace.dir=/tmp/workspace

and it seemed to work fine.  That said, I'm NOT sure if the eclipse.workspace.dir thing can deal with a drive letter.   I honestly don't know.  (I hate windows)

","26/Apr/11 05:45;barret;Dear Daniel:

Sorry, I do not have the time to carry out any more tests.
My intention when sending in my findings was solely to make them available for the Apache CXF development team.


Med vänlig hälsning / Best regards,

Runo Barrdahl, civ. ing., tekn. lic


Tieto Sweden AB, Financial Services
  

","25/May/11 18:42;dkulp;Changed the package names for the xmlbeans and jibx generated stuff to not have them in the same package, just with different case.    ",,,,,,,,,,,,,,,,,,,,,,
HTTP client sends empty messages when FINE log level is enabled,CXF-3466,12504831,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,asoldano,asoldano,20/Apr/11 23:07,08/Aug/11 14:43,14/Mar/19 02:29,21/Apr/11 09:25,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,Transports,,,,0,,,,,,"I'm testing JBossWS-CXF integration with Apache CXF 2.4.0 and I'm seeing a weird behaviour in HTTPConduit.
Basically, when the org.apache.cxf log category is set to DEBUG (I'm using log4j logging, that's FINE level) I see empty(1) messages being sent from client to server. Setting the log level to INFO, remove the problem. So I looked for ""isLoggable(Level.FINE"" strings in the CXF sources and tried commenting out them one by one to identify the culprit. Finally isolated it in the following code in HTTPConduit::onFirstWrite()
{code:title=HTTPConduit.java|borderStyle=solid}
            if (LOG.isLoggable(Level.FINE)) {
                LOG.fine(""Sending ""
                    + connection.getRequestMethod() 
                    + "" Message with Headers to "" 
                    + connection.getURL()
                    + "" Conduit :""
                    + conduitName
                    + ""\nContent-Type: "" + connection.getContentType() + ""\n"");
            }
{code}
My guess is one of the calls to the connection in there compromise its state.

(1) actually, capturing the network traffic reveals the http headers only are written, the body is completely missing",,,,,,,,,,,,,CXF-3554,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-21 09:19:54.309,,,no_permission,,,,,,,,,,,,,5837,,,Tue Jul 05 12:29:03 UTC 2011,,,,,,0|i0b973:,63602,,,,,,,,20/Apr/11 23:21;asoldano;A 'svn blame' suggests this is related to Christian's changes for CXF-3123,"21/Apr/11 09:19;chris@die-schneider.net;Hi Alessio,

I can confirm the bug and I already haave written a test that also shows it. I think the problem is in connection.getContentType. I will remove this from the log statement.
",21/Apr/11 09:25;chris@die-schneider.net;I added a test and removed the problematic call on connection,05/Jul/11 12:26;mrpi;I just wanted you guys to know that I spent and entire day trying to find the problem for why my client sent an empty body to the server. This was the cause of the problem. Luckily it appears that you guys already fixed the problem. When is version 2.4.1 gonna be out?,"05/Jul/11 12:29;chris@die-schneider.net;2.4.1 is already out
",,,,,,,,,,,,,,,,,,,,,,
EndorsingSupportingTokens policy reports not satisfied when using TLS with signed timestamp,CXF-3461,12504691,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,akphipps,akphipps,19/Apr/11 17:17,08/Aug/11 14:43,14/Mar/19 02:29,04/May/11 16:13,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,,,,,,"WS-SecurityPolicy 1.2 spec states: If transport security is used, the signature (Sig2) MUST cover the message timestamp

However, when sending a request to a CXF service requiring EndorsingSupportingTokens with a signed message timestamp, the EndorsingSupportingTokens policy is reported not satisfied.

It appears the PolicyBasedWSS4JInterceptor.doResults will only mark this satisfied if ""hasEndorsement"" is set, which is in turn based on a signature on the entire message.  This is only true when using MLS, not TLS.

Example policy fragment:

			<sp:EndorsingSupportingTokens>
				<wsp:Policy>
					<sp:X509Token
						sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
						<wsp:Policy>
							<sp:WssX509V3Token10 />
						</wsp:Policy>
					</sp:X509Token>
				</wsp:Policy>
			</sp:EndorsingSupportingTokens>

Example message portion:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
    <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soap:mustUnderstand=""1"">
      <wsse:BinarySecurityToken xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"" wsu:Id=""CertId-xxx"">xxx</wsse:BinarySecurityToken>
      <wsu:Timestamp xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp-1"">
        <wsu:Created>2011-04-19T15:46:35.705Z</wsu:Created>
        <wsu:Expires>2011-04-19T15:51:35.705Z</wsu:Expires>
      </wsu:Timestamp>
      <ds:Signature xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"" Id=""Signature-2"">
        <ds:SignedInfo>
          <ds:CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/>
          <ds:SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1""/>
          <ds:Reference URI=""#Timestamp-1"">
            <ds:Transforms>
              <ds:Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/>
            </ds:Transforms>
            <ds:DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""/>
            <ds:DigestValue>xxx</ds:DigestValue>
          </ds:Reference>
        </ds:SignedInfo>
        <ds:SignatureValue>xxx</ds:SignatureValue>
        <ds:KeyInfo Id=""KeyId-xxx"">
          <wsse:SecurityTokenReference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""STRId-xxx"">
            <wsse:Reference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" URI=""#CertId-xxx"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3""/>
          </wsse:SecurityTokenReference>
        </ds:KeyInfo>
      </ds:Signature>
    </wsse:Security>
  </soap:Header>
</soap:Envelope>
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-05-04 16:13:11.379,,,no_permission,,,,,,,,,,,,,5840,,,Wed May 04 16:13:11 UTC 2011,,,,,,0|i0b96f:,63599,,,,,,,,"04/May/11 16:13;coheigea;
I've fixed this, but only for an EndorsingSupportingTokens policy, and not e.g. SignedEndorsingSupportingTokens. I'm going to rewrite a lot of the policy validation stuff in the near future, so I'll tackle it then.

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,
Subcode not managed by cxf client,CXF-3459,12504641,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,juld,juld,19/Apr/11 09:50,08/Aug/11 14:43,14/Mar/19 02:29,05/May/11 01:50,2.3.3,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,WS-* Components,,,,0,,,,,,"In cxf-rt-frontend-jaxws :
When client is encountering a SoapFault the error ""subcode"" is not processed in JaxWsClientProxy.createSoapFault() : the subcode is not present in hhe SOAPFaultException which is thrown by the client.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5851,,,2011-04-19 09:50:57.0,,,,,,0|i0b98v:,63610,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AddressingFeature required Client should throw exception when the wsa header is missing in the inbound message ,CXF-3458,12504543,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,18/Apr/11 13:14,08/Aug/11 14:43,14/Mar/19 02:29,19/Apr/11 08:54,2.3.4,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,WS-* Components,,,,0,,,,,,"Refactor in the MAPAggregator interceptor: if the wsa header is not asserted for the ws addressing required client, the fault should be generated directly in MAPAggregator. It does not need to do it in PolicyVerficationIntecettor.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5932,,,2011-04-18 13:14:23.0,,,,,,0|i0b9bz:,63624,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service fails to find IssuedToken using SAML bearer subject confirmation,CXF-3457,12504499,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,akphipps,akphipps,17/Apr/11 19:48,08/Aug/11 14:43,14/Mar/19 02:29,06/May/11 16:30,2.4,,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,,,,,,"Using 4/12 2.4.0-SNAPSHOT.  IssuedTokenInInterceptor.findSecurityResult fails to recognize a bearer assertion where getSubjectKeyInfo returns null.  This results in the message failing the policy check as the IssuedToken is not added to the message.

Sample message:

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Header><Action xmlns=""http://www.w3.org/2005/08/addressing"">xxx</Action><MessageID xmlns=""http://www.w3.org/2005/08/addressing"">urn:uuid:xxx</MessageID><To xmlns=""http://www.w3.org/2005/08/addressing"">xxx</To><ReplyTo xmlns=""http://www.w3.org/2005/08/addressing""><Address>http://www.w3.org/2005/08/addressing/anonymous</Address></ReplyTo><wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soap:mustUnderstand=""1""><wsu:Timestamp xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp-3""><wsu:Created>2011-04-17T19:22:47.886Z</wsu:Created><wsu:Expires>2011-04-17T19:27:47.886Z</wsu:Expires></wsu:Timestamp><saml1:Assertion xmlns:saml1=""urn:oasis:names:tc:SAML:1.0:assertion"" AssertionID=""_xxx"" IssueInstant=""2011-04-17T19:22:47.552Z"" Issuer=""xxx"" MajorVersion=""1"" MinorVersion=""1""><saml1:Conditions NotBefore=""2011-04-17T18:22:47.552Z"" NotOnOrAfter=""2011-04-17T20:22:47.552Z""><saml1:AudienceRestrictionCondition><saml1:Audience>xxx</saml1:Audience></saml1:AudienceRestrictionCondition></saml1:Conditions><saml1:AttributeStatement><saml1:Subject><saml1:NameIdentifier Format=""urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"">xxx</saml1:NameIdentifier><saml1:SubjectConfirmation><saml1:ConfirmationMethod>Urn:oasis:names:tc:SAML:1.0:cm:bearer</saml1:ConfirmationMethod></saml1:SubjectConfirmation></saml1:Subject><saml1:Attribute AttributeName=""xxx"" AttributeNamespace=""xxx""><saml1:AttributeValue xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""xs:string"">xxx</saml1:AttributeValue></saml1:Attribute></saml1:AttributeStatement><Signature:Signature xmlns=""http://www.w3.org/2000/09/xmldsig#"" xmlns:Signature=""http://www.w3.org/2000/09/xmldsig#""><SignedInfo><CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/><SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1""/><Reference URI=""#_xxx""><Transforms><Transform Algorithm=""http://www.w3.org/2000/09/xmldsig#enveloped-signature""/><Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/></Transforms><DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1""/><DigestValue>xxx</DigestValue></Reference></SignedInfo><SignatureValue>xxx</SignatureValue><KeyInfo><X509Data><X509SubjectName>xxx</X509SubjectName><X509Certificate>xxx</X509Certificate></X509Data></KeyInfo></Signature:Signature></saml1:Assertion></wsse:Security></soap:Header><soap:Body></soap:Body></soap:Envelope>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5847,,,2011-04-17 19:48:06.0,,,,,,0|i0b967:,63598,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSA implementation does not throw wsa:InvalidCardinality exception when there is a greater than expected number of the specified header,CXF-3456,12504231,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,14/Apr/11 05:43,08/Aug/11 14:43,14/Mar/19 02:29,19/Apr/11 08:53,2.3.3,2.4,,,,,,,,,,,,,,,,2.3.5,2.4.1,,,WS-* Components,,,,0,,,,,,"As per WSA soap binding spec:
6.4.1.3 wsa:InvalidCardinality
Specifies that there was a greater than expected number of the specified header.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5934,,,2011-04-14 05:43:02.0,,,,,,0|i0b9ef:,63635,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Security signed headers fail when schema validation enabled,CXF-3453,12503976,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,eddardstark,eddardstark,11/Apr/11 20:08,27/Jun/14 20:17,14/Mar/19 02:29,18/Apr/11 12:39,2.3.1,2.3.3,,,,,,,,,,,,,,,,2.3.4,2.4,,,WS-* Components,,,,0,,,,,,"After turning on schema validation on a web-service with headers that are signed, but not encrypted, the schema validation fails because the ""wsu:Id"" is not allowed in the schema.

I've seen two forms of this:  a complex type header fails with an error saying that the ""wsu:Id"" attribute isn't allowed, and a simple type header fails saying that no attributes are allowed (except for type, nill, schemaInstance, etc.).

I think this is a bug, as I don't know anything in the WS-Security specs that would prevent signing of simple type headers or prevent subsequent schema validation.

I've worked around this by using complex types and adding ""<xsd:anyAttribute namespace=""##any"" processContents=""skip""/>"" to those types, but it doesn't seem like this should be necessary, and doesn't fix the simple type problem.
",,,,,,,,,,,,,,,,,11/Apr/11 20:10;eddardstark;SignedHeaderBug.zip;https://issues.apache.org/jira/secure/attachment/12476049/SignedHeaderBug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-04-18 12:39:57.811,,,no_permission,,,,,,,,,,,,,5906,,,Wed Jun 01 20:59:36 UTC 2011,,,,,,0|i0b8yn:,63564,,,,,,,,"11/Apr/11 20:10;eddardstark;Attached is a zip file of a maven project that exhibits this problem.  If you unzip it, CD to the WSSecurityTutorialParent directory, and execute ""mvn clean install -Pintegration-test"", you should see four failed tests due to this problem.  The problem should be exhibited in both complex and simple type forms, and will occur on the response as well.","12/Apr/11 17:52;eddardstark;The applied changes only fix one of two reported errors:  the tests in the attached zip produce both 

cvc-complex-type.3.1.1 (where an attribute has been added to a simple type header), and also:

cvc-complex-type.3.2.2: Attribute 'wsu:Id' is not allowed to appear in element 'blah'

Only the first was fixed in the current fix.","18/Apr/11 12:39;dkulp;
A added the second id string before 2.3.4 so it should  be fixed.","01/Jun/11 20:59;eddardstark;I'm still seeing this problem for complex types (where the exception is cvc-complex-type.3.2.2), both with 2.3.4 and 2.4 (and 2.4.1-SNAPSHOT and 2.3.4-SNAPSHOT).",,,,,,,,,,,,,,,,,,,,,,,
WS-Security Encrypted headers fail with JAX-WS Binding,CXF-3452,12503957,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,eddardstark,eddardstark,11/Apr/11 17:52,18/Apr/11 12:44,14/Mar/19 02:29,11/Apr/11 23:16,2.3.1,2.3.3,,,,,,,,,,,,,,,,2.3.4,2.4,,,WS-* Components,,,,0,,,,,,"When building a SOAP web service using CXF, JAX-WS, and the CXF extensions for WS-Security and WS-SecurityPolicy, SOAP headers that are encrypted are correctly decrypted, but are not correctly passed to the endpoint.

This happens because, as far as I can tell, org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor correctly searches for headers in the headers list of the Message parameter to handleMessage, but doesn't find it because the encrypted headers didn't really exist in their final form in the actual message.

I've seen this on 2.3.1 and 2.3.3; no reason to suspect that 2.3.2 also has it but I haven't tested.  Running Java 1.6.0_24 on OS X, although I don't think the OS or java version has anything to do with it.",Java 6,,,,,,,,,,,,,,,,11/Apr/11 19:12;eddardstark;EncryptedHeaderBug.zip;https://issues.apache.org/jira/secure/attachment/12476037/EncryptedHeaderBug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5929,,,Tue Apr 12 17:43:42 UTC 2011,,,,,,0|i0b9e7:,63634,,,,,,,,"11/Apr/11 19:12;eddardstark;Attached a zip file containing a maven project that exhibits this problem.  If you unzip, CD into the WSSecurityTutorialParent module, and execute ""mvn clean install -Pintegration-test"" you should get two failed tests:


 basicTest(com.example.tutorial.ws.integration.TutorialWebServiceTest): Source cannot be null.
 systemUnavailableTest(com.example.tutorial.ws.integration.TutorialWebServiceTest):
Expected exception com.example.tutotial.SystemUnavailableFault but got com.example.tutotial.RequiredHeaderMissingFault: Source cannot be null.

These should _not_ fail, as the header should be correctly passed.

(previous one I attached had certificates that expired shortly after I sent it)",12/Apr/11 17:43;eddardstark;The fix applied in the latest snapshot definitely fixes this issue for me.,,,,,,,,,,,,,,,,,,,,,,,,,
Google app engine deploy fail,CXF-3448,12503845,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,lstrzelecki,lstrzelecki,09/Apr/11 22:18,18/May/11 21:30,14/Mar/19 02:29,18/May/11 21:29,2.3.3,,,,,,,,,,,,,,,,,2.4,,,,JAX-RS,,,,0,,,,,,"I'm try using cxf to expose resource through REST.
While deploying web application error occurs:
{code}
javax.servlet.ServletContext log: unavailable
java.security.AccessControlException: access denied (java.io.FilePermission /WEB-INF/cxf-servlet.xml read)
	at java.security.AccessControlContext.checkPermission(AccessControlContext.java:355)
	at java.security.AccessController.checkPermission(AccessController.java:567)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)
	at com.google.apphosting.runtime.security.CustomSecurityManager.checkPermission(CustomSecurityManager.java:45)
	at java.lang.SecurityManager.checkRead(SecurityManager.java:888)
	at java.io.File.exists(File.java:788)
	at org.apache.cxf.resource.URIResolver.tryFileSystem(URIResolver.java:135)
	at org.apache.cxf.resource.URIResolver.<init>(URIResolver.java:90)
	at org.apache.cxf.resource.URIResolver.<init>(URIResolver.java:73)
	at org.apache.cxf.resource.URIResolver.<init>(URIResolver.java:69)
	at org.apache.cxf.transport.servlet.CXFServlet.loadAdditionalConfig(CXFServlet.java:172)
	at org.apache.cxf.transport.servlet.CXFServlet.updateContext(CXFServlet.java:158)
	at org.apache.cxf.transport.servlet.CXFServlet.loadSpringBus(CXFServlet.java:104)
	at org.apache.cxf.transport.servlet.CXFServlet.loadBus(CXFServlet.java:73)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.init(AbstractCXFServlet.java:84)
	at org.mortbay.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:440)
	at org.mortbay.jetty.servlet.ServletHolder.doStart(ServletHolder.java:263)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:685)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at com.google.apphosting.runtime.jetty.AppVersionHandlerMap.createHandler(AppVersionHandlerMap.java:191)
	at com.google.apphosting.runtime.jetty.AppVersionHandlerMap.getHandler(AppVersionHandlerMap.java:168)
	at com.google.apphosting.runtime.jetty.JettyServletEngineAdapter.serviceRequest(JettyServletEngineAdapter.java:123)
	at com.google.apphosting.runtime.JavaRuntime.handleRequest(JavaRuntime.java:261)
	at com.google.apphosting.base.RuntimePb$EvaluationRuntime$2.handleRequest(RuntimePb.java:9285)
	at com.google.net.rpc.impl.RpcUtil.runRpcInApplication(RpcUtil.java:437)
	at com.google.net.rpc.impl.Server$RpcTask.runInContext(Server.java:573)
	at com.google.tracing.TraceContext$TraceContextRunnable$1.run(TraceContext.java:448)
	at com.google.tracing.TraceContext.runInContext(TraceContext.java:688)
	at com.google.tracing.TraceContext$AbstractTraceContextCallback.runInInheritedContextNoUnref(TraceContext.java:326)
	at com.google.tracing.TraceContext$AbstractTraceContextCallback.runInInheritedContext(TraceContext.java:318)
	at com.google.tracing.TraceContext$TraceContextRunnable.run(TraceContext.java:446)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:636)
{code}

Below configuration of cxf:
web.xml
{code}
<web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
		 xmlns=""http://java.sun.com/xml/ns/javaee""
		 xmlns:web=""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
		 xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
		 version=""2.5"">

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/context.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/cxf/*</url-pattern>
    </servlet-mapping>
</web-app>
{code}

Spring context configuration.
{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xmlns:jaxrs=""http://cxf.apache.org/jaxrs""
       xsi:schemaLocation=""
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd""
    default-lazy-init=""false"">

    <import resource=""classpath:META-INF/cxf/cxf.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-extension-jaxrs-binding.xml"" />
    <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

    <jaxrs:server id=""myService"" address=""/resource"">
        <jaxrs:serviceBeans>
            <!-- spring beans -->
        </jaxrs:serviceBeans>
    </jaxrs:server>
</beans>
{code}","Google App Engine v. 1.4.3
Spring 3.0.5.RELEASE",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-11 14:15:30.17,,,no_permission,,,,,,,,,,,,,46800,,,Wed May 18 21:29:59 UTC 2011,,,,,,0|i143l3:,232044,,,,,,,,"11/Apr/11 14:15;dkulp;
The ServletTransport has been completely re-written for 2.4.0-SNAPSHOT and no longer uses the URIResolver at all.  Thus, this is likely fixed in 2.4.0.   Verification would appreciated.
",18/May/11 21:29;lstrzelecki;Tested on google app engine with cxf 2.4.0,,,,,,,,,,,,,,,,,,,,,,,,,
Error creating bean with name 'cxf': Requested bean is currently in creation: Is there an unresolvable circular reference? ,CXF-3447,12503816,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,apachecontrib.k,apachecontrib.k,09/Apr/11 06:25,18/Apr/11 12:44,14/Mar/19 02:29,11/Apr/11 23:04,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,"Frameworks being used: cxf with jax-rs 2.3.3, and spring 3.0.2
App Server: Tomcat 6.0

Issue occurs when using Spring AOP with AspectJ pointcuts

2011-04-09 00:31:31,673 [qtp12141980-21] ERROR DefaultListableBeanFactory  - Destroy method on bean with name '(inner bean)#1' threw an exception
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.cxf.resource.ResourceManager' defined in class path resource [META-INF/cxf/cxf.xml]: Cannot resolve reference to bean 'cxf' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'cxf': Requested bean is currently in creation: Is there an unresolvable circular reference?

===

able to resolve this by reversing the expressions (in the local build) in the following statement of BusExtensionPostProcessor::postProcessBeforeInitialization

[before the change]
null != getBus() && bean instanceof BusExtension

[after the change]
bean instanceof BusExtension && null != getBus()
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-11 23:04:38.413,,,no_permission,,,,,,,,,,,,,5931,,,Mon Apr 11 23:04:38 UTC 2011,,,,,,0|i0b9db:,63630,,,,,,,,"11/Apr/11 23:04;dkulp;
Jsut flipping them like that caused a bunch of test failures for us, but I was able to come up with a slighly better fix for this. ",,,,,,,,,,,,,,,,,,,,,,,,,,
InjectorUtils class goes to deep when it handles an enum value,CXF-3446,12503731,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,brosnic,brosnic,08/Apr/11 12:00,18/Apr/11 12:42,14/Mar/19 02:29,08/Apr/11 13:50,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,JAX-RS,Simple Frontend,,,0,,,,,,"class: org.apache.cxf.jaxrs.utils.InjectionUtils
method: public static void fillInValuesFromBean(Object bean, String baseName, MultivaluedMap<String, Object> values){
line number: 869

Problem: 
If the Object ""bean"" is a enum value, one of the methods is called getDeclaringClass(). This should be catched on this line as it is done for getClass().
getDeclaringClass() will never contain query-params.

should be:
if (baseName.contains(propertyName) || ""class"".equals(propertyName) || ""declaringclass"".equals(propertyName)) {
    continue;
}

This method is called by the ClientProxyImpl.handleQueries method.",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,5832,,,2011-04-08 12:00:33.0,,,,,,0|i0b9g7:,63643,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSS4JInIntereptor does not always set the 'best' Principal as SecurityContext Principal,CXF-3444,12503529,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,06/Apr/11 16:08,18/Apr/11 12:44,14/Mar/19 02:29,06/Apr/11 16:39,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,WS-* Components,,,,0,,,,,,"David Zhang reports:

""At the end of the method is a for-loop over the wssEngineResults. If withCallbacks is false then the UsernameToken should be put in the message. **The Problem is, the first Principal found is not the UsernameTokenPrincipal but the DerivedKeyPrincipal**. This triggers creation of a security context and breakes the for-loop. The second wssEngineResult would have been the UsernameTokenPrincipal.""

The actual problem is that a Principal such as WSUsernameTokenPrincipal which is more likely to help at the SecurityContext level is not set as a SecurityContext principal. 

This does not happen when a public key was used to encrypt the token.

The solution is simply try to ignore a DerivedKey principal (used solely for encrypting) if possible, when setting SecurityContext. All the principals will still be available on the message as before.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5919,,,2011-04-06 16:08:25.0,,,,,,0|i0b9in:,63654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
catalog.cat files are pointing to wrong xsd schemas,CXF-3435,12503157,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,ay,ay,01/Apr/11 18:06,18/Apr/11 12:44,14/Mar/19 02:29,01/Apr/11 22:42,2.4,,,,,,,,,,,,,,,,,2.4,,,,WS-* Components,,,,0,,,,,,"This problem is trivial and occurs only in the current trunk.

In 2.3.x, the local versions of various ws xsd schemas were available at /common/schemas/src/main/resources/schemas/wsdl/. 

In trunk, the location of the schemas seems to have moved to /api/src/main/resources/schemas/wsdl/.

However, the catalog.cat files for rt/ws/rm and rt/ws/addr have not been updated with this new location.
Consequently, the local schema retrieval is not working and the ws/rm build tries to fetch the external public schema at http://schemas.xmlsoap.org/ws/2004/08/addressing for the addressing schema.

Just updating the catalog.cat files will solve this problem.
I'm attaching the patch.
",,1800,1800,,0%,1800,1800,,,,,,,,,,01/Apr/11 18:12;ay;trunk_20110401.txt;https://issues.apache.org/jira/secure/attachment/12475246/trunk_20110401.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,5990,,,Fri Apr 01 18:12:26 UTC 2011,,,,,,0|i0b9kn:,63663,,,,,,,,"01/Apr/11 18:12;ay;patch for schema location path changes in catalog.cat
",,,,,,,,,,,,,,,,,,,,,,,,,,
XmlJavaTypeAdapter is not used correctly with explicit collections,CXF-3430,12502691,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,29/Mar/11 10:14,18/Apr/11 12:44,14/Mar/19 02:29,29/Mar/11 10:18,2.3.4,,,,,,,,,,,,,,,,,2.3.4,2.4,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46804,,,2011-03-29 10:14:25.0,,,,,,0|i1459r:,232317,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServerImpl should shutdown Destination before setMessageObserver=null,CXF-3429,12502663,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,veaven,veaven,29/Mar/11 06:43,18/Apr/11 12:42,14/Mar/19 02:29,29/Mar/11 13:49,2.2.10,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,"Hi,

  During shutdown the CXF server, we encounter the NullPointerException from time to time. 
  The issue is that ServerImpl will set MessageObserver to null, and then it shutdown desination. however, if the server is multi-thread and probably some thread is runing, then it can result in NullPointerException because MessageObserver is null.

  Can we fix this bug by shutdown the Destination first and then set MessageObserver to null?
  
  Also, do we have a workaround for this issue?

{code}
public class ServerImpl implements Server {
public void stop() {
    LOG.fine(""Server is stopping."");
    ...
    getDestination().setMessageObserver(null);
    getDestination().shutdown();
}
{code}

David",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-29 13:49:39.504,,,no_permission,,,,,,,,,,,,,46805,,,Wed Mar 30 02:43:21 UTC 2011,,,,,,0|i0sxpr:,166939,,,,,,,,29/Mar/11 13:49;njiang;Applied patch into trunk and 2.3.x-fixes branch with thanks to David.,30/Mar/11 02:43;veaven;Thanks Willem.,,,,,,,,,,,,,,,,,,,,,,,,,
Context closed twice with Spring setup,CXF-3428,12502630,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,anderius,anderius,28/Mar/11 21:46,18/Apr/11 12:42,14/Mar/19 02:29,31/Mar/11 07:49,2.3.2,2.3.3,,,,,,,,,,,,,,,,2.3.4,,,,,,,,0,context,spring,,,,"See the enclosed project (very minimal).

I have a cxf.cml and an applicationContext.xml, and loads both using ContextLoaderListener in my web.xml. I have also a CXFServlet. Starting this with Jetty, I get the following exception when I stop the server:

{code}
28.mar.2011 23:43:15 org.springframework.context.support.AbstractApplicationContext doClose
WARNING: Exception thrown from ApplicationListener handling ContextClosedEvent
java.lang.IllegalStateException: BeanFactory not initialized or already closed - call 'refresh' before accessing beans via the ApplicationContext
	at org.springframework.context.support.AbstractRefreshableApplicationContext.getBeanFactory(AbstractRefreshableApplicationContext.java:171)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1079)
	at org.apache.cxf.bus.spring.BusApplicationListener.onApplicationEvent(BusApplicationListener.java:66)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:97)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:303)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1007)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:970)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:378)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:78)
	at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:683)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStop(ServletContextHandler.java:143)
	at org.eclipse.jetty.webapp.WebAppContext.doStop(WebAppContext.java:458)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStop(HandlerCollection.java:247)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStop(HandlerWrapper.java:108)
	at org.eclipse.jetty.server.Server.doStop(Server.java:319)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:80)
	at Main.main(Main.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
{code}

To replicate, simply run the Main method in the attached project. Then switch the CXF version in the pom.xml, and see it works with version 2.3.1. I therefore thinks this is related to CXF-3213.","Windows 7, both Java 5 and 6, and both Jetty 7.3 and Tomcat 7.",,,,,,,,,,,,,,,,28/Mar/11 21:47;anderius;context-bug.zip;https://issues.apache.org/jira/secure/attachment/12474818/context-bug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-30 02:42:34.746,,,no_permission,,,,,,,,,,,,,46806,,,Thu Mar 31 10:23:28 UTC 2011,,,,,,0|i1afov:,269008,,,,,,,,28/Mar/11 21:47;anderius;Added minimal project needed to replicate the error I am getting.,28/Mar/11 21:48;anderius;I think there is a relation between these two bugs.,"30/Mar/11 02:42;njiang;Hi,

There is no anything in the cxf.xml and applicationContext.xml.
As the BusApplicationListener can't get any bean for an empty application context.
To fix it, we could add a check point in the BusApplicationListener.

Willem
","30/Mar/11 11:05;anderius;Just to make sure we do not misunderstand each other:

* The error is happening during shutdown.
* The error is also happening with beans and endpoints defined (beans in applicationContext.xml, and endpoint in cxf.xml, as it is in the project I am currently working on).

Best,

Anders

","31/Mar/11 07:48;njiang;@Anders,

I committed a patch into CXF 2.3.x-fixes branch and I also tested the patch with your test case, it should be OK now.
Please check out the CXF 2.3.4-SNAPSHOT for verification.

","31/Mar/11 10:23;anderius;I tested with the SNAPSHOT, and it is working. Verified {color:green}*OK*{color}.

Thank you for replying and fixing the bug so fast!",,,,,,,,,,,,,,,,,,,,,
JMSContinuation should be thread safe,CXF-3427,12502539,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,njiang,njiang,28/Mar/11 04:09,18/Apr/11 12:44,14/Mar/19 02:29,01/Apr/11 12:39,,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Transports,,,,0,,,,,,"As the doResume() method of JMSContinuation could be invoked in different thread as the same time, it should be synchronized. 
Also, some boolean flag (isNew, isPending, isResumed) need to be made volatile.
We also need to update the JettyContinuationWrapper and Servlet3Continuation for boolean flag.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5985,,,2011-03-28 04:09:52.0,,,,,,0|i0b73r:,63263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF JMSContinuation leaks threads,CXF-3426,12502535,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,28/Mar/11 02:40,18/Apr/11 12:42,14/Mar/19 02:29,28/Mar/11 03:41,2.2.11,2.2.12,2.3,2.3.1,2.3.2,2.3.3,,,,,,,,,,,,2.3.4,2.4,,,Transports,,,,0,,,,,,"JMSContinuation contains this method:
{code}
protected void createTimerTask(long timeout) {
        timer = new Timer();
        timer.schedule(new TimerTask() {
            public void run() {
                synchronized (JMSContinuation.this) { 
                    if (isPending) {
                        doResume();
                    }
                }
            }
        }, timeout);
    }
{code}
The 'if' statement should be changed to:
{code}
if (isPending) {
            cancelTimerTask();
            doResume();
}
{code}
The current impl causes cancel() not to be called on the Timer instance if timeout is triggered. This causes threads created by Timer instances to be leaked.

Please note: as stated above - the leak is only observable when timeouts are triggered on these continuations. If no timeouts are triggered and the orginary resume() method is called, this class does nto leak threads.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46807,,,Mon Mar 28 03:41:12 UTC 2011,,,,,,0|i1459z:,232318,,,,,,,,28/Mar/11 03:41;njiang;Applied patch into trunk and 2.3.x branch.,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF bundles of 2.4-SNAPSHOT should not import the package of org.w3._2001.xmlschema,CXF-3425,12502534,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,njiang,njiang,28/Mar/11 02:31,18/Apr/11 12:44,14/Mar/19 02:29,28/Mar/11 02:34,,,,,,,,,,,,,,,,,,2.4,,,,,,,,0,,,,,,"As CXF bundle ships the ""org.w3._2001.xmlschema"" to provide the Adapters for JAXB, we should not CXF bundle to import it.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-28 02:38:34.598,,,no_permission,,,,,,,,,,,,,46808,,,Mon Mar 28 03:39:29 UTC 2011,,,,,,0|i145a7:,232319,,,,,,,,28/Mar/11 02:34;njiang;Applied patch into trunk.,"28/Mar/11 02:38;dkulp;
CXF should not be shipping anything in the org.w3 namespace at all.   I fixed this for the WS-RM stuff last week.   Thus, this patch should not be needed.","28/Mar/11 03:10;njiang;@Dan,

Thanks for pointing that out, I found your patch of WS-RM,  I will revert the change shortly.

","28/Mar/11 03:39;njiang;revert the patch, as the it has been fixed with the below patch[1].

[1]http://svn.apache.org/viewvc?rev=1084979&view=rev

",,,,,,,,,,,,,,,,,,,,,,,
'Cannot find target method' when certain hex-encoded characters are used in @PathParam in GET requests,CXF-3422,12502370,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,karel.vlcek,karel.vlcek,25/Mar/11 11:03,18/Apr/11 12:44,14/Mar/19 02:29,28/Mar/11 11:48,2.3.1,2.3.3,,,,,,,,,,,,,,,,2.3.4,2.4,,,JAX-RS,,,,0,,,,,,"I have following simple JAX-RS service:

{code}
public interface RootService {
    @Path(""data1"")
    public DataService getDataService();
}

public interface DataService {
    @GET
    @Path(""data2/{id}"")
    public Data getData(@PathParam(""id"") String id);
}
{code}

All works correctly as long as URL contains in position of @PathParam(""id"") ASCII characters and digits or hex-encoded spaces. These URLs work:

GET /root/data1/data2/1
GET /root/data1/data2/AAA2BBB
GET /root/data1/data2/1%202

However, when URL on position of the parameter {id} contains certain hex-encoded characters other than space (%20), like in this URL (this example contains digit '1' followed by 'latin capital letter d with caron'):

GET /root/data1/data2/1%C4%8E

I'll get following exception:

{noformat}
javax.ws.rs.WebApplicationException
	at org.apache.cxf.jaxrs.utils.JAXRSUtils.findTargetMethod(JAXRSUtils.java:399)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:204)
	at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
	at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:461)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:149)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:662)
{noformat}

{code}
//////////////////////////////
// Simple implementations - just to complete the example...

public class RootServiceImpl implements RootService {
    @Override
    public DataService getDataService() {
        return new DataServiceImpl();
    }
}

public class DataServiceImpl implements DataService {
    @Override
    public Data getData(final String id) {
      // ...
    }
}
{code}",Tomcat 6,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-25 16:25:02.785,,,no_permission,,,,,,,,,,,,,46810,,,Mon Mar 28 11:48:00 UTC 2011,,,,,,0|i145an:,232321,,,,,,,,"25/Mar/11 16:25;sergey_beryozkin;Hi, thanks for the detailed info.

Works for me, I updated the existing system test and it works fine. It is Jetty based. 

2.3.3 has a brittle workaround to do with the fact HttpServletRequest loses matrix parameters on the last path segment. It was removed in 2.3.4-SNAPSHOT and all the encoded URI should be supported properly.

Can you please try 2.3.4-SNAPHOT [1] and let me know if this issue persists ? I hope you will confirm it has been resolved :-)
thanks, Sergey

[1] http://repository.apache.org/snapshots/org/apache/cxf/apache-cxf/2.3.4-SNAPSHOT/ 

","28/Mar/11 11:23;karel.vlcek;Hi, yes, I confirm that it works correctly with 2.3.4-SNAPSHOT.
Thank you,
Karel","28/Mar/11 11:47;sergey_beryozkin;Hi Karel, many thanks.
one possible problem was that Tomcat itself was not handling some of those characters properly, and it in turn was exposing the brittleness of the workaround to do with keeping the matrix params...

Either way, thanks for confirming it works with the snapshots

Cheers, Sergey
",28/Mar/11 11:48;sergey_beryozkin;Resolved in the snapshots,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBoundsException in DocLiteralInInterceptor,CXF-3413,12502167,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,agudian,agudian,23/Mar/11 11:19,18/Apr/11 12:42,14/Mar/19 02:29,02/Apr/11 00:47,2.3.3,,,,,,,,,,,,,,,,,2.3.4,,,,,,,,0,,,,,,"I am receiving the following response from a web service that I call using CXF 2.3.3:

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://www.w3.org/2003/05/soap-envelope"" xmlns:xml=""http://www.w3.org/XML/1998/namespace"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
<SOAP-ENV:Header xmlns:SOAP-ENV=""http://www.w3.org/2003/05/soap-envelope"" xmlns:SOAP-ENC=""http://www.w3.org/2003/05/soap-encoding""></SOAP-ENV:Header><SOAP-ENV:Body>
<xsd1:statusCode xmlns:xsd1=""http://www.xxx.yy/zzz/types/"">-1</xsd1:statusCode>
  <xsd1:statusMessage xmlns:xsd1=""http://www.xxx.yy/zzz/types/"">Some Status Message</xsd1:statusMessage>
  <xsd1:pdfList xmlns:xsd1=""http://www.xxx.yy/zzz/types/""></xsd1:pdfList>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
{code}

This results in the following exception:
{code}
java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.RangeCheck(ArrayList.java:547)
	at java.util.ArrayList.get(ArrayList.java:322)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:188)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2335)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2193)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2037)
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:697)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy43.myWebserviceOperation(Unknown Source)
{code}

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-23 12:18:15.409,,,no_permission,,,,,,,,,,,,,5996,,,Sat Apr 02 00:47:50 UTC 2011,,,,,,0|i0b9jz:,63660,,,,,,,,"23/Mar/11 12:18;ffang;Hi,

Could you elaborate what's the soap stack used for server side?
I notice there's
xmlns:SOAP-ENC=""http://www.w3.org/2003/05/soap-encoding"" 
from your response message,
which indicate the server side isn't cxf, and soap-encoding style isn't supported by cxf.

Thus you also need append your wsdl so that we can tell if the response soap message is expected by cxf.
Freeman
","28/Mar/11 10:48;agudian;The server side is a webMethods 7.x integration server.

I had to anonymize the WSDL a bit, the real one had some more operations, types and elements, and different namespaces, service name and port name.
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<definitions xmlns=""http://schemas.xmlsoap.org/wsdl/"" xmlns:SOAP-ENC=""http://schemas.xmlsoap.org/soap/encoding/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap12/"" xmlns:tns=""http://www.xxx.yy/zzz"" xmlns:xmime=""http://www.w3.org/2005/05/xmlmime"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsd1=""http://www.xxx.yy/zzz/types/"" name=""zzz.wsdl"" targetNamespace=""http://www.xxx.yy/zzz"">
  <types>
    <schema xmlns=""http://www.w3.org/2001/XMLSchema"" targetNamespace=""http://www.xxx.yy/zzz/types/"">
      <element name=""pdfList"">
        <complexType>
          <sequence>
            <element maxOccurs=""unbounded"" ref=""xsd1:pdf""/>
          </sequence>
        </complexType>
      </element>
      <element name=""pdf"">
        <complexType>
          <sequence>
            <element name=""pdfName"" type=""xsd:string""/>
            <element xmlns:xmime=""http://www.w3.org/2005/05/xmlmime"" name=""pdfPayload"" type=""xsd:base64Binary"" xmime:expectedContentTypes=""application/octet-stream""/>
          </sequence>
        </complexType>
      </element>
      <element name=""xmlFilename"" type=""xsd:string"" />
      <element name=""transactionID"" type=""xsd:string""/>
      <element name=""statusCode"" type=""xsd:string"" />
      <element name=""statusMessage"" type=""xsd:string""/>

      <xsd:element xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""sendData"">
        <xsd:complexType>
          <xsd:sequence>
            <!-- ... -->
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:complexType xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""authenticationHeaderType"">
        <xsd:sequence>
          <!-- ... -->
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""authentication"" nillable=""true"" type=""xsd1:authenticationHeaderType""/>
      
      <xsd:element xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" name=""GeneratePreviewResponse"">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref=""xsd1:statusCode""/>
            <xsd:element ref=""xsd1:statusMessage""/>
            <xsd:element ref=""xsd1:transactionID""/>
            <xsd:element ref=""xsd1:pdfList""/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </schema>
  </types>
  <message name=""generatePreviewResponse"">
    <part name=""statusCode"" element=""xsd1:GeneratePreviewResponse""/>
  </message>
  <message name=""xmlRequest"">
    <part name=""xmlData"" element=""xsd1:sendData""/>
  </message>
  <message name=""request_Headers"">
    <part name=""authentication"" element=""xsd1:authentication""/>
  </message>

  <portType name=""IPortType"">
    <operation name=""generatePreview"">
      <documentation>...</documentation>

      <input name=""xmlRequest"" message=""tns:xmlRequest""/>
      <output name=""pdfResponse"" message=""tns:generatePreviewResponse""/>
    </operation>
    
  </portType>
  <binding name=""ISOAPBinding"" type=""tns:IPortType"">
    <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsp:PolicyReference xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy"" URI=""#wsmtom_policy"" required=""true""/>
    <operation name=""generatePreview"">
      <soap:operation soapAction=""attachment""/>
      <input name=""xmlRequest"">

        <soap:header message=""tns:request_Headers"" part=""authentication"" use=""literal""/>
        <soap:body use=""literal""/>
      </input>
      <output name=""pdfResponse"">
        <soap:body use=""literal""/>
      </output>
    </operation>
  </binding>
  <service name=""iService"">
    <port name=""ISoapBindingPort"" binding=""tns:ISOAPBinding"">
      <soap:address location=""http://xxx/yyy""/>
    </port>
  </service>
  <wsp:Policy xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy"" wsu:Id=""wsmtom_policy"">
    <wsoma:OptimizedMimeSerialization xmlns:wsoma=""http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization""/>
  </wsp:Policy>
</definitions>
{code}

Please note that the response is not valid as far as the schema is concerned (two mandatory elements are missing). However, I expected a validation exception from JAXB for this (validation is turned on in my client).
","01/Apr/11 21:27;dkulp;
While the error message is not ideal, the soap message does not match the schema and thus should fail.  The schema says the soap:Body should have a single child called GeneratePreviewResponse which your message does not.

","02/Apr/11 00:47;dkulp;
Stuck a better error message in there.",,,,,,,,,,,,,,,,,,,,,,,
ManagedEndpoint.getTransportId return endpoint address,CXF-3412,12502145,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,veaven,veaven,23/Mar/11 08:21,18/Apr/11 12:42,14/Mar/19 02:29,24/Mar/11 08:49,2.2,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,"Is it a bug that ManagedEndpoint.getTransportId() just return the endpoint's address. I would expect it return endpoint.getTransportId()

{code}
 ManagedEndpoint{   
    @ManagedAttribute(description = ""TransportId Attribute"", currencyTimeLimit = 60)
    public String getTransportId() {
        return endpoint.getEndpointInfo().getAddress();
    }
    @ManagedAttribute(description = ""Address Attribute"", currencyTimeLimit = 60)
    public String getAddress() {
        return endpoint.getEndpointInfo().getAddress();
    }
 }
{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-23 10:06:06.313,,,no_permission,,,,,,,,,,,,,46818,,,Thu Apr 07 08:21:13 UTC 2011,,,,,,0|i0sxpz:,166940,,,,,,,,"23/Mar/11 10:06;ffang;Yeah, it's a bug, patch is always welcome!

Freeman","24/Mar/11 08:49;ffang;commit fix
http://svn.apache.org/viewvc?rev=1084876&view=rev for trunk
http://svn.apache.org/viewvc?rev=1084877&view=rev for 2.3.x branch","07/Apr/11 08:21;veaven;Thanks Freeman.

David",,,,,,,,,,,,,,,,,,,,,,,,
JMSTransport: swallowed exception by provider send exchange,CXF-3411,12502069,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,ashakirin,ashakirin,22/Mar/11 17:58,18/Apr/11 12:44,14/Mar/19 02:29,23/Mar/11 01:37,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,"JMS transport swallows exception occures on provider side by sending exchange (JMSDestination.java).
Patch is attached.",,,,,,,,,,,,,,,,,22/Mar/11 18:00;ashakirin;JMSDestination.java.patch;https://issues.apache.org/jira/secure/attachment/12474314/JMSDestination.java.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-23 01:37:48.789,,,no_permission,,,,,,,,,,,,,46819,,,Wed Mar 23 01:37:48 UTC 2011,,,,,,0|i0sxq7:,166941,,,,,,,,22/Mar/11 18:00;ashakirin;Patch,"23/Mar/11 01:37;dkulp;
Patch applied.   Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.ws.policy.PolicyAnnotationListener throws NPE on endpoints with wsdlURL only (i.e. no serviceClass),CXF-3410,12501965,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mranest,mranest,21/Mar/11 17:31,18/Apr/11 12:42,14/Mar/19 02:29,05/Apr/11 20:12,2.3.2,2.3.3,,,,,,,,,,,,,,,,2.3.4,2.4,,,WS-* Components,,,,0,,,,,,"Camel context is configured to create a CXF endpoint through use of a WSDL file only (i.e. no implementor). Spring configuration definition is as follows:

{code:xml}
<cxf:cxfEndpoint id=""nireusV5""
		address=""http://10.234.2.81:8080/nireus/v5""
		wsdlURL=""classpath:wsdl/nireus_old.wsdl"">
	<cxf:properties>
		<entry key=""dataFormat"" value=""PAYLOAD"" />
	</cxf:properties>
</cxf:cxfEndpoint>
{code}

Maven dependencies include cxf-rt-ws-policy and cxf-rt-ws-security modules, in an attempt to introduce use of WS-SecurityPolicy in the endpoint. When the camel context is starting up, the following NPE is raised:

{code}
Caused by: java.lang.NullPointerException
        at org.apache.cxf.ws.policy.PolicyAnnotationListener.addPolicies(PolicyAnnotationListener.java:210)
        at org.apache.cxf.ws.policy.PolicyAnnotationListener.handleEvent(PolicyAnnotationListener.java:84)
        at org.apache.cxf.service.factory.AbstractServiceFactoryBean.sendEvent(AbstractServiceFactoryBean.java:73)
        at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:179)
        at org.apache.camel.component.cxf.CxfConsumer.<init>(CxfConsumer.java:251)
{code}

PolicyAnnotationListener.addPolicies(...) method code is trying to get any declared @Policy or @Policies annotations on the class object that is being passed as argument. This object though is null, probably because no implementor object or service class is declared on the endpoint (I'm using just a WSDL).

The problem is solved, and the context is properly started-up, if the method is modified as follows:
{code:java}
    private void addPolicies(AbstractServiceFactoryBean factory, Server server, Class<?> cls) {
        List<Policy> list = CastUtils.cast((List<?>)server.getEndpoint().getEndpointInfo()
                                           .getInterface().removeProperty(EXTRA_POLICIES));
        if (list != null) {
            addPolicies(factory, server.getEndpoint(), cls, list, Policy.Placement.BINDING);
        }
        // --- Start of modification ---
        if (cls == null) {
            return;
        }
        // --- End of modification ---
    ...
{code}

I can provide a sample application to exhibit the problem, if that helps.","Apache Camel context, Maven project",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5916,,,2011-03-21 17:31:54.0,,,,,,0|i0b9jr:,63659,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update documentation for glassfish server support,CXF-3409,12501957,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,davemorris,davemorris,21/Mar/11 15:27,18/Apr/11 12:44,14/Mar/19 02:29,05/Apr/11 20:11,2.3.3,,,,,,,,,,,,,,,,,Invalid,,,,Configuration,,,,0,,,,,,"Need to update http://cxf.apache.org/docs/application-server-specific-configuration-guide.html for Glassfish 2.1.1.

CXF Interceptors will not work in Glassfish without this sun-web.xml file configured for the classloader. There appears to be a conflict with metro. The following sun-web.xml xml source was added to /WEB-INF to resolve this issue:

<?xml version=""1.0"" encoding=""UTF-8""?> 
<!DOCTYPE sun-web-app PUBLIC '-//Sun Microsystems, Inc.//DTD 
Application Server 9.0 Servlet 2.5//EN' 
'http://www.sun.com/software/appserver/dtds/sun-web-app_2_5-0.dtd'> 
<sun-web-app> 
    <class-loader delegate=""false""/> 
</sun-web-app>",Glassfish 2.1.1 server running in Windows XP environment and Java 1.6.0.21,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-05 20:11:14.754,,,no_permission,,,,,,,,,,,,,46820,,,Tue Apr 05 20:11:14 UTC 2011,,,,,,0|i1afq7:,269014,,,,,,,,"05/Apr/11 20:11;dkulp;
Added docs to the page.  Should sync in an hour or so.",,,,,,,,,,,,,,,,,,,,,,,,,,
Custom headers may get lost if CXF interceptors do not use MultivaluedMap,CXF-3408,12501955,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,21/Mar/11 15:13,18/Apr/11 12:42,14/Mar/19 02:29,21/Mar/11 15:20,2.3.3,2.4,,,,,,,,,,,,,,,,2.3.4,2.4,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46821,,,2011-03-21 15:13:06.0,,,,,,0|i145bb:,232324,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure initializing ClassHelper,CXF-3407,12501942,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,21/Mar/11 11:28,18/Apr/11 12:42,14/Mar/19 02:29,21/Mar/11 12:38,,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,org.apache.cxf.common.util.ClassHelper initialization can fail due to errors (namely NCDFE) when spring is not available.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46822,,,2011-03-21 11:28:43.0,,,,,,0|i0sxqf:,166942,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handler scoped properties not restored into the context after application fault,CXF-3406,12501612,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,16/Mar/11 19:01,18/Apr/11 12:42,14/Mar/19 02:29,16/Mar/11 19:34,2.3.3,,,,,,,,,,,,,,,,,2.3.4,,,,JAX-WS Runtime,,,,0,,,,,,"
If a JAX-WS handler sets an property on the context using Handler scope, the JaxWsMethodInvoker properly removes it prior to calling the application method and restores it after a normal return.  However, on a fault, the property is not restored and is thus not available in the handleFault method of the handlers.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46823,,,2011-03-16 19:01:13.0,,,,,,0|i1afqf:,269015,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Encoded semicolons are not correctly handled by the JAX-RS runtime,CXF-3404,12501478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,15/Mar/11 16:07,28/Sep/16 15:04,14/Mar/19 02:29,15/Mar/11 16:31,2.3.3,2.4,,,,,,,,,,,,,,,,2.3.4,2.4,,,,,,,0,,,,,,The runtime gets confused when handling PathParams with %3B - it thinks it is the start of the matrix parameters section,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2016-09-28 13:17:35.39,,,no_permission,,,,,,,,,,,,,46825,,,Wed Sep 28 15:04:15 UTC 2016,,,,,,0|i145bj:,232325,,,,,,,,28/Sep/16 13:17;mirabilos;This still happens with org.apache.cxf:cxf-core 3.1.6 (same version for cxf-rt-frontend-jaxrs etc).,"28/Sep/16 14:19;sergey_beryozkin;Hi, I'm nearly 100% sure that the underlying container decodes it. Can you please add a logging feature and see what is the actual path value ? thanks","28/Sep/16 14:25;mirabilos;True, the actual problem was not with CXF, after tons more debugging I found out that this was needed in the Apache2 configuration:

    JkOptions +ForwardURIEscaped

Sorry for the noise.",28/Sep/16 15:04;sergey_beryozkin;No problems at all,,,,,,,,,,,,,,,,,,,,,,,
ServletController getBaseURL can not handle encoded URIs in some cases,CXF-3403,12501469,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,15/Mar/11 14:56,18/Apr/11 12:42,14/Mar/19 02:29,15/Mar/11 16:02,2.3.3,2.4,,,,,,,,,,,,,,,,2.3.4,2.4,,,Transports,,,,0,,,,,,"ServletController.getBaseURL uses HttpServletRequest.getPathInfo() to determine the base URL.

For example, given 'http://localhost:8080/services/1' and the pathInfo equal to '/1' the base URL is 'http://localhost:8080/services'.

The problem with using the getPathInfo in the substring calculation is that it loses matrix parameters on the last path segment, ex, given 'http://localhost:8080/services/1;a=b' which will be reported by request.getRequestURL, the getPathInfo will report ""/1"" only and thus the base URL will be wrong. To bypass this issue, the initial attempt was to decode request.getRequestURL and strip off the final matrix params if any and only then calculate the base path. This solution breaks with encoded %3B characters - besides it is also slow (decoding costs). 

Another problem with getPathInfo() in that given that it returns the decoded value, the problem arise on some containers with requests URIs containing double encoded '/' symbols.

A simpler and more reliable solution is needed

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46826,,,2011-03-15 14:56:42.0,,,,,,0|i145br:,232326,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
http://util.java in WSDL ,CXF-3402,12501443,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,cesnek,cesnek,15/Mar/11 09:59,18/Apr/11 12:44,14/Mar/19 02:29,15/Mar/11 18:50,2.3.2,,,,,,,,,,,,,,,,,2.4,,,,Aegis Databinding,,,,0,,,,,,"For SEI:
{code}
@WebService
public interface IStringSl {
  void storeStrings(@WebParam(name = ""stringsToStore"") List<DTOtra_string> stringToStore);
}

@XmlType ( name = ""DtoString"")
public class DTOtra_string {
 ....
}
{code}

there is many http://util.java namespaces in WSDL.

Maybe this is bug maybe not? I dont know.
But I expect same wsdl as List<> is replaces with array.
WSDL with array is more clean.

*Fortunately XML on-the-wire is almost same in booth cases.*
And our customers can consume booth without reimporting changed WSDL. 

Xml with array.
{code}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sl=""http://sl.tra.modules.daisy.marbes.cz/"" xmlns:dto=""http://dto.tra.modules.daisy.marbes.cz"">
   <soapenv:Header/>
   <soapenv:Body>
      <sl:storeStrings>
         <stringsToStore>
            <dto:DtoString>
               <dto:Anglicky>?</dto:Anglicky>
               <dto:AnglickyPrelozeno>true</dto:AnglickyPrelozeno>
            </dto:DtoString>
         </stringsToStore>
      </sl:storeStrings>
   </soapenv:Body>
</soapenv:Envelope>
{code}

Xml with List<>.
{code}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sl=""http://sl.tra.modules.daisy.marbes.cz/"" xmlns:util=""http://util.java"" xmlns:dto=""http://dto.tra.modules.daisy.marbes.cz"">
   <soapenv:Header/>
   <soapenv:Body>
      <sl:storeStrings>
         <stringsToStore>
            <util:DtoString>
               <dto:Anglicky>?</dto:Anglicky>
               <dto:AnglickyPrelozeno>true</dto:AnglickyPrelozeno>
            </util:DtoString>
         </stringsToStore>
      </sl:storeStrings>
   </soapenv:Body>
</soapenv:Envelope>
{code}



",,,,,,,,,,,,,,,,,15/Mar/11 10:03;cesnek;IStringSl-List.xml;https://issues.apache.org/jira/secure/attachment/12473659/IStringSl-List.xml,15/Mar/11 10:03;cesnek;IStringSl-array.xml;https://issues.apache.org/jira/secure/attachment/12473660/IStringSl-array.xml,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-03-15 18:50:59.446,,,no_permission,,,,,,,,,,,,,46827,,,Thu Mar 17 16:46:04 UTC 2011,,,,,,0|i145bz:,232327,,,,,,,,"15/Mar/11 13:18;cesnek;Hotfix: add targetNamespace  to all List<> params
{code}
@WebService
public interface IStringSl {
  void storeStrings(@WebParam(name = ""stringsToStore"", targetNamespace = ""http://dto.tra.modules.daisy.marbes.cz"")
  List<DTOtra_string> stringToStore);
}

{code}","15/Mar/11 18:50;dkulp;
This is resolved on trunk now for 2.4.  Aegis was using @WebParam for creating type names which is not what the spec says it should be doing.  WebParam is just for the element names and namespaces.  I've removed that which allows the List<> and array forms to match correctly and exactly.

However, it's not resolvable for 2.3.x as it would break things there.","16/Mar/11 08:38;cesnek;Sad, we definitelly stuck with CXF 2.2.6 for very long time.
Web services is about *compatibility* with partners.
This is real mess.","16/Mar/11 19:42;dkulp;
By fully specifying things in the annotations, you can maintain on the wire and wsdl compatibility.  In particular, if you add an @org.apache.cxf.aegis.type.java5 annotation to the param to let aegis know the  name and namespace of the parameter TYPE (different than the element name), then the wsdl should be same.","17/Mar/11 08:39;cesnek;I have about 100 SEI. Annotate all methods in all services is error-prone and un-justifiable.

What about compatibility flag on Aegis binding
new AegisBinding().setCompatibilty(PRE_2_2_6)

I we will once pushed to use newer version of CXF, we anyway patch AegisBinding instead of rewriting all our SEI.","17/Mar/11 16:46;bmargulies;Dan,

It's never been correct in Aegis to end up with http://util.java, I think. In the past, I've pushed cases like that to use the TNS for the type. Mind you, the whole @XmlType business is a late addition (relatively) to Aegis, and I've never thought about it hard.

Just to make sure I'm following, your view is that changing this in 2.3.x is incompatible with people who are currently living with the http://util.java namespace and would be shocked for it to change on a point-release?


",,,,,,,,,,,,,,,,,,,,,
soap.env.ns.map cannot be set on enpoint,CXF-3401,12501383,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,14/Mar/11 17:52,18/Apr/11 12:42,14/Mar/19 02:29,14/Mar/11 18:30,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Soap Binding,,,,0,,,,,,"
The soap.env.ns.map namespace map is only looked up on the message itself.  It's not  treated as a contextual property. Thus, it cannot be set on a jaxws:endpoint and have it properly picked up.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46828,,,2011-03-14 17:52:04.0,,,,,,0|i145c7:,232328,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring request-scoped beans can not have context and parameter properties injected ,CXF-3400,12501377,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,14/Mar/11 17:00,18/Apr/11 12:42,14/Mar/19 02:29,14/Mar/11 17:35,2.3.3,2.4,,,,,,,,,,,,,,,,2.3.4,2.4,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46829,,,2011-03-14 17:00:13.0,,,,,,0|i145cf:,232329,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX Naming issue - cannot register the mutil endpoints with same service bean,CXF-3398,12501326,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,veaven,veaven,14/Mar/11 09:58,18/Apr/11 12:42,14/Mar/19 02:29,16/Mar/11 03:38,,,,,,,,,,,,,,,,,,2.3.4,,,,Core,Management,,,0,,,,,,"It looks like there is bug in CXF that it cannot register two different Endpoint to JMX if both has a same service bean (although we deploy both endpoint on different url.). Please see my example below, it will throw the exception *javax.management.InstanceAlreadyExistsException*. I think the issue is that cxf is using 

 I have two suggestions:
  * Can we short the JMX namespace and its name for cxf endpoint? It likes okay in visualvm, however, it will become a really long name when we use command-line interface of jmx, e.g. jmxsh.
  * Can CXF allow the user to customize the JMX name space and JMX endpoint name?


{code} 
    public static void main(String[] args) throws Throwable {

        InstrumentationManagerImpl im = new InstrumentationManagerImpl();
        im.setBus(BusFactory.getDefaultBus());
        im.setEnabled(true);
        im.setServer(ManagementFactory.getPlatformMBeanServer());
        im.init();
        im.register();

        HelloWorldImpl helloworldImpl1 = new HelloWorldImpl();
        ServerFactoryBean svrFactory = new ServerFactoryBean();
        svrFactory.setAddress(""http://localhost:9000/Hello"");
        svrFactory.setServiceBean(helloworldImpl1);
        svrFactory.create();

        HelloWorldImpl helloworldImpl2 = new HelloWorldImpl();
        ServerFactoryBean svrFactory2 = new ServerFactoryBean();
        svrFactory2.setAddress(""http://localhost:9000/Hello2"");
        svrFactory2.setServiceBean(helloworldImpl2);
        svrFactory2.create();

        System.out.println(""Server ready..."");

        Thread.sleep(5 * 60 * 1000);
        System.out.println(""Server exiting"");
        System.exit(0);
    }
{code} ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-16 03:38:16.84,,,no_permission,,,,,,,,,,,,,46831,,,Tue Mar 22 03:48:01 UTC 2011,,,,,,0|i0sxqn:,166943,,,,,,,,"16/Mar/11 03:38;dkulp;
Added managed.endpoint.name and managed.service.name properties that can be used to control how the endpoints are displayed as well as allow the user to resolve duplicates.","22/Mar/11 03:48;veaven;Thanks Dan.

David",,,,,,,,,,,,,,,,,,,,,,,,,
ServiceConstructionException: Could not resolve a binding for http://schemas.xmlsoap.org/wsdl/soap/,CXF-3397,12501318,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,aruld,aruld,14/Mar/11 05:26,18/Apr/11 12:42,14/Mar/19 02:29,16/Mar/11 03:31,2.3.3,,,,,,,,,,,,,,,,,2.3.4,,,,Soap Binding,Transports,,,0,,,,,,"I get the following exception when I deploy a JAXWS and JAXRS service using the CXF Jetty transport.

Mar 13, 2011 11:10:17 PM org.apache.cxf.endpoint.ServerImpl initDestination
INFO: Setting the server's publish address to be http://localhost:9090/echo-rest
Mar 13, 2011 11:10:17 PM org.eclipse.jetty.util.log.Slf4jLog info
INFO: jetty-7.2.2.v20101205
Mar 13, 2011 11:10:17 PM org.eclipse.jetty.util.log.Slf4jLog info
INFO: Started SelectChannelConnector@localhost:9090
Mar 13, 2011 11:10:17 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromClass
INFO: Creating Service {http://example.com}EchoServiceService from class org.demo.EchoService
REST Server started @ http://localhost:9090/echo-rest
Exception in thread ""main"" org.apache.cxf.service.factory.ServiceConstructionException: Could not resolve a binding for http://schemas.xmlsoap.org/wsdl/soap/
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createBindingInfo(AbstractWSDLBasedEndpointFactory.java:349)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.createBindingInfo(JaxWsServerFactoryBean.java:166)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpointInfo(AbstractWSDLBasedEndpointFactory.java:251)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:147)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:148)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:183)
	at org.demo.Main.main(Main.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)
Caused by: org.apache.cxf.BusException: No binding factory for namespace http://schemas.xmlsoap.org/wsdl/soap/ registered.
	at org.apache.cxf.binding.BindingFactoryManagerImpl.getBindingFactory(BindingFactoryManagerImpl.java:120)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createBindingInfo(AbstractWSDLBasedEndpointFactory.java:337)
	... 11 more



This exception goes away, when I do not exclude spring-web in the maven dependency:

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
      <version>2.3.3</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

I believe Spring is not a requirement for this Jetty transport module. Could someone clarify this behavior? I am attaching a sample maven project that reproduces this problem. I have checked JIRA and CXF-2284 sounds very similar to this, not sure if I can comment on a closed JIRA, so opened a new one.",Windows 7/JDK 1.6 Update 24,,,,,,,,,,,,,,,,14/Mar/11 05:28;aruld;cxf-soap-rest.zip;https://issues.apache.org/jira/secure/attachment/12473536/cxf-soap-rest.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-14 09:06:49.081,,,no_permission,,,,,,,,,,,,,46832,,,Wed Mar 16 03:31:59 UTC 2011,,,,,,0|i1afr3:,269018,,,,,,,,"14/Mar/11 09:06;njiang;CXF will try to use SpringBusFactory when there is ""org.springframework.context.ApplicationContext"" class in the class path.
When you keep the ""spring-web"" dependency in the pom.xml, mvn will add the dependency of spring context into the class path, and SpringBusFactory will be used.
If you exclude the dependency of ""spring-web"" CXF will use CxfBusFactory to load the components, there maybe something wrong with that part. 
I will keep digging to see why the CXFBusFactory cannot load the SoapBindingFactory rightly.

Willem","14/Mar/11 14:27;njiang;I just found out the issue is related the JAXRSServerFactoryBean's checkBindingFactory() call, and cxf-extension.xml in the cxf-rt-front-jaxws is not good. I will commit a quick fix for it shortly.

If you want to workaround this issue, you can consider to start soap endpoint first then the JAXRS endpoint.",14/Mar/11 16:01;aruld;Thanks Willem for the quick update. Your workaround certainly fixes this problem. Thanks!,16/Mar/11 03:31;njiang;Committed a patch into 2.3.x branch.,,,,,,,,,,,,,,,,,,,,,,,
InstrumentationManager not registering correctly in the standalone mode (i.e. when not using the framework's server),CXF-3396,12501304,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ay,ay,13/Mar/11 20:47,18/Apr/11 12:42,14/Mar/19 02:29,14/Mar/11 16:32,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Management,,,,0,,,,,,"This problem only affects the standalone setup (i.e., not using the framework's server).

In short, the init method of org.apache.cxf.management.jmx.InstrumentationManagerImpl class has the problem when it is running in the standalone mode. This problem causes each instance of this InstrumentationManagerImpl to instantiate a new MBeanServer because the lookup into MBeanServerFactory.findMBeanServer is done by using the wrong argument. This problem also causes only one CXF bus bean to be shown at the JXM console even if there are more bus beans registered.

The problem is described in the mail thread
http://cxf.547215.n5.nabble.com/RE-Odd-behavior-in-CXF-s-JMX-IntrumentationManagerImpl-td3425598.html

Regards, Aki",,7200,7200,,0%,7200,7200,,,,,,,,,,13/Mar/11 20:50;ay;patch20110311.zip;https://issues.apache.org/jira/secure/attachment/12473516/patch20110311.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-03-14 16:32:56.54,,,no_permission,,Moderate,,,,,,,,,,,46833,,,Mon Mar 14 16:32:56 UTC 2011,,,,,,0|i145cn:,232330,,,,,,,,"13/Mar/11 20:50;ay;patch20110311.txt
 - svn diff 2.3.x-fixed/rt/management
    for the patch and test files","14/Mar/11 16:32;dkulp;
Patch applied.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,
cxf transfer hashmap can't be chinese word,CXF-3395,12501295,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,,linuxaid,linuxaid,13/Mar/11 11:18,18/Apr/11 12:42,14/Mar/19 02:29,02/Apr/11 00:53,2.3.3,,,,,,,,,,,,,,,,,2.3.4,,,,JAX-WS Runtime,,,,0,,,,,,"hi cxf team:
   i use cxf2.3.3 in my project,and i tansfer the hashmap through cxf client to server(i use the example of apache-cxf-2.3.2,the java_first_jaxws project in official promulgate package) .firstly it run normally,but when i put some chinese word(not englist word) to hashmap
   i modify the HelloWorldImpl.java(the official example project file,java_first_jaxws is the project name) function just like this:
    HelloWorldImpl.java
    public Map<Integer, User> getUsers() {
    	Map<Integer, User> usersForMap = new LinkedHashMap<Integer, User>();
    	//汉字bug 中文 bug
    	usersForMap.put(1,  new UserImpl(""yhb汉字bug""));  //-->when total english word,it run ok,when some chinese word here the cxf tell error to me. 
    	usersForMap.put(2,  new UserImpl(""wybl""));
        System.out.println(""getUsers called"");
        return usersForMap;
    }
   
   it' seem the marshal and unmarshal crash and tell fllow error(englisth word in hashmap seem runs ok):
org.apache.cxf.interceptor.Fault: Marshalling Error: null
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshalWithBridge(JAXBEncoderDecoder.java:327)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:124)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:251)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:127)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2335)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2193)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2037)
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:697)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy61.getMapByCXFDocument(Unknown Source)
	at com.webservice.cxf.CxfSoapAction.runWebService(CxfSoapAction.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:592)
	at org.directwebremoting.impl.DefaultRemoter$1.doFilter(DefaultRemoter.java:740)
	at org.directwebremoting.impl.DefaultRemoter.execute(DefaultRemoter.java:744)
	at org.directwebremoting.impl.DefaultRemoter.execute(DefaultRemoter.java:593)
	at org.directwebremoting.dwrp.BaseCallHandler.handle(BaseCallHandler.java:90)
	at org.directwebremoting.servlet.UrlProcessor.handle(UrlProcessor.java:120)
	at org.directwebremoting.servlet.DwrServlet.doPost(DwrServlet.java:141)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.reflect.UndeclaredThrowableException
	at $Proxy74.unmarshal(Unknown Source)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshalWithBridge(JAXBEncoderDecoder.java:312)
	... 49 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:592)
	at org.apache.cxf.common.util.ReflectionInvokationHandler.invoke(ReflectionInvokationHandler.java:52)
	... 51 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[javax.xml.stream.XMLStreamException: Invalid byte 1 of 1-byte UTF-8 sequence.]
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:426)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:362)
	at com.sun.xml.bind.v2.runtime.BridgeImpl.unmarshal(BridgeImpl.java:120)
	at com.sun.xml.bind.v2.runtime.BridgeAdapter.unmarshal(BridgeAdapter.java:124)
	at com.sun.xml.bind.api.Bridge.unmarshal(Bridge.java:233)
	... 56 more
Caused by: javax.xml.stream.XMLStreamException: Invalid byte 1 of 1-byte UTF-8 sequence.
	at com.sun.xml.stream.XMLReaderImpl.next(XMLReaderImpl.java:560)
	at org.apache.cxf.staxutils.DepthXMLStreamReader.next(DepthXMLStreamReader.java:220)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:192)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
	... 59 more

i think this is a terrible bug in transfer hashmap,and i don't know how to resolve this.can you fix the bug or tell me some solution,my email:wqbz@foxmail.com
thank you very much",spring 3.0+dwr3.0+jdk5+tomcat6,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-13 13:24:41.331,,,no_permission,,,,,,,,,,,,,46834,,,Sat Apr 02 00:53:43 UTC 2011,,,,,,0|i0uzmn:,178913,,,,,,,,13/Mar/11 13:24;gmazza;I'm not sure this is a CXF bug.  Escaping the characters should fix your problem (http://www.pinyin.info/tools/converter/chars2uninumbers.html) but I don't know enough if this is otherwise a CXF or a Java configuration issue.  You might also be able to get help on the Chinese CXF users list (http://groups.google.com/group/cxf-zh).  Some CJK developers actually try to avoid multibyte characters in their code for other reasons: http://java.net/jira/browse/JAXB-783.,13/Mar/11 15:29;bmargulies;I send arbitrary text (including Chinese) though CXF+JAXB all the time. You'll have to give us repeatable test case to diagnose your particular issue.,"13/Mar/11 15:30;bmargulies;Glen, *no he does not need to escape anything*. StaX will escape as needed, unless something very funny is going on.
","14/Mar/11 02:27;linuxaid;hi Benson,i only use the official promulgate package cxf 2.3.3,the path is apache-cxf-2.3.3\samples\java_first_jaxws,i only add some Chinese word to the server implement to transfer hashmap,then it tell me error.when i use english word ,the error disappear.i transfer arraylist or other object,it runs ok.
how can i provide my total code?","14/Mar/11 02:58;njiang;What's your System System.Lang setting is ?
I just test the sample with some Chinese character in Mac OSX, everything looks find.

Here are the settings
{code}
JAVA_HOME=/Library/Java/JavaVirtualMachines/1.6.0_22-b04-307.jdk/Contents/home
JAVA_VERSION=1.6.0
LANG=en_US.UTF-8
{code}","14/Mar/11 03:03;njiang;kakashi,

Please use cxf user mailing list users@cxf.apache.org to start a discussion before filling a JIRA.
We don't want to bring the CXF JIRA into a support question lists, as most our JIRAs should be linked back to a code commit.
Please use the mailing list first and fill a JIRA if we feel it necessary.  

Willem
","14/Mar/11 09:34;linuxaid;thank you very much.
i found the error.when i add -Dfile.encoding=UTF-8 to jvm,the error disappear.but when i transfer arraylist,the code still run ok without -Dfile.encoding=UTF-8.when i transfer hashmap the code tell error without -Dfile.encoding=UTF-8? the default file.encoding in my machine is GBK.
the case should be add to document.
i think cfx should run in this case(just like transfer arraylist),it can tell garbled message,but not tell me some exception.
thanks again

kakashi","14/Mar/11 11:18;gmazza;Benson:  Glen, no he does not need to escape anything. StaX will escape as needed, unless something very funny is going on.

As I understood the developer's question per his example, he wanted to directly insert Chinese characters within his Java code, and CXF wasn't working under those circumstances.  The handful of times I had seen Asian character sets within Java code (or within messages properties files), the characters were escaped as I had shown, and I suggested that that might be a solution for him.

To me, StAX/DOM/SAX is only an issue once we are sure the Java runtime has happily accepted the hardcoded Chinese characters in the string constant--it did not appear to me that the user was at that level at the time of posting his question.","14/Mar/11 12:09;bmargulies;I think I see the disconnect.

kakashi, are you compiling your Java code with a charset of UTF-8?

The escapes Glen is talking about are source code escapes, like ""\u4e00"". I thought he meant XML escapes.

The fact that file.encoding had an effect means, probably, that the sample code that you are using has a use of the default string/byte conversion. I would consider that a bug in a small way, I'll go have a look.
","14/Mar/11 12:13;bmargulies;Since we have a jira at this point, please make a tar of your modified version of the sample and attach it. I'd like to see precisely what you did.
","14/Mar/11 16:48;dkulp;
I think the issue may be with the maven pom.xml or the common_build.xml for the samples.  We don't set the encoding for the samples and thus they always use the platform encoding which is probably not what we want.   I just commited a change that sets the encoding to utf-8 when compiling the samples and that alone may fix it as I think the compiler may error when it encounters non-utf8 characters.   

Can you try adding:  
{code}
<properties>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
</properties>
{code}
to the maven pom if using maven and rebuilding (mvn clean install) to see if that helps?

If using ant, change the common_build.xml to update the javac call to include  encoding=""utf-8"".





","15/Mar/11 09:21;linuxaid;i found another issue about wsdl2java(also about transfer hashmap with cxf),but i don't know the issue belong to witch component in create issue.","02/Apr/11 00:53;dkulp;
I'm going to close this as it seems to be a compiler encoding issue with compiling the code, not really CXF.   I did update the examples to make sure they all are compiled as UTF-8 instead of platform encoding.",,,,,,,,,,,,,,
Field value from previous request is recycled when field is absent in new request,CXF-3390,12500964,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,bnoordhuis,bnoordhuis,10/Mar/11 00:01,18/Apr/11 12:50,14/Mar/19 02:29,10/Mar/11 17:40,2.4,,,,,,,,,,,,,,,,,2.4,,,,JAX-RS,,,,0,,,,,,"This was tested against 2.3.1 and HEAD.

Consider this class:
{code}
@Path(""/test"")
public class Test {
  @QueryParam(""q"") private String q;

  @GET
  public void test() {
    System.err.println(q);
  }
}
{code}
Now consider this test case:
{noformat}
$ curl http://localhost:8080/test       # prints ""null""
$ curl http://localhost:8080/test?q=foo # prints ""foo""
$ curl http://localhost:8080/test       # prints ""foo"" !
{noformat}
This is a serious bug because it leaks information. It's not specific to @QueryParam, the other annotations have the same problem.

I discovered it in a resource that is used for authentication: after logging in once, I could log in again without providing a username and password!",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-10 09:37:47.237,,,no_permission,,,,,,,,,,,,,46837,,,Thu Mar 10 17:29:14 UTC 2011,,,,,,0|i0uzpr:,178927,,,,,,,,"10/Mar/11 00:13;bnoordhuis;This bug is caused by the null checks in JAXRSUtils.handleSetters().

Color diff and raw patch:

https://github.com/bnoordhuis/cxf/compare/CXF-3390
https://github.com/bnoordhuis/cxf/compare/CXF-3390.patch

Tests and style checks pass.","10/Mar/11 09:37;sergey_beryozkin;Hi Ben

I think this issue is invalid.
Injecting request parameters (as opposed to contexts) is thread-unsafe. Thus this approach only works for per-request resource classes where one can be sure the fields will be properly initialized.

I think you can just replace use

@Context UriInfo ui;

instead and have ui.getQueryParameters().getFirst(""p"") and it will work well. Alternatively pass the QueryParam in the method signature ","10/Mar/11 14:29;bnoordhuis;Thanks for the quick reply, Sergey.

I wouldn't expect this to work properly with true singletons but this issue also manifests itself when the resource is thread-local scoped (through a Spring AOP proxy, couldn't get CXF to wire up request-scoped beans). The resource is thread-safe, CXF can inject to its heart's desire.

> Injecting request parameters (as opposed to contexts) is thread-unsafe.

Agreed. Is there a reason why the runtime allows this? Shouldn't it complain loudly?","10/Mar/11 16:41;sergey_beryozkin;Sure - the patch makes more sense to me now, please see

http://svn.apache.org/viewvc?rev=1080267&view=rev

I'm also adding a fine/trace level logging. That is not too loud :-) but at least it can provide the hint...

By the way, re request-scoped beans, please see:

http://cxf.apache.org/docs/jaxrs-services-configuration.html#JAXRSServicesConfiguration-FromSpring

thanks","10/Mar/11 17:15;bnoordhuis;Thanks, Sergey!

I actually started out with prototype-scoped beans. When that didn't work I assumed I was doing something wrong and switched first to request and then thread-local scoped beans.

This is something for another issue, but field values in request-scoped (CGLIB AOP-proxied) beans are always null. Injection apparently fails but I'm not quite sure why. If I have an hour to kill, I'll try to track down the cause.

Anyway, consider this issue resolved. :-) Thanks again!","10/Mar/11 17:29;sergey_beryozkin;for the injection in CGLIB proxies to work well you might to try injecting via methods, you may want to try introducing a dedicated interface with those setters and the injection should work. Otherwise with Spring mixing all sort of proxies, the field injection probably won't work ",,,,,,,,,,,,,,,,,,,,,
byte[] mtom attachments unmarshal error,CXF-3383,12500788,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,prasad.deshpande,prasad.deshpande,08/Mar/11 17:46,18/Apr/11 12:42,14/Mar/19 02:29,15/Mar/11 02:47,2.2.6,,,,,,,,,,,,,,,,,2.3.4,2.4,,,,,,,0,,,,,,"Hi,

I'm having a class with following attributes
{code}
public class Profile{

    private String appName;
    private String userName;
    private HashMap<String, byte[]> keyData = new HashMap<String, byte[]>();

    @XmlJavaTypeAdapter(HashMapAdapter.class)
    public HashMap<String, byte[]> getKeyData() {
        return keyData;
    }

// other methods.......
}
{code}
I've defined adapter for hashmap as

{code}
public final class HashMapAdapter extends XmlAdapter<HashMapType, HashMap<String, byte[]>> {

	public HashMapType marshal(HashMap<String, byte[]> arg0) throws Exception {
		HashMapType myHashMapType = new HashMapType();
		if(arg0 != null && arg0.size() > 0){
			for(Entry<String, byte[]> entry : arg0.entrySet()) {
				if(entry != null){
					HashMapEntryType myHashEntryType = new HashMapEntryType();
					myHashEntryType.key = entry.getKey();
					myHashEntryType.value = entry.getValue();
					myHashMapType.entry.add(myHashEntryType);
				}
			}
		}
		return myHashMapType;
	}

	public HashMap<String, byte[]> unmarshal(HashMapType arg0) throws Exception {
		HashMap<String, byte[]> hashMap = new HashMap<String, byte[]>();
		if(arg0 != null && arg0.entry != null){
			for(HashMapEntryType myHashEntryType : arg0.entry) {
				if(myHashEntryType.key != null){
					hashMap.put(myHashEntryType.key, myHashEntryType.value);
				}
			}
		}
		return hashMap;
	}
}

class HashMapEntryType {
    @XmlAttribute
    public String key; 

    @XmlValue
    public byte[] value;
}

class HashMapType {
	public List<HashMapEntryType> entry = new ArrayList<HashMapEntryType>();
}
{code}
I've mtom-enabled set to true. When I access Profile class on the client side, I get exception as:

{code}
08-Mar-2011 17:46:01 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://wsapi.api.client.caseware.banctec.com/}WSAPIServiceService#{http://wsapi.api.client.caseware.banctec.com/}getUserProfile has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Unmarshalling Error: null 
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:791)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:632)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:133)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:251)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:127)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2335)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2193)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2037)
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:697)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy41.getUserProfile(Unknown Source)
	at com.banctec.caseware.client.api.wsapi.WSAPIServiceTest.testGetUserProfile(WSAPIServiceTest.java:739)
	at com.banctec.caseware.client.api.wsapi.WSAPIServiceTest.main(WSAPIServiceTest.java:800)
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]]
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:425)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:362)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:768)
	... 23 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:642)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:671)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:667)
	at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.handleParseConversionException(Loader.java:267)
	at com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader.text(ValuePropertyLoader.java:73)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader.text(StructureLoader.java:267)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.text(UnmarshallingContext.java:494)
	at com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator.startElement(MTOMDecorator.java:103)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:242)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:176)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
	... 25 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
	... 36 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.attachment.LazyDataSource.getInputStream(LazyDataSource.java:67)
	at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.get(Base64Data.java:188)
	at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.getExact(Base64Data.java:154)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.decodeBase64(RuntimeBuiltinLeafInfoImpl.java:827)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.access$100(RuntimeBuiltinLeafInfoImpl.java:111)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$15.parse(RuntimeBuiltinLeafInfoImpl.java:652)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$15.parse(RuntimeBuiltinLeafInfoImpl.java:655)
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.parse(TransducedAccessor.java:241)
	at com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader.text(ValuePropertyLoader.java:63)
	... 31 more
Exception in thread ""main"" javax.xml.ws.soap.SOAPFaultException: Unmarshalling Error: null 
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:146)
	at $Proxy41.getUserProfile(Unknown Source)
	at com.banctec.caseware.client.api.wsapi.WSAPIServiceTest.testGetUserProfile(WSAPIServiceTest.java:739)
	at com.banctec.caseware.client.api.wsapi.WSAPIServiceTest.main(WSAPIServiceTest.java:800)
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]]
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:425)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:362)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:768)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:632)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:133)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:251)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:127)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2335)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2193)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2037)
	at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:697)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	... 3 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:642)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:671)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleError(UnmarshallingContext.java:667)
	at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.handleParseConversionException(Loader.java:267)
	at com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader.text(ValuePropertyLoader.java:73)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader.text(StructureLoader.java:267)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.text(UnmarshallingContext.java:494)
	at com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator.startElement(MTOMDecorator.java:103)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:242)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:176)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
	... 25 more
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[java.lang.NullPointerException]
	... 36 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.attachment.LazyDataSource.getInputStream(LazyDataSource.java:67)
	at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.get(Base64Data.java:188)
	at com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data.getExact(Base64Data.java:154)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.decodeBase64(RuntimeBuiltinLeafInfoImpl.java:827)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.access$100(RuntimeBuiltinLeafInfoImpl.java:111)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$15.parse(RuntimeBuiltinLeafInfoImpl.java:652)
	at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$15.parse(RuntimeBuiltinLeafInfoImpl.java:655)
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.parse(TransducedAccessor.java:241)
	at com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader.text(ValuePropertyLoader.java:63)
	... 31 more

{code}

I've also tried on cxf-2.3.3 it's same.. could anyone please tell me what's going wrong?

here is in/out bound soap message log.

08-Mar-2011 17:46:00 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Outbound Message
---------------------------
ID: 2
Address: http://localhost:8080/webservice/services/WSAPI
Encoding: UTF-8
Content-Type: multipart/related; type=""application/xop+xml""; boundary=""uuid:2c1e62c5-f595-466e-a0f8-1f753af20bfc""; start=""<root.message@cxf.apache.org>""; start-info=""text/xml""
Headers: {SOAPAction=[""""], Accept=[*/*]}
Payload: 
--uuid:2c1e62c5-f595-466e-a0f8-1f753af20bfc
Content-Type: application/xop+xml; charset=UTF-8; type=""text/xml"";
Content-Transfer-Encoding: binary
Content-ID: <root.message@cxf.apache.org>

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><ns1:getUserProfile xmlns:ns1=""http://wsapi.api.client.caseware.banctec.com/""><arg0><appName>efpViewer</appName><keyData/><userName>efpadmin</userName></arg0></ns1:getUserProfile></soap:Body></soap:Envelope>
--uuid:2c1e62c5-f595-466e-a0f8-1f753af20bfc--
--------------------------------------
08-Mar-2011 17:46:01 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Inbound Message
----------------------------
ID: 2
Response-Code: 200
Encoding: ISO-8859-1
Content-Type: multipart/related; type=""application/xop+xml""; boundary=""uuid:c5104836-41db-45a5-9444-0c1f69df1876""; start=""<root.message@cxf.apache.org>""; start-info=""text/xml""
Headers: {content-type=[multipart/related; type=""application/xop+xml""; boundary=""uuid:c5104836-41db-45a5-9444-0c1f69df1876""; start=""<root.message@cxf.apache.org>""; start-info=""text/xml""], Date=[Tue, 08 Mar 2011 17:46:00 GMT], transfer-encoding=[chunked], X-Powered-By=[Servlet 2.5; JBoss-5.0/JBossWeb-2.1], Server=[Apache-Coyote/1.1]}
Payload: 
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/xop+xml; charset=UTF-8; type=""text/xml"";
Content-Transfer-Encoding: binary
Content-ID: <root.message@cxf.apache.org>

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Body><ns1:getUserProfileResponse xmlns:ns1=""http://wsapi.api.client.caseware.banctec.com/""><return><appName>efpViewer</appName><keyData><entry key=""rootTreeObjectMasterSlave""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-1@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""rootTreeObjectDividerPosition""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-2@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""insetsRightUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-3@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""insetsLeftUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-4@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""annotationToolbarLayoutPosition""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-5@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""rootTreeObjectOnePageOnly""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-6@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""rootTreeObjectVerticalSplit""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-7@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""printHeaderPage""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-8@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""rootTreeObjectVerticalSplitCasePanelPosition""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-9@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""windowHeightUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-10@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""insetsTopUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-11@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""windowXPositionUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-12@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""insetsBottomUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-13@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""printEmptyPages""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-14@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""hideannotations""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-15@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""rootTreeObjectHorizontalSplitCasePanelPosition""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-16@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""showCasePanel""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-17@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""windowYPositionUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-18@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""imageToolbarLayoutPosition""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-19@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""windowWidthUserProfileKey""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-20@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""rootTreeObjectLeftDividerPosition""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-21@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""imageToolbarLayoutDirection""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-22@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""annotationToolbarLayoutDirection""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-23@http%3A%2F%2Fcxf.apache.org%2F""/></entry><entry key=""printWatermarks""><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:7e6c08e7-7db0-486a-81a9-38c9558a2807-24@http%3A%2F%2Fcxf.apache.org%2F""/></entry></keyData><userName>efpadmin</userName></return></ns1:getUserProfileResponse></soap:Body></soap:Envelope>
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-1@http://cxf.apache.org/>

false
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-2@http://cxf.apache.org/>

250
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-3@http://cxf.apache.org/>

0
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-4@http://cxf.apache.org/>

4
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-5@http://cxf.apache.org/>

1
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-6@http://cxf.apache.org/>

true
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-7@http://cxf.apache.org/>

false
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-8@http://cxf.apache.org/>

true
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-9@http://cxf.apache.org/>

350
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-10@http://cxf.apache.org/>

600.0
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-11@http://cxf.apache.org/>

44
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-12@http://cxf.apache.org/>

4.0
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-13@http://cxf.apache.org/>

0
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-14@http://cxf.apache.org/>

true
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-15@http://cxf.apache.org/>

false
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-16@http://cxf.apache.org/>

153
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-17@http://cxf.apache.org/>

true
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-18@http://cxf.apache.org/>

50.0
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-19@http://cxf.apache.org/>

0
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-20@http://cxf.apache.org/>

800.0
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-21@http://cxf.apache.org/>

288
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-22@http://cxf.apache.org/>

1
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-23@http://cxf.apache.org/>

1
--uuid:c5104836-41db-45a5-9444-0c1f69df1876
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-ID: <7e6c08e7-7db0-486a-81a9-38c9558a2807-24@http://cxf.apache.org/>

true
--uuid:c5104836-41db-45a5-9444-0c1f69df1876--
--------------------------------------
","jboss 5.1.0, windows xp, jdk 1.6_22",,,,,,,,,,,,,,,,15/Mar/11 12:07;prasad.deshpande;Profile.java;https://issues.apache.org/jira/secure/attachment/12473665/Profile.java,15/Mar/11 12:07;prasad.deshpande;ProfileHashMapAdapter.java;https://issues.apache.org/jira/secure/attachment/12473664/ProfileHashMapAdapter.java,15/Mar/11 12:07;prasad.deshpande;WSTestService.java;https://issues.apache.org/jira/secure/attachment/12473667/WSTestService.java,15/Mar/11 12:07;prasad.deshpande;WSTestServiceImpl.java;https://issues.apache.org/jira/secure/attachment/12473666/WSTestServiceImpl.java,,,,4.0,,,,,,,,,,,,,,,,,,,,2011-03-08 18:30:09.069,,,no_permission,,,,,,,,,,,,,14949,,,Tue Mar 15 17:07:22 UTC 2011,,,,,,0|i13zr3:,231422,,,,,,,,"08/Mar/11 18:30;dkulp;
Any chance you could try with a  newer version of CXF?   This may already be fixed with 2.3.3 as I know a bunch of fixes have been done to the attachment things since 2.2.6.

","09/Mar/11 09:43;prasad.deshpande;Hi Dan,

I've already checked it with 2.3.3 release before submitting this post. Nothing different, it's the same error. Would you be able to point out something here?",11/Mar/11 00:58;dkulp;Any chance you could package up your testcase into an easy to run and reproduce example?  That would be a big help.,"15/Mar/11 12:11;prasad.deshpande;Hi Diniel,

Sorry I was away for sometime, so couldn't provide a testcase. I saw your update this morning. Is latest version (2.4/2.3.4) available to download from somewhere or just in svn?

I've created sample classes for this test case, I'm attaching them with this.  When I ran this test case, I could not get control back in the client program, however logs didn't show any error. Unfortunately I can not attach real source-code, this is the closest I can get you. Please let me know if you need anything else. or how can I download latest fix.","15/Mar/11 13:28;dkulp;
The snapshots of 2.3.x and 2.4.x both were deployed sucessfully last night.

http://repository.apache.org/snapshots/org/apache/cxf/apache-cxf/2.2.13-SNAPSHOT/
 
If you could test the fix with your ""real world"" use case, that would be great.   The testcase I added to CXF pretty much mimics your testcase as best I could.  I was able to reproduce the NPE and fixed that issue.  Definitely a complex issue to diagnose and debug.   Thanks for reporting it.","15/Mar/11 17:07;prasad.deshpande;Hi Daniel,

I tested 2.3.4-snapshot with my application and it seems working. Thank you for the fix. BTW, do you know any probable dates for 2.3.4 release?

Thank you,
Prasad",,,,,,,,,,,,,,,,,,,,,
CXF-2841 resurfaced in 2.3.x,CXF-3381,12500621,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ay,ay,07/Mar/11 13:06,18/Apr/11 12:42,14/Mar/19 02:29,08/Mar/11 20:40,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,"Hi,
This problem resurfaced, so I am providing a unit test to check this condition and also a patch.

There was this issue of the RMClient getting an exception when some transmission error occurs even after the message has been successfully queued in the retransmission queue and will be retransmitted in a later retransmission.

I reported this issue with CXF-2841 and it was fixed with revision 956089 in 2.2.x-fixed by modifying RetransmissionInterceptor and this fix was included in 2.2.10.

Unfortunately, a change applied in PhaseInterceptorChain with revision 1004780 in 2.2.x-fixed seems to have broken this correction and the original problem is happening again from 2.2.11 and also in 2.3s.

So, in order to check and detect this issue, I wrote a unit test. When this test is executed against 2.2.10, it succeeds but it fails against the later releases at the moment. The change that I am suggesting for PhaseInterceptorChain will fix the problem for 2.3.x so that this test will succeed after this change is applied.

To verify everything is fine and I am not introducing any incompatibility, I executed the entire systests tests. 

I am attaching a svn diff file for the change (and the test class) for 2.3.x-fixed.

Could you check if it is okay?

Regards, Aki
",,14400,14400,,0%,14400,14400,,,,,,,,,,07/Mar/11 13:56;ay;patch20110307.txt.gz;https://issues.apache.org/jira/secure/attachment/12472817/patch20110307.txt.gz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,46845,,,Mon Mar 07 13:56:09 UTC 2011,,,,,,0|i0sxqv:,166944,,,,,,,,07/Mar/11 13:56;ay;svn diff for the patch and the new unit test.,,,,,,,,,,,,,,,,,,,,,,,,,,
@Context fails to inject Application instance,CXF-3379,12500475,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,bnoordhuis,bnoordhuis,04/Mar/11 21:28,18/Apr/11 12:42,14/Mar/19 02:29,16/Mar/11 17:24,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,JAX-RS,,,,0,,,,,,"Quoting JSR 311:

""The instance of the application-supplied Application subclass can be injected into a class field or method parameter using the @Context annotation. Access to the Application subclass instance allows configuration information to be centralized in that class. Note that this cannot be injected into the Application subclass itself since this would create a circular dependency.""

JAXRSUtils.createContextValue() doesn't handle this. This bug exists in 2.3.x and HEAD.

I'd submit a patch but I don't know where (or if) the Application class is registered after it's instantiated by CXFNonSpringJaxrsServlet.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-07 13:29:00.432,,,no_permission,,,,,,,,,,,,,46847,,,Fri Mar 25 21:55:36 UTC 2011,,,,,,0|i145dj:,232334,,,,,,,,"07/Mar/11 13:29;sergey_beryozkin;thanks for opening this JIRA.

CXFNonSpringJaxrsServlet.createServerFromApplication returns Server, so Application instance may be saved as the server.getEndpoint() property. Endpoint can later be retrieved from the current message:
m.getExchange().get(Endpoint.class) and then the property pointing to the Application instance can be checked.

However, I don't understand why would a root resource or provider class want to have Application instance injected ? Can you explain please what you'd use it for ?

thanks, Sergey
","07/Mar/11 16:58;bnoordhuis;Sergey, would this be an acceptable approach? Tests and style checks pass. Color diff and raw patch:

https://github.com/bnoordhuis/cxf/compare/trunk...CXF-3379
https://github.com/bnoordhuis/cxf/compare/trunk...CXF-3379.patch

I'll write some unit tests if you give the green light.

> However, I don't understand why would a root resource or provider class want to have Application instance injected ? Can you explain please what you'd use it for ?

For that configuration information the JSR talks about or as the source of service objects in a plain servlet web app (think MyApplication.getWidgetDao() and such). It's a good place for it, right?","07/Mar/11 17:36;sergey_beryozkin;Hi Ben

Please stay with with me for a moment while I'm trying to grasp this idea.
I can see why an Application can be injected in a plain servlet web app for the latter to dynamically get the service objects. So that makes sense.

Actually, MyApplication.getWidgetDao() kind of start making sense too. So we have a root resource and it delegates to that widgetDao... Definitely the non-Spring option :-) but I can see the picture a bit better, thanks.

So yes, the patch looks fine so far, you might want to drop contextMessage.getExchange() it can only be null if message.seyExchange(new ExchangeImpl()) was not done in the test, never null in the real case...Same for the endpoint representation, even on the client side. 

The only missing bit is the related ThreadLocal implementation, to be located in impl.tl subpackage and it will need to be initialized in the InjectionUtils, which is where the thread-safe proxy is initially injected. 

May be the time has come to remove most of those explicit thread local implementations and use generic proxies instead. I'd probably leave ThreadLocalMessageContext only, so that we can avoid NPEs in the JAX-WS/JAX-RS case. Please feel free to open a related JIRA, but probably we will keep explicit TL implementations in 2.4.0 and work on it later on...

thanks   

","07/Mar/11 20:57;bnoordhuis;Sergey, can you mentor me a little?

> you might want to drop contextMessage.getExchange() it can only be null if message.seyExchange(new ExchangeImpl()) was not done in the test, never null in the real case

At the top of JAXRSUtils.createContextValue() this check is done:
{code}
Message contextMessage = m.getExchange() != null ? m.getExchange().getInMessage() : m;
if (contextMessage == null && Boolean.FALSE.equals(m.get(Message.INBOUND_MESSAGE))) {
    contextMessage = m;
}
{code}
So conceivably it could be true that contextMessage == m and m.getExchange() == null, right?

> The only missing bit is the related ThreadLocal implementation

The Application object is a singleton, its thread safety the responsibility of the developer - like servlets, really. How and why does a ThreadLocalProxy enter the mix? (There probably is a splendid reason, I just haven't caught on yet.)","08/Mar/11 11:32;sergey_beryozkin;Hi Ben

m.getExchange() != null

is most likely (99%) a lame attempt to avoid initializing Messages in tests. It is most likely a dead code.
I can see now few tests failing with NPEs without this check because I just pass new MessageImpl().
But I'd keep it anyway, just to feel safer :-) - so yes, please keep the null guard in your patch too, sorry...

About Applications and singletons.

Do we have the proper visibility guarantee if we have a singleton root resource class injected the same Application reference on every request across multiple threads ? Is field injection an atomic operation at the low level ? So say the thread1 injects the Application reference and then just before it attempts to read this field from the application code another thread2 assigns the same reference to that field. Is there a chance the thread1 will see a corrupted reference or null, not sure - need to review the basics... 

Not an issue for per-request resource classes though...
","10/Mar/11 18:57;sergey_beryozkin;Ben - can you please add ThreadLocalApplication to the patch and update the relevant InjectionUtils code ? I'll add a system test myself

cheers, Sergey","12/Mar/11 00:16;bnoordhuis;Sergey, would a ThreadLocalProxy work for Application instances? The other thread-local proxies implement an interface (e.g. Request) and delegate to a thread-local concrete implementation of that interface. But Application objects are already concrete (and derived) so that doesn't work.

The Application object is a singleton, right? Correct me if I'm wrong, but wouldn't it be enough to inject it once into the singleton root resource and be done with it?","13/Mar/11 13:32;sergey_beryozkin;Hi Ben

I think it would work but the existing TL support won't help indeed and as you said it is actually not needed if it is injected only once.

You are right, injecting it into the singleton resource only once is exactly what is needed. 
But the patch will need to be modified because it affect the code which does the injection on every request for both singletons and per-request resources but we only need to do it once for singletons.

I have to think how to do it better, especially given that JAX-RS 1.1 also requires supporting the injection into Application instances, so we need to deal with injecting Applications and also with injecting contexts such as UriInfo, etc into the injected Applications, ouch :-)

thanks, Sergey  ","24/Mar/11 14:35;sergey_beryozkin;Hi Ben, just FYI, the injection of Contexts into injected Applications is also supported, see
https://issues.apache.org/jira/browse/CXF-3417

thanks, Sergey","25/Mar/11 21:55;bnoordhuis;Thanks for the heads up, Sergey!",,,,,,,,,,,,,,,,,
Exception while sending array of byte (byte[]) ,CXF-3376,12500291,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,cesnek,cesnek,03/Mar/11 10:43,18/Apr/11 12:42,14/Mar/19 02:29,14/Mar/11 21:01,2.3.2,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Aegis Databinding,,,,0,,,,,,"Caused by: org.apache.cxf.aegis.DatabindingException: Couldn't instantiate class. [B. Nested exception is java.lang.InstantiationException: [B
	at org.apache.cxf.aegis.type.basic.BeanType.readObject(BeanType.java:194) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.aegis.AegisXMLStreamDataReader.read(AegisXMLStreamDataReader.java:83) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:51) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.aegis.databinding.XMLStreamDataReader.read(XMLStreamDataReader.java:36) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.getPara(DocLiteralInInterceptor.java:251) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:127) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2335) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2193) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2037) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:697) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73) ~[cxf-bundle-2.3.2.jar:2.3.2]
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124) ~[cxf-bundle-2.3.2.jar:2.3.2]
	... 69 common frames omitted
Caused by: java.lang.InstantiationException: [B
	at java.lang.Class.newInstance0(Class.java:340) ~[na:1.6.0_05]
	at java.lang.Class.newInstance(Class.java:308) ~[na:1.6.0_05]
	at org.apache.cxf.aegis.type.basic.BeanType.readObject(BeanType.java:136) ~[cxf-bundle-2.3.2.jar:2.3.2]
	... 88 common frames omitted
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-14 21:10:45.358,,,no_permission,,,,,,,,,,,,,46850,,,Mon Mar 14 21:29:37 UTC 2011,,,,,,0|i0uzn3:,178915,,,,,,,,"03/Mar/11 10:46;cesnek;With cxf-bundle-2.2.6.jar work fine.
After upgrading to cxf-bundle-2.3.2.jar exception is thrown.

{code}
public interface DocDatovyZdrojClientService  {

  byte[] export(java.util.List<java.lang.Integer> integers);
}
{code}","14/Mar/11 21:10;bmargulies;Dan, what did byte[] do to require a special case?","14/Mar/11 21:27;dkulp;
byte[] wasn't mapped.   If you look in AbstractTypeCreator.createTypeForClass(TypeClassInfo info), the if statements there didn't cover it at all.   isArray(javaClass) returned false as it excludes byte[].  The default ""else"" just looked at the java.lang.reflect.Type which, for byte[] is a GenericArrayType with component type byte.  That isn't in the defaultTypeMap.   Thus, byte[] was being mapped to a complexType named ""B]"" which was an empty sequence.   

","14/Mar/11 21:29;dkulp;
Benson, one more thing.... 
On line 558 of AegisDatabinding, there is a comment of:
// Current author doesn't know how type can be non-null here.

However, with the testcase I modified, it's ALWAYS null there.   Is the comment wrong or some expection isn't correct or something?",,,,,,,,,,,,,,,,,,,,,,,
CXF Service Builder fails if the binding is imported from different file and has different target namespace than one imported into.,CXF-3374,12500197,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ulhasbhole,ulhasbhole,ulhasbhole,02/Mar/11 16:50,18/Apr/11 12:42,14/Mar/19 02:29,03/Mar/11 00:10,2.3.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,"CXF Service Builder fails if the binding is imported from different file and has different target namespace than one imported into.
In a scenario where the binding is in different wsdl file from service and import namespace in service wsdl for binding is different from service namespace and binding's targetNamespace WSDL Service builder fails to generate namespace prefix on definition. 

I have a testcase and fix for this issue which I will merge shortly. 

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,46852,,,Thu Mar 03 00:10:02 UTC 2011,,,,,,0|i0sxr3:,166945,,,,,,,,"03/Mar/11 00:10;ulhasbhole;Merged fix to 2.3.x and trunk. 
2.3.x-fixes : http://svn.apache.org/viewvc?rev=1076295&view=rev 
trunk: http://svn.eu.apache.org/viewvc?view=revision&revision=1076305 
-- Ulhas Bhole",,,,,,,,,,,,,,,,,,,,,,,,,,
jetty SecurityHandler should be on top of org.apache.cxf.transport.http_jetty.JettyHTTPHandler,CXF-3369,12500034,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,01/Mar/11 10:24,18/Apr/11 12:42,14/Mar/19 02:29,11/Mar/11 08:00,,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Transports,,,,0,,,,,,"we can configure jetty SecurityHandler through httpj:handlers to enable jetty server side security such as basic auth, but SecurityHandler should on top of org.apache.cxf.transport.http_jetty.JettyHTTPHandler.
Also will add a testcase to demonstrate how to enable jetty server basic auth with configuring the SecurityHandler.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46857,,,Fri Mar 11 08:00:33 UTC 2011,,,,,,0|i145en:,232339,,,,,,,,"01/Mar/11 13:46;ffang;commit fix
http://svn.apache.org/viewvc?rev=1075784&view=rev for trunk
http://svn.apache.org/viewvc?rev=1075817&view=rev for 2.3.x branch","11/Mar/11 07:01;ffang;should set SecurityHandler which wrap JettyHttpHandler to the ContextHandler.
current code works with standalone cxf but will failed with camel-cxf endpoint which use asyncHandler mode by default
","11/Mar/11 08:00;ffang;commit fix
http://svn.apache.org/viewvc?rev=1080469&view=rev for trunk
http://svn.apache.org/viewvc?rev=1080479&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,
"SOAPAction value not extracted in the inbound processing if the header name does not match exactly ""SOAPAction""",CXF-3367,12499761,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ay,ay,25/Feb/11 21:07,18/Apr/11 12:42,14/Mar/19 02:29,01/Mar/11 15:49,2.3.2,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Soap Binding,,,,0,,,,,,"The inbound processing uses org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor to extract the SOAPAction header from the protocol header and put it in the message's property.The extraction code looks for the exact string ""SOAPAction"" in the protocol header instead of looking for the soap action header in the case-insenstive way.

The inbound processing initially converts the names of the transport headers from the web container using HttpHeaderHelper. Later, the converted names are stored in a plain map which is passed as the PROTOCOL_HEADERS property. So, if the soap action header is provided as ""SOAPAction"" or ""soapaction"" from the web container, this header is stored with key ""SOAPAction"" and it can be retrieved later. However, if the name is provided using different mixed casing, it is stored with that name and it can only be retrieved using this exact key.

Initially, I thought we could change SOAPActionInInterceptor locally to look for the soapaction header. But this will not solve other potential problems with the current map.

So, instead of just changing the SOAPActionInInterceptor, I am in favor of changing the implementation of the PROTOCOL_HEADERS map to support the case-insensitive lookup while preserving the original keys in the map.

Another reason favoring this approach is that the current case-sensitive map can have a few other problems. For example,  the map currently contains two Content-Type headers after it is created by AbstractHTTPDestination (over Jetty): one with ""content-type"" and the other with ""Content-Type"". And this is confusing and may lead to some conflicts. Another problem is the extraction problem for other headers when they are spelled in different mixed casing when they are passed.

So, I think we should use a specific map class that matches the current interface but supports the case-insensitive lookup while preserving the original case sensitive keys. The attached ProtocolHeaders class satisfies this requirement. Its unit test class ProtocolHeadersTest is also attached.

This class can be used in AbstractHTTPDestination to create the correct protocol headers map. I added a test case AbstractHTTPDestinationTest to check the extraction of the headers into the protocol headers map. The svn diff of 2.3.2 are attached.

Please take a look at the files and let me know how you think.
Thanks.

Regards, aki
",,14400,14400,,0%,14400,14400,,,,,,,,,,28/Feb/11 09:41;ay;ProtocolHeaders.tar.gz;https://issues.apache.org/jira/secure/attachment/12472158/ProtocolHeaders.tar.gz,28/Feb/11 09:41;ay;diff_rt.transports.txt.gz;https://issues.apache.org/jira/secure/attachment/12472157/diff_rt.transports.txt.gz,04/Mar/11 12:43;ay;test_patches.tar.gz;https://issues.apache.org/jira/secure/attachment/12472661/test_patches.tar.gz,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-03-01 03:08:21.744,,,no_permission,,Moderate,,,,,,,,,,,46859,,,Fri Mar 04 21:40:16 UTC 2011,,,,,,0|i145f3:,232341,,,,,,,,"25/Feb/11 21:09;ay;forgot to make a back reference to the mail thread
http://cxf.547215.n5.nabble.com/SOAP-header-wsdl2java-issue-td3399058.html","28/Feb/11 09:41;ay;diff_rt_transports.txt - svn diff of 2.3.2 rt/transports to add a new unit test

ProtocolHeaders.tar - ProtocolHeaders.java and ProtocolHeadersTest.java
","01/Mar/11 03:08;dkulp;
I just made a commit to trunk that goes a slightly different route than this.   I've pretty much gone through the entire code and made sure the PROTOCOL_HEADERS are always set to a TreeMap that is set for case insensitive compares.   That should completely solve this.

That said, due to refactoring on trunk, it may take a little time to port it to the 2.3 branch.   I'll do that tomorrow.","01/Mar/11 15:49;dkulp;
This should now be fixed.   I'd appreciate testing with the 2.3.4-SNAPSHOT after tomorrow's builds (or from your own SVN checkout) just to make sure.   The merge from trunk -> 2.3.x was bit complicated and I may have missed something.","04/Mar/11 11:55;sapakiy@googlemail.com;Hi Daniel,
thanks for this change. I agree that the tree set is a better approach
as we don't have so many entries and the binary search is cheaper than
the cost of maintaining two hashmaps and running string conversions.

I tested 2.3.x-fixed (2.3.4-SNAPSHOT) today. I needed to change my
AbstractHTTPDestinationTest that I attached to the ticket.
That one was failing in 2.3.4-SNAPSHOT because the mocked
ServletRequest class was expecting a method call which was no longer
called in the 2.3.4 code. So I needed to adjust this mock class.

I haven't tried the trunk code. This test class for 2.3.x doesn't
match the signature of 2.4.0-SNAPSHOT and I can't directly use it to
test it. I can create a test case.

Should I attach them to this resolved ticket or send them to you by mail?

Thanks.

Regards, aki

","04/Mar/11 12:43;ay;Hi Daniel,
I also tested the trunk 2.4.0-SNAPSHOT.

I'm attaching test_patches.tar.gz containing the test classes for 2.3.x and trunk 
   branches/2.3.x-fixes - AbstractHTTPDestinationTest.java
   trunk                - HeadersTest.java

regards, aki","04/Mar/11 21:40;dkulp;
Testcase patches applied to both branches.  Thanks!",,,,,,,,,,,,,,,,,,,,
CXF uses wrong policy alternative on response message,CXF-3365,12499692,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,karl rhenius,karl rhenius,25/Feb/11 10:48,01/Nov/11 02:11,14/Mar/19 02:29,05/Oct/11 19:45,2.3.2,,,,,,,,,,,,,,,,,2.5,,,,WS-* Components,,,,0,,,,,,"CXF uses a wrong policy on outgoing messages, if the wsdl has alternative policies.

Here is my setup:
Server-policy:
  <wsp:ExactlyOne>
   <wsp:All>
	#1 SecureConversation policy
   </wsp:All>
   <wsp:All>
	#2 nothing special, clients just send an UsernameToken
   </wsp:All>
  </wsp:ExactlyOne>

Client-policy:
  <wsp:ExactlyOne>
   <wsp:All>
	#1 SecureConversation policy
   </wsp:All>
  </wsp:ExactlyOne>

The client defines only the SecureConversation policy in it's wsdl.

If I test my service, they communicate like this:
Client > Server: RST/SCT message
Server > Client: answers with a token
Client > Server: calls the webservice with an encrypted soap message
Server > Client: answers the service call with an unencrypted message
(the server took policy #2 for the answer) -> client throws an exception
""These policy alternatives can not be satisfied""


I attached a test project, based on the AC_IPingService from the interop samples.
You can change the wsdl, which will be used by the server, in WSSCTest.startServers().


Related to this issue is the following bug:

If the UsernameToken policy is defined before the SecureConversation policy, the webservice fails on the RST/SCT message. Start the server with UtSecConvIPingService() to test this.
",,,,,,,,,,,,,,,,,25/Feb/11 10:54;karl rhenius;cxf-jira-3365.zip;https://issues.apache.org/jira/secure/attachment/12471920/cxf-jira-3365.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-10-05 19:45:43.375,,,no_permission,,,,,,,,,,,,,46582,,,Wed Oct 05 19:45:43 UTC 2011,,,,,,0|i14f4f:,233913,,,,,,,,25/Feb/11 10:54;karl rhenius;testcase,"05/Oct/11 19:45;dkulp;

See my comments in:
http://cxf.547215.n5.nabble.com/WS-Policy-alternatives-td4867625.html

about the compatibility of the fix and why it's only fixed for CXF 2.5.",,,,,,,,,,,,,,,,,,,,,,,,,
No wsdl elements generated for Exception.class,CXF-3364,12499670,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,ema,ema,25/Feb/11 05:33,18/Apr/11 12:42,14/Mar/19 02:29,25/Feb/11 06:58,,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Tooling,,,,0,,,,,,"There is no wsdl element generated for Exception class: 

@WebService(name = ""CalculatorService"", targetNamespace = ""http://cxf.apache.org/calculator"")
public class Caculator {
    @WebMethod(operationName = ""addNumber"")
    public Integer addNumber(@WebParam(name = ""itemA"") Integer itemA, @WebParam(name = ""ItemB"") Integer itemB)
        throws java.lang.Exception {

        return itemA + itemB;
    }
}

The schema element, wsdl part , fault and soap fault elements are expected. ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46861,,,2011-02-25 05:33:20.0,,,,,,0|i145fb:,232342,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF Servlet doesn't support servlet async feature rightly,CXF-3362,12499583,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,24/Feb/11 11:12,18/Apr/11 12:42,14/Mar/19 02:29,28/Feb/11 09:23,2.3,2.3.1,2.3.2,2.3.3,,,,,,,,,,,,,,2.3.4,2.4,,,Transports,,,,0,,,,,,"When deploying the CXF application into Tomcat 7.0 or Jetty8 M2, the async option is not working, and you will get the Error reading XMLStreamReader SoapFault from client.
{code}
2011-02-23 09:21:51,989 [qtp18378667-26 ] WARN  PhaseInterceptorChain          - Interceptor for {http://incident.cxf.example.camel.apache.org/}IncidentService has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: Error reading XMLStreamReader.
{code}
You can find more information in the CAMEL-3702.",,,,,,,,,,CAMEL-3702,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46863,,,2011-02-24 11:12:26.0,,,,,,0|i145fr:,232344,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuring Log4jLogger requires SecurityPermission setContextClassLoader,CXF-3361,12499578,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,lot77,lot77,24/Feb/11 10:33,18/Apr/11 12:42,14/Mar/19 02:29,01/Mar/11 04:03,2.2.12,,,,,,,,,,,,,,,,,2.3.4,2.4,,,,,,,0,,,,,,"When configuring Log4jLogger as in http://cxf.apache.org/docs/debugging-and-logging.html (using any of the options described), a SecurityPermission of {{setContextClassLoader}} is required in order to allow org.apache.cxf.common.logging.Log4jLogger to be loaded successfully. This is a consequence of using {{BugHacks.doHacks();}} in the Log4jLogger's static block. 

The required security permission {{setContextClassLoader}} to load a class seams inadequate.
",,,,,,,,,,,,,CXF-1816,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46864,,,2011-02-24 10:33:16.0,,,,,,0|i145fz:,232345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
repeated replace() function calls damage the performance,CXF-3360,12499521,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,nancyesmis,nancyesmis,23/Feb/11 20:00,18/Apr/11 12:42,14/Mar/19 02:29,11/Mar/11 04:45,2.3.2,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Core,,,,0,,,,,,"In the function sanitize(String in)

./apache-cxf-2.3.2-src/common/common/src/main/java/org/apache/cxf/management/InstrumentationManager.java              line: 307

6 consecutive replace() is called to remove the special characters.  It's 5+ times slower than using a for loop replace them all.
{noformat}
e.g.
 - str.replace('a', '#');
 - str.replace('b', '%');

 + StringBuilder sb = new StringBuilder( str.length() );
 + for (int i=0; i < str.length(); i++)
 +  {
 +           char c = str.charAt(i);
 +         if ( c == 'a' )
 +               sb.append('#');
 +       else if ( c== 'b' )
 +               sb.append('%');
 +       else 
 +              sb.append(c); 
 +  }
 +  str  = sb.toString();
{noformat}
This bug has the same problem as the MySQL bug : http://bugs.mysql.com/bug.php?id=45699
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46865,,,2011-02-23 20:00:06.0,,,,,,0|i0sxrb:,166946,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rg.apache.cxf.attachment.AttachmentUtil.createContentID has a bug in it,CXF-3358,12499413,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,carl.roberts.zapata@gmail.com,carl.roberts.zapata@gmail.com,22/Feb/11 22:27,01/Mar/11 15:53,14/Mar/19 02:29,23/Feb/11 17:15,2.3.1,,,,,,,,,,,,,,,,,2.3.3,,,,JAX-WS Runtime,,,,0,,,,,,"When parsing an MTOM attachment the code in createContentID throws this exception:

Caused by: java.lang.IllegalArgumentException: URI is not absolute
        at java.net.URI.toURL(Unknown Source) [:1.6.0_16]
        at org.apache.cxf.attachment.AttachmentUtil.createContentID(AttachmentUtil.java:76) [:2.3.1]
        at org.apache.cxf.attachment.AttachmentUtil.createMtomAttachmentFromDH(AttachmentUtil.java:252) [:2.3.1]
        at org.apache.cxf.jaxb.attachment.JAXBAttachmentMarshaller.addMtomAttachment(JAXBAttachmentMarshaller.java:69) [:2.3.1]
        at com.sun.xml.bind.v2.runtime.output.MTOMXmlOutput.text(MTOMXmlOutput.java:124) [:2.2]
        at com.sun.xml.bind.v2.runtime.XMLSerializer.leafElement(XMLSerializer.java:345) [:2.2]
        at com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl$PcdataImpl.writeLeafElement(RuntimeBuiltinLeafInfoImpl.java:177) [:2.2]
        at com.sun.xml.bind.v2.runtime.MimeTypedTransducer.writeLeafElement(MimeTypedTransducer.java:92) [:2.2]
        at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.writeLeafElement(TransducedAccessor.java:250) [:2.2]
        at com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty.serializeBody(SingleElementLeafProperty.java:98) [:2.2]
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:340) [:2.2]
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:696) [:2.2]
        at com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty.serializeBody(SingleElementNodeProperty.java:152) [:2.2]
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:340) [:2.2]
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:696) [:2.2]
        at com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty.serializeItem(ArrayElementNodeProperty.java:65) [:2.2]
        at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:168) [:2.2]
        at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:155) [:2.2]
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:340) [:2.2]
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:696) [:2.2]
        at com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty.serializeBody(SingleElementNodeProperty.java:152) [:2.2]
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:340) [:2.2]
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:696) [:2.2]
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:152) [:2.2]
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:189) [:2.2]
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:316) [:2.2]
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:323) [:2.2]
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:72) [:2.2]
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:494) [:2.2]
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:315) [:2.2]
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:172) [:2.2]
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.writeObject(JAXBEncoderDecoder.java:534) [:2.3.1]
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.marshall(JAXBEncoderDecoder.java:227) [:2.3.1]

The problem is createContentID method is trying to convert a namespace URI to a URL and not all namespace URI's are absolute. For example, the namespace URI that is causing the problem in this case is:  oracle/documaker/schema/ws/composition.

This same JAX-WS web service runs fine on Tomcat 7.0.6, WLS 10.3.2 and WAS 7.0.13 so the only container that has a problem with this is JBOSS and it has a problem with it because it uses CXF and it the AttachmentUtil class has a bug in it.  This is what I did to resolve the problem:

1 - Modify the createContentID method as follows (the last catch statement resolves the error - you could try to catch IllegalArgumentException if you wish instead:


public static String createContentID(String ns) throws UnsupportedEncodingException {
+        // tend to change
+        String cid = ""cxf.apache.org"";
+        System.out.println(""*********ns=<"" + ns + "">*********"");
+        String name = ATT_UUID + ""-"" + String.valueOf(++counter);
+        if (ns != null && (ns.length() > 0)) {
+            try {
+                URI uri = new URI(ns);
+                String host = uri.toURL().getHost();
+                cid = host;
+            } catch (URISyntaxException e) {
+                cid = ns;
+            } catch (MalformedURLException e) {
+                cid = ns;
+            } catch (Exception e){
+                cid = ns;
+            }
+        }

2 - Replace AttachmentUtil.class in cxf-rt-core.jar in common/lib in the JBOSS container with the one I modified.
",Windows XP and JBOSS 6.0.0.Final,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-24 20:27:23.255,,,no_permission,,Unknown,,,,,,,,,,,46867,,,Thu Feb 24 20:27:23 UTC 2011,,,,,,0|i0a2wf:,56743,,,,,,,,"24/Feb/11 16:36;carl.roberts.zapata@gmail.com;JBOSS uses 2.3.1.  Is it also fixed in 2.3.1?



","24/Feb/11 20:27;dkulp;No, just fixed it the other day.  When JBoss updates to 2.3.3, it will be fixed there.",,,,,,,,,,,,,,,,,,,,,,,,,
ServletController can not handle more than one endpoint sharing the same servlet path,CXF-3357,12499362,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,22/Feb/11 16:22,18/Apr/11 12:42,14/Mar/19 02:29,22/Feb/11 16:31,2.3.2,,,,,,,,,,,,,,,,,2.4,,,,Transports,,,,0,,,,,,"ServletController and its updateDests method causes problems with the basic deployment, where we have at least 2 endpoints, say with ""/1"" and ""/2"" addresses and a single CXFServlet (ex, with the uri pattern ""/services/*"").



If the first URI is http://localhost:8080/services/1 then the subsequent request to http://localhost:8080/services/2 fails because updateDests has the lastBase (http://localhost:8080/services) matching the current one and thus the correct destination does not have its address overridden.

Overriding addresses is an issue on its own but at the very least the ServletController should not override *all* the destinations but only the one which will handle the current request.


The OSGI controller actually does not even has this lastBase optimization and minimizing the number of the overrides will compensate. ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46868,,,Tue Feb 22 16:31:23 UTC 2011,,,,,,0|i145g7:,232346,,,,,,,,22/Feb/11 16:31;sergey_beryozkin;I won't merge to 2.3.3 - I think this merge is really safe but just in case :-),,,,,,,,,,,,,,,,,,,,,,,,,,
can't refer to java.lang.Exception in gererated fault code,CXF-3353,12499288,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,22/Feb/11 01:40,05/May/11 06:06,14/Mar/19 02:29,22/Feb/11 14:17,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,"if wsdl and wsdl types are using same name namespace, also in the types we define a fault with name
<element name=""exception"">
then generated code like
public class ServiceException extends Exception {
The exception here should be java.lang.Exception,
but the java compile consider it as inner faulttype org.apache.hello_world_soap_http_provider.Exception in the
same package, which cause compilation error.

We should always use java.lang.Exception in the generated code to avoid such error",,,,,,,,,,,,,,,,,22/Feb/11 01:42;ffang;hello_world.wsdl;https://issues.apache.org/jira/secure/attachment/12471593/hello_world.wsdl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46872,,,Tue Feb 22 14:17:23 UTC 2011,,,,,,0|i0a2wv:,56745,,,,,,,,22/Feb/11 01:42;ffang;attach a wsdl to expose this issue,"22/Feb/11 01:50;ffang;though in best practice we should use different name for wsdl and wsdl types, also we should use some more meaningful name for exception but not just ""exception"", I still think we MAY need consider this one as a bug which we need address","22/Feb/11 14:17;ffang;commit fix
http://svn.apache.org/viewvc?rev=1073302&view=rev for trunk
http://svn.apache.org/viewvc?rev=1073334&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,
JAXBElementProvider ignores stream readers when creating JAXBElements ,CXF-3351,12499181,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,20/Feb/11 21:28,01/Mar/11 15:53,14/Mar/19 02:29,20/Feb/11 21:37,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46874,,,2011-02-20 21:28:34.0,,,,,,0|i0a2x3:,56746,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRSClientFactoryBean selects a wrong user resource when the model includes multiple resource descriptions,CXF-3350,12499068,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,18/Feb/11 17:07,18/Apr/11 12:42,14/Mar/19 02:29,18/Feb/11 17:08,2.4,,,,,,,,,,,,,,,,,2.4,,,,JAX-RS,,,,0,,,,,,"Reusing the model in a common module between server and client code does not work well in cases where the model describes multiple root resources - currently JAXRSClientFactoryBean assumes only a single ClassResourceInfo can be created.

With the model containing multiple resource descriptions it does not work reliably. The fix will insure the correct resource is selected",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46875,,,2011-02-18 17:07:00.0,,,,,,0|i145gf:,232347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE may be thrown in WS-RM scenarios at the server side when rebasing the response,CXF-3349,12499065,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ay,ay,18/Feb/11 16:51,01/Mar/11 15:53,14/Mar/19 02:29,18/Feb/11 23:51,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,WS-* Components,,,,0,,,,,,"Some WS-RM scenarios may sometimes result in the following exception at the provider/server side under the piggyback mode..

{quote}
java.lang.NullPointerException: null
 at org.apache.cxf.ws.addressing.ContextUtils$2.getBackChannel(ContextUtils.java:471) ~[org.apache.cxf.cxf-bundle-2.3.2.jar:2.3.2]
 at org.apache.cxf.interceptor.OneWayProcessorInterceptor.handleMessage(OneWayProcessorInterceptor.java:87) ~[na:na]
 at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255) ~[org.apache.cxf.cxf-bundle-2.3.2.jar:2.3.2]
 at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113) 
...
{quote}
The cause of this problem seems to be in the rebaseResponse method of org.apache.cxf.ws.addressing.ContextUtils, where the destination endpoint is determined in the following code:
{code}
421                     Destination destination = createDecoupledDestination(
422                         exchange, reference);
423                     exchange.setDestination(destination);
{code}

As this reference parameter could become null, it needs a similar handling as in the code a few lines above:
{code}
388                                                             reference == null
389                                                             ? ContextUtils.getNoneEndpointReference()
390                                                             : reference 
{code}
Alternatively, the reference variable can be set to ContextUtils.getNoneEndpointReference() at the beginning of this rebaseResponse method to prevent this problem.

This problem does not occur in 2.2.x because this second use/reference of the referece variable is only present in 2.3.x.

I believe this change will solve this issue.

Regards, aki",,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46876,,,2011-02-18 16:51:47.0,,,,,,0|i0a2xb:,56747,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ws_security's ut and sign_enc samples define ConciseFormatter with the wrong package name,CXF-3347,12499017,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,coheigea,ay,ay,18/Feb/11 09:32,01/Mar/11 15:53,14/Mar/19 02:29,18/Feb/11 11:23,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Samples,,,,0,,,,,,"Both ws_security/ut and ws_security/sign_enc samples define locally demo.wssec.common.ConciseFormatter with the wrong package name (demos.wssec.common) instead of the correct package name demo.wssec.common.

I noticed this trivial problem a while ago and thought it would automatically go away.
But it is still present in the current branch. So, I thought I should create this issue.
",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,46878,,,2011-02-18 09:32:23.0,,,,,,0|i0a2xr:,56749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cxt-rt-core references spring-beans-2.5.xsd - breaks Spring 3 compatibility,CXF-3345,12498923,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jbaxter,jbaxter,17/Feb/11 17:02,01/Mar/11 15:53,14/Mar/19 02:29,18/Feb/11 23:57,2.3.2,,,,,,,,,,,,,,,,,2.3.3,,,,Core,,,,0,,,,,,"In cxf-rt-core, the spring configuration file META-INF/cxf/cxf.xml references the schemaLocation 'spring-beans-2.5.xsd'. This causes problems when Spring 3.0.5.RELEASE uses the discovered/registered xsds to validate its configuration. I imagine the schemaLocation should be spring-beans.xsd as per the other module Spring configuration files.

As an example, a jee:jndi-lookup element fails to validate...

2011-02-17 16:07:27 DEBUG [org.springframework.beans.factory.xml.PluggableSchemaResolver main] Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://cxf.apache.org/schemas/policy.xsd=schemas/policy.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd=schemas/oasis-200401-wss-wssecurity-utility-1.0.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://cxf.apache.org/schemas/jaxws.xsd=schemas/jaxws.xsd, http://www.w3.org/2006/07/ws-policy.xsd=schemas/ws-policy-200607.xsd, http://schemas.xmlsoap.org/ws/2004/09/policy/ws-policy.xsd=schemas/ws-policy-200409.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://cxf.apache.org/schemas/ws/addressing.xsd=schemas/ws-addr-conf.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd=schemas/oasis-200401-wss-wssecurity-secext-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.w3.org/2007/02/ws-policy.xsd=schemas/ws-policy-200702.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd=schemas/xmldsig-core-schema.xsd, http://www.w3.org/2001/xml.xsd=schemas/xml.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}

<snip>

Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'jee:jndi-lookup'.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.xs.XMLSchemaValidator.reportSchemaError(Unknown Source)
	at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(Unknown Source)
	at org.apache.xerces.impl.xs.XMLSchemaValidator.emptyElement(Unknown Source)
	at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
	... 149 more",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-18 22:37:39.956,,,no_permission,,,,,,,,,,,,,46880,,,Fri Feb 18 22:37:39 UTC 2011,,,,,,0|i0a2xz:,56750,,,,,,,,"18/Feb/11 22:37;dkulp;
I don't see it referencing spring-beans-2.5.xsd.    If you look at:

http://svn.apache.org/repos/asf/cxf/tags/cxf-2.3.2/rt/core/src/main/resources/META-INF/cxf/cxf.xml

(likely will need to ""view source"", the import for spring-beans is:
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

The spring-context is set for 2.5.  We can likely update that.  

",,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in Soap12FaultOutInterceptor when an exception is thrown from a SOAP 1.2 endpoint,CXF-3342,12498810,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,piepera,piepera,16/Feb/11 22:34,18/Apr/11 12:42,14/Mar/19 02:29,11/Mar/11 04:45,2.2.11,2.3.2,,,,,,,,,,,,,,,,2.3.4,2.4,,,Soap Binding,,,,0,,,,,,"I'm implementing a web service using CXF. After upgrading the CXF endpoint from SOAP 1.1 to SOAP 1.2, error handling no longer works properly. Instead of receiving SOAP faults from the web service, I receive an empty document, which breaks my client software. A stack trace is logged on the web server. The stack trace includes the following:

java.lang.NullPointerException
  at org.apache.cxf.staxutils.W3CDOMStreamWriter.writeNamespace(W3CDOMStreamWriter.java:209)
  at org.apache.cxf.staxutils.StaxUtils.getUniquePrefix(StaxUtils.java:1287)
  at org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal.handleMessage(Soap12FaultOutInterceptor.java:77)
  at org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal.handleMessage(Soap12FaultOutInterceptor.java:55)   

It looks like Soap11FaultOutInterceptor has some code to handle a special case where writer.getPrefix() returns null, and that this code wasn't copied over to Soap12FaultOutInterceptor.",,,,,,,,,,,,,,,,,16/Feb/11 22:35;piepera;exception.txt;https://issues.apache.org/jira/secure/attachment/12471227/exception.txt,16/Feb/11 22:35;piepera;patch.txt;https://issues.apache.org/jira/secure/attachment/12471228/patch.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-02-16 23:24:07.185,,,no_permission,,Novice,,,,,,,,,,,46882,,,Thu Feb 17 00:37:12 UTC 2011,,,,,,0|i145gn:,232348,,,,,,,,"16/Feb/11 22:35;piepera;The full stack trace which is reported on the server side, as well as a patch which fixes the issue.","16/Feb/11 23:24;gmazza;Hi Aaron, there seems something wrong with your patch, the very last ""writer.writeStartElement(defaultPrefix, ""Fault"", ns);"" at the bottom (carried over from the original code) would need to be nuked, correct?","17/Feb/11 00:37;piepera;Yes, oops, I just caught this bug myself! Sorry, I'm still kind of testing the patch myself; I may have posted it prematurely.",,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java caches the input wsdl file or result so there is no differnce in the output when called a second time from the same process and with the same wsdl file path,CXF-3340,12498736,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,ffang,kjell,kjell,16/Feb/11 10:11,01/Mar/11 15:53,14/Mar/19 02:29,17/Feb/11 07:46,2.3.1,,,,,,,,,,,,,,,,,2.3.3,2.4,,,,,,,0,,,,,,"When the public class WSDL2Java is used two times from the same process and with the same path to the wsdl file, the generated files are the same both times even if the content of the file at the wsdl file path has changed so it should result in different output. It seems like CXF is caching the content of the WSDL somewhere and just reads from the cache the second time WSDL2Java is called. If the path is different from all paths that have previously been used with WSDL2Java the file is correctly read from disk. A maven project that can be used to reproduce the behavior will be attached to this bug.

This is critical for us since our application can call WSDL2Java many times during it's life time and we don't want files to be cached somewhere between the calls so that our application leaks memory and so we get unexpected results. If we just knew how to clear all caches between the calls then that would be a good enough workaround for us. This problem did not exist in CXF version 2.0.6.",Linux,,,,,,,,,,,,,,,,16/Feb/11 10:20;kjell;cxfcachebug.tar.gz;https://issues.apache.org/jira/secure/attachment/12471165/cxfcachebug.tar.gz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-17 06:49:19.876,,,no_permission,,Moderate,,,,,,,,,,,46884,,,Thu Feb 17 07:46:13 UTC 2011,,,,,,0|i0a2y7:,56751,,,,,,,,16/Feb/11 10:20;kjell;A maven project that can reproduce the issue,"17/Feb/11 06:49;ffang;Hi,

We have a definitionsMap in WSDLManagerImpl, which cache wsdl definition with a wsdl url as key, so that we needn't re-generate wsdl definition for a certain wsdl, we assume that wsdl content won't change with a wsdl name, and this is true in most cases, though it not works for your scenario.
Anyway, the fix is coming soon.

Freeman","17/Feb/11 07:46;ffang;commit fix
http://svn.apache.org/viewvc?rev=1071525&view=rev for trunk
http://svn.apache.org/viewvc?rev=1071528&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,
ClassLoader issue with cached JAXBContext by packagename,CXF-3339,12498667,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,argoyle,argoyle,15/Feb/11 17:31,18/Apr/11 12:44,14/Mar/19 02:29,08/Apr/11 10:59,,,,,,,,,,,,,,,,,,2.4,,,,JAX-RS,,,,0,,,,,,"When using the same REST-integration from two different WAR's we got a nice ""JAXBException occurred : class packagename.Classname nor any of its super class is known to this context"" from one of the applications.

I tracked this to the AbstractJAXBProvider and the packageContexts being keyed on the string-representation of the package.

The following naive patch (towards the 2.3.x-fixes branch) solved the problem for us. There probably is a better solution.
{noformat}
@@ -394,7 +394,13 @@ public abstract class AbstractJAXBProvider extends AbstractConfigurableProvider
             return null;
         }
         synchronized (packageContexts) {
-            String packageName = PackageUtils.getPackageName(type);
+            String classLoaderName;
+            if (type.getClassLoader() != null) {
+                classLoaderName = type.getClassLoader().toString();
+            } else {
+                classLoaderName = ""none"";
+            }
+            String packageName = classLoaderName + ""-"" + PackageUtils.getPackageName(type);
             JAXBContext context = packageContexts.get(packageName);
             if (context == null) {
                 try {
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-08 10:59:13.856,,,no_permission,,,,,,,,,,,,,46885,,,Fri Apr 08 10:59:13 UTC 2011,,,,,,0|i145gv:,232349,,,,,,,,08/Apr/11 10:59;sergey_beryozkin;Resolved on the trunk only due to sensitive changes which have been applied to ProviderFactory,,,,,,,,,,,,,,,,,,,,,,,,,,
 WSDL2JAVA client code generator fails in Version 2.3.x  with unspecified exception.  Version 2.2.x will process this same WSDL,CXF-3336,12498594,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,barraster,barraster,14/Feb/11 23:58,01/Mar/11 15:53,14/Mar/19 02:29,18/Feb/11 23:46,2.3.1,,,,,,,,,,,,,,,,,2.3.1,,,,Tooling,,,,0,,,,,,A WSDL file input to the CXF client code generator in version 2.2x will process to completion.  The same WSDL input to version 2.3.x causes an unspecified exception and fails to generate client code.  Groups using the affected web service would prefer to stay current with latest version of CXF.,"Windows 7, Tomcat 6.0,  Eclipse (Helios with SR1)",,,,,,,,,,,,,,,,15/Feb/11 15:54;barraster;FiListService.wsdl;https://issues.apache.org/jira/secure/attachment/12471082/FiListService.wsdl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-15 00:50:02.053,,,no_permission,,Unknown,,,,,,,,,,,46887,,,Fri Feb 18 23:46:48 UTC 2011,,,,,,0|i0klbz:,118273,,,,,,,,"15/Feb/11 00:50;bmargulies;If you don't give us the WSDL or at least a backtrace, we can't do much with this.
","15/Feb/11 00:59;barraster;
Benson Margules;

Sorry - did not quite know how to attach the WSDL to the bug report.  Please send directions on where I should send a copy of the problem WSDL(s).

Regards;
-Mike Pettigrew





","15/Feb/11 01:41;dkulp;
In the ""More Actions"" drop down above, there is a ""Attach Files"" option.   That will allow you to attach files to this issue.

","18/Feb/11 23:46;dkulp;
I can reproduce the issue with 2.3.0.  However, 2.3.1 and newer generate the code fine.   Marking resolved.",,,,,,,,,,,,,,,,,,,,,,,
SourceDataBinding doesn't create a thread safe DataReader ,CXF-3332,12498447,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,12/Feb/11 06:50,16/Jul/13 19:29,14/Mar/19 02:29,12/Feb/11 07:30,2.2.11,2.2.12,2.3,2.3.1,2.3.2,,,,,,,,,,,,,2.3.3,2.4,,,Core,,,,0,,,,,,"If there are multi-client send the dispatch request to server ,  the provider server will send a fault message to client randomly. 
This issue is caused by SourceDataBinding doesn't create a thread safe DataReader.

The server code:
{code}
import javax.xml.transform.Source;
import javax.xml.ws.Endpoint;
import javax.xml.ws.Provider;
import javax.xml.ws.Service;
import javax.xml.ws.ServiceMode;
import javax.xml.ws.WebServiceProvider;
import javax.xml.ws.http.HTTPBinding;

public class Starter
{
    @WebServiceProvider
    @ServiceMode(value = Service.Mode.MESSAGE)
    static class SimplePOXEchoProvider implements Provider<Source> {

        public Source invoke(Source request) {
            return request;
        }
    }
    
   public static void main(String[] args) throws InterruptedException
   {

      Endpoint ep = Endpoint.create(HTTPBinding.HTTP_BINDING, new SimplePOXEchoProvider());
      ep.publish(""http://localhost:9001/test"");
      while (true)
      {
         Thread.sleep(100000);
      }
   }
}
{code}

The client code
{code}

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.io.IOException;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

import javax.xml.namespace.QName;
import javax.xml.transform.stream.StreamSource;
import javax.xml.ws.Dispatch;
import javax.xml.ws.Service;
import javax.xml.ws.http.HTTPBinding;

import org.apache.commons.io.IOUtils;
import org.apache.cxf.jaxws.DispatchImpl;
import org.apache.log4j.Logger;
import org.junit.Test;

public class ServiceTests {

    private final static Logger log = Logger.getLogger(ServiceTests.class);

    private boolean failed = false;
    
    public static final String POX_REQUEST =
        ""<ns2:sendIt xmlns:ns2=\""http://service.sandbox.paxtests.example.com/\"">"" + ""<arg0>Hello</arg0></ns2:sendIt>"";
    
    @Test
    public void concurrentPositiveTest() throws InterruptedException {
        int requestsCount = 20;
        final CountDownLatch latch = new CountDownLatch(requestsCount);
        Runnable task = new Runnable() {
            public void run() {
                try {
                    testPoxPositive();
                } catch (Throwable t) {
                    log.error(""FAILED"", t);
                    failed = true;
                } finally {
                    latch.countDown();
                }
                
            }
        };
        ExecutorService threadPool = Executors.newFixedThreadPool(10);
        for(int i=0; i<requestsCount; i++) {
            threadPool.execute(task);
        }
        assertTrue(latch.await(100000, TimeUnit.SECONDS));
        assertFalse(failed);
    }
    
    //@Test
    public void testPoxPositive() throws IOException {
        QName portName = new QName(""dummy"", ""dummy"");
        Service service = Service.create(null);
        service.addPort(portName, HTTPBinding.HTTP_BINDING, ""http://localhost:9001/test"");

        Dispatch<StreamSource> disp = service.createDispatch(portName, StreamSource.class, Service.Mode.MESSAGE);

        StreamSource response = disp.invoke(new StreamSource(IOUtils.toInputStream(POX_REQUEST)));
        String text = IOUtils.toString(response.getInputStream());
        assertEquals(POX_REQUEST, text);
        ((DispatchImpl<StreamSource>)disp).getClient().destroy();
    }
{code}

When send the request with thread pool size 20, you will get the below stack trace.
{code}
[pool-1-thread-2] 2011-02-10 15:25:39,089 ERROR [com.example.test.ServiceTests] - FAILED
javax.xml.ws.http.HTTPException
    at org.apache.cxf.jaxws.DispatchImpl.mapException(DispatchImpl.java:248)
    at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:339)
    at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:218)
    at com.example.test.ServiceTests.testPoxPositive(ServiceTests.java:66)
    at com.example.test.ServiceTests$1.run(ServiceTests.java:40)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:619)
Caused by: org.apache.cxf.binding.xml.XMLFault: Message part {http://service.sandbox.paxtests.gateway.sabre.com/}sendIt was not recognized.  (Does it exist in service WSDL?)
    at org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor.handleMessage(XMLFaultInInterceptor.java:63)
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
    at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:99)
    at org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor.handleMessage(XMLMessageInInterceptor.java:81)
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
    at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2335)
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2193)
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2037)
    at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
    at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
    at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
    at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:697)
    at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
    at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
    at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
    at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
    at org.apache.cxf.endpoint.ClientImpl.invokeWrapped(ClientImpl.java:300)
    at org.apache.cxf.jaxws.DispatchImpl.invoke(DispatchImpl.java:332)
    ... 6 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46890,,,Sat Feb 12 07:30:19 UTC 2011,,,,,,0|i0a2yv:,56754,,,,,,,,"12/Feb/11 07:30;njiang;Applied patch into trunk, 2.3.x-fixing and 2.2.x-fixing branch.",,,,,,,,,,,,,,,,,,,,,,,,,,
Schema validation breaks with multiple Instances of Java first JAX-WS service,CXF-3331,12498407,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,joel.turkel,joel.turkel,11/Feb/11 18:28,18/Apr/11 12:42,14/Mar/19 02:29,15/Mar/11 04:08,2.3.2,,,,,,,,,,,,,,,,,2.3.4,2.4,,,,,,,0,,,,,,"When publishing two instances of a Java first JAX-WS service, valid messages sent to the second service always fail schema validation. With the attached test case, the call to the second service fails with the following stack trace:

org.apache.cxf.interceptor.Fault: Unmarshalling Error: cvc-elt.1: Cannot find the declaration of element 'ns2:sayHi'. 
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:791)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:632)
	at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:133)
	at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:109)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:311)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:280)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:931)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:868)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:114)
	at org.eclipse.jetty.server.Server.handle(Server.java:352)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:596)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.content(HttpConnection.java:1068)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:805)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:218)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:426)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:508)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.access$000(SelectChannelEndPoint.java:34)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:451)
	at java.lang.Thread.run(Thread.java:662)
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'ns2:sayHi'.]
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:425)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:362)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339)
	at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:768)
	... 24 more
Caused by: org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'ns2:sayHi'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1916)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHandlerImpl.startElement(ValidatorHandlerImpl.java:549)
	at com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller.startElement(ValidatingUnmarshaller.java:96)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:242)
	at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:176)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
	... 26 more

The problem is also reproduces by sending the same message to both services through SoapUI. ",,,,,,,,,,,,,,,,,11/Feb/11 18:29;joel.turkel;HelloWorld.java;https://issues.apache.org/jira/secure/attachment/12470880/HelloWorld.java,11/Feb/11 18:29;joel.turkel;HelloWorldImpl.java;https://issues.apache.org/jira/secure/attachment/12470881/HelloWorldImpl.java,11/Feb/11 18:29;joel.turkel;HelloWorldTest.java;https://issues.apache.org/jira/secure/attachment/12470882/HelloWorldTest.java,12/Mar/11 14:50;joel_turkel;cxf-validation-bug.zip;https://issues.apache.org/jira/secure/attachment/12473475/cxf-validation-bug.zip,11/Mar/11 03:16;dkulp;cxf3331.diff;https://issues.apache.org/jira/secure/attachment/12473362/cxf3331.diff,,,5.0,,,,,,,,,,,,,,,,,,,,2011-03-11 03:16:29.418,,,no_permission,,,,,,,,,,,,,46891,,,Tue Mar 15 04:01:38 UTC 2011,,,,,,0|i145hb:,232351,,,,,,,,"11/Mar/11 03:16;dkulp;
I'm not able to reproduce this.   I took the attached files and added them to our test suite pretty much as is (just changed the package) and the test runs fine.

I would need a complete ""read to run"" test case ",12/Mar/11 14:50;joel_turkel;junit test case that reproduces the problem,12/Mar/11 14:52;joel_turkel;I've attached a Maven project with a JUnit test that reproduces the issue. I'm using Sun JDK 1.6.23 on Windows 7 64-bit.,"15/Mar/11 04:01;dkulp;
This is actually a bug in the Schema parser built into the JDK.   You can ""fix"" it by including xercesImpl 2.9.1 as a dependency for the project.   

That said, I'm testing a hack that should workaround the issue.",,,,,,,,,,,,,,,,,,,,,,,
URITemplate does not escape literal '+' characters,CXF-3330,12498371,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,11/Feb/11 14:31,01/Mar/11 15:53,14/Mar/19 02:29,11/Feb/11 14:38,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,JAX-RS,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46892,,,2011-02-11 14:31:01.0,,,,,,0|i0a2z3:,56755,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl: attributes of structs with the same name as a type do not show up in XSD,CXF-3329,12498369,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,arnoud,arnoud,11/Feb/11 14:22,19/Dec/12 14:38,14/Mar/19 02:29,05/Dec/12 20:34,2.3.2,2.3.3,,,,,,,,,,,,,,,,2.5.7,2.6.4,2.7.1,,Tooling,,,,0,idl2wsdl,,,,,"I am using idl2wsdl to generate a XML schema from a set of type definitions in IDL using the cxf-corbatools-maven-plugin. If the IDL has structures containing attributes with the same name as a type in the same IDL, that attribute does not show up in the generated XSD.

For example, the following IDL definition:

{code}
module myModule
{
	struct myStruct
	{
		long myStruct;
		long otherField;
	};
};
{code}

results in the XSD below:

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<xs:schema attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"" targetNamespace=""http://my.company.com"" xmlns:tns=""http://my.company.com"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"">
  <xs:complexType name=""myModule.myStruct"">
    <xs:sequence>
      <xs:element name=""otherField"" type=""xs:int"">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
{code}

The attribute myStruct from the IDL is not present in the XSD.

The output of idl2wsdl is as follows:

{noformat}
idl2wsdl -o path/to/output -x http://my.company.com -T types.xsd -verbose path/to/types.idl
idl2wsdl - Apache CXF 2.3.3-SNAPSHOT

 ( module myModule ( struct myStruct long myStruct long otherField ) )
{noformat}",,,,,,,,,,,,,,,,,11/Feb/11 17:23;arnoud;sample.idl;https://issues.apache.org/jira/secure/attachment/12470876/sample.idl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-11 16:43:02.366,,,no_permission,,,,,,,,,,,,,46893,,,Mon Feb 14 18:44:29 UTC 2011,,,,,,0|i146yf:,232590,,,,,,,,11/Feb/11 16:43;ulhasbhole;Can you attach a sample idl file? I wouldn't mind having a quick look into it since I recently fixed similar duplicate attributes issue. ,11/Feb/11 17:23;arnoud;I attached the sample as IDL file. The attribute myStruct does not appear in the generated XSD.,"14/Feb/11 18:44;ulhasbhole;I had a initial look at the code and some debugging on the simple idl that from the example in this Jira and the issue here is while traversing the idl one of the checks is for forward reference of a type and in that case it recursively checks for the scope type subtracting one element from scope each time and type name. so it passes first phase where scope is myModule.myStruct.myStruct being not present in the scopeNames list however on the next cycle it tries to find myModule.myStruct in scopes and it finds the entry and treats it as forward reference. Here is the method that inturn calls a check isForwardReference() in ScopedNameVisitor.accept() call. if you look at the code it check for the scope removing one element at a time with the member name added to it. So in this case it will check for myModule.myStruct.myStruct then myModule.myStruct. 

{code}
    private void visitStructMembers(AST identifierNode, Struct struct,
                                    XmlSchemaSequence sequence,
                                    Scope structScope) {
        AST memberTypeNode = identifierNode.getNextSibling();
        while (memberTypeNode != null) {
            AST memberNode = TypesUtils.getCorbaTypeNameNode(memberTypeNode);
            
            XmlSchemaType schemaType = null;
            CorbaTypeImpl corbaType = null;
            Scope fqName = null;
            try {
                TypesVisitor visitor = new TypesVisitor(structScope,
                                                        definition,
                                                        schema,
                                                        wsdlVisitor,
                                                        null);
                visitor.visit(memberTypeNode);                
                schemaType = visitor.getSchemaType();
                corbaType = visitor.getCorbaType();
                fqName = visitor.getFullyQualifiedName();                
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }

            // Handle multiple struct member declarators
            // <declarators> :== <declarator> { "","" <declarator> }*
            //
            // A multiple declarator must be an identifier (i.e. of type IDENT)
            // and cannot be a previous declared (or forward declared) type
            // (hence the ScopedNameVisitor.accept() call).
            while (memberNode != null
                   && memberNode.getType() == IDLTokenTypes.IDENT
                   && !ScopedNameVisitor.accept(structScope, definition, schema, memberNode, wsdlVisitor)) {

                XmlSchemaType memberSchemaType = schemaType;
                CorbaTypeImpl memberCorbaType = corbaType;
                // needed for anonymous arrays in structs 
                if (ArrayVisitor.accept(memberNode)) {
                    Scope anonScope = new Scope(structScope,
                                                TypesUtils.getCorbaTypeNameNode(memberTypeNode));
                    ArrayVisitor arrayVisitor = new ArrayVisitor(anonScope,
                                                                 definition,
                                                                 schema,
                                                                 wsdlVisitor,
                                                                 null,
                                                                 fqName);
                    arrayVisitor.setSchemaType(schemaType);
                    arrayVisitor.setCorbaType(corbaType);
                    arrayVisitor.visit(memberNode);
                    memberSchemaType = arrayVisitor.getSchemaType();
                    memberCorbaType = arrayVisitor.getCorbaType();
                    fqName = arrayVisitor.getFullyQualifiedName();
                }

                XmlSchemaElement member = 
                    createXmlSchemaElement(memberNode, memberSchemaType, fqName);
                sequence.getItems().add(member);           
                MemberType memberType = 
                    createMemberType(memberNode, memberCorbaType, fqName);            
                struct.getMember().add(memberType);
                
                memberNode = memberNode.getNextSibling();
            }
            
            memberTypeNode = memberNode;
        }
    }
{code}",,,,,,,,,,,,,,,,,,,,,,,,
Fixed the test error of simple frontend,CXF-3326,12498202,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,njiang,njiang,10/Feb/11 07:27,16/Jul/13 19:29,14/Mar/19 02:29,10/Feb/11 08:13,2.2.12,2.3.2,,,,,,,,,,,,,,,,2.3.3,2.4,,,Simple Frontend,,,,0,,,,,,"RountripTest will be failed if it is ran after the SpringBeansTest.
Here is the mail thread[1] which discuses about it.
[1]http://cxf.547215.n5.nabble.com/Build-failure-td3378497.html",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46896,,,2011-02-10 07:27:04.0,,,,,,0|i0a2zj:,56757,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl defines XSD types multiple times in wsdl. ,CXF-3319,12498013,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ulhasbhole,ulhasbhole,ulhasbhole,08/Feb/11 18:05,01/Mar/11 15:53,14/Mar/19 02:29,20/Feb/11 23:30,2.2.12,2.3.2,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,"idl2wsdl generate element types multiple times if 2 interfaces contains same attribute names in one idl file. 
",,,,,,,,,,,,,,,,,09/Feb/11 20:06;ulhasbhole;cxf-3319-2.3.x.patch;https://issues.apache.org/jira/secure/attachment/12470719/cxf-3319-2.3.x.patch,09/Feb/11 20:06;ulhasbhole;cxf-3319-trunk.patch;https://issues.apache.org/jira/secure/attachment/12470720/cxf-3319-trunk.patch,08/Feb/11 18:06;ulhasbhole;duplicateAttribute.idl;https://issues.apache.org/jira/secure/attachment/12470609/duplicateAttribute.idl,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46902,,,Sun Feb 20 23:34:26 UTC 2011,,,,,,0|i0a30f:,56761,,,,,,,,"09/Feb/11 20:06;ulhasbhole;Attached are the patch files for the fix. Currently this fix is causing some other tests to fail since there is a slight change in type generation and message generation to avoid conflict. 

It would be good if someone can review it. 

Regards,

Ulhas Bhole","20/Feb/11 23:34;ulhasbhole;Fix rev.:
2.3.x-fixes: http://svn.apache.org/viewvc?rev=1069188&view=rev
trunk :  http://svn.apache.org/viewvc?rev=1069189&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,
Sample for wstrust13 contains unavailable url ,CXF-3317,12497972,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,amarkevich,amarkevich,08/Feb/11 10:25,18/Apr/11 12:44,14/Mar/19 02:29,15/Mar/11 04:21,2.3.2,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Samples,,,,0,build,,,,,"\apache-cxf-2.3.2\samples\ws_security\interopfest\wstrust13\download_wsdl.xml contains
        <get src=""http://131.107.72.15/ilab/Certs/Certs.zip"" dest=""${build.dir}/Certs.zip""/>
but its unavailable.",,60,60,,0%,60,60,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,46904,,,2011-02-08 10:25:23.0,,,,,,0|i145hr:,232353,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
\apache-cxf-2.3.2\samples\ws_security\interopfest\wstrust13\pom.xml contains wrong CXF version,CXF-3316,12497971,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,amarkevich,amarkevich,08/Feb/11 10:11,18/Apr/11 12:44,14/Mar/19 02:29,11/Mar/11 17:52,2.3.2,,,,,,,,,,,,,,,,,2.3.4,2.4,,,Samples,,,,0,build,,,,,There are 2.3.1-SNAPSHOT,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-11 12:53:13.969,,,no_permission,,Novice,,,,,,,,,,,46905,,,Fri Mar 11 17:52:19 UTC 2011,,,,,,0|i145hz:,232354,,,,,,,,"11/Mar/11 12:53;gmazza;The interop samples, while still included in the distribution, have been taken out of the build process (which, if included, would automatically update the version numbers) because the Microsoft test server they reference (and need in order to retrieve the WSDLs, generate code artifacts, etc.) has been frequently off line as of late.  The CXF team will need to look further into the matter.


","11/Mar/11 17:52;dkulp;
I've put these back into the build.   They don't all work, however, as the MS server is a bit flakey and it's time is definitely off (so the timestamp validation fails).",,,,,,,,,,,,,,,,,,,,,,,,,
Separate loggers for LoggingInInterceptor and LoggingOutInterceptor,CXF-3314,12497864,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,parks8,parks8,07/Feb/11 16:29,01/Mar/11 15:53,14/Mar/19 02:29,15/Feb/11 09:46,2.3,2.3.2,,,,,,,,,,,,,,,,2.3.3,2.4,,,Configuration,,,,2,,,,,,"Requesting separate loggers for LoggingInInterceptor and LoggingOutInterceptor to turn on/off logging for either interceptor.  In CXF 2.3x the interceptors use the same logger that's created in the base class, AbstractLoggingInterceptor, and the log level can't be configured separately for the interceptors.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-14 13:55:15.095,,,no_permission,,,,,,,,,,,,,46907,,,Tue Feb 15 09:46:53 UTC 2011,,,,,,0|i0a30n:,56762,,,,,,,,"14/Feb/11 13:55;marcelstoer;I don't consider this an ""Inprovement"" but a ""Bug"" (JIRA category). Before AbstractLoggingInterceptor was introduced it was possible to have two separate logger configurations for in/out. So, CXF 2.3x broke existing configurations -> it's a bug.",15/Feb/11 09:46;njiang;Applied patch into trunk and 2.3.x branch.,,,,,,,,,,,,,,,,,,,,,,,,,
Request payload as StaxSource: first event is -1,CXF-3305,12497559,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ashakirin,ashakirin,03/Feb/11 13:24,01/Mar/11 15:53,14/Mar/19 02:29,03/Feb/11 17:35,2.3.1,2.3.2,,,,,,,,,,,,,,,,2.3.3,,,,Core,,,,0,,,,,,"Use case: provider is implements Provider<Source> interface and uses PAYLOAD mode. By request, I get a StaxSource which wrappers the Stax reader.

If I go through Stax reader the first event type is -1.
That disturbs, for example, to directly convert stream reader to event reader :

XMLEventReader reader = inputFactory.createXMLEventReader()
Exception: 
Caused by: java.lang.IllegalStateException: Unrecognized event type -1. at com.ctc.wstx.evt.DefaultEventAllocator.allocate(DefaultEventAllocator.java:259))

As far as I skip first event, code above works.

Are there any special reasons to put event (-1) on top of reader?
",Windows,,,,,,,,,,,,,,,,03/Feb/11 13:27;ashakirin;HelloWorldService.zip;https://issues.apache.org/jira/secure/attachment/12470132/HelloWorldService.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46916,,,Thu Feb 03 13:27:47 UTC 2011,,,,,,0|i0a31b:,56765,,,,,,,,03/Feb/11 13:27;ashakirin;Test case is attached,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl fails with NPE if a type cannot be resolved,CXF-3303,12497439,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tmielke,tmielke,02/Feb/11 09:42,01/Mar/11 15:53,14/Mar/19 02:29,15/Feb/11 08:31,2.3.1,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,idl2wsdl,,,,,"Running 
{code}
idl2wsdl -verbose -o . -I . test.idl
{code}

on the attached IDL files produces

{code}
idl2wsdl -verbose -o . -I . test.idl
idl2wsdl - Apache CXF 2.3.x-fuse-SNAPSHOT

 ( module CORBA ( interface Principal { } ) ( interface NamedValue { } ) ( interface TypeCode { } ) )
Error : org.apache.cxf.tools.common.ToolException

org.apache.cxf.tools.common.ToolException: org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:88)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:79)
        at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:75)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:164)
        at org.apache.cxf.tools.corba.IDLToWSDL.main(IDLToWSDL.java:172)
Caused by: org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:220)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:86)
        ... 7 more
Caused by: java.lang.NullPointerException
        at org.apache.cxf.tools.corba.processors.idl.ConstVisitor.visit(ConstVisitor.java:97)
        at org.apache.cxf.tools.corba.processors.idl.DefinitionVisitor.visit(DefinitionVisitor.java:85)
        at org.apache.cxf.tools.corba.processors.idl.ModuleVisitor.visit(ModuleVisitor.java:53)
        at org.apache.cxf.tools.corba.processors.idl.DefinitionVisitor.visit(DefinitionVisitor.java:57)
        at org.apache.cxf.tools.corba.processors.idl.WSDLASTVisitor.visit(WSDLASTVisitor.java:127)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:212)
        ... 8 more
Error : org.apache.cxf.tools.common.ToolException
{code}

This is because the type PolicyType is not defined in the included orb.idl. However a proper error msg should be reported rather than an NPE.",CXF-2.3.x branch,,,,,,,,,,,,,,,,02/Feb/11 09:44;tmielke;CXF-3303.zip;https://issues.apache.org/jira/secure/attachment/12470028/CXF-3303.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-02-15 08:31:42.003,,,no_permission,,,,,,,,,,,,,46918,,,Tue Feb 15 08:31:42 UTC 2011,,,,,,0|i0a31r:,56767,,,,,,,,"15/Feb/11 08:31;ffang;commit fix
http://svn.apache.org/viewvc?rev=1070799&view=rev for trunk
http://svn.apache.org/viewvc?rev=1070806&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
org.codehaus.xfire reference missed in Aegis AnnotationReader,CXF-3302,12497428,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,bmargulies,carymapa,carymapa,02/Feb/11 07:32,18/Apr/11 12:42,14/Mar/19 02:29,02/Feb/11 23:05,2.3.1,2.3.2,,,,,,,,,,,,,,,,2.4,,,,Aegis Databinding,,,,0,,,,,,"org.apache.cxf.aegis.type.java5.AnnotationReader contains string references to org.codehaus.xfire packaged classes.  These references are used in Class.forName() which then generates a ClassNotFound error.

Patch:
{noformat}
Index: rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/java5/AnnotationReader.java
===================================================================
--- rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/java5/AnnotationReader.java	(revision )
+++ rt/databinding/aegis/src/main/java/org/apache/cxf/aegis/type/java5/AnnotationReader.java	(revision )
@@ -43,17 +43,17 @@
             load(""javax.xml.bind.annotation.XmlTransient"");
 
     private static final Class<? extends Annotation> XFIRE_IGNORE_PROPERTY =
-            load(""org.codehaus.xfire.aegis.type.java5.IgnoreProperty"");
+            load(""org.apache.cxf.aegis.type.java5.IgnoreProperty"");
     private static final Class<? extends Annotation> XFIRE_XML_ATTRIBUTE =
-        load(""org.codehaus.xfire.aegis.type.java5.XmlAttribute"");
+            load(""org.apache.cxf.aegis.type.java5.XmlAttribute"");
     private static final Class<? extends Annotation> XFIRE_XML_ELEMENT =
-        load(""org.codehaus.xfire.aegis.type.java5.XmlElement"");
+            load(""org.apache.cxf.aegis.type.java5.XmlElement"");
     private static final Class<? extends Annotation> XFIRE_XML_TYPE =
-        load(""org.codehaus.xfire.aegis.type.java5.XmlType"");
+            load(""org.apache.cxf.aegis.type.java5.XmlType"");
     private static final Class<? extends Annotation> XFIRE_XML_PARAM_TYPE =
-        load(""org.codehaus.xfire.aegis.type.java5.XmlParamType"");
+            load(""org.apache.cxf.aegis.type.java5.XmlParamType"");
     private static final Class<? extends Annotation> XFIRE_XML_RETURN_TYPE =
-        load(""org.codehaus.xfire.aegis.type.java5.XmlReturnType"");
+            load(""org.apache.cxf.aegis.type.java5.XmlReturnType"");
 
 
     @SuppressWarnings(""unchecked"")
{noformat}
",,600,600,,0%,600,600,,,,,,,,,,02/Feb/11 16:27;carymapa;AnnotationReader.xfire-comment.patch;https://issues.apache.org/jira/secure/attachment/12470054/AnnotationReader.xfire-comment.patch,02/Feb/11 16:27;carymapa;AnnotationReader.xfire-removal.patch;https://issues.apache.org/jira/secure/attachment/12470053/AnnotationReader.xfire-removal.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-02-02 12:29:30.306,,,no_permission,,Novice,,,,,,,,,,,46919,,,Wed Feb 02 23:05:39 UTC 2011,,,,,,0|i0uzov:,178923,,,,,,,,02/Feb/11 07:40;carymapa;Change to critical as it kills our client during start-up.,"02/Feb/11 12:29;dkulp;The original code is correct.   It's supposed to be detecting if the older XFire annotations are available and will use them if they are.   If you trace through the load method, it catches Throwable from the Class.forName and returns null.   Thus, I cannot see how this can be an issue.

Also, since those classes are NOT available in any of the CXF test suites, if it was an issue, none of the CXF tests would work.   Thus, I'm not sure why it could be causing an issue for you.


","02/Feb/11 16:15;carymapa;I see how load() catches Throwable, and I see a few JIRA and patches which have steadily walked it from simply ClassNotFoundError to multiple caught exceptions to finally catching Throwable.

I'm not sure how the code could be correct.  My logic for creating the issue is as follows:
* There is an exact correspondence between the referenced org.codehaus.xfire.aegis.type.java5 annotations and the org.apache.cxf.aegis.type.java5 annotations which presently exist;
* In a properly configured system I do not see how XFire 1.x annotations would exist alongside a working CXF 2.3+ based client.

I do see from the code that the patch effectively duplicates the later references to the current annotations, so at best I should re-work the patch to simply remove the XFire annotations.  Is this then meant to cover a very small backwards-compatibility case?","02/Feb/11 16:27;carymapa;Added two alternative patches:
* remove the references to XFire annotations (ie end annotation compatibility across a major release)
* add a big fat comment to ward off meddlers like me. :)","02/Feb/11 17:55;bmargulies;I think that the time has come to eliminate this compatibility code. If no one else objects, I'll apply that patch.
",02/Feb/11 19:42;dkulp;I agree.   Nuke the old xfire things.   :-),"02/Feb/11 23:05;bmargulies;change list r1066681.

Thank you Matt.",,,,,,,,,,,,,,,,,,,,
jaxws frontend should not reference http and local transports,CXF-3299,12497196,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,31/Jan/11 11:50,01/Mar/11 15:53,14/Mar/19 02:29,31/Jan/11 22:42,2.3.2,,,,,,,,,,,,,,,,,2.3.3,,,,JAX-WS Runtime,,,,0,,,,,,"The pom file for the http transport contains dependencies to cxf-rt-transports-local and cxf-rt-transports-http. 
I think the dependencies are need for tests only so I will set the scope to test.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46922,,,Mon Jan 31 22:42:29 UTC 2011,,,,,,0|i0a31z:,56768,,,,,,,,31/Jan/11 22:42;chris@die-schneider.net;Setting test scope is only possible for jdk16. jdk15 and jaxws22 need the http transport in compile scope,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRSUtils uses a split function to find name and value of the query and matrix params,CXF-3298,12497195,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,31/Jan/11 11:42,01/Mar/11 15:53,14/Mar/19 02:29,31/Jan/11 12:24,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,JAX-RS,,,,0,,,,,,"Using the split(""="") prevents the FIQL parser from ignoring non FIQL queries. Besides, as already was reported, the split(""="") is slow",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46923,,,2011-01-31 11:42:32.0,,,,,,0|i0a327:,56769,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl fails with NPE if IDL contains typeprefix keyword,CXF-3297,12497193,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tmielke,tmielke,31/Jan/11 11:01,01/Mar/11 15:53,14/Mar/19 02:29,31/Jan/11 14:09,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,CORBA,idl2wsdl,,,,"If the IDL contains the CORBA 3.0 keyword 'typeprefix', idl2wsdl fails with a NullPointerException:

{code}
idl2wsdl -verbose -o wsdl/ test.idl
idl2wsdl - Apache CXF 2.3.x-fuse-SNAPSHOT

 ( typeprefix Test fusesource.com )
Error : org.apache.cxf.tools.common.ToolException

org.apache.cxf.tools.common.ToolException: org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:88)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:79)
        at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:75)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:164)
        at org.apache.cxf.tools.corba.IDLToWSDL.main(IDLToWSDL.java:172)
Caused by: org.apache.cxf.tools.common.ToolException
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:220)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:86)
        ... 7 more
Caused by: java.lang.NullPointerException
        at org.apache.cxf.tools.corba.processors.idl.TypeDclVisitor.visit(TypeDclVisitor.java:77)
        at org.apache.cxf.tools.corba.processors.idl.DefinitionVisitor.visit(DefinitionVisitor.java:94)
        at org.apache.cxf.tools.corba.processors.idl.WSDLASTVisitor.visit(WSDLASTVisitor.java:127)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:212)
        ... 8 more
Error : org.apache.cxf.tools.common.ToolException
{code}


To reproduce use attached test.idl and run
idl2wsdl -verbose -o wsdl/ test.idl 

Although typeprefix is a keyword added in CORBA 3.0 spec only, we should at the very least raise a meaningful error message that typeprefix is not supported right now. Or even better, handle this keyword correctly.","CXF-2.3.x-SNAPSHOT, Windows",,,,,,,,,,,,,,,,31/Jan/11 11:02;tmielke;CXF-3297.patch;https://issues.apache.org/jira/secure/attachment/12469813/CXF-3297.patch,31/Jan/11 11:01;tmielke;test.idl;https://issues.apache.org/jira/secure/attachment/12469812/test.idl,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-01-31 14:09:18.758,,,no_permission,,,,,,,,,,,,,46924,,,Mon Jan 31 14:09:18 UTC 2011,,,,,,0|i0a32f:,56770,,,,,,,,"31/Jan/11 11:02;tmielke;Attaching a proposed patch based on not supporting the CORBA 3.0 ""typedef"" keyword. 
If CXF does support it, then the patch won't help.
","31/Jan/11 14:09;ffang;apply patch on behalf of Torsten with thanks
http://svn.apache.org/viewvc?rev=1065609&view=rev for trunk
http://svn.apache.org/viewvc?rev=1065620&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java tool should always use catalog to resovle the overwriten url firstly ,CXF-3296,12497172,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,31/Jan/11 05:38,01/Mar/11 15:53,14/Mar/19 02:29,31/Jan/11 05:57,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,"recently there're two tests failure
org.apache.cxf.tools.wsdlto.jaxws.CodeGenBugTest.testCatalog2 
org.apache.cxf.tools.wsdlto.jaxws.CodeGenBugTest.testCatalog3 

those tests use catalog to overwrite a dummy url http://example.org/wsdl to the local addNumbers.wsdl, however, the current logic is check the dummy url first and if it failed then use catalog resolver, that's not a problem if 
http://example.org/ doesn't exist at all, but lately there's a site http://example.org/ so get no chance to use the catalog resolver which we intend to use, so that we get those test failure.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46925,,,Mon Jan 31 05:57:47 UTC 2011,,,,,,0|i0a32n:,56771,,,,,,,,"31/Jan/11 05:57;ffang;commit fix
http://svn.apache.org/viewvc?rev=1065483&view=rev for trunk
http://svn.apache.org/viewvc?rev=1065486&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl tool fails for some comment format,CXF-3295,12497150,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,30/Jan/11 06:38,01/Mar/11 15:53,14/Mar/19 02:29,30/Jan/11 08:15,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,,,,,0,,,,,,"for example, if comment like this
/**
some comment
**/
then we get exception like
Error : line 73:3: unexpected char: '/'

org.apache.cxf.tools.common.ToolException: line 73:3: unexpected char: '/'
	at org.apache.cxf.tools.corba.processors.idl.IDLProcessor.process(IDLProcessor.java:73)
	at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:78)
	at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:75)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
	at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:164)
	at org.apache.cxf.tools.corba.IDLToWSDLTest.testExternalInterfaceRef(IDLToWSDLTest.java:359)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: line 73:3: unexpected char: '/'
	at org.apache.cxf.tools.corba.processors.idl.IDLLexer.nextToken(IDLLexer.java:356)
	at antlr.TokenStreamHiddenTokenFilter.consume(TokenStreamHiddenTokenFilter.java:38)
	at antlr.TokenStreamHiddenTokenFilter.nextToken(TokenStreamHiddenTokenFilter.java:134)
	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
	at antlr.TokenBuffer.LA(TokenBuffer.java:80)
	at antlr.LLkParser.LA(LLkParser.java:52)
	at antlr.Parser.match(Parser.java:210)
	at org.apache.cxf.tools.corba.processors.idl.IDLParser.module(IDLParser.java:573)
	at org.apache.cxf.tools.corba.processors.idl.IDLParser.definition(IDLParser.java:174)
	at org.apache.cxf.tools.corba.processors.idl.IDLParser.specification(IDLParser.java:86)
	at org.apache.cxf.tools.corba.processors.idl.IDLProcessor.process(IDLProcessor.java:71)
	... 26 more

However, if we change the comment a little bit like

/**
some comment
 **/    
only difference between the one doesn't work is this working one last line start with a whitespace

or
/*
some comment
*/
then it works",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46926,,,Sun Jan 30 08:15:46 UTC 2011,,,,,,0|i0a32v:,56772,,,,,,,,"30/Jan/11 07:19;ffang;this is a bug from the IdlPreprocessorReader, fix is coming soon...","30/Jan/11 08:15;ffang;commit fix
http://svn.apache.org/viewvc?rev=1065203&view=rev for trunk
http://svn.apache.org/viewvc?rev=1065221&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl tool fails if inherit interface has oneway method,CXF-3294,12497146,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,30/Jan/11 03:30,01/Mar/11 15:53,14/Mar/19 02:29,30/Jan/11 06:22,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,,,,,0,,,,,,"NPE throw in this case, we need check if OutputMessage  is null in PortTypeVisitor.visitInterfaceInheritanceSpec()",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46927,,,Sun Jan 30 06:22:20 UTC 2011,,,,,,0|i0a333:,56773,,,,,,,,"30/Jan/11 06:22;ffang;commit fix
http://svn.apache.org/viewvc?rev=1065193&view=rev for trunk
http://svn.apache.org/viewvc?rev=1065195&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl tool fails if parameter refer an interface from other module in an included idl file,CXF-3293,12497145,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,30/Jan/11 03:28,01/Mar/11 15:53,14/Mar/19 02:29,30/Jan/11 05:52,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46928,,,Sun Jan 30 05:52:19 UTC 2011,,,,,,0|i0a33b:,56774,,,,,,,,"30/Jan/11 05:52;ffang;commit fix
http://svn.apache.org/viewvc?rev=1065189&view=rev for trunk
http://svn.apache.org/viewvc?rev=1065192&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
MultipartProvider does not support reading Maps,CXF-3292,12496929,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,27/Jan/11 11:58,01/Mar/11 15:53,14/Mar/19 02:29,27/Jan/11 12:21,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,,,,,0,,,,,,"JAX-RS resource method may return a Map, keys are media types, values are attachments.
MultipartProvider does support writing such maps but not reading. This applies to multipart/related, etc
but note that reading simple multipart/form-data into MultivaluedMaps works fine 
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46929,,,2011-01-27 11:58:30.0,,,,,,0|i0a33j:,56775,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java fails to generate working client code if web service and portType have the same name,CXF-3290,12496785,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,reimer,reimer,26/Jan/11 10:24,01/Mar/11 15:53,14/Mar/19 02:29,04/Feb/11 02:39,2.3.2,,,,,,,,,,,,,,,,,2.3.3,,,,Tooling,,,,0,,,,,,"A Naming Problem similar to #CXF-1979:
if your wsdls define:

<wsdl:service name=""CallManagement"" ... 
<wsdl:portType name=""CallManagement"">

wsdl2java generates

public class CallManagement extends Service {

but this class imports a Class CallManagement  from the namespace defined in the portType.

this leads to a compiler error (Line is the import statement)
""CallManagement is already defined in this compilation unit""

so the problem is:

package bar;
import foo.Bar;
public class Bar {

can be avoided only with full qualified references to foo.Bar without the import.
",,,,,,,,,,,,,,,,,01/Feb/11 15:26;reimer;MyBugService.java;https://issues.apache.org/jira/secure/attachment/12469934/MyBugService.java,01/Feb/11 15:26;reimer;bug.wsdl;https://issues.apache.org/jira/secure/attachment/12469932/bug.wsdl,01/Feb/11 15:26;reimer;bug2.wsdl;https://issues.apache.org/jira/secure/attachment/12469933/bug2.wsdl,,,,,3.0,,,,,,,,,,,,,,,,,,,,2011-01-26 14:09:22.333,,,no_permission,,,,,,,,,,,,,46931,,,Tue Feb 01 15:22:20 UTC 2011,,,,,,0|i0a33r:,56776,,,,,,,,26/Jan/11 14:09;gmazza;What is the wsdl2java statement you use to generate the artifacts?,"28/Jan/11 04:09;gmazza;I wasn't able to duplicate, even using the ""-all"" switch to generate everything.  If you can provide a simple WSDL that has this problem, as well as let us know the wsdl2java settings you used, we can reopen.","01/Feb/11 15:22;reimer;So here's the wsdla2java call (we use the maven-cxf-plugin)
{code}
wsdl2java -d ...\target\generated-sources\cxf -verbose -db jaxb file:/.../bug.wsdl
{code}

I've attached the wsdls and this class ist generated:

{code}
package cxf.bugs.services.bug1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import cxf.bugs.services.bug2.MyBugService;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.2
 * 2011-02-01T16:15:56.223+01:00
 * Generated source version: 2.3.2
 * 
 */


@WebServiceClient(name = ""myBugService"", 
                  wsdlLocation = ""bug.wsdl"",
                  targetNamespace = ""http://bugs.cxf/services/bug1"") 
public class MyBugService extends Service {

...

    @WebEndpoint(name = ""myBug1"")
    public MyBugService getMyBug1(WebServiceFeature... features) {
        return super.getPort(MyBug1, MyBugService.class, features);
    }

{code}",,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl fails if reference to interface is used inside the interface itself.,CXF-3289,12496774,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tmielke,tmielke,26/Jan/11 08:37,01/Mar/11 15:53,14/Mar/19 02:29,27/Jan/11 06:34,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,"idl2wsdl fails on the following IDL interface:
{code:title=test.idl}
module Test {

  interface ForTesting {

    readonly attribute ForTesting session;

    void greetMe(in ForTesting pointer, in string who);
    
  };
};
{code}

with the error

{code}
idl2wsdl -verbose -I .. -I . -o ../../../wsdl/ ../../../test.idl
idl2wsdl - Apache CXF 2.3.x-fuse-SNAPSHOT

 ( module Test ( interface ForTesting { ( attribute readonly ForTesting session ) ( greetMe void ( in string who ) ) } ) )
Error : org.apache.cxf.tools.common.ToolException: java.lang.RuntimeException: [ParamTypeSpecVisitor] Invalid IDL: unknown element ForTesting

org.apache.cxf.tools.common.ToolException: org.apache.cxf.tools.common.ToolException: java.lang.RuntimeException: [ParamTypeSpecVisitor] Invalid IDL: unknown element ForTesting
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:88)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:79)
        at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:75)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:164)
        at org.apache.cxf.tools.corba.IDLToWSDL.main(IDLToWSDL.java:172)
Caused by: org.apache.cxf.tools.common.ToolException: java.lang.RuntimeException: [ParamTypeSpecVisitor] Invalid IDL: unknown element ForTesting
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:220)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:86)
        ... 7 more
Caused by: java.lang.RuntimeException: java.lang.RuntimeException: [ParamTypeSpecVisitor] Invalid IDL: unknown element ForTesting
        at org.apache.cxf.tools.corba.processors.idl.PortTypeVisitor.visitInterface(PortTypeVisitor.java:201)
        at org.apache.cxf.tools.corba.processors.idl.PortTypeVisitor.visit(PortTypeVisitor.java:93)
        at org.apache.cxf.tools.corba.processors.idl.DefinitionVisitor.visit(DefinitionVisitor.java:66)
        at org.apache.cxf.tools.corba.processors.idl.ModuleVisitor.visit(ModuleVisitor.java:53)
        at org.apache.cxf.tools.corba.processors.idl.DefinitionVisitor.visit(DefinitionVisitor.java:57)
        at org.apache.cxf.tools.corba.processors.idl.WSDLASTVisitor.visit(WSDLASTVisitor.java:127)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:212)
        ... 8 more
Caused by: java.lang.RuntimeException: [ParamTypeSpecVisitor] Invalid IDL: unknown element ForTesting
        at org.apache.cxf.tools.corba.processors.idl.ParamTypeSpecVisitor.visit(ParamTypeSpecVisitor.java:58)
        at org.apache.cxf.tools.corba.processors.idl.AttributeVisitor.generateWrappedDocElement(AttributeVisitor.java:218)
        at org.apache.cxf.tools.corba.processors.idl.AttributeVisitor.generateGetter(AttributeVisitor.java:123)
        at org.apache.cxf.tools.corba.processors.idl.AttributeVisitor.visit(AttributeVisitor.java:106)
        at org.apache.cxf.tools.corba.processors.idl.PortTypeVisitor.visitInterface(PortTypeVisitor.java:164)
        ... 14 more
Error : org.apache.cxf.tools.common.ToolException: java.lang.RuntimeException: [ParamTypeSpecVisitor] Invalid IDL: unknown element ForTesting
{code}

Note that the interface name ForTesting is used as an attribute and operation parameter inside the interface itself. ",CXF-2.3.x branch,,,,,,,,,,,,,,,,26/Jan/11 08:37;tmielke;test.idl;https://issues.apache.org/jira/secure/attachment/12469397/test.idl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-27 06:34:45.284,,,no_permission,,,,,,,,,,,,,46932,,,Thu Jan 27 06:34:45 UTC 2011,,,,,,0|i0a33z:,56777,,,,,,,,"27/Jan/11 06:34;ffang;commit fix
http://svn.apache.org/viewvc?rev=1064000&view=rev for trunk
http://svn.apache.org/viewvc?rev=1064002&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple Client.getResponse() calls do not work,CXF-3288,12496698,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,25/Jan/11 16:26,01/Mar/11 15:53,14/Mar/19 02:29,25/Jan/11 16:30,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,JAX-RS,,,,0,,,,,,"Calling webClient.getResponse() works only for the first call, subsequent calls return an empty Response.

Internally, the response state is represented by ResponseBuilder which resets its state after ResponseBuilder.build() as required by the java docs. Hence only the first webClient.getResponse() returns a proper Response and thus

Response r = webClient.getResponse();
r.getStatus();
r.getEntity();
r.getMetaData();

will work fine.

For multiple webClient.getResponse() calls to work the responseBuilder needs be cloned which is fairly cheap operation which can be easily avoided being called multiple times by doing a single webClient.getResponse().


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46933,,,2011-01-25 16:26:37.0,,,,,,0|i0a347:,56778,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl tool should be able to honor local keyword,CXF-3286,12496654,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,25/Jan/11 08:48,01/Mar/11 15:53,14/Mar/19 02:29,25/Jan/11 09:46,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46935,,,Tue Jan 25 09:46:36 UTC 2011,,,,,,0|i0a34f:,56779,,,,,,,,"25/Jan/11 09:46;ffang;commit fix
http://svn.apache.org/viewvc?rev=1063185&view=rev for trunk
http://svn.apache.org/viewvc?rev=1063191&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Addressing documentation is incomplete,CXF-3284,12496595,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,petrsnd,petrsnd,24/Jan/11 20:00,05/Dec/13 19:09,14/Mar/19 02:29,18/Mar/13 18:44,2.3.2,,,,,,,,,,,,,,,,,,,,,Documentation,,,,0,,,,,,"In the User's Guide, there is missing documentation for WS-Addressing support (http://cxf.apache.org/docs/ws-addressing.html).  Specifically, there are two empty sections marked ""TODO"": 1) Enabling WS-Addressing with WS-Policy, and 2) Configuring your actions and setting up decoupled endpoints.

I am new to CXF, and I'm using it on a project to communicate with a .NET WCF web service that users a wsHttpBinding and is secured with SPNEGO and SSL.  To complicate the problem further, there will not be any WSDL available from the endpoint when my CXF client is deployed.  The CXF client will not be able to rely on the presence of the EndpointReference in the port definition to determine how to properly configure WS-Addressing.  I was wondering if an example could be given.

I know how to replace the endpoint address using the binding provider:

        BindingProvider provider = (BindingProvider)iHelloPort;
        provider.getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, url);

How do I configure the rest of the information needed by WS-Addressing?  Specifically, the Identity of the endpoint.  See below:


The WSDL (just includes the port definition) I am working from is similar to:

<?xml version=""1.0"" encoding=""utf-8""?>
<wsdl:definitions name=""MyService"" targetNamespace=""http://tempuri.org/""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:wsa10=""http://www.w3.org/2005/08/addressing""
    xmlns:wsx=""http://schemas.xmlsoap.org/ws/2004/09/mex""
    xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/""
    xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
    xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""
    xmlns:wsap=""http://schemas.xmlsoap.org/ws/2004/08/addressing/policy""
    xmlns:msc=""http://schemas.microsoft.com/ws/2005/12/wsdl/contract""
    xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing""
    xmlns:wsam=""http://www.w3.org/2007/05/addressing/metadata""
    xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl"" xmlns:tns=""http://tempuri.org/""
    xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
    xmlns:i0=""http://example.com/my/service""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"">
    <wsp:Policy wsu:Id=""WSHttpBinding_IHello_policy"">
        <wsp:ExactlyOne>
            <wsp:All>
                <http:NegotiateAuthentication
                    xmlns:http=""http://schemas.microsoft.com/ws/06/2004/policy/http""/>
                <sp:TransportBinding xmlns:sp=""http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"">
                    <wsp:Policy>
                        <sp:TransportToken>
                            <wsp:Policy>
                                <sp:HttpsToken RequireClientCertificate=""false""/>
                            </wsp:Policy>
                        </sp:TransportToken>
                        <sp:AlgorithmSuite>
                            <wsp:Policy>
                                <sp:Basic256/>
                            </wsp:Policy>
                        </sp:AlgorithmSuite>
                        <sp:Layout>
                            <wsp:Policy>
                                <sp:Strict/>
                            </wsp:Policy>
                        </sp:Layout>
                    </wsp:Policy>
                </sp:TransportBinding>
                <wsaw:UsingAddressing/>
            </wsp:All>
        </wsp:ExactlyOne>
    </wsp:Policy>
    <wsdl:import namespace=""http://example.com/my/service""
        location=""hello-0.wsdl""/>
    <wsdl:types/>
    <wsdl:binding name=""WSHttpBinding_IHello"" type=""i0:IHello"">
        <wsp:PolicyReference URI=""#WSHttpBinding_IHello_policy""/>
        <soap12:binding transport=""http://schemas.xmlsoap.org/soap/http""/>
        <wsdl:operation name=""GetMessage"">
            <soap12:operation
                soapAction=""http://example.com/my/service/IHello/GetMessage""
                style=""document""/>
            <wsdl:input name=""GetMessageRequest"">
                <soap12:body use=""literal""/>
            </wsdl:input>
            <wsdl:output name=""GetMessageResponse"">
                <soap12:body use=""literal""/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name=""MyService"">
        <wsdl:port name=""WSHttpBinding_IHello"" binding=""tns:WSHttpBinding_IHello"">
            <soap12:address
                location=""https://example.com/MyService/service.svc/Hello""/>
            <wsa10:EndpointReference>
                <wsa10:Address>
                    https://example.com/MyService/service.svc/Hello </wsa10:Address>
                <Identity xmlns=""http://schemas.xmlsoap.org/ws/2006/02/addressingidentity"">
                    <Spn>host/SERVER.example.com</Spn>
                </Identity>
            </wsa10:EndpointReference>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>",N/A,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-03-18 18:44:57.043,,,no_permission,,Moderate,,,,,,,,,,,46937,,,Mon Mar 18 18:44:57 UTC 2013,,,,,,0|i1affb:,268965,,,,,,,,18/Mar/13 18:44;dkulp;Added some notes to the docs about the various ways to set the ws-addressing things.,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl does not process multiple include directories -I <dir> correctly.,CXF-3280,12496559,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tmielke,tmielke,24/Jan/11 14:58,01/Mar/11 15:53,14/Mar/19 02:29,25/Jan/11 11:46,2.3.2,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,"If you run

{code}
idl2wsdl -verbose -o ../../../wsdl/  -I . -I ../../tmf/ -I . -I ../ emsMgr.idl
{code}

with multiple -I <dir> options specified, idl2wsdl will only process the first occurrence of -I <dir> and skip all others. As a result included IDL files that reside in different subdirectories are not found.

That can result in errors like this one, where it only tries to load included IDL files from the first -I location rather than also trying from -I subdir2.

{code}
idl2wsdl -verbose -o C:/Temp/ -I subdir1 -I subdir2 Parent.idl
idltowsdl -verbose -o C:/Temp/ -I subdir1 -I subdir2 Parent.idl
idltowsdl - Progress FUSE Services Framework 2.2.10-fuse-00-00

Error : java.io.FileNotFoundException: C:\FUSE\src\CXF\cxf-2.3.x-fuse-branch\tools\corba\src\test\resources\idl\subdir1\Included2.idl (The system cannot find the file specified)

org.apache.cxf.tools.common.ToolException: java.io.FileNotFoundException: C:\FUSE\src\CXF\cxf-2.3.x-fuse-branch\tools\corba\src\test\resources\idl\subdir1\Included2.idl (The system cannot find the file specified)
        at org.apache.cxf.tools.corba.processors.idl.IDLProcessor.process(IDLProcessor.java:72)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:78)
        at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:73)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:162)
        at org.apache.cxf.tools.corba.IDLToWSDL.main(IDLToWSDL.java:170)
Caused by: java.io.FileNotFoundException: C:\FUSE\src\CXF\cxf-2.3.x-fuse-branch\tools\corba\src\test\resources\idl\subdir1\Included2.idl (The system cannot find the file specified)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.<init>(FileInputStream.java:106)
        at java.io.FileInputStream.<init>(FileInputStream.java:66)
        at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:70)
        at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:161)
        at java.net.URL.openStream(URL.java:1009)
        at org.apache.cxf.tools.corba.idlpreprocessor.IncludeStackEntry.<init>(IncludeStackEntry.java:40)
        at org.apache.cxf.tools.corba.idlpreprocessor.IdlPreprocessorReader.pushInclude(IdlPreprocessorReader.java:108)
        at org.apache.cxf.tools.corba.idlpreprocessor.IdlPreprocessorReader.handleInclude(IdlPreprocessorReader.java:297)
        at org.apache.cxf.tools.corba.idlpreprocessor.IdlPreprocessorReader.fillBuffer(IdlPreprocessorReader.java:174)
        at org.apache.cxf.tools.corba.idlpreprocessor.IdlPreprocessorReader.<init>(IdlPreprocessorReader.java:100)
        at org.apache.cxf.tools.corba.processors.idl.IDLProcessor.process(IDLProcessor.java:57)
        ... 7 more
Error : java.io.FileNotFoundException: C:\FUSE\src\CXF\cxf-2.3.x-fuse-branch\tools\corba\src\test\resources\idl\subdir1\Included2.idl (The system cannot find the file specified)
{code}
",,,,,,,,,,,,,,,,,25/Jan/11 09:23;tmielke;CXF-3280.patch;https://issues.apache.org/jira/secure/attachment/12469264/CXF-3280.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-25 07:48:56.621,,,no_permission,,,,,,,,,,,,,46941,,,Tue Jan 25 11:46:54 UTC 2011,,,,,,0|i0a34v:,56781,,,,,,,,24/Jan/11 14:59;tmielke;Suggesting patch based on 2.3.x branch.,24/Jan/11 15:51;tmielke;Attaching another patch that includes a JUnit test as well. ,"25/Jan/11 07:48;ffang;Hi Torsten,

Thanks for the patch.
And your patch left some new added files/folder like Parent.wsdl, expected_Parent.wsdl, subdir1, subdir2.

You can use
svn add new_add_file_or_folder
before you run
svn diff 
to generate the patch which should contain new added files/folders.

Thanks
Freeman","25/Jan/11 09:23;tmielke;Sorry, I indeed forgot to check in these files to svn. Attached is the new version of the patch. ","25/Jan/11 11:46;ffang;apply patch on behalf of Torsten with thanks
http://svn.apache.org/viewvc?rev=1063236&view=rev for trunk
http://svn.apache.org/viewvc?rev=1063238&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,
soap headers can't be carried back when exception happen,CXF-3277,12496490,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,24/Jan/11 08:50,01/Mar/11 15:53,14/Mar/19 02:29,25/Jan/11 08:37,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,,,,,0,,,,,,"for example we have a methoh like 
{code}
public BareDocumentResponse testDocLitFault(String in) throws BadRecordLitFault {
        System.out.println(""Executing testDocLitFault sayHi\n"");
        List<Header> headers = new ArrayList<Header>();
        Header header = null;
        try {
            header = new Header(new QName(""http://test"", ""test""), 
                                new String(""test""), new JAXBDataBinding(String.class));
        } catch (JAXBException e) {
            e.printStackTrace();
        }                        
        headers.add(header);
        context.getMessageContext().put(Header.HEADER_LIST, headers);
        throw new BadRecordLitFault(""int fault"", 5);

    }
{code}
we explicitly put some headers for response message, it works in normal response, but doesn't work when throw Fault/Exception",,,,,,,,,,,,,,,,,24/Jan/11 08:52;ffang;CXF-3277-test.patch;https://issues.apache.org/jira/secure/attachment/12469130/CXF-3277-test.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46944,,,Tue Jan 25 08:37:57 UTC 2011,,,,,,0|i0a35b:,56783,,,,,,,,24/Jan/11 08:52;ffang;testcase to expose this problem,"25/Jan/11 08:37;ffang;commit fix
http://svn.apache.org/viewvc?rev=1063157&view=rev for trunk
http://svn.apache.org/viewvc?rev=1063171&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,
JAX RS @FormParam error,CXF-3274,12496415,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,sergey_beryozkin,chrismattmann,chrismattmann,23/Jan/11 02:22,01/Mar/11 15:53,14/Mar/19 02:29,24/Jan/11 22:47,2.2.7,2.3.2,2.4,,,,,,,,,,,,,,,2.3.3,2.4,,,JAX-RS,,,,0,,,,,,"Hi Guys:

I'm noticing a bug when trying to read the value of a @FormParam variable within a Resource Service. I've reported what I'm seeing on the mailing list:

http://s.apache.org/jc

I've also confirmed that this isn't related to CXF-3147. 

I've filed OODT-118 to track this on the OODT end.

Any help would be appreciated.

Cheers,
Chris
",testing within Apache OODT cas-curator component,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-25 09:32:26.031,,,no_permission,,,,,,,,,,,,,46947,,,Tue Jan 25 09:32:26 UTC 2011,,,,,,0|i0a35j:,56784,,,,,,,,"23/Jan/11 03:56;chrismattmann;Please see OODT-118. I've developed a work-around for this that will get the OODT 0.2 release out the door, but it strikes me as odd that CXF doesn't support this since this exact same code worked with Jersey.",25/Jan/11 04:07;chrismattmann;Thanks Sergey! So 2.3.3 should fix this?,"25/Jan/11 09:32;sergey_beryozkin;Hi Chris - yes, 2.3.3 will fix it.
",,,,,,,,,,,,,,,,,,,,,,,,
WS-RM ConcurrentModificationException from unsynchronized use of SequenceAcknowledgement,CXF-3273,12496414,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,dsosnoski,dsosnoski,23/Jan/11 01:49,18/Apr/11 12:42,14/Mar/19 02:29,21/Feb/11 09:56,2.3.2,,,,,,,,,,,,,,,,,2.4,,,,WS-* Components,,,,0,,,,,,"The WS-RM code needs to use synchronized blocks for both modifying and accessing SequenceAcknowledgement. Currently the code appears to use synchronized blocks for modifying SequenceAcknowledgement information, but not for reading it (for example in RMSoapInterceptor.encode(SoapMessage, RMProperties), where the SequenceAcknowledgement is serialized to XML). This can result in ConcurrentModificationException:

     [java] java.util.ConcurrentModificationException
     [java]     at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:449)
     [java]     at java.util.AbstractList$Itr.next(AbstractList.java:420)
     [java]     at com.sun.xml.bind.v2.runtime.reflect.Lister$CollectionLister$1.next(Lister.java:284)
     [java]     at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:135)
     [java]     at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:155)
     [java]     at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:340)
     [java]     at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:696)
     [java]     at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:152)
     [java]     at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:189)
     [java]     at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:316)
     [java]     at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:323)
     [java]     at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:72)
     [java]     at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:494)
     [java]     at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:315)
     [java]     at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:244)
     [java]     at javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(AbstractMarshallerImpl.java:109)
     [java]     at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.encodeProperty(RMSoapInterceptor.java:396)
     [java]     at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.encode(RMSoapInterceptor.java:206)
     [java]     at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.encode(RMSoapInterceptor.java:154)
     [java]     at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.mediate(RMSoapInterceptor.java:138)
     [java]     at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.handleMessage(RMSoapInterceptor.java:126)
     [java]     at org.apache.cxf.ws.rm.soap.RMSoapInterceptor.handleMessage(RMSoapInterceptor.java:93)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
     [java]     at org.apache.cxf.ws.addressing.ContextUtils.rebaseResponse(ContextUtils.java:403)
     [java]     at org.apache.cxf.ws.addressing.MAPAggregator.mediate(MAPAggregator.java:547)
     [java]     at org.apache.cxf.ws.addressing.MAPAggregator.handleMessage(MAPAggregator.java:227)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
     [java]     at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:311)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:280)
     [java]     at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
     [java]     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:922)
     [java]     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:860)
     [java]     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
     [java]     at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
     [java]     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:114)
     [java]     at org.eclipse.jetty.server.Server.handle(Server.java:352)
     [java]     at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:596)
     [java]     at org.eclipse.jetty.server.HttpConnection$RequestHandler.content(HttpConnection.java:1066)
     [java]     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:805)
     [java]     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:212)
     [java]     at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:426)
     [java]     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:510)
     [java]     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.access$000(SelectChannelEndPoint.java:34)
     [java]     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)
     [java]     at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:450)
     [java]     at java.lang.Thread.run(Thread.java:595)
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46948,,,Mon Feb 21 09:56:03 UTC 2011,,,,,,0|i145i7:,232355,,,,,,,,21/Feb/11 09:56;dsosnoski;Synchronized all use of collections in WS-RM acknowledgement processing (revision 1072914).,,,,,,,,,,,,,,,,,,,,,,,,,,
"WS-RM returns Fault for duplicate message received, should probably return acknowledgement instead",CXF-3272,12496406,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dsosnoski,dsosnoski,dsosnoski,23/Jan/11 01:00,16/Feb/15 16:09,14/Mar/19 02:29,23/Jun/14 01:35,2.3.2,,,,,,,,,,,,,,,,,3.0.1,,,,WS-* Components,,,,0,,,,,,"The WS-RM Destination code currently throws an exception when a duplicate message is received if using AtMostOnce or ExactlyOnce delivery assurances. This gets turned into a Fault which means nothing to the RM Source, and may interfere with the proper operation of other WS-RM implementations.

A better way to handle this is to return an HTTP 200 OK status (or equivalent for other transports) along with a SequenceAcknowledgement, so that the RM Source gets back information to help it in recovery.

For one-way scenarios this can just be returned directly. For two-way scenarios it should be returned along with a copy of the application response to the original message (at least if an Offer was included in the original CreateSequence and accepted by the RM Destination, meaning RM is operating in both directions of message flow - see the Replay model implemented by Metro, along with at least some versions of .Net and Axis2/Sandesha2: http://wso2.org/library/2792).

Metro's handling is interesting. If RM is operating in the response direction they naturally hold a copy of each response message until acknowledged, but then even after the message has been acknowledged they use a WeakReference to keep it available until it is reclaimed by GC. If RM is *not* operating in the response direction they still appear to keep the response available with a WeakReference, allowing it to be resent in response to a duplicate message. That seems like a good approach.

If the response message is not available, is there any reason not to use an HTTP 200 response and send back a SOAP message with only the SequenceAcknowledgement?",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-05-19 13:36:53.329,,,no_permission,,,,,,,,,,,,,46949,,,Mon Jun 23 01:35:01 UTC 2014,,,,,,0|i1afgv:,268972,,,,,,,,"19/May/14 13:36;ay;Hi Dennis,
do you have an update to this item?
thanks.
regards, aki
","19/May/14 21:10;dsosnoski;I'll get a fix in for this. Though in looking it over now I don't see any reason to hold WeakReferences to the messages - if the response has been acknowledged we can drop it, and if the same request is sent in again (which shouldn't happen, since the response would include an acknowledgement of the request the first time it was sent) we can just use an empty SOAP message.","19/May/14 22:47;ay;Hi Dennis,
For the oneway case, most clients expect to receive an ack message with the current ack ranges. If you can get this oneway handling working, that would be great. 

Regarding the request-response case, the response message is queued and its delivery is handled independently of any subsequent retransmission of the original request, right? In that case,  I think not including (or triggering) the response as you suggest seems to be the correct behavior.

thanks.
regards, aki",23/Jun/14 01:35;dsosnoski;Fixed by http://git-wip-us.apache.org/repos/asf/cxf/commit/c613aa49,,,,,,,,,,,,,,,,,,,,,,,
WS-RM code does not support InOrder assurances,CXF-3271,12496367,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,dsosnoski,dsosnoski,22/Jan/11 10:30,01/Mar/11 15:53,14/Mar/19 02:29,03/Feb/11 21:33,2.3.2,,,,,,,,,,,,,,,,,2.3.3,,,,WS-* Components,,,,0,,,,,,The WS-RM implementation does not support InOrder assurances. When InOrder is used alone (which is effectively the same as combined with AtLeastOnce) or with AtMostOnce messages are just delivered in whatever order they arrive. When InOrder is combined with ExactlyOnce the code never delivers any messages (due to a logic error in DestinationSequence.allPredecessorsAcknowledged()). See attached integration test and policy documents to demonstrate the issues.,,,,,,,,,,,,,,,,,23/Jan/11 11:27;dsosnoski;CXF-3271-patch.txt;https://issues.apache.org/jira/secure/attachment/12469071/CXF-3271-patch.txt,22/Jan/11 11:08;dsosnoski;inorder.zip;https://issues.apache.org/jira/secure/attachment/12469038/inorder.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-02-03 21:33:13.171,,,no_permission,,,,,,,,,,,,,46950,,,Thu Feb 03 21:33:13 UTC 2011,,,,,,0|i0a35r:,56785,,,,,,,,22/Jan/11 10:35;dsosnoski;Files to go into /systests/ws-specs/src/test/java/org/apache/cxf/systest/ws/rm,"22/Jan/11 11:08;dsosnoski;Integration test and associated policy files, to be run from /systests/ws-specs/src/test/java/org/apache/cxf/systest/ws/rm","23/Jan/11 11:27;dsosnoski;Here's an Eclipse-generated patch to get InOrder working. It's not necessarily ideal, in that it still has a thread associated with each message waiting for its turn to be delivered (potentially including duplicate messages), but at least it gets the basics working.

Note that this includes the test code and files provided earlier to demonstrate the problem, so applying the patch is all that needs to be done.",26/Jan/11 09:06;dsosnoski;Committed fix to https://svn.apache.org/repos/asf/cxf/sandbox/ws-rm-fixes (revision 1063646).,"03/Feb/11 21:33;dkulp;
Patch applied.

I modified the patch so that if continuations are available, it will use them instead of blocking on the thread.

One optimization that COULD be done is instead of wakeing up ALL the waiting continuations, we could just fine the one for the next in the sequence (and duplicates) and wake them up.  

Also, the Jetty continuations don't work with one-ways.  I'll need to figure out what to do about that.  Not sure it really matters for most cases though.   The fallback to the wait() method works fine.

",,,,,,,,,,,,,,,,,,,,,,
CXF uses the incorrect namespace to refer to an Encrypted Key,CXF-3266,12496270,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,21/Jan/11 12:39,01/Mar/11 15:53,14/Mar/19 02:29,21/Jan/11 15:21,2.3.1,,,,,,,,,,,,,,,,,2.3.3,2.4,,,WS-* Components,,,,0,,,,,,"CXF uses the incorrect namespace to refer to an Encrypted Key. This issue has been raised before on the mailing list:

http://cxf.547215.n5.nabble.com/WS-SecurityPolicy-Interoperability-Problem-td568400.html

It should use the WS-Security 1.1 namespace, but instead it uses the SAML spec namespace.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46955,,,2011-01-21 12:39:45.0,,,,,,0|i0a35z:,56786,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compilation error for schemas with types named as standard java classes,CXF-3265,12496268,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,grimsell,grimsell,21/Jan/11 12:30,18/Apr/11 12:44,14/Mar/19 02:29,07/Apr/11 22:07,2.3.1,,,,,,,,,,,,,,,,,2.3.4,2.4,,,,,,,0,,,,,,"I have a schema with a complex type named System. This results in a class named System. 
When the generated source code compiles I get an error because the service class uses java.lang.System without an import. 

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure
c:\code\svn\sandbox\new-iipax-archive-ws\src\main\java\se\idainfront\schema\archive\Archive_Service.java:[37,18] cannot find symbol
symbol  : variable err
location: class se.idainfront.schema.archive.System",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5923,,,2011-01-21 12:30:47.0,,,,,,0|i0b9hr:,63650,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl tool shouldn't fail when encounter #pragma directive,CXF-3264,12496231,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,21/Jan/11 05:54,01/Mar/11 15:53,14/Mar/19 02:29,24/Jan/11 05:43,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46956,,,Mon Jan 24 05:43:32 UTC 2011,,,,,,0|i0a367:,56787,,,,,,,,21/Jan/11 09:10;ffang;the #pragma prefix should be taken into account when generate corba:binding repositoryID,"24/Jan/11 05:43;ffang;commit fix
http://svn.apache.org/viewvc?rev=1062651&view=rev for trunk
http://svn.apache.org/viewvc?rev=1062654&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS: org.apache.cxf.jaxrs.utils.Messages properties file missing definition for NO_CRI_MATCH,CXF-3260,12496213,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,gmazza,kfung,kfung,21/Jan/11 02:24,18/Apr/11 12:44,14/Mar/19 02:29,21/Jan/11 05:51,2.3.1,,,,,,,,,,,,,,,,,2.4,,,,JAX-RS,,,,0,,,,,,"JAXRSUtils.selectResourceClass expects a message keyed by ""NO_CRI_MATCH"". However, when you look in the Messages properties file (org.apache.cxf.jaxrs.utils.Messages), it is absent.

Because this message is absent, the Java runtime needlessly generates a ResourceNotFound exception for every resource in your application that it examined and couldn't match the incoming method.

The suggested fix, is of course, to define that string. Here's what I came up with:

NO_CRI_MATCH=Resource class {1} will not be selected, request path : {0}","Java 1.6
CXF 2.3.1 / CXF 2.3.2",300,300,,0%,300,300,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-21 05:51:22.252,,,no_permission,,Novice,,,,,,,,,,,46960,,,Fri Jan 21 05:51:22 UTC 2011,,,,,,0|i145if:,232356,,,,,,,,"21/Jan/11 05:51;gmazza;Fixed on 2.3.x and 2.4.x branches--thanks!

Glen",,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceImpl.getPorts not returning ports created with addPort,CXF-3257,12495933,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,18/Jan/11 20:46,01/Mar/11 15:53,14/Mar/19 02:29,18/Jan/11 20:53,2.3.1,,,,,,,,,,,,,,,,,2.3.3,,,,JAX-WS Runtime,,,,0,,,,,," QName sName = new QName(""service"");
 QName pName = new QName(""port"");
 
 javax.xml.ws.Service service = Service.create(sName);
 service.addPort(pName, SOAPBinding.SOAP11HTTP_BINDING, ""http://mysite.org/test"");
 
 Iterator<QName> ports = service.getPorts(); // iterator has no elements!!!
 
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46963,,,2011-01-18 20:46:06.0,,,,,,0|i0a36v:,56790,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl should be able to honor #if preprocessor,CXF-3254,12495872,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,18/Jan/11 08:28,01/Mar/11 15:53,14/Mar/19 02:29,18/Jan/11 12:39,,,,,,,,,,,,,,,,,,2.3.3,2.4,,,Tooling,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46966,,,Tue Jan 18 12:39:05 UTC 2011,,,,,,0|i0a373:,56791,,,,,,,,"18/Jan/11 12:39;ffang;commit fix
http://svn.apache.org/viewvc?rev=1060345&view=rev for trunk
http://svn.apache.org/viewvc?rev=1060350&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
LocalConduit with DirectDispatch does not work with interceptors that decorate the OutputStream,CXF-3253,12495824,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,szetheli,szetheli,17/Jan/11 21:27,01/Mar/11 15:53,14/Mar/19 02:29,07/Feb/11 22:19,2.2.10,2.3.1,,,,,,,,,,,,,,,,2.3.3,,,,Transports,,,,0,,,,,,"Create a Client that uses the local transport.
Set property org.apache.cxf.transport.local.LocalConduit.directDispatch
Add an Out interceptor to the Client that decorates the OutputStream.  For example GZIPOutInterceptor.

Expected: 
decorated OutputStream to work.

Actual:
ClassCastException

Cause:
{code:title=org.apache.cxf.transport.local.LocalConduit.dispatchDirect(Message)}
        CachedOutputStream stream = (CachedOutputStream)message.getContent(OutputStream.class);
{code}
This code is assuming the message OutputStream hasn't been wrapped.  My suggested fix would be to store the CachedContentStream you need to manipulate as a property of the Message, in addition to the setContent, so that even if the setContent is manipulated the other property would still be available.

","Found in CXF 2.2.10, confirmed the code is the same in 2.3.1
Windows 2003 Server x64",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46967,,,2011-01-17 21:27:05.0,,,,,,0|i0a37b:,56792,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"org.apache.cxf.ws.addressing.ContextUtils.getAction should support namespace ""http://www.w3.org/2005/08/addressing"" ",CXF-3252,12495752,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,17/Jan/11 08:49,16/Jul/13 19:29,14/Mar/19 02:29,17/Jan/11 09:58,2.0.13,2.1.10,2.2.10,2.2.11,2.2.12,2.2.9,2.3,2.3.1,,,,,,,,,,2.3.2,2.4,,,,,,,0,,,,,,"Current CXF dosen't support the get the Address Action with the namespace "" http://www.w3.org/2005/08/addressing"", 
You will get the NPE if the wsdl definition like this.
The test case can be ran successfully with JDK 1.6 's JAXWS implementation.
{code}
 <wsdl:portType name=""AccountStatusService""  xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
        <wsdl:operation name=""getAccountStatus"">
            <wsdl:input message=""tns:getAccountStatusRequest""
                        wsa:Action=""http://example.com/webservices/AccountStatusRequest"">
            </wsdl:input>
            <wsdl:output message=""tns:getAccountStatusResponse""
                         wsa:Action=""http://example.com/webservices/AccountStatusResponse"" />            
        </wsdl:operation>
{code}

The stack trace is with CXF 2.2.9, I can also reproduce the error with CXF trunk code.
{code}
Caused by: java.lang.NullPointerException
at org.apache.cxf.ws.addressing.ContextUtils.getAction(ContextUtils.java:830)
at org.apache.cxf.ws.addressing.ContextUtils.getActionFromMessageAttributes(ContextUtils.java:808)
at org.apache.cxf.ws.addressing.ContextUtils.getActionFromServiceModel(ContextUtils.java:744)
at org.apache.cxf.ws.addressing.ContextUtils.getAction(ContextUtils.java:712)
at org.apache.cxf.ws.addressing.MAPAggregator.assembleGeneric(MAPAggregator.java:511)
at org.apache.cxf.ws.addressing.MAPAggregator.aggregate(MAPAggregator.java:484)
at org.apache.cxf.ws.addressing.MAPAggregator.mediate(MAPAggregator.java:411)
at org.apache.cxf.ws.addressing.MAPAggregator.handleMessage(MAPAggregator.java:166)
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:487)
at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
... 25 more
{code}
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46968,,,2011-01-17 08:49:45.0,,,,,,0|i0v0p3:,179086,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EPR's address is NOT used  for invocations on the endpoint when the dispatchImpl is created with EPR,CXF-3250,12495735,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,17/Jan/11 04:10,21/Jan/11 18:14,14/Mar/19 02:29,17/Jan/11 20:18,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-WS Runtime,,,,0,,,,,,"From the jaxws api :

Creates a Dispatch instance for use with objects of the user's choosing. If there are any reference parameters in the endpointReference, then those reference parameters MUST appear as SOAP headers, indicating them to be reference parameters, on all messages sent to the endpoint. The endpointReference's address MUST be used for invocations on the endpoint. In the implementation of this method, the JAX-WS runtime system takes the responsibility of selecting a protocol binding (and a port) and configuring the dispatch accordingly from the WSDL associated with this Service instance or from the metadata from the endpointReference. If this Service instance has a WSDL and the endpointReference also has a WSDL in its metadata, then the WSDL from this instance MUST be used. If this Service instance does not have a WSDL and the endpointReference does have a WSDL, then the WSDL from the endpointReference MAY be used. An implementation MUST be able to retrieve the portName from the endpointReference metadata.

This method behaves the same as calling

 dispatch = service.createDispatch(portName, type, mode, features);
 

where the portName is retrieved from the WSDL or EndpointReference metadata. ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46969,,,2011-01-17 04:10:06.0,,,,,,0|i0v0xb:,179123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When accessing a service that requires auth CXF returns: RuntimeException: Can't find input stream in message,CXF-3249,12495698,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,chris@die-schneider.net,chris@die-schneider.net,16/Jan/11 08:00,21/Jan/11 22:24,14/Mar/19 02:29,16/Jan/11 08:15,2.3.1,,,,,,,,,,,,,,,,,2.3.2,,,,Transports,,,,0,,,,,,"I try to access a service that requires basic auth. My request does not include credentials. I would expect CXF to return something like
401 Authentication required. But it returns the following exception:

WARNUNG: Interceptor for {http://customerservice.example.com/}CustomerServiceService#{http://customerservice.example.com/}getCustomersByName has thrown exception, unwinding now
java.lang.RuntimeException: Can't find input stream in message
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:116)
	at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:60)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2330)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2192)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2036)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:696)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy30.getCustomersByName(Unknown Source)
	at client.JaxWsClient.main(JaxWsClient.java:24)",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-17 11:43:10.683,,,no_permission,,,,,,,,,,,,,46970,,,Fri Jan 21 22:19:22 UTC 2011,,,,,,0|i0v0hr:,179053,,,,,,,,"16/Jan/11 08:05;chris@die-schneider.net;It seems this happens because the message has no inputstream in this case. I added an empty inputstream for these cases.

Additionally I added throwing an http exception for all reponse codes >= 400 and != 500. I hope this is correct. All tests passed.
","16/Jan/11 08:07;chris@die-schneider.net;The exception now looks like the following. I also tried to avoid the could not send message but the code of cxf depends on this at some places. Perhaps we can do this at a later time.

WARNUNG: Interceptor for {http://customerservice.example.com/}CustomerServiceService#{http://customerservice.example.com/}getCustomersByName has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Could not send Message.
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:64)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy30.getCustomersByName(Unknown Source)
	at client.JaxWsClient.main(JaxWsClient.java:24)
Caused by: org.apache.cxf.transport.http.HTTPException: HTTP response '401: Full authentication is required to access this resource' when communicating with http://localhost:9090/CustomerServicePort
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1502)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1448)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1356)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:614)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	... 8 more",16/Jan/11 08:15;chris@die-schneider.net;Committed patch,"17/Jan/11 11:43;sergey_beryozkin;Hi Christian

One minor comment is that having a 500 status does not guarantee that it is a valid SOAP fault response, but this probably indicates the server is in a pretty bad state.

The other comment is that you may still want to wrap a CXF specific HTTP exception into a javax one you spotted on Friday somewhere at the JAX-WS level (in-fault interceptor comes to mind), this would make the JAX-WS client code portable and it will also let us experiment going forward with different approaches. 

For example, the reason the JAX-RS client runtime 'disables' the exceptions at the HTTPConduit level is that noisy log messages are being generated and if we have a client code catching (JAX-RS) WebApplicationExceptions or checking explicit (JAX-RS) Responses and doing some logging of it own then the logging becomes too visible... Disabling logging at the transport level is not possible because we may have some genuine IO exceptions like timeout, etc, but choosing to deal with 400+ statuses at the higher level is a possibility

thanks, Sergey","20/Jan/11 00:41;cxfuser71;Hi Christian,
In my case I do pass the credential - but still I get the same exception as shown below.
I am accessing a remote webservice (i.e. deployed in different m/c).
I am using JBoss 6.x which comes with CXF stack (version 2.3.1) - can you pls. suggest where need to look up further?
The remote webservice's WSDL is properly accessible thru browser.

For passing the credential I have following code in my WS-client. 
The sever side implementation (to expose the web service) has been done using .NET - so my question is do I need to keep any ""cxf.xml"" as part of my ws-client ?
If yes, then what should be the ideal place to keep such ""cxf.xml"" file?

My ws-client  class is inside a jar and is deployed as part of EAR/lib in Jboss (i.e. ws-client is Not part of WAR module).
===========================================================
     class MyAuthenticator extends Authenticator {
            @Override
            public PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(login, password.toCharArray());
            }
        }

        Authenticator.setDefault(new MyAuthenticator());
=============================================================



19:08:20,449 INFO  [org.apache.cxf.service.factory.ReflectionServiceFactoryBean] Creating Service {http://www.towersoft.com/schema/webservice/trim2/}Engine from WSDL: http://rclient114.cup.hp.com:80/trimws/trim.asmx?WSDL
19:08:22,424 WARN  [org.apache.cxf.phase.PhaseInterceptorChain] Interceptor for {http://www.towersoft.com/schema/webservice/trim2/}Engine#{http://www.towersoft.com/
schema/webservice/trim2/}ListProperties has thrown exception, unwinding now: java.lang.RuntimeException: Can't find input stream in message
        at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:116) [:2.3.1]
        at org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor.handleMessage(ReadHeadersInterceptor.java:60) [:2.3.1]
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255) [:2.3.1]
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:755) [:2.3.1]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2330) [:2.3.1]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2192) [:2.3.1]
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2036) [:2.3.1]
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56) [:2.3.1]
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:696) [:2.3.1]
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62) [:2.3.1]
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255) [:2.3.1]
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516) [:2.3.1]
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313) [:2.3.1]
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265) [:2.3.1]
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73) [:2.3.1]
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124) [:2.3.1] 


Hope I will get some pointer to look for.

Thanks,
-Kuntal","20/Jan/11 11:53;chris@die-schneider.net;Have you checked that the credentials really reach the server. Could you try this:

        BindingProvider bp = (BindingProvider)serviceProxy;
        bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY, username);
        bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, password);

These lines should be inserted before calling the service.","20/Jan/11 18:01;cxfuser71;Hi Christian,
I do not have access in the server side implementation - I am the web service consumer.
What I have is the WSDL file and a jar file containing all related artifacts.

Can you tell me if ""BindingProvider"" is the only option to pass username/password on the request context?
Previous version of  JBoss would support ""Metro WS stack"" and we could use ""java.net.Authenticator"" instead of BindingProvider and could access the remote web service successfully.
But with ""JBoss 6.0 GA"" release the ""Metro WS stack"" has been discontinued and we have to use ""CXF WS stack"".
I also find that if I use ""JAXWS RI"" implementation that comes with JDK 6, I can still use the ""java.net.Authenticator"" and can successfully  invoke the remote web service.

Is there any way I can tweak my ws-client side code so that by using ""java.net.Authenticator"", I can access that remote web service with CXF stack in the same way?

Also, if I use ""BindingProvider"" I get following error in ws-client console.
In the WSDL  I could not find any <HEAD> or <META> tag - so it is part of the response, being parsed by the library.
Is there a way to dump the response received from server side?
================================================================================
Caused by: org.apache.cxf.service.factory.ServiceConstructionException: Failed to create service.
	at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:93) [:2.3.1]
	at org.apache.cxf.jaxws.ServiceImpl.initializePorts(ServiceImpl.java:207) [:2.3.1]
	at org.apache.cxf.jaxws.ServiceImpl.<init>(ServiceImpl.java:150) [:2.3.1]
	... 93 more
Caused by: javax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </HEAD>; expected </META>.
 at [row,col,system-id]: [11,6,""http://rclient114.cup.hp.com:80/trimws/trim.asmx?WSDL""]
	at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:235) [:2.3.1]
	at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:186) [:2.3.1]
	at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:91) [:2.3.1]
	... 95 more
Caused by: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </HEAD>; expected </META>.
 at [row,col,system-id]: [11,6,""http://rclient114.cup.hp.com:80/trimws/trim.asmx?WSDL""]
	at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:630) [:3.2.6]
	at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:461) [:3.2.6]
	at com.ctc.wstx.sr.BasicStreamReader.reportWrongEndElem(BasicStreamReader.java:3256) [:3.2.6]
	at com.ctc.wstx.sr.BasicStreamReader.readEndElem(BasicStreamReader.java:3198) [:3.2.6]
	at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2830) [:3.2.6]
	at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1019) [:3.2.6]
	at org.apache.cxf.staxutils.StaxUtils.readDocElements(StaxUtils.java:998) [:2.3.1]
	at org.apache.cxf.staxutils.StaxUtils.read(StaxUtils.java:849) [:2.3.1]
	at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:226) [:2.3.1]
	... 97 more
===================================================================================


Thanks a lot for your help.
","21/Jan/11 08:35;chris@die-schneider.net;We have an implementation of Authenticator in CXF so it should work but I have never used it.

To log the messages you should try: 
Client client = ClientProxy.getClient(serviceProxy);
client.getOutInterceptors().add(new LoggingOutInterceptor());
client.getInInterceptors().add(new LoggingInInterceptor());

also see: http://cxf.apache.org/docs/debugging-and-logging.html

","21/Jan/11 22:19;cxfuser71;Hi Chrisitian,
I have used the ""Authenticator"" with CXF and found it works okay.
Actually in my case the webservice was deployed on Microsoft IIS server and I ""have to"" use  ""Authenticator""  -  ""BindingProvider"" does not work for me.

It turns out that since the web service was deployed on Microsoft IIS which needs NTLM authentication, and if we use Apache CXF library for ws-client, we ""must"" need to setup the CXF client to turn off chunking. The reason is that the NTLM authentication requires a 3 part handshake which breaks the  streaming. This was beyond my knowledge as I have very very limited knowledge about Microsoft technologies.
Surprisingly JAX-WS RI implementation or Metro-WS stack does not demand this kind requirement. Thus in my opinion it is indeed an overhead for CXF users. 

The other error. i.e. ""Unexpected close tag </HEAD>; expected </META>"", was occurring because the server was sending an error page which was lacking an end </META> tag. 
The CXF library is strict in XML parsing and instead of showing error as ""401 Authentication Required"", it just states about the parsing error. 
AGAIN, the JAX-WS RI implementation or Metro-WS stack does properly show the correct error message (i.e. 401 authentication required.)  even if the returned html page misses an end </META> tag.

Also can you tell me what is the side effect of ""turning off chunking""? Will my ws-request take more time to retrieve the complete result set from server?
Do I need to ""turn ON"" chunking once the authentication completes successfully? If yes then how can I do that?

Though I have found the solution but I would love to know more about NTLM authentication and how the turning the chunking off resolves the authentication failure issues with CXF stack. So if anybody can throw some light in it, will be very happy.


Cheers,
- Kuntal",,,,,,,,,,,,,,,,,,
CXF JAX-RS assumes custom Application returns providers only via Application.getSingletons ,CXF-3248,12495690,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,gmazza,gmazza,15/Jan/11 23:13,21/Jan/11 18:14,14/Mar/19 02:29,17/Jan/11 17:26,2.3.2,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"Example 7-1 of the JAX-RS book samples (see https://issues.apache.org/jira/browse/CXF-3247) is returning a unclear error message when it processes the following ExceptionMapper:

@Provider
public class NotFoundExceptionMapper implements ExceptionMapper<NotFoundException>
{
   public Response toResponse(NotFoundException exception)
   {
      return Response.status(Response.Status.NOT_FOUND)
              .entity(exception.getMessage())
              .type(""text/plain"").build();
   }
}

This is the error message it's returning:
WARNING: No resource methods have been found for resource class com.restfully.shop.services.NotFoundExceptionMapper

I'm not sure why an exception mapper needs to have resource methods, or what a ""resource method"" is for that matter.  I think this error is appropriate for root resources only and not exception mappers, if so, this message should be suppressed for exception mappers.  OTOH, if this warning does have meaning for exception mappers, could it be made clearer for newbies/novices?

Note this example has other bugs with it, not related to this problem (https://issues.jboss.org/browse/RESTEASY-495).

To duplicate, download and extract RESTEasy and make the pom.xml and web.xml changes all described in https://issues.apache.org/jira/browse/CXF-3247.  Then just run mvn clean install and you'll see the above error message.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-16 17:17:51.264,,,no_permission,,,,,,,,,,,,,46971,,,Mon Jan 17 17:22:34 UTC 2011,,,,,,0|i13ypj:,231253,,,,,,,,"16/Jan/11 17:17;sergey_beryozkin;Glen, how do you run this example in CXF ? Are you sure you haven't specified NotFoundExceptionMapper as a service bean ?","16/Jan/11 18:44;gmazza;Instructions for running the example are in the last sentence of the description.  NotFoundExceptionMapper is as given in the description, and linked in as follows:

public class ShoppingApplication extends Application
{
   private Set<Object> singletons = new HashSet<Object>();
   private Set<Class<?>> classes = new HashSet<Class<?>>();

   public ShoppingApplication()
   {
      singletons.add(new CustomerResource());
      classes.add(NotFoundExceptionMapper.class);
   }

   ...
}

","16/Jan/11 18:54;sergey_beryozkin;Application.getClasses() can also return provider classes, not only root resource classes",17/Jan/11 17:22;sergey_beryozkin;Reopened the wrong issue,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-RS does not recognize MessageBodyReader/MessageBodyWriter with no generic parameters,CXF-3247,12495689,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,sergey_beryozkin,gmazza,gmazza,15/Jan/11 22:38,21/Jan/11 18:14,14/Mar/19 02:29,17/Jan/11 18:04,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"Chapter 19, Example 6_02 (page 230) from Bill Burke's RESTful Java with JAX-RS book is working with RESTEasy but not CXF (I'm using 2.3.2-SNAPSHOT).  This example is freely available in the RESTEasy download[1].

This example creates a new MessageBodyReader and MessageBodyWriter for exchanging Java objects directly using REST.

Steps to duplicate:

1.) After downloading and extracting RESTEasy and navigating to this folder:  resteasy-jaxrs-2.1.0.GA/examples/oreilly-workbook/ex06_2 , type mvn clean install.  You'll see a before/after response using the RESTEasy library:

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.restfully.shop.test.CustomerResourceTest
*** Create a new Customer ***
15.01.2011 17:21:14 org.jboss.resteasy.spi.ResteasyDeployment 
INFO: Deploying javax.ws.rs.core.Application: class com.restfully.shop.services.ShoppingApplication
15.01.2011 17:21:14 org.jboss.resteasy.spi.ResteasyDeployment 
INFO: Adding singleton resource com.restfully.shop.services.CustomerResource from Application javax.ws.rs.core.Application
Created customer 1
Location: http://localhost:9095/customers/1
*** GET Created Customer **
Content-Type: application/x-java-serialized-object
Customer{id=1, firstName='Bill', lastName='Burke', street='256 Clarendon Street', city='Boston', state='MA', zip='02115', country='USA'}
**** After Update ***
Content-Type: application/x-java-serialized-object
Customer{id=1, firstName='William', lastName='Burke', street='256 Clarendon Street', city='Boston', state='MA', zip='02115', country='USA'}
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.344 sec


2.) Convert the sample to using CXF's version of JAX-RS by making the following two changes (I've used these two steps with success in nearly all the other examples up to this one):

-- Switching the servlet in the web.xml:

        <servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>

        <!--servlet-class>

            org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher

        </servlet-class-->



-- Switching the dependency in the pom.xml:

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <version>2.3.2-SNAPSHOT</version>
        </dependency>
        <!--dependency>

            <groupId>org.jboss.resteasy</groupId>

            <artifactId>resteasy-jaxrs</artifactId>

            <version>2.1.0.GA</version>

        </dependency-->


3.) Running mvn clean install again will return this error:

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.restfully.shop.test.CustomerResourceTest
*** Create a new Customer ***
15.01.2011 17:22:52 org.apache.cxf.transport.servlet.CXFNonSpringServlet loadBusNoConfig
INFO: Load the bus without application context
15.01.2011 17:22:52 org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.apache.cxf.bus.spring.BusApplicationContext@23b561a2: startup date [Sat Jan 15 17:22:52 EST 2011]; root of context hierarchy
15.01.2011 17:22:52 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
15.01.2011 17:22:52 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-jaxrs-binding.xml]
15.01.2011 17:22:52 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-xml.xml]
15.01.2011 17:22:52 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-http.xml]
15.01.2011 17:22:52 org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2f78743b: defining beans [cxf,org.apache.cxf.bus.spring.BusApplicationListener,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.resource.ResourceManager,org.apache.cxf.configuration.Configurer,org.apache.cxf.binding.BindingFactoryManager,org.apache.cxf.transport.DestinationFactoryManager,org.apache.cxf.transport.ConduitInitiatorManager,org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.phase.PhaseManager,org.apache.cxf.workqueue.WorkQueueManager,org.apache.cxf.buslifecycle.BusLifeCycleManager,org.apache.cxf.endpoint.ServerRegistry,org.apache.cxf.endpoint.ServerLifeCycleManager,org.apache.cxf.endpoint.ClientLifeCycleManager,org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.endpoint.EndpointResolverRegistry,org.apache.cxf.headers.HeaderManager,org.apache.cxf.catalog.OASISCatalogManager,org.apache.cxf.service.factory.FactoryBeanListenerManager,org.apache.cxf.endpoint.ServiceContractResolverRegistry,org.apache.cxf.binding.xml.XMLBindingFactory,org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder,org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder,org.apache.cxf.transport.http.policy.NoOpPolicyInterceptorProvider,org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory]; root of factory hierarchy
15.01.2011 17:22:53 org.apache.cxf.transport.servlet.AbstractCXFServlet replaceDestinationFactory
INFO: Replaced the http destination factory with servlet transport factory
15.01.2011 17:22:53 org.apache.cxf.jaxrs.utils.ResourceUtils checkMethodDispatcher
WARNUNG: No resource methods have been found for resource class com.restfully.shop.services.JavaMarshaller
15.01.2011 17:22:53 org.apache.cxf.endpoint.ServerImpl initDestination
INFO: Setting the server's publish address to be /
15.01.2011 17:22:53 org.apache.cxf.jaxrs.utils.JAXRSUtils readFromMessageBody
WARNUNG: No message body reader has been found for request class Customer, ContentType : application/x-java-serialized-object.
15.01.2011 17:22:53 org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse
WARNUNG: WebApplicationException has been caught : no cause is available
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.919 sec <<< FAILURE!

Results :

Failed tests: 
  testCustomerResource(com.restfully.shop.test.CustomerResourceTest)

Tests run: 1, Failures: 1, Errors: 0, Skipped: 0

[1] http://sourceforge.net/projects/resteasy/files/Resteasy%20JAX-RS/",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-16 17:22:56.229,,,no_permission,,Moderate,,,,,,,,,,,46972,,,Sun Jan 16 20:14:15 UTC 2011,,,,,,0|i0uyx3:,178798,,,,,,,,"16/Jan/11 17:22;sergey_beryozkin;Glen - I do not know what ContentHandler is. It must be a RestEasy extension.

FYI, MessageBodyWriter is something which can be used for serializing whatever needs to
be serialized.

I'm closing this JIRA

","16/Jan/11 18:49;gmazza;Sorry, fixed the terminology.  Take a look at this small example (it's just five classes).  AFAICT It has no RESTEasy-specific stuff in it, certainly no RESTEasy imports.  ","16/Jan/11 18:57;sergey_beryozkin;No problems.

Glen, please describe the problem on the JIRA rather than directing me to download RestEasy and run the sample.

How do you have providers registered ? 

I suspect this JIRA can be a duplicate of 

https://issues.apache.org/jira/browse/CXF-3248 ?

Please verify and close it as duplicate. 


","16/Jan/11 20:14;gmazza;Yes, the provider is attached at the class level, causing this error.  When attaching at the singleton level, neither RESTEasy nor CXF would work.

Duplicate of https://issues.apache.org/jira/browse/CXF-3248.",,,,,,,,,,,,,,,,,,,,,,,
Policies for Fault messages are not being applied for unwrapped operations,CXF-3244,12495401,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,12/Jan/11 18:40,21/Jan/11 18:14,14/Mar/19 02:29,12/Jan/11 18:59,2.3.1,,,,,,,,,,,,,,,,,2.3.2,,,,WS-* Components,,,,0,,,,,,"
If the wsdl defines a policy for a fault only, like:

{code}
           <wsdl:fault name=""DoubleItFault"">
                <wsp:PolicyReference URI=""#SignedOnlyMsgPolicy"" />
                <soap:body use=""literal"" name=""DoubleItFault"" />
            </wsdl:fault>
{code}

the policy is not being applied if the implementation has the operation unwrapped (the default).   If the operation is BARE, then the policy is applied correctly.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46974,,,2011-01-12 18:40:00.0,,,,,,0|i0v0db:,179033,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRSOutInterceptor should attempt to downcast CGLIB-enchanced types of response objects  ,CXF-3241,12495247,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,11/Jan/11 13:46,21/Jan/11 18:14,14/Mar/19 02:29,11/Jan/11 13:58,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"If a response object is CGLIB enhanced then JAXRSOutInterceptor should attempt to downcast the type of this object to a more concrete class.
Otherwise providers such as the ones dealing with JAXB can not marshall the objects properly (cglib proxies do not retain annotations such as XMLRootElement, etc) ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46977,,,2011-01-11 13:46:20.0,,,,,,0|i13ymf:,231239,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl fails if invisible const char is defined in IDL,CXF-3239,12495239,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,tmielke,tmielke,11/Jan/11 13:11,21/Jan/11 18:14,14/Mar/19 02:29,12/Jan/11 08:12,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,Tooling,,,,0,,,,,,"Running
{code}
idl2wsdl test2.idl
{code}

on the attached IDL file, produces:
{code}
Error : org.apache.cxf.tools.common.ToolException: WSDLException: faultCode=PARSER_ERROR: : javax.xml.bind.MarshalException
{code}
Running with additional -verbose option prints
{code}
idl2wsdl -verbose Test2.idl
idl2wsdl - Apache CXF 2.3.x-fuse-SNAPSHOT

 ( module Test2 ( const char MYCHAR   ) )
Error : org.apache.cxf.tools.common.ToolException: WSDLException: faultCode=PARSER_ERROR: : javax.xml.bind.MarshalException

org.apache.cxf.tools.common.ToolException: org.apache.cxf.tools.common.ToolException: WSDLException: faultCode=PARSER_ERROR: : javax.xml.bind.MarshalE
xception
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:88)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:79)
        at org.apache.cxf.tools.corba.IDLToWSDL.execute(IDLToWSDL.java:73)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
        at org.apache.cxf.tools.corba.IDLToWSDL.run(IDLToWSDL.java:162)
        at org.apache.cxf.tools.corba.IDLToWSDL.main(IDLToWSDL.java:170)
Caused by: org.apache.cxf.tools.common.ToolException: WSDLException: faultCode=PARSER_ERROR: : javax.xml.bind.MarshalException
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:219)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.process(IDLToWSDLProcessor.java:86)
        ... 7 more
Caused by: javax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: : javax.xml.bind.MarshalException
        at org.apache.cxf.wsdl.JAXBExtensionHelper.marshall(JAXBExtensionHelper.java:261)
        at com.ibm.wsdl.xml.WSDLWriterImpl.printExtensibilityElements(Unknown Source)
        at org.apache.cxf.tools.corba.common.WSDLCorbaWriterImpl.printExtensibilityElements(WSDLCorbaWriterImpl.java:159)
        at org.apache.cxf.tools.corba.common.WSDLCorbaWriterImpl.printDefinition(WSDLCorbaWriterImpl.java:119)
        at org.apache.cxf.tools.corba.common.WSDLCorbaWriterImpl.writeWSDL(WSDLCorbaWriterImpl.java:77)
        at org.apache.cxf.tools.corba.common.WSDLUtils.writeWSDL(WSDLUtils.java:84)
        at org.apache.cxf.tools.corba.processors.idl.WSDLASTVisitor.writeDefinition(WSDLASTVisitor.java:268)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.writeDefinitions(IDLToWSDLProcessor.java:297)
        at org.apache.cxf.tools.corba.processors.idl.IDLToWSDLProcessor.parseIDL(IDLToWSDLProcessor.java:217)
        ... 8 more
Caused by: javax.xml.bind.MarshalException
 - with linked exception:
[com.ctc.wstx.exc.WstxIOException: Invalid null character in text to output]
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:322)
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:172)
        at org.apache.cxf.wsdl.JAXBExtensionHelper.marshall(JAXBExtensionHelper.java:258)
        ... 16 more
Caused by: com.ctc.wstx.exc.WstxIOException: Invalid null character in text to output
        at com.ctc.wstx.sw.BaseNsStreamWriter.doWriteAttr(BaseNsStreamWriter.java:515)
        at com.ctc.wstx.sw.BaseNsStreamWriter.writeAttribute(BaseNsStreamWriter.java:224)
        at org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter.writeAttribute(PrettyPrintXMLStreamWriter.java:115)
        at com.sun.xml.bind.v2.runtime.output.XMLStreamWriterOutput.attribute(XMLStreamWriterOutput.java:131)
        at com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl.attribute(XmlOutputAbstractImpl.java:106)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.attribute(XMLSerializer.java:446)
        at com.sun.xml.bind.v2.runtime.property.AttributeProperty.serializeAttributes(AttributeProperty.java:99)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeAttributes(ClassBeanInfoImpl.java:356)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:689)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty.serializeItem(ArrayElementNodeProperty.java:65)
        at com.sun.xml.bind.v2.runtime.property.ArrayElementProperty.serializeListBody(ArrayElementProperty.java:168)
        at com.sun.xml.bind.v2.runtime.property.ArrayERProperty.serializeBody(ArrayERProperty.java:155)
        at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeBody(ClassBeanInfoImpl.java:340)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:696)
        at com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty.serializeBody(SingleElementNodeProperty.java:152)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:157)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl$1.serializeBody(ElementBeanInfoImpl.java:189)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeBody(ElementBeanInfoImpl.java:316)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:323)
        at com.sun.xml.bind.v2.runtime.ElementBeanInfoImpl.serializeRoot(ElementBeanInfoImpl.java:72)
        at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:494)
        at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:315)
        ... 18 more
Caused by: java.io.IOException: Invalid null character in text to output
        at com.ctc.wstx.api.InvalidCharHandler$FailingHandler.convertInvalidChar(InvalidCharHandler.java:51)
        at com.ctc.wstx.sw.XmlWriter.handleInvalidChar(XmlWriter.java:623)
        at com.ctc.wstx.sw.BufferingXmlWriter.writeAttrValue(BufferingXmlWriter.java:1037)
        at com.ctc.wstx.sw.BufferingXmlWriter.writeAttribute(BufferingXmlWriter.java:883)
        at com.ctc.wstx.sw.BaseNsStreamWriter.doWriteAttr(BaseNsStreamWriter.java:512)
        ... 39 more
Error : org.apache.cxf.tools.common.ToolException: WSDLException: faultCode=PARSER_ERROR: : javax.xml.bind.MarshalException
{code}
","CXF-2.3.1, Windows, idl2wsdl ",,,,,,,,,,,,,,,,11/Jan/11 13:12;tmielke;test2.idl;https://issues.apache.org/jira/secure/attachment/12468004/test2.idl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-11 13:32:54.834,,,no_permission,,,,,,,,,,,,,46979,,,Wed Jan 12 08:12:38 UTC 2011,,,,,,0|i0v0xr:,179125,,,,,,,,"11/Jan/11 13:32;ffang;Hi Tosten,

The problem actually is from that in your test2.idl, the const char definition is 
const char MYCHAR = '\0';
ascii code ""0""(a subset of ascii code isn't visiable, they are control char) is used for control character and it's not intended to represent printable information, that said, this character is invisible, so can't transform this char into wsdl

if I change it to 
const char MYCHAR = '\65';
then the idl2wsdl tool works as expected. the generated wsdl which contain this const char looks like
<corba:typeMapping targetNamespace=""http://cxf.apache.org/bindings/corba/idl/test2/typemap"">
    <corba:const xmlns:xs=""http://www.w3.org/2001/XMLSchema"" value=""5"" idltype=""corba:char"" name=""Test2.MYCHAR"" type=""xs:byte""/>
  </corba:typeMapping>

IMHO this is not a bug.

Best Regards
Freeman","12/Jan/11 01:28;ffang;hmm, yeah, the idl2wsdl tool should be able to honor the invisible const char, the generated wsdl should be like 

<corba:typeMapping targetNamespace=""http://cxf.apache.org/bindings/corba/idl/test2/typemap"">
<corba:const xmlns:xs=""http://www.w3.org/2001/XMLSchema"" value=""\0"" idltype=""corba:char"" name=""Test2.MYCHAR"" type=""xs:byte""/>
</corba:typeMapping>

if it's control character.
","12/Jan/11 08:12;ffang;commit fix 
http://svn.apache.org/viewvc?rev=1058014&view=rev for trunk
http://svn.apache.org/viewvc?rev=1058015&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,
idl2wsdl fails when constant is used to define string lenght,CXF-3238,12495208,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,11/Jan/11 05:14,21/Jan/11 18:14,14/Mar/19 02:29,12/Jan/11 11:24,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,Tooling,,,,0,,,,,,"if the idl looks like this

#ifndef INCLUDE_COMMON_IDL
#define INCLUDE_COMMON_IDL


module Test {

  const long NAME_LENGTH = 32;

  typedef string<NAME_LENGTH> Name;

};

#endif


simply run the idl2wsdl tool we will see the exception
Error : org.apache.cxf.tools.common.ToolException: For input string: ""NAME_LENGTH""",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46980,,,Wed Jan 12 11:24:40 UTC 2011,,,,,,0|i0v0nr:,179080,,,,,,,,"11/Jan/11 05:34;ffang;commit fix
http://svn.apache.org/viewvc?rev=1057488&view=rev for trunk
http://svn.apache.org/viewvc?rev=1057492&view=rev for 2.3.x branch",12/Jan/11 10:16;ffang;not fix the case that in a module,"12/Jan/11 11:24;ffang;also fix the inner module case
http://svn.apache.org/viewvc?rev=1058070&view=rev for trunk
http://svn.apache.org/viewvc?rev=1058080&view=rev for 2.3.x branch",,,,,,,,,,,,,,,,,,,,,,,,
Add support for an Issued Token extracted from a SAML assertion,CXF-3236,12494970,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,coheigea,coheigea,07/Jan/11 17:34,21/Jan/11 18:14,14/Mar/19 02:29,17/Jan/11 20:19,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,WS-* Components,,,,0,,,,,,"
CXF cannot currently support the following use-case:

A service endpoint has a security policy consisting of a sp:SymmetricBinding which uses a (SAML) sp:IssuedToken as the sp:ProtectionToken. A client parses this, and obtains the appropriate SAML token from an STS, which it sends to the service endpoint, securing the message appropriately. The service endpoint can process the request, but it falls down on the reply as it does not know how to get access to the Issued Token to secure the message reply.

A patch to WSS4J to save the secret key extracted from the SAML assertion is here (https://issues.apache.org/jira/browse/WSS-263). A patch is required to CXF to parse the result set and save the appropriate token.",,,,,,,,,,,,,,,,,07/Jan/11 17:36;coheigea;cxf-3234-tentative.patch;https://issues.apache.org/jira/secure/attachment/12467743/cxf-3234-tentative.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46982,,,Fri Jan 07 17:36:10 UTC 2011,,,,,,0|i0v0wv:,179121,,,,,,,,"07/Jan/11 17:36;coheigea;
Here is a *tentative* patch for this issue. I've tested it and a CXF endpoint can now secure the reply to the client appropriately.",,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRSOutInterceptor can be confused about response Type when Response entity is overidden,CXF-3234,12494954,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,07/Jan/11 15:18,21/Jan/11 18:14,14/Mar/19 02:29,07/Jan/11 16:45,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"When ExceptionMappers or ResponseHandler filters override Response entity after the resource method has been invoked, JAXRSOutInterceptor will most likely get confused about the generic type of the Response entity, unless the new entity class is assignable to that of the method response type",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46984,,,2011-01-07 15:18:05.0,,,,,,0|i0v0g7:,179046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OneWayProcessorInterceptor throws fault on WebSphere,CXF-3232,12494722,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,benjishults,benjishults,05/Jan/11 14:35,21/Jan/11 18:14,14/Mar/19 02:29,10/Jan/11 22:47,2.3.1,,,,,,,,,,,,,,,,,2.3.2,,,,Bus,,,,0,,,,,,"WebSphere rejects all incoming SOAP messages to one-way WSDLs.  This error does not occur on WebLogic.

OneWayProcessorInterceptor handleMessage throws a fault from line 93.

More specifically, org.apache.cxf.transport.AbstractConduit throws the exception from line 56.

This call to close gets us into org.apache.cxf.transport.http.AbstractHTTPDestination.flushHeaders(...) which calls IBM's implementation of SRTServletResponse.setContentType(...).

That implementation of setContentType(...) throws a NullPointerException when null is passed in.

",webSphere WAS,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46986,,,2011-01-05 14:35:28.0,,,,,,0|i0v0i7:,179055,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF over JMS leaks JMS resources  when no replay queue is specified,CXF-3230,12494625,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,chris@die-schneider.net,kjell,kjell,04/Jan/11 18:07,01/Mar/11 15:53,14/Mar/19 02:29,03/Feb/11 06:48,2.3.1,,,,,,,,,,,,,,,,,2.3.3,,,,Transports,,,,0,,,,,,"This issue was found both when testing with ActiveMQ 5.4.2 and HornetQ 2.1.2 as JMS provider. The JMS settings is  set in the WSDL file:

	<service name=""TestJMS"">
			<port binding=""tns:TestBinding"" name=""Test"">
			<address destinationStyle=""queue"" 
						jndiConnectionFactoryName=""ConnectionFactory"" 
						jndiDestinationName=""dynamicQueues/messageDestination""
						xmlns=""http://cxf.apache.org/transports/jms"">
				<JMSNamingProperty name=""java.naming.provider.url"" value=""tcp://localhost:61616?jms.watchTopicAdvisories=false""/>
				<JMSNamingProperty name=""java.naming.factory.initial"" value=""org.apache.activemq.jndi.ActiveMQInitialContextFactory""/>
			</address>
		</port>
	</service>

The issue was found when performing a test with a server and a client both created with CXF. The client has an infinite loop that performs a request on the server and waits for a response before the next iteration is executed. After a couple of thousands  of request response iterations have been performed the JMS provider starts to get very slow and ActiveMQ gets out of memory if the test is run long enough. First I thought it was a configuration problem with the JMS provider or a bug in ActiveMQ, but because the same problem exists both with HornetQ and several configurations of ActiveMQ it seems like it is a problem with CXF. 

When monitoring ActiveMQ with jconsole it can be seen that when ActiveMQ is set to not use a thread pool (-Dorg.apache.activemq.UseDedicatedTaskRunner=true), the number of threads grows while the test is running and no threads seem to be deallocated. When a thread pool is used the number of threads is quite constant but the amount of memory on the heap still grows. No leak is observed when a response queue is specified with jndiReplyDestinationName. So when a temporary queue should be used to send back the replay it seems like one replay queue is created for every replay and they never get removed.","Linux, ActiveMQ 5.4.2 and HornetQ 2.1.2",,,,,,,,,,,,,,,,06/Jan/11 11:45;chris@die-schneider.net;CXF-3230.patch;https://issues.apache.org/jira/secure/attachment/12467627/CXF-3230.patch,04/Jan/11 18:12;kjell;CXFJMSResourceLeaking.tar.gz;https://issues.apache.org/jira/secure/attachment/12467447/CXFJMSResourceLeaking.tar.gz,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-01-05 22:54:25.111,,,no_permission,,,,,,,,,,,,,46988,,,Thu Feb 03 06:48:23 UTC 2011,,,,,,0|i0a37j:,56793,,,,,,,,04/Jan/11 18:12;kjell;Simple test programs that can be used to reproduce the issue. It is an eclipse project. Just run the Server and then the Client to start the test.,"05/Jan/11 22:54;chris@die-schneider.net;I was able to reproduce the issue with cxf 2.3.1 and ActiveMQ 5.4.2 as well as ActiveMQ 4.0.2. 

At the moment I have no idea though what is the cause of the problem. The Heap Memory and JVM THreads do not seem to grow. Only the native threads seem to grow.

When googling the problem that exception ""unable to create new native thread"" seems not uncommon in ActiveMQ. As the problem is also reported for other jms providers it can´t be a pure ActiveMQ problem though.","05/Jan/11 23:01;chris@die-schneider.net;I found something on http://activemq.apache.org/javalangoutofmemory.html

Number of Threads

By default, ActiveMQ uses a dedicated thread per destination. If there are large numbers of Destinations there will be a large number of threads and their associated memory resource usage. ActiveMQ can be configured to use a thread pool through the use of the system property: -Dorg.apache.activemq.UseDedicatedTaskRunner=false. This is currently specified in the activemq start script via ACTIVEMQ_OPTS. Using a thread pool can restrict the number of threads required by ActiveMQ and hence reduce memory usage.
","05/Jan/11 23:10;chris@die-schneider.net;I guess I found the problem ... should have read the description of the issue better ... I was so concerned to find the thread leak that I overread that we do not remove the temporary destinations.
We really do not remove the temporary queues. 

So I think there are two solutions. We could either not create so many temp queues at all or delete each one after the request. The second option is probably easier to do.","06/Jan/11 11:45;chris@die-schneider.net;Added a patch to delete the temp queue after the request is finished. On my system this fixes the problem.

I have also committed this to the trunk so you can test this by applying the patch yourself or you can wait till the snapshot release is deployed (tomorrow I guess) and use this. 
","14/Jan/11 15:46;kjell;Thanks for the fast fix attempt. Unfortunately it seems like there still is a problem.

When testing with ActiveMQ it works when adversary messages is switched on. The ActiveMQ documentation (http://activemq.apache.org/advisory-message.html) says that adversary messages must be enabled for temporary queues to work. 

When doing the same test but with ActiveMQ replaced with HornetQ the client crashes with the following exception. The same test worked before the patch but then the mq was leaking resources. It seems like the session for which the temp queue is created has been closed before the attempt to to delete the queue. Is that the case or shall this issue be reported to HornetQ?

INFO: Established shared JMS Connection: org.hornetq.jms.client.HornetQConnection@12381a9c
Jan 14, 2011 10:46:41 AM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://testjms}TestJMS#{http://testjms}testOp has thrown exception, unwinding now
java.lang.RuntimeException: Unable to remove temporary queue
	at org.apache.cxf.transport.jms.JMSConduit.sendExchange(JMSConduit.java:249)
	at org.apache.cxf.transport.jms.JMSOutputStream.doClose(JMSOutputStream.java:56)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:185)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy39.testOp(Unknown Source)
	at Client.main(Client.java:28)
Caused by: javax.jms.IllegalStateException: Session is closed
	at org.hornetq.core.client.impl.ClientSessionImpl.checkClosed(ClientSessionImpl.java:1643)
	at org.hornetq.core.client.impl.ClientSessionImpl.queueQuery(ClientSessionImpl.java:346)
	at org.hornetq.core.client.impl.DelegatingSession.queueQuery(DelegatingSession.java:436)
	at org.hornetq.jms.client.HornetQSession.deleteTemporaryQueue(HornetQSession.java:922)
	at org.hornetq.jms.client.HornetQDestination.delete(HornetQDestination.java:266)
	at org.apache.cxf.transport.jms.JMSConduit.sendExchange(JMSConduit.java:247)
	... 12 more
Caused by: HornetQException[errorCode=102 message=Session is closed]
	... 18 more
Exception in thread ""main"" javax.xml.ws.soap.SOAPFaultException: Unable to remove temporary queue
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:146)
	at $Proxy39.testOp(Unknown Source)
	at Client.main(Client.java:28)
Caused by: java.lang.RuntimeException: Unable to remove temporary queue
	at org.apache.cxf.transport.jms.JMSConduit.sendExchange(JMSConduit.java:249)
	at org.apache.cxf.transport.jms.JMSOutputStream.doClose(JMSOutputStream.java:56)
	at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:185)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	... 2 more
Caused by: javax.jms.IllegalStateException: Session is closed
	at org.hornetq.core.client.impl.ClientSessionImpl.checkClosed(ClientSessionImpl.java:1643)
	at org.hornetq.core.client.impl.ClientSessionImpl.queueQuery(ClientSessionImpl.java:346)
	at org.hornetq.core.client.impl.DelegatingSession.queueQuery(DelegatingSession.java:436)
	at org.hornetq.jms.client.HornetQSession.deleteTemporaryQueue(HornetQSession.java:922)
	at org.hornetq.jms.client.HornetQDestination.delete(HornetQDestination.java:266)
	at org.apache.cxf.transport.jms.JMSConduit.sendExchange(JMSConduit.java:247)
	... 12 more
Caused by: HornetQException[errorCode=102 message=Session is closed]
	... 18 more","14/Jan/11 16:45;chris@die-schneider.net;I am not sure. Could you post your example for Hornetq? Btw. it would be great if you could use maven for the example. It was quite some work to configure the classpath by hand.

I will also try with HornetQ in the mean time.","17/Jan/11 08:57;kjell;I use the default settings for HornetQ 2.1.2. The example I used is the same as the one I have attached to this bug with the difference that the address tag in the WSDL is replaced with the following:

<address destinationStyle=""queue"" 
jndiConnectionFactoryName=""/ConnectionFactory"" 
jndiDestinationName=""/queue/ExampleQueue""
connectionUserName=""guest""
connectionPassword=""guest""
xmlns=""http://cxf.apache.org/transports/jms"">
<JMSNamingProperty name=""java.naming.provider.url"" value=""jnp://127.0.0.1:1099""/>
<JMSNamingProperty name=""java.naming.factory.initial"" value=""org.jnp.interfaces.NamingContextFactory""/>
<JMSNamingProperty name=""java.naming.factory.url.pkgs"" value=""org.jboss.naming:org.jnp.interfaces""/>
</address>

I will try to learn maven before I send another bug report.",17/Jan/11 15:01;chris@die-schneider.net;I reopen the issue to check with hornetq. The fix for activemq is in trunk and will go into 2.3.2,"17/Jan/11 16:37;chris@die-schneider.net;Don´t let maven keep you from reporting bugs. It just makes life a little easier for us. I will also help you without an easy test. It is only that the easier you make it for the people that have to solve the problem the faster things get solved usually ;-) At least this is what I experienced when reporting bugs myself. The nice thing when I have a maven project is that I can simply import it in eclipse and get all dependencies (with the sonatype eclipse maven plugin). So I can simply start debugging. The plugin even downloads and attaches the source for all dependencies.
If you want to look into maven projects you best start with the examples from the cxf distribution. 
","31/Jan/11 10:32;chris@die-schneider.net;I was able to confirm the exception with HornetQ. HornetQ tries to access a session that is linked to the temp queue to delete the queue. As this session was closed in the mean time this does not work. I believe that this is a bug in hornetq as temporary queues should live as long as a connection. So it must be possible to access them from different sessions and it should not be necessary that the session that created the temp queue is still open. I will file an issue at the hornetq jira. Hopefully a hornetq expert can help us with this.

https://issues.jboss.org/browse/HORNETQ-637
",03/Feb/11 06:48;chris@die-schneider.net;The problem with deleting the temp queue in HornetQ can probably be fixed by the HornetQ team. The workaround for CXF 2.3.3 will allow users to have their calls working even if the temp queue is not deleted. Will reopen the issue if the HornetQ team can not fix the problem.,,,,,,,,,,,,,,,
"Generated Exception files should extend java.lang.Exception, not Exception",CXF-3229,12494585,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jesselong,jesselong,04/Jan/11 12:11,21/Jan/11 18:14,14/Mar/19 02:29,04/Jan/11 19:39,2.3,2.3.1,2.4,,,,,,,,,,,,,,,2.3.2,,,,JAX-RS,Tooling,,,0,,,,,,"WSDL2Java generates Java source code, for faults, it generates exceptions. When the fault name is Exception, the code looks like

public class Exception extends Exception

Which is a cyclic inheritance problem. It should be:

public class Exception extends java.lang.Exception",All,,,,,,,,,,,,,,,,04/Jan/11 12:12;jesselong;cxf-Exception.patch;https://issues.apache.org/jira/secure/attachment/12467413/cxf-Exception.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-04 13:19:48.924,,,no_permission,,Novice,,,,,,,,,,,46989,,,Tue Jan 04 13:57:55 UTC 2011,,,,,,0|i13yp3:,231251,,,,,,,,"04/Jan/11 12:12;jesselong;This is the patch against trunk to resolve the issue, probably will patch cleanly against 2.3x branch too","04/Jan/11 13:19;gmazza;Dan Kulp had suggested a while back a little bit more work would be needed (throw clauses in methods also would need updating):
http://cxf.547215.n5.nabble.com/name-collision-Exception-td560353.html

It may be interesting to see what Metro's wsimport equivalent does, they may be a step ahead of CXF in this regard:
http://www.jroller.com/gmazza/entry/soap_client_tutorial","04/Jan/11 13:57;jesselong;Good news. References to unqualified class names in java source code are resolved by first looking for inner classes, then classes from the same package and finally classes from java.lang. So, because the fault is xxx.Exception, and the interface is xxx.MyInterface, the ""throws Exception"" will refer to xxx.Exception. :)",,,,,,,,,,,,,,,,,,,,,,,,
SOAPMessage does not recognize SOAPMessage.WRITE_XML_DECLARATION,CXF-3228,12494571,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,veaven,veaven,04/Jan/11 07:46,21/Jan/11 18:14,14/Mar/19 02:29,04/Jan/11 19:40,,,,,,,,,,,,,,,,,,2.3.2,,,,JAX-WS Runtime,,,,0,,,,,,"Hi,
  It could be a bug in cxf's  @WebServiceProvider implementation that we cannot control the output xml encoding by setting SOAPMessage.CHARACTER_SET_ENCODING. The encoding ( {quote}<?xml version=""1.0"" encoding=""UTF-8""?>{quote}  ) response message was not changed when I change CHARACTER_SET_ENCODING to UTF-16. 

Please see my test class:
{quote}
@WebServiceProvider
@ServiceMode(value = Service.Mode.MESSAGE)
public class CalculatorProvider implements Provider<SOAPMessage> {

    @Override
    public SOAPMessage invoke(SOAPMessage request) {

        long start = System.currentTimeMillis();
        System.out.println(""********* start at "" + start);
        try {
            MessageFactory mf = MessageFactory.newInstance();
            SOAPMessage soapMsg = mf.createMessage();
            soapMsg.setProperty(SOAPMessage.CHARACTER_SET_ENCODING, ""UTF-16"");
            soapMsg.setProperty(SOAPMessage.WRITE_XML_DECLARATION, ""false"");
            soapMsg.getSOAPBody().addBodyElement(new QName(""mytest""));
            soapMsg.saveChanges();
            return soapMsg;
        } catch (SOAPException e) {
            throw new RuntimeException(e);
        }
    }

    public static void main(String[] args) {
        System.out.println(""Starting Server"");
        CalculatorProvider implementor = new CalculatorProvider();
        String address = ""http://localhost:7650/Calculator"";
        Endpoint.publish(address, implementor);
    }
}
{quote}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46990,,,2011-01-04 07:46:03.0,,,,,,0|i0v0y7:,179127,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Going to a JAX-RS resource that contains a space in the path returns a 404 response code,CXF-3226,12494421,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jadowney,jadowney,01/Jan/11 23:22,17/Feb/11 18:45,14/Mar/19 02:29,08/Jan/11 19:55,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,,,,,0,,,,,,"If you go to a JAX-RS resource that contains a space in the path, the Apache CXF JAX-RS runtime returns a 404 response code. In the STDERR log, you'll see the following message:

Jan 1, 2011 3:05:01 PM org.apache.cxf.jaxrs.utils.JAXRSUtils findTargetMethod
WARNING: .No operation matching request path /has%20space is found, HTTP Method : GET, ContentType : */*, Accept : application/xml,application/xhtml+xml,image/png,text/html;q=0.9,text/plain;q=0.8,*/*;q=0.5,.

The cause for this problem may be found in AbstractServerController.getBaseURL. It assumes pathInfo is always decoded but in the JAX-RS situation, it may actually still be encoded.

Relevant sample code + patch attached.","Java 1.6_22
Apache CXF 2.3.1",,,,,,,,,,,,,,,,01/Jan/11 23:32;jadowney;cxf_jax_rs_space_bug.zip;https://issues.apache.org/jira/secure/attachment/12467265/cxf_jax_rs_space_bug.zip,01/Jan/11 23:32;jadowney;patch.diff;https://issues.apache.org/jira/secure/attachment/12467266/patch.diff,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2011-01-03 18:28:06.934,,,no_permission,,Novice,,,,,,,,,,,46992,,,Thu Feb 17 18:45:46 UTC 2011,,,,,,0|i13yov:,231250,,,,,,,,"01/Jan/11 23:32;jadowney;File Description
================

Space       - Contains valid JAX-RS resource
Application - JAX-RS application
JettyServer - Launches Jetty hosting a CXFNonSpringJaxrsServlet servlet to demo bug

Example URLs
============

http://localhost:1334/?_wadl - generates WADL for Space resource
http://localhost:1334/nospace - returns a text/plain document
http://localhost:1334/has%20space - returns a blank text/xml document with a 404 response code",01/Jan/11 23:32;jadowney;Potential patch for issue. Only affects AbstractServerController.java.,"03/Jan/11 18:28;sergey_beryozkin;Hi

But what happens if you have ""the%20%space"" Path value or similar ?  If we decode at the servlet level then we won't be able to match ""the%20%space"" ?

Can JAX-RS Path can not contain WSPaces in the actual literal name ? Do you think this is still a valid JIRA ?
thanks, Sergey  ","04/Jan/11 05:03;jadowney;If you want to match @Path(""the%20%space""), per RFC3986, the client should already have encoded this parameter as ""the%2520%25space"" and then the JAX-RS runtime should appropriately find the resource.

Looking @ the JAX-RS 1.1 specification, @Path can contain spaces! If you look at page 14 (in section 3.4), there is this sample:

1 @Path(""widget list/{id}"")
2 @Path(""widget%20list/{id}"")

The specification states that these two lines are equivalent.

In my humble opinion (and I'll defer to you since you know the code way better than me), the key problem that needs to be addressed is that the base URL value needs to be calculated correctly. The fix doesn't necessarily have to be in AbstractServerController. You could subclass AbstractServerController and then provide your own implementation of getBaseURL to do the appropriate work. This ServerController would then only be used within CXFNonSpringJaxrsServlet.

On the JIRA question, yes, I think it's a valid JIRA issue but I'm welcome to discussing that :-)","06/Jan/11 21:08;sergey_beryozkin;Jason, I agree that @Path(""widget list/{id}"") should be matched against request URIs containing 

widget%20list segments.

The fix will have to be different though, literal values in ""widget list/{id}"" have to be encoded, with existing '%'s if any skipped, as per the @Path javadocs...I'll look into it
 
Thanks, Sergey
","17/Feb/11 16:16;cthiebaud;This fix caused a regression on our system.

We have a jaxrs service annotated with the following path :

@Path(""/{g}:{a}:LATEST"")

It worked fine with cxf version 2.3.1. With cxf 2.3.2 the regexp generated is /([^/]+?)%3A([^/]+?)%3ALATEST(/.*)? and URITemplate fails to map to the correct service.

Clients have already been developed, are in production , and basically cannot be modified.

Is there anything I can do on the server to handle incoming requests such as /groupId:artifactId:LATEST as before ? Not sure how to do this.
","17/Feb/11 16:50;sergey_beryozkin;Ouch...

The simplest workaround is to register a custom CXF in interceptor and replace 
the Message.REQUEST_URI message property with the new value where ':' are replaced with %3A:

public class CustomInInterceptor extends AbstractPhaseInterceptor<Message> {

    public CustomInInterceptor() {
        super(Phase.UNMARSHAL);
    }

    @Override
    public void handleMessage(Message message) {

         String uri = message.get(Message.REQUEST_URI);
         
         uri.replace("":"", ""%3A"");
         
         message.put(Message.REQUEST_URI, uri);
           
    } 
}

and then register it inside the jaxrs:inInterceptors

It should provide a workaround fix and I will apply a fix to the trunk too.
thanks","17/Feb/11 18:45;sergey_beryozkin;The fix has been applied, will be in 2.3.3 very soon.

Another approach, instead of adding an interceptor as a workaround, is to add another method to the server code, with explicit %3A in the path, as some legacy web clients will actually URLEncode the path fragment and the JAX-RS spec does not provide for something like @Path(""/a:b"") match both /a:b and /a%3Ab

thanks",,,,,,,,,,,,,,,,,,,
OsgiTransportFactory can't fully initialized problem,CXF-3222,12494217,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,29/Dec/10 05:23,21/Jan/11 18:14,14/Mar/19 02:29,29/Dec/10 05:38,,,,,,,,,,,,,,,,,,2.3.2,2.4,,,,,,,0,,,,,,"When try to deploy cxf-http-osgi bundle in OSGi container, I get problem that OsgiTransportFactory can't fully initialized which is caused by potential circular reference.
Need refactor OsgiTransportFactory and cxf-extension-osgi.xml to keep it same way as it in cxf-http-jetty",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46995,,,Wed Dec 29 05:38:57 UTC 2010,,,,,,0|i13yk7:,231229,,,,,,,,"29/Dec/10 05:38;ffang;commit fix
http://svn.apache.org/viewvc?rev=1053532&view=rev for trunk
http://svn.apache.org/viewvc?rev=1053533&view=rev for 2.3 branch

also fixed the incorrect transport id problem as tracked by CXF-3183",,,,,,,,,,,,,,,,,,,,,,,,,,
StaxInInterceptor doesn't handle redirects well,CXF-3221,12494123,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,chris@die-schneider.net,gcc,gcc,27/Dec/10 15:14,18/Apr/11 12:42,14/Mar/19 02:29,06/Apr/11 00:40,2.2.7,,,,,,,,,,,,,,,,,2.3.3,,,,,,,,0,,,,,,"StaxInInterceptor detects the wrong content type of the response, and throws an exception, in handleMessage().

However it doesn't check the response code to see whether it's a redirect. In this case there may not be any useful HTML output, so the INVALID_HTML_RESPONSETYPE exception will not contain any information that helps to debug the fault.

This could alternatively be seen as the job of HTTPConduit.WrappedOutputStream, which checks for 404 errors (HTTP_NOT_FOUND), but assumes that there will always be a response body.

It's also not clear what the accessed URL was, to help with debugging.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-21 22:30:38.349,,,no_permission,,,,,,,,,,,,,46996,,,Wed Apr 06 00:40:00 UTC 2011,,,,,,0|i0a37r:,56794,,,,,,,,"21/Jan/11 22:30;dkulp;
I'm going to assign this to Christian.  For 2.3.2, he did some work in the HTTPConduit to get it to throw more reasonable exceptions in some of these types of cases.    If this isn't covered by that, then it probably should be.   

Christian: can you take a look?","24/Jan/11 07:51;chris@die-schneider.net;Hi Chris. Redirects should be handled in HTTPConduit so they should not get to the StaxInterceptor. We also have tests for redirects so the normal case should work. Could you give me some more details under what circumstances the exception appears? Ideal would be a small maven project that I can run and see the problem. Could you also try with the just released 2.3.2 version maybe we already fixed that. 
","17/Feb/11 14:20;gcc;Hi Christian,

The RITA RPC client (http://rita.logscluster.org/browser/rita/src/org/wfp/rita/rpc/RpcClientFactory.java), if configured to access the old server (http://rita.wfplogistics.org/rita/rpc/RpcServerInterface1), which sends redirects, should fail with this error.

Cheers, Chris.",06/Apr/11 00:40;dkulp;Marking this as fixed with 2.3.3 due to the refactoring of the redirect handling in the conduit.,,,,,,,,,,,,,,,,,,,,,,,
java_first_jms server doesn't support to start the service with out using the jaxws API,CXF-3220,12494093,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,njiang,njiang,27/Dec/10 05:09,21/Jan/11 18:14,14/Mar/19 02:29,27/Dec/10 05:14,2.3,2.3.1,,,,,,,,,,,,,,,,2.3.2,,,,Samples,,,,0,,,,,,"When you start  the service just with the argument -activemqbroker , you will get this error 
""Invalid argument null""",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,46997,,,2010-12-27 05:09:03.0,,,,,,0|i13yq7:,231256,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RMs' DestinationSequence does not update the ack range in the RMStore,CXF-3219,12494063,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ay,ay,ay,25/Dec/10 22:36,08/Aug/11 14:43,14/Mar/19 02:29,06/Jun/11 18:07,2.2.12,2.3.1,,,,,,,,,,,,,,,,2.4.1,,,,WS-* Components,,,,0,,,,,,"This problem is described in my mail to the cxf-user list.
http://cxf.547215.n5.nabble.com/WS-RMs-DestinationSequence-does-not-update-the-ack-range-stored-in-the-RMStore-td3315278.html

In short, the acknowledged range information of the destination sequence is not updated in the RMTxStore for the inbound messages. So, when you stop and restart the server and the server retrieves the desctination sequences from the RMStore, the acknowledged range information is not retrieved. Consequently, the server will return the next acknowledgement with its range starting from the current messag number and not including the message numbers that have been acknowledged prior to the server restart.

As I mentioned in the above mail, I think the Destination's acknowledge method should be modified so that the destination sequence is udpated in the storage. 

In the attached file, I modified the Destination class's acknowledge method so that the acknowledgement sequence gets updated in the storage. I also modified the mocking part of the DestinationTest class to accommodate this change.

As commented in the modified code, the call to the storage to update the acknowleged range requires the content of the message. Unfortunately, for the inbound processing, StaxInInterceptor has consumed the InputStream object and placed instead the XMLStreamReader in the message. But this stream reader is consumed by several interceptors and the entire content is not available at RMInInterceptor.

If the LoggingInInterceptor is engaged, this interceptor leaves the resettable InputStream in the message. In this case, we can get the content by reading this input stream again. If this interceptor is not engaged, we cannot get the message content and we fall back to use an empty content to just update the acknowledgement range information.

So the modified code is a workaround solution. I think a permanent solution might use another interceptor placed in front of StaxInInterceptor to store the message content. In that case, we can simply get the message content at the acknowledge method at RMInInterceptor.

Please let me know how you think.

Thanks.
Regards, Aki
",,,,,,,,,,,,,,,,,25/Dec/10 22:39;ay;rt-ws-rm-2.3.x-fixes-diff.txt;https://issues.apache.org/jira/secure/attachment/12466965/rt-ws-rm-2.3.x-fixes-diff.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,5803,,,Mon Jun 06 18:07:43 UTC 2011,,,,,,0|i0b94v:,63592,,,,,,,,"25/Dec/10 22:39;ay;svn diff for codeline 2.3.x-fixes
Affected files
2.3.x-fixes/rt/ws/rm/src/main/java/org/apache/cxf/ws/rm/Destination.java
2.3.x-fixes/rt/ws/rm/src/test/java/org/apache/cxf/ws/rm/DestinationTest.java","06/Jun/11 12:00;ay;I am fixing this issue by introducing a new interceptor in the inbound chain for 2.4.x to capture the stream.

I am also updating several ws-rm systests to verify the behavior of the correct ack range generation.
","06/Jun/11 18:07;ay;The described issue has been resolved with this patch. Thus, I am closing this issue ticket.

It is noted that some future changes is expected to be made in WS-RM and they will be tracked in other tickets.",,,,,,,,,,,,,,,,,,,,,,,,
apparent regression introduced between 2.2.8 and 2.2.9:  http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/SCT not supported,CXF-3218,12494046,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jfraney,jfraney,24/Dec/10 18:11,21/Jan/11 18:14,14/Mar/19 02:29,04/Jan/11 21:28,2.3.1,,,,,,,,,,,,,,,,,2.3.2,,,,,,,,0,,,,,,"This problem shows on 2.3.1 but not in 2.2.8.  The problem shows in 2.2.9.

The code is taken from: http://www.ibm.com/developerworks/java/library/j-jws17/index.html

The only difference between the (soon to be attached) code and the original is the cxf home path in build.properties.

There are two services defined in the code, the failure occurs on only one of them: cxf-seismic-scencr.war
Load that into tomcat and then run the client with: ant run-scencr


Exception in tomcat catalina log:

Dec 24, 2010 12:48:19 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl}SecurityTokenService#{http://docs.oasis-open.org/ws-sx/ws-trust/200512/wsdl}RequestSecurityToken has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: Action http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/SCT not supported
	at org.apache.cxf.ws.addressing.MAPAggregator.mediate(MAPAggregator.java:461)
	at org.apache.cxf.ws.addressing.MAPAggregator.handleMessage(MAPAggregator.java:166)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110)
	at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:423)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:178)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:647)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)
","jdk1.6, linux ubuntu 10.10, tomcat 5.5.31.",,,,,,,,,,,,,,,,24/Dec/10 18:18;jfraney;scencr.zip;https://issues.apache.org/jira/secure/attachment/12466947/scencr.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-12-30 09:45:24.717,,,no_permission,,,,,,,,,,,,,46998,,,Thu Dec 30 09:45:24 UTC 2010,,,,,,0|i13yon:,231249,,,,,,,,"30/Dec/10 09:45;karl rhenius;If you change your binding in seismic-scencr.wsdl from soap to soap12, everything is fine. Something changed in the soap11 handlers.",,,,,,,,,,,,,,,,,,,,,,,,,,
Error when a process method of a webservice is called by multiple client (thread) in the same time,CXF-3215,12493855,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jdupont,jdupont,22/Dec/10 10:25,21/Jan/11 18:14,14/Mar/19 02:29,04/Jan/11 19:38,2.2,,,,,,,,,,,,,,,,,2.3.2,,,,,,,,0,,,,,,"This error occurs : 

INFO: Creating Service {http://siham.amue.fr}IUtilisateursServiceService from class fr.amue.siham.service.IUtilisateursService
Exception in thread ""Thread-2"" Exception in thread ""Thread-1"" java.lang.LinkageError: loader (instance of  org/apache/cxf/common/util/ASMHelper$TypeHelperClassLoader): attempted  duplicate class definition for name: ""fr/amue/siham/service/jaxws_asm/package-info""
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(Unknown Source)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader.defineClass(ASMHelper.java:208)
	at org.apache.cxf.common.util.ASMHelper.loadClass(ASMHelper.java:167)
	at org.apache.cxf.jaxws.WrapperClassGenerator.generatePackageInfo(WrapperClassGenerator.java:255)
	at org.apache.cxf.jaxws.WrapperClassGenerator.createWrapperClass(WrapperClassGenerator.java:179)
	at org.apache.cxf.jaxws.WrapperClassGenerator.generate(WrapperClassGenerator.java:137)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.generatedWrapperBeanClass(JaxWsServiceFactoryBean.java:518)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.getExtraClass(JaxWsServiceFactoryBean.java:496)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:365)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:525)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:431)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:191)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:164)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:100)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:52)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:102)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:115)
	at fr.amue.siham.client.CreateOrModifyClient.process(CreateOrModifyClient.java:76)
	at fr.amue.siham.client.ThreadInjection.run(ThreadInjection.java:34)
java.lang.IllegalArgumentException: fr.amue.siham.service.jaxws_asm
	at java.lang.ClassLoader.definePackage(Unknown Source)
	at org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader.defineClass(ASMHelper.java:197)
	at org.apache.cxf.common.util.ASMHelper.loadClass(ASMHelper.java:167)
	at org.apache.cxf.jaxws.WrapperClassGenerator.generatePackageInfo(WrapperClassGenerator.java:255)
	at org.apache.cxf.jaxws.WrapperClassGenerator.createWrapperClass(WrapperClassGenerator.java:179)
	at org.apache.cxf.jaxws.WrapperClassGenerator.generate(WrapperClassGenerator.java:137)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.generatedWrapperBeanClass(JaxWsServiceFactoryBean.java:518)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.getExtraClass(JaxWsServiceFactoryBean.java:496)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:365)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:525)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:431)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:191)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:164)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:100)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:52)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:102)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:115)
	at fr.amue.siham.client.CreateOrModifyClient.process(CreateOrModifyClient.java:76)
	at fr.amue.siham.client.ThreadInjection.run(ThreadInjection.java:34)
Exception in thread ""Thread-0"" java.lang.LinkageError: loader (instance of  org/apache/cxf/common/util/ASMHelper$TypeHelperClassLoader): attempted  duplicate class definition for name: ""fr/amue/siham/service/jaxws_asm/package-info""
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(Unknown Source)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at java.lang.ClassLoader.defineClass(Unknown Source)
	at org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader.defineClass(ASMHelper.java:208)
	at org.apache.cxf.common.util.ASMHelper.loadClass(ASMHelper.java:167)
	at org.apache.cxf.jaxws.WrapperClassGenerator.generatePackageInfo(WrapperClassGenerator.java:255)
	at org.apache.cxf.jaxws.WrapperClassGenerator.createWrapperClass(WrapperClassGenerator.java:179)
	at org.apache.cxf.jaxws.WrapperClassGenerator.generate(WrapperClassGenerator.java:137)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.generatedWrapperBeanClass(JaxWsServiceFactoryBean.java:518)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.getExtraClass(JaxWsServiceFactoryBean.java:496)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:365)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:525)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:431)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:191)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:164)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:100)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:52)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:102)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:115)
	at fr.amue.siham.client.CreateOrModifyClient.process(CreateOrModifyClient.java:76)
	at fr.amue.siham.client.ThreadInjection.run(ThreadInjection.java:34)


When a process method of a CXF 2.2 webservice is called by multiple client (thread) in the same time.
How can i avoid this error.

Thanks a lot for any help!

",Windows7/Jetty ,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,47001,,,2010-12-22 10:25:12.0,,,,,,0|i0v0xj:,179124,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXFBusLifeCycleManager will call the preshutdown twice if when the BusApplicationContext is closed,CXF-3214,12493844,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,njiang,njiang,22/Dec/10 08:30,16/Jul/13 19:29,14/Mar/19 02:29,22/Dec/10 13:53,2.0.13,2.1.10,2.2.10,2.2.11,2.2.12,2.3,2.3.1,,,,,,,,,,,2.3.2,2.4,,,Core,,,,0,,,,,,"When I write the test of BusApplicationListenerTest I found the BusLifeCycleListener will be called twice when the application context is closed.
The code of CXFBusLifeCycleManager should be changed like this
{code}
--- rt/core/src/main/java/org/apache/cxf/buslifecycle/CXFBusLifeCycleManager.java	(revision 1051771)
+++ rt/core/src/main/java/org/apache/cxf/buslifecycle/CXFBusLifeCycleManager.java	(working copy)
@@ -78,9 +78,11 @@
     
     public void preShutdown() {
         // TODO inverse order of registration?
-        preShutdownCalled = true;
-        for (BusLifeCycleListener listener : listeners) {
-            listener.preShutdown();
+        if (!preShutdownCalled) { 
+            preShutdownCalled = true;
+            for (BusLifeCycleListener listener : listeners) {
+                listener.preShutdown();
+            }
         }
     }

{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47002,,,2010-12-22 08:30:20.0,,,,,,0|i0sxsn:,166952,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java code generation problem,CXF-3212,12493839,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,,sunny8875,sunny8875,22/Dec/10 07:55,18/Apr/11 12:50,14/Mar/19 02:29,14/Mar/11 21:52,2.2.2,,,,,,,,,,,,,,,,,2.3.2,,,,Tooling,,,,0,,,,,,"Hi am trying to generate java code from wsdl file using cxf-codegen-plugin by using maven. But I am facing some problem because of one child element having the same name as of parent element.Please find my configurations below:

1) POM file plugin configuration: 
{code}
<plugin>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-codegen-plugin</artifactId>
				<version>2.2.2</version>
				<executions>
					<execution>
						<configuration>
							<wsdlOptions>
						 	<wsdlOption>
									<wsdl>
										src/main/resources/AmadeusWebServices.wsdl
									</wsdl>
									<extraargs>
										<extraarg>-b</extraarg>
                                  		<extraarg>src/main/resources/binding.xml</extraarg>
	                            		<extraarg>-exsh</extraarg>
                                  		<extraarg>true</extraarg> 
                                  		<!-- <extraarg>-noAddressBinding</extraarg> -->
                                  		<extraarg>-autoNameResolution</extraarg>
                                  		<extraarg>-verbose</extraarg>
                               		 </extraargs>
								</wsdlOption>
							</wsdlOptions>
						</configuration>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
{code}

2) binding.xml configuration:
{code}
<jaxws:bindings
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
    xmlns=""http://java.sun.com/xml/ns/jaxws""
    xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws"">
    <enableWrapperStyle>false</enableWrapperStyle>
</jaxws:bindings>
{code}

3) My xsd file imported in wsdl:
{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" targetNamespace=""http://xml.amadeus.com/FMPTBR_08_2_1A"" xmlns=""http://xml.amadeus.com/FMPTBR_08_2_1A"" elementFormDefault=""qualified"">
  <xs:element name=""Fare_MasterPricerTravelBoardSearchReply"">
    <xs:complexType>
      <xs:sequence>
        <xs:element name=""replyStatus"" minOccurs=""0"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""status"" maxOccurs=""10"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""advisoryTypeInfo"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""notification"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""notification2"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""description"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..70</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""70"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""errorMessage"" minOccurs=""0"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""applicationError"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""applicationErrorDetail"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""error"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..4</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""4"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""errorMessageText"" minOccurs=""0"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""freeTextQualification"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""textSubjectQualifier"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""informationType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..4</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""4"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""language"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""description"" minOccurs=""0"" maxOccurs=""9"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..70</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""70"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""conversionRate"" minOccurs=""0"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""conversionRateDetail"" maxOccurs=""9"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""conversionType"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""currency"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: a..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""rate"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..18</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""0"" />
                          <xs:maxLength value=""18"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""convertedAmountLink"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..18</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""0"" />
                          <xs:maxLength value=""18"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""taxQualifier"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""0"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""familyInformation"" minOccurs=""0"" maxOccurs=""200"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""refNumber"">
                <xs:simpleType>
                  <xs:restriction base=""xs:decimal"">
                    <xs:annotation>
                      <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                    </xs:annotation>
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name=""fareFamilyname"" minOccurs=""0"">
                <xs:simpleType>
                  <xs:restriction base=""xs:string"">
                    <xs:annotation>
                      <xs:documentation xml:lang=""en"">Format limitations: an..10</xs:documentation>
                    </xs:annotation>
                    <xs:minLength value=""1"" />
                    <xs:maxLength value=""10"" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name=""hierarchy"" minOccurs=""0"">
                <xs:simpleType>
                  <xs:restriction base=""xs:decimal"">
                    <xs:annotation>
                      <xs:documentation xml:lang=""en"">Format limitations: n..4</xs:documentation>
                    </xs:annotation>
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name=""cabin"" minOccurs=""0"">
                <xs:simpleType>
                  <xs:restriction base=""xs:string"">
                    <xs:annotation>
                      <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                    </xs:annotation>
                    <xs:minLength value=""1"" />
                    <xs:maxLength value=""1"" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""feeDetails"" minOccurs=""0"" maxOccurs=""999"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""feeReference"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""referenceType"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""feeRefNumber"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:decimal"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                          </xs:annotation>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""feeInformation"" minOccurs=""0"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""feeIdentification"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""feeInformation"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""feeType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""feeAmountType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""feeAmount"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""feeCurrency"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""feeParameters"" minOccurs=""0"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""feeParameter"" minOccurs=""0"" maxOccurs=""20"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""feeParameterType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""3"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""feeParameterDescription"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..15</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""15"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""convertedOrOriginalInfo"" minOccurs=""0"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""conversionRateDetail"" maxOccurs=""9"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""conversionType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""currency"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""amount"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..12</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""12"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""companyIdText"" minOccurs=""0"" maxOccurs=""5000"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""textRefNumber"" minOccurs=""0"">
                <xs:simpleType>
                  <xs:restriction base=""xs:decimal"">
                    <xs:annotation>
                      <xs:documentation xml:lang=""en"">Format limitations: n..4</xs:documentation>
                    </xs:annotation>
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name=""companyText"" minOccurs=""0"">
                <xs:simpleType>
                  <xs:restriction base=""xs:string"">
                    <xs:annotation>
                      <xs:documentation xml:lang=""en"">Format limitations: an..70</xs:documentation>
                    </xs:annotation>
                    <xs:minLength value=""0"" />
                    <xs:maxLength value=""70"" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""officeIdDetails"" minOccurs=""0"" maxOccurs=""20"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""officeIdInformation"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""officeIdentification"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""officeName"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..9</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""agentSignin"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..9</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""9"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""confidentialOffice"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..9</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""9"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""otherOffice"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..9</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""9"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""officeType"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an1</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""1"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""officeCode"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..30</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""30"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""officeIdReference"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""referenceType"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""refNumber"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:decimal"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                          </xs:annotation>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""flightIndex"" minOccurs=""0"" maxOccurs=""6"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""requestedSegmentRef"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""segRef"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:decimal"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: n..2</xs:documentation>
                          </xs:annotation>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""locationForcing"" minOccurs=""0"" maxOccurs=""2"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""airportCityQualifier"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""1"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""segmentNumber"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""groupOfFlights"" maxOccurs=""900"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""propFlightGrDetail"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""flightProposal"" maxOccurs=""9"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""ref"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..4</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""4"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""unitQualifier"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""flightCharacteristic"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""flightDetails"" maxOccurs=""4"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""flightInformation"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""productDateTime"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""dateOfDeparture"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n6</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""6"" />
                                            <xs:maxLength value=""6"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""timeOfDeparture"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n4</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""4"" />
                                            <xs:maxLength value=""4"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""dateOfArrival"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n6</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""6"" />
                                            <xs:maxLength value=""6"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""timeOfArrival"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n4</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""4"" />
                                            <xs:maxLength value=""4"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""dateVariation"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""location"" maxOccurs=""2"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""locationId"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a3..5</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""3"" />
                                            <xs:maxLength value=""5"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""airportCityQualifier"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""terminal"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..5</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""5"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""companyId"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""marketingCarrier"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an2..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""2"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""operatingCarrier"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an2..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""2"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""flightNumber"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..4</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""4"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""productDetail"" minOccurs=""0"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""equipmentType"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""operatingDay"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..7</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""7"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""techStopNumber"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:decimal"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n..2</xs:documentation>
                                            </xs:annotation>
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""locationId"" minOccurs=""0"" maxOccurs=""3"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a3..5</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""3"" />
                                            <xs:maxLength value=""5"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""addProductDetail"" minOccurs=""0"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""lastSeatAvailable"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""levelOfAccess"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""electronicTicketing"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""operationalSuffix"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""productDetailQualifier"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""technicalStop"" minOccurs=""0"" maxOccurs=""5"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:sequence>
                                  <xs:element name=""stopDetails"" maxOccurs=""2"">
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name=""dateQualifier"" minOccurs=""0"">
                                          <xs:simpleType>
                                            <xs:restriction base=""xs:string"">
                                              <xs:annotation>
                                                <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                              </xs:annotation>
                                              <xs:minLength value=""1"" />
                                              <xs:maxLength value=""3"" />
                                            </xs:restriction>
                                          </xs:simpleType>
                                        </xs:element>
                                        <xs:element name=""date"" minOccurs=""0"">
                                          <xs:simpleType>
                                            <xs:restriction base=""xs:string"">
                                              <xs:annotation>
                                                <xs:documentation xml:lang=""en"">Format limitations: n6</xs:documentation>
                                              </xs:annotation>
                                              <xs:minLength value=""6"" />
                                              <xs:maxLength value=""6"" />
                                            </xs:restriction>
                                          </xs:simpleType>
                                        </xs:element>
                                        <xs:element name=""firstTime"" minOccurs=""0"">
                                          <xs:simpleType>
                                            <xs:restriction base=""xs:string"">
                                              <xs:annotation>
                                                <xs:documentation xml:lang=""en"">Format limitations: n4</xs:documentation>
                                              </xs:annotation>
                                              <xs:minLength value=""4"" />
                                              <xs:maxLength value=""4"" />
                                            </xs:restriction>
                                          </xs:simpleType>
                                        </xs:element>
                                        <xs:element name=""equipementType"" minOccurs=""0"">
                                          <xs:simpleType>
                                            <xs:restriction base=""xs:string"">
                                              <xs:annotation>
                                                <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                              </xs:annotation>
                                              <xs:minLength value=""1"" />
                                              <xs:maxLength value=""3"" />
                                            </xs:restriction>
                                          </xs:simpleType>
                                        </xs:element>
                                        <xs:element name=""locationId"" minOccurs=""0"">
                                          <xs:simpleType>
                                            <xs:restriction base=""xs:string"">
                                              <xs:annotation>
                                                <xs:documentation xml:lang=""en"">Format limitations: an3..5</xs:documentation>
                                              </xs:annotation>
                                              <xs:minLength value=""3"" />
                                              <xs:maxLength value=""5"" />
                                            </xs:restriction>
                                          </xs:simpleType>
                                        </xs:element>
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""commercialAgreement"" minOccurs=""0"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""codeshareDetails"" minOccurs=""0"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""codeShareType"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""airlineDesignator"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an2..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""2"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""flightNumber"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:decimal"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n..4</xs:documentation>
                                            </xs:annotation>
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""otherCodeshareDetails"" minOccurs=""0"" maxOccurs=""9"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""codeShareType"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""airlineDesignator"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an2..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""2"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""flightNumber"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:decimal"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n..4</xs:documentation>
                                            </xs:annotation>
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""recommendation"" minOccurs=""0"" maxOccurs=""900"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""itemNumber"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""itemNumberId"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""number"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""numberType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""codeShareDetails"" minOccurs=""0"" maxOccurs=""6"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""transportStageQualifier"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""company"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an2..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""2"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""priceTicketing"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""priceType"" maxOccurs=""20"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""warningMessage"" minOccurs=""0"" maxOccurs=""4"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""freeTextQualification"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""textSubjectQualifier"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""informationType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..4</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""4"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""language"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""description"" minOccurs=""0"" maxOccurs=""9"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..70</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""70"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""fareFamilyRef"" minOccurs=""0"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""referencingDetail"" minOccurs=""0"" maxOccurs=""6"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""refQualifier"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""refNumber"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""recPriceInfo"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""monetaryDetail"" minOccurs=""0"" maxOccurs=""30"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""amountType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""amount"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""currency"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""miniRule"" minOccurs=""0"" maxOccurs=""9"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""restrictionType"" minOccurs=""0"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..6</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""0"" />
                          <xs:maxLength value=""6"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""category"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: a..3</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""0"" />
                          <xs:maxLength value=""3"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                    <xs:element name=""indicator"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""ruleIndicator"" minOccurs=""0"" maxOccurs=""2"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""1"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""miniRules"" minOccurs=""0"" maxOccurs=""5"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""interpretation"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: a..9</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""9"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""value"" minOccurs=""0"" maxOccurs=""10"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..5</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""0"" />
                                <xs:maxLength value=""5"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""segmentFlightRef"" minOccurs=""0"" maxOccurs=""909"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:sequence>
                      <xs:element name=""referencingDetail"" minOccurs=""0"" maxOccurs=""99"">
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element name=""refQualifier"" minOccurs=""0"">
                              <xs:simpleType>
                                <xs:restriction base=""xs:string"">
                                  <xs:annotation>
                                    <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                  </xs:annotation>
                                  <xs:minLength value=""1"" />
                                  <xs:maxLength value=""3"" />
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:element>
                            <xs:element name=""refNumber"">
                              <xs:simpleType>
                                <xs:restriction base=""xs:decimal"">
                                  <xs:annotation>
                                    <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                  </xs:annotation>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:element>
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""recommandationSegmentsFareDetails"" minOccurs=""0"" maxOccurs=""6"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""recommendationSegRef"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""segRef"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..2</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""locationForcing"" minOccurs=""0"" maxOccurs=""2"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""airportCityQualifier"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""1"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""segmentNumber"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:decimal"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                      </xs:annotation>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""segmentMonetaryInformation"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""monetaryDetail"" minOccurs=""0"" maxOccurs=""20"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""amountType"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""0"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""amount"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:decimal"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                      </xs:annotation>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""currency"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""paxFareProduct"" maxOccurs=""10"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""paxFareDetail"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""paxFareNum"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""totalFareAmount"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""totalTaxAmount"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""codeShareDetails"" minOccurs=""0"" maxOccurs=""6"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""transportStageQualifier"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""company"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an2..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""2"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""monetaryDetails"" minOccurs=""0"" maxOccurs=""20"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""amountType"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""0"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""amount"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:decimal"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                      </xs:annotation>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""currency"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""pricingTicketing"" minOccurs=""0"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""priceType"" maxOccurs=""20"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""0"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""feeRef"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""referencingDetail"" minOccurs=""0"" maxOccurs=""99"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""refQualifier"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""refNumber"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:decimal"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                      </xs:annotation>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""paxReference"" maxOccurs=""6"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""ptc"" minOccurs=""0"" maxOccurs=""3"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..6</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""6"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""traveller"" minOccurs=""0"" maxOccurs=""9"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""ref"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:decimal"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                      </xs:annotation>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""infantIndicator"" minOccurs=""0"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: n1</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""1"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""fare"" minOccurs=""0"" maxOccurs=""5"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""pricingMessage"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""freeTextQualification"" minOccurs=""0"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""textSubjectQualifier"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""informationType"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..4</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""4"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""language"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""description"" minOccurs=""0"" maxOccurs=""9"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..70</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""70"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""monetaryInformation"" minOccurs=""0"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""monetaryDetail"" maxOccurs=""2"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""amountType"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""0"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""amount"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:decimal"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                            </xs:annotation>
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""currency"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""fareDetails"" maxOccurs=""6"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""segmentRef"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""segRef"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:decimal"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: n..2</xs:documentation>
                                      </xs:annotation>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element name=""locationForcing"" minOccurs=""0"" maxOccurs=""2"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""airportCityQualifier"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""segmentNumber"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:decimal"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                            </xs:annotation>
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""groupOfFares"" maxOccurs=""4"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""productInformation"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""cabinProduct"" minOccurs=""0"">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name=""rbd"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""1"" />
                                                  <xs:maxLength value=""1"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                            <xs:element name=""bookingModifier"" minOccurs=""0"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an..1</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""0"" />
                                                  <xs:maxLength value=""1"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                            <xs:element name=""cabin"" minOccurs=""0"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an1</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""1"" />
                                                  <xs:maxLength value=""1"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                            <xs:element name=""avlStatus"" minOccurs=""0"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""0"" />
                                                  <xs:maxLength value=""3"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name=""fareProductDetail"" minOccurs=""0"">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name=""fareBasis"" minOccurs=""0"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an..18</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""0"" />
                                                  <xs:maxLength value=""18"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                            <xs:element name=""passengerType"" minOccurs=""0"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an..6</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""1"" />
                                                  <xs:maxLength value=""6"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                            <xs:element name=""fareType"" minOccurs=""0"" maxOccurs=""3"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""0"" />
                                                  <xs:maxLength value=""3"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name=""corporateId"" minOccurs=""0"" maxOccurs=""2"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..20</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""20"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""breakPoint"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""1"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""contextDetails"" minOccurs=""0"">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name=""availabilityCnxType"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""1"" />
                                                  <xs:maxLength value=""3"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""fareFamiliesRef"" minOccurs=""0"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""referencingDetail"" minOccurs=""0"" maxOccurs=""6"">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name=""refQualifier"" minOccurs=""0"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:string"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:minLength value=""0"" />
                                                  <xs:maxLength value=""3"" />
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                            <xs:element name=""refNumber"">
                                              <xs:simpleType>
                                                <xs:restriction base=""xs:decimal"">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                                  </xs:annotation>
                                                </xs:restriction>
                                              </xs:simpleType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""psgSegMonetaryInformation"" minOccurs=""0"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""monetaryDetail"" minOccurs=""0"" maxOccurs=""20"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""amountType"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""0"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""amount"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:decimal"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n..18</xs:documentation>
                                            </xs:annotation>
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                      <xs:element name=""currency"" minOccurs=""0"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:string"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                            </xs:annotation>
                                            <xs:minLength value=""1"" />
                                            <xs:maxLength value=""3"" />
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name=""specificRecDetails"" minOccurs=""0"" maxOccurs=""900"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""specificRecItem"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""referenceType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""refNumber"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:decimal"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: n..3</xs:documentation>
                                </xs:annotation>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""specificProductDetails"" minOccurs=""0"" maxOccurs=""10"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""productReferences"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""paxFareNum"" maxOccurs=""10"">
                                  <xs:simpleType>
                                    <xs:restriction base=""xs:string"">
                                      <xs:annotation>
                                        <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                      </xs:annotation>
                                      <xs:minLength value=""1"" />
                                      <xs:maxLength value=""3"" />
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name=""fareContextDetails"" minOccurs=""0"" maxOccurs=""6"">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name=""requestedSegmentInfo"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name=""segRef"">
                                        <xs:simpleType>
                                          <xs:restriction base=""xs:decimal"">
                                            <xs:annotation>
                                              <xs:documentation xml:lang=""en"">Format limitations: n..2</xs:documentation>
                                            </xs:annotation>
                                          </xs:restriction>
                                        </xs:simpleType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name=""cnxContextDetails"" minOccurs=""0"" maxOccurs=""4"">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:sequence>
                                        <xs:element name=""fareCnxInfo"">
                                          <xs:complexType>
                                            <xs:sequence>
                                              <xs:element name=""cabinProduct"" minOccurs=""0"" maxOccurs=""6"">
                                                <xs:complexType>
                                                  <xs:sequence>
                                                    <xs:element name=""rbd"" minOccurs=""0"">
                                                      <xs:simpleType>
                                                        <xs:restriction base=""xs:string"">
                                                          <xs:annotation>
                                                            <xs:documentation xml:lang=""en"">Format limitations: a1</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:minLength value=""1"" />
                                                          <xs:maxLength value=""1"" />
                                                        </xs:restriction>
                                                      </xs:simpleType>
                                                    </xs:element>
                                                    <xs:element name=""bookingModifier"" minOccurs=""0"">
                                                      <xs:simpleType>
                                                        <xs:restriction base=""xs:string"">
                                                          <xs:annotation>
                                                            <xs:documentation xml:lang=""en"">Format limitations: an..1</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:minLength value=""0"" />
                                                          <xs:maxLength value=""1"" />
                                                        </xs:restriction>
                                                      </xs:simpleType>
                                                    </xs:element>
                                                    <xs:element name=""cabin"" minOccurs=""0"">
                                                      <xs:simpleType>
                                                        <xs:restriction base=""xs:string"">
                                                          <xs:annotation>
                                                            <xs:documentation xml:lang=""en"">Format limitations: an1</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:minLength value=""1"" />
                                                          <xs:maxLength value=""1"" />
                                                        </xs:restriction>
                                                      </xs:simpleType>
                                                    </xs:element>
                                                    <xs:element name=""avlStatus"">
                                                      <xs:simpleType>
                                                        <xs:restriction base=""xs:string"">
                                                          <xs:annotation>
                                                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:minLength value=""0"" />
                                                          <xs:maxLength value=""3"" />
                                                        </xs:restriction>
                                                      </xs:simpleType>
                                                    </xs:element>
                                                  </xs:sequence>
                                                </xs:complexType>
                                              </xs:element>
                                              <xs:element name=""contextDetails"" minOccurs=""0"">
                                                <xs:complexType>
                                                  <xs:sequence>
                                                    <xs:element name=""availabilityCnxType"">
                                                      <xs:simpleType>
                                                        <xs:restriction base=""xs:string"">
                                                          <xs:annotation>
                                                            <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:minLength value=""1"" />
                                                          <xs:maxLength value=""3"" />
                                                        </xs:restriction>
                                                      </xs:simpleType>
                                                    </xs:element>
                                                  </xs:sequence>
                                                </xs:complexType>
                                              </xs:element>
                                            </xs:sequence>
                                          </xs:complexType>
                                        </xs:element>
                                      </xs:sequence>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""warningInfo"" minOccurs=""0"" maxOccurs=""9"">
          <xs:complexType>
            <xs:sequence>
              <xs:element name=""globalMessageMarker"">
                <xs:complexType>
                  <xs:sequence />
                </xs:complexType>
              </xs:element>
              <xs:element name=""globalMessage"">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name=""freeTextQualification"" minOccurs=""0"">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name=""textSubjectQualifier"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..3</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""3"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name=""informationType"" minOccurs=""0"">
                            <xs:simpleType>
                              <xs:restriction base=""xs:string"">
                                <xs:annotation>
                                  <xs:documentation xml:lang=""en"">Format limitations: an..4</xs:documentation>
                                </xs:annotation>
                                <xs:minLength value=""1"" />
                                <xs:maxLength value=""4"" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name=""description"" minOccurs=""0"" maxOccurs=""9"">
                      <xs:simpleType>
                        <xs:restriction base=""xs:string"">
                          <xs:annotation>
                            <xs:documentation xml:lang=""en"">Format limitations: an..70</xs:documentation>
                          </xs:annotation>
                          <xs:minLength value=""1"" />
                          <xs:maxLength value=""70"" />
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name=""globalInformation"" minOccurs=""0"" maxOccurs=""9"">
          <xs:complexType>
            <xs:sequence>
              <xs:sequence>
                <xs:element name=""attributes"">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name=""attributeDetails"" maxOccurs=""9"">
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element name=""attributeType"">
                              <xs:simpleType>
                                <xs:restriction base=""xs:string"">
                                  <xs:annotation>
                                    <xs:documentation xml:lang=""en"">Format limitations: an..5</xs:documentation>
                                  </xs:annotation>
                                  <xs:minLength value=""1"" />
                                  <xs:maxLength value=""5"" />
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:element>
                            <xs:element name=""attributeDescription"" minOccurs=""0"">
                              <xs:simpleType>
                                <xs:restriction base=""xs:string"">
                                  <xs:annotation>
                                    <xs:documentation xml:lang=""en"">Format limitations: an..50</xs:documentation>
                                  </xs:annotation>
                                  <xs:minLength value=""1"" />
                                  <xs:maxLength value=""50"" />
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:element>
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
{code}

After executing the maven command I am getting the below error:

E:\amduesws\amadeus-cxf-test\target\generated-sources\cxf\com\amadeus\xml\fmptbr_08_2_1a\FareMasterPricerTravelBoardSear
chReply.java:[4424,26] com.amadeus.xml.fmptbr_08_2_1a.FareMasterPricerTravelBoardSearchReply.FeeDetails.FeeInformation i
s already defined in com.amadeus.xml.fmptbr_08_2_1a.FareMasterPricerTravelBoardSearchReply.FeeDetails


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-04 19:06:09.255,,,no_permission,,Moderate,,,,,,,,,,,47004,,,Mon Mar 14 21:52:19 UTC 2011,,,,,,0|i0uzif:,178894,,,,,,,,"04/Jan/11 19:06;dkulp;
Can you try this with a newer version of CXF?   I just tried it with 2.3.2-SNAPSHOT and it worked fine generating proper code.    If it still fails, I'll need a more complete test case attached.
","14/Mar/11 21:52;dkulp;
Marking resolved as of 2.3.2 as I confirmed it worked with that version and a request for more information was not returned.",,,,,,,,,,,,,,,,,,,,,,,,,
"Infinite loop in FileUtils.getDefaultTempDir() when ""java.io.tmpdir"" directory is not writable",CXF-3211,12493768,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,eric.citaire,eric.citaire,21/Dec/10 16:44,16/Jul/13 19:29,14/Mar/19 02:29,22/Dec/10 08:09,2.2.6,,,,,,,,,,,,,,,,,2.3.2,2.4,,,Core,,,,0,,,,,,"FileUtils.getDefaultTempDir() can go into a infinite loop when the ""java.io.tmpdir"" system property is set to an non-writable directory.

See issue #CXF-1924.

May be something like this would prevent an infinite loop :

{{s = System.getProperty(""java.io.tmpdir"");}}
{{File checkExists = new File(s);}}
{{if (!checkExists.exists() || !checkExists.isDirectory() || !checkExists.canWrite()) {}}
 {{throw new RuntimeException(""The directory ""}}
   {{+ checkExists.getAbsolutePath()}}
   {{+ "" is not a writable directory"");}}
{{}}}
{{File f = new File(s, ""cxf-tmp-"" + x);}}
{{for (int attempts=0; attempts<10; attempts++) {}}
 {{x = (int)(Math.random() * 1000000);}}
 {{f = new File(s, ""cxf-tmp-"" + x);}}
 {{if (f.mkdir()) break;}}
{{}}}

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-22 08:09:29.186,,,no_permission,,,,,,,,,,,,,47005,,,Wed Dec 22 08:09:29 UTC 2010,,,,,,0|i0sxsv:,166953,,,,,,,,"22/Dec/10 08:09;njiang;Dan Kulp committed a fix into the trunk weeks ago, I just merge it back to the CXF 2.3.x and 2.2.x branch.",,,,,,,,,,,,,,,,,,,,,,,,,,
Timestamp validation in ws-security,CXF-3208,12493686,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,davemorris,davemorris,20/Dec/10 15:53,16/Jul/13 19:29,14/Mar/19 02:29,24/Dec/10 10:58,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,WS-* Components,,,,0,,,,,,"Validation issues during testing:

The timestamp in ws-security can be future dated and will be accepted as valid in a SOAP soap response message.
The creation date can be greater than the expiration date and be accepted as valid in a SOAP response message.

This is important to resolve re-play attacks to resolve a security loop hole that can be exploited.

Examples of SOAP requests message return soap response messages as valid when in fact should throw a soap fault:

<B>Future dated timestamp, not using the server time to check:</B>
<B>SOAP Request:</B>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
 <soap:Header>
 <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soap:mustUnderstand=""1"">
 <wsu:Timestamp xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp-1"">
  <wsu:Created>2011-12-20T17:56:50.444Z</wsu:Created> 
  <wsu:Expires>2011-12-20T18:35:50.444Z</wsu:Expires> 
  </wsu:Timestamp>
  </wsse:Security>
  </soap:Header>
<soap:Body>
<ns2:processOrder xmlns:ns2=""http://order.security.ri.hin.hhs.gov/"">
 <arg0>
  <customerID>C001</customerID> 
  <itemID>I001</itemID> 
  <price>200.0</price> 
  <qty>100</qty> 
  </arg0>
  </ns2:processOrder>
  </soap:Body>
  </soap:Envelope>

<B>SOAP Response</B>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <ns2:processOrderResponse xmlns:ns2=""http://order.security.ri.hin.hhs.gov/"">
         <return>ORD1234</return>
      </ns2:processOrderResponse>
   </soap:Body>
</soap:Envelope>

<B>Timestamp where the creation time is greater then the expiration time:</B>
<B>SOAP Request:</B>

<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
 <soap:Header>
 <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soap:mustUnderstand=""1"">
 <wsu:Timestamp xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""Timestamp-1"">
  <wsu:Created>2011-12-20T17:56:50.444Z</wsu:Created> 
  <wsu:Expires>2010-12-20T18:35:50.444Z</wsu:Expires> 
  </wsu:Timestamp>
  </wsse:Security>
  </soap:Header>
<soap:Body>
<ns2:processOrder xmlns:ns2=""http://order.security.ri.hin.hhs.gov/"">
 <arg0>
  <customerID>C001</customerID> 
  <itemID>I001</itemID> 
  <price>200.0</price> 
  <qty>100</qty> 
  </arg0>
  </ns2:processOrder>
  </soap:Body>
  </soap:Envelope>

<B>SOAP Response</B>
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Body>
      <ns2:processOrderResponse xmlns:ns2=""http://order.security.ri.hin.hhs.gov/"">
         <return>ORD1234</return>
      </ns2:processOrderResponse>
   </soap:Body>
</soap:Envelope>
",Windows XP running Glassfish 2.1 server.  Running a simple web service with ws-timestamp set. Using SOAPUI 3.6.1 to create SOAP request messages to validate with the Glassfish 2.1 server using CXF 2.3.1. ,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-24 10:58:28.425,,,no_permission,,Moderate,,,,,,,,,,,47008,,,Fri Dec 24 10:58:28 UTC 2010,,,,,,0|i0v0on:,179084,,,,,,,,"24/Dec/10 10:58;coheigea;
This has been fixed in WSS4J:

https://issues.apache.org/jira/browse/WSS-262

Colm.",,,,,,,,,,,,,,,,,,,,,,,,,,
PolicyEngineImpl initializes bus interceptors twice,CXF-3206,12493650,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,murakris,murakris,20/Dec/10 05:56,21/Jan/11 18:14,14/Mar/19 02:29,23/Dec/10 06:17,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,WS-* Components,,,,0,,,,,,"PolicyEngineImpl initializes the bus interceptors twice - once from the constructor init (when 'cxf' bus is passed) and the second time as part of setBus() call due to @Resource annotation causing Spring to call it resulting in the PolicyOut* and PolicyIn* interceptors to be added twice.
",,,,,,,,,,,,,,,,,20/Dec/10 05:57;murakris;TestPolicyEngineImpl-context.xml;https://issues.apache.org/jira/secure/attachment/12466606/TestPolicyEngineImpl-context.xml,20/Dec/10 05:57;murakris;TestPolicyEngineImpl.java;https://issues.apache.org/jira/secure/attachment/12466605/TestPolicyEngineImpl.java,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-12-23 06:17:33.84,,,no_permission,,,,,,,,,,,,,47010,,,Thu Dec 23 06:17:33 UTC 2010,,,,,,0|i13ylj:,231235,,,,,,,,20/Dec/10 05:57;murakris;Attached simple test code that will highlight the problem,"23/Dec/10 06:17;ffang;commit fix
http://svn.apache.org/viewvc?rev=1051430&view=rev for trunk
http://svn.apache.org/viewvc?rev=1051447&view=rev for 2.3 branch
",,,,,,,,,,,,,,,,,,,,,,,,,
DynamicClientFactory.setupClasspath method cannot handle spaces in path,CXF-3204,12493618,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ibandak,ibandak,19/Dec/10 03:32,18/Apr/11 12:44,14/Mar/19 02:29,07/Apr/11 22:06,2.2.10,2.2.11,2.2.12,2.3,2.3.1,2.3.2,2.3.3,,,,,,,,,,,2.3.4,,,,JAXB Databinding,,,,0,,,,,,"Using 2.3.1 Libraries, but also verfiied that the issue also exists in the 2.2.10 - 2.2.12 as well

The setupClasspath method in the DynamicClientFactory class cannot handle spaces in the path. It throws the following exception: 

Caused by: java.net.URISyntaxException: Illegal character in path at index 16: file:/C:/Program Files/Zephyr/apache-tomcat-5.5.28/common/classes/
	at java.net.URI$Parser.fail(URI.java:2809)
	at java.net.URI$Parser.checkChars(URI.java:2982)
	at java.net.URI$Parser.parseHierarchical(URI.java:3066)
	at java.net.URI$Parser.parse(URI.java:3014)
	at java.net.URI.<init>(URI.java:578)
	at java.net.URL.toURI(URL.java:918)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.setupClasspath(DynamicClientFactory.java:515)
	at org.apache.cxf.endpoint.dynamic.DynamicClientFactory.createClient(DynamicClientFactory.java:313)
	... 45 more

note: this seems to be similar to issue CXF-1583 (https://issues.apache.org/jira/browse/CXF-1583) that was found in version 2.1, but broken again in the latest releases since adding the nullpointer checks for issue 2175 (https://issues.apache.org/jira/browse/CXF-2175).
","Windows XP, JDK 1.6.0.24",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5924,,,Sun Mar 06 01:58:22 UTC 2011,,,,,,0|i0b9hj:,63649,,,,,,,,06/Mar/11 01:58;ibandak;is this issue going to be looked at and evaluated for a future fix?,,,,,,,,,,,,,,,,,,,,,,,,,,
Have XJC-Util work with both JAXB 2.1 and JAXB 2.2,CXF-3202,12493525,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gmazza,gmazza,17/Dec/10 15:45,21/Jan/11 18:14,14/Mar/19 02:29,08/Jan/11 02:42,,,,,,,,,,,,,,,,,,2.3.2,,,,,,,,0,,,,,,"When building the CXF-Trunk (mvn install -Pfastinstall) if I have JAXB 2.2 (jaxb-api.jar) in my JDK 6 endorsed directory the cxf-api build fails (possibly others would fail as well) due to the XJC tooling expecting JAXB 2.1:

gmazza@gmazza-work:~/dataExt3/opensource/CXF-TRNK/api$ mvn clean install -Pfastinstall -e
+ Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building Apache CXF API
[INFO]    task-segment: [clean, install]
[INFO] ------------------------------------------------------------------------
[INFO] [clean:clean {execution: default-clean}]
[INFO] Deleting /media/NewDriveExt3/opensource/CXF-TRNK/api/target
[INFO] [dependency:unpack {execution: unpack-schemas}]
[INFO] Configured Artifact: org.apache.cxf:cxf-common-schemas:2.4.0-SNAPSHOT:jar
[INFO] Unpacking /home/gmazza/.m2/repository/org/apache/cxf/cxf-common-schemas/2.4.0-SNAPSHOT/cxf-common-schemas-2.4.0-SNAPSHOT.jar to
  /media/NewDriveExt3/opensource/CXF-TRNK/api/target/schemas
   with includes null and excludes:null
[INFO] [cxf-xml2fastinfoset:xml2fastinfoset {execution: xml2fastinfoset}]
[INFO] [cxf-xjc:xsdtojava {execution: generate-sources}]
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] 

[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:719)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException
	at org.apache.cxf.maven_plugin.AbstractXSDToJavaMojo.execute(AbstractXSDToJavaMojo.java:230)
	at org.apache.cxf.maven_plugin.XSDToJavaMojo.execute(XSDToJavaMojo.java:38)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	... 17 more
Caused by: java.lang.NullPointerException
	at org.apache.cxf.xjc.dv.DefaultValuePlugin.updateSetter(DefaultValuePlugin.java:365)
	at org.apache.cxf.xjc.dv.DefaultValuePlugin.run(DefaultValuePlugin.java:165)
	at com.sun.tools.xjc.addon.apache_cxf.dv.DefaultValuePlugin.run(DefaultValuePlugin.java:59)
	at com.sun.tools.xjc.model.Model.generateCode(Model.java:290)
	at com.sun.tools.xjc.Driver.run(Driver.java:343)
	at com.sun.tools.xjc.Driver.run(Driver.java:191)
	at org.apache.cxf.maven_plugin.AbstractXSDToJavaMojo.execute(AbstractXSDToJavaMojo.java:218)
	... 20 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4 seconds
[INFO] Finished at: Fri Dec 17 00:43:24 EST 2010
[INFO] Final Memory: 36M/364M

From the error message above, it's not clear to the newbie builder that JAXB 2.2 is the culprit, adding unnecessary delays as well to this problem.

If the matter cannot be fixed, to somehow return an error message saying ""You must use JAXB 2.1 (remove JAXB 2.2 from your endorsed folder)"" or similar would be good, at least to speed up troubleshooting.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-08 02:42:09.372,,,no_permission,,Moderate,,,,,,,,,,,47013,,,Sat Jan 08 02:42:09 UTC 2011,,,,,,0|i13yr3:,231260,,,,,,,,"08/Jan/11 02:42;dkulp;
Updating the dependency of the cxf-xjc plugin to jaxb 2.1.13 fixes this.   ",,,,,,,,,,,,,,,,,,,,,,,,,,
XMLBeansElementProvider doesn't support text/xml,CXF-3198,12493458,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,rahulsom,rahulsom,16/Dec/10 21:29,21/Jan/11 18:14,14/Mar/19 02:29,27/Dec/10 18:21,2.2.10,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"Link to Forum: http://cxf.547215.n5.nabble.com/XmlBeans-with-contentType-text-xml-doesn-t-work-td3308350.html

XmlBeansElementProvider supports only application/xml. Should support ""application/xml"", ""application/*+xml"", ""text/xml"".
This means that when a REST Client uses text/xml, it gets a HTTP 415.",,,,,,,,,,,,,,,,,17/Dec/10 19:35;rahulsom;CXF-3198-rahulsom-12172010.patch;https://issues.apache.org/jira/secure/attachment/12466489/CXF-3198-rahulsom-12172010.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47017,,,Fri Dec 17 19:35:54 UTC 2010,,,,,,0|i13ynb:,231243,,,,,,,,17/Dec/10 19:35;rahulsom;Patch that fixes Consumes and Produces types and also makes XmlBeansElementProvider extend AbstractConfigurableProvider.,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in WrapperStyleNameCollisionValidator when generating stubs,CXF-3197,12493452,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,piepera,piepera,16/Dec/10 19:38,21/Jan/11 18:14,14/Mar/19 02:29,16/Dec/10 21:02,2.3.1,,,,,,,,,,,,,,,,,2.3.2,,,,Tooling,,,,0,,,,,,"After upgrading CXF from 2.3.0 to 2.3.1, I get a NullPointerException building stubs for my project:

org.apache.cxf.tools.common.ToolException:
java.lang.NullPointerException
  at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:279)
  at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
  at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:113)
  at org.apache.cxf.tools.wsdlto.WSDLToJava.run(WSDLToJava.java:86)
  at org.apache.cxf.maven_plugin.WSDL2JavaMojo.callWsdl2Java(WSDL2JavaMojo.java:410)
  ... 22 more
Caused by: java.lang.NullPointerException
  at org.apache.cxf.tools.wsdlto.frontend.jaxws.validator.WrapperStyleNameCollisionValidator.mapElementName(WrapperStyleNameCollisionValidator.java:162)
  at org.apache.cxf.tools.wsdlto.frontend.jaxws.validator.WrapperStyleNameCollisionValidator.isValidOperation(WrapperStyleNameCollisionValidator.java:115)",,,,,,,,,,,,,,,,,16/Dec/10 19:39;piepera;DoubleIt.wsdl;https://issues.apache.org/jira/secure/attachment/12466399/DoubleIt.wsdl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,47018,,,Thu Dec 16 19:39:14 UTC 2010,,,,,,0|i0v0yf:,179128,,,,,,,,16/Dec/10 19:39;piepera;A WSDL which demonstrates the NullPointerException,,,,,,,,,,,,,,,,,,,,,,,,,,
Generated build.xml doesn't endorse the api jars,CXF-3196,12493451,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,16/Dec/10 19:27,21/Jan/11 18:14,14/Mar/19 02:29,16/Dec/10 19:32,2.3,2.3.1,,,,,,,,,,,,,,,,2.3.2,,,,,,,,0,,,,,,"
wsdl2java uses the endorsed directory and thus generates JAX-WS 2.2 compiant code.  However, the generated build.xml does not endorse the dirs and thus it does not compile the code.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47019,,,2010-12-16 19:27:43.0,,,,,,0|i13ymn:,231240,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CachingXmlEventWriter.NSContext supports only one prefix for a namespace (backed by map),CXF-3193,12493416,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,petekol,petekol,16/Dec/10 09:49,21/Jan/11 18:14,14/Mar/19 02:29,08/Jan/11 03:39,2.3.2,,,,,,,,,,,,,,,,,2.3.2,,,,Core,,,,0,,,,,,"CachingXmlEventWriter.NSContext supports only one prefix for a namespace. As a result we have DOUBLE declaration of the SAMEprefix in an element (output xml). We use xmlbeans binding so that org.apache.cxf.xmlbeans.DataWriterImpl uses StaxUtils.copy. This StaxUtils.copy.writeStartElement writes namespaces from elements and attributes. If we have many different prefixes for the same namespace and the prefixes are used also in attributes then StaxUtils.copy.writeStartElement outputs DOUBLE declaration:

input
<a:elem1 a:xmlns=""test"" b:xmlns=""test"" a:attr1=""value"">

output

<a:elem1 a:xmlns=""test"" b:xmlns=""test"" a:attr1=""value"" a:xmlns=""test"">

invalid: double a:xmlns=""test"" declaration",redhat tomcat,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,47022,,,2010-12-16 09:49:27.0,,,,,,0|i0sxtj:,166956,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cvc-elt.1: Cannot find the declaration of element 'mappings'. at /com/webservice/Employee.aegis.xml,CXF-3190,12493178,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,,asifali,asifali,14/Dec/10 11:59,21/Jan/11 18:18,14/Mar/19 02:29,08/Jan/11 00:34,2.2.9,,,,,,,,,,,,,,,,,Invalid,,,,Aegis Databinding,,,,0,,,,,,"I have deployed a webservice on JBoss succesfully and was able to access it. Now i want to include Aegis Databinding for the request and response XMLs. For that i have written a mapping file on my client side with name Employee.aegis.xml for the Employee bean and have done the configurations in my client program. But when I try to execute my client prorgam I'm getting the following error:

{code}
Dec 14, 2010 4:43:02 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean checkServiceClassAnnotations
WARNING: A JAX-WS Annotation was found on com.webservice.EmployeeServicePortType while using the Simple frontend.  For better results, use the JAX-WS frontend.
Dec 14, 2010 4:43:03 PM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromClass
INFO: Creating Service {http://webservice.com/}EmployeeServicePortType from class com.webservice.EmployeeServicePortType
Dec 14, 2010 4:43:04 PM org.apache.cxf.aegis.type.XMLTypeCreator$1 error
SEVERE: cvc-elt.1: Cannot find the declaration of element 'mappings'. at /com/webservice/Employee.aegis.xml line 1 column 42.
org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'mappings'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at org.apache.cxf.aegis.type.XMLTypeCreator.readAegisFile(XMLTypeCreator.java:181)
	at org.apache.cxf.aegis.type.XMLTypeCreator.getDocument(XMLTypeCreator.java:206)
	at org.apache.cxf.aegis.type.XMLTypeCreator.findMapping(XMLTypeCreator.java:265)
	at org.apache.cxf.aegis.type.XMLTypeCreator.isEnum(XMLTypeCreator.java:217)
	at org.apache.cxf.aegis.type.AbstractTypeCreator.createTypeForClass(AbstractTypeCreator.java:118)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.getParameterType(AegisDatabinding.java:634)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeMessage(AegisDatabinding.java:345)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeOperation(AegisDatabinding.java:303)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initialize(AegisDatabinding.java:270)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:467)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:530)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:278)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:99)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:51)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:102)
	at com.webservice.EmployeeServicePortType_EmployeeServicePort_Client.main(EmployeeServicePortType_EmployeeServicePort_Client.java:39)
Exception in thread ""main"" org.apache.cxf.aegis.DatabindingException: Error initializing parameters for operation {http://webservice.com/}getEmployee: cvc-elt.1: Cannot find the declaration of element 'mappings'. at /com/webservice/Employee.aegis.xml line 1 column 42. cvc-elt.1: Cannot find the declaration of element 'mappings'. at /com/webservice/Employee.aegis.xml line 1 column 42.
	at org.apache.cxf.aegis.type.XMLTypeCreator$1.throwDatabindingException(XMLTypeCreator.java:157)
	at org.apache.cxf.aegis.type.XMLTypeCreator$1.error(XMLTypeCreator.java:165)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(Unknown Source)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at org.apache.cxf.aegis.type.XMLTypeCreator.readAegisFile(XMLTypeCreator.java:181)
	at org.apache.cxf.aegis.type.XMLTypeCreator.getDocument(XMLTypeCreator.java:206)
	at org.apache.cxf.aegis.type.XMLTypeCreator.findMapping(XMLTypeCreator.java:265)
	at org.apache.cxf.aegis.type.XMLTypeCreator.isEnum(XMLTypeCreator.java:217)
	at org.apache.cxf.aegis.type.AbstractTypeCreator.createTypeForClass(AbstractTypeCreator.java:118)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.getParameterType(AegisDatabinding.java:634)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeMessage(AegisDatabinding.java:345)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initializeOperation(AegisDatabinding.java:303)
	at org.apache.cxf.aegis.databinding.AegisDatabinding.initialize(AegisDatabinding.java:270)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:467)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:530)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:278)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:99)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:51)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:102)
	at com.webservice.EmployeeServicePortType_EmployeeServicePort_Client.main(EmployeeServicePortType_EmployeeServicePort_Client.java:39)

{code}


My mapping file is Employee.aegis.xml:

{code:xml}
<mappings xmlns=""http://webservice.com"" >
	<mapping name=""Employee"" >
		<property name=""name"" mappedName=""Name"" />
		<property name=""title"" mappedName=""Title"" />
	</mapping>
</mappings>
{code}

Employee bean:

{code:java}
public class Employee {

    protected String name;
    protected String title;

   public String getName() {
        return name;
    }

    public void setName(String value) {
        this.name = value;
    }

      public String getTitle() {
        return title;
    }

   public void setTitle(String value) {
        this.title = value;
    }

}
{code}

Client program :
{code:java}
public static void main(String args[]) throws Exception {
    	
    	ClientProxyFactoryBean factory = new ClientProxyFactoryBean();
    	factory.getInInterceptors().add(new LoggingInInterceptor());
    	factory.getOutInterceptors().add(new LoggingOutInterceptor());    	
    	
	    factory.setServiceClass(EmployeeServicePortType.class);
	    AegisDatabinding db = new AegisDatabinding();
	    factory.setDataBinding(db);
	 
	    factory.setAddress(""http://localhost:8080/EmployeeWebservice/EmployeeService"");
	    EmployeeServicePortType service = (EmployeeServicePortType)factory.create();
        {
        System.out.println(""Invoking getEmployee..."");
        Employee _getEmployee_arg0 = new Employee();
        _getEmployee_arg0.setName(""Ali"");
        _getEmployee_arg0.setTitle(""PA"");
        Employee _getEmployee__return = service.getEmployee(_getEmployee_arg0);
        System.out.println(""getEmployee.result="" + _getEmployee__return);


        }

        System.exit(0);
    }
{code}


Please tell me if my configurations for aegis databinding are correct and what could be the issue with the above piece of code.

Thanks in advance,
Asif Ali Mohammed.
Cognizant Technology Solutions.


","Windows XP, JDK 1.6.0_13, Eclipse 3.4 Ganemyde, ",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-08 00:33:23.909,,,no_permission,,Unknown,,,,,,,,,,,47025,,,Sat Jan 08 00:34:04 UTC 2011,,,,,,0|i0uy53:,178672,,,,,,,,"08/Jan/11 00:33;dkulp;

I believe the mapping file should be:

{code:xml}
<mappings xmlns:ns=""http://webservice.com"" >
	<mapping name=""ns:Employee"" >
		<property name=""name"" mappedName=""Name"" />
		<property name=""title"" mappedName=""Title"" />
	</mapping>
</mappings>
{code}

The mapping element should be in the default namespace.
","08/Jan/11 00:34;dkulp;
The mapping file namespace is incorrect.",,,,,,,,,,,,,,,,,,,,,,,,,
Maven pom includes dependencies when build on IBM JDK,CXF-3189,12493163,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,markkikken,markkikken,14/Dec/10 10:16,19/Oct/11 17:30,14/Mar/19 02:29,30/Aug/11 19:38,2.3.1,,,,,,,,,,,,,,,,,2.4.3,,,,Build system,,,,0,,,,,,"We are developing applications for an IBM Websphere Application Server (WAS) target-platform. For the development platform we chose an IBM JDK, since this JDK will also be used on the target platform. However, the development machines we are using come with the SUN JDK installed by default and some developers were using this JDK. We noticed that not all builds worked when deployed on the target platform. Some builds turned out to include too many dependencies in the resulting war-file:
jaxp-api-1.4.2.jar
jaxp-ri-1.4.2.jar
serializer-2.7.1.jar
xalan-2.7.1.jar

Curiously, the builds done using a SUN JDK were fine. It turned out to be CXF causing this. Some CXF POM-files contain a profile that is activated only when built on IBM virtual machines. This profile will include the extra dependencies. I think this is a bug since:

1 - This logic assumes that the development platform JDK is the deployment platform JDK as well. This would be a best practice, but cannot be assumed to be true. This assumption can lead to strange side-effects that had me puzzled for at least a day.
2 - The added dependencies actually caused classcastexceptions on the IBM WAS. This measure might have had some benefit in the past, but it is only causing trouble on an IBM JDK 6.
3 - Wouldn't it be better to define a standard platform CXF is compatible with, and then give users of other (older) platforms some guidance in documentation on what extra dependencies to include to make things work on these platforms?

Work around:

I added exclusions for xalan:xalan and com.sun.xml.parsers:jaxp-ri on CXF dependencies in my own root-POM.","Windows XP, running IBM JDK 6",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-08-30 19:38:43.72,,,no_permission,,,,,,,,,,,,,5727,,,Tue Aug 30 19:38:43 UTC 2011,,,,,,0|i0b7bz:,63300,,,,,,,,"30/Aug/11 19:38;dkulp;
Semi-resolved.   Comparing IBM java 6 and Sun/Oracle java 6 should now yield identical results.   Either Java 5 does have some differences, but they are needed for us to even build and test CXF itself.   It's now at about the best state we can get it in.
",,,,,,,,,,,,,,,,,,,,,,,,,,
The response code 500 and soapFault are produced for an one way operation when the soap understand headers can not be processed,CXF-3188,12493157,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,14/Dec/10 06:56,21/Jan/11 18:14,14/Mar/19 02:29,15/Dec/10 00:09,2.3.1,,,,,,,,,,,,,,,,,2.3.2,2.4,,,Core,,,,0,,,,,,"If there are must understand headers  can not be processed/understood , server responds with 500 response code and soap fault message . This doesn't conform to WSI profile section 5.6.10. 
Below is the request message to reproduce this issue:
----------------------------------------
Encoding: UTF-8
Content-Type: text/xml; charset=UTF-8
Headers: {content-type=[text/xml; charset=UTF-8], connection=[keep-alive], Host=[localhost:9000], Content-Length=[256], SOAPAction=[""""], User-Agent=[Apache CXF 2.3.2-SNAPSHOT], Content-Type=[text/xml; charset=UTF-8], Accept=[*/*], Pragma=[no-cache], Cache-Control=[no-cache]}
Payload: <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/""><soap:Header><MU xmlns=""http://cxf.apache.org/mu"" soap:mustUnderstand=""1""/></soap:Header><soap:Body><pingOneWay xmlns=""http://apache.org/handler_test/types""/></soap:Body></soap:Envelope>


requestor log:
-----------------------------------------
Client log :

WARNING: Interceptor for {http://apache.org/handler_test}HandlerTestService#{http://apache.org/handler_test}pingOneWay has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Could not send Message.
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:64)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	at $Proxy36.pingOneWay(Unknown Source)
	at org.apache.cxf.systest.handlers.HandlerInvocationTest.testLogicalHandlerOneWay(HandlerInvocationTest.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:9000/HandlerTest/SoapPort
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at sun.net.www.protocol.http.HttpURLConnection$6.run(HttpURLConnection.java:1496)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1490)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1144)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2264)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2192)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:2036)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:696)
	at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
	... 34 more
Caused by: java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:9000/HandlerTest/SoapPort
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2223)
	... 39 more


server log :
---------------------------------
Dec 14, 2010 4:13:39 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Interceptor for {http://apache.org/handler_test}HandlerTestService has thrown exception, unwinding now
org.apache.cxf.binding.soap.SoapFault: MustUnderstand headers: [{http://cxf.apache.org/mu}MU] are not understood.
	at org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor.checkUltimateReceiverHeaders(MustUnderstandInterceptor.java:139)
	at org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor.handleMessage(MustUnderstandInterceptor.java:95)
	at org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor.handleMessage(MustUnderstandInterceptor.java:1)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:255)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:311)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:280)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:72)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:922)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:860)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:114)
	at org.eclipse.jetty.server.Server.handle(Server.java:352)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:596)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.content(HttpConnection.java:1066)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:805)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:218)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:426)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:510)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.access$000(SelectChannelEndPoint.java:34)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:450)
	at java.lang.Thread.run(Thread.java:662)


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47026,,,2010-12-14 06:56:46.0,,,,,,0|i0sxtr:,166957,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAPBindingUtil.getProxy can't load right class in OSGi,CXF-3184,12493075,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,13/Dec/10 14:38,16/Jul/13 19:29,14/Mar/19 02:29,14/Dec/10 07:07,2.2.12,2.3.1,,,,,,,,,,,,,,,,2.3.2,2.4,,,,,,,0,,,,,,"As a fix for CXF-3143 SOAPBindingUtil.getProxy uses now thread context classloader.
This causes the following problem:
{code}
Caused by: java.lang.IllegalArgumentException: interface org.apache.cxf.tools.common.extensions.soap.SoapBinding is not visible from class loader
	at java.lang.reflect.Proxy.getProxyClass(Proxy.java:353)
	at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:581)
	at org.apache.cxf.tools.util.SOAPBindingUtil.getProxy(SOAPBindingUtil.java:87)
	at org.apache.cxf.tools.util.SOAPBindingUtil.getSoapBinding(SOAPBindingUtil.java:274)
	at org.apache.cxf.tools.util.SOAPBindingUtil.createSoapBinding(SOAPBindingUtil.java:426)
	at org.apache.cxf.binding.soap.SoapBindingFactory.createSoapBinding(SoapBindingFactory.java:190)
	at org.apache.cxf.binding.soap.SoapBindingFactory.createBindingInfo(SoapBindingFactory.java:175)
	at org.apache.cxf.binding.AbstractBindingFactory.createBindingInfo(AbstractBindingFactory.java:80)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createBindingInfo(AbstractWSDLBasedEndpointFactory.java:360)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.createBindingInfo(JaxWsServerFactoryBean.java:160)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpointInfo(AbstractWSDLBasedEndpointFactory.java:257)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:145)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:105)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:177)
	at com.sabre.gateway.g2g.G2GInConnector.&lt;init&gt;(G2GInConnector.java:105)
	at com.sabre.gateway.g2g.G2GInConnector.&lt;init&gt;(G2GInConnector.java:76)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:126)
{code}

To avoid it we would to set context classloader to CXF bundle one before calling CXF code that causes this exception or import the cxf packages in our bundle and set context classloader to our bundle's one. 
Both solutions look like workarounds.

We need to make the SOAPBindingUtil.getProxy more smart to load  the class.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-03-14 19:22:49.306,,,no_permission,,,,,,,,,,,,,47029,,,Thu May 05 01:46:11 UTC 2011,,,,,,0|i13ynr:,231245,,,,,,,,14/Dec/10 07:07;njiang;Now the SOAPBindingUtil.getProxy will use the classloader of cls when it can't create the proxy with the thread context classloader.,"14/Mar/11 19:22;alitokmen;This issue being critical on many OSGi systems, would it be possible to release a CXF version 2.2.13 ?

Thank you","18/Mar/11 03:38;njiang;This issue is not a critical issue, as I said in the JIRA, there are two ways to workaround it.

BTW, Apache CXF doesn't maintain CXF 2.2.x branch any more, if you still want to use CXF 2.2.x, you may consider to the commercial product supports from FuseSource.","04/May/11 19:15;kajkandler@conficio.com;HELP: ""As a fix for CXF-3143 SOAPBindingUtil.getProxy uses now thread context classloader."" in the description, but CXF-3143 is not resolved?

So this problem should not exist!","05/May/11 01:46;njiang;@Kaj
The patch of CXF-3143 was committed into CXF repository, I think we should close it.
And CXF-3184 was intended to fix the side effect of CXF-3143.",,,,,,,,,,,,,,,,,,,,,,
http-osgi transport not registered on proper id,CXF-3183,12492963,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,10/Dec/10 17:34,21/Jan/11 18:14,14/Mar/19 02:29,04/Jan/11 03:47,2.3,2.3.1,,,,,,,,,,,,,,,,2.3.2,,,,,,,,0,,,,,,"
The OSGi http transport is not propertly registered on the http://cxf.apache.org/transports/http transportId.  Thus, the SOAPTransportFactory cannot properly map it and OSGi services fail to start.

Workaround is to add a transportId=""http://schemas.xmlsoap.org/wsdl/http/"" to the jaxws:endpoint definitions in the spring-dm beans.xml.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-17 18:16:55.517,,,no_permission,,,,,,,,,,,,,47030,,,Tue Jan 04 03:47:43 UTC 2011,,,,,,0|i0v0qf:,179092,,,,,,,,"17/Dec/10 18:16;chris@die-schneider.net;The transport id is present in the cxf-extension-osgi.xml config file in cxf-transports-http-osgi. Do you know where it is missing?
",17/Dec/10 18:19;chris@die-schneider.net;I just noticed that in http-jetty there is an id http://schemas.xmlsoap.org/wsdl/http/ and http://schemas.xmlsoap.org/wsdl/http present. Can this be the problem?,"17/Dec/10 18:24;dkulp;
On trunk, rt/transports/http-osgi/src/main/resources/META-INF/cxf/osgi/cxf-extension-osgi.xml  contains:

{code}
                <value>http://cxf.apache.org/bindings/xformat</value>
                <value>http://schemas.xmlsoap.org/soap/http</value>
                <value>http://schemas.xmlsoap.org/wsdl/http/</value>
                <value>http://schemas.xmlsoap.org/wsdl/soap/http</value>
                <value>http://www.w3.org/2003/05/soap/bindings/HTTP/</value>
                <value>http://cxf.apache.org/transports/http/configuration</value>
{code}

which doesn't have the http://cxf.apache.org/transports/http  id.   The above list should exactly match what is in:
rt/transports/http-jetty/src/main/resources/META-INF/cxf/cxf-extension-http-jetty.xml

Someone really just needs to copy it and test it.","17/Dec/10 21:31;chris@die-schneider.net;Do you have any idea why the cxf-extension-http-jetty.xml only contains four transport ids

                <value>http://cxf.apache.org/transports/http</value>
                <value>http://cxf.apache.org/transports/http/configuration</value>
                <value>http://schemas.xmlsoap.org/wsdl/http</value>
                <value>http://schemas.xmlsoap.org/wsdl/http/</value>

while cxf-extension-http-osgi.xml contains seven lines if I add the missing id.

                <value>http://cxf.apache.org/bindings/xformat</value>
                <value>http://schemas.xmlsoap.org/soap/http</value>
                <value>http://schemas.xmlsoap.org/wsdl/http/</value>
                <value>http://schemas.xmlsoap.org/wsdl/soap/http</value>
 	        <value>http://www.w3.org/2003/05/soap/bindings/HTTP/</value>
 	        <value>http://cxf.apache.org/transports/http</value>
                <value>http://cxf.apache.org/transports/http/configuration</value>

Btw. I have added the id to the cxf-extension-http-osgi.xml  file on trunk.

","17/Dec/10 21:42;dkulp;
I think they are mostly bogus and should be removed.  For example, xformat is a BINDING type, not a transport.   Likewise for the 2003/05/soap thing.     The soap stuff should be removed so the soap transport can kick in and do the stuff it needs to do.","04/Jan/11 03:47;dkulp;
Freeman already fixed this.",,,,,,,,,,,,,,,,,,,,,
MAPCodec cancel the entire interceptor chain and throws exception when the server inboud  message with RelatesTo header,CXF-3181,12492925,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,10/Dec/10 11:22,21/Jan/11 18:14,14/Mar/19 02:29,10/Dec/10 14:19,2.3,2.3.1,,,,,,,,,,,,,,,,2.3.2,2.4,,,WS-* Components,,,,0,,,,,,"Since the uncorrelatedExchanges stores the ReplysTo exchange only in client side , we can remove the correlated exchange check in the server side. 
This makes WSA work when the Replyto endpoint address  is not  generic address, and send the response soap message with wsa messageID and relatesTo header to another endpoint.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47031,,,2010-12-10 11:22:41.0,,,,,,0|i13ykn:,231231,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jaxrs/Jaxb unmarshaller code regularly causing performance problems & thread lock-up,CXF-3180,12492904,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,10/Dec/10 02:35,16/Jul/13 19:29,14/Mar/19 02:29,14/Dec/10 14:07,2.2.10,2.2.11,2.2.12,2.2.6,2.2.7,2.2.8,2.2.9,2.3,2.3.1,,,,,,,,,2.3.2,2.4,,,,,,,0,,,,,,"Please find below the details of the XML parsing performance bottleneck we are seeing when processing REST POST requests with XML bodies.
The performance issue is caused by the fact that CXF code creates a new JAXB Unmarshaller for every incoming request. The Unmarshaller is created quickly enough but when it is used to do the unmarshalling, it needs to create a Xerces SAXParser, which in turn calls DTDDVFactory.getInstance() and that method is synchronized. When we try to process more than 200-300 requests per second we start seeing a lot of threads blocked in DTDDVFactory.getInstance().

The thread stack of one of the blocked threads is:

1390532156@qtp-69728034-390"" prio=10 tid=0x00002aab449c0000 nid=0x28f4 waiting for monitor entry [0x000000004da26000]
java.lang.Thread.State: BLOCKED (on object monitor)
at com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory.getInstance(DTDDVFactory.java:44)

waiting to lock <0x00002aaab279ed48> (a java.lang.Class for com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory)
at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.<init>(XML11Configuration.java:538)
at com.sun.org.apache.xerces.internal.parsers.XIncludeAwareParserConfiguration.<init>(XIncludeAwareParserConfiguration.java:125)
at com.sun.org.apache.xerces.internal.parsers.XIncludeAwareParserConfiguration.<init>(XIncludeAwareParserConfiguration.java:86)
at sun.reflect.GeneratedConstructorAccessor4.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
at java.lang.Class.newInstance0(Class.java:355)
at java.lang.Class.newInstance(Class.java:308)
at com.sun.org.apache.xerces.internal.parsers.ObjectFactory.newInstance(ObjectFactory.java:349)
at com.sun.org.apache.xerces.internal.parsers.ObjectFactory.createObject(ObjectFactory.java:154)
at com.sun.org.apache.xerces.internal.parsers.ObjectFactory.createObject(ObjectFactory.java:97)
at com.sun.org.apache.xerces.internal.parsers.SAXParser.<init>(SAXParser.java:102)
at com.sun.org.apache.xerces.internal.parsers.SAXParser.<init>(SAXParser.java:87)
at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.<init>(SAXParserImpl.java:332)
at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.<init>(SAXParserImpl.java:122)
at com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl.newSAXParser(SAXParserFactoryImpl.java:76)
at javax.xml.bind.helpers.AbstractUnmarshallerImpl.getXMLReader(AbstractUnmarshallerImpl.java:75)
at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:184)
at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:191)
at org.apache.cxf.jaxrs.provider.JAXBElementProvider.unmarshalFromInputStream(JAXBElementProvider.java:216)
at org.apache.cxf.jaxrs.provider.JAXBElementProvider.doUnmarshal(JAXBElementProvider.java:186)
at org.apache.cxf.jaxrs.provider.JAXBElementProvider.readFrom(JAXBElementProvider.java:157)
at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:947)
at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:560)
at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:525)
at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
locked <0x00002aab1e41a0e8> (a org.apache.cxf.phase.PhaseInterceptorChain)
at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:109)
at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:312)
...
The application where the problem is seen defines an XSD file and uses theJAXB compiler to create the data binding java class. It then creates a ""RESTResouce"" java class that is CXF/JAXRS annotated and contains a method that defines the processing of incoming POST requests. That method has one argument, the JAXB-compiled class, which tells CXF to unmarshall the XML body of the incoming request.

Just in case, you need more context, here is the top portion of the stack of the thread that is inside the synchronized method:

""1840040935@qtp-69728034-391"" prio=10 tid=0x00002aab44810000 nid=0x2dfa waiting on condition [0x000000005be59000]
java.lang.Thread.State: RUNNABLE
at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:211)
at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:381)
at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:457)
at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:410)
at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:398)
at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:105)
at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:326)
at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:231)
at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1193)
at org.springframework.osgi.util.BundleDelegatingClassLoader.findClass(BundleDelegatingClassLoader.java:99)
at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:156)
at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
at com.sun.org.apache.xerces.internal.impl.dv.ObjectFactory.findProviderClass(ObjectFactory.java:395)
at com.sun.org.apache.xerces.internal.impl.dv.ObjectFactory.newInstance(ObjectFactory.java:350)
at com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory.getInstance(DTDDVFactory.java:59)

locked <0x00002aaab279ed48> (a java.lang.Class for com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory)
at com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory.getInstance(DTDDVFactory.java:44)
locked <0x00002aaab279ed48> (a java.lang.Class for com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory)
at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.<init>(XML11Configuration.java:538)
at com.sun.org.apache.xerces.internal.parsers.XIncludeAwareParserConfiguration.<init>(XIncludeAwareParserConfiguration.java:125)
at com.sun.org.apache.xerces.internal.parsers.XIncludeAwareParserConfiguration.<init>(XIncludeAwareParserConfiguration.java:86)
at sun.reflect.GeneratedConstructorAccessor4.newInstance(Unknown Source)
...
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-14 11:26:52.536,,,no_permission,,,,,,,,,,,,,47032,,,Tue Dec 14 11:26:52 UTC 2010,,,,,,0|i0v0pz:,179090,,,,,,,,"14/Dec/10 11:26;sergey_beryozkin;Hi Willem - many thanks for dealing with this issue.

Just FYI, the users working with the released CXFs can get this issue tackled by registering a custom provider extending JAXBElementProvider and overriding getStreamReader() and using StaxUtils.createXMLStreamReader to wrap the input stream

cheers, Sergey",,,,,,,,,,,,,,,,,,,,,,,,,,
build failed on Mac OSX caused by Failed to resolve artifact. om.sun:tools:jar:1.5.0,CXF-3178,12492795,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,09/Dec/10 02:43,21/Jan/11 18:14,14/Mar/19 02:29,09/Dec/10 05:08,,,,,,,,,,,,,,,,,,2.3.2,2.4,,,,,,,0,,,,,,"the latest com.puppycrawl.tools.checkstyle have dependency like
<dependency>
      <groupId>com.sun</groupId>
      <artifactId>tools</artifactId>
      <version>1.5.0</version>
      <scope>system</scope>
      <systemPath>${java.home}/../lib/tools.jar</systemPath>
    </dependency>

but on Mac OSX, there's no tools.jar, it should be ${java.home}/../Classes/classes.jar instead, we need add a profile for mac to replace the path tomake the build pass.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47033,,,Thu Dec 09 05:08:32 UTC 2010,,,,,,0|i0v0vj:,179115,,,,,,,,"09/Dec/10 02:59;ffang;seems we can safely exclude com.sun.tools as it try to fix some lower version maven issue.
I test it with maven 2.2.1 on my mac box and it's ok","09/Dec/10 05:08;ffang;commit fix
http://svn.apache.org/viewvc?rev=1043830&view=rev for trunk
http://svn.apache.org/viewvc?rev=1043832&view=rev for 2.3 branch
http://svn.apache.org/viewvc?rev=1043836&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,,,
http.proxyHost and http.proxyPort of System properties win when no proxy is required,CXF-3171,12492611,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,iltud,iltud,07/Dec/10 12:07,18/Apr/11 12:44,14/Mar/19 02:29,07/Apr/11 22:07,2.0.13,2.1.10,2.2,2.2.1,2.2.10,2.2.11,2.2.12,2.2.2,2.2.3,2.2.4,2.2.5,2.2.6,2.2.7,2.2.8,2.2.9,2.3,2.3.1,2.3.4,,,,Transports,,,,0,,,,,,"When VM args ""{{-Dhttp.proxyHost=xxxxxxxx -Dhttp.proxyPort=3128}}"" are set, there is no way to connect a webservice directly without passing throuh the proxy xxxxxxxx.

The client CXF is build as following :
{code:java|borderStyle=solid}JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();
  factory.setServiceClass(MyWs.class);
  factory.setAddress(bundle.getProperty(""url.web.service""));

  MyWs instance = (MyWs) factory.create();
  Client client = ClientProxy.getClient(instance);
  HTTPConduit conduit = (HTTPConduit) client.getConduit();
  HTTPClientPolicy httpClientPolicy = conduit.getClient();
  httpClientPolicy.setAllowChunking(false);
  
  // Force NO proxy ?
  httpClientPolicy.setProxyServer(null);
  httpClientPolicy.setProxyServerPort(0);
  // httpClientPolicy.unsetProxyServerPort();  // tried without success
  conduit.setClient(httpClientPolicy);
{code}


When creating the instance with , CXF use HttpURLConnectionFactoryImpl (or HttpsURLConnectionFactory) to open the url :
{code:java|borderStyle=solid}    if (proxy != null) {
      return (HttpURLConnection) url.openConnection(proxy);
    } else {
      return (HttpURLConnection) url.openConnection();
    }
{code}
When the variable ""{{proxy}}"" is null, {{url.openConnection()}} is used, and benifits of VM args ({{http.proxyHost}} and {{http.proxyPort}}).

The only solution to bypass the proxy, while keeping existing VM args, is to add a System property ""{{http.nonProxyHosts}}"" in order to exclude the host of the proxy. This can be done with an other VM arg ""{{-Dhttp.nonProxyHosts=xxxx}}"" or programmatically : {{System.setProperty(""http.nonProxyHosts"", ""xxxx"")}}

According to http://download.oracle.com/javase/6/docs/technotes/guides/net/proxies.html (chapter 3 Proxy class) when no proxy is required url.openConnection() should be used like this :
{code:java|borderStyle=solid}     url.openConnection(Proxy.NO_PROXY);{code}
The technote points out : ??""Now, this guarantees you that this specific URL will be retrieved though a direct connection bypassing any other proxy settings, which can be convenient.""??

I think that using {{url.openConnection(Proxy.NO_PROXY)}} could fix this problem in :
* org.apache.cxf.transport.http.HttpURLConnectionFactoryImpl.createConnection(Proxy proxy, URL url)   > line #51  (release 2.3.1)
* org.apache.cxf.transport.https.HttpsURLConnectionFactory.createConnection(Proxy proxy, URL url) > line #120 (release 2.3.1)


(!) WARNING (!) : this issue can conflicts with this other one : [CXF-2839|http://issues.apache.org/jira/browse/CXF-2839]
A lot of tests will be required.",,10800,10800,,0%,10800,10800,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-07 22:07:20.148,,,no_permission,,Moderate,,,,,,,,,,,5922,,,Thu Apr 07 22:07:20 UTC 2011,,,,,,0|i0b9hz:,63651,,,,,,,,07/Dec/10 12:09;iltud;Code snippet simplification,"07/Apr/11 22:07;dkulp;
If the host is in the NoProxy list, explicitely use Proxy.NO_PROXY",,,,,,,,,,,,,,,,,,,,,,,,,
Usage of whitespace in @Path regular expressions raises service deployment errors,CXF-3168,12492531,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,gmazza,gmazza,06/Dec/10 19:08,20/Dec/10 14:03,14/Mar/19 02:29,20/Dec/10 14:03,2.3,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"See: http://www.corneliadavis.com/blog/index.php/tag/rest-cxf-regex/

The following regular expression works fine (for an elephant maintenance system at a zoo):

@Path(""/{id:\\d+}"")
public Person getElephantSubresource(@PathParam(""id"") int id);

However, placing spaces around the colon delimiter as follows:
@Path(""/{id : \\d+}"")
public Person getElephantSubresource(@PathParam(""id"") int id);

... causes these exceptions to occur at service deployment time:
org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'serviceBeans' threw exception; nested exception is java.util.regex.PatternSyntaxException: Illegal repetition near index 0
/{id : \d+}(/.*)?
^
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:22

....

	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: java.util.regex.PatternSyntaxException: Illegal repetition near index 0
/{id : \d+}(/.*)?
^
	at java.util.regex.Pattern.error(Pattern.java:1713)
	at java.util.regex.Pattern.closure(Pattern.java:2775)
	at java.util.regex.Pattern.sequence(Pattern.java:1889)
	at java.util.regex.Pattern.expr(Pattern.java:1752)
	at java.util.regex.Pattern.compile(Pattern.java:1460)
	at java.util.regex.Pattern.<init>(Pattern.java:1133)
	at java.util.regex.Pattern.compile(Pattern.java:823)
	at org.apache.cxf.jaxrs.model.URITemplate.<init>(URITemplate.java:89)
	at org.apache.cxf.jaxrs.model.URITemplate.createTemplate(URITemplate.java:302)
	at org.apache.cxf.jaxrs.model.URITemplate.createTemplate(URITemplate.java:289)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.createOperationInfo(ResourceUtils.java:328)
	at org.apache.cxf.jaxrs.utils.ResourceUtils.evaluateResourceClass(ResourceUtils.java:204)

The version with spaces is as shown on page 47 of Bill Burke's RESTFul Java with JAX-RS book (O'Reilly).
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-20 14:03:22.456,,,no_permission,,Moderate,,,,,,,,,,,47042,,,Mon Dec 20 14:03:22 UTC 2010,,,,,,0|i13yqn:,231258,,,,,,,,20/Dec/10 14:03;sergey_beryozkin;This issue is still visible as Unresolved for some reasons,,,,,,,,,,,,,,,,,,,,,,,,,,
URITemplate should skip empty or null values when assigning values to template variables ,CXF-3166,12492095,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,05/Dec/10 13:07,18/Apr/11 12:42,14/Mar/19 02:29,05/Dec/10 13:22,2.3.1,,,,,,,,,,,,,,,,,2.4,,,,JAX-RS,,,,0,,,,,,"Expressions like

""/foo/{bar}{resource:(/format/[^/]+?)?}""

are not working in CXF 2.3.1 due to the change required to make expressions like

""/{resource:.+\\.(js|css|gif|png)}""

processed properly.

""/foo/{bar}{resource:(/format/[^/]+?)?}"" was actually not processed properly even before 2.3.0, the match was successful but
the actual value of the ""resource"" var was incorrect
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47044,,,2010-12-05 13:07:14.0,,,,,,0|i145j3:,232359,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JSONProvider has hard dependency on Jettison in Websphere,CXF-3159,12491793,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,josh.cummings,josh.cummings,01/Dec/10 17:25,25/Jul/11 18:35,14/Mar/19 02:29,01/Dec/10 21:59,2.2.11,,,,,,,,,,,,,,,,,2.3.6,2.4.2,,,,,,,1,,,,,,"On Websphere 7.0.0.13 in Development Mode, when excluding jettison as a dependency, endpoint startup fails with the following exception:

Caused by: java.lang.NoClassDefFoundError: org.codehaus.jettison.mapped.TypeConverter
at java.lang.Class.getDeclaredFieldsImpl(Native Method)
at java.lang.Class.getDeclaredFields(Class.java:546)
at org.apache.cxf.jaxrs.model.AbstractResourceInfo.findContextFields(AbstractResourceInfo.java:77)
at org.apache.cxf.jaxrs.model.AbstractResourceInfo.<init>(AbstractResourceInfo.java:60)
at org.apache.cxf.jaxrs.model.ProviderInfo.<init>(ProviderInfo.java:27)
at org.apache.cxf.jaxrs.provider.ProviderFactory.setProviders(ProviderFactory.java:341)
at org.apache.cxf.jaxrs.provider.ProviderFactory.<clinit>(ProviderFactory.java:62)
at java.lang.J9VMInternals.initializeImpl(Native Method)
at java.lang.J9VMInternals.initialize(J9VMInternals.java:200)
at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setupFactory(AbstractJAXRSFactoryBean.java:267)
at org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean.initClient(JAXRSClientFactoryBean.java:222)
at org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean.createWithValues(JAXRSClientFactoryBean.java:165)
at org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean.create(JAXRSClientFactoryBean.java:146)
at org.lds.stack.rs.spring.ConsumeJaxRSFactoryBean.getObject(ConsumeJaxRSFactoryBean.java:27)
at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142)
... 145 more

It appears that the createProvider method is trying to defend against this with a try-catch around the loading of the JSONProvider class; however, when in Development Mode in Websphere, classloading is a little lazier than that and the NoClassDef isn't thrown until later.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-01 21:59:54.541,,,no_permission,,,,,,,,,,,,,5781,,,Wed Dec 01 21:59:54 UTC 2010,,,,,,0|i0b7if:,63329,,,,,,,,"01/Dec/10 21:59;sergey_beryozkin;Hi 

The default JSONProvider does depend on Jettison - so I've updated ProviderFactory a bit to ensure late initialization exceptions are also caught :

http://svn.apache.org/viewvc?rev=1041183&view=rev  

thanks, Sergey",,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid WS-A ReplyTo constant value used by WS-RM,CXF-3151,12480767,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ay,ay,24/Nov/10 06:03,06/Dec/10 22:49,14/Mar/19 02:29,26/Nov/10 07:43,2.2.11,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,WS-* Components,,,,0,,,,,,"There is an issue in the way how the current WS-RM implementation
downgrades the WS-A namespace/constants to the 2004/08 version. I
would like to first explain the problem and ask you which solution is
preferred.

CXF uses WS-A 2005/08 internally but for WS-RM, it uses the 2004/08
version because the older WS-RM (1.0)
requires the use of the 2004/08 version. So, it is correct to convert
the internally used 2005/08 namespace/constants to their 2004/08
counterparts.

However, one problem is that the 2005/08 WS-A spec defined two constants

http://www.w3.org/2005/08/addressing/anonymous
http://www.w3.org/2005/08/addressing/none

While the 2004/08 WS-A version seems to have only defined

http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous

and not

http://schemas.xmlsoap.org/ws/2004/08/addressing/role/none

The current conversion used in CXF creates this undefined value and
this is causing some interoperability issues.
More concretely, when the WS-A ReplyTo element is set to the none
value and this is serialized into the above undefined 2004/08 none
constant, it is not recognized by some systems. According to the WS-RM
1.0, in such a case, the ReplyTo element should be omitted to convey
this ""none"" value (as there is no ""none"" constant).

Initially, I thought we should fix this issue by introducing a configurable property ""usingNoneAddress"" for the addressing configuration bean to turn on or off the serialization of the none address. However, this approach had a drawback on requiring a different default value interpretation based on the used namespace versions (i.e., false for 2004/08 and true for 2005/08) to make the test cases all work.

Therefore, I am proposing the following approach to solve this issue.

There is no configuration property. The serialization is determined by the addressing namespace.  Under 2004/08, the none value is omitted from serialization, while under 2005/08, the none value is serialized.

This will work for all the current tests except for the testVersioning test of MAPTest. This particular test uses the 2004/08 namespace and checks the presence of the ReplyTo header in the SOAP header, even though the header is associated with the none value and therefore it must not be present. In order to fix this test, I needed to modify the corresponding verification classes so that the presence of the ReplyTo header is not verified when the 2004/08 namespace is used.

In summary, the changes that I suggest are as follows:

For the runtime ws.addressing:
org.apache.cxf.ws.addressing.soap.MAPCodec
  The ReplyTo header will not be serialized with the invalid none value. In other words, if the value is set to the none value while using the 2004/08 namespace.

org.apache.cxf.ws.addressing.ContextUtils
  The back channel will be found even when the ReplyTo header is missing.

For the systests ws.addressing
org.apache.cxf.systest.ws.addressing MAPTestBase
  Its verifyHeaders method takes additionally a Boolean parameter replyToRequired to indicate whether the presence of the ReplyTo header must be verified.

org.apache.cxf.systest.ws.addressing HeaderVerifier
  Its verify method call the above verityHeaders method with the replyToRequired parameter set based on the namespace version.

The svn diff files of the above changes are attached.

Regards, Aki",,,,,,,,,,,,,,,,,24/Nov/10 06:08;ay;svndiff.zip;https://issues.apache.org/jira/secure/attachment/12460335/svndiff.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-11-26 07:43:08.609,,,no_permission,,Novice,,,,,,,,,,,47057,,,Fri Nov 26 07:43:08 UTC 2010,,,,,,0|i0kl1b:,118225,,,,,,,,"24/Nov/10 06:08;ay;contains

rt-ws-addr.diff -  svn diff on rt/ws/addr
systests-ws-specs.diff  - svn diff on systests/ws/specs
","26/Nov/10 07:43;ffang;apply patch on behalf of Aki Yoshida with thanks
http://svn.apache.org/viewvc?rev=1039249&view=rev for trunk
http://svn.apache.org/viewvc?rev=1039250&view=rev for 2.3 branch
http://svn.apache.org/viewvc?rev=1039254&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,,,
WebApplicationException and Response do not implement a useful toString()/getMessage() method,CXF-3150,12480765,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dobes_vandermeer,dobes_vandermeer,24/Nov/10 04:39,21/Jan/11 18:14,14/Mar/19 02:29,06/Dec/10 17:21,2.3,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"When using the client API, the WebApplicationExceptions are very opaque, it just says ""WebApplicationException"".

It would be nice if the printStackTrace() on these would, without additional work, print out at least the status code and possibly the response body if it meets some criteria (any way I can send back a useful error message from the server would be great).  The WebApplicationExceptions thrown by the client itself also seem to be lacking much useful information.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-12-06 17:21:20.494,,,no_permission,,,,,,,,,,,,,47058,,,Mon Dec 06 23:46:19 UTC 2010,,,,,,0|i0v0jj:,179061,,,,,,,,"06/Dec/10 17:21;sergey_beryozkin;I've introduced two exception classes. 

One is ServerWebApplicationException which extends WebApplicationException and make it easy to get to the status, headers, and the response message if any. ServerWebApplicationException is thrown only if the request has actually been made and the server returned a status >=400.

The other one is ClientWebApplicationException which is thrown in cases when no request has actually been made for whatever reasons. It extends the RuntimeException. Thus the client code which expects WebApplicationException be thrown even when no request has been made will become broken given this change. However - as you rightly noticed, WebApplicationException currently thrown on 2.3.0/2.3.1 are of little use in case of the client errors - thus I think this change is actually fixing an issue and thus is needed.

Note - you do not  have to use ServerWebApplicationException if you need to check the status, etc. You can get a JAX-RS Response from WebApplicationException too, ServerWebApplicationException just makes it easier to deal with the Response.

Besides, you can always get to the underlying response even with catching a runtime exception, this code will work for proxies :

Client client = WebClient.client(proxy);
// this one works for WebClient
client.getResponse()

Finally - you can register a custom WebApplicationExceptionMapper on the server side and include a stack trace if you wish - CXF JAX-RS just does not sent the actual code details by default.

http://svn.apache.org/viewvc?rev=1042724&view=rev

Any comments - let me know please

thanks, Sergey","06/Dec/10 23:46;dobes_vandermeer;Looks good, thanks!

That'll save some time when writing unit tests.
",,,,,,,,,,,,,,,,,,,,,,,,,
WebClient getCollection() doesn't work with Jackson's JSON Provider because it passes the wrong types to readFrom(),CXF-3149,12480757,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dobes_vandermeer,dobes_vandermeer,24/Nov/10 00:07,06/Dec/10 22:49,14/Mar/19 02:29,25/Nov/10 22:13,2.3,,,,,,,,,,,,,,,,,2.3.1,2.4,,,JAX-RS,,,,0,,,,,,"When you request a collection from the WebClient it calls readFrom() using the type == Collection.class and the genericType == the member type of the class.

Unfortunately, this isn't what is normally passed as the genericType when reflection or a GenericEntity was used to write out an object.  Normally, the genericType == Collection<X>.  In order to be more compatible with third-party providers, it would be best if the generic type was set consistently in each case, rather than having a special case for the collections.

To support this, the genericType should be set to a subclass of ParameterizedType, for example an instance of this class:

{code}
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.Collection;

public final class ParameterizedCollectionType<T> implements ParameterizedType {
	private final Class<T> collectionMemberClass;
	private final Type[] typeArgs;

	public ParameterizedCollectionType(Class<T> collectionMemberClass) {
		this.collectionMemberClass=collectionMemberClass;
		this.typeArgs=new Type[] { collectionMemberClass };
	}
	 
	public Type[] getActualTypeArguments() {
	    return typeArgs;
	}

	public Type getOwnerType() {
	    return null;
	}

	public Type getRawType() {
	    return Collection.class;
	}

	public String toString() {
		return ""java.util.Collection<""+collectionMemberClass.getName()+"">"";
	}
}
{code}

If this class was used in org.apache.cxf.jaxrs.client.WebClient.invokeAndGetCollection(String, Object, Class<T>) then the client would be able to read a JSON collection response using the JacksonJsonProvider.

As a workaround I have created a subclass of JacksonJsonProvider that ""fixes"" this issue by overriding readFrom():

{code}

	/**
	 * For collections, CXF passes type == Collection.class and genericType == the member class type.
	 * 
	 * But actually, it should pass genericType = Collection<X> as the generic type in order for Jackson
	 * to understand it.
	 */
	@SuppressWarnings(""unchecked"")
	@Override
	public Object readFrom(Class<Object> type, Type genericType, Annotation[] annotations, MediaType mediaType,
			MultivaluedMap<String, String> httpHeaders, InputStream entityStream) throws IOException {
		if(type.equals(Collection.class) && !(genericType instanceof ParameterizedType)) {
			genericType = new ParameterizedCollectionType<Object>((Class)genericType);
		}
		return super.readFrom(type, genericType, annotations, mediaType, httpHeaders, entityStream);
	}
{code}
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-11-25 22:13:08.02,,,no_permission,,,,,,,,,,,,,47059,,,Thu Nov 25 22:13:08 UTC 2010,,,,,,0|i0klcv:,118277,,,,,,,,"25/Nov/10 22:13;sergey_beryozkin;Brilliant, patch has been applied, thanks. 
Personally I'd expect 3rd party providers be more 'tolerant' (ex, CXF JAXBProvider works either way) but agree this fix is a useful one.",,,,,,,,,,,,,,,,,,,,,,,,,,
CXF converts collections to arrays during serialization,CXF-3148,12480751,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dobes_vandermeer,dobes_vandermeer,23/Nov/10 23:30,06/Dec/10 22:49,14/Mar/19 02:29,24/Nov/10 18:25,2.3,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,0,,,,,,"In org.apache.cxf.jaxrs.provider.JAXBElementProvider.marshalCollection(Class<?>, Object, Class<?>, Type, String, OutputStream, MediaType), it converts the resulting collection into an array before serializing it.

Unfortunately, this prevents us from using a collection that lazily loads its contents from the DB as it goes, since toArray() would require us to create and return all the results immediately.

Ideally this method would be changed to operate in a manner that is ""friendly"" to lazy collections, by only using the collection's iterator (once).

This version iterates over the collection only once, which would be the most efficient for collections that are backed by out of memory storage:

{code}
	protected void marshalCollection(Class<?> originalCls, Object actualObject, Class<?> actualClass, Type genericType, String encoding,
			OutputStream os, MediaType m) throws Exception {

		Collection c = originalCls.isArray() ? Arrays.asList((Object[]) actualObject) : (Collection) actualObject;
		
		Iterator it = c.iterator();
		
		boolean empty = false == it.hasNext();
		Object firstObj = empty?null:it.next();
		QName qname = null;
		if (firstObj instanceof JAXBElement) {
			JAXBElement el = (JAXBElement) firstObj;
			qname = el.getName();
			actualClass = el.getDeclaredType();
		} else {
			qname = getCollectionWrapperQName(actualClass, genericType, actualObject, true);
		}
		if (qname == null) {
			String message = new org.apache.cxf.common.i18n.Message(""NO_COLLECTION_ROOT"", BUNDLE).toString();
			throw new WebApplicationException(Response.serverError().entity(message).build());
		}

		String startTag = null;
		String endTag = null;
		if (qname.getNamespaceURI().length() > 0) {
			startTag = ""<ns1:"" + qname.getLocalPart() + "" xmlns:ns1=\"""" + qname.getNamespaceURI() + ""\"">"";
			endTag = ""</ns1:"" + qname.getLocalPart() + "">"";
		} else {
			startTag = ""<"" + qname.getLocalPart() + "">"";
			endTag = ""</"" + qname.getLocalPart() + "">"";
		}
		os.write(startTag.getBytes());
		if(!empty) {
			marshalCollectionMember(firstObj instanceof JAXBElement ? ((JAXBElement) firstObj).getValue() : firstObj, actualClass, genericType, encoding, os, m, qname
					.getNamespaceURI());
			while (it.hasNext()) {
				Object o = it.next();
				marshalCollectionMember(o instanceof JAXBElement ? ((JAXBElement) o).getValue() : o, actualClass, genericType, encoding, os, m, qname
						.getNamespaceURI());
			}
		}
		os.write(endTag.getBytes());
	}
{code}
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-11-24 18:25:16.102,,,no_permission,,,,,,,,,,,,,47060,,,Wed Nov 24 18:25:16 UTC 2010,,,,,,0|i0kl1j:,118226,,,,,,,,"24/Nov/10 18:25;sergey_beryozkin;Fix has been applied, thanks",,,,,,,,,,,,,,,,,,,,,,,,,,
FormParam parsing fails when no content-type is provided,CXF-3147,12480693,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,sergey_beryozkin,dobes_vandermeer,dobes_vandermeer,23/Nov/10 16:59,06/Dec/10 22:49,14/Mar/19 02:29,24/Nov/10 17:54,2.3,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,0,,,,,,"Ran into this writing unit tests - if no Content-Type is provided when doing a POST, some code handles a null media type and some doesn't:

In org.apache.cxf.jaxrs.utils.JAXRSUtils.processFormParam(Message, String, Class<?>, Type, String, boolean) it treats a null media type as if it was the same as the form media type:

if (mt == null || mt.isCompatible(MediaType.APPLICATION_FORM_URLENCODED_TYPE))

However, when reading the body of the form fields, it calls getCharset(mt) to get the character set to use when decoding the form fields, which doesn't check for null and thus throws an error.

Either the null media type should fall through and return an error (wrong content type) or it should be handled.

Suggested fix: In org.apache.cxf.jaxrs.utils.FormUtils.getCharset(MediaType), add if(mt == null) return ""UTF-8""; to the start of the method.

Easy workaround: only use clients that provide a content type for form field POSTs

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-11-24 17:51:57.544,,,no_permission,,,,,,,,,,,,,47061,,,Wed Nov 24 17:51:57 UTC 2010,,,,,,0|i0kl1r:,118227,,,,,,,,"23/Nov/10 17:01;dobes_vandermeer;This also affects the use of FormParam where no message body (and no content type) is provided; if the default values of the parameters are enough for the method, people might expect to be able to POST with no entity and get a response instead of an error 500.","24/Nov/10 17:51;sergey_beryozkin;I think in the early days I was checking for null because I was lazy specifying the media type in tests :-), MediaType is guaranteed not to be null by the earlier code - but I've added the suggested guard nonetheless - thanks",,,,,,,,,,,,,,,,,,,,,,,,,
SOAPBindingUtil 'leaks' proxy classes,CXF-3143,12480534,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,21/Nov/10 15:46,08/Aug/11 14:43,14/Mar/19 02:29,05/May/11 01:47,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,Soap Binding,,,,0,,,,,,"org.apache.cxf.tools.util.SOAPBindingUtil.getProxy(Class<T>, Object) creates proxies in the same class loader as the class it is proxying.

This essentially leaks them,  since the classes being proxied are prone to be in the system class loader, but the proxies are being created on behalf of the current thread.

The simplest improvement is to create them in the context class loader, so that (for example) the wsdl2java mojo can arrange for them to be GC-ed.

Another interesting question is whether there should be some sort of cache: it seems to me that we're creating proxies for the same IBM WSDL soap binding impl class over and over.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47065,,,2010-11-21 15:46:49.0,,,,,,0|i0kl27:,118229,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BusFactory holds static reference to defaultBus,CXF-3142,12480502,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,20/Nov/10 21:35,04/Dec/10 13:22,14/Mar/19 02:29,20/Nov/10 22:51,2.2.11,2.3,,,,,,,,,,,,,,,,2.3.1,2.4,,,Bus,,,,0,,,,,,"BusFactory.defaultBus is a static strong reference. I think I've proved that this is why CXF builds like to run out of memory.

I have a fix, I think, but I thought that this was a change that deserved tracking in JIRA.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-11-25 11:06:28.295,,,no_permission,,,,,,,,,,,,,47066,,,Sat Dec 04 13:22:09 UTC 2010,,,,,,0|i0kld3:,118278,,,,,,,,20/Nov/10 22:51;bmargulies;Fixed in trunk.,"25/Nov/10 11:06;asoldano;This seems to have been ported to 2.2.x and 2.3.x branches too, so updating the fix version accordingly.","26/Nov/10 01:54;dkulp;
Only the javadoc additions were ported back since that was useful, not the weak reference things. ","04/Dec/10 13:21;bmargulies;After much discussion, we decided not to try to make these soft or weak references. So this turns out to be just doc.",04/Dec/10 13:22;bmargulies;Done.,,,,,,,,,,,,,,,,,,,,,,
Implement better error checking in AbstractXSDToJavaMojo for missing extension fields,CXF-3138,12480454,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,dkarr,dkarr,19/Nov/10 21:50,21/Jan/11 18:14,14/Mar/19 02:29,08/Jan/11 02:22,2.3,,,,,,,,,,,,,,,,,2.3.2,,,,Tooling,,,,0,,,,,,"Maven POMs can be generated, or they can be hand-coded.  It's useful in some cases to not assume XML microformat conventions are not syntactically correct in the POM, in case the POM is hand-coded.  One case in point:

In ""org.apache.cxf.maven_plugin.AbstractXSDToJavaMojo"", the ""getArguments()"" method assumes the ""extension"" value is a colon-separated value with three subfields. If the value is malformed, like missing the last subfield (version), Maven just fails with ""Could not download extension artifact"" with no information.  If you then add ""-X"" to the command line, you'll see this small additional information:

-----------------------
[ERROR] Failed to execute goal org.apache.cxf:cxf-xjc-plugin:2.3.0:xsdtojava (generate-sources) on project SunlightDataService-war: Could not download extension artifact -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.cxf:cxf-xjc-plugin:2.3.0:xsdtojava (generate-sources) on project SunlightDataService-war: Could not download extension artifact
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:203)
...
Caused by: org.apache.maven.plugin.MojoExecutionException: Could not download extension artifact
        at org.apache.cxf.maven_plugin.AbstractXSDToJavaMojo.getArguments(AbstractXSDToJavaMojo.java:274)
...
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
        at org.apache.cxf.maven_plugin.AbstractXSDToJavaMojo.getArguments(AbstractXSDToJavaMojo.java:254)
-----------------------

if someone then examined the source for AbstractXSDToJavaMojo, they would then discover the reference to ""s[2]"" and hopefully realize that they left off the version subfield in the ""extension"" value.

My suggestion is to check the array length and print an error message indicating the required format of the ""extension"" value.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47070,,,2010-11-19 21:50:20.0,,,,,,0|i13ysv:,231268,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
context:annotation-config causes wsdl defined in jaxws:endpoint not to be found,CXF-3136,12480417,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,birgitfrank,birgitfrank,19/Nov/10 11:59,06/Dec/10 22:49,14/Mar/19 02:29,30/Nov/10 16:57,2.3,,,,,,,,,,,,,,,,,2.3.1,,,,Configuration,,,,0,,,,,,"Including the element ""context:annotation-config"" in your spring.xml-file causes service initialization to fail because the wsdl defined in ""jaxws:endpoint@wsdlLocation"" cannot be found. If ""context:annotation-config"" is removed the service is successfully initialized.

Example Spring configuration file:
========================================================================================

<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans"" 
   xmlns:cxf=""http://cxf.apache.org/core"" 
   xmlns:http-conf=""http://cxf.apache.org/transports/http/configuration""
   xmlns:jaxws=""http://cxf.apache.org/jaxws""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
   xmlns:context=""http://www.springframework.org/schema/context""
   xsi:schemaLocation=""http://cxf.apache.org/transports/http/configuration
                       http://cxf.apache.org/schemas/configuration/http-conf.xsd
                       http://cxf.apache.org/jaxws
                       http://cxf.apache.org/schemas/jaxws.xsd
                       http://cxf.apache.org/core
                       http://cxf.apache.org/schemas/core.xsd
                       http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans.xsd
                       http://www.springframework.org/schema/context 
                       http://www.springframework.org/schema/context/spring-context-2.5.xsd"">
   
   <import resource=""classpath:META-INF/cxf/cxf.xml"" />
   <import resource=""classpath:META-INF/cxf/cxf-extension-soap.xml"" />
   <import resource=""classpath:META-INF/cxf/cxf-servlet.xml"" />

   <context:annotation-config />
   
   <jaxws:endpoint id=""HelloWorldService""
                   implementor=""#HelloWorldWebServiceDef""
                   address=""/HelloWorldService/v1""
                   wsdlLocation=""wsdl/helloworldservice.wsdl"">
   </jaxws:endpoint>

   <bean id=""HelloWorldWebServiceDef"" class=""de.lbbw.helloworld.HelloWorldWebServiceImpl"">
   </bean>
</beans>

Tomcat catalina log (excerpt):
========================================================================================
INFO: Creating Service {http://service.helloworld.lbbw.de}HelloWorldService from WSDL: wsdl/helloworldservice.wsdl
19.11.2010 11:40:55 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons
INFO: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e17f9: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,HelloWorldService,HelloWorldWebServiceDef,cxf,org.apache.cxf.bus.spring.BusApplicationListener,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.resource.ResourceManager,org.apache.cxf.configuration.Configurer,org.apache.cxf.binding.BindingFactoryManager,org.apache.cxf.transport.DestinationFactoryManager,org.apache.cxf.transport.ConduitInitiatorManager,org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.phase.PhaseManager,org.apache.cxf.workqueue.WorkQueueManager,org.apache.cxf.buslifecycle.BusLifeCycleManager,org.apache.cxf.endpoint.ServerRegistry,org.apache.cxf.endpoint.ServerLifeCycleManager,org.apache.cxf.endpoint.ClientLifeCycleManager,org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.endpoint.EndpointResolverRegistry,org.apache.cxf.headers.HeaderManager,org.apache.cxf.catalog.OASISCatalogManager,org.apache.cxf.service.factory.FactoryBeanListenerManager,org.apache.cxf.endpoint.ServiceContractResolverRegistry,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder,org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder,org.apache.cxf.transport.http.policy.NoOpPolicyInterceptorProvider,org.apache.cxf.transport.http.ClientOnlyHTTPTransportFactory,org.apache.cxf.transport.servlet.ServletTransportFactory]; root of factory hierarchy
19.11.2010 11:40:55 org.springframework.beans.factory.support.DisposableBeanAdapter invokeCustomDestroyMethod
WARNUNG: Invocation of destroy method 'shutdown' failed on bean with name 'cxf': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.apache.cxf.buslifecycle.BusLifeCycleManager': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
19.11.2010 11:40:55 org.springframework.web.context.ContextLoader initWebApplicationContext
SCHWERWIEGEND: Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'HelloWorldService': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: org.apache.cxf.service.factory.ServiceConstructionException: Failed to create service.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:580)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4323)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4780)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:139)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:785)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:763)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:557)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:987)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:565)
	at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1472)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:297)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:836)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761)
	at org.apache.catalina.manager.ManagerServlet.check(ManagerServlet.java:1460)
	at org.apache.catalina.manager.HTMLManagerServlet.upload(HTMLManagerServlet.java:319)
	at org.apache.catalina.manager.HTMLManagerServlet.doPost(HTMLManagerServlet.java:192)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.apache.catalina.filters.CsrfPreventionFilter.doFilter(CsrfPreventionFilter.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:242)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:243)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:201)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:163)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:108)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:556)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:401)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:242)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:267)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:245)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:260)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.xml.ws.WebServiceException: org.apache.cxf.service.factory.ServiceConstructionException: Failed to create service.
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:335)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:238)
	at org.apache.cxf.jaxws.EndpointImpl.publish(EndpointImpl.java:481)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1544)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1417)
	... 53 more
Caused by: org.apache.cxf.service.factory.ServiceConstructionException: Failed to create service.
	at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:93)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:373)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:503)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:242)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:184)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ServerFactoryBean.create(ServerFactoryBean.java:148)
	at org.apache.cxf.jaxws.JaxWsServerFactoryBean.create(JaxWsServerFactoryBean.java:183)
	at org.apache.cxf.jaxws.EndpointImpl.getServer(EndpointImpl.java:407)
	at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:314)
	... 62 more
Caused by: javax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: Problem parsing 'wsdl/helloworldservice.wsdl'.: java.io.FileNotFoundException: C:\Anwendungen\Tomcat\apache-tomcat-7.0.2\bin\wsdl\helloworldservice.wsdl (Das System kann den angegebenen Pfad nicht finden)
	at com.ibm.wsdl.xml.WSDLReaderImpl.getDocument(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:239)
	at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:186)
	at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:91)
	... 71 more
Caused by: java.io.FileNotFoundException: C:\Anwendungen\Tomcat\apache-tomcat-7.0.2\bin\wsdl\helloworldservice.wsdl (Das System kann den angegebenen Pfad nicht finden)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at java.io.FileInputStream.<init>(FileInputStream.java:66)
	at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:70)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:161)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:653)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:186)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:772)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
	... 77 more
19.11.2010 11:40:55 org.apache.catalina.core.StandardContext startInternal
SCHWERWIEGEND: Error listenerStart
19.11.2010 11:40:55 org.apache.catalina.core.StandardContext startInternal
SCHWERWIEGEND: Context [/HelloWorldService] startup failed due to previous errors
","Java 6.0.29, Tomcat 7.0.2, CXF 2.3.0, Spring 3.0.4",,,,,,,,,,,,,,,,19/Nov/10 12:10;birgitfrank;HelloWorldService.war;https://issues.apache.org/jira/secure/attachment/12459995/HelloWorldService.war,19/Nov/10 12:10;birgitfrank;catalina.2010-11-19.log;https://issues.apache.org/jira/secure/attachment/12459996/catalina.2010-11-19.log,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47072,,,Fri Nov 19 12:10:02 UTC 2010,,,,,,0|i0kldb:,118279,,,,,,,,19/Nov/10 12:10;birgitfrank;Example war-File without libraries and tomcat's catalina log attached,,,,,,,,,,,,,,,,,,,,,,,,,,
WadlGenerator does not respect Consumes annotation for form requests,CXF-3135,12480365,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,guyd,guyd,18/Nov/10 19:18,21/Jan/11 18:14,14/Mar/19 02:29,11/Jan/11 21:00,2.3,,,,,,,,,,,,,,,,,2.3.2,2.4,,,JAX-RS,,,,0,,,,,,"{{WadlGenerator}} invokes {{handleRepresentation}} with the wrong parameter when creating the {{<request>}} element.  The last parameter of {{handleRepresentation}} should be _true_ not _false_:
{code}
 if (ori.getMethodToInvoke().getParameterTypes().length != 0) {
            sb.append(""<request>"");
            if (isFormRequest(ori)) {
                handleRepresentation(sb, jaxbTypes, qnameResolver, clsMap, ori, null, false);
            } else {
                for (Parameter p : ori.getParameters()) {        
                    handleParameter(sb, jaxbTypes, qnameResolver, clsMap, ori, p);             
                }
            }
            sb.append(""</request>"");
 }
{code}",any,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-11-19 11:08:45.932,,,no_permission,,,,,,,,,,,,,47073,,,Tue Jan 11 14:57:12 UTC 2011,,,,,,0|i13ypb:,231252,,,,,,,,"19/Nov/10 11:08;sergey_beryozkin;Can you please provide more information ? I have a test confirming @Consumes is checked.

Just post here a sample class resource with a single method only which uses @Consumes, as well as a sample (JAXB) bean - if this method does expect some XML.
",19/Nov/10 13:52;guyd;I can certainly do that but I feel it is just simpler to take a look at the {{WadlGenerator}} code directly.  The snippet I pasted in the description shows that {{handleRepresentation}} is called with the last parameter set to false while handling the generation of the {{<request>}} element.  That last parameter determines if the representation is for _inbound_ communication.  In this case I believe it should be _true_ not _false_.  ,"19/Nov/10 16:49;sergey_beryozkin;Hope you appreciate that I can not just change it to 'true' just because it seems like the right thing to do.

As you can see from the code, a check is done if a current method is supposed to handle form submissions or not. If yes then it uses 'false' which alongside with some other parameters indicate to handleRepresentation() that in this case request parameters have to be shown as parameters of the representation which exactly what needs to be done per the WADL spec, where form parameters are shown as query parameters. This is actually a broken way to convey it and will be refactored but this is the way I did id awhile back.

So can you elaborate please on what exactly do you mean that @Consumes is not checked ? If you show me a method signature then it will help. It does not have to be the signature from the production code, but just needs to show the same annotations that you use in the real case. 
",19/Nov/10 18:18;guyd;Thanks for the additional feedback.  Let me review the case I've stumbled upon yesterday and update the description accordingly.,"22/Nov/10 16:23;guyd;Here is the example I was concerned with.  It seems that these two methods should generate the same *mediaType attribute* in the request representation element but there are not:
{code}
@Service(""wadlTest"")
@Path(""/resource"")
@Description(""Shouldn't these two cases give the same representation"")
public class WadlTest {
	org.apache.cxf.jaxrs.model.wadl.WadlGenerator wadl;
	
	@POST
	@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	@Produces(MediaType.APPLICATION_JSON)
	@Description(""using MultiValuedMap gives application/x-www-form-urlencoded"")
	public String postWithMultiValued(MultivaluedMap<String, String> formParams) {
		String stringParam = formParams.getFirst(""stringParam"");
		long longParam = Long.parseLong(formParams.getFirst(""longParam""));
		return ""{}"";
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
	@Produces(MediaType.APPLICATION_JSON)
	@Description(""using FormParam gives application/json"")
	public String postWithFormParam(@FormParam(""stringParam"") String stringParam,
			@FormParam(""longParam"") long longParam) {
		return ""{}"";
	}
}
{code}
The generated WADL with CXF 2.2.9 is 
{code:xml}
<resource path=""/resource"">
      <doc>Shouldn't these two cases give the same representation</doc>
      <method name=""POST"">
            <doc>using MultiValuedMap gives application/x-www-form-urlencoded</doc>
            <request>
                  <representation mediaType=""application/x-www-form-urlencoded""/>
            </request>
            <response>
                  <!-- Primitive type : xs:string -->
                  <representation mediaType=""application/json""/>
            </response>
      </method>
      <method name=""POST"">
            <doc>using FormParam gives application/json</doc>
            <request>
                  <representation mediaType=""application/json"">
                        <param name=""stringParam"" style=""query"" type=""xs:string""/>
                        <param name=""longParam"" style=""query"" type=""xs:long""/>
                  </representation>
            </request>
            <response>
                  <!-- Primitive type : xs:string -->
                  <representation mediaType=""application/json""/>
            </response>
      </method>
</resource>
{code}","11/Jan/11 14:57;sergey_beryozkin;Confirmed, thanks for posting the sample output",,,,,,,,,,,,,,,,,,,,,
Build fails when a space is included in the directory URL.,CXF-3134,12480340,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,gliesian,gliesian,18/Nov/10 14:53,21/Jan/11 18:14,14/Mar/19 02:29,05/Jan/11 18:32,2.3,,,,,,,,,,,,,,,,,2.3.2,,,,,,,,0,,,,,,"The maven build process is unsuccessful when the cxf folders are subfolders of a folder that contains a space.

That is, running ""mvn install"" here  works fine: 
C:\_Stacks\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\

However, running ""mvn install"" with a space included fails the build (notice the space between _Space and Stacks):
C:\_Space Stacks\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\

Build output:

...
------------------------------------------------------------------------
[INFO] Building Apache CXF Runtime Core
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] [checkstyle:checkstyle {execution: validate}]
[INFO] Starting audit...
Audit done.

[INFO] Preparing pmd:check
[INFO] [pmd:pmd {execution: pmd}]
[INFO] [pmd:check {execution: validate}]
[INFO] 
[INFO] [cxf-xml2fastinfoset:xml2fastinfoset {execution: xml2fastinfoset}]
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 14 resources
[INFO] Copying 8 resources
[INFO] skip non existing resourceDirectory C:\_Space Stacks\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\core\src\main\resources-filtered
[INFO] Copying 1 resource
[INFO] Copying 3 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources {execution: default-testResources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 19 resources
[INFO] Copying 30 resources
[INFO] skip non existing resourceDirectory C:\_Space Stacks\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\core\target\generated\src\test\resources
[INFO] Copying 3 resources
[INFO] [compiler:testCompile {execution: default-testCompile}]
[INFO] Nothing to compile - all classes are up to date
[INFO] [surefire:test {execution: default-test}]
[INFO] Surefire report directory: C:\_Space Stacks\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\core\target\surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.cxf.bus.extension.ExtensionTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.156 sec
Running org.apache.cxf.interceptor.ServiceInvokerInterceptorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.141 sec
Running org.apache.cxf.endpoint.ServerRegistryImpTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running org.apache.cxf.endpoint.EndpointResolverRegistryImplTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.125 sec
Running org.apache.cxf.bus.spring.BusApplicationContextTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.812 sec
Running org.apache.cxf.workqueue.AutomaticWorkQueueTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.657 sec
Running org.apache.cxf.transport.ChainInitiationObserverTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 sec
Running org.apache.cxf.bus.CXFBusImplTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.078 sec
Running org.apache.cxf.interceptor.OutgoingChainInterceptorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.125 sec
Running org.apache.cxf.wsdl11.WSDLServiceBuilderTest
Tests run: 16, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.641 sec <<< FAILURE!
testImport(org.apache.cxf.wsdl11.WSDLServiceBuilderTest)  Time elapsed: 0.172 sec  <<< FAILURE!
java.lang.AssertionError: 
	at org.junit.Assert.fail(Assert.java:91)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertNotNull(Assert.java:524)
	at org.junit.Assert.assertNotNull(Assert.java:535)
	at org.apache.cxf.wsdl11.WSDLServiceBuilderTest.testImport(WSDLServiceBuilderTest.java:488)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:120)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:103)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)

Running org.apache.cxf.attachment.AttachmentSerializerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.219 sec
Running org.apache.cxf.wsdl11.ServiceWSDLBuilderTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 sec
Running org.apache.cxf.interceptor.DocLiteralInInterceptorTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.281 sec
Running org.apache.cxf.bus.spring.SpringBusFactoryTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.469 sec
Running org.apache.cxf.bus.extension.ExtensionFragmentParserTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running org.apache.cxf.transport.CachedOutputStreamTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.125 sec
Running org.apache.cxf.bus.spring.BusDefinitionParserTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.172 sec
Running org.apache.cxf.wsdl11.WSDLDefinitionBuilderTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.297 sec
Running org.apache.cxf.buslifecycle.CXFBusLifeCycleManagerTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running org.apache.cxf.interceptor.PrettyLoggingOutInterceptorTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running org.apache.cxf.test.XPathAssertTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 sec
Running org.apache.cxf.wsdl11.WSDLManagerImplTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running org.apache.cxf.endpoint.ServiceContractResolverRegistryImplTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 sec
Running org.apache.cxf.configuration.spring.ConfigurerImplTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.187 sec
Running org.apache.cxf.transport.HttpUriMapperTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running org.apache.cxf.bus.extension.ExtensionManagerTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec
Running org.apache.cxf.attachment.AttachmentDeserializerTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.266 sec
Running org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptorTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 sec

Results :

Failed tests: 
  testImport(org.apache.cxf.wsdl11.WSDLServiceBuilderTest)

Tests run: 118, Failures: 1, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] There are test failures.

Please refer to C:\_Space Stacks\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\core\target\surefire-reports for the individual test results.
...","Microsoft Windows XP, JDK 1.6, CXF 2.3.0",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-05 18:32:15.169,,,no_permission,,,,,,,,,,,,,47074,,,Wed Jan 05 18:32:15 UTC 2011,,,,,,0|i13yl3:,231233,,,,,,,,"05/Jan/11 18:32;dkulp;
We now have a windows build setup in hudson with spaces in both the  path to the svn checkout as well as the maven repo.   Hopefully that will catch these errors sooner from now on.",,,,,,,,,,,,,,,,,,,,,,,,,,
asynchronous client can't get correct error if non-runtimeexcpetion happen,CXF-3132,12480314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,18/Nov/10 09:17,06/Dec/10 22:49,14/Mar/19 02:29,19/Nov/10 09:40,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,,,,,0,,,,,,"when use asynchronous cxf client handler, if there's a non-runtimeexception thrown, the asynchronous client handler can't get correct reason but get TimeoutException.

For example if client receive a very complex soap message response with a greate amount of element level like
<soap:envelope><soap:body><a1><a2>...<an></an>...</a2</a2></soap:body></soap:envelope>
here n could be very big which can cause StackOverflowError in StatxUtils as StatxUtils use recursive way to parse soap message.

In this case if we use asynchronous cxf client, the client has no way to know there's a StackOverflowError but just get TimeoutException.

",,,,,,,,,,,,,,,,,18/Nov/10 09:20;ffang;CXF-3132-testcase.patch;https://issues.apache.org/jira/secure/attachment/12459898/CXF-3132-testcase.patch,18/Nov/10 17:01;dkulp;non-recurse.patch;https://issues.apache.org/jira/secure/attachment/12459926/non-recurse.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-11-18 17:01:50.583,,,no_permission,,,,,,,,,,,,,47076,,,Fri Nov 19 09:40:02 UTC 2010,,,,,,0|i0kl2f:,118230,,,,,,,,18/Nov/10 09:20;ffang;attach a testcase which expose this issue,"18/Nov/10 17:01;dkulp;
Freeman,

The testcase and the ""fix"" added to cxf/trunk really ""fixes"" the wrong thing, or, at the very least, is incomplete.

The proper fix, in this case, is to fix StaxUtils.   I've attached a patch that fixes that to make the StaxUtils be non-recursive.     However, that causes your test to now fail as it relies on the broken behavior.   

The test needs to be updated to mimic the behavior without relying on the broken behavior in StaxUtils.  My suggestion would be to add an interceptor on the client side that just throws some sort of RuntimeException.   That would also remove the 500K sample response which just wastes disk space.  

","19/Nov/10 09:22;ffang;Hi Dan,

Done.

Fully agree with you that we should refactor StaxUtils not to use recursive way to avoid StackOverflowError, I'm actually thinking about it and going to create another issue to track it,  :-)
Btw, I revise your patch a little bit to not use JDK6 only Deque class, and use old Stack class instead, which make it works with both JDK5 and JDK6.

Also I think that we should ensure asynchronous client could get correct Error (like StackOverflowError)  but not Timeout when it's not RuntimeException, some third party libs which we can't control still use recursive algorithm so we can't guarantee there's no StackOverflowError anymore, so if it happens, asynchronous client should know about it.

Best Regards

Freeman

","19/Nov/10 09:40;ffang;commit fix

http://svn.apache.org/viewvc?rev=1036397&view=rev
http://svn.apache.org/viewvc?rev=1036765&view=rev for trunk

http://svn.apache.org/viewvc?rev=1036401&view=rev
http://svn.apache.org/viewvc?rev=1036766&view=rev for 2.3 branch

http://svn.apache.org/viewvc?rev=1036774&view=rev
http://svn.apache.org/viewvc?rev=1036405&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,
CXF XCJ DV Plugin removes XmlElement Annotation from Fields,CXF-3131,12480204,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,agudian,agudian,17/Nov/10 10:09,21/Jan/11 18:14,14/Mar/19 02:29,08/Jan/11 02:16,2.3,,,,,,,,,,,,,,,,,2.3.2,,,,Tooling,,,,0,,,,,,"Using the XJC default value plugin (org.apache.cxf.xjcplugins:cxf-xjc-dv) removes the @XmlElement(name=...) annotation from fields where it adds a default value.

For example, see the following XSD fragment:
{code:xml}
<xs:complexType name=""TypeA"">
   <xs:sequence>
      <xs:element name=""Customer"" type=""tns:customerTypeWithDefaultValuesInside"" />
   </xs:sequence>
</xs:complexType>
{code}

*Without* dv, the following code is generated:
{code:title=TypeA.java}
...
    @XmlElement(name = ""Customer"", required = true)
    protected CustomerTypeWithDefaultValuesInside customer;
...
{code}

Now, *With* -X-dv, the following code is generated:
{code:title=TypeA.java}
...
    /*
    *
    */
    protected CustomerTypeWithDefaultValuesInside customer = new CustomerTypeWithDefaultValuesInside();
...
{code}

With the XmlElement annotation missing, the XML instance generated during marshalling contains an element {{<customer>}}, instead of {{<Customer>}} - which does not correspond to the definition in the XSD and is therefor invalid.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47077,,,Wed Nov 17 10:16:36 UTC 2010,,,,,,0|i0uzgn:,178886,,,,,,,,"17/Nov/10 10:16;agudian;My guess is, that the reason is the following code in org.apache.cxf.xjc.dv.DefaultValuePlugin:

{code:title=org.apache.cxf.xjc.dv.DefaultValuePlugin.java}
// line 135
                if (xsType != null && xsType.isComplexType() && containsDefaultValue(outline, f)) {
                    String varName = f.getPropertyInfo().getName(false);
                    JFieldVar var = co.implClass.fields().get(varName);
                    if (var != null) {
                        co.implClass.removeField(var);

                        JFieldVar newVar = co.implClass.field(var.mods().getValue(), 
                                                              var.type(), 
                                                              var.name(), 
                                                              JExpr._new(f.getRawType()));
                        newVar.javadoc().append(var.javadoc());
                    }
                }
{code}

The annotation from the old field var is not copied to the new field newVar. 

Perhaps I'm missing something, but wouldn't be the following change just do the trick?

{code:title=org.apache.cxf.xjc.dv.DefaultValuePlugin.java - Proposed Fix}
// line 135
                if (xsType != null && xsType.isComplexType() && containsDefaultValue(outline, f)) {
                    String varName = f.getPropertyInfo().getName(false);
                    JFieldVar var = co.implClass.fields().get(varName);
                    if (var != null) {
                        var.init(JExpr._new(f.getRawType()));
                    }
                }
{code}

Can anyone check this, please? 
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis throws (and throws up) when an ExceptionInInitializerError happens while introspecting,CXF-3130,12480143,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,16/Nov/10 20:22,18/Apr/11 12:50,14/Mar/19 02:29,02/Apr/11 00:18,2.2.11,2.3,,,,,,,,,,,,,,,,2.3.2,,,,Aegis Databinding,,,,0,,,,,,"org.apache.cxf.aegis.type.java5.AnnotationReader, the function 'load' carefully traps ClassNotFoundException to allow it to just float along past problems with classes that are referenced in services. However, there might also be an ExceptionInInitializerError, and those pass through.

In both cases, logging+returning null seems appropriate.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47078,,,2010-11-16 20:22:54.0,,,,,,0|i13yo7:,231247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
@WebMethod(exclude=true) is not being honoured when generating WSDL,CXF-3128,12480101,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jmcarter,jmcarter,16/Nov/10 11:22,13/Nov/17 19:04,14/Mar/19 02:29,16/Nov/10 20:44,2.3,,,,,,,,,,,,,,,,,2.3.1,,,,,,,,0,,,,,,"I am attempting to prevent a public method appearing in the generated WSDL file from my Java source code.  I have annotated the method with @WebMethod(exclude=true), however it is still appearing in the WSDL file.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-11-16 17:30:07.498,,,no_permission,,,,,,,,,,,,,47080,,,Tue Nov 16 20:44:09 UTC 2010,,,,,,0|i0kldr:,118281,,,,,,,,"16/Nov/10 11:56;jmcarter;I originally just had the @WebMethod(exclude=true) declared in the SEI, and this meant that the method did get included within the generated WSDL.

Having also declared @WebMethod(exclude=true) within the implementation class, the method is no longer included within the generated WSDL.

Is this correct behaviour?","16/Nov/10 17:30;dkulp;
Doesn't sound like it.  If the @WebMethod(exclude=true) is on the SEI method, it SHOULD be excluded.   I just checked with one of  the samples and can reproduce it, yet we also have a unit test that does work.   Not sure what is going on yet.

","16/Nov/10 19:26;dkulp;
Actually, this turns out to be correct.   I  checked the JAX-WS spec and it specifically states that the methods on the SEI:

• Any of its methods MAY carry a javax.jws.WebMethod annotation (see 7.11.2).
• javax.jws.WebMethod if used, MUST NOT have the exclude element set to true.

Thus, it would be a violation of the spec to have the exclude=true on the SEI interface method.   Thus, it must be in the implementation method.

","16/Nov/10 20:44;dkulp;Added checks for  this in the code and properly throw an exception rather than just ignore it.

",,,,,,,,,,,,,,,,,,,,,,,
CXF example mvn -Pserver complain about the can't find right version of exec-maven-plugin,CXF-3126,12480047,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,16/Nov/10 08:51,06/Dec/10 22:49,14/Mar/19 02:29,26/Nov/10 00:47,2.3,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,,,,,0,,,,,,"{code}

Project ID: org.codehaus.mojo:exec-maven-plugin

Reason: Error getting POM for 'org.codehaus.mojo:exec-maven-plugin' from the repository: Failed to resolve artifact, possibly due to a repository list that is not appropriately equipped for this artifact's metadata.
  org.codehaus.mojo:exec-maven-plugin:pom:1.1.2-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

 for project org.codehaus.mojo:exec-maven-plugin

{code}

We just need update the dependency version in the example pom.xml.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47082,,,2010-11-16 08:51:40.0,,,,,,0|i0kl2n:,118231,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Async Handler for dispatch client is called twice in case of bad response message,CXF-3122,12479907,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,14/Nov/10 13:31,06/Dec/10 22:49,14/Mar/19 02:29,19/Nov/10 06:38,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-WS Runtime,,,,0,,,,,,for example the response is missing end tags,,,,,,,,,,,,,,,,,14/Nov/10 13:37;ffang;testcase-to-expose-problem.patch;https://issues.apache.org/jira/secure/attachment/12459556/testcase-to-expose-problem.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47085,,,Fri Nov 19 06:38:27 UTC 2010,,,,,,0|i0kl2v:,118232,,,,,,,,"14/Nov/10 13:37;ffang;attach a runnable testcase which can simply expose this problem
apply this patch
in systests/jaxws folder and run
mvn test -Dtest=DispatchClientServerWithMalformedResponseTest
can see the AsyncHandler get invoked twice.","15/Nov/10 07:55;ffang;Here is the stacktrace two place call JaxwsClientCallback.handleException()

one this
at org.apache.cxf.systest.dispatch.DispatchClientServerWithMalformedResponseTest$TestSOAPMessageHandler.handleResponse(DispatchClientServerWithMalformedResponseTest.java:146)
	at org.apache.cxf.jaxws.JaxwsClientCallback.handleException(JaxwsClientCallback.java:85)
	at org.apache.cxf.interceptor.ClientOutFaultObserver.onMessage(ClientOutFaultObserver.java:55)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:294)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:733)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2378)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:2253)
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2.run(AutomaticWorkQueueImpl.java:253)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:651)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:676)
	at java.lang.Thread.run(Thread.java:613)
the other is

at org.apache.cxf.systest.dispatch.DispatchClientServerWithMalformedResponseTest$TestSOAPMessageHandler.handleResponse(DispatchClientServerWithMalformedResponseTest.java:146)
	at org.apache.cxf.jaxws.JaxwsClientCallback.handleException(JaxwsClientCallback.java:85)
	at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:754)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2378)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:2253)
	at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2.run(AutomaticWorkQueueImpl.java:253)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:651)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:676)
	at java.lang.Thread.run(Thread.java:613)

we should get rid of the duplicated invocation for JaxwsClientCallback.handleException() by adding check that ClientOutFaultObserver.onMessage() should only take care of the fault for Outbound message","19/Nov/10 06:38;ffang;commit fix
http://svn.apache.org/viewvc?rev=1035203&view=rev for trunk
http://svn.apache.org/viewvc?rev=1035304&view=rev for 2.3 branch
http://svn.apache.org/viewvc?rev=1035318&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,,
can't build java_first_spring_support example,CXF-3120,12479792,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,12/Nov/10 12:39,06/Dec/10 22:49,14/Mar/19 02:29,14/Nov/10 10:52,2.2.11,,,,,,,,,,,,,,,,,2.2.12,,,,Samples,,,,0,,,,,,"get exception like
/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[21,25] package org.mortbay.jetty does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[22,25] package org.mortbay.jetty does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[23,33] package org.mortbay.jetty.handler does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[24,33] package org.mortbay.jetty.handler does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[25,29] package org.mortbay.jetty.nio does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[26,32] package org.mortbay.jetty.webapp does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[40,25] package org.mortbay.jetty does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[40,63] package org.mortbay.jetty does not exist

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[42,8] cannot find symbol
symbol  : class SelectChannelConnector
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[42,47] cannot find symbol
symbol  : class SelectChannelConnector
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[44,33] cannot find symbol
symbol  : class Connector
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[46,8] cannot find symbol
symbol  : class WebAppContext
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[46,42] cannot find symbol
symbol  : class WebAppContext
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[51,8] cannot find symbol
symbol  : class HandlerCollection
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[51,41] cannot find symbol
symbol  : class HandlerCollection
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[52,33] cannot find symbol
symbol  : class Handler
location: class demo.spring.servlet.Server

/Users/ffang/apache-cxf-2.2.11/samples/java_first_spring_support/src/demo/spring/servlet/Server.java:[52,63] cannot find symbol
symbol  : class DefaultHandler
location: class demo.spring.servlet.Server

This is because in the pom.xml, use <cxf.version>[2,)</cxf.version>, which in turn the dependency tree will pick up  the latest cxf-rt-transports-http-jetty(it's 2.4.0-SNAPSHOT from my test, not the latest released version 2.3.0), which use jetty 7.0, so the jetty related class package just change.

I believe this problem also in other samples which use jetty related class, and I think we need use exact version for each release rather than the version range(in which case during the building of released example will pick up the snapshot dependency, we should avoid it )",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47087,,,Sun Nov 14 10:52:34 UTC 2010,,,,,,0|i0kl3b:,118234,,,,,,,,"14/Nov/10 10:52;ffang;commit fix
http://svn.apache.org/viewvc?rev=1034973&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,
Inapppropriate use of naked RuntimeException,CXF-3117,12479599,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,10/Nov/10 15:34,18/Apr/11 12:42,14/Mar/19 02:29,05/Apr/11 21:47,2.3,,,,,,,,,,,,,,,,,2.3.4,2.4,,,,,,,0,,,,,,"org.apache.cxf.binding.soap.SoapTransportFactory.getDestination(EndpointInfo) throws a RuntimeException. This should be a CXF-specific exception, and the information of the underlying BusExcpetion should not be discarded.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5917,,,2010-11-10 15:34:02.0,,,,,,0|i0b9jj:,63658,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in HolderInInterceptor,CXF-3116,12479476,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,laurenceweil,laurenceweil,09/Nov/10 09:29,06/Dec/10 22:49,14/Mar/19 02:29,11/Nov/10 21:12,2.3,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,,,,,0,,,,,,"When making a call to an unsupported WS-*service (i.e. ws-transfer) a null pointer occurs in HolderInInterceptor.

A client issued the following request:

<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope""
xmlns:a=""http://www.w3.org/2005/08/addressing""><s:Header><a:Action
s:mustUnderstand=""1"">http://schemas.xmlsoap.org/ws/2004/09/transfer/Get</a:
Action><a:MessageID>urn:uuid:b2849fc9-6679-44d7-ae62-3f6c64744ae0</a:Messag
eID><a:ReplyTo><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a
:Address></a:ReplyTo><a:To
s:mustUnderstand=""1"">http://dhtcmrl1:8080/test-service/Customer?wsdl/mex</
a:To></s:Header><s:Body/></s:Envelope>

Which resulted in the following error in the server logs:

PhaseInterceptorChain - Interceptor for
{http://customer.service.test.co.uk/}CustomerServiceImplService has thrown
exception, unwinding now
java.lang.NullPointerException
	at
org.apache.cxf.jaxws.interceptors.HolderInInterceptor.handleMessage(HolderI
nInterceptor.java:50) at
org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChai
n.java:247) at
org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationO
bserver.java:113) at
org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestinati
on.java:97) at
org.apache.cxf.transport.servlet.ServletController.invokeDestination(Servle
tController.java:458) at
org.apache.cxf.transport.servlet.ServletController.invoke(ServletController
.java:185) at
org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServl
et.java:148) at
org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(Abstract
HTTPServlet.java:179) at
org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPSer
vlet.java:103) at
javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at
org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPSe
rvlet.java:159) at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Applicatio
nFilterChain.java:290) at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterC
hain.java:206) at
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.j
ava:233) at
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.j
ava:191) at
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:12
7) at
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:10
2) at
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.jav
a:109) at
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at
org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Htt
p11Protocol.java:588) at
org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489) at
java.lang.Thread.run(Thread.java:619)
2010-11-08 11:43:17,826 INFO [http-8080-1] Soap12FaultOutInterceptor -
class
org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12Fa
ultOutInterceptorInternalapplication/soap+xml","os-x, java1.6, tomcat6",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47090,,,2010-11-09 09:29:08.0,,,,,,0|i0kl3r:,118236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM's RMTxStore's does not recover stored sequences after restart,CXF-3114,12479372,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ay,ay,08/Nov/10 13:29,15/May/15 15:11,14/Mar/19 02:29,24/Nov/10 08:50,,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,,,,,0,,,,,,"When WS-RM's derby storage is activated, the sequence data are persisted in the database.
However, these sequence data are not loaded from the database when the WS-RM component is restarted.

This problem appears to be caused by the init method of the persistence class org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore which leaves an uncommitted transaction to the relevant tables open. Consequently, the next select statement that loads the persisted sequence data is not seeing the content.

The original source code fragment of this method looks like this:
{code}
        try {
            connection.setAutoCommit(false);
            createTables();
        } catch (SQLException ex) {
            LogUtils.log(LOG, Level.SEVERE, ""CONNECT_EXC"", ex);
            SQLException se = ex;
            while (se.getNextException() != null) {
                se = se.getNextException();
                LogUtils.log(LOG, Level.SEVERE, ""CONNECT_EXC"", se);
            }
            throw new RMStoreException(ex);
        }   
{code}

The suggested change would be as follows:
{code}
        try {
            connection.setAutoCommit(true);
            createTables();
        } catch (SQLException ex) {
            LogUtils.log(LOG, Level.SEVERE, ""CONNECT_EXC"", ex);
            SQLException se = ex;
            while (se.getNextException() != null) {
                se = se.getNextException();
                LogUtils.log(LOG, Level.SEVERE, ""CONNECT_EXC"", se);
            }
            throw new RMStoreException(ex);
        } finally {
            try {
                connection.setAutoCommit(false);                
            } catch (SQLException ex) {
                LogUtils.log(LOG, Level.SEVERE, ""CONNECT_EXC"", ex);
                throw new RMStoreException(ex);
            }
        }
{code}

In the above code, the setAutoCommit(true) statement could be omitted if we simply want to rely on the default autoCommit mode.
In any case, the suggested code makes sure that the subsequence statement is correctly executed.


",CXF 2.2.11 with Derby 10.6.2.1,,,,,,,,,,,,,,,,16/Nov/10 08:13;ay;rt-ws-fixes.zip;https://issues.apache.org/jira/secure/attachment/12459689/rt-ws-fixes.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-11-09 01:22:17.255,,,no_permission,,,,,,,,,,,,,47092,,,Wed Nov 24 08:50:38 UTC 2010,,,,,,0|i0kl3z:,118237,,,,,,,,"09/Nov/10 01:22;ffang;Hi Aki,

The suggestion seems ok for me.
Could you please use ""svn  diff"" to generate a patch and append to this jira issue with selecting grant Apache License radio button?

Thanks
Freeman","09/Nov/10 17:28;ay;Hi Freeman,
Okay.

There is another thing that I forgot to mention in my post. With the above change, RMTxStore can load the stored sequences.
The other part that needs to be fixed is the part that actually recovers the stored destination sequences for each endpoint after restart.

In RMManager, currently, its recoverReliableEndpoint method which gets called at the startup recovers only the source sequences but no destination sequences. In order for the server to recognize the persisted sequences, the destination sequences must be also loaded into the Destination associated with each endpoint.

So I made some changes in my local copy of RMManager to solve this issue.
The original code fragment
{code}
    void recoverReliableEndpoint(Endpoint endpoint, Conduit conduit) {
        ...
        Collection<SourceSequence> sss = store.getSourceSequences(id);
        if (null == sss || 0 == sss.size()) {                        
            return;
        }
        LOG.log(Level.FINE, ""Number of source sequences: {0}"", sss.size());
        
        RMEndpoint rme = null;
        for (SourceSequence ss : sss) {            
 
            Collection<RMMessage> ms = store.getMessages(ss.getIdentifier(), true);
            if (null == ms || 0 == ms.size()) {
                continue;
            }
            LOG.log(Level.FINE, ""Number of messages in sequence: {0}"", ms.size());
            
            if (null == rme) {
                LOG.log(Level.FINE, ""Recovering {0} endpoint with id: {1}"",
                        new Object[] {null == conduit ? ""client"" : ""server"", id});
                rme = createReliableEndpoint(endpoint);
                rme.initialise(conduit, null);
                reliableEndpoints.put(endpoint, rme);
            }
            rme.getSource().addSequence(ss, false);
            
            for (RMMessage m : ms) {                
                ...
            } 
        }
        retransmissionQueue.start();

    }
{code}

The changed fragment that includes the loading of the destination sequences
{code}
    void recoverReliableEndpoint(Endpoint endpoint, Conduit conduit) {
        ...
        Collection<SourceSequence> sss = store.getSourceSequences(id);
        Collection<DestinationSequence> dss = store.getDestinationSequences(id);
        if ((null == sss || 0 == sss.size()) && (null == dss || 0 == dss.size())) {                        
            return;
        }
        LOG.log(Level.FINE, ""Number of source sequences: {0}"", sss.size());
        LOG.log(Level.FINE, ""Number of destination sequences: {0}"", dss.size());
        
        LOG.log(Level.FINE, ""Recovering {0} endpoint with id: {1}"",
                new Object[] {null == conduit ? ""client"" : ""server"", id});
        RMEndpoint rme = createReliableEndpoint(endpoint);
        rme.initialise(conduit, null);
        reliableEndpoints.put(endpoint, rme);
        for (SourceSequence ss : sss) {            
 
            Collection<RMMessage> ms = store.getMessages(ss.getIdentifier(), true);
            if (null == ms || 0 == ms.size()) {
                continue;
            }
            LOG.log(Level.FINE, ""Number of messages in sequence: {0}"", ms.size());
            
            rme.getSource().addSequence(ss, false);
            
            for (RMMessage m : ms) {                
                ...
            } 
        }
        
        for (DestinationSequence ds : dss) {
            rme.getDestination().addSequence(ds, false);        
        }
        retransmissionQueue.start();

    }
{code}

I would like to hear your comment on this because I am not sure if this is the right place for loading the stored destination sequences.
If you think this change is appropriate, I can create a ""svn diff"" file for the changes.

Thanks.
Regards, Aki
","10/Nov/10 07:24;ffang;Hi Aki,

I strongly suggest you write a persistence system test both for client and server side, which can expose the problem you mentioned and also verify your fix works.

Actually we already have ServerPersistenceTest and ClientPersistenceTest in systests/ws-specs, I think you can add yours in those two classes.

Btw, your suggestion seems ok for me.

Thanks
Freeman","16/Nov/10 08:13;ay;Fixes for CXF-3114
2.2.x-fixes

Two svn diff files are included:
rt-ws-rm.txt (svn diff rt/ws/rm)
systests-ws-spec.txt (svn diff systests/ws-spec)

Changes
1. rt/ws/rm
Changed RMTxStore so that it has the correct transaction grouping.
Changed RMManager so that it restores the destination sequences from
the persistence after the server is restarted. 

Previously, the source sequences were restored but the destination
sequences were not. This lead to problems at the server side when
the server is restarted while the client continues to send messages
using the same sequence. This problem was previously not captured by
ServerPersistenceTest as described below.

2. systest/ws/rm
Changed ServerPersistenceTest to check whether the RetransmissionQueue is
empty after the completion of the transmission. Once the message is
queued in the RetransmissionQueue and being retransmitted, the client
receives the Response with status done (Note*). Because of this,
previously ServerPersistenceTest did not capture this error. 

In order to make sure that the messages transmitted after the server's
restart reach the server and are correctly acknowledged, the
RetransmissionQueue's queue size is checked to see whether all
messages have been transmitted and acknowledged.

Note*
The current CXF's behavior is that, when some exception occurs during
the first transmission, the call simply returns without an exception
as the message is queued in the RetransmissionQueue and being
retransmitted. The Response objecet returned to the caller has its
exception attribute set but also the done attribute set. This is the
reason why the previous ServerPersisteceTest didn't catch this error.
We probably should set the done flag only after the transmission of
the message is acknowledged. In this case, we can also rely on this
attribute. But I think it is reasonable to verify the
RetransmissionQueue's state as well in the unit test.
","16/Nov/10 09:14;ffang;Hi Aki,

Thanks for this patch.

But your patch break one ws/rm unit test

testRecoverReliableClientEndpoint(org.apache.cxf.ws.rm.RMManagerTest)

Could you please correct it first?
This is basically caused by EasyMock test as now you change the RMManager code, so you need revise the mock details accordingly.

Didn't try your system test yet. One rule for the patch is that it shouldn't break anything, you need run ""mvn clean install"" from root to ensure everything is ok with your patch.

Best Regards

Freeman","24/Nov/10 06:55;ffang;Just fixed RMManagerTest failure along with this patch, will apply patch soon","24/Nov/10 08:50;ffang;apply patch on behalf of Aki Yoshida with thanks

http://svn.apache.org/viewvc?rev=1038509&view=rev for trunk
http://svn.apache.org/viewvc?rev=1038519&view=rev for 2.3 branch
http://svn.apache.org/viewvc?rev=1038524&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,
Further problem with cookies in Jax-RS (similar to closed issue 3035),CXF-3112,12479297,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,david.hagar,david.hagar,06/Nov/10 15:55,01/Mar/11 15:53,14/Mar/19 02:29,10/Feb/11 17:46,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,0,,,,,,"Prior to version 2.2.11, multiple cookies were not handled properly by the method org.apache.cxf.jaxrs.client.AbstractClient#setResponseBuilder(HttpURLConnection, Exchange) -- this was resolved for some cookies, but it still breaks for others. Specifically, any cookie that contains an ""Expires"" field now gets split into two objects by the aforementioned method. 


For example, if the header is:


Set-Cookie: com.wm.visitor=10789493347; Domain=.walmart.com; Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/

Then response.getMetadata().get(""Set-Cookie""); will return an array of length 2, with values = {"" com.wm.visitor=10789493347; Domain=.walmart.com; Expires=Thu"", ""01-Oct-2020 23:44:22 GMT; Path=/""

I'm pretty sure this is a conflict of the code looking for date related headers conflicting with the code looking for cookie related headers. 
",,,,,,,,,,,,,,,,,11/Nov/10 19:30;david.hagar;3112_patch.diff;https://issues.apache.org/jira/secure/attachment/12459372/3112_patch.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-11-06 16:33:29.189,,,no_permission,,,,,,,,,,,,,47094,,,Tue Feb 15 09:24:35 UTC 2011,,,,,,0|i0kl47:,118238,,,,,,,,"06/Nov/10 16:33;sergey_beryozkin;I have this test in systests/jaxrs/, :



@Test
    public void testSetCookieWebClient() throws Exception {
        WebClient client = WebClient.create(""http://localhost:"" + PORT + ""/bookstore/setcookies"");
        Response r = client.type(""*/*"").get();
        assertEquals(200, r.getStatus());
        List<Object> cookies = r.getMetadata().get(""Set-Cookie"");
        assertNotNull(cookies);
        assertEquals(1, cookies.size());
        // just added it locally
        System.out.println(cookies.get(0));
    }

which prints

""bar.com.anoncart=107894933471602436; Domain=.bar.com; Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/"".

The server code :

 @GET
    @Path(""setcookies"")
    public Response setComplexCookies() {
        return Response.ok().header(""Set-Cookie"", 
                                    ""bar.com.anoncart=107894933471602436; Domain=.bar.com;""
                                    + "" Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/"")
                                    .build();
    }


Can you give more info please ? 
","06/Nov/10 19:20;david.hagar;Ah...I was hasty posting this originally, the test is a bit more complicated than I thought:

Here is the header value that was actually causing the problem: 

Set-Cookie=[JSESSIONID=0475F7F30A26E5B0C15DF5B3489AE569; Path=/userservice, SPRING_SECURITY_REMEMBER_ME_COOKIE=MktUaGkrVXZjQ09RRzdleFl1QUpEZz09OlcxemFySE5jQTlMcVAyeENva28vRmc9PQ; Expires=Sat, 20-Nov-2010 19:11:32 GMT; Path=/userservice]

The problematic code seems to be: 
boolean splitPossible = !(HttpHeaders.SET_COOKIE.equalsIgnoreCase(entry.getKey())
                                          && entry.getValue().get(0).contains(HttpHeaders.EXPIRES));
for (String val : entry.getValue()) {
                    String[] values = splitPossible ? val.split("","") : new String[]{val};
                    for (String s : values) {
                        String theValue = s.trim();
                        if (theValue.length() > 0) {
                            currentResponseBuilder.header(entry.getKey(), theValue);
                        }
                    }
                }
So, from the debugger i pulled out the following values:

entry.getValue().get(0) = JSESSIONID=0475F7F30A26E5B0C15DF5B3489AE569; Path=/userservice

entry.getValue().get(1) = ""SPRING_SECURITY_REMEMBER_ME_COOKIE=MktUaGkrVXZjQ09RRzdleFl1QUpEZz09OlcxemFySE5jQTlMcVAyeENva28vRmc9PQ; Expires=Sat, 20-Nov-2010 19:11:32 GMT; Path=/userservice""

splitPossible = true;

Splitting the second cookie causes the response to have three cookie values,

1=SESSIONID=0475F7F30A26E5B0C15DF5B3489AE569; Path=/userservice.
2=SPRING_SECURITY_REMEMBER_ME_COOKIE=MktUaGkrVXZjQ09RRzdleFl1QUpEZz09OlcxemFySE5jQTlMcVAyeENva28vRmc9PQ; Expires=Sat
3=20-Nov-2010 19:11:32 GMT; Path=/userservice

This could probably be fixed by moving the boolean splitPossible... line into the for loop and having it set based on the value of each cookie, not by the value of the first cookie. 

I'm still working on getting the CXF source up and running in Eclipse, but would be happy to test further once I have it set up properly. 



","06/Nov/10 23:22;david.hagar;I've gotten the CXF source running, and created a simple unit test that sets the two cookies (JSESSIONID and SPRING_SECURITY_REMEMBER_ME_COOKIE) with the exact values that gave me trouble in my live environment. However, I quickly ran into different behavior (maybe because I checked out the latest source? maybe because of the unit test environment?), which I believe is still wrong.

In the AbstractClient#setResponseBuilder method when executed via the unit tests my two cookies are fetched as a single value, so 

entry.getValue().size() == 1 (and I did double check in my live environment that I hadn't been hallucinating the size being two)
and entry.getValue() == ""JSESSIONID=0475F7F30A26E5B0C15DF5B3489AE569; Path=/userservice,SPRING_SECURITY_REMEMBER_ME_COOKIE=MktUaGkrVXZjQ09RRzdleFl1QUpEZz09OlcxemFySE5jQTlMcVAyeENva28vRmc9PQ; Expires=Sat, 20-Nov-2010 19:11:32 GMT; Path=/userservice Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/""

Because they are collapsed into a single value, the cookies are not split at all, and the response returns a single cookie.

While this behavior is better than that described above of returning three cookies, it still seems sub-optimal. 

In JAXRSClientServerBookTest, I added: 
    @Test
    public void testSetTwoCookieWebClient() throws Exception {
        WebClient client = WebClient.create(""http://localhost:"" + PORT + ""/bookstore/settwocookies"");
        Response r = client.type(""*/*"").get();
        assertEquals(200, r.getStatus());
        List<Object> cookies = r.getMetadata().get(""Set-Cookie"");
        assertNotNull(cookies);
        assertEquals(2, cookies.size());
    }

In BookStore.java, I added:

    @GET
    @Path(""settwocookies"")
    public Response setTwoCookies() {
        return Response.ok().header(""Set-Cookie"",""JSESSIONID=0475F7F30A26E5B0C15DF5B3489AE569; Path=/userservice"")
        							.header(""Set-Cookie"", 
                                        ""SPRING_SECURITY_REMEMBER_ME_COOKIE=MktUaGkrVXZjQ09RRzdleFl1QUpEZz09Olcxem"" 
        								+ ""FySE5jQTlMcVAyeENva28vRmc9PQ; Expires=Sat, 20-Nov-2010 19:11:32 GMT; Path=/userservice""
                                        + "" Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/"")
                                    .build();
    }","07/Nov/10 14:03;sergey_beryozkin;Hi, yes, the problem with the CXF (test) server is that the server collapses two separate Set-Cookie values into a single line, which works ok unless Expires is present. So one thing we should fix here is to ensure, probably at the AbstractHttpDestination level, that the outbound Set-Cookie(s) are indeed presented as separate headers. At least I see why we get a single cookie (as opposed to expected 2 ones).   

Now, in the live environment, you're probably getting two separate Set-Cookie headers, with only the 2nd cookie, as opposed to the 1st one, containing 'Expires'. I agree, the splitPossible check should be done when dealing with individual header values, may be we can optimize a bit :

boolean splitPossible = !HttpHeaders.SET_COOKIE.equalsIgnoreCase(entry.getKey());
for (String val : entry.getValue()) {

boolean splitConfirmed = splitPossible && !val.contains(HttpHeaders.EXPIRES);

String[] values = splitConfirmed ? val.split("","") : new String[]{val};
for (String s : values) {
String theValue = s.trim();
if (theValue.length() > 0) { currentResponseBuilder.header(entry.getKey(), theValue); }
}
}

Can you give me a favor and confirm this would work against the live server ? And if it does then do a patch ?
Also, if possible, you may want to check AbstractHttpDestination.copyResponseHeaders() :

for (Iterator<?> iter = headers.keySet().iterator(); iter.hasNext();) {
                String header = (String)iter.next();
                List<?> headerList = (List<?>)headers.get(header);
                StringBuilder sb = new StringBuilder();
                for (int i = 0; i < headerList.size(); i++) {
                    sb.append(headerList.get(i));
                    if (i + 1 < headerList.size()) {
                        sb.append(',');
                    }
                }
                response.addHeader(header, sb.toString());
            }

may this code can be updated to :

for (Iterator<?> iter = headers.keySet().iterator(); iter.hasNext();) {
                String header = (String)iter.next();
                List<?> headerList = (List<?>)headers.get(header);
                StringBuilder sb = new StringBuilder();

                if (SET_COOKIE.equals(header)) {
                    for (int i = 0; i < headerList.size(); i++) {
                      response.addHeader(header, headerList.get(i));
                   }
                } else {
                   for (int i = 0; i < headerList.size(); i++) {
                      sb.append(headerList.get(i));
                      if (i + 1 < headerList.size()) {
                          sb.append(',');
                      }
                   }
                   response.addHeader(header, sb.toString()); 
                }
                
            }

This probably would not cause any issues as far as external clients of CXF servers dealing with cookies is concerned, in fact, it probably will make CXF servers better citizens as far as multiple cookies are concerned 


thanks, Sergey

 ","08/Nov/10 04:31;david.hagar;Yep, I'd be happy to test and provide patch. Should be able to get it done in the next couple days.","11/Nov/10 19:30;david.hagar;I've tested the above changes pretty much exactly as above in AbstractHttpDestination and AbstractClient, and everything so far seems to work fine in both test and live environments. There are unit tests which are failing, but they seem to be unrelated as far as I can tell.

Patch is attached.
","11/Nov/10 19:38;sergey_beryozkin;Hi David, thanks a million.

which tests do you see failing; in the jaxrs frontend after the changes have been made ?","11/Nov/10 21:06;david.hagar;No problem -- glad to help. 

Actually, everything in frontend passed. The failures I saw were related to logging in the systests package:


java (1)
org.apache.cxf.systest.jaxrs.JAXRSLoggingAtomPushTest
testOneElementBatch(org.apache.cxf.systest.jaxrs.JAXRSLoggingAtomPushTest)
java.lang.AssertionError: Different logged events count; expected:<6> but was:<465>

testMultiElementBatch(org.apache.cxf.systest.jaxrs.JAXRSLoggingAtomPushTest)
java.lang.AssertionError: Different logged events count; expected:<2> but was:<827>

testAtomPubEntries(org.apache.cxf.systest.jaxrs.JAXRSLoggingAtomPushTest)
java.lang.AssertionError: Different logged events count; expected:<6> but was:<411>
","18/Nov/10 13:03;sergey_beryozkin;Hi David - I've applied your patch to the trunk and 2.3.1 branch - thanks.  
Do you need it applied to the 2.2.12 branch as well ?

cheers, Sergey","18/Nov/10 13:07;sergey_beryozkin;By the way - atom push tests are passing for me - if you could check whenever you get a chance what might be going wrong then let me know please. May be systests/jaxrs/.../resources/logging_atompush.properties are not filtering out some of the log events in your dev environment 
","19/Nov/10 17:06;sergey_beryozkin;I've merged the patch to 2.2.12 as well, thanks",20/Nov/10 08:52;david.hagar;Thanks Sergey -- much appreciated. I'll investigate the atom log event filtering and let you know what I find. ,"10/Feb/11 12:00;stefanmoeller;Sorry for posting on this issue again. We tested with CXF Version 2.3.2 and received splitted cookie informations again, maybe the patch got lost? As a workaround we (locally) modified 

AbstractClient.setResponseBuilder 

boolean splitPossible = !(HttpHeaders.SET_COOKIE
.equalsIgnoreCase(entry.getKey()) && entry.getValue()
.get(0).toUpperCase().contains(HttpHeaders.EXPIRES.toUpperCase()));

Our problem was that the cookie has 'expires' and it was checked against 'Expires' ...
","10/Feb/11 12:56;sergey_beryozkin;there's no entry.getKey().toUpperCase() in the code on the trunk :-), will update it today. Thanks","15/Feb/11 09:11;jeanbogner;We found another issue regarding the correct splitting of cookies.  8-)
The ""splitPossible"" check of the ""AbstractClient""-Class must be placed inside the for loop !!
Please have a look at the following 3 lines of code with the corrected:

...
for (String val : entry.getValue()) {
  boolean splitPossible = !(HttpHeaders.SET_COOKIE.equalsIgnoreCase(entry.getKey()) 
  && val.toUpperCase().contains(HttpHeaders.EXPIRES.toUpperCase()));
...

thanks and greetings
jean
","15/Feb/11 09:24;sergey_beryozkin;Hi Jean

In CXF 2.3.2 it is definitely inside the for loop, 

http://svn.apache.org/repos/asf/cxf/tags/cxf-2.3.2/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/client/AbstractClient.java

But the upperCase check is on 2.3.3-SNAPSHOT :-)

thanks, Sergey

",,,,,,,,,,,
jaxrs: ParameterizedTypeImpl cannot be cast to java.lang.Class,CXF-3110,12479080,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,chomats,chomats,04/Nov/10 11:15,06/Dec/10 22:49,14/Mar/19 02:29,22/Nov/10 13:20,2.2.10,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,0,,,,,,"My xmlAdapter extends XmlAdapter<ArrayList<String>, Set<String>> and it's not supported
But XmlAdapter<ArrayList, Set<String>> is supported.


java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class
        at org.apache.cxf.jaxrs.provider.AbstractJAXBProvider.getActualType(AbstractJAXBProvider.java:453)
        at org.apache.cxf.jaxrs.provider.JSONProvider.writeTo(JSONProvider.java:266)
        at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.serializeMessage(JAXRSOutInterceptor.java:248)
        at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.processResponse(JAXRSOutInterceptor.java:139)
        at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.handleMessage(JAXRSOutInterceptor.java:78)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:78)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:111)
        at org.apache.cxf.transport.http_osgi.OsgiDestination.doMessage(OsgiDestination.java:80)
        at org.apache.cxf.transport.http_osgi.OsgiServletController.invokeDestination(OsgiServletController.java:321)
        at org.apache.cxf.transport.http_osgi.OsgiServletController.invoke(OsgiServletController.java:107)
        at org.apache.cxf.transport.http_osgi.OsgiServlet.invoke(OsgiServlet.java:53)
        at org.apache.cxf.transport.http_osgi.SpringOsgiServlet.invoke(SpringOsgiServlet.java:48)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:390)
        at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.handle(HttpServiceServletHandler.java:64)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
        at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.handle(HttpServiceContext.java:111)
        at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:64)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:326)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:923)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:547)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)","window on cygwin
osgi karaf 2.1.0",7200,7200,,0%,7200,7200,,,,,,,,,,18/Nov/10 13:55;chomats;testxmladapter.zip;https://issues.apache.org/jira/secure/attachment/12459914/testxmladapter.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-11-04 15:40:46.575,,,no_permission,,Moderate,,,,,,,,,,,47096,,,Mon Nov 22 13:20:08 UTC 2010,,,,,,0|i0kl4f:,118239,,,,,,,,"04/Nov/10 12:44;chomats;Another similaire exception was raised when I tried to use an adapter which extends XmlAdapter<String[], Set<String>>.

java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl cannot be cast to java.lang.Class
  at org.apache.cxf.jaxrs.provider.AbstractJAXBProvider.getActualType(AbstractJAXBProvider.java:453)
  at org.apache.cxf.jaxrs.provider.JSONProvider.writeTo(JSONProvider.java:266)
  at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.serializeMessage(JAXRSOutInterceptor.java:248)
  at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.processResponse(JAXRSOutInterceptor.java:139)
  at org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor.handleMessage(JAXRSOutInterceptor.java:78)
  at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
  at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:78)
  at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
  at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:111)
  at org.apache.cxf.transport.http_osgi.OsgiDestination.doMessage(OsgiDestination.java:80)
  at org.apache.cxf.transport.http_osgi.OsgiServletController.invokeDestination(OsgiServletController.java:321)
  at org.apache.cxf.transport.http_osgi.OsgiServletController.invoke(OsgiServletController.java:107)
  at org.apache.cxf.transport.http_osgi.OsgiServlet.invoke(OsgiServlet.java:53)
  at org.apache.cxf.transport.http_osgi.SpringOsgiServlet.invoke(SpringOsgiServlet.java:48)
  at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
  at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
  at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
  at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
  at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
  at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:390)
  at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.handle(HttpServiceServletHandler.java:64)
  at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
  at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
  at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.handle(HttpServiceContext.java:111)
  at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:64)
  at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
  at org.mortbay.jetty.Server.handle(Server.java:326)
  at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
  at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:923)
  at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:547)
  at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
  at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
  at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
  at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)",04/Nov/10 15:40;sergey_beryozkin;Can you try CXF 2.2.11 ? ClassCastException should be gone in 2.2.11,"04/Nov/10 16:39;chomats;the exception is same.
the class AbstractJAXBProvider at line 453 is same than version 2.2.10.","04/Nov/10 16:49;sergey_beryozkin;ok, I'll have a look. Possibly XMLAdapter path is a bit broken...

Can you post here a sample XmlAdapter<ArrayList<String>, Set<String>> implementation please ?

as well as a sample resource class ?

","18/Nov/10 12:32;sergey_beryozkin;Hi - can you please post a sample code as asked in the previous comment ? It would help to test if the issue has been fixed. Alternatively build a trunk source and verify yourself.

cheers, Sergey","18/Nov/10 13:55;chomats;it's an example.
I tried it with this configuration:

karaf@client1> list -u
START LEVEL 100 , List Threshold: 50
   ID   State         Blueprint      Spring    Level  Update location
[  31] [Active     ] [Created     ] [       ] [   60] mvn:org.apache.karaf.shell/org.apache.karaf.shell.config/2.1.0
[  75] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aopalliance/1.0_4
[  76] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-core/3.0.5.RELEASE
[  77] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-asm/3.0.5.RELEASE
[  78] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-expression/3.0.5.RELEASE
[  79] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-beans/3.0.5.RELEASE
[  80] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-aop/3.0.5.RELEASE
[  81] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-context/3.0.5.RELEASE
[  82] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-context-support/3.0.5.RELEASE
[  83] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.cglib/2.1_3_6
[  84] [Active     ] [            ] [       ] [   60] mvn:org.springframework.osgi/spring-osgi-io/1.2.1
[  85] [Active     ] [            ] [       ] [   60] mvn:org.springframework.osgi/spring-osgi-core/1.2.1
[  86] [Active     ] [            ] [       ] [   60] mvn:org.springframework.osgi/spring-osgi-extender/1.2.1
[  87] [Active     ] [            ] [       ] [   60] mvn:org.springframework.osgi/spring-osgi-annotation/1.2.1
[  88] [Active     ] [Created     ] [       ] [   60] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.spring/2.1.1
[  89] [Active     ] [            ] [       ] [   60] mvn:org.apache.aries.transaction/org.apache.aries.transaction.manager/0.2-incubating
[  90] [Active     ] [            ] [       ] [   60] mvn:org.apache.geronimo.specs/geronimo-servlet_2.5_spec/1.1.2
[  91] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/1.5.0
[  92] [Active     ] [            ] [       ] [   60] mvn:org.apache.geronimo.specs/geronimo-annotation_1.0_spec/1.1.1
[  93] [Active     ] [            ] [       ] [   60] mvn:org.apache.geronimo.specs/geronimo-j2ee-connector_1.5_spec/2.0.0
[  94] [Active     ] [            ] [       ] [   60] mvn:org.apache.geronimo.specs/geronimo-ws-metadata_2.0_spec/1.1.2
[  95] [Active     ] [            ] [       ] [   60] mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/1.1.1
[  96] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.saaj-api-1.3/1.5.0
[  97] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.1/1.5.0
[  98] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxws-api-2.1/1.5.0
[  99] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/1.5.0
[ 100] [Active     ] [            ] [       ] [   60] mvn:javax.mail/mail/1.4.3
[ 101] [Active     ] [            ] [       ] [   60] mvn:org.springframework/spring-jms/3.0.5.RELEASE
[ 102] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.asm/2.2.3_3
[ 103] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.fastinfoset/1.2.7_2
[ 104] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.1.12_1
[ 105] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jetty-bundle/6.1.22_1-fuse
[ 106] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.neethi/2.0.4_2
[ 107] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.saaj-impl/1.3.2_1
[ 108] [Active     ] [            ] [       ] [   60] mvn:org.codehaus.woodstox/stax2-api/3.0.2
[ 109] [Active     ] [            ] [       ] [   60] mvn:org.codehaus.woodstox/woodstox-core-asl/4.0.8
[ 110] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.wsdl4j/1.6.2_2
[ 111] [Active     ] [            ] [       ] [   60] mvn:org.apache.ws.commons.schema/XmlSchema/1.4.5
[ 112] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlresolver/1.2_2
[ 113] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlsec/1.4.3_2
[ 114] [Active     ] [            ] [       ] [   60] mvn:org.apache.ws.security/wss4j/1.5.8
[ 115] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xerces/2.9.1_3
[ 116] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.bcel/5.2_2
[ 117] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xalan/2.7.1_2
[ 118] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jsr311-api-1.0/1.5.0
[ 119] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.opensaml/1.1_3
[ 120] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlbeans/2.4.0_3
[ 121] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.commons-lang/2.4_3
[ 122] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.commons-collections/3.2.1_1-fuse
[ 123] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.oro/2.0.8_3
[ 124] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.velocity/1.6.2_3
[ 125] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.abdera/0.4.0-incubating_3
[ 126] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.commons-codec/1.3_2
[ 127] [Active     ] [            ] [       ] [   60] mvn:org.codehaus.jettison/jettison/1.2
[ 128] [Active     ] [            ] [       ] [   60] mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jdom/1.1_2
[ 129] [Active     ] [            ] [       ] [   60] mvn:org.apache.ws.commons.axiom/axiom-impl/1.2.8
[ 130] [Active     ] [            ] [       ] [   60] mvn:org.apache.ws.commons.axiom/axiom-api/1.2.8
[ 131] [Active     ] [            ] [Started] [   60] mvn:org.apache.cxf/cxf-bundle/2.2.11
[ 133] [Active     ] [            ] [       ] [   60] mvn:org.apache.geronimo.specs/geronimo-servlet_2.5_spec/1.2
[ 134] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-util/7.2.0.v20101020
[ 135] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-io/7.2.0.v20101020
[ 136] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-http/7.2.0.v20101020
[ 137] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-xml/7.2.0.v20101020
[ 138] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-continuation/7.2.0.v20101020
[ 139] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-server/7.2.0.v20101020
[ 140] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-security/7.2.0.v20101020
[ 141] [Active     ] [            ] [       ] [   60] mvn:org.eclipse.jetty/jetty-servlet/7.2.0.v20101020
[ 142] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.web/pax-web-api/0.8.1
[ 143] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.web/pax-web-spi/0.8.1
[ 144] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.web/pax-web-runtime/0.8.1
[ 145] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.web/pax-web-jetty/0.8.1
[ 146] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.web/pax-web-jsp/0.8.1
[ 147] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.web/pax-web-extender-war/0.8.1
[ 148] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.web/pax-web-extender-whiteboard/0.8.1
[ 149] [Active     ] [            ] [       ] [   60] mvn:org.ops4j.pax.url/pax-url-war/1.2.0
[ 150] [Active     ] [Created     ] [       ] [   60] mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.war/2.1.1
[ 151] [Active     ] [            ] [Started] [   60] mvn:com.schneider/TestXmlAdapter/0.0.1-SNAPSHOT

When you try to access to the service you are an exception and a sever error. 

$ wget http://127.0.0.1:8181/cxf/testxml/ids2
--2010-11-18 14:49:28--  http://127.0.0.1:8181/cxf/testxml/ids2
Connecting to 127.0.0.1:8181... connected.
HTTP request sent, awaiting response... 500 Server Error
2010-11-18 14:49:54 ERROR 500: Server Error.

","22/Nov/10 13:20;sergey_beryozkin;I've fixed a couple of issues. 
that said, you probably do not need adapters for explicit collections when the default JAXBElementProvider or JSONProvider are used and they probably won't work for Collections of primitive types such as String.

 ",,,,,,,,,,,,,,,,,,,,
keep net.sf.cglib optional import version range same as it used in spring-beans 3.0.x,CXF-3107,12478852,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,02/Nov/10 02:49,06/Dec/10 22:49,14/Mar/19 02:29,02/Nov/10 03:11,2.3,,,,,,,,,,,,,,,,,2.3.1,2.4,,,,,,,0,,,,,,"so that cxf-bundle and  spring-beans bundle could be resolved to pick up same cglib bundle, and so cxf bundle optional import org.springframework.beans could be satisfied, so cxf-bundle and spring-beans can work together",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47099,,,Tue Nov 02 03:11:58 UTC 2010,,,,,,0|i0klef:,118284,,,,,,,,"02/Nov/10 03:11;ffang;commit fix
http://svn.apache.org/viewvc?rev=1029943&view=rev to trunk
http://svn.apache.org/viewvc?rev=1029944&view=rev to 2.3 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
JAXWS2.2: responses in @Addressing and @AddressingFeature does not work,CXF-3106,12478849,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,02/Nov/10 02:14,06/Dec/10 22:49,14/Mar/19 02:29,04/Nov/10 05:20,,,,,,,,,,,,,,,,,,2.3.1,2.4,,,WS-* Components,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47100,,,2010-11-02 02:14:58.0,,,,,,0|i0klen:,118285,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jaxws customization parameter renaming not working,CXF-3105,12478794,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,heck,heck,01/Nov/10 09:20,06/Dec/10 22:49,14/Mar/19 02:29,23/Nov/10 23:27,2.2.11,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,,,,,0,,,,,,"Hi,

I am working on this for a couple of days now with actually finding a solution. I am building a ws client from wsdl with CXF wsdl2Java version 2.2.11.

The problem is an element naming issue in the wsdl. As far as I do understand I have three choices:
1. disable wrapper style
2. use autoNameResolution feature
3. write my own customization and rename the parameters

I verified options 1 and 2. Both solves the problem. But I'd like to have more control over the generated interface so I'd like to explicitly set the parameter names.

This is how it looks like:
Wsdl describes a webservice with a method called login().
This is how request and response definitions look like.

<xsd:element name=""login"">
            <xsd:complexType>
            <xsd:sequence>
            <xsd:element name=""login"" type=""fc:flowloginrequest""/>
            <xsd:element name=""switchusergroup"" type=""xsd:int"" maxOccurs=""1"" minOccurs=""0""/>
            </xsd:sequence>
            </xsd:complexType>
            </xsd:element>

            <xsd:element name=""loginResponse"">
            <xsd:complexType>
            <xsd:sequence>
            <xsd:element name=""login"" type=""fc:flowloginresponse""/>
            <xsd:element name=""password_temp"" type=""xsd:string""/>
            <xsd:element name=""usergrouplist"" type=""fc:flowidnamepairs""/>
            <xsd:element name=""permissions"" type=""xsd:string""/>
            <xsd:element name=""usertype"" type=""xsd:string""/>
            <xsd:element name=""usertypeid"" type=""xsd:string""/>
            </xsd:sequence>
            </xsd:complexType>
            </xsd:element>

Request and response both hold a local element called login. This is causing the trouble I have and if I try to generate code with wrapper style enabled this is what I get:
WSDLToJava Error: Element login has the same name with different types

If I rename the two local elements to loginRequest (fc:flowloginrequest) and loginResponse (fc:flowloginresponse) everything runs just fine. Since I can't actually adjust the schema (it's not mine) I have to write my own customization file.

To solve the problem I wanted to rename the method parameter for both elements. This is what found by examining JAX-WS spec.

<?xml version=""1.0"" encoding=""UTF-8""?>
<jaxws:bindings wsdlLocation=""flowcenter.wsdl""
          xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws""
          xmlns:xs=""http://www.w3.org/2001/XMLSchema""
          xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
          xmlns:jaxb=""http://java.sun.com/xml/ns/jaxb""
          xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
          xmlns:fc=""http://www.flowworks.de/flowworks/""
          xsi:schemaLocation=""http://java.sun.com/xml/ns/jaxb http://java.sun.com/xml/ns/jaxb/bindingschema_2_0.xsd
          http://java.sun.com/xml/ns/jaxws http://java.sun.com/xml/ns/jaxws/wsdl_customizationschema_2_0.xsd"">
 
  <!-- rename method parameters-->  
  <jaxws:bindings node=""wsdl:definitions/wsdl:portType[@name='flowcenter']/wsdl:operation[@name='login']"">
  <jaxws:parameter part=""wsdl:definitions/wsdl:message[@name='loginRequest']/wsdl:part[@name='parameters']"" childElementName=""login"" name=""loginRequest""/>
  <jaxws:parameter part=""wsdl:definitions/wsdl:message[@name='loginResponse']/wsdl:part[@name='parameters']"" childElementName=""login"" name=""loginResponse""/>
  </jaxws:bindings>
</jaxws:bindings>

I thought this would do the trick but it doesn't. Even more confusing is that if I run the tool with -autoNameResolution and check the code the service interface does show part of my declared names above. It looks like this.

login( Flowloginrequest loginResponse,
        Integer switchusergroup,
        Holder<Flowloginresponse> login,
        Holder<java.lang.String> passwordTemp,
        Holder<Flowidnamepairs> usergrouplist,
        Holder<java.lang.String> permissions,
        Holder<java.lang.String> usertype,
        Holder<java.lang.String> usertypeid
    )

Note the login parameter from request is renamed to loginResponse and response parameter name is ignored. To make this a little more interesting I changed the binding declaration to this:

<!-- rename method parameters-->  
  <jaxws:bindings node=""wsdl:definitions/wsdl:portType[@name='flowcenter']/wsdl:operation[@name='login']"">
  <jaxws:parameter part=""wsdl:definitions/wsdl:message[@name='loginRequest']/wsdl:part[@name='parameters']"" childElementName=""login"" name=""loginRequest""/>
  </jaxws:bindings>
<jaxws:bindings node=""wsdl:definitions/wsdl:portType[@name='flowcenter']/wsdl:operation[@name='login']"">
  <jaxws:parameter part=""wsdl:definitions/wsdl:message[@name='loginResponse']/wsdl:part[@name='parameters']"" childElementName=""login"" name=""loginResponse""/>
  </jaxws:bindings>

This is what the method signature looks like:

login( Flowloginrequest loginRequest,
        Integer switchusergroup,
        Holder<Flowloginresponse> login,
        Holder<java.lang.String> passwordTemp,
        Holder<Flowidnamepairs> usergrouplist,
        Holder<java.lang.String> permissions,
        Holder<java.lang.String> usertype,
        Holder<java.lang.String> usertypeid
    )

So I think I am not completely wrong trying to solve this issue by applying a customization file but something is not working right.
I'll try to provide a test case and patch here too.

Timo",,,,,,,,,,,,,,,,,05/Nov/10 10:11;heck;ParameterProcessor.java.patch;https://issues.apache.org/jira/secure/attachment/12458897/ParameterProcessor.java.patch,03/Nov/10 13:28;heck;flowcenter.wsdl;https://issues.apache.org/jira/secure/attachment/12458736/flowcenter.wsdl,03/Nov/10 13:28;heck;ws-binding.xml;https://issues.apache.org/jira/secure/attachment/12458737/ws-binding.xml,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47101,,,Fri Nov 05 10:11:49 UTC 2010,,,,,,0|i0kl4v:,118241,,,,,,,,03/Nov/10 13:28;heck;I attached the corresponding wsdl and binding files to reproduce this issue.,"05/Nov/10 10:11;heck;Hi, I found a solution to some part of the problem. You'll find a patch to ParameterProcessor attached. It's the first time I did this so I hope you can use the file. If you need anything else let me know.

But this seems to solve only half of the problem described above.
If I understand this correctly the wsdl definition should be customized as well so that ServiceInfo passes validation. I haven't located the problem exactly yet but I think there are two things to be fixed. One near org.apache.cxf.tools.wsdlto.frontend.jaxws.customization.CustomizationParser and the other one near org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11.JAXWSDefinitionBuilder.

Timo",,,,,,,,,,,,,,,,,,,,,,,,,
@Mtom and  @MTOMFeature threshold configuration does not work,CXF-3104,12478787,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,01/Nov/10 03:17,06/Dec/10 22:49,14/Mar/19 02:29,01/Nov/10 03:25,,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,JAX-WS Runtime,,,,0,,,,,,The threshold value in  @Mtom and @MTOMFeature  does not pass to DataBinding  in JaxWsServiceFactoryBean.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47102,,,2010-11-01 03:17:17.0,,,,,,0|i0kl53:,118242,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"HTTPConduit doesn't handle cookies when retransmitting in case of ""401 Unauthorized"" response",CXF-3100,12478642,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,kli,kli,29/Oct/10 07:40,06/Dec/10 22:49,14/Mar/19 02:29,30/Nov/10 16:58,,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,Transports,,,,0,,,,,,"Hello,

we are consuming a web service that requires http basic authentication and tries to establish a cookie-based session with the client. So the response to the first request is always a ""401 Unauthorized"" response including a ""Set-Cookie"" header, even if the first request already contains the basic authentication header with the correct credentials. The request is only accepted if both the basic authentication header and the cookie header with the cookie from the ""401 Unauthorized"" response are set. 

Calling the web service using SoapUI works fine. You can see in the log the initial request, the 401 reponse including the ""Set-Cookie"" header and the retransmitted request with the corresponding cookie header set, resulting in a successful response. Everything as expected.

When using CXF, there is an infinite loop (request -> 401 -> retransmit -> 401 and so on) until a protocol exception is thrown (too many retransmits/redirects). The reason is that the expected cookie header is not set when retransmitting the request, even if the parameter ""BindingProvider.SESSION_MAINTAIN_PROPERTY"" is set to true.

Investigating the source code of the org.apache.cxf.transport.http.HTTPConduit class I found out that when retransmitting in case of 301,302 or 401 reponses the part of the code evaluating the ""Set-Cookie"" headers of the response is never reached, which is not correct in my opinion.

I did some changes to the org.apache.cxf.transport.http.HTTPConduit class (see attachment) so that it works now with the specified scenario. Is it possible to fix this overall issue in a future release? 

Notes:
- we are using Apache CXF 2.2.9
- soap over http (with ssl) and http basic authentication
- the modified org.apache.cxf.transport.http.HTTPConduit class is also based on the 2.2.9 sources
- all changes of the org.apache.cxf.transport.http.HTTPConduit class are labeled ""// KLI:""

Thanks,
Kevin",,,,,,,,,,,,,,,,,03/Nov/10 09:10;kli;HTTPConduit.diff;https://issues.apache.org/jira/secure/attachment/12458725/HTTPConduit.diff,16/Nov/10 10:31;kli;HTTPConduit.diff.v2;https://issues.apache.org/jira/secure/attachment/12459695/HTTPConduit.diff.v2,29/Oct/10 07:41;kli;HTTPConduit.java;https://issues.apache.org/jira/secure/attachment/12458312/HTTPConduit.java,16/Nov/10 10:31;kli;HTTPConduit.java.v2;https://issues.apache.org/jira/secure/attachment/12459696/HTTPConduit.java.v2,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-11-03 05:06:37.748,,,no_permission,,,,,,,,,,,,,47104,,,Tue Nov 16 10:30:30 UTC 2010,,,,,,0|i0kl5b:,118243,,,,,,,,"03/Nov/10 05:06;njiang;Hi Kevin,

Thanks for you contribution.
Can you submit a diff file instead the whole HttpConduit.java , so I can apply the patch more easily.

Willem","03/Nov/10 09:10;kli;Hi Willem,

I added a diff file as requested. If you need another format or if you have trouble with the file (I created this on windows xp) please let me know.

Please note that this patch is based on the cxf 2.2.9 sources!

Thanks,
Kevin","16/Nov/10 10:30;kli;Hi Willem,

I found out that my first solution didn't resolve the problem completely, so I reworked my changes and attached another version of the patched HTTPConduit file and a corresponding diff file (both with extension .v2). 

Kevin",,,,,,,,,,,,,,,,,,,,,,,,
Some samples still using Jetty 6,CXF-3099,12478584,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,28/Oct/10 14:48,06/Dec/10 22:49,14/Mar/19 02:29,30/Nov/10 02:49,2.3,,,,,,,,,,,,,,,,,2.3.1,,,,,,,,0,,,,,,"
   - groovy_spring_support does not compile because it relies on Jetty 6
   - rubby_spring_support, ditto
   - The following have a spring config relying on Jetty 6
      - js_browser_client_java_first
      - js_browser_client_simple
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47105,,,2010-10-28 14:48:40.0,,,,,,0|i0klev:,118286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ws-rm ImmediateAcknowledgement doesn't work for ws-rm client side,CXF-3097,12478451,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,27/Oct/10 13:28,06/Dec/10 22:49,14/Mar/19 02:29,29/Oct/10 09:08,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,WS-* Components,,,,0,,,,,,"For ws-rm configuration, if acknowledgementInterval is 0(the default value), both client and server side will use ImmediateAcknowledgement, which means try best to not create out-of-bound SequenceAcknowledgement, this can gain higher performance.
For server side, the behavior is put SequenceAcknowledgement header to the response message,  for client side, the behavior is put SequenceAcknowledgement header to next invocation request message in the rm sequence.

This can cause problem for client side when receive last response message which has SequenceAcknowledgement header, client will never ack the last response because there's no next invocation request which can piggyback the  SequenceAcknowledgement header, and so server side will always resend the message.
As in real scenario we generally don't know how many invocation we want to trigger on a certain endpoint, so we actually don't know which message is last response during runtime.

We can see this problem if we edit SequenceTest.testTwowayNonAnonymous(), add
Thread.sleep(10000);
before
verifyTwowayNonAnonymous();
to let the server side resend happen.
And observe the log we can get a clear idea about this issue.
We should be able to provide a configurable timeout for AcksPolicy, so that the we get chance to send a out-of-bound SequenceAcknowledgement for the last response in this case.


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47107,,,Fri Oct 29 09:08:00 UTC 2010,,,,,,0|i0kl5j:,118244,,,,,,,,"29/Oct/10 09:08;ffang;commit fix

http://svn.apache.org/viewvc?rev=1028170&view=rev for trunk
http://svn.apache.org/viewvc?rev=1028647&view=rev for 2.3 branch
http://svn.apache.org/viewvc?rev=1028651&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Closing JMS endpoint always destroys SingleConnectionFactory,CXF-3096,12478419,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,hlang,hlang,27/Oct/10 05:32,06/Dec/10 22:49,14/Mar/19 02:29,22/Nov/10 18:43,,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,Transports,,,,0,,,,,,"On calling close() on a JMSConduit or  calling shutdown() on a JMSDestination the used SingleConnectionFactory gets always destroyed.
This must not be done in any cases because the same SingleConnectionFactory might be used by other JMS endpoints (e.g. if configured in using the JMSConfig-Feature).

This should be fixed in a way that the JMSConfig should record if it automatically has created the SingleConnectionFactory(e.g. JNDI use-case), only in this case it should be destroyed.

Also see: CXF-2788",,,,,,,,,,,,,,,,,27/Oct/10 19:44;hlang;JMSConfiguration.patch;https://issues.apache.org/jira/secure/attachment/12458182/JMSConfiguration.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47108,,,Wed Oct 27 19:44:40 UTC 2010,,,,,,0|i0kl5r:,118245,,,,,,,,"27/Oct/10 19:44;hlang;Added a patch that tracks if the SingleConnectionFactory was automatically created inside of the JMSConfiguration. 
Only in these cases the factory can be destroyed in the destroyWrappedConnectionFactory() call.",,,,,,,,,,,,,,,,,,,,,,,,,,
"WSDLDocumentation annotation, Placement.BINDING not working",CXF-3093,12478241,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gmazza,gmazza,25/Oct/10 15:12,21/Jan/11 18:14,14/Mar/19 02:29,12/Jan/11 15:27,2.3,,,,,,,,,,,,,,,,,2.3.2,,,,Core,,,,0,,,,,,"For the WSDLDocumentation annotation, documentation added at the binding level is not working--the first two WSDL comments below will appear but the ""My binding doc"" meant for the wsdl:binding will not.

package service;

import javax.jws.WebService;
import org.apache.cxf.annotations.WSDLDocumentation;
import org.apache.cxf.annotations.WSDLDocumentationCollection;


@WebService
@WSDLDocumentationCollection(
      {
              @WSDLDocumentation(""My portType documentation""),
              @WSDLDocumentation(value = ""My top level documentation"",
                                 placement = WSDLDocumentation.Placement.TOP),
              @WSDLDocumentation(value = ""My binding doc"",
                                 placement = WSDLDocumentation.Placement.BINDING)
          }
      )                        
public interface DoubleItPortType {
   public int doubleIt(int numberToDouble);
}

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-10 21:13:41.183,,,no_permission,,Moderate,,,,,,,,,,,47111,,,Tue Jan 11 22:18:59 UTC 2011,,,,,,0|i0sxu7:,166959,,,,,,,,"10/Jan/11 21:13;dkulp;
I added a testcase for this in:

rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java

and it passes fine.  Can you create a more concrete example?    Better yet, update the test until it doesn't pass.  ","11/Jan/11 15:55;gmazza;Could you clarify what you mean by ""update the test until it doesn't pass"" -- do you mean make an additional test case that will knowingly fail?  I can't ""update the test until it doesn't pass"" if your code fixes the problem because it (by definition) will always pass.
",11/Jan/11 22:18;gmazza;The example ZIPped project I just added here: https://issues.apache.org/jira/browse/CXF-3092 covers this issue as well.,,,,,,,,,,,,,,,,,,,,,,,,
WSDLDocumentation annotation not working on SEI implementation,CXF-3092,12478240,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gmazza,gmazza,25/Oct/10 15:12,21/Jan/11 18:14,14/Mar/19 02:29,12/Jan/11 15:27,2.3,,,,,,,,,,,,,,,,,2.3.2,,,,Core,,,,0,,,,,,"The WSDLDocumentation annotation works when placed on the service endpoint interface but not the SEI implementation class.  

Below works:
package service;

import javax.jws.WebService;
import org.apache.cxf.annotations.WSDLDocumentation;
import org.apache.cxf.annotations.WSDLDocumentationCollection;


@WebService
@WSDLDocumentationCollection(
      {
              @WSDLDocumentation(""My portType documentation""),
              @WSDLDocumentation(value = ""My top level documentation"",
                                 placement = WSDLDocumentation.Placement.TOP),
              @WSDLDocumentation(value = ""My binding doc"",
                                 placement = WSDLDocumentation.Placement.BINDING)
          }
      )                        
public interface DoubleItPortType {
   public int doubleIt(int numberToDouble);
}


This does not:

package service;

import javax.jws.WebService;
import org.apache.cxf.annotations.WSDLDocumentation;
import org.apache.cxf.annotations.WSDLDocumentationCollection;


@WebService(targetNamespace = ""http://www.example.org/contract/DoubleIt"",
            endpointInterface = ""service.DoubleItPortType"",
            serviceName = ""DoubleItService"",
            portName = ""DoubleItPort"")
@WSDLDocumentationCollection(
      {
              @WSDLDocumentation(""My portType documentation""),
              @WSDLDocumentation(value = ""My top level documentation"",
                                 placement = WSDLDocumentation.Placement.TOP),
              @WSDLDocumentation(value = ""My binding doc"",
                                 placement = WSDLDocumentation.Placement.BINDING)
          }
      )                                   
public class DoubleItPortTypeImpl implements DoubleItPortType {

    public int doubleIt(int numberToDouble) {
        return numberToDouble * 2;
    }

}

",,,,,,,,,,,,,,,,,11/Jan/11 22:17;gmazza;DoubleItJavaFirst.zip;https://issues.apache.org/jira/secure/attachment/12468063/DoubleItJavaFirst.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-10 21:13:22.949,,,no_permission,,Moderate,,,,,,,,,,,47112,,,Tue Jan 11 22:17:20 UTC 2011,,,,,,0|i0sxuf:,166960,,,,,,,,"10/Jan/11 21:13;dkulp;
I added a testcase for this in:

rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/CodeFirstWSDLTest.java

and it passes fine.  Can you create a more concrete example?    Better yet, update the test until it doesn't pass.  ","11/Jan/11 22:17;gmazza;Apologies for not attaching a quick OOTB example.  OK, very simple example (hopefully good enough compared to trying to get test case to fail):

1.) Extract the ZIP into a directory.
2.) In the DoubleItJavaFirst/service-war/src/main/java/service folder, observe that DoubleItPortType.java has no documentation annotation and DoubleItPortTypeImpl.java *does* have a documentation annotation.
3.) From the DoubleItJavaFirst folder, type ""mvn clean install""
4.) Look in target/generated/wsdl, and confirm *no* WSDL Documentation comments.  (Therefore 3092 broken).
5.) Move (not copy) the @WSDLDocumentationCollection from DoubleItPortTypeImpl.java to DoubleItPortType.java.
6.) Run mvn clean install again.
4.) Look in target/generated/wsdl again, and confirm DoubleItPortType.wsdl has one document element and DoubleItPortTypeImpl.wsdl has another, but there is *no* WSDL Documentation comment on the binding element.  (Therefore 3093 broken).

",,,,,,,,,,,,,,,,,,,,,,,,,
WSDLQueryHandler does not support URL encoded WSDL requests from clients,CXF-3091,12478238,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,davaleri,davaleri,davaleri,25/Oct/10 14:44,06/Dec/10 22:49,14/Mar/19 02:29,26/Oct/10 12:58,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,Core,Transports,,,0,,,,,,"The handler only replaces %20 with spaces.  Any other URL encoded values in the ""wsdl"" or ""xsd"" query parameters result in a 500 error.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47113,,,2010-10-25 14:44:30.0,,,,,,0|i0kl5z:,118246,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS Trailing slashes required for first access,CXF-3090,12478200,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,pat.leamon,pat.leamon,25/Oct/10 01:01,06/Dec/10 22:49,14/Mar/19 02:29,02/Nov/10 19:50,2.2.10,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,0,,,,,,"I have a CXFServlet configured with a url pattern of /service/*
In my beans definition I have a  <jaxrs:server address=""/description"">...
The service bean mapped to this has no @Path annotation, just a method with an @GET.

This leads to some odd behaviour.  If the first attempt to access the servlet goes to the url ""/service/description"", a 404 is returned.  If a trailing slash is added so the url becomes ""/service/description/"", the service works fine.  Once any access to the servlet has matched a url correctly, then ""/service/description"" (no trailing slash) works fine.

It would be great if this could be accessed consistently.  Either require a traliing slash or allow the request without it.  Preferably the latter.",Running in tomcat via cargo,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47114,,,2010-10-25 01:01:53.0,,,,,,0|i0kl67:,118247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
-Peverything build fails against CXF 2.3,CXF-3089,12478160,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,gliesian,gliesian,23/Oct/10 19:08,21/Jan/11 18:18,14/Mar/19 02:29,10/Jan/11 20:33,2.3,,,,,,,,,,,,,,,,,2.3.1,,,,,,,,0,,,,,,"Issued commands:

  set MAVEN_OPTS=-Xmx512M -XX:MaxPermSize=128M
  mvn -e clean install -Peverything >everything.txt

Build failed with the following output:

[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[ERROR] The build could not read 3 projects -> [Help 1]
org.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:
[FATAL] Non-resolvable parent POM: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced and 'parent.relativePath' points at wrong local POM @ line 23, column 13
[FATAL] Non-resolvable parent POM: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced and 'parent.relativePath' points at wrong local POM @ line 23, column 13
[FATAL] Non-resolvable parent POM: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced and 'parent.relativePath' points at wrong local POM @ line 23, column 13

	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:325)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:607)
	at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:556)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:228)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:151)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:445)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:168)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
[ERROR]   
[ERROR]   The project org.apache.cxf.samples.interopfest:ws-sc:2.3.0 (C:\tmp\apache-cxf-2.3.0-src\distribution\src\main\release\samples\ws_security\interopfest\wssc\pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced and 'parent.relativePath' points at wrong local POM @ line 23, column 13 -> [Help 2]
org.apache.maven.model.resolution.UnresolvableModelException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:183)
	at org.apache.maven.model.building.DefaultModelBuilder.readParentExternally(DefaultModelBuilder.java:819)
	at org.apache.maven.model.building.DefaultModelBuilder.readParent(DefaultModelBuilder.java:691)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:308)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:232)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:354)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:305)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:607)
	at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:556)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:228)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:151)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:445)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:168)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.sonatype.aether.resolution.ArtifactResolutionException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:488)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:190)
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:179)
	... 24 more
Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.sonatype.aether.impl.internal.DefaultUpdateCheckManager.checkArtifact(DefaultUpdateCheckManager.java:191)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:384)
	... 26 more
[ERROR]   
[ERROR]   The project org.apache.cxf.samples.interopfest:ws-sec10:2.3.0 (C:\tmp\apache-cxf-2.3.0-src\distribution\src\main\release\samples\ws_security\interopfest\wssec10\pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced and 'parent.relativePath' points at wrong local POM @ line 23, column 13 -> [Help 2]
org.apache.maven.model.resolution.UnresolvableModelException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:183)
	at org.apache.maven.model.building.DefaultModelBuilder.readParentExternally(DefaultModelBuilder.java:819)
	at org.apache.maven.model.building.DefaultModelBuilder.readParent(DefaultModelBuilder.java:691)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:308)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:232)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:354)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:305)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:607)
	at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:556)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:228)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:151)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:445)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:168)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.sonatype.aether.resolution.ArtifactResolutionException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:488)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:190)
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:179)
	... 24 more
Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.sonatype.aether.impl.internal.DefaultUpdateCheckManager.checkArtifact(DefaultUpdateCheckManager.java:191)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:384)
	... 26 more
[ERROR]   
[ERROR]   The project org.apache.cxf.samples.interopfest:ws-sec11:2.3.0 (C:\tmp\apache-cxf-2.3.0-src\distribution\src\main\release\samples\ws_security\interopfest\wssec11\pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced and 'parent.relativePath' points at wrong local POM @ line 23, column 13 -> [Help 2]
org.apache.maven.model.resolution.UnresolvableModelException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:183)
	at org.apache.maven.model.building.DefaultModelBuilder.readParentExternally(DefaultModelBuilder.java:819)
	at org.apache.maven.model.building.DefaultModelBuilder.readParent(DefaultModelBuilder.java:691)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:308)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:232)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:354)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:417)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:305)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:607)
	at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:556)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:228)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:151)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:445)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:168)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.sonatype.aether.resolution.ArtifactResolutionException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:488)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:190)
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:179)
	... 24 more
Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Failure to find org.apache.cxf.samples:cxf-samples:pom:2.3.0 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced
	at org.sonatype.aether.impl.internal.DefaultUpdateCheckManager.checkArtifact(DefaultUpdateCheckManager.java:191)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:384)
	... 26 more
[ERROR] 
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException
","Windows 7 Home Premium
JDK 1.6, update 21
Maven 3.0
CXF 2.3

",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-10 20:33:43.054,,,no_permission,,,,,,,,,,,,,47115,,,Mon Jan 10 20:33:43 UTC 2011,,,,,,0|i0klf3:,118287,,,,,,,,"23/Oct/10 19:19;gliesian;Hmmm... perhaps I'm in the wrong place as the help states, ""The ""distribution"" stuff is in the distribution module. At top level, you can run: $ mvn install -Peverything""

But, I tried this from the distribution folder... also with errors.
","10/Jan/11 20:33;dkulp; 
relativePath entries were added to the poms.",,,,,,,,,,,,,,,,,,,,,,,,,
UriBuilderImpl#clone does not clone leadingSlash,CXF-3088,12478118,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,alexwen,alexwen,22/Oct/10 21:28,06/Dec/10 22:49,14/Mar/19 02:29,26/Oct/10 16:06,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,0,,,,,,"When cloning a UriBuilderImpl the URI which results from a clone can be different from the URI which would result from the original builder if the path contains a leading slash. The reason for this is that the leading slash is not cloned with the rest of the URI and thus is not retained in the new builder.

{code}
        UriBuilder builder = new UriBuilderImpl(new URI(""/this/is/my/path""));
        assertEquals(builder.build(), builder.clone().build()); // assertion fails
{code}
unit.framework.AssertionFailedError: expected:</this/is/my/path> but was:<this/is/my/path>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,47116,,,2010-10-22 21:28:17.0,,,,,,0|i0kl6f:,118248,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointImpl.publish() with no address throws NPE for service list,CXF-3082,12478068,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,22/Oct/10 14:09,06/Dec/10 22:49,14/Mar/19 02:29,22/Oct/10 16:08,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47121,,,2010-10-22 14:09:19.0,,,,,,0|i0kl6n:,118249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deprecated Soap getPrefix() calls should be replaced.,CXF-3081,12478024,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gliesian,gliesian,21/Oct/10 19:49,18/Apr/11 12:44,14/Mar/19 02:29,05/Jan/11 18:43,2.3,,,,,,,,,,,,,,,,,2.4,,,,,,,,0,,,,,,"I think the getPrefix() calls from the org.apache.cxf.binding.soap.SoapVersion class should be replaced with getPrefix() calls from org.apache.cxf.binding.soap.Soap11 and org.apache.cxf.binding.soap.Soap12 in order to resolve the respective warnings in the following reference (from a CXF 2.3.0 maven build):


Reference: 

[INFO] ------------------------------------------------------------------------
[INFO] Building Apache CXF Runtime SOAP Binding
[INFO]    task-segment: [clean, install]
[INFO] ------------------------------------------------------------------------
[INFO] [clean:clean {execution: default-clean}]
[INFO] Deleting C:\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\target
[INFO] [checkstyle:checkstyle {execution: validate}]
[INFO] Starting audit...
Audit done.

[INFO] Preparing pmd:check
[INFO] [pmd:pmd {execution: pmd}]
[INFO] [pmd:check {execution: validate}]
[INFO] 
[INFO] [cxf-xml2fastinfoset:xml2fastinfoset {execution: xml2fastinfoset}]
[INFO] [remote-resources:process {execution: default}]
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO] Copying 7 resources
[INFO] skip non existing resourceDirectory C:\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\src\main\resources-filtered
[INFO] Copying 1 resource
[INFO] Copying 3 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Compiling 68 source files to C:\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\target\classes
[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\src\main\java\org\apache\cxf\binding\soap\Soap12.java:[141,18] [deprecation] getPrefix() in org.apache.cxf.binding.soap.SoapVersion has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\src\main\java\org\apache\cxf\binding\soap\Soap11.java:[161,18] [deprecation] getPrefix() in org.apache.cxf.binding.soap.SoapVersion has been deprecated

[INFO] [resources:testResources {execution: default-testResources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 4 resources
[INFO] Copying 12 resources
[INFO] skip non existing resourceDirectory C:\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\target\generated\src\test\resources
[INFO] Copying 3 resources
[INFO] [compiler:testCompile {execution: default-testCompile}]
[INFO] Compiling 16 source files to C:\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\target\test-classes
[INFO] [surefire:test {execution: default-test}]
[INFO] Surefire report directory: C:\_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\bindings\soap\target\surefire-reports
",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-01-05 18:43:27.564,,,no_permission,,,,,,,,,,,,,47122,,,Wed Jan 05 18:43:27 UTC 2011,,,,,,0|i145k7:,232364,,,,,,,,"22/Oct/10 19:12;gliesian;Here are some more deprecated methods, where the code could be adjusted:

[INFO] ------------------------------------------------------------------------
[INFO] Building Apache CXF Runtime JAX-RS Frontend
[INFO]    task-segment: [clean, install]
[INFO] ------------------------------------------------------------------------
...
[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalHttpServletRequest.java:[137,19] [deprecation] isRequestedSessionIdFromUrl() in javax.servlet.http.HttpServletRequest has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalHttpServletRequest.java:[218,18] [deprecation] getRealPath(java.lang.String) in javax.servlet.ServletRequest has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalServletContext.java:[133,16] [deprecation] log(java.lang.Exception,java.lang.String) in javax.servlet.ServletContext has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalServletContext.java:[119,31] [deprecation] getServletNames() in javax.servlet.ServletContext has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalServletContext.java:[124,32] [deprecation] getServlets() in javax.servlet.ServletContext has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalServletContext.java:[110,19] [deprecation] getServlet(java.lang.String) in javax.servlet.ServletContext has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalHttpServletResponse.java:[106,16] [deprecation] setStatus(int,java.lang.String) in javax.servlet.http.HttpServletResponse has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalHttpServletResponse.java:[62,18] [deprecation] encodeRedirectUrl(java.lang.String) in javax.servlet.http.HttpServletResponse has been deprecated

[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\impl\tl\ThreadLocalHttpServletResponse.java:[71,18] [deprecation] encodeUrl(java.lang.String) in javax.servlet.http.HttpServletResponse has been deprecated

","22/Oct/10 19:14;gliesian;Another deprecated method:

[INFO] ------------------------------------------------------------------------
[INFO] Building Apache CXF JCA Connection
[INFO]    task-segment: [clean, install]
[INFO] ------------------------------------------------------------------------
...
[WARNING] \_CXF\apache-cxf-2.3.0-src\apache-cxf-2.3.0-src\integration\jca\src\main\java\org\apache\cxf\jca\core\resourceadapter\ResourceAdapterInternalException.java:[75,21] [deprecation] getLinkedException() in javax.resource.ResourceException has been deprecated
...","05/Jan/11 18:43;dkulp;
Methods removed",,,,,,,,,,,,,,,,,,,,,,,,
java.lang.InstantiationException: org.apache.cxf.wstx_msv_validation.WoodstoxValidationImpl,CXF-3077,12477847,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,camusg,camusg,20/Oct/10 10:30,01/Mar/11 15:53,14/Mar/19 02:29,18/Feb/11 23:58,2.3,,,,,,,,,,,,,,,,,2.3.3,,,,Bus,,,,0,,,,,,"I try to upgrade lib from CXF 2.2.10 to 2.3.0 and I have got this exception :

{noformat}
Exception in thread ""main"" org.apache.cxf.bus.extension.ExtensionException
	at org.apache.cxf.bus.extension.Extension.load(Extension.java:114)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.loadAndRegister(ExtensionManagerImpl.java:183)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.processExtension(ExtensionManagerImpl.java:158)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.loadFragment(ExtensionManagerImpl.java:151)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.load(ExtensionManagerImpl.java:143)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.load(ExtensionManagerImpl.java:96)
	at org.apache.cxf.bus.extension.ExtensionManagerBus.<init>(ExtensionManagerBus.java:129)
	at org.apache.cxf.bus.CXFBusFactory.createBus(CXFBusFactory.java:41)
	at org.apache.cxf.bus.CXFBusFactory.createBus(CXFBusFactory.java:37)
	at org.apache.cxf.bus.CXFBusFactory.createBus(CXFBusFactory.java:33)
	at org.apache.cxf.BusFactory.getDefaultBus(BusFactory.java:72)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:115)
	at org.apache.cxf.BusFactory.getThreadDefaultBus(BusFactory.java:102)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createServiceDelegate(ProviderImpl.java:89)
	at javax.xml.ws.Service.<init>(Service.java:56)
	(...)
Caused by: java.lang.InstantiationException: org.apache.cxf.wstx_msv_validation.WoodstoxValidationImpl
	at java.lang.Class.newInstance0(Class.java:340)
	at java.lang.Class.newInstance(Class.java:308)
	at org.apache.cxf.bus.extension.Extension.load(Extension.java:110)
{noformat}

This exception is throwed when I access to my webservice (webservice using CXF 2.3.0 under Tomcat 6.0).

My consumer was written following this doc :
http://cxf.apache.org/docs/developing-a-consumer.html
# My WSDL is saved on a file.
# I generate the stub code with wsdl2java with this WSDL (with new CXF 2.3.0)
# I call methods that work with older CXF release.

I use these libs :
* cxf-2.3.0.jar
* jcl-over-slf4j-1.6.1.jar
* log4j-1.2.16.jar
* neethi-2.0.4.jar
* slf4j-api-1.6.1.jar
* slf4j-log4j12-1.6.1.jar
* wsdl4j-1.6.2.jar
* XmlSchema-1.4.7.jar

I try to add these libs without success :
* woodstox-core-asl-4.0.8.jar
* stax2-api-3.0.2.jar

I tried with CXF 2.3.1 Snapshot (build on 20 october 2010) and i have the same exception.
I tried with CXF 2.2.11 and my consumer work correctly.","Windows XP
JDK 1.6.0_21",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-20 11:31:40.28,,,no_permission,,,,,,,,,,,,,47126,,,Thu Oct 21 08:51:58 UTC 2010,,,,,,0|i0a38f:,56797,,,,,,,,"20/Oct/10 11:31;bmargulies;Your problem is probably msv. However, this code was designed to fade away silently if anything was missing. I guess that the InstantiationException is more than it bargained for.

From parent/pom.xml:

{code}


            <!-- if we use the new woodstox artifact, we're using the new version -->
            <dependency>
                <groupId>org.codehaus.woodstox</groupId>
                <artifactId>woodstox-core-asl</artifactId>
                <version>4.0.8</version>
            </dependency>
            <dependency>
                <groupId>net.java.dev.msv</groupId>
                <artifactId>msv-core</artifactId>
                <version>${cxf.msv.version}</version>
            </dependency>

{code}
","21/Oct/10 08:51;camusg;Yes, you resolve my problem.
That's work fine now with all of these lib :
* woodstox-core-asl-4.0.8.jar
* stax2-api-3.0.2.jar
* msv.jar (build 20090415)

I think file WHICH_JARS in lib directory should contain this required lib.",,,,,,,,,,,,,,,,,,,,,,,,,
add catalog to avoid download schema files remotely,CXF-3076,12477828,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,20/Oct/10 06:17,06/Dec/10 22:49,14/Mar/19 02:29,21/Oct/10 01:30,,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,,,,,0,,,,,,"see the related discussion from maillinglist

http://cxf.547215.n5.nabble.com/2-2-x-Build-failure-td1044793.html#a1044793
http://cxf.547215.n5.nabble.com/Intermediate-build-issues-on-the-trunk-td3046821.html#a3046821",,,,,,,,,,,,,,,,,20/Oct/10 08:50;ffang;CXF-3076.patch;https://issues.apache.org/jira/secure/attachment/12457653/CXF-3076.patch,20/Oct/10 06:19;ffang;CXF-3076.patch;https://issues.apache.org/jira/secure/attachment/12457648/CXF-3076.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-10-20 07:34:02.99,,,no_permission,,,,,,,,,,,,,47127,,,Thu Oct 21 01:30:23 UTC 2010,,,,,,0|i0kl6v:,118250,,,,,,,,"20/Oct/10 06:20;ffang;I'm not sure if I can simply put the xsd file I download from [1] to cxf code base, is it license compatible?

[1]http://schemas.xmlsoap.org/soap/envelope/","20/Oct/10 07:34;njiang;@Freeman,

You patch has a change which ignore the test of WSDLAddressRewriteTest. Can you remove that ?","20/Oct/10 08:50;ffang;Hi Willem,

Updated the patch.

Remove unwilling changes.
Thanks for pointing out this issue.

Freeman","20/Oct/10 15:12;dkulp;
Freeman,

We already have some W3C schemas and such in the distribution and the notices and stuff are in place.   Thus, commit away!

Thanks!
","21/Oct/10 01:30;ffang;commit fix
http://svn.apache.org/viewvc?rev=1025804&view=rev for trunk
http://svn.apache.org/viewvc?rev=1025805&view=rev for 2.3 branch
http://svn.apache.org/viewvc?rev=1025808&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException under load,CXF-3075,12477781,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rockyalam,rockyalam,19/Oct/10 21:15,06/Dec/10 22:49,14/Mar/19 02:29,20/Oct/10 19:17,2.3,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,Core,,,,0,,,,,,"Here is the config:
- JAXB 2.2.1.1
- CXF 2.3.0
- JBOSS 5.1.0 
- SPRING 3.2

The client is configured as follows: 
                     <bean id=""fcrsFactory"" class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean"" >
		<property name=""address""><value>${fcrs.url}</value></property>
		<property name=""serviceClass""><value>com.tascet.wsdl.fcrs.v1.FacialRecognitionService</value></property>
		<property name=""serviceName""><value>FacialRecognitionService</value></property>
		<property name=""endpointName""><value>FacialRecognitionServicePort</value></property>
	</bean>
	
	<bean id=""fcrs"" class=""com.tascet.wsdl.fprs.v1.FingerprintRecognitionService"" factory-bean=""fcrsFactory"" factory-method=""create"" scope=""prototype"" />

The server is configured as follows:
                     <jaxws:endpoint id=""fcrs""
	                     implementor=""#fcrsImpl""
		endpointName=""s:FacialRecognitionServicePort""
		serviceName=""s:FacialRecognitionService""
		address=""/FacialRecognitionService""
		wsdlLocation=""/WEB-INF/wsdl/FCRS.wsdl""
		xmlns:s=""http://wsdl.tascet.com/fcrs/v1"">

	   <jaxws:properties>
	      <entry key=""mtom-enabled"" value=""true""/>
	    </jaxws:properties>

    	<jaxws:schemaLocations>
		<jaxws:schemaLocation>/WEB-INF/schemas/Automation_FCRS.xsd</jaxws:schemaLocation>
		<jaxws:schemaLocation>/WEB-INF/schemas/Automation_Ping.xsd</jaxws:schemaLocation>
    		<jaxws:schemaLocation>/WEB-INF/schemas/Message_FCRS.xsd</jaxws:schemaLocation>
    	</jaxws:schemaLocations>
    </jaxws:endpoint>

Under moderate load with 5 concurrent users the following exception starts showing up sporadically:

org.drools.runtime.rule.ConsequenceException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'fcrs' defined in class path resource [com/tascet/incore/fcrs/applicationContext.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public java.lang.Object org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create()] threw exception; nested exception is java.util.ConcurrentModificationException
	at org.drools.runtime.rule.impl.DefaultConsequenceExceptionHandler.handleException(DefaultConsequenceExceptionHandler.java:23)
	at org.drools.common.DefaultAgenda.fireActivation(DefaultAgenda.java:943)
	at org.drools.common.DefaultAgenda.fireNextItem(DefaultAgenda.java:885)
	at org.drools.common.DefaultAgenda.fireAllRules(DefaultAgenda.java:1086)
	at org.drools.common.AbstractWorkingMemory.fireAllRules(AbstractWorkingMemory.java:660)
	at org.drools.common.AbstractWorkingMemory.fireAllRules(AbstractWorkingMemory.java:637)
	at org.drools.impl.StatelessKnowledgeSessionImpl.execute(StatelessKnowledgeSessionImpl.java:252)
	at com.tascet.incore.main.FusionManager.execute(FusionManager.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at com.tascet.common.aop.async.AsyncInvokeMethodInterceptor$1.run(AsyncInvokeMethodInterceptor.java:37)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'fcrs' defined in class path resource [com/tascet/incore/fcrs/applicationContext.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public java.lang.Object org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create()] threw exception; nested exception is java.util.ConcurrentModificationException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:568)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:973)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:879)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1045)
	at com.tascet.incore.blip.fcrs.FCManagerImpl.search12F(FCManagerImpl.java:84)
	at com.tascet.incore.blip.fc.FCProcessorImpl.executeFC12FSearch(FCProcessorImpl.java:73)
	at com.tascet.incore.blip.main.StateProcessorImpl.matchFace(StateProcessorImpl.java:85)
	at com.tascet.incore.blip.normal.Rule_9_PRE1__If_FP_1_N_search_returned_1_result_then_do_1_F_FC_Search__if_not_done_already___0.consequence(Rule_9_PRE1__If_FP_1_N_search_returned_1_result_then_do_1_F_FC_Search__if_not_done_already___0.java:35)
	at com.tascet.incore.blip.normal.Rule_9_PRE1__If_FP_1_N_search_returned_1_result_then_do_1_F_FC_Search__if_not_done_already___0ConsequenceInvoker.evaluate(Rule_9_PRE1__If_FP_1_N_search_returned_1_result_then_do_1_F_FC_Search__if_not_done_already___0ConsequenceInvoker.java:23)
	at org.drools.common.DefaultAgenda.fireActivation(DefaultAgenda.java:934)
	... 17 more
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public java.lang.Object org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create()] threw exception; nested exception is java.util.ConcurrentModificationException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:158)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:557)
	... 30 more
Caused by: java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
	at java.util.AbstractList$Itr.next(AbstractList.java:343)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createInputWrappedMessageParts(ReflectionServiceFactoryBean.java:1607)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createOperation(ReflectionServiceFactoryBean.java:934)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.createOperation(JaxWsServiceFactoryBean.java:595)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.createInterface(ReflectionServiceFactoryBean.java:907)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:433)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:645)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:505)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:242)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:184)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:101)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:90)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:105)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:124)
	at sun.reflect.GeneratedMethodAccessor345.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 31 more",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47128,,,2010-10-19 21:15:26.0,,,,,,0|i0kl73:,118251,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org/apache/cxf/transport/http/DigestAuthSupplier is not thread safe,CXF-3073,12477758,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,jthimonier,jthimonier,19/Oct/10 15:58,06/Dec/10 22:48,14/Mar/19 02:29,20/Oct/10 19:28,2.0.13,2.1.10,2.2,2.2.1,2.2.10,2.2.11,2.2.2,2.2.3,2.2.4,2.2.5,2.2.6,2.2.7,2.2.8,2.2.9,2.3,,,2.2.12,2.3.1,,,Transports,,,,0,,,,,,"It seems that DigestAuthSupplier is not Thread safe and that multiple access can rarely trigger this kind of exceptions :

java.lang.ArrayIndexOutOfBoundsException
      at java.lang.System.arraycopy(Native Method)
      at sun.security.provider.DigestBase.engineUpdate(DigestBase.java:102)
      at sun.security.provider.MD5.implDigest(MD5.java:100)
      at sun.security.provider.DigestBase.engineDigest(DigestBase.java:161)
      at sun.security.provider.DigestBase.engineDigest(DigestBase.java:140)
      at java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:531)
      at java.security.MessageDigest.digest(MessageDigest.java:309)
      at java.security.MessageDigest.digest(MessageDigest.java:355)
      at org.apache.cxf.transport.http.DigestAuthSupplier.createCnonce(DigestAuthSupplier.java:248)
      at org.apache.cxf.transport.http.DigestAuthSupplier$DigestInfo.generateAuth(DigestAuthSupplier.java:178)
      at org.apache.cxf.transport.http.DigestAuthSupplier.getAuthorizationForRealm(DigestAuthSupplier.java:118)
      at org.apache.cxf.transport.http.HTTPConduit.authorizationRetransmit(HTTPConduit.java:1601)
      at org.apache.cxf.transport.http.HTTPConduit.processRetransmit(HTTPConduit.java:1428)
      at org.apache.cxf.transport.http.HTTPConduit.access$300(HTTPConduit.java:140)
      at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleRetransmits(HTTPConduit.java:2011)
      at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2038)
      at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1941)

Access to non thread safe MessageDigest 'MD5_HELPER' should be synchronized.
In fact, currently access to the digest is centralized in DigestInfo.generateAuth which is synchronized, but as the method is not static and that a new DigestInfo is instanciated at each call, 'synchronized' is useless :)

Simply replacing this should correct the problem :
    public static String createCnonce() throws UnsupportedEncodingException {
    	synchronized(MD5_HELPER)
    	{
	        String cnonce = Long.toString(System.currentTimeMillis());
	        return encode(MD5_HELPER.digest(cnonce.getBytes(""US-ASCII"")));
    	}
    }

Regards,
THIMONIER Julien

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47130,,,2010-10-19 15:58:32.0,,,,,,0|i0kl7j:,118253,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlElement(required=true) on @WebParam not honored in WSDL,CXF-3069,12477512,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ericacm,ericacm,15/Oct/10 21:44,06/Dec/10 22:48,14/Mar/19 02:29,18/Oct/10 15:28,2.3,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,,,,,0,,,,,,"My service looks like this:
@WebService
public interface ServiceTest
{
    @WebMethod(operationName=""testService"")
    public void testService(
            @WebParam(name=""foo"")
            @XmlElement(required=true)  
            String foo,

            @WebParam(name=""bar"")
            int bar
    );
}

But the WSDL fragment for the testService method request looks like:

<xs:complexType name=""testService""> 
    <xs:sequence> 
      <xs:element minOccurs=""0"" name=""foo"" type=""xs:string""/> 
      <xs:element name=""bar"" type=""xs:int""/> 
    </xs:sequence> 
  </xs:complexType> 

I did the endorsed dirs thing and think CXF is seeing the JAX-WS 2.2 jars.  To test did the following:
- Checked the value of org.apache.cxf.jaxws.spi.ProviderImpl.isJaxWs22(), it returns true
- Checked the class of my endpoint, it is org.apache.cxf.jaxws22.spring.JAXWS22SpringEndpointImpl

(I am not sure if this is a sufficient test.)  ",,,,,,,,,,,,,,,,,15/Oct/10 21:49;ericacm;cxf3069.tar;https://issues.apache.org/jira/secure/attachment/12457302/cxf3069.tar,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47134,,,Fri Oct 15 21:56:23 UTC 2010,,,,,,0|i0kl7z:,118255,,,,,,,,15/Oct/10 21:49;ericacm;Test project attached.,"15/Oct/10 21:56;ericacm;Note - even though the POM in the attached project has a jetty plugin, I couldn't figure out how to get the embedded Jetty to run with endorsed dirs.   I ended up running the code in a standalone Tomcat that had the JAX-WS/JAXB jars in its endorsed directory.",,,,,,,,,,,,,,,,,,,,,,,,,
"MimeBodyPartInputStream illegally returns ""0"" from a read call with chunked InputStream",CXF-3068,12477477,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,piepera,piepera,15/Oct/10 14:56,06/Dec/10 22:48,14/Mar/19 02:29,15/Oct/10 18:55,2.2.10,2.2.3,2.2.4,2.2.5,2.2.6,2.2.7,2.2.8,2.2.9,,,,,,,,,,2.2.12,2.3.1,,,Core,,,,0,,,,,,"I'm having a problem with some MTOM attachments. It started when I upgraded from CXF 2.2.2 to CXF 2.2.3. The bug is that after calling a service which returned an MTOM attachment, when I try to parse the attachment, I sometimes get an error:

java.io.IOException: Underlying input stream returned zero bytes
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:268)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:306)
	at sun.nio.cs.StreamDecoder.READ(StreamDecoder.java:158)
	at java.io.InputStreamReader.READ(InputStreamReader.java:167)
	at java.io.Reader.READ(Reader.java:123)
	at org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1128)
	at org.apache.commons.io.IOUtils.copy(IOUtils.java:1104)
	at org.apache.commons.io.IOUtils.copy(IOUtils.java:1050)
	at org.apache.commons.io.IOUtils.toString(IOUtils.java:359)
	at com.pragmatics.AsyncUtils.messageToString(AsyncUtils.java:18)
 
The error only happens for some attachments - about 25% of them. It's a seemingly arbitrary 25% - it's not like, the biggest 25% or the ones that have special characters. I was able to track this down to MimeBodyPartInputStream. MimeBodypartInputStream has some logic in processBuffer for reading the boundary. It goes like this:

while ((boundaryIndex < boundary.length) && (value == boundary[boundaryIndex])) {  if (!hasData(buffer, initialI, i + 1, off, len)) {
  return initialI - off;
 }
 value = buffer[++i];
 boundaryIndex++;
}

So, basically, when MimeBodyPartInputStream finds the start of a boundary, it reads from the stream until either there's no more characters to read, or until it read the entire boundary. The problem with this logic is that it assumes the entire boundary will be read in the same call to the underlying InputStream. This assumption isn't always true. Specifically, when I'm fetching an attachment in my application, this MimeBodyPartInputStream is backed by an HttpURLConnection.HttpInputStream. This HttpInputStream sometimes fetches as few as 24 characters, I guess that's just how the HttpInputStream works. But if these 24 characters happen to fall on one of these MIME boundaries, it can cause problems.

One problem, which I'm running into here, is that the MimeBodyPartInputStream's read(byte,int,int) method returns 0, since the only bytes that were read were parts of the MIME boundary. In returning 0, it breaks InputStream's contract which says states that the read method will only ever return a positive integer (if some bytes were read) or -1 (if no bytes were read.) There are probably other possible problems - it seems like it's possible MimeBodyPartInputStream might misunderstand whether or not it's hit a boundary in some cases. I haven't run into that problem though.
",Windows,,,,,,,,,,,,,,,,15/Oct/10 15:05;piepera;MimeBodyPartInputStreamTest.java;https://issues.apache.org/jira/secure/attachment/12457262/MimeBodyPartInputStreamTest.java,15/Oct/10 15:15;piepera;cxf-3068-kludge-patch.txt;https://issues.apache.org/jira/secure/attachment/12457264/cxf-3068-kludge-patch.txt,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,47135,,,Thu Oct 21 20:35:13 UTC 2010,,,,,,0|i0kl87:,118256,,,,,,,,"15/Oct/10 15:05;piepera;This unit test uses a custom InputStream which only ever returns 2 bytes, regardless of how many are asked for. It demonstrates that MimeBodyInputStream is returning 0 where it should return -1.

I'm not confident in the assertions in this test, but I'm at least confident that it shouldn't return 0 like it is doing now.","15/Oct/10 15:15;piepera;This is a patch which works around the immediate problem by returning ""-1"" instead of ""0"" for the edge case where MimeBodyPartInputStream reads a fragment of a MIME boundary. This is a ""band-aid"" and will not fix any of the underlying problems. MimeBodyPartInputStream's underlying ""boundary-reading logic"" is the real culprit, and this patch will probably just cause other other bugs until that underlying logic is fixed.

I'm not recommending this patch be applied to the CXF baseline, but if anyone wants a quick work-around, this patch might work for you.",21/Oct/10 20:35;piepera;Thanks Daniel - this fix works great!,,,,,,,,,,,,,,,,,,,,,,,,
HTTPConduit does not respect HTTP 301 redirects responses to GET requests,CXF-3065,12477265,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,13/Oct/10 19:33,06/Dec/10 22:48,14/Mar/19 02:29,15/Oct/10 06:28,2.3,,,,,,,,,,,,,,,,,2.3.1,2.4,,,Transports,,,,0,,,,,,"It seems the http client transport is not following redirects (HTTP 301 responses) to GET requests, even if the setAutoRedirect(true) is used. That seems to only work for POST requests.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47138,,,2010-10-13 19:33:22.0,,,,,,0|i0klfb:,118288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-A support does not enforce Message ID MAP for Req/Resp MEP,CXF-3062,12477200,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,davaleri,davaleri,davaleri,13/Oct/10 00:47,21/Jan/11 18:14,14/Mar/19 02:29,09/Dec/10 21:03,2.2.11,2.3,,,,,,,,,,,,,,,,2.3.2,2.4,,,WS-* Components,,,,0,,,,,,"The WS-A SOAP Binding [1]  does not lay out any specific requirements for the presence of Message Addressing Properties (MAPs) in the SOAP header.
The WS-A WSDL Binding [2] does define required MAPs for certain WSDL MEPs [3].  The WSDL Binding requires a WS-A message ID property for a request-response MEP.  A CXF client always sends a message ID when WS-A is in use, but the MAPAggregator isn't enforcing the presence of the message ID property on the server side.  MAPAggregator currently looks at the message ID if alowDuplicates is turned off, but only looks if the value is non-null.  The interceptors have access to the MEP and could enforce the presence of the property when in a request-reply MEP.

Additionally, if the ID is missing, the fault for a request-response MEP should still carry a relationship MAP per the WS-A WSDL Binding requirements.  It follows that ""http://www.w3.org/2005/08/addressing/unspecified"" would be used as the message identifier IRI in this case [4].

[1] http://www.w3.org/TR/ws-addr-soap/
[2] http://www.w3.org/TR/ws-addr-wsdl/
[3] http://www.w3.org/TR/ws-addr-wsdl/#WSDLMEPS
[4] http://www.w3.org/TR/ws-addr-core/#msgaddrprops
",,,,,,,,,,,,,,,,,13/Oct/10 00:48;davaleri;CXF-3062.patch;https://issues.apache.org/jira/secure/attachment/12457030/CXF-3062.patch,26/Oct/10 13:38;davaleri;patched-one-way-response.xml;https://issues.apache.org/jira/secure/attachment/12458067/patched-one-way-response.xml,26/Oct/10 13:38;davaleri;patched-req-resp-with-no-messageID-response.xml;https://issues.apache.org/jira/secure/attachment/12458068/patched-req-resp-with-no-messageID-response.xml,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,47141,,,Tue Oct 26 13:38:14 UTC 2010,,,,,,0|i13yqv:,231259,,,,,,,,13/Oct/10 00:48;davaleri;Attaching proposed patch for discussion.,"26/Oct/10 13:38;davaleri;patched-one-way-response.xml - This file is a capture of the partial response returned from a one-way request.  Note the addition of the relates to MAP with the unspecified value.

patched-req-resp-with-no-messageID-response.xml - This file is a capture of a fault generated by a request (req/resp MEP) without a Message ID MAP.  Note the addition of the relates to MAP with the unspecified value.

All other permutations of faults and MEPs remain unaltered.  The patch 1) always includes a relates to MAP in any response, and 2) enforces the message ID MAP on the request message of a req/resp MEP.

Earlier versions of CXF may stumble on response messages that use the unspecified value for the relates to MAP as the code did not address this value as a possible value for the MAP.

",,,,,,,,,,,,,,,,,,,,,,,,,
Resolving a DTD from Schema fails when Endpoint definition uses wsdlLocation,CXF-3061,12477111,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,marcozapletal,marcozapletal,12/Oct/10 08:27,06/Dec/10 22:48,14/Mar/19 02:29,29/Nov/10 22:19,2.2.11,2.3,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,Core,,,,0,,,,,,"This bug affects endpoints, which have schema validation enabled and also contain a wsdlLocation. If a schema of the WSDL holds a reference to a DTD, the resolution of the DTD fails. These results in the fact that schema validation is repealed. This issue has already been raised on the mailing list (cf. http://cxf.547215.n5.nabble.com/SAXException-resolving-resource-http-www-w3-org-2001-XMLSchema-dtd-td551217.html and http://cxf.547215.n5.nabble.com/SAXException-resolving-resource-http-www-w3-org-2001-XMLSchema-dtd-td3200050.html , respectively).

The resulting stacktrace is: 

12.10.2010 10:12:06 org.apache.cxf.wsdl.EndpointReferenceUtils createSchema
WARNUNG: SAXException for newSchema()
java.lang.NullPointerException
	at java.lang.String.endsWith(String.java:1465)
	at org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver.resolveResource(EndpointReferenceUtils.java:199)
	at com.sun.org.apache.xerces.internal.util.DOMEntityResolverWrapper.resolveEntity(DOMEntityResolverWrapper.java:106)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.resolveEntityAsPerStax(XMLEntityManager.java:1018)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDriver.dispatch(XMLDocumentScannerImpl.java:1192)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDriver.next(XMLDocumentScannerImpl.java:1090)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:977)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:435)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:491)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser.parse(SchemaDOMParser.java:510)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:1802)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.resolveSchema(XSDHandler.java:1757)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.constructTrees(XSDHandler.java:909)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.constructTrees(XSDHandler.java:1002)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:569)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:552)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar(XMLSchemaLoader.java:519)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadGrammar(XMLSchemaLoader.java:485)
	at com.sun.org.apache.xerces.internal.jaxp.validation.XMLSchemaFactory.newSchema(XMLSchemaFactory.java:210)
	at org.apache.cxf.wsdl.EndpointReferenceUtils.createSchema(EndpointReferenceUtils.java:696)
	at org.apache.cxf.wsdl.EndpointReferenceUtils.getSchema(EndpointReferenceUtils.java:723)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.setSchemaOutMessage(AbstractOutDatabindingInterceptor.java:179)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.getDataWriter(AbstractOutDatabindingInterceptor.java:173)
	at org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor.writeParts(AbstractOutDatabindingInterceptor.java:115)
	at org.apache.cxf.interceptor.BareOutInterceptor.handleMessage(BareOutInterceptor.java:68)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
	at org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:78)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:111)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:311)
	at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:275)
	at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:70)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:322)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:843)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)

I attach a test case to this issue. Please note that the test case passes, since it is not possible to check this error with any asserts on the client side. However, you will see the stacktrace raised by the service.","Windows, Java build 1.6.0_21-b07",,,,,,,,,,,,,,,,12/Oct/10 08:29;marcozapletal;DTDResolverTest.zip;https://issues.apache.org/jira/secure/attachment/12456946/DTDResolverTest.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47142,,,2010-10-12 08:27:49.0,,,,,,0|i0kl8n:,118258,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AddressingFeature(true, true) does not work in client side when the wsa policy is not enforced",CXF-3060,12477110,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,12/Oct/10 08:23,06/Dec/10 22:48,14/Mar/19 02:29,21/Oct/10 09:41,2.3,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,WS-* Components,,,,0,,,,,,"When the wsa is disabled in server side , the AddressingFeature(true, true) does not work in the client side . The javax.xml.ws.soap.SOAPFaultException(A required header representing a Message Addressing Property is not present) should be thrown from client proxy.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47143,,,2010-10-12 08:23:48.0,,,,,,0|i0kl8v:,118259,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 idl2wsdl fails when constant is used to define boundary of sequence.,CXF-3059,12477089,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,12/Oct/10 02:15,06/Dec/10 22:48,14/Mar/19 02:29,12/Oct/10 03:04,,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,,,,,0,,,,,,"Run idl2wsdl on the following

module TRY
{
     const unsigned short  idlMaxUserName   = 20;
     typedef sequence<unsigned short, idlMaxUserName> idlUserName; 
};

... you'll see that if fails. If you change the boundary of the sequence to a literal, the problem goes away

module TRY
{
        typedef sequence<unsigned short, 20> idlUserName; 
};

but according to the CORBA 2.4 spec, any constant expression that evaluates to yield a positive integer can be used to specify the upper bound of a sequence.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47144,,,Tue Oct 12 03:04:45 UTC 2010,,,,,,0|i0kl93:,118260,,,,,,,,"12/Oct/10 03:04;ffang;commit fix
http://svn.apache.org/viewvc?rev=1021599&view=rev for trunk
http://svn.apache.org/viewvc?rev=1021602&view=rev for 2.2.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis ignores MTOM threshold,CXF-3058,12477013,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,11/Oct/10 13:23,06/Dec/10 22:48,14/Mar/19 02:29,30/Nov/10 01:46,,,,,,,,,,,,,,,,,,2.3.1,2.4,,,Aegis Databinding,,,,0,,,,,,"Aegis has no concept of an MTOM threshold. This is probably a lucky thing, given https://issues.apache.org/jira/browse/CXF-3056, but we should address this while dealing with the rest of these issues.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47145,,,2010-10-11 13:23:14.0,,,,,,0|i0klfr:,118290,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Only JAX-B sees @MTOM,CXF-3057,12477012,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,11/Oct/10 13:22,06/Dec/10 22:48,14/Mar/19 02:29,30/Nov/10 01:46,,,,,,,,,,,,,,,,,,2.3.1,2.4,,,Configuration,,,,0,,,,,,"@MTOM is a JAX-WS annotation on the implementation bean. If it's there, MTOM should get turned on.

However, only the JAX-B data binding ever notices it. Aegis (the only other binding I'm sure supports MTOM) requires the CXF-specific mtom-enabled property on the factory (or calls on the databinding object itself) to get MTOM to turn on.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47146,,,2010-10-11 13:22:01.0,,,,,,0|i0klfz:,118291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aegis handles MTOM fallback assymetrically,CXF-3056,12477009,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,11/Oct/10 13:05,18/Apr/11 12:42,14/Mar/19 02:29,04/Nov/10 18:24,,,,,,,,,,,,,,,,,,2.4,,,,Aegis Databinding,,,,0,,,,,,"I'm not sure if this will prove out as a defect, but I'm writing it up. In the DataHandler type class in Aegis the wrapBytes method does not package the bytes as a ByteArrayInputStream in a data source. The result is that 'unoptimized' data handlers are completely different inside from optimized ones, and code has to condition on it, and it's a pain. It would be better, if not very compatible, to always set up a stream. ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47147,,,2010-10-11 13:05:33.0,,,,,,0|i0v0fr:,179044,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl12js.bat doesn't immediately exit after return result from version query,CXF-3054,12476885,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,ffang,gliesian,gliesian,08/Oct/10 17:37,16/Sep/11 14:39,14/Mar/19 02:29,15/Sep/11 11:06,2.2.10,,,,,,,,,,,,,,,,,2.3.7,2.4.3,2.5,,Tooling,,,,0,,,,,,"""wsdl12js.bat -v"" returns the following

""wsdl12js - Apache CXF 2.2.10

WSDLToJS Error : WSDL URL can not be null: 


Expected result: the utility should exit after the version is returned.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-15 11:06:29.459,,,no_permission,,,,,,,,,,,,,46287,,,Fri Sep 16 14:39:59 UTC 2011,,,,,,0|i0b7pr:,63362,,,,,,,,"08/Oct/10 17:38;gliesian;Same for ""wsdl12js -h""","15/Sep/11 11:06;ffang;commit fix
http://svn.apache.org/viewvc?rev=1171035&view=rev for trunk
http://svn.apache.org/viewvc?rev=1171042&view=rev for 2.4.x branch
http://svn.apache.org/viewvc?rev=1171047&view=rev for 2.3.x branch",16/Sep/11 14:39;gliesian;I have verified this fix against the latest 2.4.3 snapshot.,,,,,,,,,,,,,,,,,,,,,,,,
Rename all POM properties that change dependency versions,CXF-3051,12476850,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,bmargulies,bmargulies,08/Oct/10 11:24,18/Apr/11 12:42,14/Mar/19 02:29,17/Oct/10 23:26,2.2.10,2.3,,,,,,,,,,,,,,,,2.4,,,,Build system,,,,0,,,,,,"The maven gang discourages:

    <version>${blah}</version>

One reason is that maven does *not* resolve these references before publishing a pom in the release process. Our released poms contain property definitions and dependencies that use them.

If, for example, a user innocently create a setting for jetty.version that is, oh, for jetty version 8, maven will forget, entirely that we carefully declared a dependency on version 7.

The fix we can live with is to make all of these properties have names of the form cxf-*, so that other people won't accidently set them.

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47150,,,Sun Oct 17 23:26:52 UTC 2010,,,,,,0|i145kn:,232366,,,,,,,,17/Oct/10 23:26;bmargulies;done,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.NoClassDefFoundError using Maven 3 and org.apache.cxf:cxf-java2ws-plugin:2.2.10:java2ws,CXF-3050,12476818,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,,vsiveton,vsiveton,08/Oct/10 01:45,25/Aug/11 21:59,14/Mar/19 02:29,12/Oct/10 15:53,2.2.10,,,,,,,,,,,,,,,,,2.3,,,,,,,,0,,,,,,"Using Maven 2, the Java2WSMojo works fine but fails with Maven 3
It seems that the Maven tag requiresDependencyResolution is missing

Index: src/main/java/org/apache/cxf/maven_plugin/Java2WSMojo.java
===================================================================
--- src/main/java/org/apache/cxf/maven_plugin/Java2WSMojo.java	(revision 1005691)
+++ src/main/java/org/apache/cxf/maven_plugin/Java2WSMojo.java	(working copy)
@@ -35,6 +35,7 @@
 /**
  * @goal java2ws
  * @description CXF Java To Webservice Tool
+ * @requiresDependencyResolution compile
  */
 public class Java2WSMojo extends AbstractMojo {
     /**
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-08 12:32:30.932,,,no_permission,,,,,,,,,,,,,47151,,,Thu Aug 25 21:59:40 UTC 2011,,,,,,0|i0uxrr:,178612,,,,,,,,"08/Oct/10 12:32;gmazza;I'm not sure how this can be a bug or a blocker, given that Maven 3.0 is still in beta.","08/Oct/10 12:48;vsiveton;No, the final release is cut.
We (Maven team) just finish the Maven 3 release process, Benjamin will promote the artifacts soon.
http://markmail.org/message/pzbisehcfiptsrci?q=list:org.apache.maven.dev",12/Oct/10 15:53;vsiveton;it is fixed in r997960 and now works with cxf 2.3.0 and maven 3.0,"25/Aug/11 21:59;jc.giardina@gmail.com;I've the same problem with version 2.4.1, but 2.3.0 work.",,,,,,,,,,,,,,,,,,,,,,,
org.apache.cxf.interceptor.Fault: Unmarshalling Error: UndeclaredPrefix: Cannot resolve 's:string' as a QName: the prefix 's' is not declared.,CXF-3047,12476759,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gigerstyle,gigerstyle,07/Oct/10 10:19,21/Jan/11 18:14,14/Mar/19 02:29,04/Jan/11 03:42,2.2.10,,,,,,,,,,,,,,,,,2.3.2,,,,Core,,,,0,,,,,,"see also https://issues.apache.org/jira/browse/CXF-2340

I've attached a sample project (stolen from CXF-2340 and modified) to show the problem.

DefaultValidationEventHandler: [FATAL_ERROR]: UndeclaredPrefix: Cannot resolve 's:string' as a QName: the prefix 's' is not declared. 
     Location: line 4
07.10.2010 11:45:12 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNUNG: Interceptor for {http://server.type_substitution.fromjava/}SedansServicePorts#{http://server.type_substitution.fromjava/}GetSedansOperation has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Unmarshalling Error: UndeclaredPrefix: Cannot resolve 's:string' as a QName: the prefix 's' is not declared. 
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:773)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:624)
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:150)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:198)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:244)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:423)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:178)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:843)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:648)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)
Caused by: javax.xml.bind.UnmarshalException
 - with linked exception:
[org.xml.sax.SAXParseException: UndeclaredPrefix: Cannot resolve 's:string' as a QName: the prefix 's' is not declared.]
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.handleStreamException(UnmarshallerImpl.java:425)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:362)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:755)
        ... 30 more
Caused by: org.xml.sax.SAXParseException: UndeclaredPrefix: Cannot resolve 's:string' as a QName: the prefix 's' is not declared.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:417)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3181)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.getAndCheckXsiType(XMLSchemaValidator.java:2463)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1950)
        at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
        at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHandlerImpl.startElement(ValidatorHandlerImpl.java:549)
        at com.sun.xml.bind.v2.runtime.unmarshaller.ValidatingUnmarshaller.startElement(ValidatingUnmarshaller.java:96)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleStartElement(StAXStreamConnector.java:242)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:176)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
        ... 32 more",,,,,,,,,,,,,,,,,18/Nov/10 08:20;gigerstyle;JAXBEncoderDecoder.java.patch;https://issues.apache.org/jira/secure/attachment/12459893/JAXBEncoderDecoder.java.patch,07/Oct/10 10:21;gigerstyle;cxf-test.tar.gz;https://issues.apache.org/jira/secure/attachment/12456586/cxf-test.tar.gz,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-10-07 16:03:13.944,,,no_permission,,,,,,,,,,,,,47154,,,Tue Jan 04 03:42:01 UTC 2011,,,,,,0|i0sxuv:,166962,,,,,,,,"07/Oct/10 16:03;dkulp;
Found a way to hack around this.   It really is a deficiency in the Stax spec and the Validator API's that makes it impossible to do correctly, but the hack should work.","11/Oct/10 08:31;gigerstyle;I suspect that this fix is not enough.
If you un-un-comment the SAAJ and WSS4J configuration in the cxf-context.xml
you will get a new Use-Case where the source is the W3CDomStreamReader.

","12/Oct/10 20:22;dkulp;
Reopen to make sure the new part of this is tracked.",18/Nov/10 08:20;gigerstyle;Take W3CDOMStreamReader into account when searching for namespaces.,"04/Jan/11 03:42;dkulp;
Patch applied.  Thanks!",,,,,,,,,,,,,,,,,,,,,,
cxf-codgen-plugin does hot support XMLBeans generated classes/sources properly,CXF-3045,12476679,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,snicoll,snicoll,06/Oct/10 14:35,09/Apr/13 15:15,14/Mar/19 02:29,18/Mar/13 20:05,2.2.10,,,,,,,,,,,,,,,,,2.7.4,,,,Integration,OtherDatabindings,,,0,,,,,,"When XMLBeans runs it not only generates sources but also classes. While the plugin has a classesDirectory property it does not use it at all. 

A default configuration can still produce the expected result. Here it is

{code:xml}

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <defaultOptions>
                                <extraargs>
                                    <extraarg>-classdir</extraarg>
                                    <extraarg>${project.build.outputDirectory}</extraarg>
                                    <extraarg>-db</extraarg>
                                    <extraarg>xmlbeans</extraarg>
                                </extraargs>
                            </defaultOptions>
                            <wsdlRoot>${basedir}/src/main/wsdl</wsdlRoot>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
{code}

The problem now. If you do not specify this extra classDir parameter yourself, the plugin will generate the sources and the classes in the same directory. In practice all the generated classes at this point will NOT be included in the jar produced by Maven.

Maybe having specific configuration option for the bindings would help here.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47156,,,2010-10-06 14:35:14.0,,,,,,0|i1af73:,268928,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not handle security processing on application-level Fault responses,CXF-3043,12476651,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,dsosnoski,dsosnoski,06/Oct/10 10:17,28/Mar/17 09:29,14/Mar/19 02:29,28/Mar/17 09:29,2.2.10,,,,,,,,,,,,,,,,,,,,,WS-* Components,,,,0,,,,,,"CXF ignores WS-Security policy configuration for application-level Fault responses (tested with both 2.2.10 and the 2.3 nightly). Here's a WSDL sample illustrating the problem:
<wsdl:definitions targetNamespace=""http://ws.sosnoski.com/library/wsdl""
xmlns:wns=""http://ws.sosnoski.com/library/wsdl""
xmlns:tns=""http://ws.sosnoski.com/library/types""
xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
xmlns:wsdlsoap=""http://schemas.xmlsoap.org/wsdl/soap/"">

<!-- Policy for Username Token with hashed password, sent from client to server only -->
<wsp:Policy wsu:Id=""UsernameToken"" xmlns:wsu=
""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
xmlns:wsp=""http://www.w3.org/ns/ws-policy""
xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<sp:SupportingTokens>
<wsp:Policy>
<sp:UsernameToken sp:IncludeToken=
""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
<wsp:Policy>
<sp:HashPassword/>
</wsp:Policy>
</sp:UsernameToken>
</wsp:Policy>
</sp:SupportingTokens>
</wsp:Policy>

<!-- Policy for symmetric binding, using an ephemeral key generated by the client and
sent to the server as part of the request, using asymmetric encryption with the server
public key to secure the symmetric key. -->
<wsp:Policy wsu:Id=""SymmEncr""
xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""
xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl""
xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<sp:SymmetricBinding>
<wsp:Policy>
<sp:ProtectionToken>
<wsp:Policy>
<sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
<wsp:Policy>
<sp:RequireDerivedKeys/>
<sp:RequireThumbprintReference/>
<sp:WssX509V3Token10/>
</wsp:Policy>
</sp:X509Token>
</wsp:Policy>
</sp:ProtectionToken>
<sp:AlgorithmSuite>
<wsp:Policy>
<sp:Basic128Rsa15/>
</wsp:Policy>
</sp:AlgorithmSuite>
<sp:OnlySignEntireHeadersAndBody/>
</wsp:Policy>
</sp:SymmetricBinding>
<sp:Wss11>
<wsp:Policy>
<sp:MustSupportRefKeyIdentifier/>
<sp:MustSupportRefThumbprint/>
<sp:MustSupportRefEncryptedKey/>
</wsp:Policy>
</sp:Wss11>
</wsp:Policy>

<!-- Policy for encrypting the message body. -->
<wsp:Policy wsu:Id=""EncrBody"" xmlns:wsu=
""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
xmlns:wsp=""http://www.w3.org/ns/ws-policy""
xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
<sp:EncryptedParts>
<sp:Body/>
</sp:EncryptedParts>
</wsp:Policy>
...
<wsdl:binding name=""LibrarySoapBinding"" type=""wns:Library"">

<wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#UsernameToken""/>
...
<wsdl:operation name=""addBook"">

<wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#SymmEncr""/>

<wsdlsoap:operation soapAction=""urn:addBook""/>

<wsdl:input name=""addBookRequest"">
<wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#EncrBody""/>
<wsdlsoap:body use=""literal""/>
</wsdl:input>

<wsdl:output name=""addBookResponse"">
<wsdlsoap:body use=""literal""/>
</wsdl:output>

<wsdl:fault name=""addDuplicateFault"">
<wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#EncrBody""/>
<wsdlsoap:fault name=""addDuplicateFault"" use=""literal""/>
</wsdl:fault>

</wsdl:operation>
...
(same WSDL as for CXF-3042 - this problem shows up if you run the client code multiple times, in which case the addBook operation always generates a Fault response).",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-06 11:48:06.786,,,no_permission,,,,,,,,,,,,,47158,,,Tue Mar 28 09:29:05 UTC 2017,,,,,,0|i1af7j:,268930,,,,,,,,"06/Oct/10 11:48;gmazza;Are you sure this is a bug?  Is there a specification which says Fault messages are to be encrypted (Does Metro do this)?  It's normally a best practice *not* to give sensitive information over Faults anyway, and wouldn't encrypting encourage bad design habits?  (Perhaps transport-layer encryption would be better if you wanted to do this.)

But more to the point, given that problems with the WS-Security policy statements are to be reported themselves as SOAP faults (per the WS-Security specification), and that safety/security problems with the configuration could be among the errors that would engender a fault, it would seem strange to rely on the same problematic policy statements that are producing the error/exception in subsequently sending the Fault back to the client.



","06/Oct/10 13:07;dkulp;
This may be something that we try to enable depending on the internal fault type.   If it's an application level fault thrown form their implementation, then the fault policies should go into affect.    If it's a fault thrown from the incoming interceptors (such as a Security fault), then don't apply the policy.    Basically, if it's gotten into the application, we know the basic security requirements have been met.   ","06/Oct/10 22:31;dsosnoski;I think Dan's comment represents the best practices in this area. Application faults may contain sensitive data which needs to be secured, just as other types of response from the application. I should have specified ""application-level"" faults in the title of this Jira just to make it clear that I was referring to this case.","28/Mar/17 09:29;coheigea;Securing fault messages is supported for a while now, see: https://git-wip-us.apache.org/repos/asf?p=cxf.git;a=blob;f=systests/ws-security/src/test/java/org/apache/cxf/systest/ws/fault/FaultTest.java;h=aee2111fea06269b8488a9870b9f74672c10d51a;hb=HEAD",,,,,,,,,,,,,,,,,,,,,,,
SymmetricBinding used only for request causes error,CXF-3042,12476649,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dsosnoski,dsosnoski,06/Oct/10 10:06,06/Dec/10 22:48,14/Mar/19 02:29,15/Nov/10 15:46,2.2.10,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,WS-* Components,,,,0,,,,,,"When specifying SymmetricBinding at the operation level but only using it for the request message,everything looks reasonable on the wire but the client throws an exception when processing the response (tested with both 2.2.10 and the 2.3 nightly):
     [java] WARNING: Interceptor for {http://ws.sosnoski.com/library/wsdl}CXFLibrary#{http://ws.sosnoski.com/library/wsdl}addBook has thrown exception, unwinding now
     [java] org.apache.cxf.interceptor.Fault: These policy alternatives can not be satisfied: 

     [java] {http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702}X509Token: No derived keys found.
     [java]     at org.apache.cxf.ws.policy.AbstractPolicyInterceptor.handleMessage(AbstractPolicyInterceptor.java:47)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
     [java]     at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:733)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2198)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2071)
     [java]     at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1925)
     [java]     at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)
     [java]     at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:662)
     [java]     at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
     [java]     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:516)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
     [java]     at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
     [java]     at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
The error appears to be caused by the client receiving a response without security headers (which is correct according to the WSDL/policy).

Here's an edited version of the WSDL:
<wsdl:definitions targetNamespace=""http://ws.sosnoski.com/library/wsdl""
    xmlns:wns=""http://ws.sosnoski.com/library/wsdl""
    xmlns:tns=""http://ws.sosnoski.com/library/types""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
    xmlns:wsdlsoap=""http://schemas.xmlsoap.org/wsdl/soap/"">
  
  <!-- Policy for Username Token with hashed password, sent from client to server only -->
  <wsp:Policy wsu:Id=""UsernameToken"" xmlns:wsu=
      ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      xmlns:wsp=""http://www.w3.org/ns/ws-policy""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:SupportingTokens>
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken=
            ""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
          <wsp:Policy>
            <sp:HashPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
  
  <!-- Policy for symmetric binding, using an ephemeral key generated by the client and
   sent to the server as part of the request, using asymmetric encryption with the server
   public key to secure the symmetric key. -->
  <wsp:Policy wsu:Id=""SymmEncr""
      xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""
      xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:SymmetricBinding>
      <wsp:Policy>
        <sp:ProtectionToken>
          <wsp:Policy>
            <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
              <wsp:Policy>
                <sp:RequireDerivedKeys/>
                <sp:RequireThumbprintReference/>
                <sp:WssX509V3Token10/>
              </wsp:Policy>
            </sp:X509Token>
          </wsp:Policy>
        </sp:ProtectionToken>
        <sp:AlgorithmSuite>
          <wsp:Policy>
            <sp:Basic128Rsa15/>
          </wsp:Policy>
        </sp:AlgorithmSuite>
        <sp:OnlySignEntireHeadersAndBody/>
      </wsp:Policy>
    </sp:SymmetricBinding>
    <sp:Wss11>
      <wsp:Policy>
        <sp:MustSupportRefKeyIdentifier/>
        <sp:MustSupportRefThumbprint/>
        <sp:MustSupportRefEncryptedKey/>
      </wsp:Policy>
    </sp:Wss11>
  </wsp:Policy>
  
  <!-- Policy for encrypting the message body. -->
  <wsp:Policy wsu:Id=""EncrBody"" xmlns:wsu=
      ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      xmlns:wsp=""http://www.w3.org/ns/ws-policy""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:EncryptedParts>
      <sp:Body/>
    </sp:EncryptedParts>
  </wsp:Policy>
  ...
  <wsdl:binding name=""LibrarySoapBinding"" type=""wns:Library"">
  
    <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#UsernameToken""/>
    ...
    <wsdl:operation name=""addBook"">
  
      <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#SymmEncr""/>
  
      <wsdlsoap:operation soapAction=""urn:addBook""/>

      <wsdl:input name=""addBookRequest"">
        <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#EncrBody""/>
        <wsdlsoap:body use=""literal""/>
      </wsdl:input>

      <wsdl:output name=""addBookResponse"">
        <wsdlsoap:body use=""literal""/>
      </wsdl:output>

      <wsdl:fault name=""addDuplicateFault"">
        <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#EncrBody""/>
        <wsdlsoap:fault name=""addDuplicateFault"" use=""literal""/>
      </wsdl:fault>

    </wsdl:operation>
   ...
",,,,,,,,,,,,,,,,,06/Oct/10 10:08;dsosnoski;effective1.tgz;https://issues.apache.org/jira/secure/attachment/12456486/effective1.tgz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-10-06 11:52:37.532,,,no_permission,,,,,,,,,,,,,47159,,,Sun Oct 10 10:53:31 UTC 2010,,,,,,0|i0kl9b:,118261,,,,,,,,"06/Oct/10 10:08;dsosnoski;To use the attached .tgz, edit the build.properties cxf-home property to set the home directory for your CXF installation, and build with Ant (default target). This generates the .war, and you can then run the client with the Ant target ""run"".","06/Oct/10 11:52;gmazza;Does SymmetricBinding make sense if only the client is using it?  What is the specification that defines how one-way SymmetricBinding is to work?  You write ""at the operation level but only using it for the request message"", what are you using the response message--pure, unencrypted text?  I'm not sure if this is actually a bug or just an enhancement request (or even if this is something that should be supported.)  I need more enlightenment here.","10/Oct/10 10:53;dsosnoski;Just to add to the problem description, the client exception is thrown when processing the response to a successful addBook operation. In this case the request uses encryption but the response does not. It looks like the response handling policy code is incorrectly expecting a key to be present in this case.

Operations where the request is sent without encryption but the response is encrypted are handled correctly.",,,,,,,,,,,,,,,,,,,,,,,,
AsymmetricBinding used only for response causes error,CXF-3041,12476645,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dsosnoski,dsosnoski,06/Oct/10 09:37,06/Dec/10 22:48,14/Mar/19 02:29,15/Nov/10 15:46,2.2.10,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,WS-* Components,,,,0,,,,,,"When specifying AsymmetricBinding at the operation level but only using it for the response message, the request message is sent with a signature and the server throws an exception (tested with both 2.2.10 and the 2.3 nightly):
org.w3c.dom.DOMException: Cannot find Reference in Manifest
	at org.apache.xml.security.signature.Manifest.<init>(Unknown Source)
	at org.apache.xml.security.signature.SignedInfo.<init>(Unknown Source)
	at org.apache.xml.security.signature.XMLSignature.<init>(Unknown Source)
	at org.apache.ws.security.processor.SignatureProcessor.verifyXMLSignature(SignatureProcessor.java:197)
	at org.apache.ws.security.processor.SignatureProcessor.handleToken(SignatureProcessor.java:97)
	at org.apache.ws.security.WSSecurityEngine.processSecurityHeader(WSSecurityEngine.java:326)

Here's an edited version of the WSDL (intended to demonstrate using message-level encryption only in one direction):
<wsdl:definitions targetNamespace=""http://ws.sosnoski.com/library/wsdl""
    xmlns:wns=""http://ws.sosnoski.com/library/wsdl""
    xmlns:tns=""http://ws.sosnoski.com/library/types""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/""
    xmlns:wsdlsoap=""http://schemas.xmlsoap.org/wsdl/soap/"">
  
  <!-- Policy for asymmetric binding with the certificate included in the message from
   client to server but only a thumbprint on messages from the server to the client. -->
  <wsp:Policy wsu:Id=""AsymmBinding"" xmlns:wsu=
      ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      xmlns:wsp=""http://www.w3.org/ns/ws-policy""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:AsymmetricBinding>
      <wsp:Policy>
        <sp:InitiatorToken>
          <wsp:Policy>
            <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
              <wsp:Policy>
                <sp:RequireThumbprintReference/>
              </wsp:Policy>
            </sp:X509Token>
          </wsp:Policy>
        </sp:InitiatorToken>
        <sp:RecipientToken>
          <wsp:Policy>
            <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
              <wsp:Policy>
                <sp:RequireThumbprintReference/>
              </wsp:Policy>
            </sp:X509Token>
          </wsp:Policy>
        </sp:RecipientToken>
        <sp:AlgorithmSuite>
          <wsp:Policy>
            <sp:Basic128Rsa15/>
          </wsp:Policy>
        </sp:AlgorithmSuite>
      </wsp:Policy>
    </sp:AsymmetricBinding>
  </wsp:Policy>
  
  <!-- Policy for signing the message body. -->
  <wsp:Policy wsu:Id=""SignBody"" xmlns:wsu=
      ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      xmlns:wsp=""http://www.w3.org/ns/ws-policy""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:SignedParts>
      <sp:Body/>
    </sp:SignedParts>
  </wsp:Policy>
  
  ...

  <wsdl:binding name=""LibrarySoapBinding"" type=""wns:Library"">

    <wsdlsoap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>

    <wsdl:operation name=""getBook"">
  
      <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#AsymmBinding""/>
    
      <wsdlsoap:operation soapAction=""urn:getBook""/>
      
      <wsdl:input name=""getBookRequest"">
        <wsdlsoap:body use=""literal""/>
      </wsdl:input>
      
      <wsdl:output name=""getBookResponse"">
        <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#SignBody""/>
        <wsdlsoap:body use=""literal""/>
      </wsdl:output>
      
    </wsdl:operation>
    ...
  </wsdl:binding>
  ...
</wsdl:definitions>

Here's the actual request message:
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Header>
      <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" soap:mustUnderstand=""1"">
         <wsse:BinarySecurityToken xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"" wsu:Id=""CertId-797FFC48A8BEF2669712863570548321"">MIICoD....n33w==</wsse:BinarySecurityToken>
         <ds:Signature xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"" Id=""Signature-1"">
            <ds:SignedInfo>
               <ds:CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#""/>
               <ds:SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1""/>
            </ds:SignedInfo>
            <ds:SignatureValue>L422ALMnyFgf5WZiEixkUiaGY08otO3qRtm9C6mhWuZukFnmz0XmvggN03B6tcd1zE1nHWKUD0bLeOQ1RLjnd8LCL/+zYjnWOEtALZHPwJfJW5r9xq42DFIWVg2llVDw83rgShU5IhbBUMvdHv5zP/Y6xPipVysxDzPZS8t2gpM=</ds:SignatureValue>
            <ds:KeyInfo Id=""KeyId-797FFC48A8BEF2669712863570548432"">
               <wsse:SecurityTokenReference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""STRId-797FFC48A8BEF2669712863570548463"">
                  <wsse:Reference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" URI=""#CertId-797FFC48A8BEF2669712863570548321"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3""/>
               </wsse:SecurityTokenReference>
            </ds:KeyInfo>
         </ds:Signature>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <getBook xmlns=""http://ws.sosnoski.com/library/wsdl"" xmlns:ns2=""http://ws.sosnoski.com/library/types"">
         <isbn>0061020052</isbn>
      </getBook>
   </soap:Body></soap:Envelope>

To use the attached .tgz, edit the build.properties cxf-home property to set the home directory for you CXF installation, and build with Ant (default target). This generates the .war, and you can then run the client with the Ant target ""run"".",,,,,,,,,,,,,,,,,06/Oct/10 09:51;dsosnoski;effective3.tgz;https://issues.apache.org/jira/secure/attachment/12456485/effective3.tgz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-10-06 12:07:28.507,,,no_permission,,,,,,,,,,,,,47160,,,Tue Nov 02 06:48:58 UTC 2010,,,,,,0|i0kl9j:,118262,,,,,,,,"06/Oct/10 12:07;gmazza;In the behavior of such ""one way Asymmetric Binding"" defined anywhere -- I'm not sure how this is supposed to work.

Main things I could find on the 'Net, a blog explanation[1] and the WS-SecPol 1.2 explanation[2], both appeared to define AsymmetricBinding as a purely two-way street.

[1] http://thilinamb.wordpress.com/2009/08/19/ws-security-policy-assymetric-binding-explained/
[2] http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/ws-securitypolicy-1.2-spec-os.html#_Toc161826560
","06/Oct/10 22:47;dsosnoski;I think Thilina's blog is based on his understanding of this feature for the Rampart implementation, so I can't see it as a very definitive reference. As far as the standard goes, I don't see anything in the AsymmetricBinding description which defines it as a purely two-way street. What in particular are you looking at with this?

WSSP does say that AsymmetricBinding can be used at either the endpoint or the operation level, and that the actual SignedParts or EncryptedParts can be used at the message level, so this does give a way of creating policies that apply signing or encryption to only certain messages. This would be difficult to make work in the fully general case - for instance, if you only wanted to encrypt the response from the server using the client's certificate, without that certificate being used in the request - but this case only requires that each side have access to it's own private key and the certificate of the other side.

Unfortunately, WSSP defines a structure for expressing what you want done without ever saying exactly what is or is not supposed to work. Personally, I think any standard of this type should be required to provide a fairly comprehensive set of examples to help resolve just this type of issue. FWIW, Metro is able to handle this case.",06/Oct/10 22:49;dsosnoski;Cut out most of the certificate data so this will fit in a more-reasonable width.,"07/Oct/10 00:43;gmazza;I think we're talking two different things, with me misunderstanding you.  If I understand you correctly now, you just want to encrypt the SOAP request but not sign it, and CXF is complaining about that, correct?  As message-level encryption allows you to define what needs signing and what needs encrypting, it is probably indeed a CXF bug if it is requiring the SOAP request to be signed while the WS-SecPol statements are not requiring it.
","07/Oct/10 02:24;dsosnoski;Actually I want to only sign the response message, as specified by the policy. Even though the AsymmetricBinding is set at the operation level, nothing is specified for signing or encrypting in the request message.

The CXF client is generating a signature for the request message, which was not requested. The CXF server complains about this, which is probably correct.","07/Oct/10 04:06;gmazza;quote: ""Even though the AsymmetricBinding is set at the operation level, nothing is specified for signing or encrypting in the request message.""

Oh, but by default then everything should be signed and encrypted in the request message.  So long as AsymmetricBinding is defined at the operation level, it should not be necessary to define message-level encryption and signature policy reference rules in order to activate either--deactivate maybe, but not activate. I don't see why the default should be nothing.

To answer your earlier question:  ""As far as the standard goes, I don't see anything in the AsymmetricBinding description which defines it as a purely two-way street. What in particular are you looking at with this?""

In particular, the sentence: ""The AsymmetricBinding assertion is used in scenarios in which message protection is provided by means defined in WSS: SOAP Message Security using asymmetric key (Public Key) technology.""

Here, we need a definition of what ""asymmetric key technology"" is.  Thilna's non-normative definition from the blog entry is:

In asymmetric binding, message encryption and signing takes place using the Public Key Infrastructure(PKI), i.e. sender encrypts messages using the public key of the recipient and sign the messages using his private key. Then the recipient can decrypt the received messages using his private key and verify the signature of the message using the public key of the sender. This way, the confidentiality, integrity and the non-repudiation properties of the message exchanges can be assured.

The Wikipedia entry (http://en.wikipedia.org/wiki/Public-key_cryptography) says much the same.  That should be the default (as it's the most idiot-proof setting)--sign and encrypt everything in both directions.  As of this moment, I don't see the bug here.  

quote: ""The CXF client is generating a signature for the request message, which was not requested.""
I'm not an expert at reading policy, but I would argue it *was* requested, because you did not explicitly shut it off at the message level, no?
","07/Oct/10 04:41;dsosnoski;Glen, I understand that you're assuming the default should be to sign and encrypt everything if AsymmetricBinding is defined. However, I can see nothing in the WS-SP standard that backs up this assumption. Just because asymmetric encryption can be used in both directions doesn't mean it should automatically be applied to everything.

WS-SP has specific assertions for specifying what message components are to be signed and/or encrypted, the SignedParts/SignedElements and EncryptedParts/EncryptedElements/ContentEncryptedElements assertions. If the intent of the WS-SP writers was to make these values default to ""everything"", I would have expected them to make some statement to that effect.

As for explicitly shutting off signing at the message level, AFAIK WS-SP does not provide any way of doing this.","07/Oct/10 08:44;gmazza;Dennis, you keep using phrases like ""I can see nothing .... that suggests that...."" to imply that there is something that states the opposite, i.e., what you want.  Look at your statements:

However, I can see nothing in the WS-SP standard that backs up this assumption [that AB is a two-way street]. 
==> But there is equally nothing in the WS-SP standard that suggests it can be a one-way street.

If the intent of the WS-SP writers was to make these values default to ""everything"", I would have expected them to make some statement to that effect.
==>  The statement above is just as valid with the word ""nothing"", i.e., what you want.  I.e., the above sentence is meaningless if you are trying to make an argument in favor of what you want.

Even though the AsymmetricBinding is set at the operation level, nothing is specified for signing or encrypting in the request message. 
==>  Nothing is specified for *not* signing or encrypting the request message either.

These are for web services that can hold people's sensitive data, such as credit card information, so it would appear to me that the most secure option (sign & encrypt everything if nothing specified) should be the default to make things idiot-proof, i.e., for newbie or novice or lazy developers just setting up security without much attention to detail, everything will be handled perfectly securely.  Those like you who know what they are doing can go in and reduce the amount of security, but it's dangerous to rely on newbies to properly *add* in security.

When hotel room doors shut, they lock by default.  They don't stay unlocked and require the person staying there or leaving the room to manually lock the door.  It's the same principle.

""As for explicitly shutting off signing at the message level, AFAIK WS-SP does not provide any way of doing this.""

Maybe there's a reason for that--namely, that Assymmetric Binding is meant to provide both encryption and integrity/non-repudiation, and signatures are a vital part of the latter.  Maybe the WS-SP writers wanted to make things idiot-proof by disallowing it.  I don't know.  Maybe if I could get a fuller use case of what you're trying to do I could understand the need for this better.
","07/Oct/10 10:55;dsosnoski;Glen, you're the one who's making all kind of bold statements about how this all works, without any justification in the standard (instead drawing on blogs, Wikipedia general articles on encryption, and... hotel room door analogies?). If one-way encryption or signing is *not* intended to be supported by the standard, why does the standard not make signing or encrypting the default (which it does not, no matter how much you think it *should* do so)? And why does the standard explicitly allow the SignedParts/EncryptedParts assertions to be attached at the message level? This would make no sense if the intent was to always apply signing and encryption in both directions.

As to the use case, there are many situations where only one direction of information flow needs to be signed. For example, it makes sense to sign responses from a government server providing official information, so that the response can be saved and provided if proof of the response is needed later (the equivalent of a certified document). It's a little more difficult to come up with examples where encryption is only needed in one direction, but I'm sure there are real situations of that type, too.","07/Oct/10 15:22;gmazza;I think I can get a little bit more authoritative:

From here: http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/ws-securitypolicy-1.2-spec-os.html#_Toc161826512

If you just specify /sp:SignedParts, with no child elements, body and certain headers *must* be signed. Quote: This assertion specifies the parts of the message that need integrity protection. If no child elements are specified, all message headers targeted at the UltimateReceiver role [SOAP12] or actor [SOAP11] and the body of the message MUST be integrity protected.

From here: http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/ws-securitypolicy-1.2-spec-os.html#_Toc161826515

If you just specify /sp:EncryptedParts, body alone must be encrypted: This assertion specifies the parts of the message that need confidentiality protection. The single child element of this assertion specifies the set of message parts using an extensible dialect. If no child elements are specified, the body of the message MUST be confidentiality protected.

In other words, the spec folk have already defined the most idiot-proof defaults if you just use this:

<wsp:Policy>
<sp:SignedParts/>
<sp:EncryptedParts/>
</wsp:Policy>

I would submit that those should be the same defaults if you fail to attach a Policy at all to the message. However, I concede there's nothing in the spec to suggest that (or the contrary for that matter). As WS-SecPol 1.3 is still in development, perhaps you can make suggestions to them on providing an ability to clearly and unambiguously shutting off of encryption and/or signing from either the request or response. At the very least, to have them clearly specify what the default message level encryption/signature policy is if you don't attach a message policy reference to the message.

Your quote: For example, it makes sense to sign responses from a government server providing official information, so that the response can be saved and provided if proof of the response is needed later (the equivalent of a certified document).

Actually, that's not the point, I need to know why it is so important *not* to sign the request or encrypt in both directions, I understand you don't care about it being signed, but why MUST it not be signed? Performance is certainly an argument, but not enough in my view to trump idiot-proofing.

Incidentally, you can probably do what you want in CXF by *not* using Policy statements but just the traditional interceptors instead:
http://www.jroller.com/gmazza/entry/cxf_x509_profile","07/Oct/10 21:31;dsosnoski;Yes, *if* you include an empty sp:SignedParts assertion, *then* the body and certain headers must be signed. How do you use that to justify the assumption that if you *don't* include an sp:SignedParts assertion the same thing is supposed to occur? The writers of the standard specifically stated one case, don't you think they would have specifically stated the other case, too, if that's what they intended?

I did a quick search and found at least one documented example of AsymmetricBinding used only for encrypting one component of the message, only sent in one direction. In this case it's used for just encrypting a UsernameToken: http://publib.boulder.ibm.com/infocenter/wasinfo/v7r0/index.jsp?topic=/com.ibm.websphere.express.doc/info/exp/ae/twbs_configmsglvlpolicyset.html For most people this example would be enough to show that your arguments are wrong, but I suspect you won't be convinced. :-)","08/Oct/10 07:55;gmazza;Your first two questions I answered as well as I could in my immediately preceding response.  I believe your next step is to go to the WS-SecPol WG and get clarification from them to get more ammo before coming back here.

I'm not sure what your example is showing, it just overrides the defaults by -->explicitly<-- signing/encrypting one thing, the UsernameToken--nothing about what happens when you omit the SignedParts/EncryptedParts tags entirely.  Also, nothing one way or the other is being said about the response.  At any rate, when I had earlier showed the Axis2/Rampart example *not* supporting what you had wanted you had dismissed individual implementations as not sufficiently definitive enough on how things should be implemented.
","02/Nov/10 06:48;dsosnoski;The WS-SecPolicy WG does not respond to questions about usage, as far as I've ever seen, so I think your suggestion is not intended to be helpful.

If you're correct that everything should be signed and encrypted by default, and that the standard somehow forgot to mention this seemingly crucial point, then both CXF and all the other stacks I'm aware are broken because they don't do this. If I'm correct that only those components specified by the policy should be signed or encrypted, then the issue is somewhat simpler in that CXF just needs to stop generating a signature block if no components are being signed. Either way, the current behavior is wrong.",,,,,,,,,,,,,,
Update online CXF Architecture Document,CXF-3038,12475854,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,gliesian,gliesian,05/Oct/10 14:37,21/Jan/11 18:19,14/Mar/19 02:29,22/Oct/10 00:29,,,,,,,,,,,,,,,,,,,,,,Documentation,,,,0,,,,,,"The CXF Architecture Guide (http://cxf.apache.org/docs/cxf-architecture.html) needs to be updated.

Some strong suggestions:

(1) The ""Frontends"" section has only one sub-section, and it's empty.  The ""Frontends"" section should discuss JAX-WS, JAX-RS, Simple Frontend and Javascript.  Link to and/or update this page: http://cxf.apache.org/docs/frontends.html.

(2) It would be nice if the ""Data Bindings"" section referenced supported data bindings (e.g., JAXB, XMLBeans, Aegis (2.1), Aegis (2.0.x), MTOM Attachments with JAXB, Service Data Objects (SDO) and SXC*.  Note; Link to and/or update this page: http://cxf.apache.org/docs/databindings.html.

(3) The ""Bindings"" section should be renamed to ""Protocol Bindings"".  There are currently two sections, one on SOAP bindings and an empty on on XML bindings.  Consider sub-sections on SOAP 1.1/1.2 bindings, HTTP 1.1 bindings, Pure XML bindings and CORBA bindings.

(4) Consider adding notes on supported transports to the ""Transports"" section; SOAP over HTTP, SOAP over JMS, XML over HTTP, XML over JMS, CORBA, Servlet, In-VM, SMTP/POP3 via Camel Transport for CXF, TCP via Camel Transport for CXF and Jabber (Experimental) via Camel Transport for CXF.  Note: Also, link to and/or update this page: http://cxf.apache.org/docs/transports.html.
 
(5) The book ""Apache CXF Web Service Development"" by Naveen Balani and Rajeev Hathi (Packt Publishing) has a nice ""CXF Architecture"" section; pages 39-49.  This book should be references and/or compared to the document for alignment purposes (since the  section headers are nearly identical).

Note: Since this is an 'architecture' document, perhaps specific implementation details and related products is outside of scope (e.g., listing specific data binding APIs), but it would still be nice to see.  At a minimum though... the empty, place holder sections of this document should be completed by someone.",,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-10 22:56:58.421,,,no_permission,,,,,,,,,,,,,47163,,,Fri Oct 22 00:30:01 UTC 2010,,,,,,0|i1af7z:,268932,,,,,,,,"10/Oct/10 22:56;bmargulies;Robert,

To repeat what Dan said: like every other Apache project, we're volunteers with varying level of 'day-job' support. We do appreciate suggestions on the doc, but we'd appreciate your actually working on it more.

--benson
","10/Oct/10 23:28;gliesian;I'm trying to learn from the existing CXF documentation.  As I find issues with the material, I believe that I am acting responsibly by raising the issue flag.   As I am not a CXF expert at this time, I cannot comfortably add and/or refine technical content.   However, once my skills mature, I may be able to contribute on nights and weekends.  I did apply for wiki access, so once I get it, I'll make quick and easy refinements as I go along the learning trail.  Thanks. 

I agree with Apache CXF's community comments that having an issue for every web page in progress in not a good idea.... kinda conflicts with the purpose of the wiki.

In regards to this page in general, I added a link to a more complete CXF architecture document for the time being: http://naveenbalani.com/index.php/2010/05/apache-cxf-architecture-overview/.

As such, this issue can be closed.",22/Oct/10 00:30;gliesian;Issue resolved.,,,,,,,,,,,,,,,,,,,,,,,,
Policy references embedded in policy are not processed,CXF-3037,12475845,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dsosnoski,dsosnoski,05/Oct/10 10:15,21/Jan/11 18:14,14/Mar/19 02:29,05/Jan/11 17:50,2.2.10,,,,,,,,,,,,,,,,,2.3.2,,,,WS-* Components,,,,0,,,,,,"WS-Policy allows <wsp:PolicyReference> to be embedded within policy documents, but CXF does not handle these references. Here's an example:

  
  <!-- Policy for symmetric binding, using an ephemeral key generated by the client and
   sent to the server as part of the request, using asymmetric encryption with the server
   public key to secure the symmetric key. -->
  <wsp:Policy wsu:Id=""SymmBinding""
      xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""
      xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:SymmetricBinding>
      <wsp:Policy>
        <sp:ProtectionToken>
          <wsp:Policy>
            <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
              <wsp:Policy>
                <sp:RequireDerivedKeys/>
                <sp:RequireThumbprintReference/>
                <sp:WssX509V3Token10/>
              </wsp:Policy>
            </sp:X509Token>
          </wsp:Policy>
        </sp:ProtectionToken>
        <sp:AlgorithmSuite>
          <wsp:Policy>
            <sp:Basic128Rsa15/>
          </wsp:Policy>
        </sp:AlgorithmSuite>
        <sp:OnlySignEntireHeadersAndBody/>
      </wsp:Policy>
    </sp:SymmetricBinding>
  </wsp:Policy>
  
  <!-- Policy for symmetric binding, using an ephemeral key generated by the client and
   sent to the server as part of the request, using asymmetric encryption with the server
   public key to secure the symmetric key. -->
  <wsp:Policy wsu:Id=""SymmEncr""
      xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:wsp=""http://schemas.xmlsoap.org/ws/2004/09/policy""
      xmlns:wsaw=""http://www.w3.org/2006/05/addressing/wsdl""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""#SymmBinding""/>
    <sp:Wss11>
      <wsp:Policy>
        <sp:MustSupportRefKeyIdentifier/>
        <sp:MustSupportRefThumbprint/>
        <sp:MustSupportRefEncryptedKey/>
      </wsp:Policy>
    </sp:Wss11>
  </wsp:Policy>

When trying to use this policy on the client it causes an NPE inside Neethi:

     [java] WARNING: Interceptor for {http://ws.sosnoski.com/library/wsdl}CXFLibrary#{http://ws.sosnoski.com/library/wsdl}getBook has thrown exception, unwinding now
     [java] java.lang.NullPointerException
     [java]     at org.apache.neethi.AbstractPolicyOperator.normalizeOperator(AbstractPolicyOperator.java:116)
     [java]     at org.apache.neethi.AbstractPolicyOperator.normalize(AbstractPolicyOperator.java:73)
     [java]     at org.apache.neethi.Policy.normalize(Policy.java:64)
     [java]     at org.apache.neethi.Policy.normalize(Policy.java:49)
     [java]     at org.apache.cxf.ws.policy.EffectivePolicyImpl.initialisePolicy(EffectivePolicyImpl.java:134)
     [java]     at org.apache.cxf.ws.policy.EffectivePolicyImpl.initialise(EffectivePolicyImpl.java:86)
     [java]     at org.apache.cxf.ws.policy.PolicyEngineImpl.getEffectiveClientRequestPolicy(PolicyEngineImpl.java:155)
     [java]     at org.apache.cxf.ws.policy.PolicyOutInterceptor.handle(PolicyOutInterceptor.java:110)

The problem here is that CXF passes a null for the policy context when calling the Policy.normalize() method. Just passing the context should be enough to make this work.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-06 20:07:29.322,,,no_permission,,,,,,,,,,,,,47164,,,Sun Oct 10 16:46:07 UTC 2010,,,,,,0|i13yn3:,231242,,,,,,,,"06/Oct/10 20:07;dkulp;
I went ahead and passed the registry into the normalize calls in the areas where I have access to the registry.  Hopefully that will fix it.","09/Oct/10 08:09;dsosnoski;Did you also include these changes in the 2.3.0 code? I've tried this, using the 2.3.0 distribution build (not yet released), and still have the same NPE (though in a different place, which may be because I'm using a different policy sample:

     [java]     at org.apache.neethi.AbstractPolicyOperator.normalizeOperator(AbstractPolicyOperator.java:116)
     [java]     at org.apache.neethi.AbstractPolicyOperator.normalize(AbstractPolicyOperator.java:73)
     [java]     at org.apache.neethi.Policy.normalize(Policy.java:64)
     [java]     at org.apache.neethi.Policy.normalize(Policy.java:49)
     [java]     at org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder.build(AsymmetricBindingBuilder.java:66)
...

Here are the relevant portions of this policy:
  
  <!-- Initiator token policy. -->
  <wsp:Policy wsu:Id=""InitiatorToken"" xmlns:wsu=
      ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      xmlns:wsp=""http://www.w3.org/ns/ws-policy""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:InitiatorToken>
      <wsp:Policy>
        <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient"">
          <wsp:Policy>
            <sp:RequireThumbprintReference/>
          </wsp:Policy>
        </sp:X509Token>
      </wsp:Policy>
    </sp:InitiatorToken>
  </wsp:Policy>
  
  <!-- Recipient token policy. -->
  <wsp:Policy wsu:Id=""RecipientToken"" xmlns:wsu=
      ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      xmlns:wsp=""http://www.w3.org/ns/ws-policy""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:RecipientToken>
      <wsp:Policy>
        <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
          <wsp:Policy>
            <sp:RequireThumbprintReference/>
          </wsp:Policy>
        </sp:X509Token>
      </wsp:Policy>
    </sp:RecipientToken>
  </wsp:Policy>
  
  <!-- Policy for asymmetric binding with the certificate included in the message from
   client to server but only a thumbprint on messages from the server to the client. -->
  <wsp:Policy wsu:Id=""AsymmBinding"" xmlns:wsu=
      ""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      xmlns:wsp=""http://www.w3.org/ns/ws-policy""
      xmlns:sp=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702"">
    <sp:AsymmetricBinding>
      <wsp:Policy>
        <wsp:PolicyReference URI=""#InitiatorToken""/>
        <wsp:PolicyReference URI=""#RecipientToken""/>
        <sp:AlgorithmSuite>
          <wsp:Policy>
            <sp:Basic128Rsa15/>
          </wsp:Policy>
        </sp:AlgorithmSuite>
      </wsp:Policy>
    </sp:AsymmetricBinding>
  </wsp:Policy>
","10/Oct/10 16:46;dkulp;
I was semi-afraid of that.    :-(

In the builders, right now, I didn't have access to the registry or Bus or anything that would allow easy access to the registry.  Thus, since I was trying to get 2.3 out and the initial bug report didn't show any issue there, I left them alone.     I just fixed the issues in the calculation of the effective policies and such which was the stack trace from the initial report.

I'll re-open the issue.  It's definitely a bit more complex as I'll need to pass the registry into the builders and such.",,,,,,,,,,,,,,,,,,,,,,,,
External policy references not supported,CXF-3036,12475844,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dsosnoski,dsosnoski,05/Oct/10 10:08,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 19:59,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,WS-* Components,,,,0,,,,,,"References to external policies in WSDL are not processed properly, at least for relative paths. Here's an example:

  <wsdl:binding name=""LibrarySoapBinding"" type=""wns:Library"">
  
    <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""./username-policy.xml""/>

    <wsdlsoap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>

    <wsdl:operation name=""getBook"">
  
      <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""./symmencr-policy.xml""/>
    
      <wsdlsoap:operation soapAction=""urn:getBook""/>
      
      <wsdl:input name=""getBookRequest"">
        <wsdlsoap:body use=""literal""/>
      </wsdl:input>
      
      <wsdl:output name=""getBookResponse"">
        <wsp:PolicyReference xmlns:wsp=""http://www.w3.org/ns/ws-policy"" URI=""./encrbody-policy.xml""/>
        <wsdlsoap:body use=""literal""/>
      </wsdl:output>
      
    </wsdl:operation>

When running the client, this causes:

     [java] Exception in thread ""main"" javax.xml.ws.soap.SOAPFaultException: String index out of range: -1
     [java]     at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:146)
     [java]     at $Proxy40.getBook(Unknown Source)
     [java]     at com.sosnoski.ws.library.cxf.WebServiceClient.main(WebServiceClient.java:64)
     [java] Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1
     [java]     at java.lang.String.substring(String.java:1768)
     [java]     at org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver.resolveReference(RemoteReferenceResolver.java:49)
     [java]     at org.apache.cxf.ws.policy.attachment.AbstractPolicyProvider.resolveExternal(AbstractPolicyProvider.java:88)
...",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-05 19:59:53.13,,,no_permission,,,,,,,,,,,,,47165,,,Wed Oct 06 09:52:12 UTC 2010,,,,,,0|i0v133:,179149,,,,,,,,"05/Oct/10 19:59;dkulp;
I ported some fixes from trunk that most likely fix this.   Can you verify?   It should have already been working on trunk/2.3.","06/Oct/10 09:52;dsosnoski;I tried this using the 2.3 nightly, and it worked for my test case.",,,,,,,,,,,,,,,,,,,,,,,,,
"Missing Cookies Due to org.apache.cxf.jaxrs.client.AbstractClient#setResponseBuilder(HttpURLConnection, Exchange) line 341",CXF-3035,12475825,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,jolira,jolira,04/Oct/10 23:48,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 22:51,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-RS,,,,0,,,,,,"If you try wget -S www.walmart.com you can see that our tomcat server returns a header which contains ""Set-Cookie:"" multiple times:

jfk@preding:/tmp$ wget -S www.walmart.com
--2010-10-04 16:44:22--  http://www.walmart.com/
Resolving www.walmart.com... 161.170.244.20
Connecting to www.walmart.com|161.170.244.20|:80... connected.
HTTP request sent, awaiting response... 
  HTTP/1.1 200 OK
  Date: Mon, 04 Oct 2010 23:44:22 GMT
  Server: Apache/2.2.15
  Via: HTTP/1.0 nw106 (nw106_6799663104_56977920)
  Set-Cookie: cef.env=PROD; Domain=.walmart.com; Path=/
  Set-Cookie: com.wm.visitor=10789493347; Domain=.walmart.com; Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/
  Set-Cookie: spcf.backup=""|com.wm.visitor:10789493347|""; Version=1; Domain=.walmart.com; Path=/
  Set-Cookie: com.wm.anoncart=107894933471602436; Domain=.walmart.com; Expires=Thu, 01-Oct-2020 23:44:22 GMT; Path=/
  Set-Cookie: spcf.backup=""|com.wm.anoncart:107894933471602436|:|com.wm.visitor:10789493347|""; Version=1; Domain=.walmart.com; Path=/
  Set-Cookie: WMSessionID=0000000456ff25583fcc12af37682dc03fb73f1623a00e60_1286235862759_SSL206_10-15-43-137_1286235862759_10.9_N_; Domain=.walmart.com; Path=/
  Set-Cookie: cef.env=PROD+B++H++D++Y+%3Fcat%3D3891+C+; Domain=.walmart.com; Path=/
  Set-Cookie: com.wm.reflector=""reflectorid:0000000000000000000000@lastupd:1286235862786@firstcreate:1286235862786""; Version=1; Domain=.walmart.com; Path=/
  Cache-Control: private
  Cache-Control: max-age=900
  Last-Modified: Mon, 04 Oct 2010 23:44:22 GMT
  Expires: Mon, 04 Oct 2010 23:44:22 GMT
  Set-Cookie: prefses=NAVPATH~10DcurrentDS0A0|1A0; Domain=.walmart.com; Path=/
  Vary: Accept-Encoding
  Connection: close
  Content-Type: text/html;ISO-8859-1;charset=ISO-8859-1
  Set-Cookie: NSC_xxx.xbmnbsu.dpn-mc=445c13ab3660;path=/
Length: unspecified [text/html]
Saving to: `index.html'

    [   <=>                                                                                                                                 ] 83,335       132K/s   in 0.6s    

2010-10-04 16:44:23 (132 KB/s) - `index.html' saved [83335]

Unfortunately, everything but the first ""Set-Cookie"" is stripped by line 341 in org.apache.cxf.jaxrs.client.AbstractClient#setResponseBuilder(HttpURLConnection, Exchange)

Instead of the current code, which only uses the first value returned by getValue(), it would be great if the next version could iterate through every item in the list.
",any,,,,,,,,,,,,,,,,05/Oct/10 18:29;jolira;cxf-rt-frontend-jaxrs-2.2.10.1.patch;https://issues.apache.org/jira/secure/attachment/12456418/cxf-rt-frontend-jaxrs-2.2.10.1.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-10-05 17:44:18.414,,,no_permission,,,,,,,,,,,,,47166,,,Tue Oct 05 23:55:16 UTC 2010,,,,,,0|i13yf3:,231206,,,,,,,,05/Oct/10 14:28;jolira;A patch for the issue. Please apply!,05/Oct/10 17:44;sergey_beryozkin;thanks for the pointer to where the problem is - will get it fixed this evening,"05/Oct/10 18:29;jolira;Sorry, my first patch only fixes the problem half-way. Here is a better version. This version no longer relies on .split("",""), which breaks for ""Set-Cookie"". I hope you can use this one.","05/Oct/10 21:54;sergey_beryozkin;Hi - thanks for the 2nd patch.
I have a test checking for Allow which has the following format :
Allow: POST,GET

So this change breaks the test expecting the list of 2 values in this example.

Yeah I can see one of those cookies contains a comma in its Expires value;
JAXRS NewCookie does not even support that Expires thing...

What I'll do is that I'll provide a workaround. i.e, I'd explcitly check if it's a SetCookie and then set it as is, otherwise - continue splitting","05/Oct/10 22:51;sergey_beryozkin;Thanks for the patch.

At the moment I ended up with an explicit check for Set-Cookie containing Expires field as it appears it is the only field which may contain embedded "","".
Otherwise the split is done - this is because CXF server would actually return multiple Set-Cookies separated by ',', example, ""a=b;c=d, a1=b1""

Hope this intermediate fix works for you
Sergey","05/Oct/10 23:55;jolira;Sergey,

Yes, this will work. Thank you for your help.

Best regards,

Joachim
",,,,,,,,,,,,,,,,,,,,,
StaxUtils.copy fails on pure DOM comment node,CXF-3034,12475816,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,veithen,veithen,04/Oct/10 22:38,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 17:31,,,,,,,,,,,,,,,,,,2.2.11,,,,Core,,,,0,,,,,,"When StaxUtils.copy is used with an XMLStreamReader created from a DOM tree containing a comment node, it will fail with a NullPointerException:

java.lang.NullPointerException
    at com.ctc.wstx.sw.BufferingXmlWriter.verifyCommentContent(BufferingXmlWriter.java:1467)
    at com.ctc.wstx.sw.BufferingXmlWriter.writeComment(BufferingXmlWriter.java:591)
    at com.ctc.wstx.sw.BaseStreamWriter.writeComment(BaseStreamWriter.java:513)
    at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:477)
    at org.apache.cxf.staxutils.StaxUtils.copy(StaxUtils.java:452)

Note that this only occurs with a pure DOM implementation, not with SAAJ. The reason is that in SAAJ, a comment node also implements org.w3c.dom.Text.

A test case can be found in attachment. The issue occurs with current trunk (r1004461).",,,,,,,,,,,,,,,,,04/Oct/10 22:39;veithen;StaxUtilsCopyTest.java;https://issues.apache.org/jira/secure/attachment/12456336/StaxUtilsCopyTest.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-10-05 17:31:52.26,,,no_permission,,,,,,,,,,,,,47167,,,Tue Oct 05 17:31:52 UTC 2010,,,,,,0|i0sxv3:,166963,,,,,,,,"05/Oct/10 17:31;dkulp;

Thanks for the test case!",,,,,,,,,,,,,,,,,,,,,,,,,,
"Migration Guide links are broke (2.1, 2.2, 2.3) on webpage.",CXF-3027,12475782,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,gliesian,gliesian,04/Oct/10 17:51,11/Oct/10 15:10,14/Mar/19 02:29,05/Oct/10 20:33,,,,,,,,,,,,,,,,,,,,,,Documentation,,,,0,,,,,,"Consider this web page: http://cxf.apache.org/docs/migration-guides.html

These links are broke: 

2.1 Migration Guide: http://cxf.apache.org/docs/21-migration-guide.html
2.2 Migration Guide: http://cxf.apache.org/docs/22-migration-guide.html
2.3 Migration Guide: http://cxf.apache.org/docs/23-migration-guide.html",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-04 18:23:55.335,,,no_permission,,,,,,,,,,,,,47174,,,Tue Oct 05 20:33:28 UTC 2010,,,,,,0|i1af9j:,268939,,,,,,,,"04/Oct/10 18:23;dkulp;

Strange.  The pages exist at the source:
https://cwiki.apache.org/confluence/display/CXF20DOC/Migration+Guides

I'll need to dig through autoexport stuff to figure out where they are going. :-(","05/Oct/10 20:33;dkulp;
Re-exporting the entire space seems to have fixed it.  No idea what confluence issue caused it.",,,,,,,,,,,,,,,,,,,,,,,,,
Response.temporaryRedirect() cannot handle query parameter correctly,CXF-3024,12475770,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,thecoolace,thecoolace,04/Oct/10 15:17,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 17:30,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-RS,,,,0,,,,,,"Consider the following code that wants to redirect to a non-absolute URL containing query parameters:
{code:java}
String cssLink1=""http://yui.yahooapis.com/3.2.0/build/cssreset/reset-min.css""
return Response.temporaryRedirect(UriBuilder.fromPath(""whatever/redirection"").queryParam(""css1"",cssLink1).build()).build();
{code}

The created Location header of the response will contain the following value:
{{http://myserver/app/services/public/whatever/redirection%3Fcss1=http:/yui.yahooapis.com/3.2.0/build/cssreset/reset-min.css}}

IMHO this should be:
{{http://myserver/app/services/public/whatever/redirection?css1=http:/yui.yahooapis.com/3.2.0/build/cssreset/reset-min.css}}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-05 17:30:59.208,,,no_permission,,,,,,,,,,,,,47177,,,Tue Oct 05 17:30:59 UTC 2010,,,,,,0|i13yhr:,231218,,,,,,,,"05/Oct/10 17:30;sergey_beryozkin;this is fixed now, thanks.
Workaround for 2.2.10 :

@Context UriInfo ui;


....

return Response.status(307).header(""Location"", ui.getBaseUriBuilder().path(""/some/path"").queryParam(""css"", ""http://..."").build()).build()

cheers, Sergey",,,,,,,,,,,,,,,,,,,,,,,,,,
"WSDL2Java with Xmlbeans, wrong classpath",CXF-3023,12475766,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sebge2,sebge2,04/Oct/10 14:10,09/Apr/13 15:15,14/Mar/19 02:29,18/Mar/13 20:06,2.2.10,,,,,,,,,,,,,,,,,2.7.4,,,,Tooling,,,,2,,,,,,"I'm trying to generate Java stubs from WSDL. With JAXB the created code is working fine.  So, clients generated from WSDL files can connect to web services.

The configuration of the JAXB generator is:
{code}
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf-version}</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <wsdlRoot>${basedir}/src/main/wsdl</wsdlRoot>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
{code}

When I use Xmlbeans instead of JAXB, the source generation succeed,  but once unit tests are running I got the following exception:
{code}
Caused by: java.lang.ClassNotFoundException: schemaorg_apache_xmlbeans.system.s14C5C2D1E1AB170E2BDAA0B2E05EA32B.TypeSystemHolder
{code}

The plugin configuration is the same (I've also tried to remove the <phase> markup):
{code}
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf-version}</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <defaultOptions>
                                <extraargs>
                                    <!-- look at -->
                                    <!-- http://cxf.apache.org/docs/wsdl-to-java.html -->
                                    <extraarg>-db</extraarg>
                                    <extraarg>xmlbeans</extraarg>
                                </extraargs>
                            </defaultOptions>
                            <wsdlRoot>${basedir}/src/main/wsdl</wsdlRoot>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
{code}

If there is something wrong during the generation, the generation should say something?",,,,,,,,,,,,CXF-3045,,,,,06/Oct/10 09:38;sebge2;Bank.wsdl;https://issues.apache.org/jira/secure/attachment/12456484/Bank.wsdl,06/Oct/10 09:38;sebge2;stack-trace-xbean.txt;https://issues.apache.org/jira/secure/attachment/12456483/stack-trace-xbean.txt,04/Oct/10 14:56;sebge2;stack-trace-xmlbeans-classpath.txt;https://issues.apache.org/jira/secure/attachment/12456288/stack-trace-xmlbeans-classpath.txt,,,,,3.0,,,,,,,,,,,,,,,,,,,,2010-10-04 19:06:03.98,,,no_permission,,,,,,,,,,,,,47178,,,Wed May 25 19:22:51 UTC 2011,,,,,,0|i1afa7:,268942,,,,,,,,"04/Oct/10 19:06;dkulp;
Can you run a ""mvn clean install"" or similar and see if the problem is still there?    One of the ""issues"" with xmlbeans is it tends to generate a different ID for the TypeSystemHolder package thing (the s14C5C2D1E1AB170E2BDAA0B2E05EA32B part) and if you rerun, it sometimes will get a bit confused with mixed versions.

Also, you MAY need to add the target/generated/src/test/resources/ as a resource directory using the <resources> element in your pom.   XMLBeans sticks a bunch of things in there that would be needed.

","06/Oct/10 09:12;sebge2;Yes I always use the clean goal before testing.

As you suggest, the directory target\generated-sources\cxf\schemaorg_apache_xmlbeans is not within the classpath, but XMLObject classes in \target\generated-sources\cxf\com\** are correctly included.

As you suggest:
{code}
    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${basedir}/target/generated-sources/cxf</directory>               
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf-version}</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <defaultOptions>
                                <extraargs>
                                    <!-- look at -->
                                    <!-- http://cxf.apache.org/docs/wsdl-to-java.html -->
                                    <extraarg>-db</extraarg>
                                    <extraarg>xmlbeans</extraarg>
                                </extraargs>
                            </defaultOptions>
                            <wsdlRoot>${basedir}/src/main/wsdl</wsdlRoot>
                            <includes>
                                <include>*.wsdl</include>
                            </includes>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
{code}

Why XMLObjects are included while the directory schemaorg_apache_xmlbeans is not?","06/Oct/10 09:35;sebge2;Forcing the inclusion resolve the class not found, but another strange error occurs (never seen before): 

{code}
SolifeXFireServiceException cannot be processed. This can be caused by the use of JAX-WS-specific types without the JAX-WS service factory bean.
{code}

Note that the same WSDL has been used with JAXB.


The client endpoint like this:
{code}
    <bean id=""solifeWebServiceClientProxy"" class=""org.apache.cxf.jaxws.JaxWsProxyFactoryBean""
          scope=""prototype"" abstract=""true"">
        <property name=""dataBinding"">
            <bean class=""org.apache.cxf.xmlbeans.XmlBeansDataBinding""/>
        </property>
        <property name=""serviceFactory"">
            <bean id=""webServiceFactoryXmlBeans""
                  class=""org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean"" scope=""prototype"">
                <property name=""dataBinding"">
                    <bean class=""org.apache.cxf.xmlbeans.XmlBeansDataBinding""/>
                </property>
                <property name=""serviceConfigurations"">
                    <list>
                        <bean class=""org.apache.cxf.service.factory.DefaultServiceConfiguration""/>
                    </list>
                </property>
            </bean>
        </property>
        <property name=""outInterceptors"">
            <list>
                ...
            </list>
        </property>
    </bean>

<bean id=""offerServiceWrongFactory"" parent=""solifeWebServiceClientProxy"" lazy-init=""true"">
        <property name=""serviceClass"" value=""com.X.OfferService""/>
        <property name=""address"" value=""${ws.base.url}/OfferService?wsdl""/>
        <property name=""outInterceptors"">
            <list />
        </property>
    </bean>
    <bean id=""offerServiceWrong"" factory-bean=""offerServiceWrongFactory"" factory-method=""create"" lazy-init=""true""/>
{code}


Is it possible that the inclusion problem leads to the upper one?","25/May/11 19:22;dkulp;Any chance to get a testcase?   That error is caused by not being able to find the schema type for a message part.    I'm really not sure why that would happen without a wsdl/test case.

",,,,,,,,,,,,,,,,,,,,,,,
Integrating Spring 3 + GenericDAO (Don't repeat the DAO!) + CXF JAX-RS (JAXB Databinding) with a Generic Service Interface ,CXF-3022,12475748,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,sergey_beryozkin,!v4n,!v4n,04/Oct/10 11:20,06/Dec/10 22:48,14/Mar/19 02:29,19/Nov/10 16:06,2.2.10,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,0,,,,,,"Hello everyone,

I'm trying to use a generic interface implementation as a JAX-RS service in order to accomplish basic rest operations for all model data (in the same way that the pattern [GenericDAO|http://www.ibm.com/developerworks/java/library/j-genericdao.html].

The interface:

{code:title=IRestService.java|borderStyle=solid}
public interface IRestService<T, PK extends Long>
{
    T getById(PK id);

    PK add(T instance);
}
{code} 

The generic service implementation:

{code:title=GenericRestServiceImpl.java|borderStyle=solid}
public class GenericRestServiceImpl<T, PK extends Long> implements IRestService<T, PK>
{
    private IGenericDAO<T, PK> iDAO;

    public void setiDAO(IGenericDAO<T, PK> iDAO)
    {
        this.iDAO = iDAO;
    }

    public T getById(PK id)
    {
        return iDAO.read(id);
    }

    public PK add(T instance)
    {
        return iDAO.create(instance);
    }
{code}

The simple POJO I want to send and receive:

{code:title=MobilityUser.java|borderStyle=solid}
@XmlRootElement(name=""MobilityUser"")
public class MobilityUser implements Serializable
{
    private Long id;
    private String login;
    private String nif;

    public MobilityUser()
    {
    }

	// Setters & getters omitted...
}
{code}

The most relevant section of Spring context configuration (applicationContext.xml):

{code:xml}
    <!-- DAO Configuration  (SessionFactory, DataSource, etc. omitted) --> 
    <bean id=""abstractDAO"" class=""org.springframework.aop.framework.ProxyFactoryBean"" abstract=""true"" />
	
    <bean id=""abstractDaoTarget"" class=""com.ica.mobility.persistence.dao.genericdao.GenericDAOHibernate"" abstract=""true"">
        <property name=""sessionFactory"">
            <ref bean=""mobilitySessionFactory""/>
        </property>
    </bean>
	
    <bean id=""userDAO"" parent=""abstractDAO"">
        <property name=""proxyInterfaces"">
            <value>com.ica.mobility.persistence.dao.genericdao.IGenericDAO</value>
        </property>
        <property name=""target"">
            <bean id=""userBean"" parent=""abstractDaoTarget"">
                <constructor-arg>
                    <value>com.ica.mobility.model.bean.MobilityUser</value>
                </constructor-arg>
            </bean>
        </property>
    </bean>
	
    <!-- CXF Configuration -->
    <jaxrs:server id=""genericServer"" modelRef=""classpath:/WEB-INF/model/resources.xml"" abstract=""true"">
        <jaxrs:features>
            <cxf:logging/>
        </jaxrs:features>
    </jaxrs:server>
	
    <bean id=""userServer"" parent=""genericServer"">
        <property name=""address"" value=""/user"" />
        <property name=""serviceBeans"">
            <bean id=""userService"" class=""com.ica.mobility.mobile.service.GenericRestServiceImpl"">
                <property name=""iDAO"">
                    <ref bean=""userDAO""></ref>
                </property>
            </bean>
        </property>
    </bean>
{code}

The JAX-RS model (resources.xml):

{code:xml}
<model xmlns=""http://cxf.apache.org/jaxrs"">
    <resource name=""com.ica.mobility.mobile.service.IRestService"" path=""/"" consumesType=""application/xml"" producesType=""application/xml"">
        <operation name=""getById"" verb=""GET"">
            <param name=""id"" type=""QUERY""/>
        </operation>
        <operation name=""add"" verb=""POST"" path=""/add"">
            <param name=""instance"" type=""REQUEST_BODY"" />
        </operation>
    </resource>
</model>
{code}

There is no problem with GET operation (getById method). However, a runtime exception (NullPointerException) occurs when a POST request is performed. 

Server log with StackTrace:

{code:title=server log|borderStyle=solid}
04-oct-2010 11:43:17 org.apache.cxf.interceptor.LoggingInInterceptor logging
INFO: Inbound Message
----------------------------
ID: 3
Address: /MobilityServer/mobile/user/add
Encoding: ISO-8859-1
Content-Type: application/xml
Headers: {content-type=[application/xml], host=[localhost:8080], Content-Length=[90], user-agent=[Jakarta Commons-HttpClient/3.1], accept-encoding=[gzip,deflate], Content-Type=[application/xml]}
Payload: <MobilityUser>

   <id>5</id>

   <login>Login</login>

   <nif>Nif</nif>

</MobilityUser>
--------------------------------------
Listening for transport dt_shmem at address: tomcat_shared_memory_id
04-oct-2010 11:46:52 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
ADVERTENCIA: Interceptor for {http://service.mobile.mobility.ica.com/}IRestService has thrown exception, unwinding now
java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:554)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:960)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:575)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:540)
        at com.ica.mobility.util.CustomInInterceptor.processRequest(CustomInInterceptor.java:242)
        at com.ica.mobility.util.CustomInInterceptor.handleMessage(CustomInInterceptor.java:77)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:244)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:423)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:139)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
04-oct-2010 11:46:52 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
ADVERTENCIA: Interceptor for {http://service.mobile.mobility.ica.com/}IRestService has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:293)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:423)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:139)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:554)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:960)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:575)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:540)
        at com.ica.mobility.util.CustomInInterceptor.processRequest(CustomInInterceptor.java:242)
        at com.ica.mobility.util.CustomInInterceptor.handleMessage(CustomInInterceptor.java:77)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:244)
        ... 28 more
04-oct-2010 11:46:52 org.apache.cxf.phase.PhaseInterceptorChain unwind
ADVERTENCIA: Exception in handleFault on interceptor org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor@d445e2
org.apache.cxf.interceptor.Fault
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:293)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:423)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:139)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:554)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:960)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:575)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:540)
        at com.ica.mobility.util.CustomInInterceptor.processRequest(CustomInInterceptor.java:242)
        at com.ica.mobility.util.CustomInInterceptor.handleMessage(CustomInInterceptor.java:77)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:244)
        ... 28 more
04-oct-2010 11:46:52 org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver onMessage
GRAVE: Error occurred during error handling, give up!
org.apache.cxf.interceptor.Fault
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:293)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:423)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:139)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:554)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:960)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:575)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:540)
        at com.ica.mobility.util.CustomInInterceptor.processRequest(CustomInInterceptor.java:242)
        at com.ica.mobility.util.CustomInInterceptor.handleMessage(CustomInInterceptor.java:77)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:244)
        ... 28 more
{code}


I hope you have all the information you need.

Cheers,

Ivan
","Spring 3.03, CXF 2.2.10, Apache Tomcat 6.0.26...",604800,604800,,0%,604800,604800,,,,,,,,,,07/Oct/10 09:36;!v4n;SampleGenericCXFApplication_v1.part1.rar;https://issues.apache.org/jira/secure/attachment/12456583/SampleGenericCXFApplication_v1.part1.rar,07/Oct/10 09:42;!v4n;SampleGenericCXFApplication_v1.part2.rar;https://issues.apache.org/jira/secure/attachment/12456584/SampleGenericCXFApplication_v1.part2.rar,08/Oct/10 12:29;!v4n;SampleGenericCXFApplication_v2.part1.rar;https://issues.apache.org/jira/secure/attachment/12456697/SampleGenericCXFApplication_v2.part1.rar,08/Oct/10 12:35;!v4n;SampleGenericCXFApplication_v2.part2.rar;https://issues.apache.org/jira/secure/attachment/12456698/SampleGenericCXFApplication_v2.part2.rar,08/Nov/10 12:44;!v4n;SampleGenericCXFApplication_v2.rar;https://issues.apache.org/jira/secure/attachment/12459055/SampleGenericCXFApplication_v2.rar,07/Oct/10 11:26;!v4n;WebApplication1 (WAR).rar;https://issues.apache.org/jira/secure/attachment/12456589/WebApplication1+%28WAR%29.rar,08/Nov/10 12:50;!v4n;WebApplication1_v2.rar;https://issues.apache.org/jira/secure/attachment/12459056/WebApplication1_v2.rar,7.0,,,,,,,,,,,,,,,,,,,,2010-10-06 21:18:09.611,,,no_permission,,Unknown,,,,,,,,,,,47179,,,Mon Nov 22 09:32:16 UTC 2010,,,,,,0|i0kl9r:,118263,,,,,,,,"06/Oct/10 21:18;sergey_beryozkin;Hi Ivan

I'm sorry it took me few days to investigate this issue. It looks complex enough :-) so I opted for looking at the issues for which
I could find some time and solve fast...

I've tried a basic test with a concrete implementation extending IRestService and I could not get this NPE.
It does look like that as far as the application of the external model is concerned it works fine. that is the correct methods are invoked.

I'm kind of missing a bit how GenericRestServiceImpl<T, PK extends Long> is instantiated.
Besides, I'm bit puzzled by

java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:554)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:960)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:575)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:540)
        at com.ica.mobility.util.CustomInInterceptor.processRequest(CustomInInterceptor.java:242)

do you extend JAXRSInInterceptor ?

By the way, here is the signature of isReadable :

public boolean isReadable(Class<?> type, Type genericType, Annotation[] anns, MediaType mt) {}

so the first argument, 'Class type' is null - which is very strange...

If you could either debug or attach a test project then it would be the fastest way...I'd like to get rid of this NPE asap :-) but
I'll need your help

thanks, Sergey

","07/Oct/10 09:46;!v4n;Hi Sergey,

When I saw that 'Class type' was null I decided to open this JIRA... :)

Attached please find a NetBeans 6.9 Sample Project which has been splitted in two files.

I use SQL Server 2008 as DBMS but let me know if you need i adapt the application for another DBMS (like MySQL).

If you try to make either GET (http://localhost:8080/WebApplication1/sample-servlet/sample?id=1) or POST (http://localhost:8080/WebApplication1/sample-servlet/sample/addworks)  request, there is no exception. However, if you try to make a POST using a method with generic parameter (http://localhost:8080/WebApplication1/sample-servlet/sample/add) a NPE is thrown.

As you can see, I don't extend JAXRSInInterceptor.

Thanks for your reply,

Ivan","07/Oct/10 10:23;sergey_beryozkin;Hi Ivan

thanks for attaching the project. 

I'm just wondering, can you have NetBeans to create a war for you so that I can just drop it Tomcat ?
Also - would it be possible to have only a single method on IRestService and GenericRestServiceImpl ? 

public class GenericRestServiceImpl<T, PK extends Long> implements IRestService<T, PK>
{
    public PK add(T instance)
    {
        return null;
    }
}

and have all the DB dependencies removed from the test project ?

This is because NPE is happening before this method is invoked.
If you could do it during the next couple of hours then I might be able to squeeze a fix in before the release is done...

thanks, Sergey ","07/Oct/10 11:26;!v4n;This is war file without DDBB dependencies. Also, it only has the ""add method"" as you suggested. Tell me if source code which has been modified is needed.","07/Oct/10 13:04;sergey_beryozkin;I'm on it - Dan - please hold off the release till 14.00 your time, if possible :-)","07/Oct/10 17:11;sergey_beryozkin;I haven't managed to fix it so far, I'm afraid I'll have to investigate after the release.

What I've found so far  though is that there's no any concrete type information associated with T.
In all my tests I have static information available in concrete implementations extending generic classes 
or implementing generic interfaces.

This is exactly the reason why I suspect you have methods with PK parameters invoked successfully. Because PK extends Long
and this is what CXF manages to get to...

Can you please for the sake of the test, have 

<T extends MobilityUser, PK extends Long> ?

lets see if it works and if yes then we can try to figure out how to fix it...  ","08/Oct/10 07:36;!v4n;Hi,

Extending T from SampleBean, another exception is thrown (may InvalidCastException be??):

{code:title=Server Log|borderStyle=solid}

08-oct-2010 9:33:32 org.apache.cxf.interceptor.LoggingInInterceptor logging
INFO: Inbound Message
----------------------------
ID: 3
Address: /WebApplication1/sample-servlet/sample/add
Encoding: ISO-8859-1
Content-Type: application/xml
Headers: {content-type=[application/xml], host=[localhost:8080], Content-Length=[135], user-agent=[Jakarta Commons-HttpClient/3.1], accept-encoding=[gzip,deflate], Content-Type=[application/xml]}
Payload: <SampleBean>
        <id>1</id>
        <name>Name</name>
        <surnames>Surnames</surnames>
        <address>Address</address>
        <city>City</city>
</SampleBean>
--------------------------------------
08-oct-2010 9:33:32 org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse
ADVERTENCIA: WebApplicationException has been caught : sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.Class
08-oct-2010 9:33:32 org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback onClose
INFO: Outbound Message
---------------------------
ID: 3
Response-Code: 500
Content-Type: text/xml
Headers: {Date=[Fri, 08 Oct 2010 07:33:32 GMT]}
--------------------------------------
{code}

Any idea?

Ivan","08/Oct/10 11:27;bmargulies;As I recall, I was the guy who originally trucked around the JAX-RS code trying to wire up all the additional reflection needed to make generic work (when it was possible). The intent of the spec was somewhat unclear to me as to what they expected to work, given type erasure.

Given a clear test case I can eventually find some time to help Sergey with this.","08/Oct/10 12:44;!v4n;Thanks Benson. I'm sure your experience will be very helpful. Find attached the simplest test I've done, which is source code of previous war.

Let me know if you need anything else.

Ivan","08/Oct/10 14:26;sergey_beryozkin;Hi Ivan

I think in the previous war the type information is really not available for T - Benson may prove me wrong but I think the fact you have a parameterized 
GenericServiceImpl does not mean the actual type info will be available at runtime if we have Spring instantiating it, etc...

I'm surprised though you;re seeing a class cast exception when you have
<T extends SampleBean, PK extends Long>

given that you do not see it for PK...
But it is probably a bug... ","08/Oct/10 15:12;bmargulies;We're probably indeed out of luck here.

Erasure throws away all the generic type info. Outside of Spring, there's the possibility of reflecting into, say, a field declared with the same type, and thus obtaining  the information in the form of a Type reference. Unless Spring has gotten into the business of creating and handing out full Type references, it will all be gone by the time we get there. However, it will be some days before I can really look at this.
","13/Oct/10 06:44;!v4n;Sorry guys, I've been out a few days. Do you think I should ask a solution in spring forum? 

At the moment, the workaround is not to use generic types. However, this is not the solution which i would like to have.

Thanks,

Ivan","13/Oct/10 08:59;sergey_beryozkin;hi, I committed some fixes yesterday evening.  
So

<T extends SampleBean, PK extends Long>

really has to work now with the latest snapshots.

But

<T, PK extends Long>

probably will not - please ask at the Spring forum - if it is possible that for this case at some point of time Spring is able to provide some type information ?

but

<T extends SampleBean, PK extends Long>

should work now...

","15/Oct/10 07:27;!v4n;hi,

I've opened a new thread at spring forum (  [http://forum.springsource.org/showthread.php?p=324092#post324092] ). As you can see, I'm still waiting for someone to answer me...","04/Nov/10 15:55;sergey_beryozkin;Hi Ivan

I'm going to close this issue given that 

<T extends SampleBean, PK extends Long>

must work in 2.2.11 and 2.3.

There's really nothing we can do if the root resource class
is annotated with <T, PK extends Long> as there's no type info for T is available at runtime.

Please reopen this issue if

<T extends SampleBean, PK extends Long>

does not work with 2.2.11/2.3

thanks","08/Nov/10 10:01;!v4n;Hi guys,

I've tried GenericRestServiceImpl<T extends SampleBean, PK extends Long> implements IRestService<T, PK> with the latest version (2.3) and it still not working... The same exception was thrown.

{code:title=Server Log|borderStyle=solid}
08-nov-2010 10:49:15 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Inbound Message
----------------------------
ID: 2
Address: /WebApplication1/sample-servlet/sample/add
Encoding: ISO-8859-1
Content-Type: application/xml
Headers: {content-type=[application/xml], host=[localhost:8080], Content-Length=[170], user-agent=[Jakarta Commons-HttpClient/3.1], accept-encoding=[gzip,deflate], Content-Type=[application/xml]}
Payload: <SampleBean>
        <id>1</id>
        <name>Name</name>
        <surnames>Surnames</surnames>
        <address>Address</address>
        <city>City</city>
</SampleBean>
--------------------------------------
08-nov-2010 10:49:15 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
ADVERTENCIA: Interceptor for {http://service.sample.ica.com/}IRestService has thrown exception, unwinding now
java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:558)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:966)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:576)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:541)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:458)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:146)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
08-nov-2010 10:49:15 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
ADVERTENCIA: Interceptor for {http://service.sample.ica.com/}IRestService has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:303)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:458)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:146)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:558)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:966)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:576)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:541)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        ... 28 more
08-nov-2010 10:49:15 org.apache.cxf.phase.PhaseInterceptorChain unwind
ADVERTENCIA: Exception in handleFault on interceptor org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor@aa064a
org.apache.cxf.interceptor.Fault
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:303)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:458)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:146)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:558)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:966)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:576)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:541)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        ... 28 more
08-nov-2010 10:49:15 org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver onMessage
GRAVE: Error occurred during error handling, give up!
org.apache.cxf.interceptor.Fault
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:303)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:458)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:146)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
        at java.lang.Class.isAssignableFrom(Native Method)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(InjectionUtils.java:558)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.isReadable(JAXBElementProvider.java:89)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.matchesReaderCriterias(ProviderFactory.java:457)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.chooseMessageReader(ProviderFactory.java:425)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:269)
        at org.apache.cxf.jaxrs.provider.ProviderFactory.createMessageBodyReader(ProviderFactory.java:279)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:966)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:576)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:541)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        ... 28 more
{code}


Ivan","08/Nov/10 10:29;sergey_beryozkin;Hmm...

This NPE should've been fixed. 

I have this test resources which are properly introspected :

@Path(""/books"")
public class GenericEntityImpl2<T extends Book> implements GenericEntity2 {

    private T book;
    
    @POST
    public void postEntity(T object) {
        book = object;
    }
    
    public T getEntity() {
        return book;
    }
}

public interface GenericEntity2<T extends Book> {
} 

This works if I do

public class GenericEntityImpl2<T extends Book> implements GenericEntity2<T> as well...

Are you sure no 2.2.10 or old 2.3-SNAPSHOT is visible ?

I know you've attached quite a few attachements :-), but if it is still an issue then please attach a simple war (no DB dependencies) : 
resource class and the interface, plus a SampleBean class, and the source for them as well

thanks, Sergey","08/Nov/10 13:14;!v4n;Hi,

The NPE has been fixed. However, a WebApplicationException is thrown... (and caught)

{code:title=Server Log|borderStyle=solid}
08-nov-2010 13:24:25 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Inbound Message
----------------------------
ID: 1
Address: /WebApplication1/sample-servlet/sample/add
Encoding: ISO-8859-1
Content-Type: application/xml
Headers: {content-type=[application/xml], host=[localhost:8080], Content-Length=[170], user-agent=[Jakarta Commons-HttpClient/3.1], accept-encoding=[gzip,deflate], Content-Type=[application/xml]}
Payload: <SampleBean>
        <id>1</id>
        <name>Name</name>
        <surnames>Surnames</surnames>
        <address>Address</address>
        <city>City</city>
</SampleBean>
--------------------------------------
08-nov-2010 13:24:25 org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse
ADVERTENCIA: WebApplicationException has been caught : sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.Class
08-nov-2010 13:24:25 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Outbound Message
---------------------------
ID: 1
Response-Code: 500
Content-Type: text/xml
Headers: {Date=[Mon, 08 Nov 2010 12:24:25 GMT]}
{code} 

I've attached the war/sources with no DDBB dependencies and only the necessary libraries.

As you can see, I use XML model resources instead of annotations.

Thanks!

Ivan
","17/Nov/10 23:06;sergey_beryozkin;Ok, hopefully it is really fixed - can you please verify it with 2.4.0-SNAPSHOT  ?

many thanks","18/Nov/10 09:02;!v4n;I've just checked it with 2.4.0-SNAPSHOT. Now the POST method works properly! However, the GET method throws a RuntimeException (may be something that not works with PK extends Long...)  


{code:title=Server Log|borderStyle=solid}
18-nov-2010 9:56:41 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Inbound Message
----------------------------
ID: 4
Address: /WebApplication1/sample-servlet/sample/1
Content-Type: 
Headers: {host=[localhost:8080], user-agent=[Jakarta Commons-HttpClient/3.1], accept-encoding=[gzip,deflate], Content-Type=[null]}
--------------------------------------
18-nov-2010 9:56:41 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
ADVERTENCIA: Interceptor for {http://service.sample.ica.com/}GenericRestServiceImpl has thrown exception, unwinding now
java.lang.RuntimeException: No type can be found at position 1
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getType(InjectionUtils.java:222)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:210)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:217)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getSuperType(InjectionUtils.java:130)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:536)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:461)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:149)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
18-nov-2010 9:56:41 org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
ADVERTENCIA: Interceptor for {http://service.sample.ica.com/}GenericRestServiceImpl has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: No type can be found at position 1
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:303)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:461)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:149)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: No type can be found at position 1
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getType(InjectionUtils.java:222)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:210)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:217)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getSuperType(InjectionUtils.java:130)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:536)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        ... 24 more
18-nov-2010 9:56:41 org.apache.cxf.phase.PhaseInterceptorChain unwind
ADVERTENCIA: Exception in handleFault on interceptor org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor@120e870
org.apache.cxf.interceptor.Fault: No type can be found at position 1
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:303)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:461)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:149)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: No type can be found at position 1
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getType(InjectionUtils.java:222)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:210)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:217)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getSuperType(InjectionUtils.java:130)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:536)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        ... 24 more
18-nov-2010 9:56:41 org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver onMessage
GRAVE: Error occurred during error handling, give up!
org.apache.cxf.interceptor.Fault: No type can be found at position 1
        at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:67)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:303)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:461)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:149)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: No type can be found at position 1
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getType(InjectionUtils.java:222)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:210)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getActualType(InjectionUtils.java:217)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getSuperType(InjectionUtils.java:130)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:536)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        ... 24 more
{code}

I feel we are very close to the solution. Sergey good job!","18/Nov/10 09:45;sergey_beryozkin;Hi - thanks for the fast feedback.
I was absolutely sure the exception you are reporting was also addressed - I did see it during the testing and I have a test doing GET,

see

http://svn.apache.org/viewvc?rev=1036258&view=rev

Let me verify it again on my end and please double check on your end as well

cheers, Sergey","18/Nov/10 12:21;sergey_beryozkin;It definitely works on my side. The problem is that the 2.4.0-SNAPSHOT build did not finish yesterday.
Can you try and checkout the trunk source and just do
'mvn -Pfastinstall' then go to distribution/bundles/jaxrs and build and cp it into your webapp lib ? You'd need to remove a soap import in
the application-context.xml though. This will take just 15 mins max

thanks, Sergey","18/Nov/10 12:55;!v4n;Hi Sergey, 

Currently I have several fronts that keep me busy. As soon as possible, I'll go for it...

cheers,

Ivan","19/Nov/10 14:08;!v4n;Hi!

I've followed your instructions and i've checked again with the resulting jar.GET and POST methods both work properly with T extends SampleBean. However, if we try to use T extends GenericBean while SampleBean extends GenericBean, a JAXB exception is throwed.

{code:GenericRestServiceImpl.java|borderStyle=solid}
public class GenericRestServiceImpl<T extends GenericBean, PK extends Long> implements IRestService<T, PK>
{

    private T entity = null;

    @Override
    public T getById(PK id)
    {
        return this.entity;
    }

    @Override
    public PK add(T instance)
    {
        this.entity = instance;
        return null;
    }

    // Other methos omitted
}
{code} 

{code:SampleBean.java|borderStyle=solid}
@XmlRootElement
public class SampleBean extends GenericBean
{
    private String city;

    public SampleBean()
    {
    }

    public String getCity()
    {
        return city;
    }

    public void setCity(String city)
    {
        this.city = city;
    }
}
{code} 

{code:GenericBean.java|borderStyle=solid}
@XmlRootElement
public class GenericBean implements Serializable
{
    private Long id;
    private String name;
    private String surnames;
    private String address;

    public String getAddress()
    {
        return address;
    }

    public void setAddress(String address)
    {
        this.address = address;
    }

    public Long getId()
    {
        return id;
    }

    public void setId(Long id)
    {
        this.id = id;
    }

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public String getSurnames()
    {
        return surnames;
    }

    public void setSurnames(String surnames)
    {
        this.surnames = surnames;
    }

}
{code} 

{code:Server Log|borderStyle=solid}
19-nov-2010 15:04:46 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Inbound Message
----------------------------
ID: 6
Address: /WebApplication1/sample-servlet/sample/
Encoding: ISO-8859-1
Content-Type: application/xml
Headers: {content-type=[application/xml], host=[localhost:8080], Content-Length=[145], user-agent=[Jakarta Commons-HttpClient/3.1], accept-encoding=[gzip,deflate], Content-Type=[application/xml]}
Payload: <sampleBean>
   <address>Address</address>
   <id>2</id>
   <name>Name</name>
   <surnames>Surnames</surnames>
   <city>City</city>
</sampleBean>
--------------------------------------
19-nov-2010 15:04:46 org.apache.cxf.jaxrs.provider.AbstractJAXBProvider handleJAXBException
ADVERTENCIA: javax.xml.bind.UnmarshalException: unexpected element (uri:"""", local:""sampleBean""). Expected elements are <{}genericBean>
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:642)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:254)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:249)
        at com.sun.xml.bind.v2.runtime.unmarshaller.Loader.reportUnexpectedChildElement(Loader.java:116)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader.childElement(UnmarshallingContext.java:1049)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext._startElement(UnmarshallingContext.java:478)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.startElement(UnmarshallingContext.java:459)
        at com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector.startElement(SAXConnector.java:148)
        at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:501)
        at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:400)
        at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:626)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3103)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
        at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
        at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
        at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:211)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:184)
        at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:137)
        at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:184)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.unmarshalFromInputStream(JAXBElementProvider.java:224)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.doUnmarshal(JAXBElementProvider.java:195)
        at org.apache.cxf.jaxrs.provider.JAXBElementProvider.readFrom(JAXBElementProvider.java:166)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBody(JAXRSUtils.java:981)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:581)
        at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:546)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:230)
        at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:88)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:247)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:113)
        at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:97)
        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:461)
        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:149)
        at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:148)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:393)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
        at java.lang.Thread.run(Thread.java:619)

19-nov-2010 15:04:46 org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper toResponse
ADVERTENCIA: WebApplicationException has been caught : unexpected element (uri:"""", local:""sampleBean""). Expected elements are <{}genericBean>
19-nov-2010 15:04:46 org.apache.cxf.interceptor.AbstractLoggingInterceptor log
INFO: Outbound Message
---------------------------
ID: 6
Response-Code: 500
Content-Type: text/plain
Headers: {Content-Type=[text/plain], Date=[Fri, 19 Nov 2010 14:04:46 GMT]}
Payload: JAXBException occurred : unexpected element (uri:"""", local:""sampleBean""). Expected elements are <{}genericBean>. 
--------------------------------------
{code} 

thanks, 

Ivan","19/Nov/10 16:05;sergey_beryozkin;Thanks Ivan. I'm closing this JIRA now.

The issue you are reporting is entirely in the JAXB domain.
Please add either @XmlSeeAlso({list of classes}) to GenericBean or may be introduce a JAXB ObjectFactory - the latter option is probably better

cheers, Sergey","22/Nov/10 07:59;!v4n;I really apreciate your work. Will this issue be included in 2.3.1? If not, could you tell me when the 2.4.0 have been planned to be released?

Many thanks Sergey!

cheers,

Ivan","22/Nov/10 09:32;sergey_beryozkin;Hi Ivan - yes, the relevant fixes have also been merged to 2.3.1-SNAPSHOT and 2.2.12-SNAPSHOT. 

By the way what you are working upon seems like a very interesting project. If you could update us on how it is going in some time 
or blog about it then it would be perfect.

thanks, Sergey   "
Mailing list link doesn't resolve,CXF-3014,12475627,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,gliesian,gliesian,01/Oct/10 15:03,11/Oct/10 14:57,14/Mar/19 02:29,01/Oct/10 15:44,,,,,,,,,,,,,,,,,,Invalid,,,,,,,,0,,,,,,"The mailing list link (http://cxf.apache.org/CXF/mailing-lists.html) from this page (http://cxf.apache.org/docs/index.html), doesn't resolve.

I would like to use the mailing list.

Thanks.",,300,300,,0%,300,300,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-01 15:44:51.652,,,no_permission,,,,,,,,,,,,,47187,,,Fri Oct 01 15:44:51 UTC 2010,,,,,,0|i140c7:,231517,,,,,,,,01/Oct/10 15:44;dkulp;Fixed the links.  Should sync in an hour or so.,,,,,,,,,,,,,,,,,,,,,,,,,,
http://cxf.apache.org has broken links.,CXF-3012,12475621,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,gliesian,gliesian,01/Oct/10 14:30,21/Jan/11 18:25,14/Mar/19 02:29,22/Oct/10 00:42,,,,,,,,,,,,,,,,,,Invalid,,,,Documentation,,,,0,,,,,,"http://cxf.apache.org has numerous internal broken links (not just from the main page).

Some of these links (URLs) are exposed through the associated web pages.

Consider cleaning up the links.

Note: Linkchecker is free tool (URL validator) that checks websites for broken links:
http://linkchecker.sourceforge.net/.  This can be used in assistance of the
cleanup.

Thanks.

",,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,47189,,,Fri Oct 22 00:42:57 UTC 2010,,,,,,0|i1afbb:,268947,,,,,,,,"22/Oct/10 00:42;gliesian;Broken links are being resolved as they are discovered.

As such, this issue can be closed.",,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Xml Schema 1.4.6,CXF-3006,12475011,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,bmargulies,sebge2,sebge2,24/Sep/10 07:46,11/Oct/10 14:46,14/Mar/19 02:29,30/Sep/10 21:14,2.2.10,2.2.6,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-WS Runtime,,,,0,,,,,,"When CXF is publishing web services, the following exception occurs:

{code}
Caused by: java.lang.NullPointerException
        at org.apache.ws.commons.schema.utils.NamespaceMap.getNamespaceURI(NamespaceMap.java:47)
        at org.apache.ws.commons.schema.SchemaBuilder.getRefQName(SchemaBuilder.java:587)
        at org.apache.ws.commons.schema.SchemaBuilder.getRefQName(SchemaBuilder.java:566)
        at org.apache.ws.commons.schema.SchemaBuilder.handleElement(SchemaBuilder.java:1406)
{code}

If an XML prefix is used without being declared, that exception occurs. 

In the following sample, the prefix is ""pel"" and it's correctly declared: 

{code}
<xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:pel=""http://www.X.com/is/xml/core/model/thirdparty/personlight"" 
xmlns:pol=""http://www.X.com/is/xml/core/model/policy"" xmlns:cov=""http://www.X.com/is/xml/traditionallife/model/offer/coverage"" 
xmlns:prd=""http://www.X.com/is/xml/traditionallife/model/product"" xmlns:ind=""http://www.X.com/is/xml/core/model/indexation"" 
targetNamespace=""http://www.X.com/is/xml/traditionallife/model/policy"" elementFormDefault=""qualified"">
{code}

Unfortunately, there is a space in one of the usage of ""pel"":
{code}
<xsd:element name=""prospect"" type="" pel:PersonLight"" />
{code}

Removing the space before the prefix avoids to have the exception.


That bug is corrected in the newest version of Xml schema:
{code}
        <dependency>
            <groupId>org.apache.ws.commons.schema</groupId>
            <artifactId>XmlSchema</artifactId>
            <version>1.4.6</version>
        </dependency>
{code}


Path to the dependency:
[INFO] +- com.bsb.sf.integration:bsb-sf-cxf-core-integration:jar:ws-migration-1-SNAPSHOT:compile
[INFO] |  +- org.apache.cxf:cxf-rt-frontend-jaxws:jar:2.2.6:compile
[INFO] |  |  +- org.apache.cxf:cxf-api:jar:2.2.6:compile
[INFO] |  |  |  +- org.apache.ws.commons.schema:XmlSchema:jar:1.4.5:compile

Note that XmlSchema 1.4.5 is still present in the latest release.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-24 11:09:24.047,,,no_permission,,,,,,,,,,,,,47195,,,Thu Sep 30 21:14:39 UTC 2010,,,,,,0|i13ye7:,231202,,,,,,,,24/Sep/10 11:09;bmargulies;The plan is to upgrade to 1.4.7 as soon as it finishes getting releases.,"30/Sep/10 21:14;dkulp;
Upgrade to newly released 1.4.7",,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent HTTP response code 202 returned for WS-RM piggybacked Ack response message,CXF-3004,12474602,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ay,ay,20/Sep/10 15:14,11/Oct/10 14:46,14/Mar/19 02:29,30/Sep/10 21:12,2.2.10,2.2.9,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,"I originally posted this issue on cxf-dev mailing list in last june.
http://mail-archives.apache.org/mod_mbox/cxf-dev/201006.mbox/%3CAANLkTikVG6ULDcj9gkrnfGcks90S5zVcYDrZ79sKxI9G@mail.gmail.com%3E

I didn't see any response and unfortunately, I also forgot to follow up on this problem. The problem is present in the recently released 2.2.10. I observed this problem in 2.2.9, 2.2.10, 2.2.11-SNAPSHOT, and 2.3.0-SNAPSHOT.

The problem description and possible solutions to fix this issue are given below.

Problem
When oneway call is received at the server and gets rebased, its response message is marked as a partial response. The response code of this partial response message is automatically set to 202. 

This behavior of the CXF implementation causes interoperability problems for a WS-RM scenario with a non-addressable client (i.e., the
client that needs to receive WS-RM acknowledgement messages in the piggybacked HTTP 200 response). As the response code 202 indicates no
presence of a valid SOAP envelope, WS-RM acknowledgement messages are not correctly processed at those client implementations that follow this rule. 

I think there are several approaches in fixing this issue. One option is to revert the status code to 200 in RMSoapInterceptor when the response message must be filled with the relevant WS-RM properties. I tested this option with 2.2.9, 2.2.10, and 2.2.11-SNAPSHOT, and it works fine.

Concretely, I modified RMSoapInterceptor to revert the http response code to 200 when the rm header is filled with the relevant rm properties. 

In particular, I added the following lines in the encode method of  org.apache.cxf.ws.rm.soap.RMSoapInterceptor

              }
              Node node = hdr.getFirstChild();
+             if (node != null && MessageUtils.isPartialResponse(message)) {
+                 // make sure the ack response is returned as HTTP 200 and not 202
+ //              message.put(Message.PARTIAL_RESPONSE_MESSAGE, null);
+                 message.put(Message.RESPONSE_CODE, HttpURLConnection.HTTP_OK);
+             }
              while (node != null) {
                  Header holder = new Header(new QName(node.getNamespaceURI(), node.getLocalName()), node);
                  header.add(holder);

For 2.3.0-SNAPSHOT, however, this change alone does not solve the problem because  org.apache.cxf.transport.http.AbstractHTTPDestination always
overwrites the http response code for the partial response message in its updateResponeHeaders method. 

So, in order to avoid this overwriting, I needed to comment out this part  shown below in the updateResponseHeader shown below.

      protected void updateResponseHeaders(Message message) {
!         // setting the response to 202 here breaks the ws-rm piggybacked ack response
! //        if (MessageUtils.isPartialResponse(message)) {
! //            message.put(Message.RESPONSE_CODE, HttpURLConnection.HTTP_ACCEPTED);
! //        }
          Map<String, List<String>> responseHeaders =
              CastUtils.cast((Map)message.get(Message.PROTOCOL_HEADERS));
          if (responseHeaders == null) {

Alternatively, we could remove the partial response flag of this response message at RMSoapInterceptor so that the updateResponseHeaders method would not overwrite the response status. However, this interferes with another part of the AbstractHTTPDestination class and this approach will require additional changes in this class. However, it was not clear to me what exactly the semantic definition of the partial response message should be in the context of the WS-RM protocol. So I did not pursue this approach.

Best Regards, 
Aki",,,,,,,,,,,,,,,,,20/Sep/10 16:19;ay;cxf-3004-fixes.zip;https://issues.apache.org/jira/secure/attachment/12455051/cxf-3004-fixes.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,47196,,,Mon Sep 20 16:19:43 UTC 2010,,,,,,0|i13ybj:,231190,,,,,,,,"20/Sep/10 16:19;ay;as my code fragment text in the above description was garbled,
attaching the diffs and the modified java files for 2.2.x and 2.3.x for better references.
",,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2java not adding partName to @WebParam for header,CXF-3000,12474330,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,16/Sep/10 22:06,11/Oct/10 14:46,14/Mar/19 02:29,16/Sep/10 23:07,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,,,,,0,,,,,,,,,,,,,,,,CXF-2998,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47200,,,2010-09-16 22:06:43.0,,,,,,0|i0v26v:,179328,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unwrapped responses with 2 or more elements and -exsh throws exception on request,CXF-2998,12474307,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,justinlindh,justinlindh,16/Sep/10 18:37,11/Oct/10 14:46,14/Mar/19 02:29,16/Sep/10 23:09,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.11,2.3,,,,,,,0,,,,,,"This JIRA incident was created by suggestion from the Nabble CXF Forums in the following thread: http://cxf.547215.n5.nabble.com/Problem-with-unwrapped-responses-containing-multiple-elements-td2841497.html#a2841497

Essentially, if a message is unwrapped and contains multiple response elements, a valid XML request will trigger the following exception in the server:
Sep 16, 2010 12:15:44 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
WARNING: Application {urn:wsdl.test.cxf.com}WSTestService#{urn:wsdl.test.cxf.com}Test has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: wrong number of arguments while invoking public void com.cxf.test.wsdl.WSTestPortTypeImpl.test(com.cxf.test.messages.ClientInfoHeader,javax.xml.ws.Holder,javax.xml.ws.Holder) with params [].
        at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:159)
        at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:86)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:133)
        at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:60)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:244)
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:311)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:275)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:70)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
        at org.mortbay.jetty.handler.HandlerList.handle(HandlerList.java:49)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:326)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.IllegalArgumentException: wrong number of arguments
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:173)
        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:89)
        ... 28 more

CXF fails to find the matching function prototype for the corresponding request in this case. Note that this does work as expected if the ""-exsh"" switch isn't used; extracting SOAP headers seems to affect whether CXF will properly route the request or not.",CXF 2.3-SNAPSHOT (2.2.10 also tested with identical results) running inside of a Jetty 6 container on Ubuntu Linux 10.10.,,,,,,,,,,,,,,,,16/Sep/10 18:40;justinlindh;TestMessages.xsd;https://issues.apache.org/jira/secure/attachment/12454788/TestMessages.xsd,16/Sep/10 18:40;justinlindh;cxf-unwrap-bug.wsdl;https://issues.apache.org/jira/secure/attachment/12454789/cxf-unwrap-bug.wsdl,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,47201,,,Thu Sep 16 18:40:41 UTC 2010,,,,,,0|i13ydb:,231198,,,,,,,,"16/Sep/10 18:40;justinlindh;The WSDL/XSD files used to reproduce this at a minified level are attached. The following is the ant task I'm using:
      <java classname=""org.apache.cxf.tools.wsdlto.WSDLToJava"" fork=""true"">
         <arg value=""-exsh""/>
         <arg value=""true""/>
         <arg value=""-verbose""/>
         <arg value=""-d""/>
         <arg value=""${target.gen.wsapi.dir}""/>
         <arg value=""-classdir""/>
         <arg value=""${target.classes.wsapi.dir}""/>
         <arg value=""${test.wsdl.location}""/>
         <classpath>
            <path refid=""cxf.classpath""/>
         </classpath>
      </java>

If any other files would be helpful, please let me know and I'll be happy to also attach them.",,,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAX-RS not thread safe when accessing multiple destinations concurrently ,CXF-2997,12474293,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,,adouma,adouma,16/Sep/10 16:05,11/Oct/10 14:46,14/Mar/19 02:29,03/Oct/10 20:54,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-RS,Transports,,,0,,,,,,"If a (single) JAX-RS service is invoked concurrently for different destinations, the CXF ServletController and ServletTransportFactory implementations override the current Destination state between these invocations.
I have created a simple test web application using Spring to expose this problem.

My example ServiceImpl.java looks like:

@Path(""/myservice/"")
@Produces(""application/xml"")
public class ServiceImpl {

  volatile boolean locked;

  @GET
  @Path(""/uris"")
  @Produces(""text/plain"")
  public String getUris(@Context UriInfo uriInfo) {
    StringBuilder uris = new StringBuilder(""BaseUri on entry: ""+uriInfo.getBaseUri().toString()).append(""\n"");
    try {
      while (locked) {
        Thread.sleep(1000);
      }
    }  
    catch (Exception x) {}
    return uris.append(""BaseUri on exit : "" + uriInfo.getBaseUri().toString()).append(""\n"").toString();
  }
    
  @GET
  @Path(""/lock"")
  @Produces(""text/plain"")
  public String lock() {
    locked = true;
    return ""locked"";
  }

  @GET
  @Path(""/unlock"")
  @Produces(""text/plain"")
  public String unlock() {
    locked = false;
    return ""unlocked"";
  }

And in my web.xml I defined two CXFServlet mappings as follows:

    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/one/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/two/*</url-pattern>
    </servlet-mapping>

Finally, in Spring ApplicationContext.xml I setup the jaxrs server like this:

    <jaxrs:server id=""myService"" address=""/"">
        <jaxrs:serviceBeans>
            <ref bean=""serviceImpl"" />
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key=""xml"" value=""application/xml"" />
        </jaxrs:extensionMappings>
    </jaxrs:server>

    <bean id=""serviceImpl"" class=""service.ServiceImpl"" />

As can be seen from the ServicesImpl.java, I used a trick to temporarily ""lock"" and ""unlock"" a call to /myservice/uris from another request using /myservice/lock and /myservice/unlock.

Without locking, a call to http://localhost:8085/one/myservice/uris produces the expected following result:

  BaseUri on entry: http://localhost:8085/one/
  BaseUri on exit : http://localhost:8085/two/

However, if I first call http://localhost:8085/one/myservice/lock, then http://localhost:8085/one/myservice/uris (blocked), and finally http://127.0.0.1:8085/two/myservice/unlock (note the different hostname 127.0.0.1 and servletPath /two) I get the following result:

  BaseUri on entry: http://localhost:8085/one/
  BaseUri on exit : http://127.0.0.1:8085/two/

Clearly, UriInfo.getBaseURI() isn't thread safe as is shown above.

After debugging a bit the current (CXF 2.2.10) implementation of the ServletController and ServletTransportFactory, it looks like the ServletController.updateDests(HttpServletRequest) method and the ServletTransportFactory as a whole don't maintain resolved Destination state isolated per request.

Our CXF (JAX-RS) application exposes the same REST service to be called from many different addresses (hosts) as well as upfront unknown servlet paths, this really is a blocking issue.
To be more concrete, we have to use a request wrapper to dynamically ""mount"" the same rest service for different urls (its a front end for a unlimited hierarchical resources repository). 

Is there an easy way to protect JAX-RS service interactions from concurrent invocations, e.g. by using special configurations, or is this indeed a serious bug which will have to be fixed first? 

",,,,,,,,,,,,,,,,,16/Sep/10 16:09;adouma;cxf-rest-test.tar.gz;https://issues.apache.org/jira/secure/attachment/12454777/cxf-rest-test.tar.gz,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-16 17:09:21.934,,,no_permission,,,,,,,,,,,,,47202,,,Thu Sep 30 14:40:27 UTC 2010,,,,,,0|i0uxxz:,178640,,,,,,,,"16/Sep/10 16:09;adouma;Simple maven test project to expose the problem.

To compile and start the test webapp just execute:
  $mvn jetty:run 

Then from two different browser windows invoke the following requests:

  1) http://127.0.0.1:8085/two/myservice/lock (browser window 1)
  2) http://localhost:8085/one/myservice/uris (browser window 2)
  3) http://127.0.0.1:8085/two/myservice/unlock (browser window 1)

Resulting output from browser window 2:

  BaseUri on entry: http://localhost:8085/one/
  BaseUri on exit : http://127.0.0.1:8085/two/","16/Sep/10 17:09;sergey_beryozkin;I believe it is an old and known issue with overlapping Servlet Destinations, in fact there was a patch proposed awhile back on the users list. We'll need to resurrect it,

in mean time, what the following should fix it :

1. Have a single servlet mapping

<servlet-mapping>
<servlet-name>CXFServlet</servlet-name>
<url-pattern>/*</url-pattern>
</servlet-mapping>

2. Have multiple jaxrs endpoint definitions linking to the same service bean with unique address values :

<jaxrs:server id=""myService"" address=""/one"">
<jaxrs:serviceBeans>
<ref bean=""serviceImpl"" />
</jaxrs:serviceBeans>
</jaxrs:server>

<jaxrs:server id=""myService"" address=""/two"">
<jaxrs:serviceBeans>
<ref bean=""serviceImpl"" />
</jaxrs:serviceBeans>
</jaxrs:server>


This is nearly identical to your original setup, but instead we just push the support for multiple contexts down to the beans.xml

I'm nearly sure the same trick would have to be employed for jaxws services in a similar setup

let us know if it works for you.

cheers, Sergey 
","16/Sep/10 22:14;adouma;Hi Sergey, thanks for the reply.

Too bad but your solution doesn't work for us, for two reasons:

a) Defining multiple endpoint definitions only is feasible if all potential endpoint addresses would be known upfront (and are just a few).
But for our application this won't work as we have a potentially unlimited number of endpoint addresses, which also can be created/added at runtime (after CXF startup).
Our application provides a REST api on top of a hierarchical (path based) repository of resources.
From the initially incoming request (pathinfo) we first determine the longest path matching an existing ""resource"" within our repository. The remainder of the pathinfo (suffix) is (assumed to be) the target REST api destination.
Once this is determined we create a requestwrapper and modify the servlet path to represent our actual repository resource and the remainder as new pathinfo for the CXFServlet, and finally we forward to the CXFServlet.
To make this work, of course we only can use a single server entrypoint address for all possible CXF requests.
Defining all potential entrypoint addresses upfront is furthermore technically impossible as new repository resources can be created any time.
So far it all worked pretty well, with non-overlapping requests that is, but now it fails miserably when different ""resource paths"" are accessed concurrently. 

b) To make things even more complicated, our application furthermore can be accessed from unknown amount of hosts (well: they are ""known"" but also can be dynamically added at runtime). 
So, just using a single CXFServlet mapping with multiple endpoint definitions still won't work, even if we only had a few fixed endpoint addresses.
As you can already test with the example application I uploaded, even going through the same endpoint but with a different hostname screws up the internal state.
When executing the following requests in order:

  1) http://127.0.0.1:8085/one/myservice/lock (browser window 1)
  2) http://localhost:8085/one/myservice/uris (browser window 2)
  3) http://127.0.0.1:8085/one/myservice/unlock (browser window 1)

the following output is the result (browser window 2):

  BaseUri on entry: http://localhost:8085/one/
  BaseUri on exit : http://127.0.0.1:8085/one/

So, I think we'll need a real fix to solve concurrent requests with overlapping destinations.
I've already looked and searched in both the users and dev mailing list but haven't been able yet to find the (old) patch you are referring to.
I'm willing to spend time investing this further and come up with a new patch if needed, but any help and pointer to this ""old issue+patch"" would be very welcome!

Regards,

Ate","17/Sep/10 16:51;sergey_beryozkin;Thanks, I'll need to look into it asap - I'll get back to you in the next few days - not able to investigate during the day at the moment, and we'll see what is the best way forward is, it will need to be fixed for 2.3/2.2.11","18/Sep/10 11:50;adouma;That would be great, thanks!","26/Sep/10 21:29;sergey_beryozkin;This is the initial attempt to fix it :

http://svn.apache.org/viewvc?rev=1001520&view=rev 

If one has many servlets 'binding' to the same destination then one has to set either ""disable-address-updates"" servlet parameter on each servlet to true or call setDisableAddressUpdates on CXFServlet/CXFNonSpringServlet.

Perhaps, another and better solution is to introduce a thread local storage and associate it with Destination and completely disable the address overwrites but I thought that with the CXF 2.3 release coming close this change would be a bit unsafe - we'd just not know what we'd break.

Any other ideas and comments are welcome. 
Please verify if this commit fixes the problem. We can get a proper fix once we evaluate what side-effects are possible...  ","30/Sep/10 09:54;adouma;Hi Sergey,

I finally found time to test your fix, for which I tried both the 2.2.x-fixes branch and 2.3.0-SNAPSHOT trunk.

With the 2.2.x-fixes branch, I ran my test webapp as previously attached to this issue (adjusted to use cxf 2.2.11-SNAPSHOT) and adding init-param disable-address-updates=true on CXFServlet.
This now seems to works!
Note, even if you only have one servlet (mapping) configured this disable-address-updates parameter is required to be set if you access the endpoints through multiple host names (as localhost and 127.0.0.1 in my test app).

The current 2.3.0-SNAPSHOT trunk I couldn't test because it fails to build...
Note: I first (had to) build the cxf-build-utils and cxf-xjc-builds as the current apache snapshot repository seems not to be up to date. 
Thereafter it get a compilation error on the generated cxf-api sources: 

  [...]/cxf-2.3.0-SNAPSHOT/api/src/main/java/org/apache/cxf/wsdl/TExtensibilityElementImpl.java:[31,12] cannot find symbol
    symbol: class TExtensibilityElement
    extends TExtensibilityElement

Shortly above this error is another suspicious error logged by cxf-xjc:xsdtojava: 
  [INFO] [cxf-xjc:xsdtojava {execution: generate-sources}]
  [ERROR] The declaration for the entity ""ContentType"" must end with '>'.
    line 81 of http://www.w3.org/TR/1999/REC-html401-19991224/strict.dtd

Not sure if this is related and/or only an intermediate problem with the trunk?
Note: I'm building on Linux with maven 2.2.1 and Java 1.6.0_20-b02 (i386)  
","30/Sep/10 10:57;sergey_beryozkin;Hi Ate - thanks for finding the time and verifying the fix on the 2.2.x branch.

The thing is I'm seeing these build errors on the trunk on (Ubuntu) regularly, I should've reported them earlier on to the dev list.
I 'fix' them by removing the ~/.m2/repository/org/apache/cxf. I'll start a thread on the dev list...

thanks, Sergey

","30/Sep/10 13:19;adouma;Hi Sergey,

I now also tested against cxf-2.3.0-SNAPSHOT (thanks for the hint for 'fixing"" the build), and that one also checks out OK!

So, for us this blocking issue now is resolved, thanks!
With regards to introducing a thread local and completely disable address overwrites, I agree that most likely is a better solution and probably needed for better stability and scalability. 
But I also understand and agree this better not be done before the imminent 2.3 release. 

Regards,

Ate","30/Sep/10 14:40;sergey_beryozkin;Hi Ate

thanks a million.
Yes, we need to think it over, I suspect that the reason overwriting is done is that further down the chain (JAXWS) WebServiceContexts or WSA, etc, can deal with addresses in the transport independent manner, irrespectively of whether
it is HTTP or JMS, etc...

I'll create another JIRA so that we can track that
cheers, Sergey",,,,,,,,,,,,,,,,,
"Handling of null, enums and dates in Java-first SOAP over HTTP GET",CXF-2996,12474215,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,chvid,chvid,15/Sep/10 21:25,11/Oct/10 14:46,14/Mar/19 02:29,16/Sep/10 20:01,,,,,,,,,,,,,,,,,,2.2.11,,,,JAX-WS Runtime,,,,0,,,,,,"Apache CXF has incomplete handling of SOAP over HTTP GET.

It does not support dates as described here:

http://cxf.547215.n5.nabble.com/Java-first-SOAP-via-HTTP-GET-and-date-td2837639.html#a2837639

And it does not support enums:

http://cxf.547215.n5.nabble.com/Java-first-SOAP-via-HTTP-GET-and-enums-td2837640.html#a2837640

I took a look at URIMappingInterceptor and fixed a couple of things to make what I think is the correct implementation of SOAP over HTTP GET.

In short:

1. Supporting java.util.Date and java.util.Calendar in the following formats:

yyyy-MM-dd
yyyy-MM-ddTHH:mm:ss
yyyy-MM-ddTHH:mm:ss.SSS
yyyy-MM-ddTHH:mm:ssZZZ:ZZ
yyyy-MM-ddTHH:mm:ss.SSSZZZ:ZZ

(Mimicking XsDateTimeFormat but using SimpleDateFormat.)

2. Supporting enums - deserializing them via valueOf.

3. Supporting null - meaning that if you exclude a parameter - it will be interpretated as null.

So if you have:

interface MyInterface {
    public void test7(@WebParam(name = ""d"")Double d);

    public void test8(@WebParam(name = ""d"")double d);
}

And call .../test7 (without parameters) then the implementation will be invoked with null. Whereas calling .../test8 will cause a NUllPOinterException.

The attached patch covers changes in URIMappingInterceptor and also contains some test cases.
",,,,,,,,,,,,,,,,,15/Sep/10 21:28;chvid;URIMappingInterceptor.java;https://issues.apache.org/jira/secure/attachment/12454708/URIMappingInterceptor.java,15/Sep/10 21:28;chvid;soap-over-http-get-patch.diff;https://issues.apache.org/jira/secure/attachment/12454707/soap-over-http-get-patch.diff,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-09-16 20:01:09.022,,,no_permission,,,,,,,,,,,,,47203,,,Thu Sep 16 20:01:09 UTC 2010,,,,,,0|i0v08n:,179012,,,,,,,,"16/Sep/10 20:01;dkulp;
Patch applied and tests added.  Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,
Bus configuration ignored if Spring context has default-lazy-init=true,CXF-2995,12474190,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,alewando,alewando,15/Sep/10 16:44,11/Oct/10 14:46,14/Mar/19 02:29,16/Sep/10 19:54,2.2.10,2.2.9,,,,,,,,,,,,,,,,2.2.11,,,,Configuration,Core,,,0,,,,,,"Bus configuration using the Spring namespace handler is ignored if the containing context defaults to lazy-init (default-lazy-init=true). The configuration bean definition (BusDefinitionParser$BusConfig) created by BusDefinitionParser inherits this setting. Since the bean is never explicitly referenced it does not get instantiated which would trigger the setApplicationContext method, registering the configured bus under the 'cxf' bean name. Instead, you get a bus with the default configuration.
As a workaround, you can set the containing context to eager-init, but this is not feasible in many cases. 
I've attached a patch which includes a test case and fix in BusDefinitionParser to force the config bean to be eager-init.

I've read a few places that Daniel Kulp mentions most CXF beans will be lazy-init in 2.3, perhaps this will be addressed then. In the meantime, this patch is working for me.",,,,,,,,,,,,,,,,,15/Sep/10 16:45;alewando;force-eager-init.patch;https://issues.apache.org/jira/secure/attachment/12454669/force-eager-init.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-16 19:54:52.172,,,no_permission,,Novice,,,,,,,,,,,47204,,,Thu Sep 16 19:54:52 UTC 2010,,,,,,0|i0sxvj:,166965,,,,,,,,15/Sep/10 16:45;alewando;Patch including a test case and fix,"16/Sep/10 19:54;dkulp;
Patch applied.  Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,
SoapBindingFactory should not break the backward compatible of the CXF JMSTransport configuration,CXF-2994,12474155,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,15/Sep/10 09:32,11/Oct/10 14:46,14/Mar/19 02:29,15/Sep/10 12:58,,,,,,,,,,,,,,,,,,2.3,,,,,,,,0,,,,,,"CXF 2.3 provides the soap over jms implementation,  but current code of breaks the backward compatible of the CXF JMSTransport configuration.
You can find more information about this issue in this mail thread[1]
[1] http://cxf.547215.n5.nabble.com/Re-svn-commit-r986571-in-cxf-trunk-distribution-src-main-release-samples-jms-spec-demo-wsdl-rt-bindia-td2838632.html#a2838632",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47205,,,2010-09-15 09:32:58.0,,,,,,0|i0v12n:,179147,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
response context concurrent issue,CXF-2992,12474065,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,justinas,justinas,14/Sep/10 12:09,13/Sep/11 15:28,14/Mar/19 02:29,01/Oct/10 17:46,2.2.2,,,,,,,,,,,,,,,,,2.2.12,2.3.1,,,Core,,,,0,,,,,,"After running an application with CXF for longer time, we have some threads(4-5) that are using about 100% cpu each.  It occurred three times already and the only solution to this problem is to restart an application server.

   PID USERNAME USR SYS TRP TFL DFL LCK SLP LAT VCX ICX SCL SIG PROCESS/LWPID
 10992 was  97 0.0 0.0 0.0 0.0 2.7 0.0 0.0   3  43   7   1 java/966   
 10992 was  97 0.0 0.0 0.0 0.0 2.7 0.0 0.0   3  40   7   1 java/491
 10992 was  97 0.0 0.0 0.0 0.0 2.7 0.0 0.0   3  60   7   1 java/1251
 10992 was  97 0.0 0.0 0.0 0.0 2.7 0.0 0.0   3 102   7   1 java/1280

 All hung threads has the same stack trace  ""default-workqueue-232"" prio=3 tid=0x00000001065c2c50 nid=0x4e3 runnable [0xfffffffdf86fe000..0xfffffffdf86ff9a8]
    at java.util.HashMap.put(HashMap.java:420)
    at java.util.HashMap.putAll(HashMap.java:570)
    at org.apache.cxf.endpoint.ClientImpl.processResult(ClientImpl.java:520)
    at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:659)
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2132)
    at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1.run(HTTPConduit.java:2020)
    at org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2.run(AutomaticWorkQueueImpl.java:243)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
    at java.lang.Thread.run(Thread.java:595).

ClientImpl tries to add response message to response context and it enters into an infinitive loop inside HashMap. (line 420 for (Entry<K,V> e = table[i]; e != null; e = e.next) )
Though at first glance response context is access based on the current thread, I think the only possible way HashMap may enter this infinitive loop is concurrent modification somewhere inside CXF code. 


","Java: Java(TM) 2 Runtime Environment, Standard Edition (IBM build 1.5.0_16-b02
20080907 (SR8 + IZ29767 + IZ30684 + IZ31214 + IZ31213)) Java HotSpot(TM) Server VM
Os: SunOS 5.10 Generic_142900-03 sun4v sparc SUNW,SPARC-Enterprise-T5220",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47207,,,2010-09-14 12:09:04.0,,,,,,0|i0kl9z:,118264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Response Context should not be empty even with a SOAP fault message  when use async invoke,CXF-2990,12473952,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,13/Sep/10 05:21,11/Oct/10 14:46,14/Mar/19 02:29,13/Sep/10 06:35,,,,,,,,,,,,,,,,,,2.2.11,2.3,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47209,,,Mon Sep 13 06:35:07 UTC 2010,,,,,,0|i13yhj:,231217,,,,,,,,"13/Sep/10 05:26;ffang;This error comes from that for async invocation, in ClientImpl.processResult() method, currently code like
{code}
// Check to see if there is a Fault from the outgoing chain
Exception ex = message.getContent(Exception.class);
if (ex != null) {
...
throw ex;
}
{code}
Actually here message is InBoundMessage, and the ex here is a incoming soap fault, we shouldn't get/throw ex like this at this stage, as throw ex too early we get no chance to set context content for soap fault incoming message.
we should bypass this check if message is InBoundMessage
","13/Sep/10 06:35;ffang;commit fix
http://svn.apache.org/viewvc?rev=996426&view=rev for trunk
http://svn.apache.org/viewvc?rev=996433&view=rev for 2.2.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
"cxf-java2ws-plugin - While running the maven plugin, the wrapper beans that are generated complain when dependencies are in another jar.",CXF-2989,12473850,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jaybytez,jaybytez,10/Sep/10 19:53,11/Oct/10 14:46,14/Mar/19 02:29,17/Sep/10 01:36,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,Tooling,,,,0,,,,,,"http://cxf.547215.n5.nabble.com/java2ws-problem-td568861.html#a2653030

So here is a quick example.   

1) I have a pojo called ContactPoint with some basic information and it is to be represented as a complexType. 
2) Pom file for building this into a jar. 
3) ContactPointEndpoint is a simple interface that takes in a ContactPoint and returns it. 
4) Pom file that runs java2ws to generate a wsdl, wrapper bean, and client. 

This produces a similar error where the ContactPointEndpoint is in its own project with a dependency to the jar artifact that ContactPoint exists in. 

The java2ws generates code and errors, but when I am in Eclipse and look at the generated wrapper bean and client, there are no errors and it resolves the classes. 

Any thoughts as to what this might be or what I have done wrong? 

Thanks a ton!!!   Jay 

------------ContactPoint.java--------------------------------- 
package com.foo; 

import javax.xml.bind.annotation.XmlAccessType; 
import javax.xml.bind.annotation.XmlAccessorType; 
import javax.xml.bind.annotation.XmlType; 

@XmlAccessorType(XmlAccessType.FIELD) 
@XmlType(namespace = ""http://foo.com/model"", name = ""ContactPoint"", propOrder = { 
        ""id"", ""number"" }) 
public class ContactPoint { 

    /** The id. */ 
    private Long id; // NOPMD 

    private String number; 

    public Long getId() { 
        return id; 
    } 

    public void setId(final Long id) { 
        this.id = id; 
    } 

    public String getNumber() { 
        return number; 
    } 

    public void setNumber(final String number) { 
        this.number = number; 
    } 

} 

------------ContactPoint pom.xml--------------------------------- 
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""> 
  <modelVersion>4.0.0</modelVersion> 
  <artifactId>foo-model</artifactId> 
  <groupId>com.foo</groupId> 
  <version>0.0.1-SNAPSHOT</version> 
  <packaging>jar</packaging> 
</project> 

------------ContactPointEndpoint.java--------------------------------- 
package com.foo; 

import javax.jws.WebMethod; 
import javax.jws.WebParam; 
import javax.jws.WebResult; 
import javax.jws.WebService; 
import javax.jws.soap.SOAPBinding; 
import javax.xml.ws.RequestWrapper; 
import javax.xml.ws.ResponseWrapper; 

/** 
 * Spring service that handles CRUD requests for People entities 
 * 
 * @generated 
 */ 
@WebService(targetNamespace = ""http://foo.com/service"") 
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, use = SOAPBinding.Use.LITERAL, style = SOAPBinding.Style.DOCUMENT) 
public interface ContactPointEndpoint { 

    /** 
     * Save an existing People entity 
     * 
     * @generated 
     */ 
    @WebMethod 
    @ResponseWrapper(targetNamespace = ""http://foo.com/service"") 
    @RequestWrapper(targetNamespace = ""http://foo.com/service"") 
    @WebResult(targetNamespace = ""http://foo.com/model"", name = ""updatedContactPoint"") 
    ContactPoint updateContactPoint( 
            @WebParam(targetNamespace = ""http://foo.com/model"", name = ""criteria"") ContactPoint cp); 

} 

------------ContactPointEndpoint pom.xml--------------------------------- 
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""> 
        <modelVersion>4.0.0</modelVersion> 
        <artifactId>foo-service</artifactId> 
        <groupId>com.foo</groupId> 
        <version>0.0.1-SNAPSHOT</version> 
        <packaging>jar</packaging> 
        <build> 
                <plugins> 
                        <plugin> 
                                <groupId>org.apache.cxf</groupId> 
                                <artifactId>cxf-java2ws-plugin</artifactId> 
                                <version>2.2.9</version> 
                                <dependencies> 
                                        <dependency> 
                                                <groupId>org.apache.cxf</groupId> 
                                                <artifactId>cxf-rt-frontend-jaxws</artifactId> 
                                                <version>2.2.9</version> 
                                        </dependency> 
                                        <dependency> 
                                                <groupId>org.apache.cxf</groupId> 
                                                <artifactId>cxf-rt-frontend-simple</artifactId> 
                                                <version>2.2.9</version> 
                                        </dependency> 
                                        <dependency> 
                                                <artifactId>foo-model</artifactId> 
                                                <groupId>com.foo</groupId> 
                                                <version>0.0.1-SNAPSHOT</version> 
                                        </dependency> 
                                </dependencies> 

                                <executions> 
                                        <execution> 
                                                <id>process-classes</id> 
                                                <phase>process-classes</phase> 
                                                <configuration> 
                                                        <className>com.foo.ContactPointEndpoint</className> 
                                                        <genWsdl>true</genWsdl> 
                                                        <verbose>true</verbose> 
                                                        <genClient>true</genClient> 
                                                        <genWrapperbean>true</genWrapperbean> 
                                                        <frontend>jaxws</frontend> 
                                                        <databinding>jaxb</databinding> 
                                                        <argline>-createxsdimports -s 
                                                                ${project.build.directory}/generated-sources/main/java -classdir 
                                                                ${basedir}/target/classes</argline> 
                                                </configuration> 
                                                <goals> 
                                                        <goal>java2ws</goal> 
                                                </goals> 
                                        </execution> 
                                </executions> 
                        </plugin> 
                </plugins> 
        </build> 
        <dependencies> 
                <dependency> 
                        <artifactId>foo-model</artifactId> 
                        <groupId>com.foo</groupId> 
                        <version>0.0.1-SNAPSHOT</version> 
                </dependency> 
        </dependencies> 
</project> ","Running on Windows 7, with JDK 1.6, in STS",,,,,,,,,,,,,,,,10/Sep/10 19:55;jaybytez;sample-model-impl.zip;https://issues.apache.org/jira/secure/attachment/12454328/sample-model-impl.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47210,,,Fri Sep 10 19:55:20 UTC 2010,,,,,,0|i13yc7:,231193,,,,,,,,"10/Sep/10 19:55;jaybytez;This project is a zip file of two maven projects because this zip file is used in another JIRA issue that I will be opening up. 

There is a model project and a service project.

The model is built as a jar file and the service has a dependency on that model jar.  It is defined in the pom.xml and defined in the plugin section.

When running mvn install, the generated wrapper beans will not get compiled because they complain that they cannot resolve model references to classes that are in the model jar.
",,,,,,,,,,,,,,,,,,,,,,,,,,
cxf-java2ws-plugin - Generating Wrapper Bean does not produce class names based on the WebMethod annotation.,CXF-2988,12473847,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jaybytez,jaybytez,10/Sep/10 19:46,11/Oct/10 14:46,14/Mar/19 02:29,17/Sep/10 01:36,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,Tooling,,,,0,,,,,,"I have the following method in my SEI: 

    @WebMethod(operationName = ""updateContactPoint"")
    @WebResult(targetNamespace = ""http://foo.com/model"", name = ""contactPoint"")
    ContactPoint update(
            @WebParam(targetNamespace = ""http://foo.com/model"", name = ""criteria"") ContactPoint cp);

And when this runs through the code generator, the request wrapper class and the response wrapper class are update and updateResponse instead of updateContactPoint and updateContactPointResponse.  

http://cxf.547215.n5.nabble.com/Problem-with-java2ws-and-genWrapperbean-not-honoring-operationName-td2834289.html#a2834289","Running on Windows 7, with JDK 1.6, in STS",,,,,,,,,,,,,,,,10/Sep/10 19:47;jaybytez;sample-model-impl.zip;https://issues.apache.org/jira/secure/attachment/12454327/sample-model-impl.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,47211,,,Fri Sep 10 19:47:53 UTC 2010,,,,,,0|i13yef:,231203,,,,,,,,"10/Sep/10 19:47;jaybytez;This project is a zip file of two maven projects because this zip file is used in another JIRA issue that I will be opening up.

There is a model project and a service project.

In the service project is a SEI that has the fields in question.",,,,,,,,,,,,,,,,,,,,,,,,,,
sets null instead of empty List/Set/SortedSet when value isn't in query string,CXF-2986,12473740,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,bradcupit,bradcupit,09/Sep/10 22:59,11/Oct/10 14:46,14/Mar/19 02:29,03/Oct/10 21:05,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-RS,,,,0,,,,,,"CXF sets a null collection, rather than an empty one, when the query param isn't in the request

Example:
    @GET
    @Path(""/stuff"")
    public Response get(@QueryParam(""option"") Set<String> options) { ... }

and http://localhost:8080/stuff is called (but ?option=abc is not on the query string), then options will be null, but it should be an empty Set

The javadocs in @DefaultValue says:
If this annotation is not used and the corresponding metadata is not present in the request, the value will be an empty collection for List, Set or SortedSet

this seems similar to CXF-1675",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-13 21:20:59.517,,,no_permission,,,,,,,,,,,,,47213,,,Mon Sep 20 14:55:12 UTC 2010,,,,,,0|i13yjj:,231226,,,,,,,,"13/Sep/10 21:20;sergey_beryozkin;Hi,

I'm tempted to close this JIRA as 'won't fix'.

There's some ambiguity there with respect to handling query parameters, but if we have for example

@QueryParam(""option"") String option

then given a query like

?option

we should get an empty String, as the value of the 'option' parameter.

'Null' means the query was not there while an empty value means there was a query parameter but without the usual name=value.

?option may not be the best example, but if we have something like

?_wadl

and get a null then it means there was no _wadl query...


Does it make sense or do you disagree ? We may need to ask a question in the jaxrs users list. I definitely did get an answer regarding an emty value representing a query where only a key is available. 




thanks, Sergey


","14/Sep/10 12:13;sergey_beryozkin;Actually - my analysis is incomplete.

if we have ?option then we should end up with a collection containing a single empty value which would be consistent with what I said above thus having an empty collection as requested by this JIRA is indeed correct , when no a given query key exists...will try to fix it this week... ",20/Sep/10 14:55;bradcupit;excellent! Thanks Sergey!,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak when initializing CXF throughSpring,CXF-2985,12473668,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,mauromol,mauromol,09/Sep/10 10:49,02/Nov/11 00:44,14/Mar/19 02:29,17/Sep/10 02:35,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,Bus,,,,0,,,,,,"As described in a comment of bug CXF-2164, there's still a case of memory leak produced by CXF when embedded into a web application and initialized through Spring.

The problem is that cxf.xml declares the following bean:

<bean id=""cxf"" class=""org.apache.cxf.bus.CXFBusImpl""/>

Here, the destroy-method is not declared. This means that when Sping shuts down the context, it does not call any shutdown method on the CXFBusImpl.

The net result is the following:

- Tomcat starts
- Tomcat starts my web application
- this declares a Spring web application context that gets parsed
- at some point cxf.xml is parsed, so the bean named cxf is created and an org.apache.cxf.bus.CXFBusImpl instance is created using the constructor org.apache.cxf.bus.CXFBusImpl.CXFBusImpl(Map<Class, Object>), which causes the org.apache.cxf.BusFactory.localBus ThreadLocal to be assigned a value of this type, through a call to org.apache.cxf.BusFactory.possiblySetDefaultBus(Bus); I see that this happens in a thread called ""main""
- if I stop the web application, Spring closes down the context; however, as I said before, this does not cause any shutdown method of the cxf bean to be called
- so there's no null-setting or removing operation of the org.apache.cxf.BusFactory.localBus ThreadLocal for the thread ""main""

The problem of the use of a ThreadLocal is that even if the shutdown method od CXFBusImpl were called, the shutdown operation may be done in a thread which is different from the one in which the context had been created.

As suggested by Daniel Kulp in the other report, maybe the best solution is to use a WeakHashMap<Thread, Bus> to keep the thread-bus relationships.
I'm going to provide a patch.",,,,,,,,,,,,,,,,,09/Sep/10 11:01;mauromol;Patch_CXF-2985.patch;https://issues.apache.org/jira/secure/attachment/12454202/Patch_CXF-2985.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-17 02:35:40.923,,,no_permission,,,,,,,,,,,,,47214,,,Wed Nov 02 00:44:17 UTC 2011,,,,,,0|i0uz4n:,178832,,,,,,,,"09/Sep/10 11:01;mauromol;This patch does the following:
- adds org.apache.cxf.bus.CXFBusImpl.shutdown() (which calls org.apache.cxf.bus.CXFBusImpl.shutdown(boolean)) and makes cxf.xml declare destroy-method=""shutdown""
- replaces the ThreadLocal implementation of the localBus relationship in org.apache.cxf.BusFactory with a synchronized WeakHashMap<Thread, Bus>
- adds the new method org.apache.cxf.BusFactory.clearDefaultBusForAnyThread(Bus) which removes any entry in the WeakHashMap that has a given bus as a value
- makes org.apache.cxf.bus.CXFBusImpl.shutdown(boolean) also call that new method

Please note that org.apache.cxf.BusFactory.getThreadDefaultBus(boolean) and org.apache.cxf.BusFactory.possiblySetDefaultBus(Bus) require synchronization because a concurrent call to org.apache.cxf.BusFactory.clearDefaultBusForAnyThread(Bus) may modify the map in the middle of those methods.

I hope this helps.","17/Sep/10 02:35;dkulp;
Slightly modified patch applied.  Thanks!
",01/Nov/11 20:10;seumas.soltysik;Any reason that this was not applied to 2.1.x? Or was 2.1.x already not supported by the time this fix was made?,01/Nov/11 20:30;dkulp;The last release of 2.1.x was on Jun 1st 2010 which was a few months before this.  So out of support by the time the bug was reported and fixed.,02/Nov/11 00:44;seumas.soltysik;Thanks Dan. That is what I thought.,,,,,,,,,,,,,,,,,,,,,,
Outbound MapAggregator loses reference parameters of generic ReplyTo EPRs ,CXF-2981,12473567,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,08/Sep/10 13:08,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 15:52,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,"If non-null ReplyTo EPR has either None or Anonymous address then MAPAggregator will replace it with a new ReplyTo EPR having an Anonymous address if no alternative ReplyTo can be found from the decoupled Destination.
The net effect is that the reference parameters if any are lost during the replacement ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47218,,,2010-09-08 13:08:19.0,,,,,,0|i0v07r:,179008,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChainInitiationObserver  lack synchronization which could causes continuations to malfunction for some rare scenario,CXF-2975,12473377,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,06/Sep/10 11:27,11/Oct/10 14:46,14/Mar/19 02:29,06/Sep/10 12:47,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,,,,,0,,,,,,"If we call continuation.resume in another thread after we call continuation.suspend immediately,  we may encounter  a situation where resume is called on continuation before the SuspendedInvocationException causes PhaseInterceptorChain to change state to 'paused', so that ChainInitiationObserver instead of resuming the the PhaseInterceptorChain from where it was suspended, it starts it's from the beginning. This is incorrect as interceptors that has already been run are called again in this case.

With this attached testcase which expose this problem,  simply use continuation api in a jaxws provider, we can see the IncomingMessageCounterInterceptor get invoked twice for one incoming messsage intermittently.",,,,,,,,,,,,,,,,,06/Sep/10 11:29;ffang;testcase.patch;https://issues.apache.org/jira/secure/attachment/12453939/testcase.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47224,,,Mon Sep 06 12:47:24 UTC 2010,,,,,,0|i13yhb:,231216,,,,,,,,"06/Sep/10 11:37;ffang;The fix should be simply adding
synchronized (phaseChain) 

For code piecs
               if (phaseChain.getState() == InterceptorChain.State.PAUSED) {
                    phaseChain.resume();
                    return;
                }

ChainInitiationObserver.onMessage()

","06/Sep/10 12:47;ffang;commit fix
http://svn.apache.org/viewvc?rev=993010&view=rev for trunk
http://svn.apache.org/viewvc?rev=993012&view=rev for 2.2.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
Log warning message instead of ServiceConstructionException in  ReflectionServiceFactoryBean.initializeClassInfo()  ,CXF-2974,12473376,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,06/Sep/10 11:11,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 16:26,,,,,,,,,,,,,,,,,,2.2.11,,,,Simple Frontend,,,,0,,,,,,"When publish following service impl class with the wsdl generated from this same class, the runtime throws ServiceConstructionException because the wsdl generated is bare style which does not match with class method wrapped style.  

@WebService(wsdlLocation=""WebResult.wsdl"")
@SOAPBinding(style=SOAPBinding.Style.DOCUMENT, use=SOAPBinding.Use.LITERAL, parameterStyle=SOAPBinding.ParameterStyle.WRAPPED)
public class WebResultService {
  @WebMethod(operationName=""helloString"", action=""urn:HelloString"")
  @WebResult(name=""employee"", partName=""Employee"", header=true, targetNamespace=""hello/employee"")
  public Employee hello(@WebParam(name=""EmployeeName"", header=true, targetNamespace=""hello/employee"") Employee employee, String name) throws NameException {
 
    Name newName = new Name();
    newName.setFirstName(""firstname"");
    newName.setLastName(name);
    
    Employee newEmployee = new Employee(); 
    return newEmployee;

  }
}

After talked with Oracle's jaxws spec guys,  I am told this specific case is valid and jaxws2.1 complaint. So we just log a warning message and enable the further process on it  to support this use case.  ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47225,,,2010-09-06 11:11:53.0,,,,,,0|i0v06v:,179004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schema with broken namespaces in JAXB,CXF-2973,12473314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,04/Sep/10 16:47,11/Oct/10 14:46,14/Mar/19 02:29,07/Sep/10 17:43,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,JAXB Databinding,,,,0,,,,,,"Under some complex set of conditions that I have not yet diagnosed, the JAXBDataBinding will, with 'help' from JAXB (the version of JAXB built into the Apple 1.6 JDK, at least) create a schema DOM document that looks, roughly, like:

{code}
<schema xmlns:xs=""......"">
   <import .../>
   ...
</schema>
{code}

That is, the elements are created with no namespace at all.

I have not been able to isolate a test case, but I am opening this issue to track with.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-07 16:27:39.205,,,no_permission,,,,,,,,,,,,,47226,,,Tue Sep 07 17:43:15 UTC 2010,,,,,,0|i13ycv:,231196,,,,,,,,"04/Sep/10 18:01;bmargulies;The problem here is two copies of JAX-B, one in the webapp, one not, causing JAX-B to fail to locate its annotations.

interface com.sun.xml.txw2.annotation.XmlNamespace

is being straddled between the webapp class loader and the system class loader.




I'm debugging my way into JAX-B schema generation. I have this failing environment. In it, JAXB creates XML Schema DOM documents with no namespaces.

The immediate cause is seen in com.sun.xml.txw2.TXW.getTagName(Class<?>).

It goes looking for the package-info.java annotation on com.sun.xml.bind.v2.schemagen.xmlschema. The annotation isn't there.

The package object seems to be pointing at the copy of JAX-B in the classes.jar that Apple passes along from Sun. There is a package-info.class in there.

com/sun/xml/internal/bind/v2/schemagen/xmlschema/package-info.class

Inside the code to fetch the annotation,

annotations is:

{interface com.sun.xml.txw2.annotation.XmlNamespace=@com.sun.xml.txw2.annotation.XmlNamespace(value=http://www.w3.org/2001/XMLSchema)}","04/Sep/10 18:16;bmargulies;Other than the error check I put in earlier today, is there anything else we should do about this?

We have a whole slew of declared dependencies on jaxb-impl. I had to exclude them all to get rid of this problem. 

I don't claim to understand how I ended up with the package-info referencing the annotation from the webapp classloader, and the code in JAXB looking at the annotation referencing the other. (or vica versa). It suggests that the package-info was somehow touched in the 'outer' class loader while the JAXB code didn't get hit until inside the webapp.
","07/Sep/10 16:27;dkulp;
My gut feeling says the error check is about all we can do here and this is resolvable.     In general, we want to use the latest JAXB-impl, not the version in the JDK, but in some cases, that may be problematic and your warning is probably appropriate.


","07/Sep/10 17:43;bmargulies;'FIxed' is perhaps a strong statement, but ...

This problem was somehow caused by putting CXF into both the system classloader of Jetty and also into a webapp class loader. One might argue that this is supposed to work. On the other hand, it usually *does* work, and the failure seems to be a JAX-B failure, not a CXF failure. Further, it may result from a fundamental limitation of Java.

So, i'm resolving based on the submitted change that will at least diagnose this a bit earlier and slightly less confusingly.
",,,,,,,,,,,,,,,,,,,,,,,
MapAggregator should throw a fault when ReplyTo address is set to None in case of two-way requests ,CXF-2972,12473249,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,03/Sep/10 15:56,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 16:00,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,"According to http://www.w3.org/TR/ws-addr-core/#eprinfomodel, when ReplyTo address is set to
""http://www.w3.org/2005/08/addressing/none""

no reply message should be sent. Essentially, 202 is expected.

Now, JAXWS TCK expects a fault instead. It probably does make sense indeed to reply with a fault because returning 202 for two requests does not make much sense
 ",,,,,,,,,,,,,,,,,03/Sep/10 16:02;sergey_beryozkin;patch.txt;https://issues.apache.org/jira/secure/attachment/12453788/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47227,,,2010-09-03 15:56:06.0,,,,,,0|i0v047:,178992,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StreamWriterContentHandler.getPrefix shouldn't return null if DEFAULT_NS_PREFIX is used,CXF-2969,12473133,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,02/Sep/10 12:35,11/Oct/10 14:46,14/Mar/19 02:29,03/Sep/10 00:38,,,,,,,,,,,,,,,,,,2.2.11,2.3,,,,,,,0,,,,,,"think about the message like
<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope""><soap:Body><add xmlns=""http://apache.org/cxf/calculator/types""><arg0>1</arg0><arg1>2</arg1></add></soap:Body></soap:Envelope>
here ""add"" element  has namespace http://apache.org/cxf/calculator/types, but use DEFAULT_NS_PREFIX """", in this case getPrefix should empty string """" , but not null.

Attach a testcase to expose this problem, current code will throw XMLStreamException",,,,,,,,,,,,,,,,,02/Sep/10 12:37;ffang;testcase.patch;https://issues.apache.org/jira/secure/attachment/12453675/testcase.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47230,,,Fri Sep 03 00:38:01 UTC 2010,,,,,,0|i0v01j:,178980,,,,,,,,02/Sep/10 12:37;ffang;testcase to expose this problem,"03/Sep/10 00:38;ffang;commit fix
http://svn.apache.org/viewvc?rev=991939&view=rev for trunk
http://svn.apache.org/viewvc?rev=991951&view=rev for 2.2.x branch",,,,,,,,,,,,,,,,,,,,,,,,,
PolicyBasedWSS4JInInterceptor asserting RequiredParts policy is destructive of SOAP Header DOM in SoapMessage,CXF-2968,12473073,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,01/Sep/10 20:04,11/Oct/10 14:46,14/Mar/19 02:29,05/Oct/10 15:45,2.1.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,"If a policy such as the following example is enabled, the interceptor invalidates the headers stored in SoapMessage#getHeaders().

<sp:RequiredParts>
  <sp:Header Name=""MessageID""
      Namespace=""http://www.w3.org/2005/08/addressing"" />
</sp:RequiredParts>

The logic uses SOAPHeader#getChildElements(QName).  Per the JavaDoc, this element may be destructive of existing references to affected DOM nodes [1].  A reference to affected DOM nodes exists in the structure returned by SoapMessage#getHeaders().  After the PolicyBasedWSS4JInInterceptor executes, any attempt to access the headers returned by SoapMessage#getHeaders() in another interceptor will receive the invalidated the DOM nodes.


http://download.oracle.com/javase/6/docs/api/javax/xml/soap/SOAPElement.html#getChildElements%28javax.xml.soap.Name%29

",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47231,,,2010-09-01 20:04:44.0,,,,,,0|i0v13z:,179153,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WrapperClassInInterceptor should check for null wrapperClass,CXF-2965,12472964,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,wtam,wtam,31/Aug/10 20:18,11/Oct/10 14:46,14/Mar/19 02:29,01/Sep/10 08:47,,,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-WS Runtime,,,,0,,,,,,"I'd suggest to add null pointer check.

{code}
Index: rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/interceptors/WrapperClassInInterceptor.java
===================================================================
--- rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/interceptors/WrapperClassInInterceptor.java	(revision 34)
+++ rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/interceptors/WrapperClassInInterceptor.java	(working copy)
@@ -108,7 +108,7 @@
             MessagePartInfo wrapperPart = wrappedMessageInfo.getMessagePart(0);
             Class<?> wrapperClass = wrapperPart.getTypeClass();
             Object wrappedObject = lst.get(wrapperPart.getIndex());
-            if (!wrapperClass.isInstance(wrappedObject)) {
+            if (wrapperClass != null && !wrapperClass.isInstance(wrappedObject)) {
                 wrappedObject = null;
                 wrapperPart = null;
                 wrapperClass = null;
{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-09-01 08:47:33.029,,,no_permission,,,,,,,,,,,,,47234,,,Wed Sep 01 08:47:33 UTC 2010,,,,,,0|i0v147:,179154,,,,,,,,01/Sep/10 08:47;njiang;Applied patch into trunk and cxf-2.2.x branch  with thanks to William.,,,,,,,,,,,,,,,,,,,,,,,,,,
Signature coverage of signed XML Encryption elements created using standard WSS4J elements cannot be verified with WS-SP configuration or the CryptoCoverageChecker,CXF-2963,12472744,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,davaleri,davaleri,davaleri,27/Aug/10 21:00,11/Oct/10 14:46,14/Mar/19 02:29,01/Sep/10 19:51,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,"When using manual configuration of WSS4J on the client outbound interceptor chain, the resulting message contains extraneous Id attributes on the signed XML Encryption elements.  The signature is computed using a different attribute value than that reported by the encryption results from WSS4J on the server side.

For instance, the following signed element is referenced in different ways:

<xenc:EncryptedData xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"" Id=""EncDataId-659"" Type=""http://www.w3.org/2001/04/xmlenc#Element"" wsu:Id=""id-663"">

Signature: <ds:Reference URI=""#id-663"">
Encryption: <xenc:DataReference URI=""#EncDataId-659"" />

The extra ID invalidates the XML Encryption schema and troubles the logic that determines signed encrypted content.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47236,,,Sat Aug 28 15:54:41 UTC 2010,,,,,,0|i13yhz:,231219,,,,,,,,"28/Aug/10 15:54;davaleri;Changing relationship type to ""relates to"" as a workaround was implemented for WSS4J 1.5.8 and earlier.",,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in JavaToWSContainer when using java2ws maven plugin.,CXF-2962,12472678,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,henryju,henryju,27/Aug/10 09:27,11/Oct/10 14:45,14/Mar/19 02:29,02/Sep/10 16:19,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,Tooling,,,,0,,,,,,"I am trying to generate a WSDL from Java code using Maven plugin.

Here is the error I get:
{code}
...
Caused by: java.lang.NullPointerException
	at org.apache.cxf.tools.java2ws.JavaToWSContainer.execute(JavaToWSContainer.java:89)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
{code}

Looking at source code it seems the real error is lost because of the NPE:

JavaToWSContainer.java
{code}
85         } catch (Exception ex) {
86
87            // Try to find an exception with a message on the stack
88             Throwable e = ex.getCause();
89             while ((e.getMessage() == null || """".equals(e.getMessage())) && e.getCause() != null) {
90                 e = e.getCause();
91             }
{code}

In fact the code should be replaced by:
{code}
         } catch (Exception ex) {
             Throwable e = null;
            if (ex.getCause() != null) {
                // Try to find an exception with a message on the stack
               e = ex.getCause();
               while ((e.getMessage() == null || """".equals(e.getMessage())) && e.getCause() != null) {
                  e = e.getCause();
               }
           }
           else {
              e = ex;
           }
{code}
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,47237,,,2010-08-27 09:27:16.0,,,,,,0|i0uzsf:,178939,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS Web Client pre-connect errors can be better propagated,CXF-2961,12472608,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,peaston,peaston,26/Aug/10 15:23,11/Oct/10 14:45,14/Mar/19 02:29,31/Aug/10 20:58,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-RS,,,,0,,,,,,"HTTP client errors fall into 2 categories:

i. The connect succeeds, a  non-2xx HTTP response is returned by the service.
ii. The connect does not succeed because of local HTTP client runtime issues (bad hostname, port unavailable, unsupported method).
In the later error cases a WebApplication exceptions is returned BUT no root cause exception is available.

A suggested patch is included.
",,,,,,,,,,,,,,,,,30/Aug/10 15:13;peaston;patch.txt;https://issues.apache.org/jira/secure/attachment/12453433/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-26 21:47:07.058,,,no_permission,,,,,,,,,,,,,47238,,,Mon Aug 30 15:13:39 UTC 2010,,,,,,0|i13yiv:,231223,,,,,,,,"26/Aug/10 21:47;sergey_beryozkin;Hi Peter - can you please reattach the patch - this one relates to JMS-specific issue

thanks","27/Aug/10 13:50;peaston;Sorry about that will do on Monday when I return from vacation.

Peter

Sent from my iPhone

On 26 Aug 2010, at 17:48, ""Sergey Beryozkin (JIRA)"" <jira@apache.org>  


",30/Aug/10 15:13;peaston;Correct Patch file,,,,,,,,,,,,,,,,,,,,,,,,
CXF JAXRS Proxies can not handle explicilt collections of query and matrix parameters,CXF-2958,12472521,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,25/Aug/10 20:47,06/Feb/11 16:56,14/Mar/19 02:29,26/Nov/10 18:36,2.2.10,,,,,,,,,,,,,,,,,2.2.12,2.3.1,2.4,,JAX-RS,,,,2,,,,,,"Client proxies fail to serialize explicit collections of query and matrix parameters, ex

doIt(@QueryParam(""id"") List<Long> ids) 

Possible fix :

In AbstractClient.addParametersToBuilder :


there's a branch there

if (!"""".equals(paramName)) {
            addToBuilder(ub, paramName, pValue, pt);   
}

I think it has to be something like :

if (!"""".equals(paramName)) {
       if (InjectionUtils.isSupportedCollectionOrArray(pValue.getClass())) {
            // cast pValue to Collection and for every member
            addToBuilder(ub, paramName, pValue, pt);
       } else {
            addToBuilder(ub, paramName, pValue, pt);   
       }
}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-02-06 09:02:54.783,,,no_permission,,,,,,,,,,,,,47240,,,Sun Feb 06 16:56:29 UTC 2011,,,,,,0|i0kla7:,118265,,,,,,,,06/Feb/11 09:02;robsonke;Thanks! This issue made my day. I was stucked in this bug and almost forced me to rewrite my code.,06/Feb/11 16:53;sergey_beryozkin;Hope you're confirming that the fix works :-),"06/Feb/11 16:56;robsonke;It does, my string array was converted to the tostring representation first and now it's passed as multiple key/value pairs in the querystring. 

Thanks again.",,,,,,,,,,,,,,,,,,,,,,,,
xmlbean databinding should return the Document type class when codegen lookups the type from the Qname of element,CXF-2957,12472481,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,njiang,njiang,25/Aug/10 14:13,11/Oct/10 14:45,14/Mar/19 02:29,26/Aug/10 08:00,2.2.10,2.2.8,2.2.9,,,,,,,,,,,,,,,2.2.11,2.3,,,OtherDatabindings,,,,0,,,,,,"Current xmlbeans databinding's solution can't handle doc-lit bare wsdl testcase (XmlBeansTest of the cxf-rt-databinding-xmlbeans) rightly.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47241,,,2010-08-25 14:13:02.0,,,,,,0|i13ycn:,231195,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eclipse validation error when using http-conf.xsd,CXF-2956,12472439,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,kerschi,kerschi,25/Aug/10 06:20,15/Jan/13 16:42,14/Mar/19 02:29,26/Aug/10 08:43,2.2.10,,,,,,,,,,,,,,,,,,,,,Resources,,,,0,,,,,,"We are getting an validation error when using the http-conf.xsd in our application. To isolate the problem I imported the ""wsdl_first_https"" project into eclipse. The validation error occurs even there. Just open the file ""InsecureClient.xml"", right click and choose validate.

Error Message:

Referenced file contains errors (jar:file:/D:/eclipse-helios/plugins/org.eclipse.wst.standard.schemas_1.0.300.v201004110600.jar!/dtds/strict.dtd).  For more information, right click on the message in the Problems View and select ""Show Details...""	InsecureClient.xml	/wsdl_first_https/src/demo/hw_https/client	line 1	XML Problem

Show Details message: The declaration for the entity ""ContentType"" must end with '>'.


Excerpt from file InsecureClient.xml:

{code:xml}
<beans xmlns=""http://www.springframework.org/schema/beans""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xmlns:http=""http://cxf.apache.org/transports/http/configuration""
  xsi:schemaLocation=""
http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"">

  <http:conduit name=""{http://apache.org/hello_world_soap_http}SoapPort.http-conduit"">
  </http:conduit>

</beans>
{code}","Spring-2.5.6, cxf-2.2.10, Eclipse 3.6, Eclipse WTP",,,,,,,,,,,,,,,,15/Jan/13 14:33;cgarci;CXF - Spring Error.png;https://issues.apache.org/jira/secure/attachment/12564929/CXF+-+Spring+Error.png,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-01-15 14:35:04.767,,,no_permission,,Novice,,,,,,,,,,,47242,,,Tue Jan 15 16:42:50 UTC 2013,,,,,,0|i0v13r:,179152,,,,,,,,"26/Aug/10 08:43;kerschi;After another Eclipse restart, Project clean and build the error seems to be gone. Strange.","15/Jan/13 14:35;cgarci;I do have the same error when using that exact XML file and ...

STS Version: 3.1.0.RELEASE - Build Id: 201210061306

together with the following MVN dependency versions:

<spring-version>3.1.0.RELEASE</spring-version>
<spring-security-version>3.1.0.RELEASE</spring-security-version>
<cxf.version>2.2.3</cxf.version>

No restart + clean has helped me.

I have also tried with this XML file (extracted from the examples) both with the Spring beans XSD version explicitely set to 2.0 (as it is in the examples) but also without it (removing 2.0). Then again, no success:

<beans xmlns=""http://www.springframework.org/schema/beans""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xmlns:sec=""http://cxf.apache.org/configuration/security""
  xmlns:http=""http://cxf.apache.org/transports/http/configuration""
  xmlns:jaxws=""http://java.sun.com/xml/ns/jaxws""
  xsi:schemaLocation=""
      http://cxf.apache.org/configuration/security
      http://cxf.apache.org/schemas/configuration/security.xsd
      http://cxf.apache.org/transports/http/configuration
      http://cxf.apache.org/schemas/configuration/http-conf.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"">

  <http:conduit name=""{http://apache.org/hello_world}HelloWorld.http-conduit"">

    <http:tlsClientParameters>
      <sec:keyManagers keyPassword=""password"">
        <sec:keyStore type=""JKS"" password=""password""
                      file=""my/file/dir/Morpit.jks""/>
      </sec:keyManagers>
      <sec:trustManagers>
        <sec:keyStore type=""JKS"" password=""password""
                      file=""my/file/dir/Truststore.jks""/>
      </sec:trustManagers>
      <sec:cipherSuitesFilter>
        <!-- these filters ensure that a ciphersuite with
             export-suitable or null encryption is used,
             but exclude anonymous Diffie-Hellman key change as
             this is vulnerable to man-in-the-middle attacks -->
        <sec:include>.*_EXPORT_.*</sec:include>
        <sec:include>.*_EXPORT1024_.*</sec:include>
        <sec:include>.*_WITH_DES_.*</sec:include>
        <sec:include>.*_WITH_AES_.*</sec:include>
        <sec:include>.*_WITH_NULL_.*</sec:include>
        <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
    </http:tlsClientParameters>
    <http:authorization>
      <sec:UserName>Betty</sec:UserName>
      <sec:Password>password</sec:Password>
    </http:authorization>
    <http:client AutoRedirect=""true"" Connection=""Keep-Alive""/>

  </http:conduit>

</beans>

Thanks in advance for your answer. 

Carlos","15/Jan/13 16:42;cgarci;Hello again,

I have updated to the latest version of CXF and it seems to work after a restart+clean.

<cxf.version>2.7.1</cxf.version>

Thanks anyway for your time,

Carlos",,,,,,,,,,,,,,,,,,,,,,,,
Null message part type class org.apache.cxf.xmlbeans.DataWriterImpl ,CXF-2955,12472368,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sebge2,sebge2,24/Aug/10 13:01,11/Oct/10 14:45,14/Mar/19 02:29,06/Oct/10 21:10,2.2.10,2.2.6,,,,,,,,,,,,,,,,2.2.11,,,,,,,,0,,,,,,"I've a NullPointerException when I set a SOAP header by using an XmlObject:

final XmlObject userDetails = getDetails();
final QName name = EndUserDetailsDocumentXML.type.getDocumentElementName();
final Header userDetailsHeader = new Header(name, userDetails, new XmlBeansDataBinding());                
userDetailsHeader.setDirection(Header.Direction.DIRECTION_OUT);
message.getHeaders().add(userDetailsHeader);



The problem is that the XmlBeans implementation is guessing that the type class of the message part is not null (part.getTypeClass()). But it's always null, see the class org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:

                    if (b != null) {
                        MessagePartInfo part = new MessagePartInfo(header.getName(), null);
                        part.setConcreteName(header.getName());
                        b.createWriter(XMLStreamWriter.class)
                            .write(header.getObject(), part, writer);



Later in org.apache.cxf.xmlbeans.DataWriterImpl (line 71):

    public void write(Object obj, MessagePartInfo part, XMLStreamWriter output) {
        try {
            Class<?> typeClass = part.getTypeClass();
            if (!XmlObject.class.isAssignableFrom(typeClass)) {",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-25 14:00:56.993,,,no_permission,,,,,,,,,,,,,47243,,,Thu Aug 26 08:34:18 UTC 2010,,,,,,0|i13yen:,231204,,,,,,,,"25/Aug/10 14:00;njiang;Hi 

Can you create small test case and attached it with this JIRA?
I will take a look at this issue when I get time this week.

Willem",26/Aug/10 08:34;sebge2;Ok I do that ASAP,,,,,,,,,,,,,,,,,,,,,,,,,
Occur ConcurrentModificationException when creating mutiple WebService client in mutiple thread,CXF-2954,12472191,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jammy.chen,jammy.chen,22/Aug/10 16:39,26/Aug/10 16:45,14/Mar/19 02:29,23/Aug/10 20:41,2.2.10,,,,,,,,,,,,,,,,,2.2.11,,,,Bus,,,,0,,,,,,"The cxf application will throw ConcurrentModificationException when creating mutiple WebService client in mutiple thread in the same time.  

Here is to create WebService client source code:

           JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();
            factory.setServiceClass(SystemPortType.class);
            factory.setAddress(wsdlPort);
            SystemPortType isspt = (SystemPortType) factory.create();
            ((BindingProvider) isspt).getRequestContext().put(BindingProvider.SESSION_MAINTAIN_PROPERTY, true);

Here is the ConcurrentModificationException stack track, notice only to create mutiple WebService client in the same time will throw this exception:

Caused by: java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification(Unknown Source)
	at java.util.AbstractList$Itr.remove(Unknown Source)
	at org.apache.cxf.bus.extension.ExtensionManagerImpl.activateAllByType(ExtensionManagerImpl.java:115)
	at org.apache.cxf.bus.extension.DeferredMap.undefer(DeferredMap.java:36)
	at org.apache.cxf.transport.DestinationFactoryManagerImpl.getDestinationFactoryForUri(DestinationFactoryManagerImpl.java:140)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpointInfo(AbstractWSDLBasedEndpointFactory.java:239)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:145)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:51)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:102)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:121)

I did some research and found this couses that different thread try to operate the map in class ExtensionManagerImpl, the map was defined 
by ConcurrentHashMap<String, ArrayList<Extension>> deferred,  although ConcurrentHashMap is Multithread-Safe but ArrayList is not, Here is a piece of cxf code will trigger the exception,  

    public  <T> void activateAllByType(Class<T> type) {
        for (Map.Entry<String, Collection<Extension>> e : deferred.entrySet()) {
            Iterator<Extension> it = e.getValue().iterator();
            while (it.hasNext()) {
                Extension ex = it.next();
                if (type.isAssignableFrom(ex.getClassObject(loader))) {
                    loadAndRegister(ex);
                    it.remove();
                }
            }
        }
    }
why you didn't declare this method as synchronized? I found some else methods both declare as synchronized such as activateAll(), activateViaNS(). so I tried to did some changes which declare activateAllByType() as synchronized everything work fine. 

This maybe your bug I hope you fix it asap, This is very important for our current project. really thank you","CXF2.2.10, JDK1.5, Tomcat 5.5",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47244,,,Thu Aug 26 16:45:01 UTC 2010,,,,,,0|i0uzzb:,178970,,,,,,,,"26/Aug/10 16:45;jammy.chen;Daniel, thank you did so good work!",,,,,,,,,,,,,,,,,,,,,,,,,,
CXF-2915 causes regression against Interopfest WS-Trust 1.0 scenarios 9 & 10,CXF-2953,12472143,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,21/Aug/10 04:21,11/Oct/10 14:45,14/Mar/19 02:29,23/Aug/10 12:19,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,,,,,,,,,,,,,,CXF-2915,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47245,,,Sat Aug 21 04:22:40 UTC 2010,,,,,,0|i13ybb:,231189,,,,,,,,21/Aug/10 04:22;davaleri;Associating ticket that resulted in the regression.,,,,,,,,,,,,,,,,,,,,,,,,,,
Corba Use Case: CXF/JAX-WS Server and CXF/JAX-WS Client with corba:sequence produces Unmarshalling Error: null ,CXF-2952,12472039,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,lambdrew,lambdrew,19/Aug/10 20:56,19/Oct/11 17:30,14/Mar/19 02:29,31/Aug/11 20:16,2.2.9,,,,,,,,,,,,,,,,,2.3.7,2.4.3,,,CORBA Binding,,,,0,,,,,,"Using CORBA bindings, given the following types (in the corba wsdl),  a HelloWorld message succeeds if the inparameter is of type ""MyItem"" but not for ""MyItemVector"". 

      <xs:complexType name=""MyItem""> 
        <xs:sequence> 
          <xs:element name=""newMyString"" type="" xs:string""></xs:element> 
        </xs:sequence> 
      </xs:complexType> 
      
      <xs:complexType name=""MyItemVector""> 
        <xs:sequence> 
          <xs:element maxOccurs=""1000"" minOccurs=""0"" name=""item"" type=""MyItem""></xs:element> 
        </xs:sequence> 
      </xs:complexType> 


In the failure case, the CXF client fires off the request which triggers an error on the CXF server: ""org.apache.cxf.interceptor.Fault: Unmarshalling Error: null"".

Attached is a HelloWorld project  based on the distribution sample ""Hello World CORBA Demo"" (specifically  ""Use Case 3 - CXF/JAX-WS Server, CXF/JAX-WS Client"") which exposes the behavior.
 

To reproduce:
1. Untar ApacheCxfProblem.tar
2. Configure ApacheCxfProblem/config/.profile 

      export PROJECT_HOME=<full path>/ApacheCxfProblem 
      export CXF_HOME=<full path>/apache-cxf-2.2.9 

3. From the ApacheCxfProblem/bin directory execute 

     . ../config/.profile 
     ./runns.sh 
     ./runserver.sh 
     ./runclient.sh 


Additional Notes:

Based upon the HelloWorld.idl, a wsdl file and java files were created using the following commands:

      idl2wsdl -o wsdl idl/HelloWorld.idl
      wsdl2java -p com -d gen_src wsdl/HelloWorld.wsdl


The full server stack trace: 

org.apache.cxf.interceptor.Fault: Unmarshalling Error: null 
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:780) 
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:624) 
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:128) 
        at org.apache.cxf.interceptor.BareInInterceptor.handleMessage(BareInInterceptor.java:138) 
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243) 
        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:110) 
        at org.apache.cxf.binding.corba.runtime.CorbaDSIServant.invoke(CorbaDSIServant.java:175) 
        at com.sun.corba.se.impl.protocol.CorbaServerRequestDispatcherImpl.dispatchToServant(CorbaServerRequestDispatcherImpl.java:626) 
        at com.sun.corba.se.impl.protocol.CorbaServerRequestDispatcherImpl.dispatch(CorbaServerRequestDispatcherImpl.java:189) 
        at com.sun.corba.se.impl.protocol.CorbaMessageMediatorImpl.handleRequestRequest(CorbaMessageMediatorImpl.java:1682) 
        at com.sun.corba.se.impl.protocol.CorbaMessageMediatorImpl.handleRequest(CorbaMessageMediatorImpl.java:1540) 
        at com.sun.corba.se.impl.protocol.CorbaMessageMediatorImpl.handleInput(CorbaMessageMediatorImpl.java:922) 
        at com.sun.corba.se.impl.protocol.giopmsgheaders.RequestMessage_1_2.callback(RequestMessage_1_2.java:181) 
        at com.sun.corba.se.impl.protocol.CorbaMessageMediatorImpl.handleRequest(CorbaMessageMediatorImpl.java:694) 
        at com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl.dispatch(SocketOrChannelConnectionImpl.java:451) 
        at com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl.doWork(SocketOrChannelConnectionImpl.java:1213) 
        at com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl$WorkerThread.performWork(ThreadPoolImpl.java:471) 
        at com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl$WorkerThread.run(ThreadPoolImpl.java:500) 
Caused by: java.lang.NullPointerException 
        at org.apache.cxf.binding.corba.runtime.CorbaStreamReader.getTextCharacters(CorbaStreamReader.java:49) 
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.handleCharacters(StAXStreamConnector.java:323) 
        at com.sun.xml.bind.v2.runtime.unmarshaller.StAXStreamConnector.bridge(StAXStreamConnector.java:187) 
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360) 
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339) 
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:755) 
        ... 17 more","OS: XP and HPUX 
Version: cxf-2.2.9 and cxf-2.3.0-SNAPSHOT 
Components: java6, Sun's orbd",,,,,,,,,,,,,,,,19/Aug/10 21:01;lambdrew;ApacheCxfProblem.tar;https://issues.apache.org/jira/secure/attachment/12452574/ApacheCxfProblem.tar,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Unknown,,,,,,,,,,,46291,,,2010-08-19 20:56:03.0,,,,,,0|i0b7cv:,63304,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF SOAP/JMS Implementation should revise SOAP1.1 fault binding per latest editorial copy,CXF-2951,12471849,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,peaston,peaston,17/Aug/10 20:52,11/Oct/10 14:45,14/Mar/19 02:29,19/Aug/10 02:14,2.3,,,,,,,,,,,,,,,,,2.3,,,,Transports,,,,0,,,,,,"CXF SOAP/JMS Implementation should revise SOAP1.1 fault binding per latest editorial copy

The SOAP/JMS W3C Specification may move shortly to PR state. The PR document has a simpler mapping of SOAP/JMS spec faults to SOAP 1.1 faults. The SOAP 1.1 faultcode is used to convey the JMS fault QName.

See patch.txt associated with 2949",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-19 02:14:42.564,,,no_permission,,,,,,,,,,,,,47246,,,Thu Aug 19 02:14:42 UTC 2010,,,,,,0|i140av:,231511,,,,,,,,19/Aug/10 02:14;njiang;Applied patch with thanks to Peter.,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF SOAP/JMS Implementation should update the SOAP/JMS Namespace per latest editorial copy,CXF-2950,12471848,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,peaston,peaston,17/Aug/10 20:50,11/Oct/10 14:45,14/Mar/19 02:29,18/Aug/10 05:55,2.3,,,,,,,,,,,,,,,,,2.3,,,,Transports,,,,0,,,,,,"The SOAP/JMS W3C Specification may move shortly to PR state. The PR document will have an updated namespace: http://www.w3.org/2010/soapjms/

See attached patch.txt in JIRA 2949
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-18 05:55:04.641,,,no_permission,,,,,,,,,,,,,47247,,,Wed Aug 18 13:54:40 UTC 2010,,,,,,0|i0v2in:,179381,,,,,,,,18/Aug/10 05:55;njiang;Applied patch with thanks to Perter.,"18/Aug/10 13:54;peaston;Thanks Willem!

",,,,,,,,,,,,,,,,,,,,,,,,,
CXF SOAP/JMS W3C Test Suite should be updated to reflect recent changes to testcases0002 and testcase1002,CXF-2949,12471847,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,peaston,peaston,17/Aug/10 20:47,11/Oct/10 14:45,14/Mar/19 02:29,19/Aug/10 02:13,2.3,,,,,,,,,,,,,,,,,2.3,,,,Transports,,,,0,,,,,,"CXF SOAP/JMS W3C Test Suite should be updated to reflect recent changes to testcases0002 and testcase1002

W3C SOAP/JMS testcases 0002 and 1002 have been modified to test an enhanced definition of Protocol-2038.

""If the JMSCorrelationID is set in the request message, then the JMSCorrelationID header field in the response message MUST be set to the same value as the JMSCorrelationID header field in the request message. If the JMSCorrelationID header field is not set in the request message, then the JMSCorrelationID header field in the response message MUST be set to the value of the JMSMessageID header in the request message."" ",,,,,,,,,,,,,,,,,17/Aug/10 20:49;peaston;patch.txt;https://issues.apache.org/jira/secure/attachment/12452318/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-18 05:57:03.139,,,no_permission,,,,,,,,,,,,,47248,,,Wed Aug 18 05:57:03 UTC 2010,,,,,,0|i140b3:,231512,,,,,,,,17/Aug/10 20:49;peaston;Suggested Patch For CXF-2949 and OTHERS,"18/Aug/10 05:57;njiang;Applied the patch with thanks to Perter,  I also fixed the issues of soap binding test and soap binding namespace mapping.",,,,,,,,,,,,,,,,,,,,,,,,,
http-osgi transport doesn't updateDests correct for the second service,CXF-2947,12471793,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,17/Aug/10 10:45,11/Oct/10 14:45,14/Mar/19 02:29,26/Aug/10 07:47,,,,,,,,,,,,,,,,,,2.2.11,2.3,,,,,,,0,,,,,,"This is only happen when we deploy a first cxf service using http-osgi transport, then access url like http://localhost:8181/cxf/ to list available services, then deploy the second service, we can encounter the second service destination address not get updated correctly.

This issue originally from the discussion on smx-user mailling list[1]

[1]http://servicemix.396122.n5.nabble.com/deploying-more-than-one-CXF-JAX-WS-Web-Service-td2637875.html#a2637875",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47250,,,Thu Aug 26 07:47:44 UTC 2010,,,,,,0|i13ygv:,231214,,,,,,,,"26/Aug/10 07:47;ffang;commit fix
http://svn.apache.org/viewvc?rev=989436&view=rev for trunk
http://svn.apache.org/viewvc?rev=989437&view=rev for 2.2.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
"jaxws:endpoint publish=""false"" ignored",CXF-2945,12471751,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,ericacm,ericacm,16/Aug/10 21:21,11/Oct/10 14:45,14/Mar/19 02:29,17/Aug/10 17:43,2.2.9,,,,,,,,,,,,,,,,,2.2.11,,,,JAX-WS Runtime,,,,0,,,,,,"jaxws:endpoint publish=""false"" attribute is ignored.

Confirmed by Daniel on the user's list:

This definitely looks like a bug.   Can you log it?

Looking at the code in the EndpointDefinitionParser, I just see:

       if (!isAbstract) {
           bean.setInitMethodName(""publish"");
           bean.setDestroyMethodName(""stop"");
       }
       // We don't want to delay the registration of our Server
       bean.setLazyInit(false);
",,,,,,,,,,,,,,,,,17/Aug/10 12:49;ericacm;Add_support_for_publish_to_jaxws_endpoint.patch;https://issues.apache.org/jira/secure/attachment/12452275/Add_support_for_publish_to_jaxws_endpoint.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-17 17:43:29.896,,,no_permission,,,,,,,,,,,,,47252,,,Tue Aug 17 17:43:29 UTC 2010,,,,,,0|i13yin:,231222,,,,,,,,17/Aug/10 12:49;ericacm;Attached patch for this bug.   The patch is against the 2.2.x-fixes branch.,"17/Aug/10 17:43;dkulp;

Patch applied.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,
targetNamespace value in @WebResult annotation does not respect the refrence element namespace,CXF-2944,12471677,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,16/Aug/10 10:31,11/Oct/10 14:45,14/Mar/19 02:29,16/Aug/10 16:36,,,,,,,,,,,,,,,,,,2.2.11,,,,Tooling,,,,0,,,,,,"SEI generated with wsdl contains the following schema should contains the namespace value =""hello/name""   in @WebResult annotation  :

<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:ns1=""hello/name"" xmlns:tns=""http://cxf2941.fortest.tools.cxf.apache.org/"" elementFormDefault=""unqualified"" targetNamespace=""http://cxf2941.fortest.tools.cxf.apache.org/"" version=""1.0"">
<xs:import namespace=""hello/name""/>
<xs:element name=""helloString"" type=""tns:helloString""/>
<xs:element name=""helloStringResponse"" type=""tns:helloStringResponse""/>
<xs:complexType name=""helloString"">
    <xs:sequence>
      <xs:element name=""arg0"" type=""xs:int""/>
    </xs:sequence>
  </xs:complexType>
<xs:complexType name=""helloStringResponse"">
    <xs:sequence>
      <xs:element minOccurs=""0"" ref=""ns1:name""/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" targetNamespace=""hello/name"" version=""1.0"">
<xs:element name=""name"" type=""xs:string""/>
</xs:schema>

------------The actual SEI generated --------------
public interface WebResultService {

    @WebResult(name = ""name"", targetNamespace = ""hello/name"")
    @RequestWrapper(localName = ""helloString"", targetNamespace = ""http://cxf2941.fortest.tools.cxf.apache.org/"", className = ""org.apache.cxf.tools.fortest.cxf2941.HelloString"")
    @WebMethod(action = ""urn:HelloString"")
    @ResponseWrapper(localName = ""helloStringResponse"", targetNamespace = ""http://cxf2941.fortest.tools.cxf.apache.org/"", className = ""org.apache.cxf.tools.fortest.cxf2941.HelloStringResponse"")
    public java.lang.String helloString(
        @WebParam(name = ""arg0"", targetNamespace = """")
        int arg0
    );
}
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47253,,,2010-08-16 10:31:53.0,,,,,,0|i13yev:,231205,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
slight typo in Servlet Transport documentation page,CXF-2943,12471612,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,asafdav2,asafdav2,14/Aug/10 13:20,11/Oct/10 14:57,14/Mar/19 02:29,16/Aug/10 18:46,,,,,,,,,,,,,,,,,,Invalid,,,,Documentation,,,,0,,,,,,"under http://cxf.apache.org/docs/servlet-transport.html, in the first example under the <servlet> section there's this line
<servlet-classorg.apache.cxf.transport.servlet.CXFServlet</servlet-class>
as you can see, there's a > missing between class and org",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-16 18:46:02.793,,,no_permission,,Novice,,,,,,,,,,,47254,,,Mon Aug 16 18:46:02 UTC 2010,,,,,,0|i1afef:,268961,,,,,,,,"16/Aug/10 18:46;dkulp;
Fixed the page.   Should sync to the site in a few hours.",,,,,,,,,,,,,,,,,,,,,,,,,,
ServletTransportFactory bean in cxf-servlet.xml file use incorrect collection type.,CXF-2942,12471564,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,harpreet.java,harpreet.java,13/Aug/10 15:53,11/Oct/10 14:45,14/Mar/19 02:29,07/Sep/10 18:40,2.2.8,,,,,,,,,,,,,,,,,2.2.11,,,,,,,,1,,,,,,"ServletTransportFactory bean defined in cxf-servlet.xml file use Set instead of List.

 <bean class=""org.apache.cxf.transport.servlet.ServletTransportFactory""  id=""org.apache.cxf.transport.servlet.ServletTransportFactory"">
        <property name=""bus"" ref=""cxf""/>
        <property name=""transportIds"">
            <set>
                <value>http://cxf.apache.org/bindings/xformat</value>
                <value>http://schemas.xmlsoap.org/soap/http</value>
                <value>http://schemas.xmlsoap.org/wsdl/http/</value>
                <value>http://schemas.xmlsoap.org/wsdl/soap/http</value>
 	            <value>http://www.w3.org/2003/05/soap/bindings/HTTP/</value>
                <value>http://cxf.apache.org/transports/http/configuration</value>                
            </set>
        </property>

must be

 <bean class=""org.apache.cxf.transport.servlet.ServletTransportFactory""
	  id=""org.apache.cxf.transport.servlet.ServletTransportFactory"">
        <property name=""bus"" ref=""cxf""/>
        <property name=""transportIds"">
            <list>
                <value>http://cxf.apache.org/bindings/xformat</value>
                <value>http://schemas.xmlsoap.org/soap/http</value>
                <value>http://schemas.xmlsoap.org/wsdl/http/</value>
                <value>http://schemas.xmlsoap.org/wsdl/soap/http</value>
 	            <value>http://www.w3.org/2003/05/soap/bindings/HTTP/</value>
                <value>http://cxf.apache.org/transports/http/configuration</value>                
            </list>
        </property>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47255,,,2010-08-13 15:53:36.0,,,,,,0|i13yjb:,231225,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Response wrapper bean generation does not respect the @WebResult annotation,CXF-2941,12471516,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,13/Aug/10 09:58,11/Oct/10 14:45,14/Mar/19 02:29,16/Aug/10 16:34,,,,,,,,,,,,,,,,,,2.2.11,,,,Tooling,,,,0,,,,,,"The namespace value of @XmlElement should be ""hello/name"" and name value should be ""name"" in the wrapp bean HelloStringResponse.java which is genererated from the following SEI: 
public class WebResultService {
    @WebMethod(operationName=""helloString"", action=""urn:HelloString"")
    @WebResult(name=""name"", partName=""name"", targetNamespace=""hello/name"")
    public String hello(int age) {
      return ""Hello "" + age + "" to Web Service"";
    }
}

java2ws tool  does not respect the @WebResult annotation to get the namesapce and value to generate the @XmlElement in the wrapper bean :

@XmlRootElement(name = ""helloStringResponse"", namespace = ""http://cxf2936.fortest.tools.cxf.apache.org/"")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""helloStringResponse"", namespace = ""http://cxf2936.fortest.tools.cxf.apache.org/"")

public class HelloResponse {

    @XmlElement(name = ""return"")
    private java.lang.String name;

    public java.lang.String getName() {
        return this.name;
    }

    public void setName(java.lang.String newName)  {
        this.name = newName;
    }
}



",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47256,,,2010-08-13 09:58:53.0,,,,,,0|i0v03r:,178990,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Permgen Leak in JAXB due to recreation of JAXBContexts in CXF,CXF-2939,12471464,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pvblivs,pvblivs,12/Aug/10 21:26,08/Apr/11 11:02,14/Mar/19 02:29,13/Aug/10 01:20,2.1.5,,,,,,,,,,,,,,,,,2.2.10,,,,JAX-RS,,,,0,,,,,,"From http://cxf.547215.n5.nabble.com/REST-web-service-loading-many-classes-for-each-request-CXF-2-2-6-and-jaxb-impl-2-1-5-td2266472.html#a2266472:

If a GC occurs, WeakRefs throw away the JAXBContext. So on the next occasion (where occasion could be one of billions of calls to a CXF/JAXB api) the JAXBContext has to be rebuilt from scratch. 
JAXB (specifically com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector) calls com.sun.xml.bind.v2.runtime.reflect.opt.Injector#find to try, if it already created a field or method accessor class. If not it injects a new one into the class loader via com.sun.xml.bind.v2.runtime.reflect.opt.Injector#inject. 
The problem is now that #inject caches the generated accessor in the Injector and find only looks into the Injector (and never again into the class loader, where it used to define the class). But once a GC occurs the Injector throws itself away, too (caching itself in some weak map). 

So it happens that each REST api call after a GC occurred a hundred new classes are created by JAXB - because JAXB on low-level forgets the classes it defines (and keeps them on high-level) and CXF forgets the JAXBContext so that the high-level memory of JAXB is erased as well. 

There are four possible solutions: 
 - Fix the Injector: Actually very easy and my favorite solution. Just let the Injector look into the class loader as well when it cannot find the class in its own memory. BUT to have a bug fixed in JAXB actually sounds scary, how long would that take to get into a version?) 
 - Enable CXF to keep only one JAXB context (and not to throw it away) - do not know how to do that 
 - Use a workaround to disable bytecode generation by JAXB (-Dcom.sun.xml.bind.v2.bytecode.ClassTailor.noOptimize=true) --> disables the whole bytecode magic Injector stuff and just does reflection - probably with a slight performance impact 
 - Do not use JAXB with CXF on a website with significant load ",,,,,,,,,,,,,,,,,12/Aug/10 21:32;pvblivs;removed_weak_hash_maps.patch;https://issues.apache.org/jira/secure/attachment/12451952/removed_weak_hash_maps.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-09-23 11:14:39.2,,,no_permission,,,,,,,,,,,,,47258,,,Fri Apr 08 11:02:37 UTC 2011,,,,,,0|i14dwf:,233715,,,,,,,,"12/Aug/10 21:32;pvblivs;This patch just changes WeakHashMaps to HashMaps in two lines. I did not write any tests as testing GC behaviour seemed a little ridiculous to me and the interface to create the JAXBContext is a static. Should I refactor anything that this is testable? Nevertheless testing if the GC doesn't throw away any Map entries sounds funny :-)

But I executed the tests nonetheless. ","23/Sep/10 11:14;robneild;The project I work on has the CXF libraries in the tomcat ""shared/lib"" area.

When I upgraded to 2.2.10, restarting WARs in tomcat was broken (JAXBContextImpl.getBeanInfo generates exceptions saying it can't find beans)

On investigation I found that with a WeakHashMap, JAXBContext is rebuild when a WAR was stopped and started.

But using a HashMap means JAXBContext  isn't re-created on a application restart


I am guessing people would advise the CXF libraries not be put into the shared classloader area ""shared/lib"" and should be in each individual application WAR?","23/Sep/10 11:35;sergey_beryozkin;Are you referring  to CXF JAXRS frontend ? In 2.2.10,  JAXBElementProvider does not use WeakHashMaps... ","23/Sep/10 11:50;pvblivs;Yeah, Sergey - and that is the problem, as I understand it.

Rob, this reads like a class-loader problem. CXF accesses application specific ressources like annotated beans etc. So it is not really a shared library like log4j or an Oracle jdbc driver for example, which have no runtime dependencies to your web application but only are service dependencies.

Sorry to say that, but I would not put CXF into shared/lib. ;-)
","23/Sep/10 12:09;sergey_beryozkin;Hmm...

So we've solved one problem but have introduced another one...

To be honest - this is not the problem of the CXF but that of JAXBElementProvider - quickly rebuilding the one from source and replacing HashMap with WeakHashMap will do it if the weak map is expected.

But there must be a better way to choose between HashMaps and WeakHashMaps if it is what is needed to help users to put the cxf  into the shared lib  ","23/Sep/10 15:05;pvblivs;Does CXF work as a shared lib anyway? Can I deploy a second Webapp using CXF and it works with the shared lib? If not, we should not do anything to enable this.

If yes, you can think about a shutdown or refresh hook. As far as I know CXF already listens to Spring framework application events. If it is shutting down or refreshing, you could simply evict the context specific caches. Just look at org.apache.cxf.transport.servlet.CXFServlet#onApplicationEvent which is already doing maintenance work on refreshes. It could probably do more","23/Sep/10 21:28;dkulp;

Well, CXF needs to work as a shared library.  In an OSGi environment, CXF would be another bundle deployed in the OSGi container and thus must be sharable.   Thus, if there are bugs, we need to get them fixed.",08/Apr/11 11:02;sergey_beryozkin;JAXBProviders are endpoint scoped in 2.4.0 - so no WAR 'specific' JAXB contexts will be stored at the shared loader level,,,,,,,,,,,,,,,,,,,
"Confluence doc has broken link, sort of",CXF-2938,12471431,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,bmargulies,bmargulies,12/Aug/10 15:46,21/Jan/11 18:18,14/Mar/19 02:29,02/Nov/10 19:54,,,,,,,,,,,,,,,,,,2.3,,,,JAX-RS,,,,0,,,,,,"http://svn.apache.org/repos/asf/cxf/trunk/systests/jaxrs/src/test/resources/jaxrs_soap_rest/WEB-INF/beans.xml

returns raw XML to the browser, which looks pretty useless to Chrome.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47259,,,2010-08-12 15:46:26.0,,,,,,0|i1afen:,268962,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
character encoding in cxf-codegen is wrong,CXF-2937,12471290,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,mgoldhahn,mgoldhahn,11/Aug/10 13:33,05/Jun/12 13:31,14/Mar/19 02:29,03/May/12 16:51,2.2.9,,,,,,,,,,,,,,,,,2.5.4,2.6.1,,,Tooling,,,,0,,,,,,"We develop on linux and Windows concurrently. Therefor we choose to use UTF-8 as source encoding. We also set the property project.build.sourceEncoding in maven to utf-8.

Further we have a utf-8 encoded WSDL with some comments in Norwegian (containing letters like åæø). On Windows the generated code contains these characters as ISO-8859-1 even though I set -Dfile.encoding=utf-8 on the maven command line.

A workaround is to set the property project.build.sourceEncoding in a maven profile and activate it by OS.","windows, sun java 6",,,,,,,,,,,,CXF-2450,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-11 14:35:22.686,,,no_permission,,,,,,,,,,,,,47260,,,Wed May 30 20:51:25 UTC 2012,,,,,,0|i089in:,46141,,,,,,,,"11/Aug/10 14:35;dkulp;
This is pretty much the same issue as CXF-2450.   

While we could fix SOME of it (the parts that CXF generates), we cannot fix all of it as the types are generated by JAXB and are subject to it's bugs and limitations.   Until they fix it in JAXB, we cannot do a full fix.

What's more, if we fixed it in CXF and we DON'T have a fix for JAXB, we'd run into the problem where some code is in one encoding and some code is in another making it impossible to really be able to provide an encoding to javac that would work for everything.
","02/May/12 21:11;dkulp;Just committed a fix for this to trunk. I'd definitely appreciate some folks testing out tonights 2.6.1-SNAPSHOT builds (or checkout trunk and build yourself) and seeing if it will work for you.

Note that this REQUIRES JAXB 2.2.5 or newer.","30/May/12 20:51;umefjord;This fix works for me (also had problems with Swedish characters in comments in the UTF-8 encoded WSDLs). I appreciate the fix, thanks!!

Just tested latest snapshot (5/30/12) with 

<pluginRepositories>
                <pluginRepository>
                    <id>apache-snapshots</id>
                    <url>https://repository.apache.org/content/groups/snapshots</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>

...

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>2.6.1-SNAPSHOT</version>
                ...
            <plugin>


...

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb1-impl</artifactId>
            <version>2.2.5.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>2.2.5-2</version>
        </dependency>

",,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in ServerImpl combining JAX-RS and Simple Frontend,CXF-2936,12471263,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,deki,deki,11/Aug/10 09:34,11/Oct/10 14:52,14/Mar/19 02:29,12/Aug/10 16:52,2.2.9,,,,,,,,,,,,,,,,,2.2.10,,,,JAX-RS,,,,0,,,,,,"After adding JAXRS to an existing CXF webservice application (using simple frontend) the startup fails with a NPE in ServerImpl:

{noformat} 
2010-08-11 10:07:26.980::WARN:  Failed startup of context org.mortbay.jetty.plugin.Jetty6PluginWebAppContext@608925b0
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 
'org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser$SpringJAXRSServerFactoryBean---47367291': Invocation of init method failed; 
nested exception is org.apache.cxf.service.factory.ServiceConstructionException
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1412)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
        at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:579)
        at org.mortbay.jetty.servlet.Context.startContext(Context.java:156)
        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1215)
        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:548)
        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:348)
        at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:107)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:151)
        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:151)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
        at org.mortbay.jetty.Server.doStart(Server.java:222)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:384)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:320)
        at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:205)
        at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.cxf.service.factory.ServiceConstructionException
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:122)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        ... 51 more
Caused by: java.lang.NullPointerException
        at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:127)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:113)
        ... 58 more
2010-08-11 10:07:26.055::WARN:  Nested in org.springframework.beans.factory.BeanCreationException: Error creating bean with name 
'org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser$SpringJAXRSServerFactoryBean---47367291': Invocation of init method failed; 
nested exception is org.apache.cxf.service.factory.ServiceConstructionException:
java.lang.NullPointerException
        at org.apache.cxf.endpoint.ServerImpl.start(ServerImpl.java:127)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:113)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
        at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:579)
        at org.mortbay.jetty.servlet.Context.startContext(Context.java:156)
        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1215)
        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:548)
        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:348)
        at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:107)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:151)
        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:151)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
        at org.mortbay.jetty.Server.doStart(Server.java:222)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:384)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:320)
        at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:205)
        at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
{noformat} ","Windows 7 64-Bit, Java 1.6.0_17, Jetty 7.0.0.pre5",,,,,,,,,,,,,,,,12/Aug/10 08:13;deki;cxf-testserver.zip;https://issues.apache.org/jira/secure/attachment/12451871/cxf-testserver.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-08-12 02:14:33.018,,,no_permission,,,,,,,,,,,,,47261,,,Mon Aug 23 11:59:58 UTC 2010,,,,,,0|i0uyvz:,178793,,,,,,,,"12/Aug/10 02:14;dkulp;

Can you create a sample for this?   The above is really not much to go on.","12/Aug/10 08:13;deki;Created a simple testcase. Now there is another exception before the NPE occurs:

{noformat} 
12.08.2010 10:06:03 org.springframework.beans.GenericTypeAwarePropertyDescriptor getWriteMethodForActualAccess
WARNUNG: Invalid JavaBean property 'serviceBeans' being accessed! Ambiguous write methods found next to actually used 
[public void org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(java.lang.Object[])]: 
[public void org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(java.util.List)]
org.apache.cxf.BusException: No binding factory for namespace http://apache.org/cxf/binding/jaxrs registered.
        at org.apache.cxf.binding.BindingFactoryManagerImpl.getBindingFactory(BindingFactoryManagerImpl.java:91)
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.createBindingInfo(AbstractJAXRSFactoryBean.java:142)
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.createEndpointInfo(AbstractJAXRSFactoryBean.java:122)
        at org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.createEndpoint(AbstractJAXRSFactoryBean.java:168)
        at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:92)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
        at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:579)
{noformat} ","12/Aug/10 16:24;dkulp;

Add:

{code}
    <import resource=""classpath:META-INF/cxf/cxf-extension-jaxrs-binding.xml"" />
{code}

To the context as you need that to publish jaxrs endpoints.

","12/Aug/10 16:52;dkulp;
It is a config issue, but for 2.2.10 (and trunk), I've made importing that spring config not required.",23/Aug/10 11:59;deki;Thanks!,,,,,,,,,,,,,,,,,,,,,,
The targentNamespace value in @Webparam generated from a reference element is wrong,CXF-2935,12471251,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,11/Aug/10 03:21,11/Oct/10 14:45,14/Mar/19 02:29,16/Aug/10 16:33,,,,,,,,,,,,,,,,,,2.2.11,,,,Tooling,,,,0,,,,,,"Pass the ""-allowReferenceElement"" flag and generate wrapped operation for the flowing wsdl:

<?xml version=""1.0"" encoding=""UTF-8""?>
<wsdl:definitions name=""WebService"" targetNamespace=""http://cxf.apache.org"" xmlns:ns1=""helloString/Name"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:tns=""http://cxf.apache.org"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"">
  <wsdl:types>
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:ns1=""helloString/Name"" xmlns:tns=""http://cxf.apache.org"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"" targetNamespace=""http://cxf.apache.org"">
<xs:element name=""helloString"" type=""tns:helloString""/>
  <xs:element name=""helloStringResponse"" type=""tns:helloStringResponse""/>
  <xs:complexType name=""helloString"">
    <xs:sequence>
      <xs:element minOccurs=""0"" ref=""ns1:Name""/>
    </xs:sequence>
  </xs:complexType>  
 
<xs:complexType name=""helloStringResponse"">
    <xs:sequence>
      <xs:element minOccurs=""0"" name=""return"" type=""xs:string""/>
      <xs:element minOccurs=""0"" ref=""ns1:Name""/>
      <xs:element minOccurs=""0"" name=""Employee"" type=""tns:employee""/>
    </xs:sequence>
  </xs:complexType>
<xs:schema>
<wsdl:types>
...
</wsdl:definitions>


The  ""targetNamespace"" value in @WebParam annotated to ""name"" paramter should be ""helloString/Name"" , not the default value:

The public interface WebService {
    @WebResult(name = ""return"", targetNamespace = """")
    @RequestWrapper(localName = ""helloString"", targetNamespace = ""http://cxf.apache.org"", className = ""org.apache.cxf.HelloString"")
    @WebMethod(action = ""urn:HelloString"")
    @ResponseWrapper(localName = ""helloString4Response"", targetNamespace = ""http://cxf.apache.org"", className = ""org.apache.cxf.HelloStringResponse"")
    public java.lang.String helloString(
        @WebParam(mode = WebParam.Mode.INOUT, name = ""Name"", targetNamespace = """")
        javax.xml.ws.Holder<Name> name,
        @WebParam(mode = WebParam.Mode.OUT, name = ""Employee"", targetNamespace = """")
        javax.xml.ws.Holder<Employee> employee
    ); 


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47262,,,2010-08-11 03:21:32.0,,,,,,0|i13ygf:,231212,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The wrong target namespace of filed  in response wrapper bean is generated,CXF-2934,12471250,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,11/Aug/10 02:46,11/Oct/10 14:45,14/Mar/19 02:29,16/Aug/10 16:32,,,,,,,,,,,,,,,,,,2.2.11,,,,Tooling,,,,0,,,,,,"When use java2ws with ""-wrapperbean"" flag to generate wsdl for this SEI :

public class webParamWebService {
  @WebMethod(operationName=""helloString4"", action=""urn:HelloString4"")
  public String hello4(@WebParam (name=""Name"", targetNamespace=""helloString4/Name"", mode=WebParam.Mode.INOUT) Holder<Name> name, @WebParam (name=""Employee"", mode=WebParam.Mode.OUT) Holder<org.apache.cxf.Employee> employee) {
    return ""Hello "" + name + "" to Web Service"";
  }
｝

the namespace value ""helloString4/Name"" in the @XmlElement annotated to Name field is missing:

@XmlRootElement(name = ""helloString4Response"", namespace = ""http://cxf.apach.org"")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""helloString4Response"", namespace = ""http://cxf.apach.org"", propOrder = {""_return"", ""Name"", ""Employee""})

public class Hello4Response {

    @XmlElement(name = ""return"")
    private java.lang.String _return;
    @XmlElement(name = ""Name"")
    private org.apache.cxf.Name Name;
    @XmlElement(name = ""Employee"")
    private org.apache.cxf.Employee Employee;
   ....
}
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47263,,,2010-08-11 02:46:28.0,,,,,,0|i13ygn:,231213,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing ConfiguredBeanLocator in bus created by org.apache.cxf.bus.CXFBusFactory,CXF-2927,12470808,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,asoldano,asoldano,04/Aug/10 14:52,11/Oct/10 14:45,14/Mar/19 02:29,06/Oct/10 20:08,,,,,,,,,,,,,,,,,,2.3,,,,Bus,,,,0,,,,,,"On the current trunk (2.3-SNAPSHOT) a ConfiguredBeanLocator instance is only installed when the Spring based Bus factory is used. Unfortunately not all the retrieval of that bus extensions are followed by a check for the extension being actually available, hence it's possible to get NPE.
I've reproduced this issue when manually enabling WS-Policy engine after building the Bus with the CXFBusFactory as well as using the wsdl2java tooling (without spring available).
In the latter, for instance, the BindingFactoryManagerImpl throws NPE when finding the BindingFactory for a wsdl segement like this:
    <binding name=""Hello2Binding"" type=""tns:Hello2"">
   <wsp:Policy>
     <wsam:Addressing wsp:Optional=""true"">
       <wsp:Policy/>
     </wsam:Addressing>
   </wsp:Policy> 

As a temporary workaround I've succesfully verified adding a dummy locator to the bus solves the problem. That would implement ConfiguredBeanLocator returning null/empty collections.
However, I'm worndering what we want to do here, we can either go and protect every access to this locator or install a default one that does nothing in the CXFBusFactory.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-08-05 15:56:02.61,,,no_permission,,,,,,,,,,,,,47270,,,Thu Oct 07 08:15:31 UTC 2010,,,,,,0|i0v02f:,178984,,,,,,,,"05/Aug/10 15:56;dkulp;
The other option is in the ExtensionBus that you get when you don't have spring is to have it have a special ConfiguredBeanLocator that does smart things with the loaded extensions.   Thus, the ""get by class"" things could iterator through the extensions for those that implement the class and such.

That MAY be a first step in getting some of the policy things auto loaded when not using Spring.   If the SecPolLoader bean is in the extension array, when the policy engine starts up and need the extensions, it would ask the locator for all the PolicyLoaders and this would then find them.

","07/Oct/10 08:15;asoldano;Just tried removing the local workaround, everything seems fine now. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,
WS-SP support does not enforce signature algorithm or digest algorithm on server side,CXF-2924,12470647,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,coheigea,davaleri,davaleri,02/Aug/10 14:14,19/Oct/11 17:30,14/Mar/19 02:29,16/Sep/11 10:32,2.2.10,2.3,,,,,,,,,,,,,,,,2.4.3,2.5,,,WS-* Components,,,,0,,,,,,"A WS-SP policy document that includes an algorithm suite assertion for a signature operation, such as the example below, does not trigger the enforcement of the algorithm suite in the inbound interceptors.
{code:xml}
    ...
      <sp:AsymmetricBinding>
        <wsp:Policy>
          <sp:InitiatorToken>
            <wsp:Policy>
              <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
                <wsp:Policy>
                  <sp:RequireIssuerSerialReference />
                  <sp:WssX509V3Token10 />
                </wsp:Policy>
              </sp:X509Token>
            </wsp:Policy>
          </sp:InitiatorToken>
          <sp:RecipientToken>
            <wsp:Policy>
              <sp:X509Token sp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Never"">
                <wsp:Policy>
                  <sp:RequireIssuerSerialReference />
                  <sp:WssX509V3Token10 />
                </wsp:Policy>
              </sp:X509Token>
            </wsp:Policy>
          </sp:RecipientToken>
          <sp:AlgorithmSuite>
            <wsp:Policy>
              <sp:Basic256Sha256 />
            </wsp:Policy>
          </sp:AlgorithmSuite>
          <sp:Layout>
            <wsp:Policy>
              <sp:Strict />
            </wsp:Policy>
          </sp:Layout>
        </wsp:Policy>
      </sp:AsymmetricBinding>
    ...
{code}

While the message could be inspected in order to extract this information, WSS4J already possesses the information.  Unfortunately, WSS4J does not report the information in the result data (1.5.8).  This issue is blocked on the addition of this information to the WSS4J results.  See WSS-236.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,Blocked on External,,,,,,no_permission,,,,,,,,,,,,,43985,,,2010-08-02 14:14:16.0,,,,,,0|i0b7of:,63356,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAX-RS runtime configuration (Spring) warns with Spring 3.0.3,CXF-2922,12470572,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bmargulies,bmargulies,31/Jul/10 12:06,11/Oct/10 14:45,14/Mar/19 02:29,25/Aug/10 12:38,2.2.9,,,,,,,,,,,,,,,,,2.3,,,,JAX-RS,,,,0,,,,,,"The error is:
{noformat}
org.apache.cxf.endpoint.ServerImpl  - Setting the server's publish address to be /Extraction
Jul 31, 2010 7:54:31 AM org.springframework.beans.GenericTypeAwarePropertyDescriptor getWriteMethodForActualAccess
WARNING: Invalid JavaBean property 'serviceBeans' being accessed! Ambiguous write methods found next to actually used [public void org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(java.lang.Object[])]: [public void org.apache.cxf.jaxrs.JAXRSServerFactoryBean.setServiceBeans(java.util.List)]
{noformat}

For:

{code}
 <jaxrs:server id=""configService"" address=""/configuration"">
    <jaxrs:serviceBeans>
      <ref bean=""configServiceImpl"" />
    </jaxrs:serviceBeans>
    <jaxrs:providers>
      <bean class=""org.codehaus.jackson.jaxrs.JacksonJsonProvider"" />
      <bean class=""com.basistech.ras.CacheControlResponseModifier"" />
    </jaxrs:providers>
  </jaxrs:server>
{code}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47274,,,Sat Jul 31 12:10:34 UTC 2010,,,,,,0|i140an:,231510,,,,,,,,"31/Jul/10 12:10;bmargulies;Well, oops, not an error or failure, just a warning.",,,,,,,,,,,,,,,,,,,,,,,,,,
PolicyBasedWSS4JInInterceptor not asserting TransportBinding assertion when no message layer security is added,CXF-2921,12470534,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,30/Jul/10 17:24,11/Oct/10 14:45,14/Mar/19 02:29,02/Aug/10 14:09,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.10,2.3,,,WS-* Components,,,,0,,,,,,"When a TransportBinding assertion is used and no message layer security is employed, the WSS4JInInterceptor does not delegate result processing to PolicyBasedWSS4JInInterceptor.  As a result, the transport bindings are not asserted.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-30 18:05:25.012,,,no_permission,,,,,,,,,,,,,47275,,,Fri Jul 30 18:45:29 UTC 2010,,,,,,0|i1409r:,231506,,,,,,,,"30/Jul/10 18:05;gmazza;I'm not sure this is a bug.  Policy reading requires having the policy and security modules in the classpath (http://cxf.apache.org/docs/ws-securitypolicy.html#WS-SecurityPolicy-EnablingWSSecurityPolicy), which they are by default.  Perhaps you're saying just including the former should be enough to activate non-security elements of the policy?
","30/Jul/10 18:45;davaleri;I forgot to include the policy sample in the description.  By ""no message layer security is employed"" I meant that no WS-S Security header or child elements are in the SOAP Header.  When this element is missing, the WSS4JInInterceptor would return before delegating to PolicyBasedWSS4JInInterceptor.  If PolicyBasedWSS4JInInterceptor is not given a chance to #doResults, even if there are no results from WSS4J, it does not assert the TransportBinding assertions.  Since this interceptor is solely responsible for asserting that binding, it has to be given a chance to do so, even if no WS-S Security header is in play.

The test case and code changes should demonstrate what I was after, even if the above description is still confusing.",,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not correctly start JAX-WS endpoints using the servlet transport that have been stopped by using JMX,CXF-2920,12470523,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,gbauer,gbauer,30/Jul/10 14:54,31/Mar/17 19:38,14/Mar/19 02:29,28/Mar/17 18:27,2.2.9,,,,,,,,,,,,,,,,,3.0,,,,Transports,,,,0,,,,,,"http://cxf.547215.n5.nabble.com/Using-JMX-to-start-and-stop-web-services-tp2256734p2256734.html

When using CXF with servlet transport, JAX-WS services do not start correctly after they have been stopped by using JMX even though their status is ""STARTED"". They are reloaded correctly only when the entire WebModule is reloaded.","apache-tomcat-6.0.26
jdk1.6.0_04",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-09-09 12:47:53.437,,,no_permission,,,,,,,,,,,,,43553,,,Tue Mar 28 18:27:27 UTC 2017,,,,,,0|i1aeyf:,268889,,,,,,,,"09/Sep/11 12:47;ay;For non-jetty servlet, there is the activate method missing in the corresponding Destination implementation (See o.a.c.t.h.jetty.JettyDestination and its non-jetty variant o.a.c.t.h.servlet.ServletDestination). 

I don't know how we can make tomcat to work. Any suggestion?
","28/Mar/17 18:27;dkulp;I believe this has been fixed for a long time
",,,,,,,,,,,,,,,,,,,,,,,,,
"NullPointerException at org.apache.cxf.staxutils.StaxUtils.writeNode(Node, XMLStreamWriter, boolean) when DOCTYPE is in a XML Schema",CXF-2919,12470517,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,mauromol,mauromol,30/Jul/10 14:18,11/Oct/10 14:52,14/Mar/19 02:29,11/Aug/10 17:42,2.2.9,,,,,,,,,,,,,,,,,2.2.10,,,,,,,,0,,,,,,"Following a contract first approach, if I expose a WSDL which imports a XSD with a DOCTYPE declaration, for instance:

<?xml version=""1.0"" encoding=""utf-8""?>
<!DOCTYPE xs:schema PUBLIC ""-//W3C//DTD XMLSCHEMA 200102//EN"" ""http://www.w3.org/2001/XMLSchema.dtd"">
<!--
   [...]
-->
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"" [...]>

then, when invoking the CXFServlet to show this XSD I get the following exception:

java.lang.NullPointerException
	at com.sun.xml.internal.stream.writers.UTF8OutputStreamWriter.write(UTF8OutputStreamWriter.java:127)
	at com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.writeDTD(XMLStreamWriterImpl.java:722)
	at org.apache.cxf.staxutils.StaxUtils.writeNode(StaxUtils.java:775)
	at org.apache.cxf.staxutils.StaxUtils.writeDocument(StaxUtils.java:600)
	at org.apache.cxf.staxutils.StaxUtils.writeDocument(StaxUtils.java:588)
	at org.apache.cxf.staxutils.StaxUtils.writeNode(StaxUtils.java:762)
	at org.apache.cxf.transport.http.WSDLQueryHandler.writeResponse(WSDLQueryHandler.java:230)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:162)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:108)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:619)

This is because org.apache.cxf.staxutils.StaxUtils.writeNode(Node, XMLStreamWriter, boolean) does the following for a Node of type DOCUMENT_TYPE_NODE:

            try {
                writer.writeDTD(((DocumentType)n).getTextContent());
            } catch (UnsupportedOperationException ex) {
                //can we ignore?  DOM writers really don't allow this
                //as there isn't a way to write a DTD in dom
            }

However, org.w3c.dom.Node.getTextContent() by contract returns NULL for a Node of type DOCUMENT_TYPE_NODE. This causes the NPE.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-30 15:08:38.405,,,no_permission,,,,,,,,,,,,,47276,,,Wed Aug 11 17:42:12 UTC 2010,,,,,,0|i0uzfz:,178883,,,,,,,,"30/Jul/10 15:08;gmazza;Why is this ""critical"", it seems oxymoronic for a XML Schema to contain a DTD declaration.  (Are they even permitted to have them?)  What do you propose as a solution -- are you just asking for a wrapping of the NPE (reasonable enough) or for CXF to somehow handle DTD's within XML Schemas?  (Are there specifications for that? -- I don't know.)","30/Jul/10 16:31;mauromol;""Critical"" because I find it quite normal that a XSD (which is an XML) may contain a DOCTYPE. I'm trying to expose the XSD of WS-Addressing (ws-addr.xsd - ""W3C XML Schema defined in the Web Services Addressing 1.0 specification"") provided by JBoss Transactions XTS, which comes with a DOCTYPE and I have to edit it (removing the DOCTYPE) in order to avoid CXF to throw the NPE.

I think CXF should handle the DOCTYPE by either skipping it (if it's useless with regards to WDSL publishing) or by just printing it out as-is.","11/Aug/10 17:42;dkulp;
Added a null guard",,,,,,,,,,,,,,,,,,,,,,,,
URIParserUtil.getAbsoluteURL() does not return a nomalized url string,CXF-2918,12470504,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,30/Jul/10 10:36,11/Oct/10 14:45,14/Mar/19 02:29,10/Aug/10 04:19,,,,,,,,,,,,,,,,,,2.2.10,2.3,,,Tooling,,,,0,,,,,,"URIParserUtil.getAbsoluteURL() does not return a normalized url string, this causes some binding file customization failed :

 	@Test
	public void testBinding() throws Exception {
        env.put(ToolConstants.CFG_WSDLURL, ""file:/home/jimma/code/tmp/all/../../tests/jaxws/ee/w2j/document/literal/headertest/HeaderTestService.wsdl"");
        env.put(ToolConstants.CFG_BINDING, ""/home/jimma/code/tests/jaxws/ee/w2j/document/literal/headertest/customfile.xml"");
        env.put(ToolConstants.CFG_OUTPUTDIR, ""/home/jimma/tmp/codeGen"");
        processor.setContext(env);
        processor.execute();
	}

<!--customfile.xml""------>

<?xml version=""1.0"" encoding=""UTF-8""?>
<bindings wsdlLocation=""HeaderTestService.wsdl"" xmlns=""http://java.sun.com/xml/ns/jaxws"">    
    <bindings node=""wsdl:definitions"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"">
        <package name=""org.apache.cxf.package""/>
    </bindings>
</bindings>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47277,,,2010-07-30 10:36:41.0,,,,,,0|i140a7:,231508,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unmarshalling the JSON of a subclass fails when a field value is null,CXF-2916,12470318,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,chaitanyak,chaitanyak,28/Jul/10 06:42,18/Apr/11 12:44,14/Mar/19 02:29,08/Apr/11 12:56,2.2.9,,,,,,,,,,,,,,,,,2.3.4,2.4,,,JAX-RS,,,,0,,,,,,"Unmarshalling the JSON :

{""@xsi.type"" : ""subClassTest"", ""id"" : ""10000000"", ""name"" : null }

should give an instance of SubClassTest.class and the value of the field name(which is a String) should be null, but with the current implementation the value of the field name is String ""null"" .

This happens only in the case of unmarshalling JSON to a subclass.","Windows XP,  JDK 1.6.0_14",86400,86400,,0%,86400,86400,,,,,,,,,,03/Aug/10 04:41;drewbob;CXF-2916-jettison.patch;https://issues.apache.org/jira/secure/attachment/12451105/CXF-2916-jettison.patch,03/Aug/10 04:41;drewbob;CXF-2916.patch;https://issues.apache.org/jira/secure/attachment/12451104/CXF-2916.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-08-03 04:41:45.811,,,no_permission,,Moderate,,,,,,,,,,,5830,,,Thu Apr 07 11:40:41 UTC 2011,,,,,,0|i0b9gn:,63645,,,,,,,,"03/Aug/10 04:41;drewbob;This issue seems to be caused by http://jira.codehaus.org/browse/JETTISON-89 .  

The attached file (CXF-2916.patch) should be applied the cxf trunk.
The attached file (CXF-2916-jettison.patch) should be applied to the jettison trunk.
 ","04/Aug/10 07:37;sergey_beryozkin;Hi Andrew 

Can you please attach CXF-2916-jettison.patch to http://jira.codehaus.org/browse/JETTISON-89, if possible with a simple
Jettison test ? This will make if feasible to start talking about say Jettison 1.2.1. We can't really depend on 1.3-SNAPSHOT, this would be a major release, with some major fixed/enhancements and it is unlikely to happen in the short term. 1.2.1 is more realistic.

In meantime, the only thing you can do in CXF is to register a custom provider extending JSONProvider and override createReader(). Delegate to the superclass first and then wrap the returned reader in your own. Then somehow deal with ""null"" sequences...",04/Aug/10 16:56;drewbob;As requested the patch + test cases has been attached to http://jira.codehaus.org/browse/JETTISON-89 .,"07/Apr/11 11:40;sergey_beryozkin;Andrew, your patch has been applied to Jettison 1.3-SNAPSHOT trunk, thanks.

Just FYI, JAXB, as opposed to Aegis, reports an empty string instead of null.

I suspect this is because Jettison now reports START and END element events but does not report CHARACTERS if 'currentValue' is null so JAXB assumes it is the case of something like <id></id>, thus, when we have 'String id', it sets the value of it to """".

I reckon that Jettison may need to enhanced a bit more to deal with properly, that is, if currentValue is null, then, rather than reporting START_ELEMENT, it has to completely skip the current node, but only if it is a simple element, possibly calling processElement() instead of setting an event to START_ELEMENT.

However, I'm not too worried if that not get fixed right now, empty value is definitely better than ""null"" and as you can see Aegis defaults to """" in case of null.

Please also check JSONProvider.testReadListOfDerivedTypesWithNullField  


",,,,,,,,,,,,,,,,,,,,,,,
Client with WS-SecurityPolicy requiring an IssuedToken fails to include an issued SAML token in the WS-Security signature of the message,CXF-2915,12470312,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,rnewcomb,rnewcomb,28/Jul/10 03:59,11/Oct/10 14:45,14/Mar/19 02:29,02/Aug/10 14:11,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.10,2.3,,,WS-* Components,,,,0,,,,,,"When using a SignedSupportingToken with a token type of IssuedToken in which the issued token is a SAML assertion, CXF fails to include the assertion in the message signature.  The issued SAML assertion is included in the message, but not covered / referenced by the signature.
",,,,,,,,,,,,,,,,,30/Jul/10 16:49;rnewcomb;cxf-2915-trunk.patch;https://issues.apache.org/jira/secure/attachment/12450914/cxf-2915-trunk.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47279,,,Fri Jul 30 16:49:20 UTC 2010,,,,,,0|i14e0n:,233734,,,,,,,,30/Jul/10 16:49;rnewcomb;Attached patch with unit test.,,,,,,,,,,,,,,,,,,,,,,,,,,
Digest algorithm defined in WS-SecurityPolicy is not honored in WS-Security signature from client,CXF-2914,12470310,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,rnewcomb,rnewcomb,28/Jul/10 02:55,22/Sep/15 14:14,14/Mar/19 02:29,29/Jul/10 15:46,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.10,2.3,,,WS-* Components,,,,0,,,,,,"The digest algorithm ""http://www.w3.org/2000/09/xmldsig#sha1"" is used in digital signatures from clients configured via WS-SecurityPolicy even when an AlgorithmSuite is defined within the policy that should resolve to a different digest algorithm.  For example, the following AlgorithmSuite policy should result in the digest algorithm of ""http://www.w3.org/2001/04/xmlenc#sha256"" (per the WS-SecurityPolicy specification):

<sp:AlgorithmSuite>
    <wsp:Policy>
        <sp:Basic256Sha256 />
    </wsp:Policy>
</sp:AlgorithmSuite>

The correct digest algorithm is determined by the AlgorithmSuite in the Binding; however, the algorithm information is not propagated to the WSSecSignature object that creates the signature.

",,,,,,,,,,,,,,,,,29/Jul/10 03:01;rnewcomb;cxf-2914-trunk.patch;https://issues.apache.org/jira/secure/attachment/12450789/cxf-2914-trunk.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-29 15:45:38.159,,,no_permission,,,,,,,,,,,,,47280,,,Tue Sep 22 14:14:04 UTC 2015,,,,,,0|i140af:,231509,,,,,,,,28/Jul/10 03:14;rnewcomb;The attached patch seems to resolve the issue.  Unit tests to follow.,29/Jul/10 03:01;rnewcomb;Attached an updated patch that includes supporting unit tests.,29/Jul/10 15:45;davaleri;Patch applied thanks to Rich.,"22/Sep/15 10:07;s.proels;Did Basic256Sha256 ever work that way?

In 3.1.3 I can set ws-security.symmetric.signature.algorithm and ws-security.asymmetric.signature.algorithm, which sets the signature algorithm fine, but does not influence the DigestMethod used in references. And Basic256Sha256 alone has no effect at all.
","22/Sep/15 14:14;coheigea;
Fixed here: https://issues.apache.org/jira/browse/CXF-6582

Colm.",,,,,,,,,,,,,,,,,,,,,,
Cannot detect signature coverage of SOAP elements referenced through the Security Token Reference Dereference Transform,CXF-2913,12470283,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,27/Jul/10 18:19,11/Oct/10 14:45,14/Mar/19 02:29,05/Oct/10 16:11,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,"WS-SP (or manually) enforced signature coverage cannot detect signature on elements referenced through the Security Token Reference Dereference Transform.

The fix is provided by WSS-222 scheduled to be released in 1.5.9.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,Blocked on External,,,,,,no_permission,,,,,,,,,,,,,47281,,,2010-07-27 18:19:36.0,,,,,,0|i13yb3:,231188,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EndpointPolicy is not ignoring empty Policies in its updatePolicy() method ,CXF-2912,12470272,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,27/Jul/10 16:17,11/Oct/10 14:45,14/Mar/19 02:29,05/Oct/10 15:50,2.2.9,,,,,,,,,,,,,,,,,2.2.11,2.3,,,WS-* Components,,,,0,,,,,,"When EndpointPolicy implementation is updated with empty Policy (containing no concrete Policy assertions) the resulting policy contains extra empty Policy alternatives which have not been present in the original policy containing no optional alternatives.

This makes it difficult to select the correct alternative during the effective policy initialization. ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47282,,,2010-07-27 16:17:08.0,,,,,,0|i13yfz:,231210,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpServletRequest.getScheme()  returns null in one way webservice method,CXF-2911,12470231,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,27/Jul/10 06:29,11/Mar/14 14:43,14/Mar/19 02:29,29/Jul/10 06:32,2.2.9,,,,,,,,,,,,,,,,,2.3,,,,WS-* Components,,,,0,,,,,,"When this SEI is deployed in tomcat , the httpServletRequest.getScheme() returns null value:

@Addressing(required=true)
@WebService(serviceName = ""SOAPService"", endpointInterface = ""org.apache.hello_world.Greeter"", targetNamespace = ""http://apache.org/hello_world"")
public class GreeterImpl implements Greeter {

    @Resource
    WebServiceContext wscontext;
    private String myName;

    public GreeterImpl() {
        this(""defaultGreeter"");
    }

    public GreeterImpl(String name) {
        myName = name;
    }

    public String greetMe(String me) {
        return ""Hello "" + me;
    }

    public String sayHi() {

        return ""Bonjour from "" + myName;
    }

    public void pingMe() {
        MessageContext msgContext = wscontext.getMessageContext();

        HttpServletRequest httpServletRequest =

        (HttpServletRequest)msgContext.get(MessageContext.SERVLET_REQUEST);

        System.out.println(httpServletRequest.getScheme());
    }
}

From the code , the WSA interceptor will create another thread to run  the serviceInvoker interceptor and servlet thread (receives the http request) will cleanup the request information.
The serviceInvoker in the new created thread always get null value from schemeMB. 

package org.apache.coyote;
public final class Request{
public void recycle() {
        bytesRead=0;

        contentLength = -1;
        contentTypeMB = null;
        charEncoding = null;
        headers.recycle();
        serverNameMB.recycle();
        serverPort=-1;
        localPort = -1;
        remotePort = -1;
        available = 0;

        cookies.recycle();
        parameters.recycle();

        unparsedURIMB.recycle();
        uriMB.recycle(); 
        decodedUriMB.recycle();
        queryMB.recycle();
        methodMB.recycle();
        protoMB.recycle();

        schemeMB.recycle();

        instanceId.recycle();
        remoteUser.recycle();
        authType.recycle();
        attributes.clear();
    }
}



",,,,,,,,,,,,,CXF-5602,CXF-5116,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47283,,,2010-07-27 06:29:33.0,,,,,,0|i1409z:,231507,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-T / WS-SP sp:RequestSecurityTokenTemplate not using  wst:SecondaryParameters,CXF-2909,12470193,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,26/Jul/10 20:07,11/Oct/10 14:45,14/Mar/19 02:29,27/Jul/10 12:59,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.10,2.3,,,WS-* Components,,,,0,,,,,,"Per the WS-SP 1.2 spec, section 5.4.2, ""This required element contains elements which MUST be copied into the wst:SecondaryParameters of the RST request sent to the specified issuer. Note: the initiator is not required to understand the contents of this element.""

The STS client copies these values directly into the body of the wst:RequestSecurityToken element in the request to the STS.

So this policy:
{code:xml}
<sp:IssuedTokensp:IncludeToken=""http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/Always"">
  <sp:RequestSecurityTokenTemplate>
    <wst:TokenType>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1</wst:TokenType>
    <wst:AppliesTo>
      <wsp:URI>service-1</wsp:URI>
    </wst:AppliesTo>
    <wst:Participants>
      <wst:Participant>
        <wsp:URI>service-1</wsp:URI>
      </wst:Participant>
    </wst:Participants>
    <wst:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey</wst:KeyType>
  </sp:RequestSecurityTokenTemplate>
</sp:IssuedToken>
{code}
Becomes this request:
{code:xml}
<wst:RequestSecurityToken>
  ...
  <wst:TokenType>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1</wst:TokenType>
  <wst:AppliesTo>
    <wsp:URI>service-1</wsp:URI>
  </wst:AppliesTo>
  <wst:Participants>
    <wst:Participant>
      <wsp:URI>service-1</wsp:URI>
    </wst:Participant>
  </wst:Participants>
  <wst:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey</wst:KeyType>
  ...
</wst:RequestSecurityToken>
{code}
Instead of: 
{code}
<wst:RequestSecurityToken>
  ...
  <wst:SecondaryParameters>
  <wst:TokenType>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1</wst:TokenType>
    <wst:AppliesTo>
      <wsp:URI>service-1</wsp:URI>
    </wst:AppliesTo>
    <wst:Participants>
      <wst:Participant>
        <wsp:URI>service-1</wsp:URI>
      </wst:Participant>
    </wst:Participants>
    <wst:KeyType>http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey</wst:KeyType>
  </wst:SecondaryParameters>
  ...
</wst:RequestSecurityToken>
{code}

WS-Trust 1.0 and WS-SP 1.0 do not support the wst:SecondaryParameters element so backwards compatibility should be retained per the interopfest samples.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47285,,,Mon Jul 26 20:15:01 UTC 2010,,,,,,0|i14exj:,233882,,,,,,,,"26/Jul/10 20:15;davaleri;Interopfest wstrust13 module does not work due to relocation of Microsoft STS and change to TLS certificate.  The STS WSDL moved to 131.107.153.205:8080.  The STS HTTPS port is 8443.  While this port is properly reflected in the WSDLs, the certificate on that port is self-issued and not part of the OSASIS interop certificate hierarchy in the downloaded certs zip.

The following changes were implemented to test this issues fix:

1) Change download script to use port 8080
2) Manually adding the self-issued cert to the certs/WssIP.pfx extracted from the downloaded zip
3) Reconfiguring the HTTP conduits in client.xml to use certs/WssIP.pfx instead of the bob.pfx file

Even with these changes, a TLS related exception is still created for one of the interop scenarios.  The fix for this issue is observed to be working during execution of the functioning tests in wstrust13 and the other interop samples.



",,,,,,,,,,,,,,,,,,,,,,,,,,
Using a Java enum type in a JAX-RS matrix parameter results in a StackOverflowError when generating the WADL,CXF-2908,12470037,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,gregkatz,gregkatz,23/Jul/10 19:09,11/Oct/10 14:45,14/Mar/19 02:29,26/Jul/10 21:49,2.2.9,,,,,,,,,,,,,,,,,2.2.10,2.3,,,JAX-RS,,,,0,,,,,,"*Repro steps:*

1. Create a JAX-RS endpoint method that uses an object with an enum-typed property as a matrix parameter.
2. Hit the WADL URI for the endpoint's path (or ""above"" the endpoint's path). Something like {{http://host:port/rest?_wadl}}, in other words.

*Result:*

The {{org.apache.cxf.jaxrs.model.wadl.WadlGenerator}} throws a {{StackOverflowError}}.

{noformat}
ERROR 2010-07-23 09:45:09.417 http-8080-1>  Servlet.service() for servlet CXFServlet threw exception
java.lang.StackOverflowError
        at java.lang.Class.privateGetPublicMethods(Class.java:2536)
        at java.lang.Class.getMethods(Class.java:1410)
        at org.apache.cxf.jaxrs.utils.InjectionUtils.getParametersFromBeanClass(InjectionUtils.java:853)
        at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:447)
        at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:456)
        at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:456)
        at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:456)
        at org.apache.cxf.jaxrs.model.wadl.WadlGenerator.doWriteBeanParam(WadlGenerator.java:456)
        ...
{noformat}

*Example code:*

{code:java}
@Path(""/whatever"")
@Produces(""application/json"")
public interface WhateverEndpoint {
    
    @GET
    @Path(""/"")
    public Whatever[] getWhatevers(@MatrixParam("""")WhateverSearchCriteria criteria);

}

@XmlRootElement
public class WhateverSearchCriteria {

    private EnumType enumValue;

    public EnumType getEnumValue() {
        return enumValue;
    }

}

@XmlRootElement
public enum EnumType {

    Value1,
    Value2;

}
{code}

*Observations:*

When I commented out the enum-typed property, the {{StackOverflowError}} went away. 

I stepped through the {{WadlGenerator}} in the debugger and noticed something about {{getParametersFromBeanClass}} that might be the source of the problem. {{getParametersFromBeanClass}} gets all of the no-arg methods that begin with {{get}} and then discards ""getClass"". However, it doesn't discard the {{Enum}} class's {{getDeclaringClass}} method. This method returns an object of type {{java.lang.Class}}. In the debugger, I saw that all of the remaining {{doWriteBeanParam}} stack frames after the one whose {{type}} argument was the enum type had a {{type}} argument of {{java.lang.Class}}.","Windows XP, Tomcat 6.0.20, JDK 1.6.0_19",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47286,,,Mon Jul 26 22:09:10 UTC 2010,,,,,,0|i1aeyv:,268891,,,,,,,,"26/Jul/10 22:09;gregkatz;Thanks for the prompt fix!

Does CXF version 2.2.10 have a release date?

Thanks,
Greg",,,,,,,,,,,,,,,,,,,,,,,,,,
WS-Addressing replay/message ID uniqueness enforcement does not handle clustering or restarts,CXF-2906,12469935,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,22/Jul/10 17:37,11/Oct/10 14:45,14/Mar/19 02:29,27/Jul/10 16:56,2.2.10,2.3,,,,,,,,,,,,,,,,2.2.10,2.3,,,WS-* Components,,,,0,,,,,,"The WS-Addressing interceptors use a ConcurrentHashMap to store previously encountered MessageIDs. This code does not expire entries in the map nor is the map persisted between restarts or shared across JVMs in a cluster. For these reasons, this approach poses a potential memory usage issue as well as a false sense of security with respect to replay prevention when the service is restarted or multiple instances of the service are running in a cluster. This approach also requires that all services in a JVM that wish to prevent replay must share a single set of addressing interceptors.

When used in conjunction with a digital signature and a timestamp providing message expiration, this ID provides a replay prevention mechanism as well as a strong upper limit to the lifetime of MessageIDs in the cache.

It is recommended that an abstraction for the cache be implemented such that a simple in memory implementation may be provided by default. For more advanced use cases, an implementation of the cache may be implemented over a cache library that supports disk persistence and/or sharing of the cache across JVMs.

I have implemented a simple cache abstraction over the Springmodules cache library with success. Springmodules (https://springmodules.dev.java.net/ http://github.com/astubbs/spring-modules/) appears largely dormant at this time, but the ability to choose from a number of cache providers, some of which support distribution across multiple JVMs and disk persistence is exactly the type of flexibility that the solution should afford.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47288,,,2010-07-22 17:37:37.0,,,,,,0|i0v02v:,178986,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request.selectVariant unimplemented,CXF-2904,12469878,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dkf,dkf,22/Jul/10 01:03,11/Oct/10 14:45,14/Mar/19 02:29,03/Oct/10 21:00,2.2.9,,,,,,,,,,,,,,,,,2.3,,,,JAX-RS,,,,0,,,,,,"Is the implementation of the {{javax.ws.rs.core.Request}} interface incomplete? I ask because I was trying to use its {{selectVariant}} method and always getting a {{null}} returned, even when doing an exact match between a supplied singleton variant list and the input type. A simple, perfect match opportunity is completely missed...

I worked around it by using {{HttpHeaders}} instead, but that requires manual work on the behalf of implementors so it's less than ideal. FWIW, my workaround is rather messy and only handles a limited subset of what variant matching is supposed to do (but it is enough for my immediate requirements).",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-28 21:40:05.701,,,no_permission,,,,,,,,,,,,,47290,,,Thu Jul 29 10:07:33 UTC 2010,,,,,,0|i0v0ev:,179040,,,,,,,,"28/Jul/10 21:40;sergey_beryozkin;http://svn.apache.org/viewvc?rev=980236&view=rev

",29/Jul/10 10:07;dkf;That looks like a fix to me. :-),,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected HTTP response code for @Consumes mismatch,CXF-2903,12469875,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,dkf,dkf,22/Jul/10 00:50,11/Oct/10 14:45,14/Mar/19 02:29,03/Oct/10 21:02,2.2.10,2.2.9,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-RS,,,,0,,,,,,"I have an interface with a method annotated as accepting XML (with {{@Consumes(""application/xml"")}} and {{@POST}}) and a class that implements that interface; the {{@Path}} is not matched for {{@POST}} by any other method. When I call it and pass in content with that MIME type, it all works. When I pass in content of another MIME type, I get a 404 response; this is unexpected, as I'd expect a 406 (Not Acceptable) response that tells me to pass in XML (to be clear, this _is_ an error case). Having to work around this by accepting all types and doing my own content type negotiation is unacceptable, especially since that decreases the utility of the generated WADL file significantly. Surely CXF should be doing this sort of work for me?",,,,,,,,,,,,,,,,,20/Aug/10 12:50;dkf;example.zip;https://issues.apache.org/jira/secure/attachment/12452627/example.zip,26/Jul/10 13:57;dkf;taverna.log;https://issues.apache.org/jira/secure/attachment/12450472/taverna.log,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-07-22 21:19:00.695,,,no_permission,,,,,,,,,,,,,47291,,,Thu Aug 26 21:25:31 UTC 2010,,,,,,0|i13yg7:,231211,,,,,,,,"22/Jul/10 21:19;sergey_beryozkin;Hi

this is the rather cryptic code fragment :

int status = pathMatched == 0 ? 404 : methodMatched == 0 ? 405 
                     : consumeMatched == 0 ? 415 : produceMatched == 0 ? 406 : 404;

404 would be reported if either path not matched or if the candidate list is empty. Note that according to the spec
Consumes mismatch will result in 415 and Produces mismatch will result in 406.

I'd expect 415 in your case given that @Consumes does not match the media type. 

Can you enable DEBUG log level - it should give you more info about what is happening. Let us know the details please","26/Jul/10 13:56;dkf;You're right about it being 415, not 406.","26/Jul/10 14:07;dkf;I've attached a section of the log file from the webapp, logged at level FINE. It's... noisy, but the relevant lines are probably these two (the second split only for clarity):

{code:title=Log section}26-Jul-2010 14:47:07 org.apache.cxf.jaxrs.utils.JAXRSUtils logNoMatchMessage
FINE: No method match, method name : setStatus, request path : /status,
   method @Path : /status, HTTP Method : PUT, method HTTP Method : PUT,
   ContentType : text/html, method @Consumes : text/plain,, Accept : */*,,
   method @Produces : text/plain,.{code}

While the failure to match is correct, it seems to be just forgetting that it saw it. (I know the client shouldn't be producing text/html here. It's just a hacked-around script to expose this issue.)","26/Jul/10 17:44;sergey_beryozkin;thanks for posting the log message. 

I'm a  bit confused though by ""it seems to be just forgetting that it saw it"" - you've commented that it is indeed 415 - did you mean that you agree that the spec requires it for @Consumes not matching Content-Type cases or do you actually see 415 being returned ?
","26/Jul/10 17:50;sergey_beryozkin;Actually, have just seen the log...Hmm, I can see the test in the source code verifying 415 is being returned...

I'll need to investigate - can you please post a sample resource class containing a setStatus() method only ? I'd like to see the signature","26/Jul/10 20:28;sergey_beryozkin;I can definitely see a test verifying 415 being returned and I suspect TCK would've failed otherwise.

I'm just curious, could it be that 

int status = pathMatched == 0 ? 404 : methodMatched == 0 ? 405
: consumeMatched == 0 ? 415 : produceMatched == 0 ? 406 : 404;

is broken a bit (too complicated) and say JVM spec makes it vague enough to figure out how this if loop is executed ?

Which SDK do you use ?
I feel that the only thing that I can do is to write the explicit if expression and hope it fixes it for you. If you could download CXF 2.2.9 source and put a breakpoint in JAXRSUtils.findTargetMethod, at a point where the above expression is executed then it would really help

",26/Jul/10 21:52;sergey_beryozkin;try the latest 2.2.10-SNAPSHOT or please debug ,20/Aug/10 12:50;dkf;Zipped simple project that demonstrates,"20/Aug/10 13:08;dkf;Sorry it's taken so long to get back to you on this. Was dealing with a software release and vacations. :-)

I've attached a _very_ simple project that demonstrates the problem, stripped of all the software overburden of my real project. One source file, minimal configuration (other than enabling message logging). There's also a client written in Tcl that submits two PUT requests to the service, one which goes with the correct type and one which goes with the wrong one. Build and install the webapp and run the client script (with the address of the webapp as command line argument) to demonstrate. Or do your own PUT requests; the client is *very* basic and unimportant.

When I run the client against my own deployment (in Tomcat 6, if that matters) I get this output

{code}
url: http://localhost:8080/example-1
uploadType: text/plain
uploadData: Good
code: HTTP/1.1 200 OK
downloadType: text/plain
downloadData: Bye, Good

url: http://localhost:8080/example-1
uploadType: text/html
uploadData: Bad
code: HTTP/1.1 404 Not Found
downloadType: text/xml
downloadData: 
{code}

I get the same thing with the 2.2.10 release.","24/Aug/10 22:03;sergey_beryozkin;thanks for providing an example webapp.
I've spent a bit of time debugging it today and finally I was able to reproduce 404. I was even nearly ready to commit a fix.
But then realized it was trickier than I thought.

See, HelloWorld has two methods and when the 2nd PUT with mismatching Content-Type is sent, we actually have two non-candidates,
one is the method annotated with GET and the other one with PUT and @Consumes(text/plain).

So the fact that both methods can not be selected is recorded (method mismatch for the 1st one and consumes mismatch for the 2nd one).

If you had say 2 separate methods annotated with PUTs but with different Consumes or just a single PUT then you;d get 415 as expected in case of wrong Content-Type.

but in this case we have the case of the mismatched method and the mismatched Consumes. The question is : which mismatch is the 'better' one, as far as selecting the error code is concerned ? Here we have GET and PUT but you might've had POST & PUT instead thus a method mismatch is equally serious...

Thoughts ?

Not really sure if it can be fixed cleanly. We could do a 'better analysis' in case of many methods being not matched. In that case we can check what did not match most : method, produces or consumes and the 'worst one' would be used to select the response code. Still not the perfect solution...","25/Aug/10 19:00;sergey_beryozkin;Well, I got a bit confused yesterday while writing that long comment above :-). I'm still mostly standing by it, except that there's indeed a bug in CXF leading to 404 being returned despite the fact that in the example webapp we have a case of

2 path matches
2 produce matches
1 method mismatch (405)
1 consume mismatch (415)

The code like this :

int status;
        
        // criteria matched the least number of times will determine the error code;
        // priority : path, method, consumes, produces;
        if (pathMatched <= methodMatched && pathMatched <= consumeMatched && pathMatched <= produceMatched) {
            status = 404;
        } else if (methodMatched <= pathMatched && methodMatched <= consumeMatched 
            && methodMatched <= produceMatched) {
            status = 405;
        } else if (consumeMatched <= pathMatched && consumeMatched <= methodMatched 
            && consumeMatched <= produceMatched) {
            status = 415;
        } else {
            status = 406;
        }

will ensure that in the case of multiple non-matches the least matched criteria will be used to determine the error code, so if we have say consumes matching only once while the method has been matched twice in the case of two resource methods, then 415 will definitely be returned, etc. 

But in this particular case we'll get 405 simply because of the order of branches above. Changing the order would make it more precise in this case but will likely be less in other cases.

What you can do is to spread methods dealing with GET, PUT, etc across multiple root resources.
And, if needed (if such resources have identical class-level @Path value), register a custom ResourceComparator as a jaxrs provider :
http://svn.apache.org/repos/asf/cxf/trunk/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/ext/ResourceComparator.java

which will have a map like this :

""GET"" : ReadableRootResource
""PUT"" : UpdatableRootResource
etc

and then in the comparator you can get the Message.HTTP_REQUEST_METHOD and select the root resource class which will be used to find the resource method.

This will ensure you always get correct 415 or 406 in case of consumes or produces non-matches



","26/Aug/10 10:43;dkf;I suspect that the right way forward here is to consider what the mental model of programmers trying to use such things is. While this is something which should probably be considered fairly widely, I'll just go ahead and explain _my_ model. Maybe others will match up too. :-)

I'd expect (on consideration) the path to be the most fundamental thing (though not the matching of the query part, any cookies, etc.) If the path can't be matched, it's {{404}}.

Then I'd expect the verb to be checked; that's definitely more fundamental than the type of the data being passed in or asked for. (Path matched but not method would be {{405}}.)

It's only once you've got past that and are considering produces and consumes that things get a bit ambiguous, though I might go for considering consume matching first on the grounds that that's data the user is giving to you and it's of some definite type (assuming it's present). Produce matching is the least possible I suppose, since a fair fraction of clients say they'll accept anything anyway...

In this case, we've got {{GET/no-data}} and {{PUT/plain}} available, and {{PUT/html}} offered, so that sounds to me like a double mismatch for one and a single mismatch on the other. To say that the response should be ""use a different method"" is a little surprising, since that's asking for variation in a way where it would take two steps to get to a match rather than in a way that is a single step to a match.

Maybe the _real_ right thing to do is for each potential match to consider the Hamming distance to a successful match, as it were? Hmm... (and yes, I've only just thought of that as I write this paragraph. ;-))","26/Aug/10 21:25;sergey_beryozkin;The following code should do much better :

if (pathMatched == 0) {
            status = 404;
        } else if (methodMatched == 0) {
            status = 405;
        } else if (consumeMatched <= produceMatched) {
            status = 415;
        } else {
            status = 406;
        }

If we have either path or method not matching at all then it's 404 or 405.

But if we have at least one HTTP verb match (in which case we definitely had at least one (the corresponding) path matched) then even if we had many other methods with verbs not matched, we still have case of a pretty close match where path and HTTP method matched and thus it is either a consume or produce mismatch.

thanks",,,,,,,,,,,,,,
CXF assumes overloaded operation on multiple interface extension.,CXF-2901,12469609,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,strider,strider,19/Jul/10 13:08,19/Dec/12 14:38,14/Mar/19 02:29,05/Dec/12 19:04,2.2.9,,,,,,,,,,,,,,,,,2.7,,,,Simple Frontend,,,,0,,,,,,"If a service extends two interfaces which both extend (directly or indirectly) another  (but exactly the same) interface containing a method signature, CXF throws the ""An operation with name [...] already exists in this service"" Exception.
CXF assumes that there are two different overloading methods, but it's the same method with the same signature.

Example:

public interface A extends B1, B2

public interface B1 extends C

public interface B2 extends C

public interface C
{
  public String test();
}

This results in ""An operation with name [{http://foo.bar/}test] already exists in this service""

It would be great if CXF could handle such a case, maybe by just accepting identical signature methods.
","Windows Vista, jdk1.6.0_14
",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-05 19:04:10.173,,,no_permission,,,,,,,,,,,,,47293,,,Wed Dec 05 19:04:10 UTC 2012,,,,,,0|i146un:,232573,,,,,,,,"05/Dec/12 19:04;dkulp;
This seems to have been fixed a long time ago.  Not exactly sure when, but it's now working.
",,,,,,,,,,,,,,,,,,,,,,,,,,
WSDLValidator through Stax2DOM leaves input streams open which causes input files to be locked.,CXF-2900,12469394,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,dkulp,garydgregory,,15/Jul/10 23:58,10/Mar/11 23:16,14/Mar/19 02:29,16/Jul/10 15:06,2.2.9,,,,,,,,,,,,,,,,,2.2.10,,,,Tooling,,,,2,,,,,,"The WSDLValidator class leaves input stream open. This causes the validated file to be locked and it cannot be deleted, which messes up our software. 

Only when the Java process exists can the file be reclaimed. It is possible that a GC closes the file when the input stream is found and no longer reachable.

I am invoking the WSDLValidator class programatically like this:

{code:java}
    private static void cxfValidateWsdl(File wsdlFile) throws Exception {
        CommandInterfaceUtils.commandCommonMain();
        ToolRunner.runTool(WSDLValidator.class, WSDLValidator.class.getResourceAsStream(""wsdlvalidator.xml""), false, new String[] {
                ""-verbose"", wsdlFile.toURI().toString() });
    }
{code}

Down the line, CXF opens but does not close the input file stream in Stax2DOM:

{code:java}
    public Document getDocument(URL url) throws ToolException {
        try {
            StreamSource src = new StreamSource(url.openStream(), url.toExternalForm());
            return StaxUtils.read(StaxUtils.createXMLStreamReader(src), true);
        } catch (Exception e) {
            throw new ToolException(e);
        }
    }
{code}

This is fixed for all getDocument methods in the attached patch.

I am not sure how to work around this aside from rebuilding CXF or waiting for 2.2.10. ","java version ""1.6.0_20""
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01, mixed mode)

Microsoft Windows [Version 6.0.6002]
",,,,,,,,,,,,,,,,16/Jul/10 01:05;CXF-2900.diff;https://issues.apache.org/jira/secure/attachment/12449608/CXF-2900.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-16 00:00:12.582,,,no_permission,,,,,,,,,,,,,47294,,,Fri Jul 16 15:06:33 UTC 2010,,,,,,0|i0uxqf:,178606,,,,,,,,16/Jul/10 00:00;ggregory@seagullsw.com;Patch for source and unit tests.,16/Jul/10 01:05;ggregory@seagullsw.com;Patch with source and tests.,"16/Jul/10 15:06;dkulp;
Patch applied.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,
cxf-rt-transports-http-jetty POM variable reference to jetty.version can lead to a surprise,CXF-2897,12469367,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bmargulies,bmargulies,15/Jul/10 18:24,08/Aug/11 14:43,14/Mar/19 02:29,20/Apr/11 13:20,2.2.9,,,,,,,,,,,,,,,,,2.3.1,,,,Transports,,,,0,,,,,,"The POM for cxf-rt-transports-http-jetty defines and references jetty.version. Somewhat to my surprise, I see that this survived release deployment. So, if *I* set that variable in my pom, it effects CXF. Which, in turn, has some unpleasant effects on an attempt to use jetty version 7.1.4.

I think the fix is to rename that variable, and, all the other pom variables, to have the name format cxf.x.y. In this case, cxf.jetty.version. Otherwise, we're just waiting for surprises from unexpected collisions.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2011-04-20 13:20:30.492,,,no_permission,,,,,,,,,,,,,47297,,,Wed Apr 20 13:20:30 UTC 2011,,,,,,0|i0klgf:,118293,,,,,,,,20/Apr/11 13:20;chris@die-schneider.net;From 2.3.1 on the jetty variable is named cxf.jetty.version,,,,,,,,,,,,,,,,,,,,,,,,,,
URIResolver should decode spaces before trying to resolve URI from filesystem,CXF-2896,12469366,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,wtam,wtam,15/Jul/10 18:18,11/Oct/10 14:45,14/Mar/19 02:29,16/Jul/10 15:10,,,,,,,,,,,,,,,,,,2.2.10,2.3,,,Resources,,,,0,,,,,,This issue can affect resolving WSDL from filesystem path that contains spaces.  Please review the attached patch.,,,,,,,,,,,,,,,,,15/Jul/10 18:20;wtam;CXF-2896.patch;https://issues.apache.org/jira/secure/attachment/12449580/CXF-2896.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-16 15:10:40.224,,,no_permission,,,,,,,,,,,,,47298,,,Fri Jul 16 15:10:40 UTC 2010,,,,,,0|i14e7z:,233767,,,,,,,,16/Jul/10 15:10;dkulp;Patch applied.  Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,
use wsse:KeyIdentifier instead of wsse:Reference for SAML token profile,CXF-2894,12469256,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,gmazza,gmazza,gmazza,14/Jul/10 13:54,07/Mar/11 16:03,14/Mar/19 02:29,07/Mar/11 16:03,,,,,,,,,,,,,,,,,,2.3.2,,,,WS-* Components,,,,0,,,,,,"CXF should be using the KeyIdentifier element when identifying SAML Assertions within wsse:SecurityTokenReference elements.

Issue and explanation in this thread:
http://cxf.547215.n5.nabble.com/Problem-using-SAML-token-profile-to-access-a-Metro-web-service-td1064848.html#a1064848

Attached zip contains a Metro web service and STS (intended for standalone Tomcat deployment), a working Metro client, and a complaining CXF one, all components Mavenized for easily compilation, deployment, and execution.

Instructions to host sample web service and STS from attachment:

1.) If necessary, to allow mvn tomcat:deploy to work in next step, set up Maven tomcat config:
Pale green ""Maven only"" section of Step #8 here has instructions:
http://www.jroller.com/gmazza/entry/web_service_tutorial#WFstep8

2.) From root directory, type mvn clean install tomcat:deploy
(can call tomcat:undeploy on subsequent runs)

Once done, confirm can see Metro web service WSDL from browser:
https://localhost:8443/doubleit/services/doubleit?wsdl

And confirm can see Metro STS WSDL:
http://localhost:8080/DoubleItSTS/DoubleItSTSService?wsdl

3.) 
Place the 2.2 version of jaxws-api.jar (https://jax-ws.dev.java.net/) in the JDK_HOME/jre/lib/endorsed folder. 

Once done, navigate to Metro client folder (/client-metro) and run mvn exec:exec
Confirm can see output of doubled number results (10 doubled is 20).

Wireshark results of the whole STS process w/Metro is here:
http://www.jroller.com/gmazza/entry/metro_wstrust_analysis

5.) 
Remove 2.2 JAXWS-api.jar from endorsed folder.
Navigate to CXF client folder (/client-cxf) and run 
mvn clean install exec:exec (need to build here, as client-cxf is not part of parent POM due to Metro dependencies.)

Should see this error message:
[INFO] Jul 14, 2010 8:00:46 AM org.apache.cxf.service.factory.ReflectionServiceFactoryBean buildServiceFromWSDL
[INFO] INFO: Creating Service {http://www.example.org/contract/DoubleIt}DoubleItService from WSDL: file:/work/workspace/DoubleItMetroWSTrust/client-cxf/src/main/resources/DoubleItService.wsdl
[INFO] Jul 14, 2010 8:00:48 AM org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor handleMessage
[INFO] WARNING: Request does not contain required Security header, but it's a fault.
----->[INFO] Exception in thread ""main"" javax.xml.ws.soap.SOAPFaultException: unsupported directreference ValueType http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID<-----
[INFO] 	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:146)
[INFO] 	at $Proxy38.doubleIt(Unknown Source)
[INFO] 	at client.WSClient.doubleIt(WSClient.java:18)
[INFO] 	at client.WSClient.main(WSClient.java:11)
[INFO] Caused by: org.apache.cxf.binding.soap.SoapFault: unsupported directreference ValueType http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID
[INFO] 	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.unmarshalFault(Soap11FaultInInterceptor.java:75)
[INFO] 	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:46)
[INFO] 	at org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor.handleMessage(Soap11FaultInInterceptor.java:35)
[INFO] 	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)

If you can use Wireshark to trace localhost calls (always can on Linux, sometimes on Windows), can use Wireshark's Show TCP stream capability to get more of error message: http://www.jroller.com/gmazza/entry/soap_calls_over_wireshark
",,,,,,,,,,,,,,,,,22/Jul/10 04:08;gmazza;CXF2894Example.txt;https://issues.apache.org/jira/secure/attachment/12450127/CXF2894Example.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,47300,,,Mon Mar 07 16:03:13 UTC 2011,,,,,,0|i13ykf:,231230,,,,,,,,"14/Jul/10 13:56;gmazza;ZIP file containing:
-- Metro-based STS
-- Metro based Web Service
-- Metro-based client (working)
-- CXF-based client (not working)","22/Jul/10 04:05;gmazza;I can make this problem more specific -- for a Metro web service provider signature validation, the wsse:SecurityTokenReference child of the ds:Signature element in the SOAP header needs to use KeyIdentifier instead of Reference.  wsse:Reference is fine as-is as a child of SecurityTokenReference in other places.

Also, to clarify, this problem does not occur when the CXF client makes a call to the Metro STS -- that works all well--it's just the subsequent call to the Metro web service provider using that token that is the problem.  (Although the token itself is OK, it's just the sibling ds:Signature element with the above problem that's causing the error.)

I'm attaching the failed SOAP request to the Metro web service provider as well as (part of) the SOAP response listing the error.",22/Jul/10 04:08;gmazza;Example showing failed SOAP call to Metro web service provider.,"24/Jul/10 03:07;gmazza;This is all that is needed to fix *this* particular problem.  (The Metro web service provider complains about another bug after this, namely:  ""Encryption Policy verification error: Looking for an Encryption Element  in Security header, but found com.sun.xml.wss.impl.policy.mls.SignaturePolicy@12504b.""  I'll look at that next.)

mvn clean install, at least from the security submodule, returns no errors with this change.  I will go ahead and commit it so we'll know ASAP what other heartaches this change might (or might not) create--it can be easily reverted.

===================================================================
--- src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java	(revision 978410)
+++ src/main/java/org/apache/cxf/ws/security/wss4j/policyhandlers/SymmetricBindingHandler.java	(working copy)
@@ -641,7 +641,7 @@
             } else {
                 sig.setCustomTokenValueType(WSConstants.WSS_SAML_NS
                                       + WSConstants.SAML_ASSERTION_ID);
-                sig.setKeyIdentifierType(type);
+                sig.setKeyIdentifierType(WSConstants.CUSTOM_KEY_IDENTIFIER);
             }
",24/Jul/10 03:09;gmazza;Fixed.,"24/Jul/10 16:23;gmazza;This problem has popped up in another place with respect to the EncryptedData element of the SOAP body.

Metro is expecting this (see the wsse:KeyIdentifier element under SecurityTokenReference):

   <S:Body wsu:Id=""_5006"">
      <xenc:EncryptedData
         xmlns:ns19=""http://schemas.xmlsoap.org/ws/2006/02/addressingidentity""
         xmlns:ns18=""http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512""
         xmlns:ns17=""http://www.w3.org/2003/05/soap-envelope"" Id=""_5007""
         Type=""http://www.w3.org/2001/04/xmlenc#Content"">
         <xenc:EncryptionMethod
            Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc"" />
         <ds:KeyInfo xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
            xsi:type=""KeyInfoType"">
            <wsse:SecurityTokenReference>
               <wsse:KeyIdentifier
                  ValueType=""http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"">uuid-7a6d6259-af70-466f-b6c6-fd89c44bea71
               </wsse:KeyIdentifier>
            </wsse:SecurityTokenReference>
         </ds:KeyInfo>
         <xenc:CipherData>
             <xenc:CipherValue>FMIK0lHrb8mzP....more encrypted data....osjRq9bIsq85gg4CJa</xenc:CipherValue>
         </xenc:CipherData>
      </xenc:EncryptedData>
   </S:Body>

But we are sending this instead (wsse:Reference instead of KeyIdentifier):

   <soap:Body xmlns: 
      wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
      wsu:Id=""Id-20911796"">
      <xenc:EncryptedData xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""
         Id=""EncDataId-15"" Type=""http://www.w3.org/2001/04/xmlenc#Content"">
         <xenc:EncryptionMethod
            Algorithm=""http://www.w3.org/2001/04/xmlenc#aes256-cbc"" />
         <ds:KeyInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
            <wsse:SecurityTokenReference
               xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
               <wsse:Reference
                  xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""
                  URI=""#uuid-4635d8e6-2d7a-4679-b609-782c2177b740"" />
            </wsse:SecurityTokenReference>
         </ds:KeyInfo>
         <xenc:CipherData>
            <xenc:CipherValue>jp3E2kXyR+M....more encrypted data....ZsasdfasoD</xenc:CipherValue>
         </xenc:CipherData>
      </xenc:EncryptedData>
   </soap:Body>

Metro is correct because of the same rationale given earlier, namely that the SAML Token Profile does not define usage of wsse:Reference for SAML Assertions, only KeyIdentifier or EmbeddedReference. (Section 3.3 of SAML Token Profile of 1 Dec. 2004 pdf lines 250-272.)

However, unlike my earlier fix on the Signature side it looks like a change to WSS4J will be needed here.

In particular (untested):

1.) (in CXF) SymmeticBindingHandler.doEncryption() needs new code similar to what I added for .doSignature():

if (!isRequestor()) {
     ... same current code...
} else { // new block added
    if (encrToken instanceof IssuedToken) {
        encr.setUseKeyIdentifier(true);
        encr.setCustomReferenceValue(WSConstants.WSS_SAML_NS
            + WSConstants.SAML_ASSERTION_ID);
        encr.setKeyIdentifierType(WSConstants.CUSTOM_KEY_IDENTIFIER);
    }
}

2.) (in WSS4J) Ability to handle SAML token references for encryption needs to be added:

WSSecEncryptedKey.prepareInternal() method:

switch (keyIdentifierType) {
    ...rest of old code...

    // add this case
    case WSConstants.CUSTOM_KEY_IDENTIFIER:
        secRef.setKeyIdentifier(customTokenValueType, customTokenId);
        break;  
}

This additional case is identical to that already present in WSS4J's WSSecSignature.prepare() method.

As a sanity check, can anyone see why the above case clause should be in WSS4J's WSSecSignature but *not* in their WSSecEncryptedKey?  Hope not to embarrass myself to the WSS4J team.
",24/Jul/10 16:36;gmazza;Sample project demonstrating problem with EncryptionData element.,"30/Jul/10 01:26;gmazza;OK, from my 24/Jul/10 12:23 PM posting above I did Part 1 already in the CXF code, and submitted a WSS4J patch for Part II: https://issues.apache.org/jira/browse/WSS-238.  When both changes are in production, we'll be able to make SOAP calls using SAML assertions that will be accepted by a Metro web service provider.

This is just half the story, however.  More work is needed in WSS4J for it to be able to process the Metro response to this call as I explained in WSS-238.
","18/Nov/10 05:44;gmazza;Previously attached ZIP File of WS-Trust setup had omissions/bugs in it -- working version can be downloaded from here:
http://www.jroller.com/gmazza/entry/cxf_stsclient_with_metro_sts",07/Mar/11 16:03;gmazza;Fixed due to WSS4J changes by Colm.,,,,,,,,,,,,,,,,,
CXF should use class' classloader for initialization of its loggers,CXF-2893,12469233,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,hmlnarik,hmlnarik,14/Jul/10 07:29,11/Oct/10 14:52,14/Mar/19 02:29,16/Jul/10 17:59,2.2.9,,,,,,,,,,,,,,,,,2.2.10,,,,,,,,0,,,,,,"The class org.apache.cxf.common.logging.LogUtils should attempt to use plain Class.forName(cname) if Class.forName(cname, true, Thread.currentThread().getContextClassLoader()) fails.

Rationale: Current thread might not be able to access cxf classes. Take as an example the following OSGi bundles:
1) bundle with a http server.
2) bundle with CXF-based servlet SomeCXFServlet. The bundle contains CXF as private OSGi library.
A servlet SomeCXFServlet from bundle (2) has access to CXF via SomeCXFServlet.class.getClassloader(), similarly LogUtils class via its classloader. However, the servlet initialization is performed from http server thread that does not have access to bundle (2) private classes. Initialization of a logger is hence also made from the http thread. CXF tries to load its org.apache.cxf.common.logging.*Logger classes - the attempt however fails because the current thread's classloader is used instead of the LogUtils'.

Solution: Try to load the class using Class.forName(cname) if Class.forName(cname, true, Thread.currentThread().getContextClassLoader()) fails.

Will attach diff in a separate comment",,,,,,,,,,,,,,,,,14/Jul/10 07:31;hmlnarik;patch.diff;https://issues.apache.org/jira/secure/attachment/12449430/patch.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47301,,,Wed Jul 14 07:31:44 UTC 2010,,,,,,0|i14f1j:,233900,,,,,,,,14/Jul/10 07:31;hmlnarik;Diff to fix the described issue.,,,,,,,,,,,,,,,,,,,,,,,,,,
"AttachmentSerializer outputs ""xop+xml"" as body content type even XOP is not enabled",CXF-2892,12469183,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,njiang,wtam,wtam,13/Jul/10 19:01,11/Oct/10 14:45,14/Mar/19 02:29,16/Jul/10 17:46,,,,,,,,,,,,,,,,,,2.2.10,2.3,,,Core,,,,0,,,,,,"Please check the attached patch.  It looks like the content-type should be ""text/xml"" for the body (http://www.w3.org/TR/SOAP-attachments#SOAPMultipart)
if XOP is not enabled.",,,,,,,,,,,,,,,,,13/Jul/10 19:12;wtam;CXF-2892.patch;https://issues.apache.org/jira/secure/attachment/12449379/CXF-2892.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-14 03:34:40.562,,,no_permission,,,,,,,,,,,,,47302,,,Wed Jul 14 03:34:40 UTC 2010,,,,,,0|i0sxwf:,166969,,,,,,,,14/Jul/10 03:34;njiang;Applied patch into cxf trunk and cxf-2.2.x branch with thanks to William.,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid WSDL when using <jax-ws:schemaLocation> (XSD) with ASM in the classpath,CXF-2891,12469150,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,tqueste,tqueste,13/Jul/10 09:34,11/Oct/10 14:52,14/Mar/19 02:29,12/Aug/10 18:04,2.2.6,2.2.7,2.2.8,2.2.9,,,,,,,,,,,,,,2.2.10,,,,,,,,3,,,,,,"CXF produces an invalid wsdl when both a <jaxws:schemaLocation> (XSD) is specified and the ASM library is in the classpath.

The error messages is : GRAVE: Schema element [...] references undefined type [...]
The generated wsdl can not be read by SoapUI.

*BUT*, there is no error messages and *the WSDL is fully working* if :
* I remove the <jaxws:schemaLocation> configuration element
* _OR_, the ASM library is completely excluded from the classpath

I think there is an incompatibility between the use of an XSD (jaxws:schemaLocation) and the ASM library.

A sample webapp is attached and it makes easier to reproduce the problem (see below for details).


h4. Versions

Tested with :
- CXF : 2.2.6 to 2.2.9
- ASM 2.2.3, 3.0, 3.1

CXF depends on ASM 2.2.3 but this dependency is optional.
ASM 3.1 is provided by JBoss so it will be available anyway in the classpath.
So I was not able to deploy the sample webapp on JBoss 5.

With ASM 1.5.3, there is no error.


h4. Full log messages

{code}
12 juil. 2010 15:25:42 org.apache.cxf.service.factory.ReflectionServiceFactoryBean
GRAVE: Schema element{http://creditcard.example.com/}getCreditCardStatusResponse references undefined type 
{http://creditcard.example.com/}getCreditCardStatusResponse for service {http://creditcard.example.com/}
12 juil. 2010 15:25:42 org.apache.cxf.service.factory.ReflectionServiceFactoryBean
GRAVE: Schema element {http://creditcard.example.com/}getCreditCardStatus references undefined type 
{http://creditcard.example.com/}getCreditCardStatus for service {http://creditcard.example.com/}CreditCardWebServiceImplService.
{code}

h4. Full Jax-ws declaration

{code:xml}
  <jaxws:endpoint
      id=""creditCardWebService""
      implementor=""com.example.creditcard.CreditCardWebServiceImpl""
      address=""/creditCard"">
    <jaxws:schemaLocations>
      <jaxws:schemaLocation>schemas/creditCard.xsd</jaxws:schemaLocation>
    </jaxws:schemaLocations>
  </jaxws:endpoint>
{code}

h4. The sample project

Attached is a very simple webapp which can be run with : mvn jetty:run
This is a maven project which contains a simple XSD.
The XSD is used to generate the sample java beans used in the webService java code.
The XSD is also declared in the jaxws:endpoint in the spring applicationContext file.
The error is shown in the console when the endpoint is created, when CXF is started.
The pom.xml is fully documented and prepared to enable/disable the ASM dependency.

The generated WSDL are also provided (with/without schemaLocation combined with/without ASM).





Thanks for your help and the time you will take to fix this.
",,,,,,,,,,,,,CXF-2687,CXF-1822,,,13/Jul/10 09:35;tqueste;creditcard-sample-project.zip;https://issues.apache.org/jira/secure/attachment/12449331/creditcard-sample-project.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-07-13 21:44:50.722,,,no_permission,,Unknown,,,,,,,,,,,47303,,,Fri Jul 16 14:26:59 UTC 2010,,,,,,0|i14evz:,233875,,,,,,,,"13/Jul/10 21:44;gmazza;The email thread on this issue is here;
http://cxf.547215.n5.nabble.com/Invalid-WSDL-with-a-Jax-ws-schemaLocation-XSD-specified-td1046395.html

","16/Jul/10 14:26;tqueste;When using <jaxws:schemaLocation> and with ASM in the classpath, the generated WSDL does not contain a valid import. 
The import tag should include the XSD declared in the schemaLocation.

Both issues, CXF-1822, CXF-2687, relate to the same problem.

ASM may be the cause.",,,,,,,,,,,,,,,,,,,,,,,,,
WS-Trust seems to require a TransportBinding policy,CXF-2890,12469124,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,brrichin,brrichin,12/Jul/10 21:52,11/Oct/10 14:45,14/Mar/19 02:29,05/Oct/10 19:30,2.2.9,,,,,,,,,,,,,,,,,2.2.11,,,,WS-* Components,,,,0,,,,,,"WS-Trust seems to require a TransportBinding security policy similar to the one fixed for raw WS-Security and mentioned in Dennis Sosnoski and commented by Dan Kulp at http://www.ibm.com/developerworks/java/library/j-jws13.html?ca=drs-.  If the attached WSTrustTest is run the WS-Trust interaction works without issue.  However if the Transport binding is commented out from EchoService.wsdl and the test re-run, the policy will not be applied.",Windows XP SP 3; Java 1.6.0_20; Maven 2.2.1,,,,,,,,,,,,,,,,12/Jul/10 21:53;brrichin;sample.zip;https://issues.apache.org/jira/secure/attachment/12449296/sample.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47304,,,2010-07-12 21:52:39.0,,,,,,0|i13yi7:,231220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STSClient doesn't seem to apply policies when decoupled from the service that uses the token,CXF-2889,12469120,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,brrichin,brrichin,12/Jul/10 21:35,11/Oct/10 14:52,14/Mar/19 02:29,05/Oct/10 18:38,2.2.9,,,,,,,,,,,,,,,,,2.2.10,,,,WS-* Components,,,,0,,,,,,"When the STSClient is used as described on the WS-Trust CXF User's guide (http://cxf.apache.org/docs/ws-trust.html) page it obtains a token from an STS and the policies of the STS seem to be applied successfully.  However when the STSClient alone to call the STS then the policies don't seem to be applied.  See the attached WSTrustTest for a success case and WSTrustManualTest for the failure.  The use case is to look at the WS-Trust interaction from the client's viewpoint.  Right now I can work around the issue by using the WSS4JOutInterceptor, but I'd like to be able to just use the policies.

        Map<String, Object> outProps = new HashMap<String, Object>();
        outProps.put(WSHandlerConstants.ACTION, WSHandlerConstants.USERNAME_TOKEN);
        outProps.put(WSHandlerConstants.USER, ""scott"");
        outProps.put(WSHandlerConstants.PASSWORD_TYPE, WSConstants.PW_TEXT);
        outProps.put(WSHandlerConstants.PW_CALLBACK_CLASS, ""service.ClientPasswordCallback"");
        WSS4JOutInterceptor wssOut = new WSS4JOutInterceptor(outProps);
        client.getOutInterceptors().add(wssOut);",Windows XP SP 3; Java 1.6.0_20; CXF 2.2.9; Maven 2.2.1,,,,,,,,,,,,,,,,12/Jul/10 21:36;brrichin;sample.zip;https://issues.apache.org/jira/secure/attachment/12449290/sample.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-10-05 18:38:33.025,,,no_permission,,,,,,,,,,,,,47305,,,Tue Oct 05 18:38:33 UTC 2010,,,,,,0|i1aezr:,268895,,,,,,,,"05/Oct/10 18:38;dkulp;
This was fixed in 2.2.10.  ",,,,,,,,,,,,,,,,,,,,,,,,,,
[JAX-RS] URI template's final group is not correctly caught,CXF-2888,12468967,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,riceyeh,riceyeh,10/Jul/10 03:14,11/Oct/10 14:45,14/Mar/19 02:29,03/Oct/10 21:03,2.2.10,,,,,,,,,,,,,,,,,2.2.11,2.3,,,JAX-RS,,,,0,,,,,,"At line 180 of org.apache.cxf.jaxrs.model.URITemplate, the final group is not correctly caught. It does not assume uri template could also contains group in it. It should be change to the following statement:

String finalGroup = m.group(m.groupCount());

For this problem's source, refer to http://cxf.547215.n5.nabble.com/JAX-RS-request-address-extension-mapping-td1045400.html#a1045400

The code assigning variable value at line 173 also will have problem when there are groups inside the uri template itself.

Regards,
Rice",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,47306,,,2010-07-10 03:14:24.0,,,,,,0|i13ycf:,231194,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXRS NullPointerException given null argument,CXF-2887,12468947,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,redijedi,redijedi,09/Jul/10 19:27,11/Oct/10 14:45,14/Mar/19 02:29,20/Jul/10 21:48,2.2.9,,,,,,,,,,,,,,,,,2.2.10,2.3,,,JAX-RS,,,,0,,,,,,"Passing in a null value as an argument to a jaxrs:client instance throws the following exception:


{noformat}
java.lang.NullPointerException
	at org.apache.cxf.jaxrs.impl.UriBuilderImpl.buildFromEncoded(UriBuilderImpl.java:167)
	at org.apache.cxf.jaxrs.client.ClientProxyImpl.invoke(ClientProxyImpl.java:148)
	at $Proxy20.test(Unknown Source)
	at foo.bar.ServiceTest.testTestWithNull(ServiceTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.test.context.junit4.SpringTestMethod.invoke(SpringTestMethod.java:160)
	at org.springframework.test.context.junit4.SpringMethodRoadie.runTestMethod(SpringMethodRoadie.java:233)
	at org.springframework.test.context.junit4.SpringMethodRoadie$RunBeforesThenTestThenAfters.run(SpringMethodRoadie.java:333)
	at org.springframework.test.context.junit4.SpringMethodRoadie.runWithRepetitions(SpringMethodRoadie.java:217)
	at org.springframework.test.context.junit4.SpringMethodRoadie.runTest(SpringMethodRoadie.java:197)
	at org.springframework.test.context.junit4.SpringMethodRoadie.run(SpringMethodRoadie.java:143)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.invokeTestMethod(SpringJUnit4ClassRunner.java:160)
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:97)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{noformat}","Windows 7
jdk1.6.0_18
Eclipse 3.5",,,,,,,,,,,,,,,,09/Jul/10 19:28;redijedi;cxf-bug.zip;https://issues.apache.org/jira/secure/attachment/12449111/cxf-bug.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47307,,,Fri Jul 09 19:28:24 UTC 2010,,,,,,0|i14do7:,233678,,,,,,,,09/Jul/10 19:28;redijedi;Attached test project.,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong import package version for javax.servlet,CXF-2885,12468635,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,njiang,benoitf,benoitf,06/Jul/10 14:16,11/Oct/10 14:45,14/Mar/19 02:29,07/Jul/10 02:42,2.2.9,,,,,,,,,,,,,,,,,2.2.10,2.3,,,OSGi,,,,0,,,,,,"I'm facing a problem with the CXF 2.2.9 Bundle and Servlet API in OSGi mode
If javax.servlet package is exported in 3.0.0 version, the CXF bundle won't start

This is because, in the MANIFEST generated by the following pom.xml [https://svn.apache.org/repos/asf/cxf/branches/2.2.x-fixes/distribution/bundle/all/pom.xml ], there is the following code:
/javax.servlet.*;version=""[0.0,3)"";resolution:=optional,/

Which means that javax.servlet package exported in 3.0 version won't be accepted
Is there a reason to use 3 ? or maybe you could switch to
/javax.servlet.*;version=""[0.0,4)"";resolution:=optional,/
in order to accept javax.servlet exported in 3.0 version or remove the versioning number ?

Note that this is the same case for the trunk version : https://svn.apache.org/repos/asf/cxf/trunk/distribution/bundle/all/pom.xml
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-07 02:42:43.921,,,no_permission,,Novice,,,,,,,,,,,47309,,,Wed Jul 07 02:42:43 UTC 2010,,,,,,0|i1aezz:,268896,,,,,,,,"07/Jul/10 02:42;njiang;Applied patch with thanks to Florent, also fix the same issue on jaxrs, minimal.",,,,,,,,,,,,,,,,,,,,,,,,,,
have JAXBElementProvider look for @XmlJavaTypeAdapter on the interfaces,CXF-2869,12468447,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,gilesp,gilesp,02/Jul/10 16:29,11/Oct/10 14:45,14/Mar/19 02:29,09/Jul/10 20:50,2.2.7,2.2.8,2.2.9,,,,,,,,,,,,,,,2.2.10,2.3,,,JAX-RS,,,,0,,,,,,"When the return type of a JAX-RS annotated method is an interface, and the interface has a @JavaXmlTypeAdapter on it, the JAXBElementProvider should find that adapter so it can do the appropriate conversion.  Per Sergey:

""At the moment JAXBElementProvider is capable of working with @XmlJavaTypeAdapter but it does not check the interfaces. The workaround : add @XmlJavaTypeAdapter as a method annotation to getAll() or to BaseballCardImpl. [...] but I can see that the fix can be trivial in this case :-)"" ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47325,,,2010-07-02 16:29:32.0,,,,,,0|i1408n:,231501,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAXB unmarshal error when the field  of  partTypeClass  is javax.xml.datatype.XMLGregorianCalendar,CXF-2868,12468426,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,02/Jul/10 11:42,11/Oct/10 14:52,14/Mar/19 02:29,12/Jul/10 09:40,,,,,,,,,,,,,,,,,,2.2.10,,,,,,,,0,,,,,,"The JAXB Bridge should be used to unmarshall the xml for this class :
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""GMonthTest"", propOrder = {
    ""value""
})
public class GMonthTest {

    @XmlElement(required = true, nillable = true)
    @XmlSchemaType(name = ""gMonth"")
    protected XMLGregorianCalendar value;

    /**
     * Gets the value of the value property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setValue(XMLGregorianCalendar value) {
        this.value = value;
    }

}",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47326,,,2010-07-02 11:42:27.0,,,,,,0|i14er3:,233853,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Skip wsa policy verification  when client proxy is created with AddressingFeature(required=false) ,CXF-2867,12468425,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,02/Jul/10 11:35,11/Oct/10 14:52,14/Mar/19 02:29,12/Jul/10 09:42,,,,,,,,,,,,,,,,,,2.2.10,,,,WS-* Components,,,,0,,,,,,"When there is WS-Addressing policy assertion in the WSDL and  the client proxy is created with AddressingFeature(required=false) , the interceptors should ignore the WS-Addressing policy verification . ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-07-12 10:51:46.337,,,no_permission,,,,,,,,,,,,,47327,,,Mon Jul 12 10:51:46 UTC 2010,,,,,,0|i14f33:,233907,,,,,,,,12/Jul/10 10:51;gmazza;But what if the policy says the Assertion is required?  (optional=false)?  Should the client be allowed to override that?,,,,,,,,,,,,,,,,,,,,,,,,,,
DispatchClientServerTest fails on Windows,CXF-2865,12468322,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,yaytay,yaytay,01/Jul/10 05:15,11/Oct/10 14:52,14/Mar/19 02:29,15/Jul/10 21:44,2.3,,,,,,,,,,,,,,,,,2.2.10,,,,JAX-WS Runtime,,,,0,,,,,,"The test DispatchClientServerTest fails with: java.lang.AssertionError: java.net.SocketTimeoutException.
Stack trace for the exception: 
Caused by: java.net.SocketTimeoutException: connect timed out
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
        at java.net.Socket.connect(Socket.java:529)
        at sun.net.NetworkClient.doConnect(NetworkClient.java:158)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:394)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:529)
        at sun.net.www.http.HttpClient.<init>(HttpClient.java:233)
        at sun.net.www.http.HttpClient.New(HttpClient.java:306)
        at sun.net.www.http.HttpClient.New(HttpClient.java:323)
        at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:860)
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:801)
        at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:726)
        at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:904)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleHeadersTrustCaching(HTTPConduit.java:1869)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.onFirstWrite(HTTPConduit.java:1821)
        at org.apache.cxf.io.AbstractWrappedOutputStream.write(AbstractWrappedOutputStream.java:42)
        at org.apache.cxf.io.AbstractThresholdOutputStream.write(AbstractThresholdOutputStream.java:69)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1889)

The causes for the issue are twofold:
1. On Windows a failed connection to localhost takes 'some time' to fail, on Linux and MacOS it fails instantly.
2. The exception for a failed connection is java.net.ConnectException, but the exception for a timed out connection is java.net.SocketTimeoutException.
So on Windows the SocketTimeoutException is seen and on Linux and MacOS the ConnectException is seen - not even Java can paper over OS level differences here.
The test currently only considers the ConnectException to be valid, and thus fails on Windows.",Windows Vista 64 bit,3600,3600,,0%,3600,3600,,,,,,,,,,01/Jul/10 05:16;yaytay;DispatchClientServerTest.patch;https://issues.apache.org/jira/secure/attachment/12448477/DispatchClientServerTest.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,47329,,,Thu Jul 01 05:16:54 UTC 2010,,,,,,0|i1af13:,268901,,,,,,,,01/Jul/10 05:16;yaytay;Small patch to make the test accept both java.net.ConnectException and java.net.SocketTimeoutException.,,,,,,,,,,,,,,,,,,,,,,,,,,
http-osgi transport doesn't set conduitInitiator correctly,CXF-2861,12467870,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,25/Jun/10 07:57,11/Oct/10 14:52,14/Mar/19 02:29,02/Jul/10 05:19,,,,,,,,,,,,,,,,,,2.2.10,,,,,,,,0,,,,,,this will cause problem when work with decoupled endpoint,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47333,,,Fri Jul 02 05:19:35 UTC 2010,,,,,,0|i0uzwv:,178959,,,,,,,,"02/Jul/10 05:19;ffang;commit fix
http://svn.apache.org/viewvc?rev=959857&view=rev",,,,,,,,,,,,,,,,,,,,,,,,,,
MTOM: JAX-RS response missing XOP attachment,CXF-2857,12467388,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,,abryndin@gmail.com,abryndin@gmail.com,18/Jun/10 23:25,11/Oct/10 14:45,14/Mar/19 02:29,09/Jul/10 20:38,2.2.9,,,,,,,,,,,,,,,,,2.2.10,2.3,,,JAX-RS,,,,0,,,,,,"Hi,
We have configured our JAX-RS service endpoint to support mtom

        <jaxrs:server
...
            <jaxrs:properties>
            <entry key=""mtom-enabled"" value=""true""/>
            <entry key=""mtom-threshold"" value=""0""/>
        </jaxrs:properties>
        </jaxrs:server>


Service resource @Produces(""multipart/related"") mime type, client Accepts the same

Service returns JAXB object with DataHandler field

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = ""DocData"", propOrder = {
    ""uri"",
    ""data""
})
public class DocData {

    protected String uri;
    @XmlMimeType(""application/octet-stream"")
    protected DataHandler data;


Response generated by server

HTTP/1.1 201 Created
Server: Apache-Coyote/1.1
Location: http://localhost:8081/ds-doc-store/documents/6711b0bf-0a2a-4e06-b48f-4c27243ae9a2
Date: Fri, 18 Jun 2010 20:57:53 GMT
Content-Type: multipart/related; type=""application/xop+xml""; boundary=""uuid:692e6f1f-ed9e-4027-8841-29bd5550eea5""; start=""<1>""; start-info=""text/xml""
Content-Length: 1017


--uuid:692e6f1f-ed9e-4027-8841-29bd5550eea5
Content-Type: application/xop+xml; charset=UTF-8; type=""text/xml"";
Content-Transfer-Encoding: binary
Content-ID: <1>

<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?><documentResp xmlns=""http://www.bla.com/data-services"" modifiedDate=""2010-06-18T13:57:54.049-07:00"" createdDate=""2010-06-18T13:57:54.049-07:00"" docId=""6711b0bf-0a2a-4e06-b48f-4c27243ae9a2"" ssn=""123-45-6789"" appVersion=""1.0"" appId=""TTO"" year=""2010"" docTypeId=""W2"" docName=""Test Document""><docProperties><docProperty propertyName=""ein"">1276894673334</docProperty><docProperty propertyName=""wages"">1276894673334</docProperty></docProperties>
<docData>
<data><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:ccddce1c-926f-438f-84f8-b306b5a47c17-1@www.bla.com""/></data>
</docData>
<link title=""Test Document"" rel=""self"" href=""http://localhost:8081/ds-doc-store/documents/6711b0bf-0a2a-4e06-b48f-4c27243ae9a2""/></documentResp>
--uuid:692e6f1f-ed9e-4027-8841-29bd5550eea5--




data element contains the xop reference but the actual xop attachment is missing.

<data><xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:ccddce1c-926f-438f-84f8-b306b5a47c17-1@www.bla.com""/></data>



CXF-RS WebClient seems to work fine, attaching xop binary in request, and server properly processes request with xop, so it only happens with outbound message's on server side, in both cases same JAXB object with DataHandler field was used.

Thanks
","WIndows 7 64 bit, JBoss AS 5.01",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47337,,,2010-06-18 23:25:17.0,,,,,,0|i0uy73:,178681,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In some cases, use of http binding on the client results in ""IllegalStateException (Already connected)""",CXF-2856,12467354,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,18/Jun/10 15:38,11/Oct/10 14:52,14/Mar/19 02:29,18/Jun/10 16:49,2.2.9,,,,,,,,,,,,,,,,,2.2.10,,,,,,,,0,,,,,,"
See:

http://old.nabble.com/CXF-problem:-IllegalStateException-(Already-connected)-ts28912706.html",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47338,,,2010-06-18 15:38:49.0,,,,,,0|i0v273:,179329,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XFire Migration Guide shows XMLBeans indicates not ported,CXF-2853,12467241,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,dkulp,brrichin,brrichin,17/Jun/10 17:27,11/Oct/10 14:52,14/Mar/19 02:29,17/Jun/10 17:46,,,,,,,,,,,,,,,,,,2.2.10,,,,Documentation,,,,0,,,,,,The XFire Migration Guide (http://cxf.apache.org/docs/xfire-migration-guide.html) shows XMLBeans as being not ported but notes that it will be ported with 2.1.  The XMLBeans bindings page page (http://cxf.apache.org/docs/xmlbeans.html) seems indicate it has been ported and the documentation just need to be updated.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,47341,,,2010-06-17 17:27:38.0,,,,,,0|i1af27:,268906,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JavaToWS requires Spring,CXF-2852,12467227,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,asoldano,asoldano,asoldano,17/Jun/10 15:13,11/Oct/10 14:45,14/Mar/19 02:29,22/Jun/10 08:06,,,,,,,,,,,,,,,,,,2.2.10,2.3,,,Tooling,,,,0,,,,,,Currently JavaToWS  tooling requires Spring for loading java2wsbeans.xml with the configuration of service builder / databinding bean to use given the current frontend. It should be possible to use java -> wsdl tooling without Spring on the classpath.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47342,,,2010-06-17 15:13:40.0,,,,,,0|i1409j:,231505,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Schemas passed by ServiceFactoryBean.setSchemaLocation() are not accessible in DataBinding model,CXF-2851,12467208,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,nilupa,nilupa,17/Jun/10 10:11,11/Oct/10 14:52,14/Mar/19 02:29,18/Jun/10 18:17,,,,,,,,,,,,,,,,,,2.2.10,,,,Core,,,,0,,,,,,"I am working on implementing the JiBX databinding implementation for Apache CXF and I've come across the following situation which I think could be a possible shortcoming. I've also attached two patches as a solution for that.

I've used the following code to start up a simple service and I've used serviceFactoryBean.setSchemaLocations() method to pass a list of schema locations. 

LibraryServiceImpl libraryServiceImpl = new LibraryServiceImpl();
ServerFactoryBean svrFactory = new ServerFactoryBean();
ArrayList<String> schemaLocations = new ArrayList<String>();
schemaLocations.add(""file:///home/nilupa/Documents/experiment/types.xsd"");
svrFactory.setSchemaLocations(schemaLocations);
svrFactory.setServiceClass(LibraryService.class);
svrFactory.setAddress(""http://localhost:8080/LibraryService"");
svrFactory.setServiceBean(libraryServiceImpl);
svrFactory.getServiceFactory().setDataBinding(new JiBXDataBinding());
svrFactory.create();

However that information is inaccessible in the service model or in the AbstractDataBinding classes. When I looked in more deeply I found that AbstarctDataBinding is populated with  schemas that are specified by serviceFactoryBean.setSchemaLocations() when no DataBinding is specified and when ReflectionServiceFactoryBean.createDefaultDataBinding() is invoked. I think AbstarctDataBinding should be populated not only when no databinding is specified but also when particular databinding object is provided with schemas specified by setSchemaLocations() method. ",,,,,,,,,,,,,,,,,17/Jun/10 10:16;nilupa;CXF-2851.patch;https://issues.apache.org/jira/secure/attachment/12447331/CXF-2851.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47343,,,Thu Jun 17 10:16:14 UTC 2010,,,,,,0|i0sxx3:,166972,,,,,,,,17/Jun/10 10:16;nilupa;Proposed fix for the issue.,,,,,,,,,,,,,,,,,,,,,,,,,,
2.2.9 samples use 2.3.0-SNAPSHOT dependencies,CXF-2848,12467130,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,,brrichin,brrichin,16/Jun/10 22:10,11/Oct/10 14:45,14/Mar/19 02:29,05/Oct/10 18:10,2.2.9,,,,,,,,,,,,,,,,,2.3,,,,Samples,,,,0,,,,,,"It looks like the samples for 2.2.9 use the wildcard <cxf.version>[2,)</cxf.version> and have not been replaced by the actual  version like in 2.2.7 (<cxf.version>2.2.7</cxf.version>).  The consequence of this is that when samples are attempted to be built/run via Maven, Maven tries to use 2.3.0-SNAPSHOT dependencies and fails.  Replacing the version with 2.2.9 seems to work.
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-10-05 18:10:01.784,,,no_permission,,Novice,,,,,,,,,,,47346,,,Tue Oct 05 18:10:01 UTC 2010,,,,,,0|i1af2f:,268907,,,,,,,,"05/Oct/10 18:10;dkulp;
 This will be resolved in 2.3 as the samples have a new pom heiarchy setup that can handle this better as part of the release process.
",,,,,,,,,,,,,,,,,,,,,,,,,,
BigDecimalType incorrectly prints scientific notation,CXF-2847,12467035,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,bmargulies,panth13,panth13,15/Jun/10 21:27,21/Jan/11 02:58,14/Mar/19 02:29,16/Jun/10 11:37,2.2.9,,,,,,,,,,,,,,,,,2.2.10,,,,Aegis Databinding,,,,0,,,,,,"By the SOAP spec, types of ""decimal"" are not supposed to use scientific notation (http://www.w3.org/TR/xmlschema-2/#decimal).

However if the value of a BigDecimal is small enough, the toString() method (used by the BigDecimalType class) will print using scientific notation.

Instead, this type mapper should use the toPlainString() method to ensure no scientific notation is used.

I have attached a patch and an example to what i am referring. I don't have an actual unit test for the BigDecimalType class itself.

-B",,,,,,,,,,,,,CXF-3263,,,,15/Jun/10 21:28;panth13;BigDecimalStringTest.java;https://issues.apache.org/jira/secure/attachment/12447176/BigDecimalStringTest.java,15/Jun/10 21:28;panth13;BigDecimalType.java.patch;https://issues.apache.org/jira/secure/attachment/12447175/BigDecimalType.java.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-06-16 11:37:33.397,,,no_permission,,,,,,,,,,,,,47347,,,Wed Jun 16 11:37:48 UTC 2010,,,,,,0|i14esf:,233859,,,,,,,,16/Jun/10 11:37;bmargulies;Patch applied. Thanks.,16/Jun/10 11:37;bmargulies;patch applied.,,,,,,,,,,,,,,,,,,,,,,,,,
JAXWS Provider endpoints do not work if either super classes implementing or interfaces extending Provider are used,CXF-2846,12466756,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,sergey_beryozkin,sergey_beryozkin,11/Jun/10 17:45,11/Oct/10 14:45,14/Mar/19 02:29,16/Jun/10 09:00,2.2.9,,,,,,,,,,,,,,,,,2.2.10,2.3,,,JAX-WS Runtime,,,,0,,,,,,"Publishing an endpoint with the following WSDL :

<?xml version=""1.0""?>
<wsdl:definitions name=""PicketLinkSTS"" targetNamespace=""urn:picketlink:identity-federation:sts""
    xmlns:tns=""urn:picketlink:identity-federation:sts"" 
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" 
    xmlns:wsap10=""http://www.w3.org/2006/05/addressing/wsdl""
    xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/"">
  <wsdl:types>
    <xs:schema targetNamespace=""urn:picketlink:identity-federation:sts"" 
      xmlns:tns=""urn:picketlink:identity-federation:sts"" 
      xmlns:xs=""http://www.w3.org/2001/XMLSchema""
      version=""1.0"">
      <xs:element  name=""MessageBody"">
      <xs:complexType>
        <xs:sequence>
            <xs:any minOccurs=""0"" maxOccurs=""unbounded"" namespace=""##any""/>
        </xs:sequence>
      </xs:complexType>
      <xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name=""RequestSecurityToken"">
    <wsdl:part name=""rstMessage"" element=""tns:MessageBody""/>
  </wsdl:message>
  <wsdl:message name=""RequestSecurityTokenResponse"">
    <wsdl:part name=""rstrMessage"" element=""tns:MessageBody""/>
  </wsdl:message>
  <wsdl:portType name=""SecureTokenService"">
    <wsdl:operation name=""IssueToken"">
      <wsdl:input wsap10:Action=""http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue"" message=""tns:RequestSecurityToken""/>
      <wsdl:output wsap10:Action=""http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue"" message=""tns:RequestSecurityTokenResponse""/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""STSBinding"" type=""tns:SecureTokenService"">
    <soap12:binding transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsdl:operation name=""IssueToken"">
      <soap12:operation soapAction=""http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue"" style=""document""/>
      <wsdl:input>
        <soap12:body use=""literal""/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use=""literal""/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""PicketLinkSTS"">
    <wsdl:port name=""PicketLinkSTSPort"" binding=""tns:STSBinding"">
      <soap12:address location=""http://localhost:8080/picketlink-sts""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>

Results in :

Caused by: javax.xml.ws.WebServiceException: java.lang.ClassCastException: java.lang.Class cannot be cast to java.lang.reflect.ParameterizedType
    at org.apache.cxf.jaxws.EndpointImpl.doPublish(EndpointImpl.java:323) [:2.2.9]
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47348,,,2010-06-11 17:45:18.0,,,,,,0|i0v12f:,179146,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo on JAX-WS Configuration page: publishedEndpointURL should be publishedEndpointUrl,CXF-2844,12466675,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,ericacm,ericacm,10/Jun/10 17:52,11/Oct/10 14:52,14/Mar/19 02:29,18/Jun/10 17:21,,,,,,,,,,,,,,,,,,2.2.10,,,,Documentation,,,,0,,,,,,Page is at https://cwiki.apache.org/CXF20DOC/jax-ws-configuration.html,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-18 17:21:19.934,,,no_permission,,,,,,,,,,,,,47350,,,Fri Jun 18 17:21:19 UTC 2010,,,,,,0|i1af2n:,268908,,,,,,,,"18/Jun/10 17:21;dkulp;
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,
The default wsa:action value computation for response message is not correct. ,CXF-2843,12466643,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,10/Jun/10 10:37,11/Oct/10 14:52,14/Mar/19 02:29,11/Jun/10 09:48,,,,,,,,,,,,,,,,,,2.2.10,,,,WS-* Components,,,,0,,,,,,"The wsa:action value computation in wsdl1.1 is confused in spec :http://www.w3.org/TR/2006/CR-ws-addr-wsdl-20060529/
From the spec , we can conclude the default response wsa:action value pattern when there is  no name specified for input/output is :
[target namespace][delimiter][interface name][delimiter][operation name][direction token]
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47351,,,2010-06-10 10:37:10.0,,,,,,0|i140bz:,231516,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
" wsa:action header is missing when the  wsam:Action="""" in wsdl input",CXF-2842,12466641,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,10/Jun/10 10:27,11/Oct/10 14:52,14/Mar/19 02:29,11/Jun/10 09:52,,,,,,,,,,,,,,,,,,2.2.10,,,,WS-* Components,,,,0,,,,,,"When the wsam:action is an empty string , the MAPAggregator does not generate the wsa:action header which is required :
 <operation name=""addNumbers4"">
            <input message=""tns:addNumbers4"" wsam:Action=""""/>
            <output message=""tns:addNumbersResponse4"" wsam:Action=""""/>
            <fault name=""add4Fault"" message=""tns:addNumbers4Fault"" wsam:Action=""""/>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,47352,,,2010-06-10 10:27:21.0,,,,,,0|i140br:,231515,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WS-RM returns an exception to the client even when its retry mechanim successfully delivers the message after some transmission error,CXF-2841,12466579,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ay,ay,09/Jun/10 16:15,11/Oct/10 14:52,14/Mar/19 02:29,18/Jun/10 18:44,2.2.7,2.2.8,2.2.9,,,,,,,,,,,,,,,2.2.10,,,,WS-* Components,,,,0,,,,,,"This problem can be easily reproduced in the CXF's ws-rm demo sample.

When the target server is available at the createSequence step but becomes unavailable before the application message transmission, the retransmission of this message is performed by another thread until the message is delivered according to the policy, but the original client thread is getting the ConnectException while the retransmission is taking place in background. So in this case, the client gets the exception but the message can be successfully delivered to the target system when the target server becomes available.

When the WS-RM feature is engaged and retransmission of the message is taken care by its runtime, the temporary exception should not be returned to the client.

One way to fix this issue would be to make the RetransmissionInterceptor's fault handling method clear the exception object  which is set in the message by the PhaseInterceptorChain's doInterceptor method. 

Concretely, adding the following code in org.apache.cxf.ws.rm.RetransmissionInterceptor's handle method seems to fix this issue.

       ...
       if (isFault) {
           // remove the exception set by the PhaseInterceptorChain
so that the error does not reach the client
           // when retransmission is scheduled
           message.setContent(Exception.class, null);
           message.getExchange().put(Exception.class, null);
       }
       else {
           WriteOnCloseOutputStrea ...
           ...
       }


Regards, Aki
","JDK 1.6.0_16, Windows XP",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-06-18 18:44:56.183,,,no_permission,,Unknown,,,,,,,,,,,47353,,,Fri Jun 18 18:44:56 UTC 2010,,,,,,0|i0v06f:,179002,,,,,,,,"18/Jun/10 18:44;dkulp;
Patch applied.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,
CXF HttpConduit doesn't read VM proxy settings,CXF-2839,12466314,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,idar,idar,07/Jun/10 06:57,06/Dec/10 22:48,14/Mar/19 02:29,20/Oct/10 15:03,2.2.6,2.2.7,2.2.8,,,,,,,,,,,,,,,2.2.12,2.3.1,,,,,,,0,,,,,,"When setting proxy server as VM parameters http.proxyHost, http.proxyPort,
proxySet, http.nonProxyHosts. HttpConduit doesn't read those properties and set proxy server.

I have to manually set these after creating the client.

if(""true"".equalsIgnoreCase(System.getProperty(""proxySet""))){
            Client client = ClientProxy.getClient(service);
            HTTPConduit http = (HTTPConduit) client.getConduit();

            HTTPClientPolicy httpClientPolicy = http.getClient();
            httpClientPolicy.setProxyServer(System.getProperty(""http.proxyHost""));
            httpClientPolicy.setProxyServerPort(Integer.parseInt(System.getProperty(""http.proxyPort"")));
        }",,,,,,,,,,,,,,,,,19/Oct/10 13:00;sauthieg;0001-Fix-typo.patch;https://issues.apache.org/jira/secure/attachment/12457546/0001-Fix-typo.patch,19/Oct/10 13:00;sauthieg;0002-CXF-2839-CXF-HttpConduit-doesn-t-read-VM-proxy-setti.patch;https://issues.apache.org/jira/secure/attachment/12457547/0002-CXF-2839-CXF-HttpConduit-doesn-t-read-VM-proxy-setti.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-10-19 13:00:09.608,,,no_permission,,,,,,,,,,,,,114192,,,Tue Oct 19 13:00:09 UTC 2010,,,,,,0|i0klaf:,118266,,,,,,,,"19/Oct/10 13:00;sauthieg;* Add NonProxyHosts as a configuration parameter in HTTPConduit
* Introduce PatternBuilder + TestCase
* Only use Proxy when the hostname is not in the nonProxyHosts list
* Directly map HTTPClientPolicy.nonProxyHosts as a Pattern
* Use PatternBuilder as a JAXB Adapter
* Introduce a systemProxyConfiguration in the HTTPConduit
* Hopefully make the proxy selection code a little more readable
* Use constants for HTTP proxy property names

BTW, is there a better way to exchange patch when using git mirror ?",,,,,,,,,,,,,,,,,,,,,,,,,,
CXFServlet ignores proper ApplicationContext combination loading.,CXF-2838,12466273,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,carlholmes,carlholmes,06/Jun/10 03:00,27/Feb/12 03:17,14/Mar/19 02:29,20/Oct/11 01:36,2.2.8,,,,,,,,,,,,,,,,,2.4.2,,,,Transports,,,,0,application-context,cxf-servlet,,,,"CXFServlet allows you to specify an init-param element specifying the location of an application-context file to be used in combination with the root application context (loaded via a ContextLoader(Listener/Servlet) to use to construct beans for web services.  However, this loading process is not done properly.

Say that a user wished to use the root application context, loaded in the ContextLoader(Listener/Servlet) to provide common functionality (database beans, cache, email services, etc) between different servlets, but wanted to separate out two different sets of web services (that used these common beans) and also had another servlet that used these common beans but did not expose web services.  Normally, that would be done as so:

context loader listener:
   common application context files

Servlet#1(CXF servlet #1)
   only web service beans, including the imports for CXF from its META-INF directories as desired

Servlet#2(CXF servlet #2, exposing different web services under a different url-pattern than Servlet#1)
   only CXF Servlet #2 web service beans, including the imports for CXF from its META_INF directories as desired

UnrelatedServlet
    Gets the root application context and any additional beans it needs

Each servlet would then be mapped on different url-patterns, for example, /services/*, /securedServices/*, and /.

However, this doesn't work as expected.

I traced this down - and it seems that before the context is refreshed, the bus is read and a controller is constructed before the servlet gets a chance to even read its initialization parameter and append these beans to the Root application context to construct a new application context for it to use.

This isn't a problem for any web application just using an ""all beans in the context loader listener"" or ""just web services"" approach - but it makes the CXFServlet much less useful than it should be.  The Root application context should be merged with the user-injected specific application context before any configuration is attempted.",Windows using Tomcat 5.5/Tomcat 6,1814400,1814400,,0%,1814400,1814400,,,,,,,,,,15/Sep/11 06:10;carlholmes;cxf-testcase.zip;https://issues.apache.org/jira/secure/attachment/12494569/cxf-testcase.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-01-27 23:01:05.25,,,no_permission,,Moderate,,,,,,,,,,,43554,,,Mon Feb 27 03:16:16 UTC 2012,,,,,,0|i1af2v:,268909,,,,,,,,"27/Jan/11 23:01;kajkandler@conficio.com;I observe the very same behavior. The curious thing is that it is specific to tomcat. I set up one of the samples using Jetty server and it succeeded to initialize two separate contexts on the bus. However in my tomcat application this fails. 

it fails because it tries to load the configuration of the first service into the servlet#2, which fails, because the service is already deployed.","14/Sep/11 16:19;dkulp;
I think much of this has changed in CXF 2.4.x and should work a lot better.   Can you retest with CXF 2.4.x and if there is still an issue, provide a testcase?","15/Sep/11 06:10;carlholmes;I believe the problem is fixed in the latest (2.4.2) version of CXF.  I tried backporting it to the 2.2.8 version, but it's been so long that I was unable to do so.  I believe the problem was also related to how the cxf: namespace was being parsed back then.  

This test case shows that the servlet is now properly loading the root web application context, and then attempting to load the bus and other beans from the given configuration, as does the Spring Dispatcher Servlet.",20/Oct/11 01:36;dkulp;Confirmed fixed,"27/Feb/12 03:16;ddixon;I'm seeing this problem with cxf 2.5.2 on tomcat 7.0.25 with StrutsTilesListener, StrutsPrepareAndExecuteFilter mapped to /\*, and cxf servlet mapped to /services/\*. All requests go to the cxf servlet regardless of url.
",,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in ClientImpl caused by toString-method on requestContext,CXF-2835,12465768,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,henningjensen,henningjensen,31/May/10 07:19,09/Jul/12 16:36,14/Mar/19 02:29,01/Jun/10 16:41,2.2.6,,,,,,,,,,,,,,,,,2.2.9,,,,,,,,0,,,,,,"We have about 10 threads running at the same time against the same web service. Some of the requests fail with the following stacktrace:

{code}
javax.xml.ws.soap.SOAPFaultException: Fault string, and possibly fault code, not set
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:146)
	at $Proxy218.getFlightData(Unknown Source)
	at com.example.FlightDataAction.run(FlightDataAction.java:94)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
	at java.util.HashMap$EntryIterator.next(HashMap.java:834)
	at java.util.HashMap$EntryIterator.next(HashMap.java:832)
	at java.util.AbstractMap.toString(AbstractMap.java:485)
	at java.lang.String.valueOf(String.java:2826)
	at java.lang.StringBuilder.append(StringBuilder.java:115)
	at java.util.AbstractMap.toString(AbstractMap.java:490)
	at java.util.Collections$SynchronizedMap.toString(Collections.java:2026)
	at java.lang.String.valueOf(String.java:2826)
	at java.lang.StringBuilder.append(StringBuilder.java:115)
	at org.apache.cxf.endpoint.ClientImpl.processResult(ClientImpl.java:535)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:486)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:310)
	at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:262)
	at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
	at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
	... 5 more
{code}

From ClientImpl:

{code}

    protected Map<Thread, Map<String, Object>> responseContext 
        = Collections.synchronizedMap(new WeakHashMap<Thread, Map<String, Object>>());
....

    protected Object[] processResult(Message message,
                                   Exchange exchange,
                                   BindingOperationInfo oi,
                                   Map<String, Object> resContext) throws Exception {
....

        // Grab the response objects if there are any
        List resList = null;
        Message inMsg = exchange.getInMessage();
        if (inMsg != null) {
            if (null != resContext) {
                resContext.putAll(inMsg);
                if (LOG.isLoggable(Level.FINE)) {
                    LOG.fine(""set responseContext to be"" + responseContext);
                }
            }
            resList = inMsg.getContent(List.class);
        }
...
{code}

The use of toString on responseContext is causing a ConcurrentModificationException when there are many threads working at the same time on the same service. The LOG.fine -line is not optimal since the string is actually resolved no matter if the log line is going to be written to the log file or not. Using String.format() would fix the issue when log level is not FINE, but would not fix the actual problem caused by many threads at the same time. I'm not sure what the developer wish to log in this cause, but limiting the object traversal and not using toString should do the trick. 


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-07-09 16:12:07.706,,,no_permission,,,,,,,,,,,,,113450,,,Mon Jul 09 16:36:12 UTC 2012,,,,,,0|i0dein:,76281,,,,,,,,"31/May/10 10:44;henningjensen;Seems like we had a glitch in our configuration of the log level for CXF. The log line string was not evaluated when no the isLoggable-check correctly returned false. This fixes the issue for us now, but perhaps the log line should be fixed anyway?","09/Jul/12 16:12;flyingkiwiguy;We seem to be intermittently reproducing this issue with 2.2.9, so it doesn't seem to be fixed.


Caused by: javax.xml.ws.soap.SOAPFaultException: Fault string, and possibly fault code, not set
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:146)
[..]
        at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:149)
        at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
        at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:77)
        at com.betfair.monitoring.kpi.aop.KPIMeasuringAspect.measureDuration(KPIMeasuringAspect.java:67)
        at sun.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
        at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:64)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:160)
        at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
[..]
        at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
        at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:77)
        at com.betfair.monitoring.kpi.aop.KPIMeasuringAspect.measureDuration(KPIMeasuringAspect.java:67)
        at sun.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
        at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
        at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:64)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:160)
        at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
[..]
        ... 5 more
Caused by: java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
        at java.util.HashMap$EntryIterator.next(HashMap.java:834)
        at java.util.HashMap$EntryIterator.next(HashMap.java:832)
        at java.util.AbstractMap.toString(AbstractMap.java:485)
        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at java.util.AbstractMap.toString(AbstractMap.java:490)
        at java.util.Collections$SynchronizedMap.toString(Collections.java:2026)

        at java.lang.String.valueOf(String.java:2826)
        at java.lang.StringBuilder.append(StringBuilder.java:115)
        at org.apache.cxf.endpoint.ClientImpl.processResult(ClientImpl.java:563)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:514)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:313)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:265)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
        ... 52 more
","09/Jul/12 16:31;gmazza;Can you upgrade to a recent version of CXF?  We're up to 2.6.1 now, and 2.2.x (as well as 2.3.x) is no longer supported.
",09/Jul/12 16:36;flyingkiwiguy;Will try to do and see if I can repro. Thanks for the quick reply.,,,,,,,,,,,,,,,,,,,,,,,
JAXWS2.2:MAPCodec.restoreExchange() does not honor the addressingDisabled property,CXF-2834,12465761,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,31/May/10 05:43,11/Oct/10 14:52,14/Mar/19 02:29,31/May/10 10:09,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,WS-* Components,,,,0,,,,,,"When the dispatch is created with AddressingFeature(false), 

dispatch = service.createDispatch(port, SOAPMessage.class, javax.xml.ws.Service.Mode.MESSAGE, new AddressingFeature(false))

The MAPCodec will abort the InterceptorChain  because there is no correlated message and SOAPFaultException will not be thrown correctly . 
 We should check if the AdressinFeacture is disabled before abort all the interceptorChain . ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113451,,,2010-05-31 05:43:56.0,,,,,,0|i0deiv:,76282,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WSA needs to validate incoming action,CXF-2832,12465703,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,29/May/10 11:30,11/Oct/10 14:52,14/Mar/19 02:29,01/Jun/10 19:17,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,WS-* Components,,,,0,,,,,,"
Currently, Addressing checks to make sure the Action is present and it's equal to the SOAPAction, but it doesn't actual check to make sure the action matches what is expect (like defined in the wsdl)",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113452,,,2010-05-29 11:30:48.0,,,,,,0|i0dej3:,76283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in EndpointReferenceUtils.SchemaLSResourceResolver resolveResource when systemId is null,CXF-2830,12465582,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,cnelson,cnelson,27/May/10 16:39,11/Oct/10 14:52,14/Mar/19 02:29,27/May/10 17:57,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,Core,,,,0,,,,,,If the ResourceManager is used in resolveResource and the systemId is null we will get a null pointer exception. Adding a check for systemId != null before calling the resource manager fixes the problem. I will attach a patch with this fix.,,,,,,,,,,,,,,,,,27/May/10 16:40;cnelson;patch.txt;https://issues.apache.org/jira/secure/attachment/12445673/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,113453,,,2010-05-27 16:39:47.0,,,,,,0|i0dejb:,76284,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
W3CDOMStreamReader is not compatible with wstx XMLEventReader,CXF-2829,12465553,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,bugsan,bugsan,27/May/10 12:42,11/Oct/10 14:52,14/Mar/19 02:29,27/May/10 16:43,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,Core,,,,0,,,,,,"If you create an XMLEventReader from a W3CDOMStreamReader (with the woodstox library), it will fail because XMLEventAllocator doesnt accept Attribute XMLEvent :

Caused by: com.ctc.wstx.exc.WstxException: Internal error: should not get [13]
	at com.ctc.wstx.evt.DefaultEventAllocator.allocate(DefaultEventAllocator.java:256)
	at org.codehaus.stax2.ri.Stax2EventReaderImpl.createNextEvent(Stax2EventReaderImpl.java:411)
	at org.codehaus.stax2.ri.Stax2EventReaderImpl.nextEvent(Stax2EventReaderImpl.java:255)

Here is the comment in wstx source code :

-------------8<-------------8<-------------8<-------------8<-------------8<-------------
            /* Following 2 types should never get in here; they are directly
             * handled by the reader, and can only be accessed via start
             * element.
             */
        case NAMESPACE:
        case ATTRIBUTE:
            throw new WstxException(""Internal error: should not get ""
                                    +ErrorConsts.tokenTypeDesc(r.getEventType()));
-------------8<-------------8<-------------8<-------------8<-------------8<-------------


To create a XMLStreamReader from a DOM Document or Node, i recommand to simply use XMLInputFactory.createStreamReader(source), where source is a DOMSource.

I think it's better to rely on stax implementation to create a StreamReader from a DOM Node.","Mule 2.2.6-snapshot in proxy mode, and WS-Security (wss4j)
WSTX 4.0.8",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-27 14:52:10.903,,,no_permission,,Novice,,,,,,,,,,,113454,,,Thu May 27 14:52:10 UTC 2010,,,,,,0|i0dejj:,76285,,,,,,,,"27/May/10 14:52;dkulp;

I think I see the issue.   Testing a fix now.   


We cannot rely on the StreamReader created from  XMLInputFactory.createStreamReader(source) for a variety of reasons:

1) For some optimizations that we do, we need direct access to the ""current"" node being read.   Without that, certain operations would be significantly slower.

2) Not all the parsers implement everything we require in their ""DOM wrapping StreamReader"" things.   For example, woodstox doesn't implement the ""String getNamespaceURI(String prefix)"" method (always returns null) which is needed when processing qname types.    

",,,,,,,,,,,,,,,,,,,,,,,,,,
JSR 250 @Resource annotation on field does not work for proxied service implementations,CXF-2828,12465543,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ogeisser,ogeisser,27/May/10 09:04,11/Oct/10 14:52,14/Mar/19 02:29,27/May/10 16:43,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,JAX-WS Runtime,,,,0,,,,,,"h2. Description

A JAX-WS service implementation class has a private {{WebServiceContext}} field which is annotated with the JSR-250 {{@Resource}} annotation. It has also some annotation - for example {{@Transactional}} - which will make Spring wrapping it with a proxy. See the following code for an example:

{code:title=SomeServiceImpl.java|borderStyle=solid}
@Transactional
@WebService(endpointInterface = ""com.example.ISomeService"")
public class SomeServiceImpl implements SomeService {
    @Resource
    private WebServiceContext context;
    ...

{code}

In the current release (2.2.8) this does not work and throws an {{IllegalArgumentException}}.

BTW There is the workaround to annotate a setter method instead of annotating the field.

h2. Background of the bug

Because the Spring {{CommonAnnotationBeanPostProcessor}} which will normally handle JSR-250 annotations ignores {{WebServiceContext}} {{@Ressource}} annotations (see the Javadoc of [{{CommonAnnotationBeanPostProcessor}}|http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html#ignoreResourceType%28java.lang.String%29])  there needs to be a special handling inside of CXF. This special handling happens in the {{org.apache.cxf.jaxws.JaxWsServerFactoryBean.injectResources(Object instance)}} method:


{code:title=JaxWsServerFactoryBean.injectResources(Object instance)|borderStyle=solid}
/**
     * inject resources into servant.  The resources are injected
     * according to @Resource annotations.  See JSR 250 for more
     * information.
     */
    /**
     * @param instance
     */
    protected void injectResources(Object instance) {
        if (instance != null) {
            ResourceManager resourceManager = getBus().getExtension(ResourceManager.class);
            List<ResourceResolver> resolvers = resourceManager.getResourceResolvers();
            resourceManager = new DefaultResourceManager(resolvers); 
            resourceManager.addResourceResolver(new WebServiceContextResourceResolver());
            ResourceInjector injector = new ResourceInjector(resourceManager);
            if (Proxy.isProxyClass(instance.getClass()) && getServiceClass() != null) {
                injector.inject(instance, getServiceClass());
                injector.construct(instance, getServiceClass());
            } else {
                injector.inject(instance);
                injector.construct(instance);
            }
        }
    }  
{code}

h2. Bug

As you can see there is already a special case to detect a proxy ({{Proxy.isProxyClass()}}). The bug is that even in the case of a proxy the code tries to inject into the field of the proxy. But the proxy does not have the field and this gives an {{IllegalArgumentException}} inside of {{ResourceInjector.injectField(Field field, Object resource)}}.


h2. Fix

In the case of a proxied object find the ""wrapped"" (target) object and inject into this object. This is possible because the proxy will be a Spring proxy and Spring has a special Interface ({{Advised}}) which will allow to access the target object. See the following code:

{code:title=JaxWsServerFactoryBean.injectResources(Object instance) - Fixed|borderStyle=solid}
/**
     * inject resources into servant.  The resources are injected
     * according to @Resource annotations.  See JSR 250 for more
     * information.
     */
    /**
     * @param instance
     */
    protected void injectResources(Object instance) {
        if (instance != null) {
            ResourceManager resourceManager = getBus().getExtension(ResourceManager.class);
            List<ResourceResolver> resolvers = resourceManager.getResourceResolvers();
            resourceManager = new DefaultResourceManager(resolvers); 
            resourceManager.addResourceResolver(new WebServiceContextResourceResolver());
            ResourceInjector injector = new ResourceInjector(resourceManager);
            if (Proxy.isProxyClass(instance.getClass()) && getServiceClass() != null) {

                // FIXED: find and inject into the proxy target
                Object proxyTarget = ((org.springframework.aop.framework.Advised)instance).getTargetSource().getTarget();
                injector.inject(proxyTarget, getServiceClass());

                injector.construct(instance, getServiceClass());
            } else {
                injector.inject(instance);
                injector.construct(instance);
            }
        }
    }  
{code}
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-27 15:31:54.845,,,no_permission,,,,,,,,,,,,,113455,,,Thu May 27 15:31:54 UTC 2010,,,,,,0|i0dejr:,76286,,,,,,,,"27/May/10 15:31;dkulp;
OK.  I definitely see the problem (very good write up).   The proposed fix isn't ideal, but definitely points in the right direction.

Basically, when calling ""inject"" we would like the METHODS to go through the proxy, but the field injection needs to go to the object itself.   Basic reasoning is that their could be some ""advice"" attached to the methods and we'd like to make sure that advice is followed.  Thus, the fix cannot really be to pass in the most internal object.  (there is also a smaller issue of a aop proxy of another aop proxy that needs the call to getTarget to recurse a bit)

The real fix is in ResourceInjector.java to update the call to field.set(getTarget(), obj) to get the REAL target, and not the Proxy.  However, we don't want any spring code there so it works without the Spring jars.   Luckily, we have the ClassHelper (and the SpringClassHelper subclass when spring AOP is available) that was easily updated to accomplish this.     I'm going to run the tests now and commit the fix (if they pass) and trigger a new snapshot deploy.   It would be great if you could test it real soon.   I'm hoping to build 2.2.9 real soon (like tomorrow even) and would like to know if this is  now fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,
JAXWS2.2: wsam:action attribute is not generated in <wsdl:input> and <wsdl:ouput> element when the SEI method is not annotated with @Action,CXF-2827,12465537,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,27/May/10 06:41,11/Oct/10 14:52,14/Mar/19 02:29,28/May/10 03:15,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,Tooling,WS-* Components,,,0,,,,,,"When there is no @Action annotated to SEI method , the wsa action value in wsdl  should be computed with :

---JAXWS 2.2 Spec ----
""If wsdl:input[@wsam:Action] cannot be mapped from the above steps, then wsam:Action
is generated using the metadata defaulting algorithm as if wsdl:input[@name] is not present in
WSDL.""

----WSA 1.1 WSDL Binding -------
A default pattern is also defined for backwards compatibility with WSDL 1.1. In the absence of the wsaw:Action attribute, the following pattern is used to construct a default action for inputs and outputs. The general form of an action IRI is as follows:

Example 4-6. Structure of defaulted wsa:Action IRI.

[target namespace][delimiter][port type name][delimiter][input|output name]

For fault messages, the general form of an action IRI is as follows:

Example 4-7. Structure of default wsa:Action IRI for faults

[target namespace][delimiter][port type name][delimiter][operation name][delimiter]Fault[delimiter][fault name]

Example 4-9. Example WSDL without explicit wsa:Action values or explicit message names.

<definitions targetNamespace=""http://greath.example.com/2004/wsdl/resSvc"" ...>
  ...
  <portType name=""reservationInterface"">
    <operation name=""opCheckAvailability"">
      <input message=""tns:checkAvailability""/>
      <output message=""tns:checkAvailabilityResponse""/>
    </operation>
  </portType>
  ...
</definitions>
      

[targetNamespace] = http://greath.example.com/2004/wsdl/resSvc

[port type name] = reservationInterface

According to the rules defined in Section 2.4.5 of WSDL 1.1, if the name attribute is absent for the input of a request response operation the default value is the name of the operation with ""Request"" appended.

[input name] = opCheckAvailabilityRequest

Likewise, the output defaults to the operation name with ""Response"" appended.

[output name] = opCheckAvailabilityResponse

Applying the pattern above with these values we have:

input action = http://greath.example.com/2004/wsdl/resSvc/reservationInterface/opCheckAvailabilityRequest

output action = http://greath.example.com/2004/wsdl/resSvc/reservationInterface/opCheckAvailabilityResponse


We now generated the  the name attribute value for <wsdl:input>, this will effect the action computation :
if <[input name] = opCheckAvailability> , then input action = http://greath.example.com/2004/wsdl/resSvc/reservationInterface/opCheckAvailability.
It's not http://greath.example.com/2004/wsdl/resSvc/reservationInterface/opCheckAvailabilityRequest anymore . 



",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113456,,,2010-05-27 06:41:46.0,,,,,,0|i0dejz:,76287,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multipart Header not Handled Correctly,CXF-2825,12465320,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,kjloh,kjloh,25/May/10 00:45,11/Oct/10 14:45,14/Mar/19 02:29,05/Oct/10 21:31,2.2.5,,,,,,,,,,,,,,,,,2.2.10,2.3,,,JAX-RS,,,,0,,,,,,"Multipart attachment headers other than Content-ID, Content-Type, Content-Transfer-Encoding, are not handled correctly.  Often, the headers will be set to all lower case with null value.  E.g.: content-location: null.


apache-cxf-2.2.5\rt\core\src\main\java\org\apache\cxf\attachment\AttachmentImpl.java

59c59,60
<         headers.put(name.toLowerCase(), value);
---
>         //headers.put(name.toLowerCase(), value);
>         headers.put(name, value);

apache-cxf-2.2.5\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\ext\MessageContextImpl.java

146,147c146,147
<             Attachment handler = (Attachment)handlers.get(i);
<             AttachmentImpl att = new AttachmentImpl(handler.getContentId(), handler.getDataHandler());
---

>             Attachment handler = (Attachment)handlers.get(i);
>             AttachmentImpl att = new AttachmentImpl(handler.getContentId(),  handler.getDataHandler());

148,149c149,150
<                 att.setHeader(key, att.getHeader(key));
---

>                 att.setHeader(key, handler.getHeader(key));
","Redhat Enterprise Linux 5.3
Apache Tomcat 5.5
JDK 6.0
Intel x86",,,,,,,,,,,,,,,,25/May/10 01:12;kjloh;AttachmentImpl.patch;https://issues.apache.org/jira/secure/attachment/12445403/AttachmentImpl.patch,25/May/10 01:12;kjloh;MessageContextImpl.patch;https://issues.apache.org/jira/secure/attachment/12445404/MessageContextImpl.patch,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-05-25 20:43:43.187,,,no_permission,,Novice,,,,,,,,,,,114187,,,Mon Jun 21 12:03:08 UTC 2010,,,,,,0|i0v113:,179140,,,,,,,,"25/May/10 20:43;sergey_beryozkin;Can you try 2.9-SNAPSHOT please and confirm the issue has been fixed ?

I'm not sure the following change is needed :

148,149c149,150
< att.setHeader(key, att.getHeader(key));
—

> att.setHeader(key, handler.getHeader(key));

thanks","21/Jun/10 12:03;thg;Hi Sergey!

I just ran into the same problem with 2.2.9.

> att.setHeader(key, handler.getHeader(key));
is necessary because otherwise the headers would not be copied over correctly from the handler into the newly created attachment.

Here is the old context:
AttachmentImpl att = new AttachmentImpl(handler.getContentId(), handler.getDataHandler());
for (String key : handler.getHeaders().keySet()) {
  att.setHeader(key, att.getHeader(key));
}

This would merely iterate over the keys of the headers of the handler (see the for statement) and create headers with these keys (att.setHeader) in the newly created attachment with the values also taken from the newly created attachment (att.getHeader).

Thanks for fixing,
Thomas
",,,,,,,,,,,,,,,,,,,,,,,,,
REST Client sending all lowercase post parameters,CXF-2823,12465273,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,jeff.peterson,jeff.peterson,24/May/10 14:39,11/Oct/10 14:45,14/Mar/19 02:29,09/Jul/10 20:46,2.2.8,,,,,,,,,,,,,,,,,2.2.10,2.3,,,JAX-RS,,,,0,,,,,,"It appears that the InjectionUtils class in the fillInValuesFromBean method grabs all the getter methods from the bean being posted as form data and does a toLowerCase() on everthing after ""get"" to come up with the parameter names.  

Example:

public class BeanExample {
	private String fooBar = ""test"";
	public String getFooBar() {
		return fooBar;
	}	
}

would post:

foobar=test

but I'd expect it to post:

fooBar=test",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,114185,,,2010-05-24 14:39:55.0,,,,,,0|i0v0zz:,179135,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The interceptor is not added to the ClientImpl when create the dispatch to invoke service,CXF-2822,12465265,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,24/May/10 11:11,11/Oct/10 14:52,14/Mar/19 02:29,25/May/10 08:01,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,JAX-WS Runtime,,,,0,,,,,,"When the bus load the following configuration and create dispatch to invoke the service , the  interceptors does not add to the interceptor chains :
<jaxws:client name=""{http://apache.org/hello_world_soap_http}TimestampSignEncryptPort"" 
        createdFromAPI=""true"">
        <jaxws:outInterceptors>
            <bean class=""org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor""/>
            <ref bean=""TimestampSignEncrypt_Request""/>
        </jaxws:outInterceptors>
        <jaxws:inInterceptors>
            <ref bean=""TimestampSignEncrypt_Response""/>
            <bean class=""org.apache.cxf.binding.soap.saaj.SAAJInInterceptor""/>
        </jaxws:inInterceptors>
    </jaxws:client>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113458,,,2010-05-24 11:11:58.0,,,,,,0|i0dekf:,76289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE during WSDL validation,CXF-2821,12465179,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rrusin,rrusin,22/May/10 00:47,11/Oct/10 14:52,14/Mar/19 02:29,27/May/10 16:31,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,Tooling,,,,0,,,,,,"~/apache-cxf-2.2.8/bin/wsdlvalidator sample.wsdl 
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.cxf.tools.validator.internal.WSIBPValidator.isValid(WSIBPValidator.java:63)
	at org.apache.cxf.tools.validator.internal.WSDL11Validator.isValid(WSDL11Validator.java:135)
	at org.apache.cxf.tools.validator.WSDLValidator.execute(WSDLValidator.java:81)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:58)
	at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:40)
	at org.apache.cxf.tools.validator.WSDLValidator.main(WSDLValidator.java:110)
Caused by: java.lang.NullPointerException
	at org.apache.cxf.tools.validator.internal.WSIBPValidator.checkR2203And2204(WSIBPValidator.java:303)
	... 11 more
WSDLValidator Error : java.lang.reflect.InvocationTargetException

",command line tool,,,,,,,,,,,,,,,,22/May/10 00:48;rrusin;sample.wsdl;https://issues.apache.org/jira/secure/attachment/12445229/sample.wsdl,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113459,,,2010-05-22 00:47:29.0,,,,,,0|i0dekn:,76290,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<protocol-bindings>##SOAP12_Binding</protocol-bindings> in handler chain is not correctly matched  ,CXF-2819,12465090,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,21/May/10 06:46,11/Oct/10 14:52,14/Mar/19 02:29,21/May/10 10:09,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,JAX-WS Runtime,,,,0,,,,,,"When the service class is annotated with SOAP12 binding type :
@BindingType(value = SOAPBinding.SOAP12HTTP_BINDING)
public interface SOAPEndpoint
{
   @WebMethod
   public String echo(String msg);
}

The  handler defined with SOAP12 Binding protocol pattern can not be attached to this  endpoint, it wrongly attache the soap11 protocol binding handler :
	<handler-chain>
    <protocol-bindings>##SOAP11_HTTP</protocol-bindings>
		<handler>
			<handler-name> SOAP11ClientHandler </handler-name>
			<handler-class> org.apache.cxf.SOAP11ClientHandler </handler-class>
		</handler>
	</handler-chain>
  
	<handler-chain>
    <protocol-bindings>##SOAP12_HTTP</protocol-bindings>
		<handler>
			<handler-name> SOAP12ClientHandler </handler-name>
			<handler-class> org.apache.cxf.SOAP12ClientHandler </handler-class>
		</handler>
	</handler-chain>

 
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113460,,,2010-05-21 06:46:52.0,,,,,,0|i0dekv:,76291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The INITIAL_APP_CONTEXT_CREATION_FAILED_MSG message misspells create as crate ,CXF-2818,12464975,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,gmazza,brrichin,brrichin,20/May/10 00:04,25/May/10 17:59,14/Mar/19 02:29,20/May/10 04:20,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,,,,,0,spelling,,,,,"The INITIAL_APP_CONTEXT_CREATION_FAILED_MSG message in /rt/core/src/main/java/org/apache/cxf/bus/spring/Messages.properties misspells create as crate.

Original
=====================================
INITIAL_APP_CONTEXT_CREATION_FAILED_MSG = Initial attempt to crate application context was unsuccessful.

Change
=====================================
INITIAL_APP_CONTEXT_CREATION_FAILED_MSG = Initial attempt to create application context was unsuccessful.","Windows XP SP 3, Java 1.6.0_20",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-20 04:20:15.052,,,no_permission,,Novice,,,,,,,,,,,113461,,,Thu May 20 04:22:02 UTC 2010,,,,,,0|i0del3:,76292,,,,,,,,20/May/10 04:20;gmazza;Fixed.  Thanks.,20/May/10 04:22;gmazza;Misspelling fixed.,,,,,,,,,,,,,,,,,,,,,,,,,
The NON_UNIQUE_BODY message misspells signature signaure,CXF-2817,12464950,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Trivial,Fixed,gmazza,brrichin,brrichin,19/May/10 21:15,25/May/10 17:59,14/Mar/19 02:29,20/May/10 04:31,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,,,,,0,spelling,,,,,"The NON_UNIQUE_BODY message in tools/wsdlto/frontend/jaxws/src/main/java/org/apache/cxf/tools/wsdlto/frontend/jaxws/validator/Messages.properties misspells signature as signaure.

Original
=================
NON_UNIQUE_BODY = Non unique body parts! In a port, operations must have unique operation signaure on the wire for successful dispatch. In port {0}, Operations \""{1}\"" and \""{2}\"" have the same request body block {3}

Change
=================
NON_UNIQUE_BODY = Non unique body parts! In a port, operations must have unique operation signature on the wire for successful dispatch. In port {0}, Operations \""{1}\"" and \""{2}\"" have the same request body block {3}",Windows XP SP 3. Java 1.6.0_20,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-20 04:31:15.917,,,no_permission,,,,,,,,,,,,,113462,,,Thu May 20 04:31:15 UTC 2010,,,,,,0|i0delb:,76293,,,,,,,,20/May/10 04:31;gmazza;Fixed.  Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,
CachedOutputStream leaves behind temp files if resetOut() is called,CXF-2816,12464815,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,gmazza,piepera,piepera,18/May/10 17:27,25/May/10 18:03,14/Mar/19 02:29,20/May/10 05:16,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,Core,,,,0,,,,,,"CachedOutputStream's resetOut() has a section of code where it is possible to open a FileInputStream without closing it. This happens if the stream is not in memory, and copyOldContent is false.

I noticed this when I added a ""LoggingOutInterceptor"". When large messages were logged, temp files would accumulate in the temp directory. Applying the attached patch solved the problem.",Windows,,,,,,,,,,,,,,,,18/May/10 17:29;piepera;patch.txt;https://issues.apache.org/jira/secure/attachment/12444817/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-05-20 05:16:15.743,,,no_permission,,Novice,,,,,,,,,,,113463,,,Thu May 20 05:16:15 UTC 2010,,,,,,0|i0delj:,76294,,,,,,,,18/May/10 17:29;piepera;A patch for CachedOutputStream which fixes it so that the FileInputStream is not opened in this case.,"20/May/10 05:16;gmazza;Hi Aaron, thanks for the patch.",,,,,,,,,,,,,,,,,,,,,,,,,
Handler.getHeaders() should always be called,CXF-2815,12464786,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,sauthieg,sauthieg,18/May/10 12:06,18/May/10 15:40,14/Mar/19 02:29,18/May/10 13:58,2.2.8,,,,,,,,,,,,,,,,,2.2.9,,,,JAX-WS Runtime,,,,0,,,,,,"Dan started to fix this issue in rev942091, but it was not complete.
I'm working on an additional patch.",,,,,,,,,,,,,,,,,18/May/10 12:19;sauthieg;CXF-2815.patch;https://issues.apache.org/jira/secure/attachment/12444784/CXF-2815.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,Blocked on External,,,2010-05-18 13:58:33.946,,,no_permission,,Novice,,,,,,,,,,,113464,,,Tue May 18 13:58:33 UTC 2010,,,,,,0|i0delr:,76295,,,,,,,,"18/May/10 12:19;sauthieg;This is simply a copy/paste from what have been done in the Soap FaultIn interceptor.
This patch affects the ""normal"" SoapInterceptor and the Soap FaultOut interceptor (for consistency, because the JavaEE tests do not perform fault checking for this use case)","18/May/10 13:58;dkulp;
Patch applied.  Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,
CXF's W3C SOAP JMS Implementation should generate mismatchedSoapAction per Section 2.2.3,CXF-2814,12464711,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,peaston,peaston,17/May/10 18:28,11/Oct/10 14:45,14/Mar/19 02:29,18/May/10 11:52,2.3,,,,,,,,,,,,,,,,,2.3,,,,Transports,,,,0,,,,,,CXF's W3C SOAP JMS Implementation should generate mismatchedSoapAction per Section 2.2.3. See suggested patch attached to CXF-2812 which has this fixed.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-18 11:52:50.952,,,no_permission,,,,,,,,,,,,,114183,,,Tue May 18 11:52:50 UTC 2010,,,,,,0|i140d3:,231521,,,,,,,,18/May/10 11:52;njiang;Applied patch with thanks to Peter.,,,,,,,,,,,,,,,,,,,,,,,,,,
SOAP/JMS Spec implementation needs to implement Section 2.8 SOAP1.1 Fault details binding,CXF-2813,12464709,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,peaston,peaston,17/May/10 18:22,11/Oct/10 14:45,14/Mar/19 02:29,18/May/10 11:49,2.3,,,,,,,,,,,,,,,,,2.3,,,,Transports,,,,0,,,,,,SOAP Over JMS 1.0 Section 2.8 explains how a SOAP 1.1. faul detail element should be constructed from the JMS error sub-code. The suggested patch (CXF-2812) includes a fix for this/,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-18 11:49:32.895,,,no_permission,,,,,,,,,,,,,114182,,,Tue May 18 11:49:32 UTC 2010,,,,,,0|i0v11r:,179143,,,,,,,,18/May/10 11:49;njiang;Applied patch with thanks to Peter.,,,,,,,,,,,,,,,,,,,,,,,,,,
"Wrong namespaces in WSDL - 2.2.6 OK, 2.2.7 and 2.2.8 BROKEN",CXF-2810,12464436,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Blocker,Fixed,ffang,cesnek,cesnek,13/May/10 14:52,21/Jan/11 18:14,14/Mar/19 02:29,23/Dec/10 06:16,2.2.12,2.2.7,2.2.8,2.3.1,,,,,,,,,,,,,,2.3.2,2.4,,,Aegis Databinding,Core,,,1,,,,,,"In WSDL there is wrong namespaces on arguments.
Version 2.2.6 and below is OK, 2.2.7 and 2.2.8 generate invalid WSDL.

2.2.6 OK
{code}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:v2=""http://v2_0_0.smlouva.ws.aa.marbes.cz"" >
   <soapenv:Header/>
   <soapenv:Body>
      <v2:updateSmlouvy>
         <v2:smlouva>

            <v2:cenaKupni>?</v2:cenaKupni>

            <v2:dodatkyKeSmlouve>
               <v2:AaSmlouvaDodatek>
                  <v2:zadavaciDok>?</v2:zadavaciDok>
                  <v2:zakon>?</v2:zakon>
               </v2:AaSmlouvaDodatek>
            </v2:dodatkyKeSmlouve>

         </v2:smlouva>
         <v2:idempotentGuid>?</v2:idempotentGuid>
      </v2:updateSmlouvy>
   </soapenv:Body>
</soapenv:Envelope>
{code}

2.2.7 WRONG - there is ""wo"" namespace from java package
{code}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:v2=""http://v2_0_0.smlouva.ws.aa.marbes.cz"" xmlns:wo=""http://wo.v2_0_0.ws.smlouva.modules.aa.modules.daisy.marbes.cz"">
   <soapenv:Header/>
   <soapenv:Body>
      <v2:updateSmlouvy>
         <v2:smlouva>

            <wo:cenaKupni>?</wo:cenaKupni>

            <wo:dodatkyKeSmlouve>
               <v2:AaSmlouvaDodatek>
                  <v2:zadavaciDok>?</v2:zadavaciDok>
                  <v2:zakon>?</v2:zakon>
               </v2:AaSmlouvaDodatek>
            </wo:dodatkyKeSmlouve>

         </v2:smlouva>
         <v2:idempotentGuid>?</v2:idempotentGuid>
      </v2:updateSmlouvy>
   </soapenv:Body>
</soapenv:Envelope>
{code}

If I call WS from SOAPUI, all values shows as NULL. When I modify SOAPUI XML - replace wo with v2 - WS start working.

*So CXF expects ""v2"" namespace in request XML, but in WSDL generate ""wo"" namespace.*

Server code:
{code}
        JaxWsServerFactoryBean serverFactoryBean = new JaxWsServerFactoryBean();
        serverFactoryBean.setServiceClass(AopUtils.getTargetClass(implementor));
        serverFactoryBean.setServiceBean(implementor);
        serverFactoryBean.setDataBinding(new AegisDatabinding());
        serverFactoryBean.setAddress(url);
        serverFactoryBean.setBus(cxfServlet.getBus());
        serverFactoryBean.create();
{code}

Interface:
{code}
@WebService(name = ""aa_smlouva_v2_0_0"", targetNamespace = ""http://v2_0_0.smlouva.ws.aa.marbes.cz"")
public interface AaSmlouvaWS {

    @WebMethod
    public WOrepeatable_result updateSmlouvy (
            @WebParam(name = ""smlouva"")  WOAaSmlouva smlouva, 
            @WebParam(name = ""idempotentGuid"")  String idempotentGuid
    );
}

@org.apache.cxf.aegis.type.java5.XmlType(name = ""AaSmlouva"", namespace = ""http://v2_0_0.smlouva.ws.aa.marbes.cz"")
public class WOAaSmlouva {
 ...
}
{code}",,,,,,,,,,,,,,,,,09/Dec/10 16:29;cesnek;CXF-2810-testcase.zip;https://issues.apache.org/jira/secure/attachment/12465917/CXF-2810-testcase.zip,20/Dec/10 07:50;ffang;CXF-2810.test;https://issues.apache.org/jira/secure/attachment/12466610/CXF-2810.test,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-05-26 20:03:42.39,,,no_permission,,,,,,,,,,,,,114179,,,Thu Dec 23 06:16:48 UTC 2010,,,,,,0|i0sxxb:,166973,,,,,,,,"26/May/10 20:03;dkulp;

Can you package up a small complete test case that show this?",09/Dec/10 15:20;cesnek;Stil not working even in 2.3.1,"09/Dec/10 15:22;cesnek;How to easy ""package up a small test case"" showing generating wrong WSDL?","09/Dec/10 16:29;cesnek;The test-case run CXF server. 
Calls through java interface working.
Calls through ""WSDL"" do not work. You need test this server with SOAPUI.


",20/Dec/10 07:50;ffang;attach a runnable testcase CXF-2810.test,"20/Dec/10 07:55;ffang;As the SEI has a type with namespace like

@XmlType(name = ""VOX"", namespace = ""http://wo.rtf2pdf.doc.ws.daisy.marbes.cz"")
    public class VO {
...

So the generated wsdl should have schema like
<xsd:schema attributeFormDefault=""qualified"" elementFormDefault=""qualified"" targetNamespace=""http://wo.rtf2pdf.doc.ws.daisy.marbes.cz"" xmlns:tns=""http://wo.rtf2pdf.doc.ws.daisy.marbes.cz"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
<xsd:complexType name=""VO"">
<xsd:sequence>
<xsd:element minOccurs=""0"" name=""str"" nillable=""true"" type=""xsd:string""/>
</xsd:sequence>
</xsd:complexType>
</xsd:schema>


but currently the generated wsdl have schema for Type VO like
<xsd:schema attributeFormDefault=""qualified"" elementFormDefault=""qualified"" targetNamespace=""http://aegis.systest.cxf.apache.org"" xmlns:tns=""http://aegis.systest.cxf.apache.org"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
<xsd:complexType name=""VO"">
<xsd:sequence>
<xsd:element minOccurs=""0"" name=""str"" nillable=""true"" type=""xsd:string""/>
</xsd:sequence>
</xsd:complexType>
</xsd:schema>

Which somehow use the package name as the namespace but ignore the correct one from @XmlType annotation. So when user load the generated wsdl to SOAPUI
and send request, they see problems.

testGeneratedWsdlNs in the runnable testcase I attached can expose this problem.

","20/Dec/10 09:49;ffang;Just found that this problem is introduced by the fix for CXF-2673[1]

[1]https://issues.apache.org/jira/browse/CXF-2673","20/Dec/10 11:53;ffang;need change Java5TypeCreator little bit to set correct schema namespace, also honor the fix for CXF-2673.","23/Dec/10 06:16;ffang;commit fix
http://svn.apache.org/viewvc?rev=1051094&view=rev for trunk
http://svn.apache.org/viewvc?rev=1051363&view=rev for 2.3 branch",,,,,,,,,,,,,,,,,,
"PrettyPrintXMLStreamWriter - method writeStartElement(localname) calls method writeStartElement(prefix, localName, namespaceURI) with wrong paramters",CXF-2806,12464237,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,gmazza,adf,adf,11/May/10 13:14,25/May/10 18:02,14/Mar/19 02:29,20/May/10 04:51,2.2.7,,,,,,,,,,,,,,,,,2.2.9,,,,,,,,0,cxf,parameter,PrettyPrintXMLStreamWriter,writeStartElement,wrong,"PrettyPrintXMLStreamWriter

If you call the method writeStartElement(String localname) it calls writeStartElement(String prefix, String localName, String namespaceURI) with the wrong parameters. 
writeStartElement(String localname, String namespaceURI) is affected as well (namespaceUri and localname are interchanged).

Instead of writeStartElement(null, localname, null) it calls writeStartElement(null, null, localname). So localname is used as namespaceURI and localname is NULL.

This leads to an Exception :

java.lang.IllegalArgumentException: local part cannot be ""null"" when creating a QName
	at javax.xml.namespace.QName.<init>(QName.java:214)
	at javax.xml.namespace.QName.<init>(QName.java:163)
	at org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter.writeStartElement(PrettyPrintXMLStreamWriter.java:231)
	at org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter.writeStartElement(PrettyPrintXMLStreamWriter.java:220)

Workaround :

Overwrite writeStartElement(String localname)

writeStartElement(String localname) {
  writeStartElement(null, localname, null);
}


","openSuse 10, Eclipse 3.5.1",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-20 04:51:53.541,,,no_permission,,Novice,,,,,,,,,,,113467,,,Thu May 20 04:51:53 UTC 2010,,,,,,0|i0demf:,76298,,,,,,,,20/May/10 04:51;gmazza;Fixed.  Thanks for letting us know.,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in JAXB-WS frontend,CXF-2803,12463969,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,samven,samven,07/May/10 10:57,11/Oct/10 14:52,14/Mar/19 02:29,27/May/10 16:38,2.2.5,,,,,,,,,,,,,,,,,2.2.9,,,,JAX-WS Runtime,,,,0,,,,,,"Received following error when invoking ws using  CXF generated client(spring) with 20 concurrent users. I see similar issue reporeted with 2.0 but there were no fix.

Caused by: java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$KeyIterator.next(LinkedHashMap.java:384)
	at org.apache.cxf.jaxb.JAXBUtils.scanPackages(JAXBUtils.java:741)
	at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContextAndSchemas(JAXBDataBinding.java:481)
	at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:334)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:460)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:548)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:523)
	at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:271)
	at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:177)
	at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:100)
	at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:51)
	at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:102)
	at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:115)
	at org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean.getObject(JaxWsProxyFactoryBeanDefinitionParser.java:74)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:143)",JBOSS 5.0 EAP - JDK 1.6.0_11,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113468,,,2010-05-07 10:57:51.0,,,,,,0|i0demn:,76299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WebClient back() operation doesn't clear query parameters,CXF-2801,12463760,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,sergey_beryozkin,romkal,romkal,05/May/10 11:24,10/May/10 18:06,14/Mar/19 02:29,06/May/10 11:41,2.3,,,,,,,,,,,,,,,,,2.2.8,2.3,,,JAX-RS,,,,0,,,,,,Query parameters set on WebClient are not reset when back() operation is invoked. Common sense (at least mine) says that query parameters and other parameters should be cleared when back() operation is invoked. Moreover some method to clear query parameters (by name maybe) would be nice to have.,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-05-06 11:41:30.906,,,no_permission,,,,,,,,,,,,,114174,,,Thu May 06 11:41:30 UTC 2010,,,,,,0|i14enj:,233837,,,,,,,,"06/May/10 11:41;sergey_beryozkin;I added resetQuery() method, as well as fragment(). Resetting the query automatically on back() might not be the best option in all cases, ex :

client.query(""appliesToAllSegments"", """").path(""/bar"");
client.get();
client.path(""/baz"");
client.get();
client.back(false);
// should still have a query
client.get();

so I thought your idea of adding an explicit reset query method was a better option

thanks
",,,,,,,,,,,,,,,,,,,,,,,,,,
ant client-servlet doesn't work for  wsdl-first demo anymore,CXF-2799,12463732,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,05/May/10 05:08,10/May/10 18:06,14/Mar/19 02:29,05/May/10 07:53,2.2.7,,,,,,,,,,,,,,,,,2.2.8,2.3,,,Samples,,,,0,,,,,,"the client code can't take the wsdlUrl as parameter, so can't pass in the wsdlUrl used in tomcat container",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114173,,,Wed May 05 07:53:30 UTC 2010,,,,,,0|i1406v:,231493,,,,,,,,"05/May/10 07:53;ffang;commit fix
http://svn.apache.org/viewvc?rev=941187&view=rev for trunk
http://svn.apache.org/viewvc?rev=941188&view=rev for 2.2.x branch",,,,,,,,,,,,,,,,,,,,,,,,,,
WS-addressing action not picked up on wrapped style operations,CXF-2798,12463516,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rthunbo,rthunbo,02/May/10 15:20,10/May/10 18:06,14/Mar/19 02:29,05/May/10 06:35,2.3,,,,,,,,,,,,,,,,,2.2.8,,,,WS-* Components,,,,0,,,,,,"When ws-addressing is used with a wrapped operation, the action specified in @WebMethod is not picked up.

bindingOpInfo.getExtensor(SoapOperationInfo.class) returns null in line 792 in org.apache.cxf.ws.addressing.ContextUtils and therefore the action becomes null. 

It seems to work if the following lines (774-776):
            if (bindingOpInfo.isUnwrappedCapable()) {
                bindingOpInfo = bindingOpInfo.getUnwrappedOperation();
            }
is replaced by
            if (bindingOpInfo.isUnwrapped()) {
                bindingOpInfo = bindingOpInfo.getWrappedOperation();
            }",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,114172,,,2010-05-02 15:20:57.0,,,,,,0|i0v227:,179307,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Custom Executor for Service object is ignored by the CXF JAX-WS run-time when Disaptch.invokeAsync is used,CXF-2792,12463343,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,romixlev,romixlev,29/Apr/10 15:48,10/May/10 18:06,14/Mar/19 02:29,05/May/10 06:36,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,JAX-WS Runtime,,,,0,asynchronous,concurrency,Executor,invokeasync,,"Hi, 

I'm trying to invoke 10000 external services using invokeAsync from my standalone JAX-WS  client. 
I set my custom Executor on the Service objects. This executor is a ThreadPool with 3 threads. But it looks like it is ignored completely by the CXF 
run-time. Instead of an Executor, an instance of AutomaticWorkQueueImpl  is used. 

BTW, by default, AutomaticWorkQueueImpl  is an unbounded queue, so that a few thousands threads are created for processing asynchronous responses. This is of cause problematic and has a big performance impact. By providing the configuration for AutomaticWorkQueueImpl  in cxf.xml, the AutomaticWorkQueueImpl  can be configured to have a required number of threads and required maximum capacity.

So, I did some debugging to see, why and where AutomaticWorkQueueImpl is called at all during asynchronous WS invocations using Dispatch.invokeAsync(). 

This is the stack trace I got: 
Thread [main] (Suspended (entry into method execute in AutomaticWorkQueueImpl))	
        AutomaticWorkQueueImpl.execute(Runnable) line: 247	
        HTTPConduit$WrappedOutputStream.handleResponse() line: 2153	
        HTTPConduit$WrappedOutputStream.close() line: 1988	
        HTTPConduit(AbstractConduit).close(Message) line: 66	
        HTTPConduit.close(Message) line: 639	
        MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(Message) line: 62	
        PhaseInterceptorChain.doIntercept(Message) line: 243	
        ClientImpl.invoke(ClientCallback, BindingOperationInfo, Object...) line: 422	
        ClientImpl.invokeWrapped(ClientCallback, QName, Object...) line: 371	
        DispatchImpl<T>.invokeAsync(T, AsyncHandler<T>) line: 288	
        TestAsyncProviderClient.invokeMyDispatch(Dispatch<Source>, Object, AsyncHandler<Source>) line: 298	
        TestAsyncProviderClient.testManyAsyncResponses() line: 218	
        TestAsyncProviderClient.main(String[]) line: 159	


According to this trace, WS-response processing at the HTTP level is put for the execution on a dedicated working queue in the HTTPConduit.handleResponse method: 

protected void handleResponse() throws IOException { 
            
            handleRetransmits(); 
            
            if (outMessage == null  || outMessage.getExchange() == null  || outMessage.getExchange().isSynchronous()) { 
                handleResponseInternal(); 
            } else { 
                Runnable runnable = new Runnable() { 
                    public void run() { 
                        try { 
                            handleResponseInternal(); 
                        } catch (Exception e) { 
                            Message inMessage = new MessageImpl(); 
                            inMessage.setExchange(outMessage.getExchange()); 
                            inMessage.setContent(Exception.class, e); 
                            incomingObserver.onMessage(inMessage); 
                        } 
                    } 
                }; 
                WorkQueueManager mgr = outMessage.getExchange().get(Bus.class) 
                    .getExtension(WorkQueueManager.class); 
                AutomaticWorkQueue queue = mgr.getNamedWorkQueue(""http-conduit""); 
                if (queue == null) { 
                    queue = mgr.getAutomaticWorkQueue(); 
                } 
                queue.execute(runnable); 
            } 
 } 

It is easy to see that Executor set for the JAX-WS Service is not propagated down to the HTTP transoport level, which required dedicated configuration for AutomaticWorkQueue, be it http-conduit queue or automatic work queue. 

For WS-responses at the user-level, i.e. by means of the JAX-WS AsyncHandler handlers, the proper Executor is taken from the Service object. 

See also the discussion on the mailing list:
http://old.nabble.com/RejectedExecutionException-when-doing-many-invokeAsync-invocations-ts28266640.html
",Standalone CXF-client used on Windows Vista,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114166,,,2010-04-29 15:48:55.0,,,,,,0|i0uzxz:,178964,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bus.shutdown() did not close all the created Jms connection,CXF-2788,12463212,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ema,ema,ema,28/Apr/10 14:06,11/Oct/10 14:52,14/Mar/19 02:29,21/May/10 10:08,2.2.7,,,,,,,,,,,,,,,,,2.2.9,,,,Transports,,,,0,,,,,,"The jmsListener in JmsDestination uses SingleConnectionFactory to create connection.   SingleConnectionFactory is a proxy class , it actually does not close the target connection . We need to call SingleConnectionFactory.distroy() to close the connection when bus shutdown . ",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,113469,,,2010-04-28 14:06:49.0,,,,,,0|i0demv:,76300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"CXF Extension bit @QueryParam("""") does not allow null values in the bean",CXF-2787,12463132,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,mattinger,mattinger,27/Apr/10 18:15,10/May/10 18:06,14/Mar/19 02:29,28/Apr/10 21:00,2.2.5,,,,,,,,,,,,,,,,,2.2.8,2.3,,,JAX-RS,,,,0,,,,,,"If you use the @QueryParam("""") extension bit on a method parameter:

{code}
public void foo(@QueryParam("""") Bar bar);
{code}

you cannot have fields in the Bar class with null values.  The problem stems from this method:

{code}
org.apache.cxf.jaxrs.utils.InjectionUtils.fillInValuesFromBean(Object, String, MultivaluedMap<String, Object>)
{code}


specifically, this piece of code, which assumes the value is not null, and thus causes a NullPointerException if it is null:

{code}
                Object value = extractFromMethod(bean, m);
                if (isPrimitive(value.getClass())) {
                    values.putSingle(propertyName, value);
                } else if (isSupportedCollectionOrArray(value.getClass())) {
                    // ignoring arrrays for a moment
                    List<Object> theValues = null;
                    if (value.getClass().isArray()) {
                        theValues = Arrays.asList(value);
                    } else {
                        theValues = CastUtils.cast((List<?>)value);
                    }
                    values.put(propertyName, theValues);
                } else {
                    fillInValuesFromBean(value, propertyName, values);
                }
{code}

Ideally, if a value is null, one should just ignore the property and not add it to the parameter map.


",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114162,,,2010-04-27 18:15:59.0,,,,,,0|i0v13b:,179150,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ws-rm Proxy should send SequenceAcknowledgement according to AcksTo URI header,CXF-2786,12463044,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,26/Apr/10 18:37,10/May/10 18:06,14/Mar/19 02:29,26/Apr/10 19:00,2.2.7,,,,,,,,,,,,,,,,,2.2.8,2.3,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114161,,,Mon Apr 26 19:00:43 UTC 2010,,,,,,0|i1407j:,231496,,,,,,,,"26/Apr/10 19:00;ffang;commit fix
http://svn.apache.org/viewvc?rev=938191&view=rev for trunk
http://svn.apache.org/viewvc?rev=938196&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
Base64Utils.decode should handle/wrap all exception types.,CXF-2785,12463038,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,slewis,slewis,26/Apr/10 17:54,10/May/10 18:06,14/Mar/19 02:29,28/Apr/10 09:32,2.2.6,,,,,,,,,,,,,,,,,2.2.8,2.3,,,Core,,,,0,,,,,,"Currently if you pass an invalid base64 encoded string to Base64Utils.decode() you can get various kinds of errors, as the code only catches at most IOException and converts that to a Base64Exception.  Should really catch Exception and log it appropriately to avoid seeing errors at runtime like this:

java.lang.ArrayIndexOutOfBoundsException: 8
        at org.apache.cxf.common.util.Base64Utility.processEncodeme(Base64Utility.java:345)
        at org.apache.cxf.common.util.Base64Utility.decodeChunk(Base64Utility.java:164)
        at org.apache.cxf.common.util.Base64Utility.decode(Base64Utility.java:180)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.setHeaders(AbstractHTTPDestination.java:147)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.setupMessage(AbstractHTTPDestination.java:333)
        at org.apache.cxf.transport.http.AbstractHTTPDestination.setupMessage(AbstractHTTPDestination.java:270)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:302)
        at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:276)
        at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:70)
...

The attached patch does this.",,,,,,,,,,,,,,,,,26/Apr/10 18:15;slewis;patch.txt;https://issues.apache.org/jira/secure/attachment/12442876/patch.txt,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-04-28 09:32:05.787,,,no_permission,,,,,,,,,,,,,114160,,,Wed Apr 28 09:32:05 UTC 2010,,,,,,0|i0sxxj:,166974,,,,,,,,28/Apr/10 09:32;njiang;Applied patch with thanks to Stan.,,,,,,,,,,,,,,,,,,,,,,,,,,
URIBuilder does not expand template variables in query parameters.,CXF-2784,12463030,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,bfelaco,bfelaco,26/Apr/10 15:29,10/May/10 18:06,14/Mar/19 02:29,04/May/10 17:04,2.2.7,,,,,,,,,,,,,,,,,2.2.8,2.3,,,,,,,0,,,,,,"When the URIBuilder is used to create a URL for redirect or links, it should be possible to include template variables ({x}) in the values which will be replaced when a variant of the build() method is invoked.  The CXF implementation only expands template variables in the path.",,,,,,,,,,,,,,,,,26/Apr/10 15:33;bfelaco;URIBuilderTest.java;https://issues.apache.org/jira/secure/attachment/12442860/URIBuilderTest.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114159,,,Mon Apr 26 15:33:24 UTC 2010,,,,,,0|i1407r:,231497,,,,,,,,"26/Apr/10 15:33;bfelaco;This unit-test shows 3 different ways of using template variables in query parameters which do not work.

FWIWI, this test passes with RESTEasy.",,,,,,,,,,,,,,,,,,,,,,,,,,
Charset encoding other than UTF-8 (as ISO-8859-1) not working,CXF-2781,12462768,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,oroussei,oroussei,22/Apr/10 13:47,10/May/10 18:06,14/Mar/19 02:29,28/Apr/10 21:03,2.2.7,,,,,,,,,,,,,,,,,2.2.8,2.3,,,JAX-RS,,,,0,,,,,,"Simple REST service like this :

HelloService.java

package demo.jaxrs.server;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;

@Path(""/helloservice/"")
public class HelloService {

    @GET
    @Path(""/hello"")
    @Produces(""text/html;charset=ISO-8859-1"")
    public String sayHello() {
        return ""Hello, my name is Félix Agnès"";
    }

}

When called (in my environnement  : http://localhost:58010/geoservices/ws/TEST/helloservice/hello) produce :

HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Date: Thu, 22 Apr 2010 13:44:18 GMT
Content-Type: text/html;charset=ISO-8859-1
Content-Length: 31

Hello, my name is FÃ©lix AgnÃ¨s

Latin characters like ""éèà"" are encoded in UTF-8 !!!",Windows XP SP3 - Eclipse 3.5 - Spring - CXFServlet - Tomcat 5.5.12,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-22 14:03:53.63,,,no_permission,,,,,,,,,,,,,114157,,,Thu Apr 22 16:31:17 UTC 2010,,,,,,0|i1aerj:,268858,,,,,,,,"22/Apr/10 14:03;sergey_beryozkin;I'm assuming you do not register any custom provider ? In which case it is probably a default provider for writing Strings is used...Yeah, this could be fixed. Note that for JAXB/XML the custom charset will be taken into account

cheers, Sergey","22/Apr/10 14:12;dkulp;

Well, this would be OK if the charset on the response was set to UTF-8 instead of ISO-8859-1.    I personally would go that rought.   If a charset is set programatically somehow, then default to UTF-8 and set the charset.    It's the safest way to make sure data isn't lost using default settings.

","22/Apr/10 15:19;oroussei;Ok thanks Sergey. With a StringProvider like this :

package provider;
 
import java.io.IOException;
import java.io.OutputStream;
import java.lang.annotation.Annotation;
import java.lang.reflect.Type;
 
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.MultivaluedMap;
import javax.ws.rs.ext.MessageBodyWriter;
import javax.ws.rs.ext.Provider;
 
@Provider
public class StringProvider implements MessageBodyWriter<String> {
 
    public long getSize(String s, Class<?> type, Type genericType, Annotation[] annotations, MediaType mt) {
        return -1;
    }
 
    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mt) {
        return String.class.isAssignableFrom(type);
    }
 
    public void writeTo(String l, Class<?> clazz, Type type, Annotation[] a, 
                        MediaType mt, MultivaluedMap<String, Object> headers, OutputStream os) 
        throws IOException {
        os.write(l.getBytes(""ISO-8859-1""));
        
    }
}

and 

<jaxrs:server id=""helloService"" address=""/TEST"">
  <jaxrs:serviceBeans>
    <bean class=""demo.jaxrs.server.HelloService"" />
  </jaxrs:serviceBeans>
  <jaxrs:providers>
    <ref bean=""stringProvider"" />
  </jaxrs:providers>
</jaxrs:server>	 

<bean id=""stringProvider"" class=""provider.StringProvider""/>

in ""applicationContext.xml"", it 's working fine.

With RESTEasy, no needs of custom provider... That's why I was confused !","22/Apr/10 16:31;sergey_beryozkin;Yes, as I indicated (indirectly) the default CXF String provider does not take into account custom charsets, only JAXB/JSON providers do 

cheers, Sergey",,,,,,,,,,,,,,,,,,,,,,,
Wrong soap fault code thrown on network connection failure,CXF-2780,12462767,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,olszewst,olszewst,22/Apr/10 13:21,10/May/10 18:06,14/Mar/19 02:29,30/Apr/10 09:03,2.2,,,,,,,,,,,,,,,,,2.2.8,2.3,,,Soap Binding,,,,0,,,,,,"When a webservice call fails due to a network failure (for example when the server is down and no connection can be made) CXF throws SoapFault with client fault code. This violates the following rule:
""The Client class of errors indicate that the message was incorrectly formed or did not contain the appropriate information in order to succeed. For example, the message could lack the proper authentication or payment information. It is generally an indication that the message should not be resent without change."" (http://www.w3.org/TR/2000/NOTE-SOAP-20000508/#_Toc478383510)

Exception is thrown in the following place:http://fisheye6.atlassian.com/browse/cxf/branches/2.2.x-fixes/rt/bindings/soap/src/main/java/org/apache/cxf/binding/soap/interceptor/SoapOutInterceptor.java?r=920584#l285. I believe that it should be enough and safe to change ""soapVersion.getSender()"" in the linked code to ""soapVersion.getReceiver()"".
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-30 09:02:43.827,,,no_permission,,,,,,,,,,,,,114156,,,Fri Apr 30 09:03:36 UTC 2010,,,,,,0|i0v21z:,179306,,,,,,,,"30/Apr/10 09:02;ffang;Hi,

Actually this issue would occur across several interceptors which need open underlying transport connection, not only SoapOutEndingInterceptor. Instead of fix such issue in several interceptors, we'd like to fix it from one point to avoid too invasive, we check exception from ClientImpl and set it as SERVER fault code if necessary

Freeman","30/Apr/10 09:03;ffang;commit fix
http://svn.apache.org/viewvc?rev=939241&view=rev for trunk
http://svn.apache.org/viewvc?rev=939243&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -CXF http-jetty transport do not call the jetty server engine shutdown when the server stop,CXF-2775,12462653,Bug,Resolved,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,gcc,gcc,21/Apr/10 12:57,12/Sep/18 10:06,14/Mar/19 02:29,12/Sep/18 10:06,,,,,,,,,,,,,,,,,,,,,,Transports,,,,1,,,,,,"It appears that stopping the server in CXF is not shutting down the Jetty engine, which causes my application to hang because Jetty's threads are still blocking on the server socket accept. After a shutdown, I still see Thread [btpool0-0 - Acceptor0 SelectChannelConnector@0.0.0.0:10001] (Running).

I have a simple test application pasted below that can reproduce the problem. At this point I had to add some calls to get the destination and cast it to a Jetty specific class to get things to exit. Is there a better way to do this? Is there something I'm not configuring correctly? Any help is appreciated.
 
This is under Java 1.5 with CXF 2.0. Jetty is being included from the CXF libs directory. 
 
{code}
package org.mpilone.cxftest;
 
import java.io.IOException;
import org.apache.cxf.endpoint.Server;
import org.apache.cxf.frontend.ServerFactoryBean;
 
public class CxfJettyTest
{
  public void doIt()
  {
    System.out.println(""Running test method"");
  }
 
  public static void main(String[] args) throws IOException
  {
    // Create an Service and Server
    ServerFactoryBean serverFactory = new ServerFactoryBean();
    serverFactory.setServiceClass(CxfJettyTest.class);
    serverFactory.setServiceBean(new CxfJettyTest());
    serverFactory.setAddress(""http://localhost:10001/RemoteApi"");
    Server mServer = serverFactory.create();
 
    mServer.start();
    System.in.read();
    mServer.stop();
 
    // Adding these lines allows the application to exit, but
    // WARNING: EXCEPTION
    // java.nio.channels.ClosedChannelException
    // log statements are produced.
 
// JettyHTTPDestination jettyDest = (JettyHTTPDestination)
// mServer.getDestination();
// JettyHTTPServerEngine jettyEngine = (JettyHTTPServerEngine)
// jettyDest.getEngine();
// jettyEngine.shutdown();
 
    System.out.println(""Exiting"");
  }
}


If you looking into the code you will find there is a note in the JettyHTTPServerEngine's removeServant(URL url)

            /* Bug in Jetty, we cannot do this.  If we restart later, data goes off
             * someplace unknown
            if (servantCount == 0) {
                try {
                   ....
            }*/
{code}

I just added the shutdown engine's code below the comments and tested it against the systest. There were some  tests (such as ws.rm , mtom )failed.
It looks like if we shutdown the engine, when the engine start again , the engine can not get the request info again , specially the http keep alive message.
Current I can't reproduce this bug by adding the unit test which simply calls start and shutdown method the JettyHTTPServerEngine.
It may take some time to resolve this issue. 
",,,,,,,,,,,CXF-865,,CXF-1134,,,,21/Apr/10 13:20;gcc;CxfServerRestartTimeoutTest.java;https://issues.apache.org/jira/secure/attachment/12442431/CxfServerRestartTimeoutTest.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2018-09-12 10:06:10.161,,,no_permission,,,,,,,,,,,,,114154,,,Wed Sep 12 10:06:10 UTC 2018,,,,,,0|i1aerz:,268860,,,,,,,,"21/Apr/10 13:20;gcc;Although CXF-865 is closed as fixed, one of the problems described there is still an issue:

""It looks like if we shutdown the engine, when the engine start again, the engine can not get the request info again , specially the http keep alive message.""

I have created a test case for this. The second server simply hangs when the client sends it a request.

I'm not sure if this is a CXF or a Jetty bug, and would appreciate help diagnosing it.","21/Apr/10 14:34;gcc;The comments in this thread:

bq. http://www.mail-archive.com/cxf-dev@incubator.apache.org/msg04779.html

say that:

{quote}
Setting the property to ensure that we don't call into jetty on shutdown makes the test work, without it the second call to doJaxwsClientServerWork() will hang and eventually timeout with a socket read error.
{quote}

which is exactly what we're seeing, and:

{quote}
We tried to resolve this problem by setting the reuseAddress flage to the connector's socket.
You can find more information at [http://www.nabble.com/EngineLifecycleTest-and-ReuseAddress-and-mysterious-systest-failures-tf4671372.html] and in CXF-1134
{quote}

CXF-1134 was implemented and we don't see socket binding errors, but we do still see the ""hang and eventually timeout with a socket read error.""",12/Sep/18 10:06;coheigea;Please re-open if this is still an issue.,,,,,,,,,,,,,,,,,,,,,,,,
urls in service list,CXF-2774,12462537,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,michenux,michenux,20/Apr/10 12:54,19/Oct/11 17:30,14/Mar/19 02:29,30/Aug/11 20:59,2.2.7,,,,,,,,,,,,,,,,,2.4.3,,,,Transports,,,,0,address,endpoint,list,service,url,"On the service list, the endpoint urls are the address urls
and not the publishEndPointUrls.

So, if the web application is behind an http proxy, the urls on the
service list are bad.

",Linux Ubuntu,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5726,,,2010-04-20 12:54:09.0,,,,,,0|i0b76f:,63275,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
should specify version range for net.sf.cglib optional import,CXF-2773,12462514,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,ffang,ffang,ffang,20/Apr/10 07:05,10/May/10 18:06,14/Mar/19 02:29,20/Apr/10 07:31,,,,,,,,,,,,,,,,,,2.2.8,2.3,,,OSGi,,,,0,,,,,,"to keep it same as the optional org.springframework.beans import which optional import net.sf.cglib.proxy;version=""[2.1.3, 2.2.0)"".

Currently cxf bundle optional import  net.sf.cglib, but doesn't specify the version range, also cxf bundle optional import org.springframework.beans, which optional import net.sf.cglib with version range [2.1.3, 2.2.0), so this could cause problem when osgi container have net.sf.cglib 2.2.0 version, which meet the cxf bundle  optional import  net.sf.cglib, but not for the spring beans bundle optional import net.sf.cglib with version range [2.1.3, 2.2.0), so that the org.springframework.beans isn't available for cxf bundle as it's only optional, this can cause exception when parse cxf.xml 

Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/springframework/beans/factory/support/ManagedSet
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:117)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114153,,,Tue Apr 20 07:31:15 UTC 2010,,,,,,0|i0v0b3:,179023,,,,,,,,"20/Apr/10 07:31;ffang;commit fix
http://svn.apache.org/viewvc?rev=935819&view=rev for trunk
http://svn.apache.org/viewvc?rev=935820&view=rev for 2.2 branch",,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -OutOfMemoryError with many service endpoints,CXF-2772,12462512,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,adityagujrathi,adityagujrathi,20/Apr/10 06:17,08/Aug/11 14:43,14/Mar/19 02:29,25/May/11 18:55,2.2.6,,,,,,,,,,,,,,,,,2.4,,,,,,,,0,TomcatWS,,,,,"I am deploying 5 WAR files in my Tomcat server. They together expose multiple endpoints (60+), each of which publish a simple WSDL.

When the server is started, performance with many concurrent service calls degrades and memory consumption increases steadily, ultimately leading to an OutOfMemoryException.

In a simple test it showed that simply displaying the service endpoints exposed WSDL in the browser is sufficient to trigger the OutOfMemoryError. Earlier, our application was using JAXWS and it used to work fine.

Screenshot using jVisualVM is attached. Following is the exception stacktrace:

{code}
WARNING: Application {http://schemas.xmlsoap.org/ws/2004/08/eventing}ws-eventing-service#{http://schemas.xmlsoap.org/ws/2004/08/eventing}SubscribeOp has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Java heap space
	at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:155)
	at org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker.createFault(AbstractJAXWSMethodInvoker.java:85)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:121)
	at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:60)
	at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)
	at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)
	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:109)
	at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:406)
	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:178)
	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOfRange(Arrays.java:3209)
	at java.lang.String.<init>(String.java:215)
	at java.lang.String.copyValueOf(String.java:2880)
	at sun.net.www.MessageHeader.mergeHeader(MessageHeader.java:435)
	at sun.net.www.MessageHeader.parseHeader(MessageHeader.java:367)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:699)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:632)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1072)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:373)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2110)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2087)
	at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1985)
	at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
	at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:640)
	at org.apache.cxf.transport.TransportURIResolver.resolve(TransportURIResolver.java:112)
	at org.apache.cxf.catalog.CatalogXmlSchemaURIResolver.resolveEntity(CatalogXmlSchemaURIResolver.java:78)
	at org.apache.ws.commons.schema.SchemaBuilder.resolveXmlSchema(SchemaBuilder.java:1872)
	at org.apache.ws.commons.schema.SchemaBuilder.handleInclude(SchemaBuilder.java:1653)
	at org.apache.ws.commons.schema.SchemaBuilder.handleXmlSchemaElement(SchemaBuilder.java:219)
	at org.apache.ws.commons.schema.SchemaBuilder.build(SchemaBuilder.java:121)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:509)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:382)
	at org.apache.ws.commons.schema.SchemaBuilder.resolveXmlSchema(SchemaBuilder.java:1901)
	at org.apache.ws.commons.schema.SchemaBuilder.handleImport(SchemaBuilder.java:1615)
	at org.apache.ws.commons.schema.SchemaBuilder.handleXmlSchemaElement(SchemaBuilder.java:224)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:523)
	at org.apache.cxf.common.xmlschema.SchemaCollection.read(SchemaCollection.java:182)
	at org.apache.cxf.wsdl11.SchemaUtil.extractSchema(SchemaUtil.java:133)
	at org.apache.cxf.wsdl11.SchemaUtil.getSchemas(SchemaUtil.java:81)
	at org.apache.cxf.wsdl11.SchemaUtil.getSchemas(SchemaUtil.java:65)
	at org.apache.cxf.wsdl11.SchemaUtil.getSchemas(SchemaUtil.java:60)
	at org.apache.cxf.wsdl11.WSDLServiceBuilder.getSchemas(WSDLServiceBuilder.java:357)
{code}","Windows XP, Sun JDK 1.6, Tomcat 6.0.20",,,,,,,,,,CXF-2756,,,,,,20/Apr/10 08:54;adityagujrathi;VisualVM-ServerStartup1.jpg;https://issues.apache.org/jira/secure/attachment/12442269/VisualVM-ServerStartup1.jpg,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2011-04-06 20:48:14.602,,,no_permission,,Unknown,,,,,,,,,,,65745,,,Wed May 25 18:55:13 UTC 2011,,,,,,0|i143jz:,232039,,,,,,,,"06/Apr/11 20:48;dkulp; 

This is likely fixed in CXF 2.4.0-SNAPSHOT and at least improved in 2.3.3.   A lot of work was gone in 2.4 to reduce the memory footprint.   A testcase I have (JAX-WS TCK) that deploys over 100 wars, each exposing at least one, usually 2 or 3 services with WSDL's requires significant less memory.   With 2.2.x, I needed to start tomcat with at least -Xmx256M.   With 2.3.3, I can use -Xmx128 to get the services started, but 192M to actually run the TCK tests.   With 2.4.0, I can start with -Xmx84M and run with 128M.   

In addition to that, the scalability of the HTTP transport has been improved with less locking, less requirements for caching, etc...   

If the testcase could be checked with 2.4.0-SNAPSHOT, that would be great.","25/May/11 18:55;dkulp;
Marking this resolved.   I believe it's fixed, but a request for an updated test run has gone unanswered for over a month.",,,,,,,,,,,,,,,,,,,,,,,,,
There is no way to specify autoRewriteSoapAddress from a spring context file.,CXF-2770,12462404,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,yaytay,yaytay,19/Apr/10 07:47,21/Jan/11 18:14,14/Mar/19 02:29,04/Jan/11 04:22,2.2.7,,,,,,,,,,,,,,,,,2.3.2,,,,,,,,0,,,,,,"I need to be able to use the autoRewriteSoapAddress facility in conjunction with CXF.

This: 
    <jaxws:endpoint id=""wsServer"" implementor=""#server"" address=""http://0.0.0.0:8080/Maths"" depends-on=""jetty-factory"" >
        <jaxws:properties> 
            <entry key=""autoRewriteSoapAddress"" value=""true""/> 
        </jaxws:properties> 
    </jaxws:endpoint>

Queried as this: http://localhost:8080/Maths?wsdl 
Produces this: <soap:address location=""*http://0.0.0.0:8080/Maths*"" /> 

It seems that the properties are only set on the endpoint (AbstractWSDLBasedEndpointFactory:176), but autoRewriteSoapAddress is looked for on the EndpointInfo (WSDLQueryHandler:278).
It's not at all clear to me what the correct fix is - somehow we need to be able to specify properties on the EndpointInfo.

This is a relatively minor problem for code that makes use of just CXF (because one can write code to iterate the endpoints, get the infos and set the property), but for projects that use CXF within something else it's a bigger problem - for example I want to use CXF with Camel, configured entirely with a spring context file.
The code I use to walk the endpoints and set the property is, roughly:
            String[] serverRegistryNames = beanFactory.getBeanNamesForType( ServerRegistry.class );

            for ( String serverRegistryName : serverRegistryNames )
            {
                ServerRegistry serverRegistry = ( ServerRegistry ) beanFactory.getBean( serverRegistryName );
                List<Server> servers = serverRegistry.getServers();

                for ( Server server : servers )
                {
                    server.getEndpoint().getEndpointInfo().setProperty( ""autoRewriteSoapAddress"", true );
                }
            }
",,,,,,,,,,,,,,,,,19/Dec/10 19:56;yaytay;SpringConfigureAutoRewriteSoapAddress.diff;https://issues.apache.org/jira/secure/attachment/12466586/SpringConfigureAutoRewriteSoapAddress.diff,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-12-08 15:21:22.483,,,no_permission,,,,,,,,,,,,,114151,,,Sun Dec 19 19:56:05 UTC 2010,,,,,,0|i13yrr:,231263,,,,,,,,"12/Jun/10 19:37;yaytay;I'm hoping to get the time to create a patch for this in the next couple of weeks, but I could do with a pointer as to the best approach.
I think I could:
1. Apply all properties to both Endpoint and EndpointInfo.
2, Have a list of named properties that go on the EndpointInfo.
3. Have a separate element (a twin to jaxws:properties) for the EndpointInfo properties.
4. Have the check for autoRewriteSoapAddress look at the Endpoint (not sure there is an Endpoint at the right time, so this may not be feasible)
Give me a pointer for the preferred approach and I'll knock it up.
Thanks.","08/Dec/10 15:21;mramey;I noticed from the mailing list (http://cxf.547215.n5.nabble.com/More-on-autoRewriteSoapAddress-td2853496.html) that it appears more work was done on this bug. 

Has more work been done on it/has it been fixed?

Thanks.","08/Dec/10 17:12;yaytay;I'm sorry, I'm afraid it's still waiting on me to write a couple of tests for it.
This is (obviously :) ) not my main priority right now and I'm finding it difficult to get the time to get my head around the spring tests for CXF.","19/Dec/10 19:56;yaytay;Attaching a file that (at long last) the fix sent to the mailing list at the end of September with a couple of tests.
I'm not at all sure that the tests work the best way for a CXF test, but the do test the behaviour correctly.",,,,,,,,,,,,,,,,,,,,,,,
Temporary files are not deleted for requests >64kb when using LoggingInInterceptor,CXF-2768,12462288,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,nathan.waldman,nathan.waldman,16/Apr/10 20:44,10/May/10 18:06,14/Mar/19 02:29,05/May/10 18:22,2.2.3,2.2.5,,,,,,,,,,,,,,,,2.2.8,,,,Core,,,,0,,,,,,"When we use the LoggingInInterceptor and receive a request that is larger than 64kb, CXF creates a temporary file, but does not delete it.

The LoggingInInterceptor closes the message's original input stream and opens a new one.  In the case of a request that is larger than 64kb, the CachedOutputStream creates a temporary file which the new input stream reads.  The new FileInputStream's close method is overridden to delete the temporary file when it is closed, but that close is never called.

It appears that CXF assumes that the input stream passed to the interceptors does not need to be closed explicitly, because in the normal case that input stream is the HttpServletRequest input stream which will be closed by the container.  However when LoggingInInterceptor passes along a new input stream to the rest of the interceptor chain, it is left unclosed.

I created a new InputStreamClosingInterceptor that explicitly closes the input stream if it exists and set it for the PRE_INVOKE phase so that it runs after all other interceptors are done with the input stream.  With this change the new input stream is successfully closed and the temporary file is correctly deleted.  Is this safe?

{code:title=InputStreamClosingInterceptor}
public class InputStreamClosingInterceptor
   extends AbstractPhaseInterceptor<Message>
{
   public InputStreamClosingInterceptor() {
      super(Phase.PRE_INVOKE);
   }

   public void handleMessage(Message message)
      throws Fault
   {
      InputStream inputStream = message.getContent(InputStream.class);
      if(inputStream != null) {
         closeInputStream(inputStream);
      }
   }

   private void closeInputStream(InputStream inputStream) {
      try {
         inputStream.close();
      }
      catch (IOException e) {
         throw new Fault(e);
      }
   }
}
{code}

A more elegant solution would be to modify CXF so that it does not assume that the input stream passed to the interceptor chain is the same stream at the end of the chain, and that it explicitly closes the resultant stream at the end of the chain processing in the framework.","Windows XP, Linux
Java 1.6",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114149,,,Fri Apr 16 22:15:58 UTC 2010,,,,,,0|i0sxxz:,166976,,,,,,,,"16/Apr/10 22:15;nathan.waldman;This is possibly related to CXF-1743, but it is definitely not working on Windows XP.",,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to handle schema location with spaces and serve up WSDL URL with unencoded spaces,CXF-2767,12462279,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,wtam,wtam,16/Apr/10 19:24,10/May/10 18:06,14/Mar/19 02:29,05/May/10 14:40,,,,,,,,,,,,,,,,,,2.2.8,,,,OSGi,,,,0,,,,,,"WSDL schemaLocation with spaces in the relative path is valid but WSDLDefintionBuilder can't handle it because it does not encode the spaces before using it in URI methods.

Another problem is that ?wsdl can serve up a WSDL that includes unencoded space (e.g. http://localhost:3580/services/AddCustomer?xsd=../schema/folder with spaces/customer.xsd).  It causes problem for client.",,,,,,,,,,,,,,,,,19/Apr/10 16:26;wtam;CXF-2767.patch;https://issues.apache.org/jira/secure/attachment/12442198/CXF-2767.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114148,,,Mon Apr 19 14:45:37 UTC 2010,,,,,,0|i1407b:,231495,,,,,,,,19/Apr/10 14:45;wtam;Attached patch for your review.,,,,,,,,,,,,,,,,,,,,,,,,,,
@Webparam name not honoured,CXF-2766,12462211,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,jfriar,jfriar,16/Apr/10 05:14,08/Aug/11 14:43,14/Mar/19 02:29,26/May/11 20:52,2.2.6,2.2.7,,,,,,,,,,,,,,,,2.4.1,,,,JAXB Databinding,,,,0,,,,,,"I have imported a wsdl (using the wsdl2java tool) from a service provider. A snippet of the generated webservice interface is:

    @WebResult(name = ""return-response"", targetNamespace = ""http://sp.com/service.wsdl/types"", partName = ""returnResponse"")
    @WebMethod(action = ""http://sp.com/doReturn"")
    public ReturnResponseType doReturn(
        @WebParam(partName = ""returnTrx"", name = ""return-request"", targetNamespace = ""http://sp.com/service.wsdl/types"")
        ReturnRequestType returnTrx
    ) throws ErrorMessages;

However, the soap message that is created does not honour the name of the @WebParam (return-request) and instead uses doReturn as the name of the method and parameter. If any other name is used then behaviour is as expected. I cannot find anything in the spec. that specifies that 'return' should not be used at the start of a @WebParam name but that appears to be the issue.

Thanks,

John","Mac OS-X, Windows XP, Spring Configured CXF Client",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,5999,,,Sun May 09 00:10:35 UTC 2010,,,,,,0|i0b8zr:,63569,,,,,,,,"09/May/10 00:10;jfriar;I have found the code that is causing the problem. It's in the method createBareMessage(ServiceInfo serviceInfo, OperationInfo opInfo, boolean isOut) in org.apache.cxf.service.factory.ReflectionServiceFactoryBean.

...
             if (message.getMessageParts().size() == 1) {
                qname = qname == null && !isOut ? getInParameterName(opInfo, method, -1) : qname;
                qname = qname == null && isOut ? getOutParameterName(opInfo, method, -1) : qname;
               if (qname.getLocalPart().startsWith(""arg"") || qname.getLocalPart().startsWith(""return"")) {
                    qname = isOut
                        ? new QName(qname.getNamespaceURI(), method.getName() + ""Response"") : new QName(qname
                            .getNamespaceURI(), method.getName());
                }
...

I'm not sure why the check for ""return"" is there. Also, not sure why this is done at all...if there's more that one parameter then the inner if is not executed.

The work around for me is to add an additional parameter (say Object o) to the WebMethod of the client WebService interface and always pass null for that parameter when calling the method.

",,,,,,,,,,,,,,,,,,,,,,,,,,
Schema location import fails if there is space in the file path,CXF-2765,12462060,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,wtam,wtam,14/Apr/10 17:18,10/May/10 18:06,14/Mar/19 02:29,15/Apr/10 11:24,,,,,,,,,,,,,,,,,,2.2.8,2.3,,,Core,,,,0,,,,,,"It looks like the characters ""%20"" in the URL does not get decoded before using its path to create a File object.  As a result, the File.exists() faulty return false.",,,,,,,,,,,,,,,,,14/Apr/10 17:20;wtam;ASF.LICENSE.NOT.GRANTED--CXF-2765.patch;https://issues.apache.org/jira/secure/attachment/12441749/ASF.LICENSE.NOT.GRANTED--CXF-2765.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114147,,,Wed Apr 14 17:20:12 UTC 2010,,,,,,0|i0sxy7:,166977,,,,,,,,14/Apr/10 17:20;wtam;Attached a patch for your review.,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven plugin extendedSoapHeaders option not under defaultOptions,CXF-2763,12462001,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Minor,Fixed,dkulp,gmazza,gmazza,14/Apr/10 00:36,10/May/10 18:06,14/Mar/19 02:29,15/Apr/10 11:28,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,Tooling,,,,0,,,,,,"For the Maven plugin[1], the extendedSoapHeaders option (used for implicit soap headers[2]) works only under the wsdlOption element, not the defaultOptions element (as shown in Example #3 on [1]) as it also should.  Placing the extendedSoapHeaders command-line equivalent in defaultOptions:

<extraargs><extraarg>-exsh</extraarg><extraarg>true</extraarg></extraargs>

*does* work, however.

[1] http://cxf.apache.org/docs/maven-cxf-codegen-plugin-wsdl-to-java.html
[2] http://www.jroller.com/gmazza/entry/using_implicit_soap_headers_with
",Tested on Windows XP.,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Novice,,,,,,,,,,,114145,,,2010-04-14 00:36:22.0,,,,,,0|i14eof:,233841,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JavaScript variable ""item"" wont be reinitialized",CXF-2761,12461759,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bhaeuser,bhaeuser,11/Apr/10 17:40,10/May/10 18:06,14/Mar/19 02:29,12/Apr/10 04:04,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,,,,,0,,,,,,"Take a look at the generated JS-Code, and especially at the variable item.

{noformat}
function ws_ejb_core_lunchroulette_de__userGetMeetingpoints_deserialize (cxfjsutils, element) {
    var newobject = new ws_ejb_core_lunchroulette_de__userGetMeetingpoints();
    cxfjsutils.trace('element: ' + cxfjsutils.traceElementName(element));
    var curElement = cxfjsutils.getFirstElementChild(element);
    var item;
    cxfjsutils.trace('curElement: ' + cxfjsutils.traceElementName(curElement));
    cxfjsutils.trace('processing session');
    var value = null;
    if (!cxfjsutils.isElementNil(curElement)) {
     value = cxfjsutils.getNodeText(curElement);
     item = value;
    }
    newobject.setSession(item);
    if (curElement != null) {
     curElement = cxfjsutils.getNextElementSibling(curElement);
    }
    cxfjsutils.trace('curElement: ' + cxfjsutils.traceElementName(curElement));
    cxfjsutils.trace('processing filter');
    var value = null;
    if (!cxfjsutils.isElementNil(curElement)) {
     item = ws_ejb_core_lunchroulette_de__filter_deserialize(cxfjsutils, curElement);
    }
    newobject.setFilter(item);
    if (curElement != null) {
     curElement = cxfjsutils.getNextElementSibling(curElement);
    }
    return newobject;
}
{noformat}

It is possible that item is filled with the value of the first ""element"" and not changed for the second element, and so the second vlement will get the value for the first element.


Easy fix (in my opinion):
{noformat}
        utils.appendLine(""newobject."" + accessorName + ""(item);"");
        utils.appendLine(""var item = null;"");
        if (!itemInfo.isArray()) {
            utils.startIf(""curElement != null"");
            utils.appendLine(""curElement = cxfjsutils.getNextElementSibling(curElement);"");
            utils.endBlock();
        }
{noformat}

Line 661 and following in SchemaJavascriptBuilder.java.

Thanks in advance,
Björn",Mac OS X,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114143,,,2010-04-11 17:40:47.0,,,,,,0|i0v21j:,179304,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression - CXF Client Spring Context Fails,CXF-2752,12461170,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,josh.cummings,josh.cummings,05/Apr/10 19:54,10/May/10 18:06,14/Mar/19 02:29,12/Apr/10 04:01,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,JAX-RS,JAX-WS Runtime,,,0,,,,,,"In upgrading to 2.2.7, we found that our cxf client's spring configuration would fail on startup with a NAMESPACE_ERR thrown from the writer.

To reproduce, we simply include the following snippet in our client application context:

<bean id=""client"" factory-bean=""clientFactory"" factory-method=""create"" lazy-init=""false""/>
	
<bean id=""clientFactory"" class=""org.apache.cxf.jaxws.JaxWsClientFactoryBean"" lazy-init=""false"">
	<property name=""address"" value=""http://localhost:8180""/>
	<property name=""serviceClass"" value=""org.my.project.MyService""/>
</bean>


It will fail when it tries to load cxf.xml using the ControlledValidationXmlBeanDefinitionReader.

It appears to occur because the namespace attributes are handed off by W3CDomStreamWriter.writeAttribute with a namespaceURI of null instead of their actual namespace.  It seems that either that method isn't the right place to handle namespace attributes, meaning changing something upstream, or that there is a bug in it.",,,,,,,,,,,,,,,,,10/Apr/10 18:41;josh.cummings;ASF.LICENSE.NOT.GRANTED--example.tar;https://issues.apache.org/jira/secure/attachment/12441348/ASF.LICENSE.NOT.GRANTED--example.tar,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-04-06 17:51:57.782,,,no_permission,,,,,,,,,,,,,114138,,,Sat Apr 10 18:41:13 UTC 2010,,,,,,0|i14087:,231499,,,,,,,,"06/Apr/10 17:51;dkulp;
 I haven't been able to reproduce it by editing our simple samples.   Can you produce a test case that shows the issue?   Without a test case, I really cannot debug it.
","09/Apr/10 15:06;josh.cummings;It's looks like we may have found it.

I haven't dug very deep, but we were excluding wstx-asl in our pom in order to trim dependencies.  This worked fine in past versions, but it looks like we need to remove the exclusion to upgrade.

Sorry for the false alarm--thanks for looking into it all the same.","09/Apr/10 15:12;dkulp;
Josh,

Adding woodstox back in kind of hides the problem.   It really should work with other stax parsers as well.   I've removed woodstox for our samples as well, but still couldn't reproduce it.  If I could get a reproducible test case that I could debug with the other parsers, we can probably fix it and not require woodstox.

That said, using woodstox is still a good idea.  Woodstox is a LOT faster than the parser built into the JDK.

 ","09/Apr/10 15:21;josh.cummings;We would prefer to allow our users to depend on woodstox for performances gains, though, at their discretion.

Is the dependency on woodstox intentional? It appears that in past versions, CXF wasn't functionality dependent on woodstox. Would it be possible to return to that?",09/Apr/10 15:24;josh.cummings;Okay.  I'm glad were on the same page.  I'll get you an example shortly.,10/Apr/10 18:41;josh.cummings;I've attached an example project.  You can just do a mvn install from the command line.,,,,,,,,,,,,,,,,,,,,,
Output parameter and method name issue,CXF-2750,12460963,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dryder,dryder,01/Apr/10 18:25,19/Oct/11 17:30,14/Mar/19 02:29,14/Sep/11 16:14,2.2.7,,,,,,,,,,,,,,,,,2.4,,,,JAXB Databinding,,,,0,,,,,,"I discovered an issue related to the name of a method and it's associated output parameter name.

If you name the method foo and the output parameter is named fooResponse, you'll end up with an exception.

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eSessionAuthenticationWS': Invocation of init method failed; nested exception is javax.xml.ws.WebServiceException: org.apache.ws.commons.schema.XmlSchemaException:  Schema for namespace '<your name space>' already contains type 'fooResponse'

I did some digging into the code and it appears to be an issue with the naming convention in the code. When generating the response object for an operation it takes the method name and adds Response to it and it ends up as a schema type. Then when the output parameter is being initialized there is already a fooResponse schema type and thus the schema type collision.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-01 18:32:24.697,,,no_permission,,Unknown,,,,,,,,,,,60645,,,Wed Sep 14 16:14:03 UTC 2011,,,,,,0|i145n3:,232377,,,,,,,,"01/Apr/10 18:32;dkulp;
This is per spec and not much we can do without violating the spec.   In the event of a collision, the spec requires that the USER provide a new name via the @ResponseWrapper and @Response annotations.   ",01/Apr/10 18:45;dryder;I wasn't recommending violating the spec and there is much to be said for knowing the spec and thereby being aware that one cannot create method in such a manner. However I would be in favor of an exception that provides more information to the developer using Apache CXF.,"14/Sep/11 16:14;dkulp;
This is more or less ""fixed"" as we pretty much require ASM now and if you have ASM on the classpath, you get something like:


Caused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions
Two classes have the same XML type name ""{http://cxf.apache.org/systest/jaxws/DocLitWrappedCodeFirstService}doMyFoo"". Use @XmlType.name and @XmlType.namespace to assign different names to them.




",,,,,,,,,,,,,,,,,,,,,,,,
Unmarshalling error when using fastinfoset,CXF-2748,12460833,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,reinis_v,reinis_v,31/Mar/10 16:06,15/Apr/10 10:29,14/Mar/19 02:29,08/Apr/10 01:32,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,,,,,0,,,,,,"I have a webservice operation that returns primitive ""string"". I call this very same operation in three different ways: 1. without any sort of compression; 2. with mtom compression 3. with fastinfoset compression.

The no compression call and mtom compression call works but fastinfoset call fails with this exception:

15:24:49,328 DEBUG [main] apache.cxf.phase.PhaseInterceptorChain (240)     - Invoking handleMessage on interceptor org.apache.cxf.interceptor.DocLiteralInInterceptor@1bb3e9a
15:24:49,343 WARN  [main] apache.cxf.phase.PhaseInterceptorChain (365)     - Interceptor for {http://blahblah/email/service}EmailUS#{http://blahblah/email/service}sendEmail has thrown exception, unwinding now
org.apache.cxf.interceptor.Fault: Unmarshalling Error: null
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:780)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:624)
        at org.apache.cxf.jaxb.io.DataReaderImpl.read(DataReaderImpl.java:128)
        at org.apache.cxf.interceptor.DocLiteralInInterceptor.handleMessage(DocLiteralInInterceptor.java:106)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.onMessage(ClientImpl.java:672)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:2254)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:2134)
        at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1988)
        at org.apache.cxf.io.CacheAndWriteOutputStream.postClose(CacheAndWriteOutputStream.java:47)
        at org.apache.cxf.io.CachedOutputStream.close(CachedOutputStream.java:188)
        at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:66)
        at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:639)
        at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)
        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:484)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:310)
        at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:262)
        at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:73)
        at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:124)
        at $Proxy67.sendEmail(Unknown Source)
        at blahblah.email.service.EmailUSWSImplTest.prepareAndCallSendEmailWebService(EmailUSWSImplTest.java:332)
        at blahblah.email.service.EmailUSWSImplTest.testSendEmailWithFastinfosetCompression(EmailUSWSImplTest.java:304)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)
        at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)
        at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)
        at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)
        at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)
        at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)
        at org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)
        at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
        at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
        at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
        at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
        at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:102)
        at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
Caused by: java.lang.AssertionError
        at com.sun.xml.bind.v2.util.QNameMap.getEntry(QNameMap.java:460)
        at com.sun.xml.bind.v2.util.QNameMap.get(QNameMap.java:158)
        at com.sun.xml.bind.v2.runtime.unmarshaller.StructureLoader.childElement(StructureLoader.java:241)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext._startElement(UnmarshallingContext.java:478)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext.startElement(UnmarshallingContext.java:459)
        at com.sun.xml.bind.v2.runtime.unmarshaller.FastInfosetConnector.handleStartElement(FastInfosetConnector.java:162)
        at com.sun.xml.bind.v2.runtime.unmarshaller.FastInfosetConnector.bridge(FastInfosetConnector.java:105)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:360)
        at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:339)
        at org.apache.cxf.jaxb.JAXBEncoderDecoder.unmarshall(JAXBEncoderDecoder.java:755)
        ... 48 more

If I change return type of the operation to one way (remove output message from the porttype def) the call to fastinfoset works just fine!!! But as soon as I make the operation two way, it brings this error.
I tried:
- changing return type to int;
- enabling FI declaratively by adding <fastinfoset/> to bus definition in cxf.xml
- enabling FI programaticaly by adding FIStaxXXInterceptor to endpoints
- adding fresh new operation to the webservice with the return value and testing if it works
- setting a system property of: ""com.sun.xml.fastinfoset.parser.string-interning"" to ""true""
none of this worked for me.

*Attention*
# This issue is fixed in 2.3.0-SNAPSHOT!
# Setting a system property of: ""com.sun.xml.fastinfoset.parser.string-interning"" to ""true"" works for the simplified test project I have attached to this ticket (dkulp already tested, replicated and confirmed this issue with using the provided test project).","Windows Vista
jdk1.6.0_07",,,,,,,,,,,,,,,,31/Mar/10 16:09;reinis_v;cxf.jaxws.infoset.twoway.mep.test.zip;https://issues.apache.org/jira/secure/attachment/12440356/cxf.jaxws.infoset.twoway.mep.test.zip,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-04-01 15:10:32.848,,,no_permission,,Unknown,,,,,,,,,,,114135,,,Thu Apr 15 10:28:42 UTC 2010,,,,,,0|i0uzzr:,178972,,,,,,,,31/Mar/10 16:09;reinis_v;test project,"01/Apr/10 15:10;dkulp;

Can you test your ""live"" project with the latest 2.2.8-SNAPSHOT jars?  I backported some more fixes from 2.3 for this so I THINK it should now work fine.  Before marking this resolved, I'd like to be sure.",15/Apr/10 10:28;reinis_v;sry for the delay. I confirm that my live project works with 2.2.8-SNAPSHOT as expected.,,,,,,,,,,,,,,,,,,,,,,,,
Schema redefine element does not have its schemaLocation rewritten,CXF-2744,12460725,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bpbailey,bpbailey,30/Mar/10 18:18,10/May/10 18:05,14/Mar/19 02:29,05/Apr/10 02:19,2.1.2,,,,,,,,,,,,,,,,,2.2.8,,,,Core,,,,0,,,,,,"While the WSDLQueryHandler rewrites the urls for include and import elements, it does not do so for redefines.

Please see this thread for reference: http://fusesource.com/forums/thread.jspa?threadID=1394&tstart=215

My issue was exactly the same, except that I am seeing this via the Mule CXF Transport, which uses CXF 2.1.2.",windows xp sp2,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-05 02:19:26.46,,,no_permission,,,,,,,,,,,,,114131,,,Mon Apr 05 02:19:26 UTC 2010,,,,,,0|i0sxyv:,166980,,,,,,,,"05/Apr/10 02:19;dkulp;
I've added some support for this, but since redefines are deprecated and completely discouraged, it's definitely not something I would expect to be well tested or supported.",,,,,,,,,,,,,,,,,,,,,,,,,,
java2ws generates date into *.xjb header --> causign change where there is no change,CXF-2743,12460722,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,kajkandler@conficio.com,kajkandler@conficio.com,30/Mar/10 17:36,10/May/10 18:05,14/Mar/19 02:29,31/Mar/10 15:07,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,Tooling,,,,0,,,,,,"When I generate my WSDl files java2ws generates me a *.xjb file which contains the following header.

<!--
    * This is a jaxb external customization binding file
    * was generated by Apache CXF 2.2.7
    * Tue Mar 30 13:01:47 EDT 2010
    * Generated source version: 2.2.7
    *
    * The reason we generate this file is that
    * we detected java.util.Date or java.util.Calendar classes in your SEI
    *
    * Useage:
    *   wsdl2java [-b <the path of this file>] wsdl
    * To customize the generated date types
-->

While I appreciate the header as informative, the date generated into this is not too helpful, as it causes a change in content then reported to the source code control system that is a non change.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114130,,,2010-03-30 17:36:04.0,,,,,,0|i0v21r:,179305,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF MBeans are not unregistered/reregistered properly on CXF Bus shutdown and restart controlled by Spring DM,CXF-2742,12460693,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,30/Mar/10 12:31,10/May/10 18:05,14/Mar/19 02:29,06/Apr/10 15:52,2.2.6,2.2.7,,,,,,,,,,,,,,,,2.2.8,,,,Bus,,,,0,,,,,,"When initializing CXF in a Spring context file using the standard CXF Spring XML imports and the standard CXF namespace handlers for CXF Bus configuration, a restart of the Spring application context triggered by Spring DM in an OSGi container results in the CXF registered MBeans disappearing.  The MBeans will not reappear until the JVM hosting the OSGi container is restarted.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,114129,,,Wed Mar 31 19:45:12 UTC 2010,,,,,,0|i14073:,231494,,,,,,,,"31/Mar/10 19:45;davaleri;It would appear that there are two issues at play here:

1) The instructions for enabling JMX in ServiceMix do not specify that InstrumentationManagerImpl#createMBServerConnectorFactory should probably be false inside of ServiceMix as one would want to use only the connectors managed by the container.

2) If createMBServerConnectorFactory is set to true, something goes awry in the InstrumentationManagerImpl shutdown sequence as the connector is left open and the restart of InstrumentationManagerImpl  with the bundle restart fails due to the address already being in use.  InstrumentationManagerImpl#shutdown, which handles cleanup of the connector, is never called during Bus shutdown.",,,,,,,,,,,,,,,,,,,,,,,,,,
CXF does not unregister Endpoint MBeans for JAX-WS API published endpoints when endpoint is stopped through JAX-WS API,CXF-2740,12460603,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,29/Mar/10 20:48,10/May/10 18:05,14/Mar/19 02:29,08/Apr/10 14:47,2.2.6,2.2.7,,,,,,,,,,,,,,,,2.2.8,2.3,,,JAX-WS Runtime,,,,0,,,,,,"If one publishes a service using the JAX-WS APIs or directly using the CXF implementation classes of Endpoint as show in the following code snippet:
{code}
final EndpointImpl ep = new SpringEndpointImpl(
        this.bus, implementor);
ep.setAddress(address);
ep.publish();
{code}

the created CXF entities register an MBean for the published endpoint if CXF is configured with an MBean server.  If Endpoint.stop() is later called on the JAX-WS Endpoint implementation class, the MBean is not unregistered.  Additionally, the Endpoint can be republished after being stopped by calling Endpoint.publish(...) again.  This ability to republish the Endpoint violates the JAX-WS API and not unregistering the MBean when a terminal stop on the Endpoint has been performed leaves dangling MBeans that impact accurate monitoring and can allow the reactivation of a stopped endpoint that may no longer be accurately configured.  Leaving the MBean that contains strong references to the JAX-WS Endpoint and implementation classes can delay or prevent GC of deactivated and unused resources.",,,,,,,,,,,,,,,,,07/Apr/10 17:56;davaleri;CXF-2740.patch;https://issues.apache.org/jira/secure/attachment/12441063/CXF-2740.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,114127,,,Wed Apr 07 17:56:00 UTC 2010,,,,,,0|i14dy7:,233723,,,,,,,,07/Apr/10 17:56;davaleri;Attached proposed patch pending review.,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE When Mapping two xsd:dates in same object with Aegis Databinding,CXF-2739,12460551,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,panth13,panth13,29/Mar/10 14:05,10/May/10 18:05,14/Mar/19 02:29,30/Mar/10 21:18,2.1.5,2.1.6,2.1.7,2.1.8,2.1.9,2.2.1,2.2.2,2.2.3,2.2.4,2.2.5,2.2.6,2.2.7,,,,,,2.2.8,,,,,,,,0,,,,,,"When you use an Aegis mapping file to map multiple properties of an object to an xsd:date using the DateType class, an NPE occurs. This actually occurs due to the .equals() method of the Type class. The equals() is checking the schema and the typeClass attributes, however due to the manner in which XmlBeanTypeInfo is generating the Type, it never sets the typeClass attribute, and therefore an NPE occurs.

I erroneously identified this a the fix for CXF-2728, however it turns out this isn't the case. I applied the patch to v2.1.5 locally and tested it, and it still occured. This tag is where type attribute of the ageis mapping file is actually being used for the first time.

I have attached a JUnit test case  (Eclipse/Maven project) as well as a patch. I made an assumption, which is hopefully valid.

-B",,,,,,,,,,,,,,,,,29/Mar/10 14:05;panth13;XMLBeanTypeInfo.java.patch;https://issues.apache.org/jira/secure/attachment/12440066/XMLBeanTypeInfo.java.patch,29/Mar/10 14:05;panth13;cxf-binding-bug.zip;https://issues.apache.org/jira/secure/attachment/12440065/cxf-binding-bug.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114126,,,2010-03-29 14:05:03.0,,,,,,0|i0v22n:,179309,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MultipleEndpointObserver does not set the exchange on the incoming Message in onMessage method,CXF-2733,12460478,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,rthunbo,rthunbo,28/Mar/10 21:17,10/May/10 18:05,14/Mar/19 02:29,06/Apr/10 20:20,2.3,,,,,,,,,,,,,,,,,2.2.8,,,,Soap Binding,,,,0,,,,,,"MultipleEndpointObserver does not set the exchange on the incoming Message in onMessage method. If the Destination using this observer, tries to use the exchange after having called MultipleEndpointObserver.onMessage, which JMSDestination in fact does, a NPE is thrown.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,114124,,,Tue Apr 06 07:24:06 UTC 2010,,,,,,0|i1407z:,231498,,,,,,,,"06/Apr/10 07:24;rthunbo;Close, but no cigar. By the point you are setting the exchange on the message, the incoming message have been overridden in line 61 with the statement
message = createMessage(message);",,,,,,,,,,,,,,,,,,,,,,,,,,
DocLiteralInInterceptor on unmarshal the first message part when uisng SourceDataBinding,CXF-2732,12460436,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,wtam,wtam,27/Mar/10 14:55,10/May/10 18:05,14/Mar/19 02:29,30/Mar/10 21:17,,,,,,,,,,,,,,,,,,2.2.8,2.3,,,Core,,,,0,,,,,,please refer to the unit test included in the patch for detail ,,,,,,,,,,,,,,,,,27/Mar/10 14:57;wtam;CXF-2732.patch;https://issues.apache.org/jira/secure/attachment/12439960/CXF-2732.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-27 18:35:37.579,,,no_permission,,,,,,,,,,,,,114123,,,Mon Mar 29 13:42:32 UTC 2010,,,,,,0|i0sxzb:,166982,,,,,,,,27/Mar/10 14:57;wtam;patch was created based on 2.2.x branch,"27/Mar/10 18:35;dkulp;

The line:
} while (xmlReader != null && StaxUtils.toNextElement(xmlReader));

should be advancing it to the next element.  I'l need to check to see why that wouldn't be happening.",29/Mar/10 13:42;wtam;Thanks Dan.  Please look into it.,,,,,,,,,,,,,,,,,,,,,,,,
NPE when using wsdl2js,CXF-2731,12460420,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,bhaeuser,bhaeuser,27/Mar/10 11:41,10/May/10 18:05,14/Mar/19 02:29,12/Apr/10 04:02,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,JavaScript Client,,,,0,npe,wsd2ljs,,,,"Hello!

Following the advice from here: http://old.nabble.com/NPE-using-wsdl2js-to28051339.html

I am getting a NPE when trying to use wsdl2js.

This is the stacktrace:

http://pastie.org/889547

This is the wsdl-file:

http://pastie.org/889550

Any help appreciated!

Thansk in advance,
Björn
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-30 02:32:09.777,,,no_permission,,,,,,,,,,,,,114122,,,Sun Apr 11 17:32:41 UTC 2010,,,,,,0|i0v1tj:,179268,,,,,,,,"30/Mar/10 02:32;dkulp;
I think the xsd is needed as well.   

http://localhost:8080/LunchRouletteService/LunchRoulette?xsd=1

and anything else it imports.","11/Apr/10 17:32;bhaeuser;Sorry for this huge delay,

attached you will find the current wsdl and the types. Anthiny else?

http://pastie.org/914345
http://pastie.org/914349

Björn",,,,,,,,,,,,,,,,,,,,,,,,,
Servlet controller is not updated after ApplicationContext refresh with Spring 3,CXF-2730,12460196,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,deki,deki,25/Mar/10 08:07,10/May/10 18:05,14/Mar/19 02:29,16/Apr/10 19:37,2.2.6,2.2.7,,,,,,,,,,,,,,,,2.2.8,,,,,,,,0,,,,,,See also CXF-1709. The testcase fails after updating to Spring 3.,Spring 3.0.1,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-01 02:40:59.953,,,no_permission,,,,,,,,,,,,,114121,,,Thu Apr 01 02:40:59 UTC 2010,,,,,,0|i0uydj:,178710,,,,,,,,"01/Apr/10 02:40;dkulp;
This is very bizzarre.   It works with Sprint 2.5.6.   It ALSO works fine with Spring3 on trunk (CXF 2.3.0-SNAPSHOT).   With 2.2.x, the servlet isn't getting any of the context events.   It's getting various authentication events and such so I know the listener is registered with something, but the context refresh events aren't getting delivered.   Still kind of digging, but it's very strange since the code is exactly the same between 2.2.x and trunk in this area.      :-(",,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot enable JMX extensions for Jetty through Jetty HTTP Transport in OSGi,CXF-2729,12460126,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,davaleri,davaleri,davaleri,24/Mar/10 16:10,10/May/10 18:05,14/Mar/19 02:29,25/Mar/10 02:29,2.2.6,2.2.7,,,,,,,,,,,,,,,,2.2.8,2.3,,,Transports,,,,0,,,,,,"When a CXF endpoint is published in a thread whose ThreadContextClassLoader delegates to the CXF bundle ClassLoader, classes in org.mortbay.management cannot be dynamically loaded as needed when bootstrapping the Jetty engine.",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,Moderate,,,,,,,,,,,114120,,,2010-03-24 16:10:00.0,,,,,,0|i0v213:,179302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CXF-1977 is still valid for CXF 2.2.7,CXF-2728,12460121,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,panth13,panth13,24/Mar/10 15:40,10/May/10 18:05,14/Mar/19 02:29,31/Mar/10 15:12,2.2.7,,,,,,,,,,,,,,,,,2.2.8,,,,,,,,0,,,,,,"I built a project with CXF v2.2.7 and experienced this bug: CXF-1977. 

I reverted my project back to v2.1.1 because I thought it may be an issue with 2.2.7 (as I had not used it in another project until this time). This did not fix the problem. As soon as i upgraded to v2.1.4 the bug was fixed (as identified in CXF-1977) ",,,,,,,,,,,,,,,,,26/Mar/10 21:39;panth13;XMLBeanTypeInfo.java.patch;https://issues.apache.org/jira/secure/attachment/12439918/XMLBeanTypeInfo.java.patch,26/Mar/10 21:39;panth13;cxf-binding-bug.zip;https://issues.apache.org/jira/secure/attachment/12439917/cxf-binding-bug.zip,30/Mar/10 15:48;panth13;cxf-proxy-bug-patchs.zip;https://issues.apache.org/jira/secure/attachment/12440243/cxf-proxy-bug-patchs.zip,30/Mar/10 15:48;panth13;cxf-proxy-bug.zip;https://issues.apache.org/jira/secure/attachment/12440244/cxf-proxy-bug.zip,,,,4.0,,,,,,,,,,,,,,,,,,,,2010-03-24 17:10:25.27,,,no_permission,,,,,,,,,,,,,114119,,,Tue Mar 30 15:48:59 UTC 2010,,,,,,0|i14enz:,233839,,,,,,,,"24/Mar/10 17:10;dkulp;
Please attach a testcase if possible.   ",24/Mar/10 18:13;panth13;What would you like? Code/XML/Spring configuration files or just a generic example? I want to make sure you get everything you need. Thanks!,"25/Mar/10 02:53;dkulp;
I'd LOVE a small maven based HelloWorld type project if at all possible.  A JUnit test in there would be ideal, but even if the project generated a war that shows the issue would be fine.

Basically, I would need something that I can run relatively easy with a debugger to really see what the simple frontend is trying to dispatch on and where it's getting it's Method objects and such.","26/Mar/10 21:39;panth13;It turns out it's not the same bug. It's actually a logic flaw in the XMLBeanTypeInfo when it parses the Aegis mapping files. It never sets the typeClass attribute of the mapped type, and therefore a NPE occurs later when the xsd:date override types are added to the dependencies of an object.

I've attached an eclipse/maven project which shows the bug, and a patch for the java class which is the root cause.

-B","29/Mar/10 14:07;panth13;I apologize, the attached files do not fix this issue. I was actually experiencing two different issues, once i applied this patch locally I still ran into the same NPE on startup due to the proxy. I have opened CXF-2739 to fix the databinding bug, and i am working on creating a test case for this issue still.

-B ","30/Mar/10 15:48;panth13;I tracked down the issue of the NPE on boot. The attachment ""cxf-proxy-bug.zip"" is the Maven/Eclipse project which re-creates this error in a JUnit test case.

I also identified why it was a bug and that there was actually two potential fixes.

If SpringAopClassHelper.getRealClassInternal (cxf-common-utilities) is never supposed to return null (even when the underlying proxy has no target class), then I provided a patch that ensures that. If the underlying proxy has no target class, then it will return ""Proxy??"" via the last line in the method.

However if that is a valid scenario, then the ServerFactoryBean (cxf-rt-frontend-simple) should account for the possibility of null, and therefore I provided a patch that took that into consideration. 

Both of those patches are in their appropriate project name subfolders in the ""-patches.zip"" file. I have also included a patch to add a test case to the SpringBeansTest (cxf-rt-frondend-simple) test class for this bug. If neither of the fix patches are applied, that test should fail as well. 

I will also point out that all of my patching was done against the v2.2.7 tag, as i had difficulty getting the trunk to work in my local workspace(s).

Hope this helps!

-B",,,,,,,,,,,,,,,,,,,,,
"""local part cannot be ""null"" when creating a QName""",CXF-2725,12459758,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Critical,Fixed,dkulp,sidpriye,sidpriye,20/Mar/10 16:16,11/Oct/10 14:52,14/Mar/19 02:29,23/Mar/10 08:05,2.2.6,,,,,,,,,,,,,,,,,2.2.7,,,,JAXB Databinding,,,,0,,,,,,"The entire discussion on this issue can be read here

http://old.nabble.com/local-part-cannot-be-%22null%22-when-creating-a-QName-td27714287.html#a27872480


On Dan's suggestion, I am entering this track item as he mentioned he will take a shot at it. ","Websphere 6.1, CXF 2.2.6 OR 2.2.7-snapshot, OpenSAML libraries, Spring 2.5.6 libraries, JAX WS Client ",,,,,,,,,,,,,,,,21/Mar/10 14:57;sidpriye;SpringClientWithSAMLToken.zip;https://issues.apache.org/jira/secure/attachment/12439408/SpringClientWithSAMLToken.zip,21/Mar/10 15:21;sidpriye;bpm-servicesCXF.zip;https://issues.apache.org/jira/secure/attachment/12439409/bpm-servicesCXF.zip,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2010-03-23 02:50:53.041,,,no_permission,,Unknown,,,,,,,,,,,114116,,,Tue Mar 23 13:10:31 UTC 2010,,,,,,0|i0a5rb:,57206,,,,,,,,"20/Mar/10 16:43;sidpriye;Exception being thrown is - 

[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   java.lang.IllegalArgumentException: local part cannot be ""null"" when creating a QName
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at javax.xml.namespace.QName.<init>(Unknown Source)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at javax.xml.namespace.QName.<init>(Unknown Source)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.opensaml.xml.util.XMLHelper.constructQName(XMLHelper.java:433)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.opensaml.xml.util.XMLHelper.getNodeQName(XMLHelper.java:171)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.opensaml.xml.io.AbstractXMLObjectUnmarshaller.unmarshallAttribute(AbstractXMLObjectUnmarshaller.java:215)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.opensaml.xml.io.AbstractXMLObjectUnmarshaller.unmarshall(AbstractXMLObjectUnmarshaller.java:107)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.syscom.hsc.security.saml.service.SAMLTokenProcessor.unmarshall(SAMLTokenProcessor.java:191)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.syscom.hsc.security.saml.service.SAMLTokenProcessor.validateSAMLSignature(SAMLTokenProcessor.java:78)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.syscom.hsc.web.soap.ServiceSAMLHandler.handleMessage(ServiceSAMLHandler.java:115)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.syscom.hsc.web.soap.ServiceSAMLHandler.handleMessage(ServiceSAMLHandler.java:1)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandleMessage(HandlerChainInvoker.java:335)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeHandlerChain(HandlerChainInvoker.java:253)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.jaxws.handler.HandlerChainInvoker.invokeProtocolHandlers(HandlerChainInvoker.java:131)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor.handleMessageInternal(SOAPHandlerInterceptor.java:152)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor.handleMessage(SOAPHandlerInterceptor.java:119)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor.handleMessage(SOAPHandlerInterceptor.java:69)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:243)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:109)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.servlet.ServletDestination.invoke(ServletDestination.java:98)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:406)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:178)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:142)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:179)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:103)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at javax.servlet.http.HttpServlet.service(HttpServlet.java:763)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:159)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1096)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:570)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.ibm.ws.wswebcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:478)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:90)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:748)
[3/20/10 11:22:29:456 EDT] 00000024 SystemErr     R   	at com.ibm.ws.wswebcontainer.WebContainer.handleRequest(WebContainer.java:1466)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:119)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:458)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewInformation(HttpInboundLink.java:387)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:267)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:165)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:136)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:195)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:743)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:873)
[3/20/10 11:22:29:471 EDT] 00000024 SystemErr     R   	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1473)
","21/Mar/10 14:37;sidpriye;After discussions with OpenSAML folks, it appears that CXF is using a DOMParser which is not namespace-aware and thus when the OpenSAML libraries try to unmarshall the SAML token in the SOAP Header, it runs into a local part of the namespace to be null. As per Scott Cantor of OpenSAML, the DOMparser could be using a Level 1.0 parser instead of DOM Level 2.0 or 3.0.  

So essentially whatever is creating the SOAPHeader DOM is not namespace-aware. I tried with Dan's fix using 2.2.7-snapshot 
http://github.com/apache/cxf/commit/6cadc8e0a238c3ec2037bd2c856d2de0574db48d

and it still did not work. So far I have tried with cxf-2.0-incubator, cxf2.2.6 and cxf2.2.7-snapshot. 



","21/Mar/10 14:57;sidpriye;SpringClientWithSAMLToken.zip - Project Interchange file for the SOAP Client that constructs a SAML token and inserts into the SOAP Header using a JAX WS Handler. This can be directly imported into Eclipse. 

I have left out cxf2.2.6 jar and Spring 2.5.6 jars out of the WEB_INF/lib directory so that the size remains under 10MB. They will need to be included back in. 

These are the jars I have under the endorsed directory on WAS

resolver-2.9.1.jar
saaj-api.jar
saaj-impl.jar
serializer-2.9.1.jar
wsdl4j-1.6.2.jar
xalan-2.7.1.jar
xercesImpl-2.9.1.jar
xml-apis-2.9.1.jar

Limitations using libraries: 
1. Cannot use SUN's JAXP libraries with OpenSAML 2.0. OpenSAML does a validation check and throws an error if it finds SUN's JAXP jar. As per them SUN's JAXP libraries are broken so instead they recommend using latest Xerces and Xalan in WAS endorsed directory. 

2. Cannot endorse saaj-1.3.2 api and impl jars on WAS 6.1. WAS 6.1 does not recognize any of those classes. So forced to use saaj-impl and saaj-api jars in the endorsed directory. ","23/Mar/10 02:50;dkulp;
I just tried your example with tomcat and both CXF 2.3.0-SNAPSHOT and 2.2.7 (now released) after removing the reference to your logger (which seems to be WebSphere specific) and it worked fine.   The service through a ECMBPMException, but that means the message got there and the saml was processed.

The log contains:

{code}

Signature VALIDATED with Subjectmbrendish
********Inside Business Delegate: Value of Subject*******mbrendish
[HSC Logger]  [getLogger]  Initializing Logger for com.syscom.hsc.BpmServices
[HSC Logger]  [getLogger]  Initializing Logger for com.syscom.hsc.ecmbpm.exception.ECMBPMException
Mar 22, 2010 10:44:12 PM org.apache.cxf.phase.PhaseInterceptorChain doDefaultLogging
INFO: Application {http://web.hsc.syscom.com/}BPMWebService#{http://web.hsc.syscom.com/}findTaskListUsingLoginCreds has thrown exception, unwinding now: com.syscom.hsc.ecmbpm.exception.ECMBPMException: Unhandled exception
{code}

which looks like it was properly processed. 

Thus, can you try using 2.2.7 instead of 2.2.6?","23/Mar/10 02:58;dkulp;
Note, I AM able to reproduce it with 2.2.6, but not with 2.2.7.  Thus, it looks like this is now fixed with 2.2.7.

","23/Mar/10 03:04;sidpriye;Dan, 

First of all thanks for looking into this. Really appreciate your time.  

That is great news. I think I tried with the 2.2.7-snapshot version that you had released specifically for this issue couple of weeks and it failed. 

Let me try with the stable 2.2.7 version that works for you. 

Also if its ok can you send me list of jars that is in your web-inf/lib. as well any that you may have to endorse. 

I am assuming since you are running of Tomcat, you didnt have to endorse anything that I have to with WAS 6.1","23/Mar/10 03:12;dkulp;
My web-inf/lib probably has too much in it.  I pretty much copied everything from the cxf distro:

{code}

BPMCore.jar                    commons-configuration-1.5.jar       jettison-1.2.jar        serializer-2.7.1.jar              velocity-1.5.jar
ECMBPMCommon.jar               commons-lang-2.4.jar                joda-time-1.6.jar       slf4j-api-1.5.10.jar              velocity-1.6.2.jar
FastInfoset-1.2.7.jar          commons-logging-1.1.1.jar           jra-1.0-alpha-4.jar     slf4j-jdk14-1.5.10.jar            woodstox-core-asl-4.0.7.jar
Jace.jar                       commons-pool-1.5.2.jar              js-1.7R1.jar            spring-beans-2.5.6.jar            wsdl4j-1.6.2.jar
WHICH_JARS                     cxf-bundle-2.2.6.jar                jsr311-api-1.1.jar      spring-context-2.5.6.jar          wss4j-1.5.8.jar
XmlSchema-1.4.5.jar            geronimo-javamail_1.4_spec-1.6.jar  log4j.jar               spring-context-support-2.5.6.jar  xalan-2.7.1.jar
aopalliance-1.0.jar            geronimo-jms_1.1_spec-1.1.1.jar     mina-core-2.0.0-M6.jar  spring-core-2.5.6.jar             xml-resolver-1.2.jar
asm-2.2.3.jar                  geronimo-servlet_2.5_spec-1.2.jar   neethi-2.0.4.jar        spring-jms-2.5.6.jar              xmlbeans-2.4.0.jar
bcprov-jdk15-145.jar           jaxb-impl-2.1.12.jar                opensaml-2.3.0.jar      spring-tx-2.5.6.jar               xmlsec-1.4.3.jar
commons-codec-1.3.jar          jaxb-xjc-2.1.12.jar                 openws-1.3.0.jar        spring-web-2.5.6.jar              xmltooling-1.2.1.jar
commons-collections-3.2.1.jar  jaxen-1.1.jar                       oro-2.0.8.jar           stax2-api-3.0.1.jar

{code}


All I endorsed were:
{code}
serializer-2.7.1.jar  xalan-2.7.1.jar  xercesImpl-2.9.1.jar
{code}
which I still had to do due to the opensaml check that they do.
","23/Mar/10 03:18;sidpriye;Thanks!!! Yup looks like you have everything in there.. Do I need the saaj-api1.3 and saaj-impl1.3.2 jars. I do not see them here on your list. 
I was earlier have to endorsing them on WAS 6.1 to override WAS own SAAJ implementation. 

","23/Mar/10 03:28;dkulp;
You may or may not need them.   I'm using Java6 which has a correct version of SAAJ built into it.   Thus, I didn't need it.   Couple others like activation, stax-api, jaxws-api, etc....  are also part of java6.","23/Mar/10 03:31;sidpriye;I see....Will have to check if WAS 6.1 is JDK6 compliant or not. I know I needed them for IBM JDK 5 which is what I am using currently. 

Thanks again..I am trying the test now. Will keep you posted. ","23/Mar/10 03:38;sidpriye;I got this..Some kind of version mismatch

---- Begin backtrace for Nested Throwables
java.lang.VerifyError: org/w3c/dom/Node.setUserData(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;
	at org.apache.cxf.staxutils.StaxUtils.addLocation(StaxUtils.java:951)
	at org.apache.cxf.staxutils.StaxUtils.startElement(StaxUtils.java:809)
	at org.apache.cxf.staxutils.StaxUtils.readDocElements(StaxUtils.java:878)
	at org.apache.cxf.staxutils.StaxUtils.read(StaxUtils.java:765)
	at org.apache.cxf.wsdl11.WSDLManagerImpl.loadDefinition(WSDLManagerImpl.java:219)
	at org.apache.cxf.wsdl11.WSDLManagerImpl.getDefinition(WSDLManagerImpl.java:179)
	at org.apache.cxf.wsdl11.WSDLServiceFactory.<init>(WSDLServiceFactory.java:91)
	at org.apache.cxf.jaxws.ServiceImpl.initializePorts(ServiceImpl.java:205)
	at org.apache.cxf.jaxws.ServiceImpl.<init>(ServiceImpl.java:148)
	at org.apache.cxf.jaxws.spi.ProviderImpl.createServiceDelegate(ProviderImpl.java:65)
	at javax.xml.ws.Service.<init>(Service.java:36)
	at javax.xml.ws.Service.create(Service.java:116)
	at com.syscom.hsc.security.saml.soap.SpringWSClient.invokeWebService(SpringWSClient.java:42)

I have the stax2-api-3.0.1 and woodstox jars in my web-inf/lib. Not sure if they are JDK 6 compliant only. Do I need to take them out? 

thanks
Sid","23/Mar/10 05:15;sidpriye; The class ""org/w3c/dom/UserDataHandler"" is in xmlbeans-2.0.4.jar. The version mismatch went away when I restarted the server. 

Now I am seeing similar behaviour that I have seen in the past with the original issue. Here are some tests with SAAJ libraries. 

1. Do not endorse the saaj-api and saaj-impl libraries, I get the following error - HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 

2. If I endorse saaj-impl1.3.2 and saaj-api1.3 jars on WAS 6.1, 

I get the following error - 

[Servlet Error]-[com.sun.xml.messaging.saaj.soap.SOAPDocumentImpl]: java.lang.NoClassDefFoundError: com.sun.xml.messaging.saaj.soap.SOAPDocumentImpl
	at com.sun.xml.messaging.saaj.soap.SOAPPartImpl.<init>(SOAPPartImpl.java:119)
	at com.sun.xml.messaging.saaj.soap.ver1_1.Message1_1Impl.getSOAPPart(Message1_1Impl.java:109)
	at org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor.handleMessage(SAAJOutInterceptor.java:119)
	at org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor.handleMessage(SOAPHandlerInterceptor.java:119)

This means WAS 6.1 does not understand SAAJ1.3 libraries since the class is there in the impl jar and endorsed as well (+parent-last classloader)

2. If I endorse saaj-impl and saaj-api.jars (SAAJ1.2 spec)

I get the original error on the service end - 

[3/23/10 1:00:45:097 EDT] 0000001f SystemErr     R   java.lang.IllegalArgumentException: local part cannot be ""null"" when creating a QName
[3/23/10 1:00:45:097 EDT] 0000001f SystemErr     R   	at javax.xml.namespace.QName.<init>(Unknown Source)
[3/23/10 1:00:45:097 EDT] 0000001f SystemErr     R   	at javax.xml.namespace.QName.<init>(Unknown Source)

On the client side I get - 

java.lang.NoSuchMethodError: javax/xml/soap/SOAPFault.setFaultCode(Ljavax/xml/namespace/QName;)V
	at org.apache.cxf.binding.soap.saaj.SAAJInInterceptor.handleMessage(SAAJInInterceptor.java:155)
	at org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl.getMessage(SOAPMessageContextImpl.java:78)
	at org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor.createProtocolMessageContext(SOAPHandlerInterceptor.java:244)

which clearly indicates CXF 2.2.7 requires SAAJ1.3 (which WAS 6.1 does not support.). 

However for the error on the service end - Local Name Cannot be Null...Do you think this is because of the SAAJ1.2 + WAS 6.1 +JDK 1.5 nexus. 

Dan - It appear JDK 1.6 will not find a shelf-life on WAS 6.1. Is it possible to put a patch in CXF to retrofit SAAJ1.2. 

I came across a similar request in this link. 
http://old.nabble.com/CXF-failing-on-Websphere-while-using-Handlers-td16851517.html

thanks
Sid

","23/Mar/10 07:17;sidpriye;Dan,

With the help of this link -

http://cwiki.apache.org/confluence/display/CXF20DOC/Application+Server+Specific+Configuration+Guide

I can now endorse SAAJ1.3.2 libraries on WAS 6.1. The trick is to add the jsr173_api-1.0.jar. So for any one's reference here are the jars
in WAS endorsed directory. Make sure your application and webapp-classloaders are parent-last

saaj-impl-1.3.2.jar
saaj-api-1.3.jar
jsr173_api-1.0.jar
jaxp-ri-1.4.2.jar

Once I got this then I copied CXF2.2.7 jars on both the client app and the server app (both deployed on the same node). Restarted the server and that was it. For anyone who run
into this problem, here are the list of jars I have assembled that gave me a working solution -

Apache Commons Jars:
commons-codec-1.3.jar commons-collections-3.2.1.jar commons-logging-1.1.1.jar commons-pool-1.5.2.jar commons-configuration-1.5.jar
commons-lang-2.4.jar

CXF jars/supporting jars:
geronimo-activation_1.1_spec-1.0.2.jar geronimo-annotation_1.0_spec-1.1.1.jar geronimo-javamail_1.4_spec-1.6.jar
geronimo-jaxws_2.1_spec-1.0.jar geronimo-stax-api_1.0_spec-1.0.1.jar geronimo-ws-metadata_2.0_spec-1.1.2.jar
jaxb-api-2.1.jar jaxb-impl-2.1.12.jar jaxb-xjc-2.1.12.jar
cxf-2.2.7.jar FastInfoset-1.2.7.jar jetty-6.1.21.jar
jetty-util-6.1.21.jar stax2-api-3.0.1.jar velocity-1.6.2.jar
woodstox-core-asl-4.0.7.jar wss4j-1.5.8.jar wstx-asl-3.2.9.jar
xmlbeans-2.4.0.jar xml-resolver-1.2.jar XmlSchema-1.4.5.jar
xmlsec-1.4.3.jar xmltooling-1.2.1.jar

if you are using OpenSAML then you would need:
opensaml-2.3.0.jar
openws-1.3.0.jar
slf4j-api-1.5.10.jar
slf4j-jdk14-1.5.10.jar
velocity-1.6.2.jar
xmlsec-1.4.3.jar
xmltooling-1.2.1.jar

My endorsed library on WAS6.1 (<WAS_ROOT>/java/jre/lib/endorsed) is:

jaxp-ri-1.4.2.jar
jsr173_api-1.0.jar
resolver-2.9.1.jar
saaj-api-1.3.jar
saaj-impl-1.3.2.jar
serializer-2.9.1.jar
wsdl4j-1.6.2.jar
xalan-2.7.1.jar
xercesImpl-2.9.1.jar
xml-apis-2.9.1.jar

Thank you very much for the fix to 2.2.7. Hope to stay in touch!!!

thanks
Sid","23/Mar/10 13:10;sidpriye;Dan, 

I am just curious what was the issue that was causing this and what did you fix. Should I look for this in the release notes. 

thanks
Sid",,,,,,,,,,,,,
Relative schema location import fails on Windows machines,CXF-2724,12459694,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,njiang,wtam,wtam,19/Mar/10 18:44,10/May/10 18:05,14/Mar/19 02:29,22/Mar/10 12:14,,,,,,,,,,,,,,,,,,2.2.8,2.3,,,Resources,,,,0,,,,,,"If I have a WSDL that imports a schema from a relation path such as below, it does not work in Windows.  
{code}
		<xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
			<xsd:import namespace=""urn:RelPath"" schemaLocation=""../schemas/configuration/bar.xsd"">
			</xsd:import>
		</xsd:schema>
{code}

It is because of two issues in org.apache.cxf.resource.URIResolver.

1) URIResolver checks for baseUriStr.startsWith(""file:/"") but Windows file URI could be ""file:C:/foo/bar""

2) URIResolver would include fragment (e.g. #type2) as file path when creates a File object.  This is not showing up as a problem in UNIX machines because ""new URI(baseUriStr)"" is able to parse the baseUriStr correctly.
",Windows XP,,,,,,,,,,,,,,,,19/Mar/10 18:47;wtam;CXF-2724.patch;https://issues.apache.org/jira/secure/attachment/12439313/CXF-2724.patch,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-22 12:14:25.139,,,no_permission,,,,,,,,,,,,,114115,,,Mon Mar 22 12:14:25 UTC 2010,,,,,,0|i0v0zj:,179133,,,,,,,,19/Mar/10 18:47;wtam;Patch attached,22/Mar/10 12:14;njiang;Applied patch into CXF trunk and 2.2.x branch with thanks to William.,,,,,,,,,,,,,,,,,,,,,,,,,
MapType doesn't deserialize subclass instances,CXF-2720,12459468,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,daythryl,daythryl,18/Mar/10 01:11,23/Mar/10 02:59,14/Mar/19 02:29,18/Mar/10 17:16,2.2.6,,,,,,,,,,,,,,,,,2.2.7,,,,Aegis Databinding,,,,0,,,,,,"Given an object of type {{Map<TKey, TValue>}}, where, say, {{TValue}} is a base class extended by {{TValuePrime}}, when a serialized instance contains a value of type {{TValuePrime}}, *MapType* will try to deserialize it as a {{TValue}}, ignoring the fact that it's really an instance of {{TValuePrime}}. In many cases this will throw an exception when trying to _set_ a member that exists only in {{TValuePrime}}.   (We have observed this for the value class, but it should be true of the key class as well).

We have fixed this - as far as we can tell - by swiping code from *ArrayType*, which handles these things correctly.  We're attaching our new version of *MapType.java*.

Lacking a deep understand of the Aegis code, we did this by intuition and trial-and-error, so it may be inefficient or even technically incorrect, but so far it works for us.  Please get this fix, or its functional equivalent, into the codebase.

Thanks in advance.",All,86400,86400,,0%,86400,86400,,,,,,,,,,18/Mar/10 01:15;daythryl;MapType.java;https://issues.apache.org/jira/secure/attachment/12439108/MapType.java,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2010-03-18 17:16:41.444,,,no_permission,,Novice,,,,,,,,,,,114111,,,Thu Mar 18 17:46:29 UTC 2010,,,,,,0|i0a5rj:,57207,,,,,,,,18/Mar/10 17:16;dkulp;Patch applied.   Thanks!,"18/Mar/10 17:46;mbberkowitz@gmail.com;Hey, we’re grateful to you guys for CXF; it’s been a tremendous help to us.  We’re glad to pay back in some small measure.

 

",,,,,,,,,,,,,,,,,,,,,,,,,
minOccurs=0 and nillable=true throws NPE for wrapper element if not specified.,CXF-2719,12459408,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,dkulp,dkulp,17/Mar/10 17:50,23/Mar/10 02:59,14/Mar/19 02:29,17/Mar/10 17:53,2.2.6,,,,,,,,,,,,,,,,,2.2.7,,,,JAXB Databinding,,,,0,,,,,,"See thread:

http://mail-archives.apache.org/mod_mbox/cxf-users/201003.mbox/<27931946.post@talk.nabble.com>",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114110,,,2010-03-17 17:50:29.0,,,,,,0|i0a5rr:,57208,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some Content-Transfer-Encoding values are not supported for multiparts,CXF-2717,12459245,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,sergey_beryozkin,thecoolace,thecoolace,16/Mar/10 08:26,23/Mar/10 02:59,14/Mar/19 02:29,17/Mar/10 14:56,2.2.5,,,,,,,,,,,,,,,,,2.2.7,2.3,,,JAX-RS,,,,0,,,,,,"In the JAX-RS documentation I've read the following:
{quote}
When handling complex multipart/form-data submissions (such as those containing files) MultipartBody (and Attachment) need to be used directly. In simpler cases, when every form part can be captured by String, the following code will suffice :

@POST
@Consumes(""multipart/form-data"")
public void addForm1(@FormParam(""name"") String title, @FormParam(""id"") Long id) throws Exception {
...
{quote}

This is either a bug in CXF or a misleading documentation (at least for slow-minded non-native speaker like me). The big difference between @FormParam and @Multipart is, that @FormParam _always_ expects url-encoded data. So sending ""A+B"" using Multipart in e.g. 8-bit encoding or binary encoding delivers ""A B"" to @FormData annotated Strings but ""A+B"" to @Multipart annotated Strings. 
",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-16 14:07:16.246,,,no_permission,,,,,,,,,,,,,114108,,,Wed Mar 17 14:56:34 UTC 2010,,,,,,0|i0a5rz:,57209,,,,,,,,"16/Mar/10 14:07;sergey_beryozkin;Andreas, I believe it is actually the fact that simple (string) multipart/form-data values were not decoded by default when @Multipart were used which caused you to open the bug issue.

I've updated the code so by default, given 'A+B', you will get 'A B' but the auto decoding (same as when using @FormParam) can be disabled by adding an @Encoded annotation.

Note that it is unlikely @FormParams will ever be used in future JAXRS specs for handling multiparts, there're limited in that one can not specify a content-type of the individual part, etc","16/Mar/10 16:42;thecoolace;I understand that url-encoding is the default for @FormParam, because there is actually no other way for url-encoded-forms to encode parameters. Therefore it makes sense to let FormParam decode the data this way.

But multipart data can be encoded in several ways. The encoding of the multipart part can be read out and the data can be automatically decoded the proper way. What I would expect from CXF is, that it decodes the data the proper way and then just injects it into my parameter without that I have to specify an encoding. Actually I don't want to specify the encoding, because I don't care how the data is transported to me. I want that my function works for multipart data that is encoded as 8bit string as well as quoted-printable (as long as it makes sense), so that the caller of the function just needs to know, that he has to use multipart form-data.

Is this possible?


","16/Mar/10 17:41;sergey_beryozkin;7-bit, 8-bit, base-64 and quoted-printable are not supported","16/Mar/10 17:51;sergey_beryozkin;I've reverted the original change.
","17/Mar/10 13:07;sergey_beryozkin;> 7-bit, 8-bit, base-64 and quoted-printable are not supported

the above comment is wrong. Narrowing down to

'base-64 and quoted-printable'

","17/Mar/10 14:56;sergey_beryozkin;java mail MimeUtility is a bit broken with respect to decoding some quoted-printable encoded sequences (ex, xml version PI) but should work ok in most other cases",,,,,,,,,,,,,,,,,,,,,
JAXRSOutInterceptor throws ClassCastException with ContentTypeOutInterceptor,CXF-2715,12459190,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,,uttam1105,uttam1105,15/Mar/10 21:33,23/Mar/10 02:59,14/Mar/19 02:29,16/Mar/10 11:40,2.2.6,,,,,,,,,,,,,,,,,2.2.7,2.3,,,JAX-RS,,,,0,,,,,,"In my spring xml If I use ContentTypeOutInterceptor with following syntax
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	<jaxrs:server ...>
		...
		<jaxrs:inInterceptors>
			<bean class=""org.apache.cxf.binding.http.interceptor.ContentTypeOutInterceptor""/>
		</jaxrs:inInterceptors>
		...
	</jaxrs:server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Then that results into ClassCastException. The Exception is thrown by following code from serializeMessage method of JAXRSOutInterceptor.java
>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        MultivaluedMap<String, Object> responseHeaders = 
            (MultivaluedMap)message.get(Message.PROTOCOL_HEADERS);
<<<<<<<<<<<<<<<<<<<<<<<<<<<<

It seems the ContentTypeOutInterceptor uses HashMap object to store Message.PROTOCOL_HEADERS value, but JAXRSOutInterceptor expects MultivaluedMap.

My feeling is we should fix ContentTypeOutInterceptor. But as I am new to CXF, I am filing a bug.","Windows XP SP3
jdk1.5.0_15
Tomcat 5.5
Spring 2.5.6",,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-03-16 11:40:28.144,,,no_permission,,,,,,,,,,,,,114107,,,Tue Mar 16 11:40:28 UTC 2010,,,,,,0|i0a5s7:,57210,,,,,,,,"16/Mar/10 11:40;sergey_beryozkin;It's already been fixed on 2.2.7-SNAPSHOT, I think Dan might've fixed it
thanks",,,,,,,,,,,,,,,,,,,,,,,,,,
SupportingToken UsernameToken is always encrypted,CXF-2714,12459119,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,ilavloki,ilavloki,15/Mar/10 09:16,10/May/10 18:05,14/Mar/19 02:29,08/Apr/10 02:51,2.2.6,,,,,,,,,,,,,,,,,2.2.8,,,,WS-* Components,,,,0,,,,,,"If no encryption is specified in the policy file and UsernameToken is used as supporting token, then this token is always encrypted. 
org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder.handleSupportingTokens(SupportingToken, boolean , Map<Token, WSSecBase>) does not check if UsernameToken is an encrypted token and unconditionally adds it to the encryptedTokensIdList. 

This can be easily fixed by modifying line 428 (as per src release 1.4) from 

                    encryptedTokensIdList.add(utBuilder.getId()); 

to 
  
                   if (suppTokens.isEncryptedToken()) { 
                        encryptedTokensIdList.add(utBuilder.getId()); 
                    } 

One more concern about comment that commented in file:
                    //WebLogic and WCF always encrypt these
                    //See:  http://e-docs.bea.com/wls/docs103/webserv_intro/interop.html
Currently WebLogic doesn't encrypt UsernameToken and we got interoperability issue between CXF and WebLogic

Same bug already registered per RAMPART (RAMPART-225)",,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2010-04-08 02:36:48.175,,,no_permission,,,,,,,,,,,,,114106,,,Thu Apr 08 02:36:48 UTC 2010,,,,,,0|i14e0v:,233735,,,,,,,,"08/Apr/10 02:36;dkulp;
If that change is made, we lose interopability with .NET.   I've verified this by running the interop tests with that change and the tests fail.  Interopability with .NET is likely more important than with WebLogic so I'm going to keep the default as is.  However, I'm going to add a config property that can be set to turn this off.

    //WebLogic and WCF always encrypt UsernameTokens whenever possible
    //See:  http://e-docs.bea.com/wls/docs103/webserv_intro/interop.html
    //Be default, we will encrypt as well for interop reasons.  However, this
    //setting can be set to false to turn that off. 
    public static final String ALWAYS_ENCRYPT_UT = ""ws-security.username-token.always.encrypted"";
    ",,,,,,,,,,,,,,,,,,,,,,,,,,
wsdl2js throws NPE,CXF-2713,12459063,Bug,Closed,CXF,CXF,software,dkulp,,http://cxf.apache.org,Major,Fixed,dkulp,pdd,pdd,14/Mar/10 07:25,23/Mar/10 02:59,14/Mar/19 02:29,18/Mar/10 17:16,2.2.6,,,,,,,,,,,,,,,,,2.2.7,,,,Tooling,,,,0,,,,,,"The test wsdl below works with wsdl2java but throws NPE with wsdl2js.

wsdl2js - Apache CXF 2.2.6

WSDLToJS Error : java.lang.NullPointerException

org.apache.cxf.tools.common.ToolException: java.lang.NullPointerException
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:279)
        at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:151)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:103)
        at org.apache.cxf.tools.common.toolspec.ToolRunner.runTool(ToolRunner.java:67)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.run(WSDLToJavaScript.java:60)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScript.main(WSDLToJavaScript.java:97)
Caused by: java.lang.NullPointerException
        at org.apache.ws.commons.schema.XmlSchemaCollection.getTypeByQName(XmlSchemaCollection.java:595)
        at org.apache.cxf.common.xmlschema.SchemaCollection.getTypeByQName(SchemaCollection.java:130)
        at org.apache.cxf.javascript.service.ServiceJavascriptBuilder.getElementsForParts(ServiceJavascriptBuilder.java:746)
        at org.apache.cxf.javascript.service.ServiceJavascriptBuilder.createResponseDeserializer(ServiceJavascriptBuilder.java:522)
        at org.apache.cxf.javascript.service.ServiceJavascriptBuilder.end(ServiceJavascriptBuilder.java:275)
        at org.apache.cxf.service.ServiceModelVisitor.walk(ServiceModelVisitor.java:76)
        at org.apache.cxf.tools.wsdlto.javascript.WSDLToJavaScriptProcessor.process(WSDLToJavaScriptProcessor.java:93)
        at org.apache.cxf.tools.wsdlto.javascript.JavaScriptContainer.execute(JavaScriptContainer.java:144)
        at org.apache.cxf.tools.wsdlto.WSDLToJavaContainer.execute(WSDLToJavaContainer.java:271)
        ... 5 more 


<?xml version=""1.0"" encoding=""UTF-8""?>
<definitions
	xmlns=""http://schemas.xmlsoap.org/wsdl/""
	xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
	xmlns:xsdLocal1=""http://www.sun.com/xml/xyz""
	targetNamespace=""http://www.sun.com/abc/""
	xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/""
	xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
	xmlns:tns=""http://www.sun.com/abc/"">
	<types>
		<xsd:schema
			elementFormDefault=""qualified""
			attributeFormDefault=""unqualified""
			xmlns:xsdLocal1=""http://www.sun.com/xml/xyz""
			targetNamespace=""http://www.sun.com/xml/xyz""
			xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
			<xsd:annotation>
				<xsd:documentation>Test case wsdl</xsd:documentation>
			</xsd:annotation>

			<xsd:element
				name=""element1""
				type=""xsd:string"">
			</xsd:element>
						
		</xsd:schema>

		<xsd:schema
			elementFormDefault=""qualified""
			attributeFormDefault=""unqualified""
			targetNamespace=""http://www.sun.com/abc/""
			xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
			<xsd:import
				namespace=""http://www.sun.com/xml/xyz"">
			</xsd:import>

			<xsd:element name=""Input"">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element
							name=""aaa""
							minOccurs=""0""
							type=""xsd:string"">
						</xsd:element>
						<xsd:element
							ref=""xsdLocal1:element1"">
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>

			<xsd:element name=""Output"">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element
							ref=""xsdLocal1:element1"">
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			
		</xsd:schema>
	
	</types>

	<message name=""Input"">
		<part name=""Input"" element=""tns:Input""></part>
	</message>
	
	<message name=""Output"">
		<part name=""Output"" element=""tns:Output""></part>
	</message>

	<portType name=""Operation1WSPort"">
		<operation name=""Operation1"">
			<input message=""tns:Input""></input>
			<output message=""tns:Output""></output>
		</operation>
	</portType>

	<binding
		name=""Operation1WSPort""
		type=""tns:Operation1WSPort"">
		<soap:binding
			transport=""http://schemas.xmlsoap.org/soap/http""
			style=""document"">
		</soap:binding>
		<operation name=""Operation1"">
			<soap:operation 
				soapAction=""document/http://www.sun.com/abc/:Operation1"">
			</soap:operation>
			<input><soap:body use=""literal""></soap:body></input>
			<output><soap:body use=""literal""></soap:body></output>
		</operation>
	</binding>
	
	<service name=""Operation1WS"">
		<port binding=""tns:Operation1WSPort"" name=""Operation1WSPort"">
			<soap:address 
				location=""http://localhost:8080/test"">
			</soap:address>
		</port>
	</service>

</definitions>
",any,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,no_permission,,,,,,,,,,,,,114105,,,2010-03-14 07:25:29.0,,,,,,0|i0a5sf:,57211,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
